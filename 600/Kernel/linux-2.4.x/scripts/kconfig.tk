#!/usr/bin/wish -f
# FILE: header.tk
# This file is boilerplate TCL/TK function definitions for 'make xconfig'.
#
# CHANGES
# =======
#
# 8 January 1999, Michael Elizabeth Chastain, <mec@shout.net>
# - Remove unused do_cmd function (part of the 2.0 sound support).
# - Arrange buttons in three columns for better screen fitting.
# - Add CONSTANT_Y, CONSTANT_M, CONSTANT_N for commands like:
#     dep_tristate 'foo' CONFIG_FOO m
#
# 23 January 1999, Michael Elizabeth Chastain, <mec@shout.net>
# - Shut vfix the hell up.
#
# 24 January 1999, Michael Elizabeth Chastain, <mec@shout.net>
# - Improve the exit message (Jeff Ronne).

#
# This is a handy replacement for ".widget cget" that requires neither tk4
# nor additional source code uglification.
#
proc cget { w option } {
	return "[lindex [$w configure $option] 4]"
}

#
# Function to compensate for broken config.in scripts like the sound driver,
# which make dependencies on variables that are never even conditionally
# defined.
#
proc vfix { var } {
	global $var
	if [ catch {eval concat $$var} ] {
		set $var 4
	}
}

#
# Constant values used by certain dep_tristate commands.
#
set CONSTANT_Y 1
set CONSTANT_M 2
set CONSTANT_N 0
set CONSTANT_E 4

#
# Create a "reference" object to steal colors from.
#
button .ref

#
# On monochrome displays, -disabledforeground is blank by default; that's
# bad.  Fill it with -foreground instead.
#
if { [cget .ref -disabledforeground] == "" } {
	.ref configure -disabledforeground [cget .ref -foreground]
}


#
# Define some macros we will need to parse the config.in file.
#

proc mainmenu_name { text } {
	wm title . "$text"
}

proc menu_option { w menu_num text } {
	global menus_per_column
	global processed_top_level
	set processed_top_level [expr $processed_top_level + 1]
	if { $processed_top_level <= $menus_per_column } then {
	    set myframe left
	} elseif { $processed_top_level <= [expr 2 * $menus_per_column] } then {
	    set myframe middle
	} else {
	    set myframe right
	} 
	button .f0.x$menu_num -anchor w -text "$text" \
	    -command "$w .$w \"$text\""
	pack .f0.x$menu_num -pady 0 -side top -fill x -in .f0.$myframe
}

proc load_configfile { w title func } {
	catch {destroy $w}
	toplevel $w -class Dialog
	global loadfile
	frame $w.x
	label $w.bm -bitmap questhead
	pack  $w.bm -pady 10 -side top -padx 10
	label $w.x.l -text "Enter filename:" -relief raised
	entry $w.x.x -width 35 -relief sunken -borderwidth 2 \
		-textvariable loadfile
	pack $w.x.l $w.x.x -anchor w -side left
	pack $w.x -side top -pady 10
	wm title $w "$title" 

	set oldFocus [focus]
	frame $w.f
	button $w.f.back -text "OK" -width 20 \
		-command "destroy $w; focus $oldFocus;$func .fileio"
	button $w.f.canc -text "Cancel" \
		-width 20 -command "destroy $w; focus $oldFocus"
	pack $w.f.back $w.f.canc -side left -pady 10 -padx 45
	pack $w.f -pady 10 -side bottom -padx 10 -anchor w
	focus $w
	global winx; global winy
	set winx [expr [winfo x .]+30]; set winy [expr [winfo y .]+30]
	wm geometry $w +$winx+$winy
}

bind all <Alt-q> {maybe_exit .maybe}

proc maybe_exit { w } {
	catch {destroy $w}
	toplevel $w -class Dialog
	label $w.bm -bitmap questhead
	pack  $w.bm -pady 10 -side top -padx 10
	message $w.m -width 400 -aspect 300 \
		-text "Changes will be lost.  Are you sure?" -relief flat
	pack  $w.m -pady 10 -side top -padx 10
	wm title $w "Are you sure?" 

	set oldFocus [focus]
	frame $w.f
	button $w.f.back -text "OK" -width 20 \
		-command "exit"
	button $w.f.canc -text "Cancel" \
		-width 20 -command "destroy $w; focus $oldFocus"
	pack $w.f.back $w.f.canc -side left -pady 10 -padx 45
	pack $w.f -pady 10 -side bottom -padx 10 -anchor w
  	bind $w <Return> "exit"
    	bind $w <Escape> "destroy $w; focus $oldFocus"
	focus $w
	global winx; global winy
	set winx [expr [winfo x .]+30]; set winy [expr [winfo y .]+30]
	wm geometry $w +$winx+$winy
}

proc read_config_file { w } {
	global loadfile
	if { [string length $loadfile] != 0 && [file readable $loadfile] == 1 } then {
		read_config $loadfile
	} else {
		catch {destroy $w}
		toplevel $w -class Dialog
		message $w.m -width 400 -aspect 300 -text \
			"Unable to read file $loadfile" \
			 -relief raised 
		label $w.bm -bitmap error
		pack $w.bm $w.m -pady 10 -side top -padx 10
		wm title $w "Xconfig Internal Error" 

		set oldFocus [focus]
		frame $w.f
		button $w.f.back -text "Bummer" \
			-width 10 -command "destroy $w; focus $oldFocus"
		pack $w.f.back -side bottom -pady 10 -anchor s
		pack $w.f -pady 10 -side top -padx 10 -anchor s
		focus $w
		global winx; global winy
		set winx [expr [winfo x .]+30]; set winy [expr [winfo y .]+30]
		wm geometry $w +$winx+$winy
	}
}

proc write_config_file  { w } {
	global loadfile
	if { [string length $loadfile] != 0 
    		&& ([file writable $loadfile] == 1 || ([file exists $loadfile] == 0 && [file writable [file dirname $loadfile]] == 1)) } then {
		writeconfig $loadfile /dev/null
	} else {
		catch {destroy $w}
		toplevel $w -class Dialog
		message $w.m -width 400 -aspect 300 -text \
			"Unable to write file $loadfile" \
			 -relief raised 
		label $w.bm -bitmap error
		pack $w.bm $w.m -pady 10 -side top -padx 10
		wm title $w "Xconfig Internal Error" 

		set oldFocus [focus]
		frame $w.f
		button $w.f.back -text "OK" \
			-width 10 -command "destroy $w; focus $oldFocus"
		pack $w.f.back -side bottom -pady 10 -anchor s
		pack $w.f -pady 10 -side top -padx 10 -anchor s
		focus $w
		global winx; global winy
		set winx [expr [winfo x .]+30]; set winy [expr [winfo y .]+30]
		wm geometry $w +$winx+$winy
	}
}

proc read_config { filename } {
	set file1 [open $filename r]
	clear_choices
	while { [gets $file1 line] >= 0} {
		if [regexp {([0-9A-Za-z_]+)=([ynm])} $line foo var value] {
			if { $value == "y" } then { set cmd "global $var; set $var 1" }
			if { $value == "n" } then { set cmd "global $var; set $var 0" }
			if { $value == "m" } then { set cmd "global $var; set $var 2" }
			eval $cmd
		}
		if [regexp {# ([0-9A-Za-z_]+) is not set} $line foo var] {
			set cmd "global $var; set $var 0"
			eval $cmd
		}
		if [regexp {([0-9A-Za-z_]+)=([0-9A-Fa-f]+)} $line foo var value] {
			set cmd "global $var; set $var $value"
			eval $cmd
		}
		if [regexp {([0-9A-Za-z_]+)="([^"]*)"} $line foo var value] {
			set cmd "global $var; set $var \"$value\""
			eval $cmd
		}
	}
	close $file1
	update_choices
	update_mainmenu
}
proc write_comment { file1 file2 text } {
    	puts $file1 ""
	puts $file1 "#"
	puts $file1 "# $text"
	puts $file1 "#"
	puts $file2 "/*"
	puts $file2 " * $text"
	puts $file2 " */"
}

proc effective_dep { deplist } {
	global CONFIG_MODULES
	set depend 1
	foreach i $deplist {
		if {$i == 0} then {set depend 0}
		if {$i == 2 && $depend == 1} then {set depend 2}
	}
	if {$depend == 2 && $CONFIG_MODULES == 0} then {set depend 0}
	return $depend
}

proc sync_tristate { var dep } {
	global CONFIG_MODULES
	if {$dep == 0 && ($var == 1 || $var == 2)} then {
		set var 0
	} elseif {$dep == 2 && $var == 1} then {
		set var 2
	} elseif {$var == 2 && $CONFIG_MODULES == 0} then {
		if {$dep == 1} then {set var 1} else {set var 0}
	}
	return $var
}

proc sync_bool { var dep modset } {
	set var [sync_tristate $var $dep]
	if {$dep == 2 && $var == 2} then {
		set var $modset
	}
	return $var
}

proc write_tristate { file1 file2 varname variable deplist modset } {
	set variable [sync_tristate $variable [effective_dep $deplist]]
	if { $variable == 2 } \
		then { set variable $modset }
	if { $variable == 1 } \
		then { puts $file1 "$varname=y"; \
		       puts $file2 "#define $varname 1" } \
	elseif { $variable == 2 } \
		then { puts $file1 "$varname=m"; \
		       puts $file2 "#undef  $varname"; \
		       puts $file2 "#define ${varname}_MODULE 1" } \
	elseif { $variable == 0 } \
		then { puts $file1 "# $varname is not set"; \
		       puts $file2 "#undef  $varname"} \
	else { \
	    puts stdout "ERROR - Attempting to write value for unconfigured variable ($varname)." \
	}
}

proc write_int { file1 file2 varname variable dep } {
	if { $dep == 0 } \
		then { puts $file1 "# $varname is not set"; \
		       puts $file2 "#undef  $varname"} \
	else {
		puts $file1 "$varname=$variable"; \
		puts $file2 "#define $varname ($variable)"; \
	}
}

proc write_hex { file1 file2 varname variable dep } {
	if { $dep == 0 } \
		then { puts $file1 "# $varname is not set"; \
		       puts $file2 "#undef  $varname"} \
	else {
		puts $file1 "$varname=$variable"; \
		puts -nonewline $file2 "#define $varname 0x"; \
		puts $file2 [exec echo $variable | sed s/^0\[xX\]//]; \
	}
}

proc write_string { file1 file2 varname variable dep } {
	if { $dep == 0 } \
		then { puts $file1 "# $varname is not set"; \
		       puts $file2 "#undef  $varname"} \
	else {
		puts $file1 "$varname=\"$variable\""; \
		puts $file2 "#define $varname \"$variable\""; \
	}
}

proc option_name {w mnum line text helpidx} {
	button $w.x$line.l -text "$text" -relief groove -anchor w
	$w.x$line.l configure -activefore [cget $w.x$line.l -fg] \
				-activeback [cget $w.x$line.l -bg]
	button $w.x$line.help -text "Help" -relief raised \
		-command "dohelp .dohelp $helpidx .menu$mnum"
	pack $w.x$line.help -side right -fill y
	pack $w.x$line.l -side right -fill both -expand on
}

proc toggle_switch2 {w mnum line text variable} {
	frame $w.x$line -relief sunken
	radiobutton $w.x$line.y -text "y" -variable $variable -value 1 \
		-relief groove -width 2 -command "update_active"
	radiobutton $w.x$line.m -text "-"  -variable $variable -value 2 \
		-relief groove -width 2 -command "update_active"
	radiobutton $w.x$line.n -text "n"  -variable $variable -value 0 \
		-relief groove -width 2 -command "update_active"

	option_name $w $mnum $line $text $variable

	pack $w.x$line.n $w.x$line.m $w.x$line.y -side right -fill y
}

proc toggle_switch3 {w mnum line text variable} {
	frame $w.x$line -relief sunken
	radiobutton $w.x$line.y -text "y" -variable $variable -value 1 \
		-relief groove -width 2 -command "update_active"
	radiobutton $w.x$line.m -text "m"  -variable $variable -value 2 \
		-relief groove -width 2 -command "update_active"
	radiobutton $w.x$line.n -text "n"  -variable $variable -value 0 \
		-relief groove -width 2 -command "update_active"

	option_name $w $mnum $line $text $variable

	global CONFIG_MODULES
	if {($CONFIG_MODULES == 0)} then {
		$w.x$line.m configure -state disabled
	}
	pack $w.x$line.n $w.x$line.m $w.x$line.y -side right -fill y
}

proc bool {w mnum line text variable} {
	toggle_switch2 $w $mnum $line $text $variable
	$w.x$line.m configure -state disabled
	pack $w.x$line -anchor w -fill both -expand on
}

proc tristate {w mnum line text variable } {
	toggle_switch3 $w $mnum $line $text $variable
	pack $w.x$line -anchor w -fill both -expand on
}

proc dep_tristate {w mnum line text variable } {
	tristate $w $mnum $line $text $variable
}

proc dep_bool {w mnum line text variable } {
	bool $w $mnum $line $text $variable
}

proc int { w mnum line text variable } {
	frame $w.x$line
	entry $w.x$line.x -width 18 -relief sunken -borderwidth 2 \
		-textvariable $variable
	option_name $w $mnum $line $text $variable
	pack $w.x$line.x -anchor w -side right -fill y
	pack $w.x$line -anchor w -fill both -expand on
}

proc hex { w mnum line text variable } {
	int $w $mnum $line $text $variable
}

proc istring { w mnum line text variable } {
	frame $w.x$line
	entry $w.x$line.x -width 18 -relief sunken -borderwidth 2 \
		-textvariable $variable
	option_name $w $mnum $line $text $variable
	pack $w.x$line.x -anchor w -side right -fill y
	pack $w.x$line -anchor w -fill both -expand on
}

proc minimenu { w mnum line text variable helpidx } {
	frame $w.x$line
	menubutton $w.x$line.x -textvariable $variable -menu \
		$w.x$line.x.menu -relief raised \
		-anchor w
	option_name $w $mnum $line $text $helpidx
	pack $w.x$line.x -anchor w -side right -fill y
	pack $w.x$line -anchor w -fill both -expand on
}

proc menusplit {w m n} {
	if { $n > 2 } then {
		update idletasks
		set menuoptsize [expr [$m yposition 2] - [$m yposition 1]]   
		set maxsize [winfo screenheight $w]
		set splitpoint [expr $maxsize * 4 / 5 / $menuoptsize - 1]
		for {set i [expr $splitpoint + 1]} {$i <= $n} {incr i $splitpoint} {
			$m entryconfigure $i -columnbreak 1
		}
	}
}

proc menutitle {text menu w} {
	wm title $w "$text"
}

proc submenu { w mnum line text subnum } {
	frame $w.x$line
	button $w.x$line.l -text "" -width 15 -relief groove
	$w.x$line.l configure -activefore [cget $w.x$line.l -fg] \
		-activeback [cget $w.x$line.l -bg] -state disabled
	button $w.x$line.m -text "$text" -relief raised -anchor w \
		-command "catch {destroy .menu$subnum}; menu$subnum .menu$subnum \"$text\""
	pack $w.x$line.l -side left -fill both
	pack $w.x$line.m -anchor w -side right -fill both -expand on
	pack $w.x$line -anchor w -fill both -expand on
}

proc comment {w mnum line text } {
	frame $w.x$line
	button $w.x$line.l -text "" -width 15 -relief groove
	$w.x$line.l configure -activefore [cget $w.x$line.l -fg] \
		-activeback [cget $w.x$line.l -bg] -state disabled
	button $w.x$line.m -text "$text" -relief groove -anchor w
	$w.x$line.m configure -activefore [cget $w.x$line.m -fg] \
		-activeback [cget $w.x$line.m -bg]
	pack $w.x$line.l -side left -fill both
	pack $w.x$line.m -anchor w -side right -fill both -expand on
	pack $w.x$line -anchor w -fill both -expand on
}

proc dohelp {w var parent}  {
	catch {destroy $w}
	toplevel $w -class Dialog

	set filefound 0
	set found 0
	set lineno 0

	if { [file readable Documentation/Configure.help] == 1} then {
		set filefound 1
		# First escape sed regexp special characters in var:
		set var [exec echo "$var" | sed s/\[\]\[\/.^$*\]/\\\\&/g]
		# Now pick out right help text:
		set message [exec sed -n "
			/^$var\[ 	\]*\$/,\${
				/^$var\[ 	\]*\$/c\\
${var}:\\

				/^#/b
				/^\[^ 	\]/q
				s/^  //
				/<file:\\(\[^>\]*\\)>/s//\\1/g
				p
			}
			" Documentation/Configure.help]
		set found [expr [string length "$message"] > 0]
	}

	frame $w.f1
	pack $w.f1 -fill both -expand on

	# Do the OK button
	#
	set oldFocus [focus]
	frame $w.f2
	button $w.f2.ok -text "OK" \
		-width 10 -command "destroy $w; catch {focus $oldFocus}"
	pack $w.f2.ok -side bottom -pady 6 -anchor n
	pack $w.f2 -side bottom -padx 10 -anchor s

	scrollbar $w.f1.vscroll -command "$w.f1.canvas yview"
	pack $w.f1.vscroll -side right -fill y

	canvas $w.f1.canvas -relief flat -borderwidth 0 \
		-yscrollcommand "$w.f1.vscroll set"
	frame $w.f1.f
	pack $w.f1.canvas -side right -fill y -expand on

	if { $found == 0 } then {
		if { $filefound == 0 } then {
		message $w.f1.f.m -width 750 -aspect 300 -relief flat -text \
			"No help available - unable to open file Documentation/Configure.help.  This file should have come with your kernel."
		} else {
		message $w.f1.f.m -width 400 -aspect 300 -relief flat -text \
			"No help available for $var"
		}
		label $w.f1.bm -bitmap error
		wm title $w "RTFM"
	} else {
		text $w.f1.f.m -width 73 -relief flat -wrap word
		$w.f1.f.m insert 0.0 $message
		$w.f1.f.m conf -state disabled -height [$w.f1.f.m index end]

		label $w.f1.bm -bitmap info
		wm title $w "Configuration help" 
	}
	pack $w.f1.f.m -side left
	pack $w.f1.bm $w.f1.f -side left -padx 10

	focus $w
	set winx [expr [winfo x $parent]+20]
	set winy [expr [winfo y $parent]+20]
	wm geometry $w +$winx+$winy
	set sizok [expr [winfo reqheight $w.f2.ok] + 12]
	set maxy [expr [winfo screenheight .] * 3 / 4]
	set canvtotal [winfo reqheight $w.f1.f.m]
	if [expr $sizok + $canvtotal < $maxy] {
		set sizy $canvtotal
	} else {
		set sizy [expr $maxy - $sizok]
	}
	$w.f1.canvas configure -height $sizy -width [winfo reqwidth $w.f1.f.m] \
		-scrollregion "0 0 [winfo reqwidth $w.f1.f.m] \
			[winfo reqheight $w.f1.f.m]"
	$w.f1.canvas create window 0 0 -anchor nw -window $w.f1.f
	update idletasks

	set maxy [winfo screenheight .]
	if [expr $sizok + $canvtotal < $maxy] {
		set sizy [expr $sizok + $canvtotal]
	} else {
		set sizy $maxy
	}
	wm maxsize $w [winfo width $w] $sizy
}

bind all <Alt-s> { catch {exec cp -f .config .config.old}; \
		writeconfig .config include/linux/autoconf.h; wrapup .wrap }

proc wrapup {w }  {
	catch {destroy $w}
	toplevel $w -class Dialog

	global CONFIG_MODVERSIONS; vfix CONFIG_MODVERSIONS
	if { ([file exists .hdepend] != 1) || ($CONFIG_MODVERSIONS == 1) } then {
	    message $w.m -width 400 -aspect 300 -relief raised -text \
		"End of Linux kernel configuration.  Check the top-level Makefile for additional configuration.  Next, you must run 'make dep'."
	} else {
	    message $w.m -width 400 -aspect 300 -relief raised -text \
		"End of Linux kernel configuration.  Check the top-level Makefile for additional configuration.  Next, you may 'make bzImage', 'make bzdisk', or 'make bzlilo.'"
	}
	label $w.bm -bitmap info
	pack $w.bm $w.m -pady 10 -side top -padx 10
	wm title $w "Kernel build instructions" 

	set oldFocus [focus]
	frame $w.f
	button $w.f.back -text "OK" \
		-width 10 -command "exit"
	pack $w.f.back -side bottom -pady 10 -anchor s
	pack $w.f -pady 10 -side top -padx 10 -anchor s
	focus $w
        bind $w <Return> "exit"
	global winx; global winy
	set winx [expr [winfo x .]+30]; set winy [expr [winfo y .]+30]
	wm geometry $w +$winx+$winy

}

proc unregister_active {num} {
	global active_menus
	set index [lsearch -exact $active_menus $num]
	if {$index != -1} then {set active_menus [lreplace $active_menus $index $index]}
}

proc update_active {} {
	global active_menus total_menus
	set max 0
	if {[llength $active_menus] > 0} then {
		set max [lindex $active_menus end]
		update_define [toplevel_menu [lindex $active_menus 0]] $max 0
	}
	foreach i $active_menus {
		if {[winfo exists .menu$i] == 0} then {
			unregister_active $i
		} else {
			update_menu$i
		}
	}
	update_define [expr $max + 1] $total_menus 1
	update_mainmenu
}

proc configure_entry {w option items} {
	foreach i $items {
		$w.$i configure -state $option
	}
}

proc validate_int {name val default} {
	if {([exec echo $val | sed s/^-//g | tr -d \[:digit:\] ] != "")} then {
		global $name; set $name $default
	}
}

proc validate_hex {name val default} {
	if {([exec echo $val | tr -d \[:xdigit:\] ] != "")} then {
		global $name; set $name $default
	}
}

proc update_define {first last allow_update} {
	for {set i $first} {$i <= $last} {incr i} {
		update_define_menu$i
		if {$allow_update == 1} then update
	}
}

#
# Next set up the particulars for the top level menu, and define a few
# buttons which we will stick down at the bottom.
#

frame .f0 
frame .f0.left
frame .f0.middle
frame .f0.right

set active_menus [list]
set processed_top_level 0
set menus_per_column 12
set total_menus 85

proc toplevel_menu {num} {
	if {$num == 4} then {return 3}
	if {$num == 5} then {return 3}
	if {$num == 6} then {return 3}
	if {$num == 7} then {return 3}
	if {$num == 8} then {return 3}
	if {$num == 9} then {return 3}
	if {$num == 10} then {return 3}
	if {$num == 11} then {return 3}
	if {$num == 12} then {return 3}
	if {$num == 13} then {return 3}
	if {$num == 15} then {return 14}
	if {$num == 18} then {return 17}
	if {$num == 19} then {return 17}
	if {$num == 20} then {return 17}
	if {$num == 21} then {return 17}
	if {$num == 27} then {return 26}
	if {$num == 28} then {return 26}
	if {$num == 29} then {return 26}
	if {$num == 30} then {return 26}
	if {$num == 31} then {return 26}
	if {$num == 32} then {return 26}
	if {$num == 33} then {return 26}
	if {$num == 35} then {return 34}
	if {$num == 36} then {return 34}
	if {$num == 37} then {return 34}
	if {$num == 38} then {return 34}
	if {$num == 39} then {return 34}
	if {$num == 40} then {return 34}
	if {$num == 41} then {return 34}
	if {$num == 43} then {return 42}
	if {$num == 45} then {return 44}
	if {$num == 47} then {return 46}
	if {$num == 49} then {return 48}
	if {$num == 50} then {return 48}
	if {$num == 54} then {return 53}
	if {$num == 55} then {return 53}
	if {$num == 56} then {return 53}
	if {$num == 59} then {return 58}
	if {$num == 60} then {return 58}
	if {$num == 61} then {return 58}
	if {$num == 62} then {return 58}
	if {$num == 63} then {return 58}
	if {$num == 64} then {return 58}
	if {$num == 65} then {return 58}
	if {$num == 66} then {return 58}
	if {$num == 68} then {return 67}
	if {$num == 69} then {return 67}
	if {$num == 71} then {return 70}
	if {$num == 72} then {return 70}
	if {$num == 73} then {return 70}
	if {$num == 75} then {return 74}
	if {$num == 79} then {return 78}
	if {$num == 80} then {return 78}
	if {$num == 82} then {return 81}
	return $num
}

mainmenu_name "ARM Linux Kernel Configuration"
menu_option menu1 1 "Code maturity level options"
proc menu1 {w title} {
	set oldFocus [focus]
	catch {destroy $w; unregister_active 1}
	toplevel $w -class Dialog
	wm withdraw $w
	global active_menus
	set active_menus [lsort -integer [linsert $active_menus end 1]]
	message $w.m -width 400 -aspect 300 -text \
		"Code maturity level options"  -relief raised
	pack $w.m -pady 10 -side top -padx 10
	wm title $w "Code maturity level options" 

	bind $w <Escape> "catch {focus $oldFocus}; destroy $w; unregister_active 1; break"
	set nextscript "catch {focus $oldFocus}; destroy $w; unregister_active 1; menu2 .menu2 \"$title\""
	frame $w.f
	button $w.f.back -text "Main Menu" \
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 1"
	button $w.f.next -text "Next" -underline 0\
		-width 15 -command $nextscript
	bind all <Alt-n> $nextscript
	button $w.f.prev -text "Prev" -underline 0\
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 1; menu0 .menu0 \"$title\""
	$w.f.prev configure -state disabled
	pack $w.f.back $w.f.next $w.f.prev -side left -expand on
	pack $w.f -pady 10 -side bottom -anchor w -fill x
	frame $w.topline -relief ridge -borderwidth 2 -height 2
	pack $w.topline -side top -fill x

	frame $w.botline -relief ridge -borderwidth 2 -height 2
	pack $w.botline -side bottom -fill x

	frame $w.config
	pack $w.config -fill y -expand on

	scrollbar $w.config.vscroll -command "$w.config.canvas yview"
	pack $w.config.vscroll -side right -fill y

	canvas $w.config.canvas -height 1\
		-relief flat -borderwidth 0 -yscrollcommand "$w.config.vscroll set" \
		-width [expr [winfo screenwidth .] * 1 / 2] 
	frame $w.config.f
	bind $w <Key-Down> "$w.config.canvas yview scroll  1 unit;break;"
	bind $w <Key-Up> "$w.config.canvas yview scroll  -1 unit;break;"
	bind $w <Key-Next> "$w.config.canvas yview scroll  1 page;break;"
	bind $w <Key-Prior> "$w.config.canvas yview scroll  -1 page;break;"
	bind $w <Key-Home> "$w.config.canvas yview moveto 0;break;"
	bind $w <Key-End> "$w.config.canvas yview moveto 1 ;break;"
	pack $w.config.canvas -side right -fill y


	bool $w.config.f 1 0 "Prompt for development and/or incomplete code/drivers" CONFIG_EXPERIMENTAL
	bool $w.config.f 1 1 "Prompt for advanced kernel configuration options" CONFIG_ADVANCED_OPTIONS
	bool $w.config.f 1 2 "Prompt for obsolete code/drivers" CONFIG_OBSOLETE



	focus $w
	update_active
	global winx; global winy
	set winx [expr [winfo x .]+30]; set winy [expr [winfo y .]+30]
	if {[winfo exists $w]} then {wm geometry $w +$winx+$winy}
	update idletasks
	if {[winfo exists $w]} then  {$w.config.canvas create window 0 0 -anchor nw -window $w.config.f

	$w.config.canvas configure \
		-width [expr [winfo reqwidth $w.config.f] + 1]\
		-scrollregion "-1 -1 [expr [winfo reqwidth $w.config.f] + 1] \
			 [expr [winfo reqheight $w.config.f] + 1]"

	set winy [expr [winfo reqh $w] - [winfo reqh $w.config.canvas]]
	set scry [expr [winfo screenh $w] / 2]
	set maxy [expr [winfo screenh $w] * 3 / 4]
	set canvtotal [expr [winfo reqh $w.config.f] + 2]
	if [expr $winy + $canvtotal < $maxy] {
		$w.config.canvas configure -height $canvtotal
	} else {
		$w.config.canvas configure -height [expr $scry - $winy]
		}
	}
	update idletasks
	if {[winfo exists $w]} then {
	wm maxsize $w [winfo width $w] [winfo screenheight $w]
	wm minsize $w [winfo width $w] 100

	wm deiconify $w
}
}

proc update_menu1 {} {
}


proc update_define_menu1 {} {
	update_define_mainmenu
	global CONFIG_MODULES
}


menu_option menu2 2 "Loadable module support"
proc menu2 {w title} {
	set oldFocus [focus]
	catch {destroy $w; unregister_active 2}
	toplevel $w -class Dialog
	wm withdraw $w
	global active_menus
	set active_menus [lsort -integer [linsert $active_menus end 2]]
	message $w.m -width 400 -aspect 300 -text \
		"Loadable module support"  -relief raised
	pack $w.m -pady 10 -side top -padx 10
	wm title $w "Loadable module support" 

	bind $w <Escape> "catch {focus $oldFocus}; destroy $w; unregister_active 2; break"
	set nextscript "catch {focus $oldFocus}; destroy $w; unregister_active 2; menu3 .menu3 \"$title\""
	frame $w.f
	button $w.f.back -text "Main Menu" \
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 2"
	button $w.f.next -text "Next" -underline 0\
		-width 15 -command $nextscript
	bind all <Alt-n> $nextscript
	button $w.f.prev -text "Prev" -underline 0\
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 2; menu1 .menu1 \"$title\""
	bind $w <Alt-p> "catch {focus $oldFocus}; destroy $w; unregister_active 2; menu1 .menu1 \"$title\";break"
	pack $w.f.back $w.f.next $w.f.prev -side left -expand on
	pack $w.f -pady 10 -side bottom -anchor w -fill x
	frame $w.topline -relief ridge -borderwidth 2 -height 2
	pack $w.topline -side top -fill x

	frame $w.botline -relief ridge -borderwidth 2 -height 2
	pack $w.botline -side bottom -fill x

	frame $w.config
	pack $w.config -fill y -expand on

	scrollbar $w.config.vscroll -command "$w.config.canvas yview"
	pack $w.config.vscroll -side right -fill y

	canvas $w.config.canvas -height 1\
		-relief flat -borderwidth 0 -yscrollcommand "$w.config.vscroll set" \
		-width [expr [winfo screenwidth .] * 1 / 2] 
	frame $w.config.f
	bind $w <Key-Down> "$w.config.canvas yview scroll  1 unit;break;"
	bind $w <Key-Up> "$w.config.canvas yview scroll  -1 unit;break;"
	bind $w <Key-Next> "$w.config.canvas yview scroll  1 page;break;"
	bind $w <Key-Prior> "$w.config.canvas yview scroll  -1 page;break;"
	bind $w <Key-Home> "$w.config.canvas yview moveto 0;break;"
	bind $w <Key-End> "$w.config.canvas yview moveto 1 ;break;"
	pack $w.config.canvas -side right -fill y


	bool $w.config.f 2 0 "Enable loadable module support" CONFIG_MODULES
	dep_bool $w.config.f 2 1 "  Set version information on all module symbols" CONFIG_MODVERSIONS
	dep_bool $w.config.f 2 2 "  Kernel module loader" CONFIG_KMOD



	focus $w
	update_active
	global winx; global winy
	set winx [expr [winfo x .]+30]; set winy [expr [winfo y .]+30]
	if {[winfo exists $w]} then {wm geometry $w +$winx+$winy}
	update idletasks
	if {[winfo exists $w]} then  {$w.config.canvas create window 0 0 -anchor nw -window $w.config.f

	$w.config.canvas configure \
		-width [expr [winfo reqwidth $w.config.f] + 1]\
		-scrollregion "-1 -1 [expr [winfo reqwidth $w.config.f] + 1] \
			 [expr [winfo reqheight $w.config.f] + 1]"

	set winy [expr [winfo reqh $w] - [winfo reqh $w.config.canvas]]
	set scry [expr [winfo screenh $w] / 2]
	set maxy [expr [winfo screenh $w] * 3 / 4]
	set canvtotal [expr [winfo reqh $w.config.f] + 2]
	if [expr $winy + $canvtotal < $maxy] {
		$w.config.canvas configure -height $canvtotal
	} else {
		$w.config.canvas configure -height [expr $scry - $winy]
		}
	}
	update idletasks
	if {[winfo exists $w]} then {
	wm maxsize $w [winfo width $w] [winfo screenheight $w]
	wm minsize $w [winfo width $w] 100

	wm deiconify $w
}
}

proc update_menu2 {} {
	global CONFIG_MODULES
	global CONFIG_MODVERSIONS
	if {($CONFIG_MODULES == 1 || $CONFIG_MODULES == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_MODULES]];set CONFIG_MODVERSIONS [sync_bool $CONFIG_MODVERSIONS $tmpvar_dep 0];if {$tmpvar_dep != 1} then {configure_entry .menu2.config.f.x1 disabled {y};} else {configure_entry .menu2.config.f.x1 normal {y};}; configure_entry .menu2.config.f.x1 normal {n l}} else {configure_entry .menu2.config.f.x1 disabled {y n l}}
	global CONFIG_KMOD
	if {($CONFIG_MODULES == 1 || $CONFIG_MODULES == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_MODULES]];set CONFIG_KMOD [sync_bool $CONFIG_KMOD $tmpvar_dep 0];if {$tmpvar_dep != 1} then {configure_entry .menu2.config.f.x2 disabled {y};} else {configure_entry .menu2.config.f.x2 normal {y};}; configure_entry .menu2.config.f.x2 normal {n l}} else {configure_entry .menu2.config.f.x2 disabled {y n l}}
}


proc update_define_menu2 {} {
	update_define_mainmenu
	global CONFIG_MODULES
	global CONFIG_MODVERSIONS
	if {($CONFIG_MODULES == 1 || $CONFIG_MODULES == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_MODULES]];set CONFIG_MODVERSIONS [sync_bool $CONFIG_MODVERSIONS $tmpvar_dep 0];set CONFIG_MODVERSIONS [expr $CONFIG_MODVERSIONS&15]}
	global CONFIG_KMOD
	if {($CONFIG_MODULES == 1 || $CONFIG_MODULES == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_MODULES]];set CONFIG_KMOD [sync_bool $CONFIG_KMOD $tmpvar_dep 0];set CONFIG_KMOD [expr $CONFIG_KMOD&15]}
}


menu_option menu3 3 "System Type"
proc menu3 {w title} {
	set oldFocus [focus]
	catch {destroy $w; unregister_active 3}
	toplevel $w -class Dialog
	wm withdraw $w
	global active_menus
	set active_menus [lsort -integer [linsert $active_menus end 3]]
	message $w.m -width 400 -aspect 300 -text \
		"System Type"  -relief raised
	pack $w.m -pady 10 -side top -padx 10
	wm title $w "System Type" 

	bind $w <Escape> "catch {focus $oldFocus}; destroy $w; unregister_active 3; break"
	set nextscript "catch {focus $oldFocus}; menu4 .menu4 \"$title\""
	frame $w.f
	button $w.f.back -text "Main Menu" \
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 3"
	button $w.f.next -text "Next" -underline 0\
		-width 15 -command $nextscript
	bind all <Alt-n> $nextscript
	button $w.f.prev -text "Prev" -underline 0\
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 3; menu2 .menu2 \"$title\""
	bind $w <Alt-p> "catch {focus $oldFocus}; destroy $w; unregister_active 3; menu2 .menu2 \"$title\";break"
	pack $w.f.back $w.f.next $w.f.prev -side left -expand on
	pack $w.f -pady 10 -side bottom -anchor w -fill x
	frame $w.topline -relief ridge -borderwidth 2 -height 2
	pack $w.topline -side top -fill x

	frame $w.botline -relief ridge -borderwidth 2 -height 2
	pack $w.botline -side bottom -fill x

	frame $w.config
	pack $w.config -fill y -expand on

	scrollbar $w.config.vscroll -command "$w.config.canvas yview"
	pack $w.config.vscroll -side right -fill y

	canvas $w.config.canvas -height 1\
		-relief flat -borderwidth 0 -yscrollcommand "$w.config.vscroll set" \
		-width [expr [winfo screenwidth .] * 1 / 2] 
	frame $w.config.f
	bind $w <Key-Down> "$w.config.canvas yview scroll  1 unit;break;"
	bind $w <Key-Up> "$w.config.canvas yview scroll  -1 unit;break;"
	bind $w <Key-Next> "$w.config.canvas yview scroll  1 page;break;"
	bind $w <Key-Prior> "$w.config.canvas yview scroll  -1 page;break;"
	bind $w <Key-Home> "$w.config.canvas yview moveto 0;break;"
	bind $w <Key-End> "$w.config.canvas yview moveto 1 ;break;"
	pack $w.config.canvas -side right -fill y


	global tmpvar_0
	minimenu $w.config.f 3 0 "ARM system type" tmpvar_0 CONFIG_ARCH_ADIFCC
	menu $w.config.f.x0.x.menu -tearoffcommand "menutitle \"ARM system type\""
	$w.config.f.x0.x.menu add radiobutton -label "ADIFCC-based" -variable tmpvar_0 -value "ADIFCC-based" -command "update_active"
	$w.config.f.x0.x.menu add radiobutton -label "Anakin" -variable tmpvar_0 -value "Anakin" -command "update_active"
	$w.config.f.x0.x.menu add radiobutton -label "Archimedes/A5000" -variable tmpvar_0 -value "Archimedes/A5000" -command "update_active"
	$w.config.f.x0.x.menu add radiobutton -label "Cirrus-CL-PS7500FE" -variable tmpvar_0 -value "Cirrus-CL-PS7500FE" -command "update_active"
	$w.config.f.x0.x.menu add radiobutton -label "CLPS711x/EP721x-based" -variable tmpvar_0 -value "CLPS711x/EP721x-based" -command "update_active"
	$w.config.f.x0.x.menu add radiobutton -label "Co-EBSA285" -variable tmpvar_0 -value "Co-EBSA285" -command "update_active"
	$w.config.f.x0.x.menu add radiobutton -label "EBSA-110" -variable tmpvar_0 -value "EBSA-110" -command "update_active"
	$w.config.f.x0.x.menu add radiobutton -label "Excalibur-ARM" -variable tmpvar_0 -value "Excalibur-ARM" -command "update_active"
	$w.config.f.x0.x.menu add radiobutton -label "FootBridge" -variable tmpvar_0 -value "FootBridge" -command "update_active"
	$w.config.f.x0.x.menu add radiobutton -label "Integrator" -variable tmpvar_0 -value "Integrator" -command "update_active"
	$w.config.f.x0.x.menu add radiobutton -label "KS8695" -variable tmpvar_0 -value "KS8695" -command "update_active"
	$w.config.f.x0.x.menu add radiobutton -label "IOP3xx-based" -variable tmpvar_0 -value "IOP3xx-based" -command "update_active"
	$w.config.f.x0.x.menu add radiobutton -label "IXP1200-based" -variable tmpvar_0 -value "IXP1200-based" -command "update_active"
	$w.config.f.x0.x.menu add radiobutton -label "IXP2000-based" -variable tmpvar_0 -value "IXP2000-based" -command "update_active"
	$w.config.f.x0.x.menu add radiobutton -label "IXP425-based" -variable tmpvar_0 -value "IXP425-based" -command "update_active"
	$w.config.f.x0.x.menu add radiobutton -label "Omaha" -variable tmpvar_0 -value "Omaha" -command "update_active"
	$w.config.f.x0.x.menu add radiobutton -label "LinkUp-L7200" -variable tmpvar_0 -value "LinkUp-L7200" -command "update_active"
	$w.config.f.x0.x.menu add radiobutton -label "Motorola-MX1ADS" -variable tmpvar_0 -value "Motorola-MX1ADS" -command "update_active"
	$w.config.f.x0.x.menu add radiobutton -label "RiscPC" -variable tmpvar_0 -value "RiscPC" -command "update_active"
	$w.config.f.x0.x.menu add radiobutton -label "RiscStation" -variable tmpvar_0 -value "RiscStation" -command "update_active"
	$w.config.f.x0.x.menu add radiobutton -label "SA1100-based" -variable tmpvar_0 -value "SA1100-based" -command "update_active"
	$w.config.f.x0.x.menu add radiobutton -label "Shark" -variable tmpvar_0 -value "Shark" -command "update_active"
	$w.config.f.x0.x.menu add radiobutton -label "AT91RM9200-based" -variable tmpvar_0 -value "AT91RM9200-based" -command "update_active"
	menusplit $w $w.config.f.x0.x.menu 23
	submenu $w.config.f 3 1 "Archimedes/A5000 Implementations" 4
	submenu $w.config.f 3 2 "Footbridge Implementations" 5
	submenu $w.config.f 3 3 "SA11x0 Implementations" 6
	submenu $w.config.f 3 4 "IOP3xx Implementation Options" 7
	submenu $w.config.f 3 5 "IXP425 Implementation Options" 8
	submenu $w.config.f 3 6 "IXP1200 Implementation Options" 9
	global tmpvar_5
	minimenu $w.config.f 3 7 "IXP2000 System Type" tmpvar_5 CONFIG_ARCH_IXDP2400
	menu $w.config.f.x7.x.menu -tearoffcommand "menutitle \"IXP2000 System Type\""
	$w.config.f.x7.x.menu add radiobutton -label "IXDP2400" -variable tmpvar_5 -value "IXDP2400" -command "update_active"
	$w.config.f.x7.x.menu add radiobutton -label "IXDP2800" -variable tmpvar_5 -value "IXDP2800" -command "update_active"
	menusplit $w $w.config.f.x7.x.menu 2
	bool $w.config.f 3 8 "Workaround for PCI I/O errrata" CONFIG_IXP2000_PCI_IO_ERRATA
	submenu $w.config.f 3 9 "KS8695 Implementation Options" 10
	submenu $w.config.f 3 10 "AT91RM9200 Implementations" 11
	submenu $w.config.f 3 11 "CLPS711X/EP721X Implementations" 12
	submenu $w.config.f 3 12 "ADI FCC Implementation Options" 13
	global tmpvar_8
	minimenu $w.config.f 3 13 "EPXA system type" tmpvar_8 CONFIG_EPXA10DB
	menu $w.config.f.x13.x.menu -tearoffcommand "menutitle \"EPXA system type\""
	$w.config.f.x13.x.menu add radiobutton -label "EPXA10DB" -variable tmpvar_8 -value "EPXA10DB" -command "update_active"
	$w.config.f.x13.x.menu add radiobutton -label "EPXA1DB" -variable tmpvar_8 -value "EPXA1DB" -command "update_active"
	menusplit $w $w.config.f.x13.x.menu 2
	global tmpvar_9
	minimenu $w.config.f 3 14 "EPXA10B version" tmpvar_9 CONFIG_EPXA10DB_R2
	menu $w.config.f.x14.x.menu -tearoffcommand "menutitle \"EPXA10B version\""
	$w.config.f.x14.x.menu add radiobutton -label "SDR" -variable tmpvar_9 -value "SDR" -command "update_active"
	$w.config.f.x14.x.menu add radiobutton -label "DDR" -variable tmpvar_9 -value "DDR" -command "update_active"
	menusplit $w $w.config.f.x14.x.menu 2
	comment $w.config.f 3 15 "PLD hotswap support"
	dep_bool $w.config.f 3 16 "Support for PLD device hotplugging" CONFIG_PLD_HOTSWAP
	comment $w.config.f 3 17 "Processor Type"
	bool $w.config.f 3 18 "2MB physical memory" CONFIG_PAGESIZE_16
	bool $w.config.f 3 19 "Support ARM610 processor" CONFIG_CPU_ARM610
	bool $w.config.f 3 20 "Support ARM710 processor" CONFIG_CPU_ARM710
	bool $w.config.f 3 21 "Support ARM720T processor" CONFIG_CPU_ARM720T
	bool $w.config.f 3 22 "Support ARM920T processor" CONFIG_CPU_ARM920T
	bool $w.config.f 3 23 "Support ARM926T processor" CONFIG_CPU_ARM926T
	bool $w.config.f 3 24 "Support ARM1020 processor" CONFIG_CPU_ARM1020
	bool $w.config.f 3 25 "Support ARM1026EJ-S processor" CONFIG_CPU_ARM1026
	bool $w.config.f 3 26 "Support StrongARM(R) SA-110 processor" CONFIG_CPU_SA110
	comment $w.config.f 3 27 "Processor Features"
	bool $w.config.f 3 28 "Use XScale PMU as timer source" CONFIG_XSCALE_PMU_TIMER
	bool $w.config.f 3 29 "Workaround for XScale Cache Errata(see help)" CONFIG_XSCALE_CACHE_ERRATA
	bool $w.config.f 3 30 "Support for BDI2000 JTAG Debugger" CONFIG_XSCALE_BDI2000
	dep_bool $w.config.f 3 31 "Support Thumb instructions (EXPERIMENTAL)" CONFIG_ARM_THUMB
	bool $w.config.f 3 32 "Disable I-Cache" CONFIG_CPU_ICACHE_DISABLE
	bool $w.config.f 3 33 "Disable D-Cache" CONFIG_CPU_DCACHE_DISABLE
	bool $w.config.f 3 34 "Force write through D-cache" CONFIG_CPU_DCACHE_WRITETHROUGH
	bool $w.config.f 3 35 "Round robin I and D cache replacement algorithm" CONFIG_CPU_CACHE_ROUND_ROBIN
	bool $w.config.f 3 36 "Disable branch prediction" CONFIG_CPU_BPREDICT_DISABLE
	bool $w.config.f 3 37 "Generate big endian kernel" CONFIG_CPU_BIG_ENDIAN



	focus $w
	update_active
	global winx; global winy
	set winx [expr [winfo x .]+30]; set winy [expr [winfo y .]+30]
	if {[winfo exists $w]} then {wm geometry $w +$winx+$winy}
	update idletasks
	if {[winfo exists $w]} then  {$w.config.canvas create window 0 0 -anchor nw -window $w.config.f

	$w.config.canvas configure \
		-width [expr [winfo reqwidth $w.config.f] + 1]\
		-scrollregion "-1 -1 [expr [winfo reqwidth $w.config.f] + 1] \
			 [expr [winfo reqheight $w.config.f] + 1]"

	set winy [expr [winfo reqh $w] - [winfo reqh $w.config.canvas]]
	set scry [expr [winfo screenh $w] / 2]
	set maxy [expr [winfo screenh $w] * 3 / 4]
	set canvtotal [expr [winfo reqh $w.config.f] + 2]
	if [expr $winy + $canvtotal < $maxy] {
		$w.config.canvas configure -height $canvtotal
	} else {
		$w.config.canvas configure -height [expr $scry - $winy]
		}
	}
	update idletasks
	if {[winfo exists $w]} then {
	wm maxsize $w [winfo width $w] [winfo screenheight $w]
	wm minsize $w [winfo width $w] 100

	wm deiconify $w
}
}

proc update_menu3 {} {
	global CONFIG_ARCH_IOP3XX
	if {($CONFIG_ARCH_IOP3XX == 1)} then {configure_entry .menu3.config.f.x4 normal {m}} else {configure_entry .menu3.config.f.x4 disabled {m}}
	global CONFIG_ARCH_IXP425
	if {($CONFIG_ARCH_IXP425 == 1)} then {configure_entry .menu3.config.f.x5 normal {m}} else {configure_entry .menu3.config.f.x5 disabled {m}}
	global CONFIG_ARCH_IXP1200
	if {($CONFIG_ARCH_IXP1200 == 1)} then {configure_entry .menu3.config.f.x6 normal {m}} else {configure_entry .menu3.config.f.x6 disabled {m}}
	global CONFIG_ARCH_IXP2000
	if {($CONFIG_ARCH_IXP2000 == 1)} then {configure_entry .menu3.config.f.x7 normal {x l}} else {configure_entry .menu3.config.f.x7 disabled {x l}}
	global CONFIG_IXP2000_PCI_IO_ERRATA
	if {($CONFIG_ARCH_IXP2000 == 1)} then {
	configure_entry .menu3.config.f.x8 normal {n l y}} else {configure_entry .menu3.config.f.x8 disabled {y n l}}
	global CONFIG_ARCH_KS8695
	if {($CONFIG_ARCH_KS8695 == 1)} then {configure_entry .menu3.config.f.x9 normal {m}} else {configure_entry .menu3.config.f.x9 disabled {m}}
	global CONFIG_ARCH_ADIFCC
	if {($CONFIG_ARCH_ADIFCC == 1)} then {configure_entry .menu3.config.f.x12 normal {m}} else {configure_entry .menu3.config.f.x12 disabled {m}}
	global CONFIG_ARCH_CAMELOT
	if {($CONFIG_ARCH_CAMELOT == 1)} then {configure_entry .menu3.config.f.x13 normal {x l}} else {configure_entry .menu3.config.f.x13 disabled {x l}}
	global CONFIG_EPXA10DB
	if {($CONFIG_ARCH_CAMELOT == 1) && ($CONFIG_EPXA10DB == 1)} then {configure_entry .menu3.config.f.x14 normal {x l}} else {configure_entry .menu3.config.f.x14 disabled {x l}}
	if {($CONFIG_ARCH_CAMELOT == 1)} then {configure_entry .menu3.config.f.x15 normal {m}} else {configure_entry .menu3.config.f.x15 disabled {m}}
	global CONFIG_EXPERIMENTAL
	global CONFIG_PLD_HOTSWAP
	if {($CONFIG_ARCH_CAMELOT == 1) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_EXPERIMENTAL]];set CONFIG_PLD_HOTSWAP [sync_bool $CONFIG_PLD_HOTSWAP $tmpvar_dep 0];if {$tmpvar_dep != 1} then {configure_entry .menu3.config.f.x16 disabled {y};} else {configure_entry .menu3.config.f.x16 normal {y};}; configure_entry .menu3.config.f.x16 normal {n l}} else {configure_entry .menu3.config.f.x16 disabled {y n l}}
	global CONFIG_ARCH_ARCA5K
	global CONFIG_PAGESIZE_16
	if {($CONFIG_ARCH_ARCA5K == 1)} then {
	configure_entry .menu3.config.f.x18 normal {n l y}} else {configure_entry .menu3.config.f.x18 disabled {y n l}}
	global CONFIG_ARCH_RPC
	global CONFIG_CPU_ARM610
	if {($CONFIG_ARCH_RPC == 1)} then {
	configure_entry .menu3.config.f.x19 normal {n l y}} else {configure_entry .menu3.config.f.x19 disabled {y n l}}
	global CONFIG_ARCH_CLPS7500
	global CONFIG_ARCH_RISCSTATION
	global CONFIG_CPU_ARM710
	if {($CONFIG_ARCH_CLPS7500 != 1 && $CONFIG_ARCH_RISCSTATION != 1) && ($CONFIG_ARCH_RPC == 1)} then {
	configure_entry .menu3.config.f.x20 normal {n l y}} else {configure_entry .menu3.config.f.x20 disabled {y n l}}
	global CONFIG_ARCH_CLPS711X
	global CONFIG_ARCH_L7200
	global CONFIG_ARCH_CDB89712
	global CONFIG_ARCH_INTEGRATOR
	global CONFIG_CPU_ARM720T
	if {($CONFIG_ARCH_CLPS711X != 1 && $CONFIG_ARCH_L7200 != 1 && $CONFIG_ARCH_CDB89712 != 1) && ($CONFIG_ARCH_INTEGRATOR == 1)} then {
	configure_entry .menu3.config.f.x21 normal {n l y}} else {configure_entry .menu3.config.f.x21 disabled {y n l}}
	global CONFIG_ARCH_MX1ADS
	global CONFIG_ARCH_AT91RM9200
	global CONFIG_ARCH_OMAHA
	global CONFIG_CPU_ARM920T
	if {($CONFIG_ARCH_MX1ADS != 1 && $CONFIG_ARCH_AT91RM9200 != 1) && ($CONFIG_ARCH_INTEGRATOR == 1 || $CONFIG_ARCH_OMAHA == 1)} then {
	configure_entry .menu3.config.f.x22 normal {n l y}} else {configure_entry .menu3.config.f.x22 disabled {y n l}}
	global CONFIG_CPU_ARM926T
	if {($CONFIG_ARCH_INTEGRATOR == 1)} then {
	configure_entry .menu3.config.f.x23 normal {n l y}} else {configure_entry .menu3.config.f.x23 disabled {y n l}}
	global CONFIG_CPU_ARM1020
	if {($CONFIG_ARCH_INTEGRATOR == 1)} then {
	configure_entry .menu3.config.f.x24 normal {n l y}} else {configure_entry .menu3.config.f.x24 disabled {y n l}}
	global CONFIG_CPU_ARM1026
	if {($CONFIG_ARCH_INTEGRATOR == 1)} then {
	configure_entry .menu3.config.f.x25 normal {n l y}} else {configure_entry .menu3.config.f.x25 disabled {y n l}}
	global CONFIG_ARCH_EBSA110
	global CONFIG_FOOTBRIDGE
	global CONFIG_ARCH_TBOX
	global CONFIG_ARCH_SHARK
	global CONFIG_ARCH_NEXUSPCI
	global CONFIG_ARCH_ANAKIN
	global CONFIG_CPU_SA110
	if {($CONFIG_ARCH_EBSA110 != 1 && $CONFIG_FOOTBRIDGE != 1 && $CONFIG_ARCH_TBOX != 1 && $CONFIG_ARCH_SHARK != 1 && $CONFIG_ARCH_NEXUSPCI != 1 && $CONFIG_ARCH_ANAKIN != 1 && $CONFIG_ARCH_IXP1200 != 1) && ($CONFIG_ARCH_RPC == 1)} then {
	configure_entry .menu3.config.f.x26 normal {n l y}} else {configure_entry .menu3.config.f.x26 disabled {y n l}}
	global CONFIG_CPU_XSCALE
	global CONFIG_XSCALE_PMU_TIMER
	if {($CONFIG_CPU_XSCALE == 1)} then {
	configure_entry .menu3.config.f.x28 normal {n l y}} else {configure_entry .menu3.config.f.x28 disabled {y n l}}
	global CONFIG_XSCALE_CACHE_ERRATA
	if {($CONFIG_CPU_XSCALE == 1)} then {
	configure_entry .menu3.config.f.x29 normal {n l y}} else {configure_entry .menu3.config.f.x29 disabled {y n l}}
	global CONFIG_XSCALE_BDI2000
	if {($CONFIG_CPU_XSCALE == 1)} then {
	configure_entry .menu3.config.f.x30 normal {n l y}} else {configure_entry .menu3.config.f.x30 disabled {y n l}}
	global CONFIG_CPU_ARM922T
	global CONFIG_ARM_THUMB
	if {($CONFIG_CPU_ARM720T == 1 || $CONFIG_CPU_ARM920T == 1 || $CONFIG_CPU_ARM922T == 1 || $CONFIG_CPU_ARM926T == 1 || $CONFIG_CPU_ARM1020 == 1 || $CONFIG_CPU_ARM1026 == 1) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_EXPERIMENTAL]];set CONFIG_ARM_THUMB [sync_bool $CONFIG_ARM_THUMB $tmpvar_dep 0];if {$tmpvar_dep != 1} then {configure_entry .menu3.config.f.x31 disabled {y};} else {configure_entry .menu3.config.f.x31 normal {y};}; configure_entry .menu3.config.f.x31 normal {n l}} else {configure_entry .menu3.config.f.x31 disabled {y n l}}
	global CONFIG_CPU_ICACHE_DISABLE
	if {($CONFIG_CPU_ARM920T == 1 || $CONFIG_CPU_ARM922T == 1 || $CONFIG_CPU_ARM926T == 1 || $CONFIG_CPU_ARM1020 == 1 || $CONFIG_CPU_ARM1026 == 1)} then {
	configure_entry .menu3.config.f.x32 normal {n l y}} else {configure_entry .menu3.config.f.x32 disabled {y n l}}
	global CONFIG_CPU_DCACHE_DISABLE
	if {($CONFIG_CPU_ARM920T == 1 || $CONFIG_CPU_ARM922T == 1 || $CONFIG_CPU_ARM926T == 1 || $CONFIG_CPU_ARM1020 == 1 || $CONFIG_CPU_ARM1026 == 1)} then {
	configure_entry .menu3.config.f.x33 normal {n l y}} else {configure_entry .menu3.config.f.x33 disabled {y n l}}
	global CONFIG_CPU_DCACHE_WRITETHROUGH
	if {($CONFIG_CPU_ARM920T == 1 || $CONFIG_CPU_ARM922T == 1 || $CONFIG_CPU_ARM926T == 1 || $CONFIG_CPU_ARM1020 == 1 || $CONFIG_CPU_ARM1026 == 1) && ($CONFIG_CPU_DCACHE_DISABLE == 0)} then {
	configure_entry .menu3.config.f.x34 normal {n l y}} else {configure_entry .menu3.config.f.x34 disabled {y n l}}
	global CONFIG_CPU_CACHE_ROUND_ROBIN
	if {($CONFIG_CPU_ARM926T == 1 || $CONFIG_CPU_ARM1020 == 1 || $CONFIG_CPU_ARM1026 == 1) && ($CONFIG_CPU_ICACHE_DISABLE == 0 || $CONFIG_CPU_DCACHE_DISABLE == 0)} then {
	configure_entry .menu3.config.f.x35 normal {n l y}} else {configure_entry .menu3.config.f.x35 disabled {y n l}}
	global CONFIG_CPU_BPREDICT_DISABLE
	if {($CONFIG_CPU_ARM1020 == 1 || $CONFIG_CPU_ARM1026 == 1)} then {
	configure_entry .menu3.config.f.x36 normal {n l y}} else {configure_entry .menu3.config.f.x36 disabled {y n l}}
}


proc update_define_menu3 {} {
	update_define_mainmenu
	global CONFIG_MODULES
	global CONFIG_ARCH_ACORN
	global CONFIG_FOOTBRIDGE
	global CONFIG_FOOTBRIDGE_HOST
	global CONFIG_FOOTBRIDGE_ADDIN
	global CONFIG_ARCH_EBSA285
	global CONFIG_SA1111
	global CONFIG_FORCE_MAX_ZONEORDER
	global CONFIG_PLD
	global CONFIG_CPU_32
	global CONFIG_CPU_26
	global CONFIG_CPU_ARM610
	global CONFIG_CPU_ARM710
	global CONFIG_CPU_ARM720T
	global CONFIG_CPU_ARM920T
	global CONFIG_CPU_ARM922T
	global CONFIG_CPU_ARM926T
	global CONFIG_CPU_ARM1020
	global CONFIG_CPU_ARM1026
	global CONFIG_CPU_SA110
	global CONFIG_CPU_SA1100
	global CONFIG_CPU_32v3
	global CONFIG_CPU_32v4
	global CONFIG_CPU_32v5
	global CONFIG_CPU_XSCALE
	global CONFIG_ARM_THUMB
	global CONFIG_DISCONTIGMEM
	global CONFIG_IXP2000_PCI_IO_ERRATA
set CONFIG_IXP2000_PCI_IO_ERRATA [expr $CONFIG_IXP2000_PCI_IO_ERRATA|16]
	global CONFIG_PAGESIZE_16
set CONFIG_PAGESIZE_16 [expr $CONFIG_PAGESIZE_16|16]
set CONFIG_CPU_ARM610 [expr $CONFIG_CPU_ARM610|16]
set CONFIG_CPU_ARM710 [expr $CONFIG_CPU_ARM710|16]
set CONFIG_CPU_ARM720T [expr $CONFIG_CPU_ARM720T|16]
set CONFIG_CPU_ARM920T [expr $CONFIG_CPU_ARM920T|16]
set CONFIG_CPU_ARM926T [expr $CONFIG_CPU_ARM926T|16]
set CONFIG_CPU_ARM1020 [expr $CONFIG_CPU_ARM1020|16]
set CONFIG_CPU_ARM1026 [expr $CONFIG_CPU_ARM1026|16]
set CONFIG_CPU_SA110 [expr $CONFIG_CPU_SA110|16]
	global CONFIG_XSCALE_PMU_TIMER
set CONFIG_XSCALE_PMU_TIMER [expr $CONFIG_XSCALE_PMU_TIMER|16]
	global CONFIG_XSCALE_CACHE_ERRATA
set CONFIG_XSCALE_CACHE_ERRATA [expr $CONFIG_XSCALE_CACHE_ERRATA|16]
	global CONFIG_XSCALE_BDI2000
set CONFIG_XSCALE_BDI2000 [expr $CONFIG_XSCALE_BDI2000|16]
	global CONFIG_CPU_ICACHE_DISABLE
set CONFIG_CPU_ICACHE_DISABLE [expr $CONFIG_CPU_ICACHE_DISABLE|16]
	global CONFIG_CPU_DCACHE_DISABLE
set CONFIG_CPU_DCACHE_DISABLE [expr $CONFIG_CPU_DCACHE_DISABLE|16]
	global CONFIG_CPU_DCACHE_WRITETHROUGH
set CONFIG_CPU_DCACHE_WRITETHROUGH [expr $CONFIG_CPU_DCACHE_WRITETHROUGH|16]
	global CONFIG_CPU_CACHE_ROUND_ROBIN
set CONFIG_CPU_CACHE_ROUND_ROBIN [expr $CONFIG_CPU_CACHE_ROUND_ROBIN|16]
	global CONFIG_CPU_BPREDICT_DISABLE
set CONFIG_CPU_BPREDICT_DISABLE [expr $CONFIG_CPU_BPREDICT_DISABLE|16]
	global tmpvar_0
	global CONFIG_ARCH_ADIFCC
	if {$tmpvar_0 == "ADIFCC-based"} then {set CONFIG_ARCH_ADIFCC 1} else {set CONFIG_ARCH_ADIFCC 0}
	global CONFIG_ARCH_ANAKIN
	if {$tmpvar_0 == "Anakin"} then {set CONFIG_ARCH_ANAKIN 1} else {set CONFIG_ARCH_ANAKIN 0}
	global CONFIG_ARCH_ARCA5K
	if {$tmpvar_0 == "Archimedes/A5000"} then {set CONFIG_ARCH_ARCA5K 1} else {set CONFIG_ARCH_ARCA5K 0}
	global CONFIG_ARCH_CLPS7500
	if {$tmpvar_0 == "Cirrus-CL-PS7500FE"} then {set CONFIG_ARCH_CLPS7500 1} else {set CONFIG_ARCH_CLPS7500 0}
	global CONFIG_ARCH_CLPS711X
	if {$tmpvar_0 == "CLPS711x/EP721x-based"} then {set CONFIG_ARCH_CLPS711X 1} else {set CONFIG_ARCH_CLPS711X 0}
	global CONFIG_ARCH_CO285
	if {$tmpvar_0 == "Co-EBSA285"} then {set CONFIG_ARCH_CO285 1} else {set CONFIG_ARCH_CO285 0}
	global CONFIG_ARCH_EBSA110
	if {$tmpvar_0 == "EBSA-110"} then {set CONFIG_ARCH_EBSA110 1} else {set CONFIG_ARCH_EBSA110 0}
	global CONFIG_ARCH_CAMELOT
	if {$tmpvar_0 == "Excalibur-ARM"} then {set CONFIG_ARCH_CAMELOT 1} else {set CONFIG_ARCH_CAMELOT 0}
	global CONFIG_ARCH_FOOTBRIDGE
	if {$tmpvar_0 == "FootBridge"} then {set CONFIG_ARCH_FOOTBRIDGE 1} else {set CONFIG_ARCH_FOOTBRIDGE 0}
	global CONFIG_ARCH_INTEGRATOR
	if {$tmpvar_0 == "Integrator"} then {set CONFIG_ARCH_INTEGRATOR 1} else {set CONFIG_ARCH_INTEGRATOR 0}
	global CONFIG_ARCH_KS8695
	if {$tmpvar_0 == "KS8695"} then {set CONFIG_ARCH_KS8695 1} else {set CONFIG_ARCH_KS8695 0}
	global CONFIG_ARCH_IOP3XX
	if {$tmpvar_0 == "IOP3xx-based"} then {set CONFIG_ARCH_IOP3XX 1} else {set CONFIG_ARCH_IOP3XX 0}
	global CONFIG_ARCH_IXP1200
	if {$tmpvar_0 == "IXP1200-based"} then {set CONFIG_ARCH_IXP1200 1} else {set CONFIG_ARCH_IXP1200 0}
	global CONFIG_ARCH_IXP2000
	if {$tmpvar_0 == "IXP2000-based"} then {set CONFIG_ARCH_IXP2000 1} else {set CONFIG_ARCH_IXP2000 0}
	global CONFIG_ARCH_IXP425
	if {$tmpvar_0 == "IXP425-based"} then {set CONFIG_ARCH_IXP425 1} else {set CONFIG_ARCH_IXP425 0}
	global CONFIG_ARCH_OMAHA
	if {$tmpvar_0 == "Omaha"} then {set CONFIG_ARCH_OMAHA 1} else {set CONFIG_ARCH_OMAHA 0}
	global CONFIG_ARCH_L7200
	if {$tmpvar_0 == "LinkUp-L7200"} then {set CONFIG_ARCH_L7200 1} else {set CONFIG_ARCH_L7200 0}
	global CONFIG_ARCH_MX1ADS
	if {$tmpvar_0 == "Motorola-MX1ADS"} then {set CONFIG_ARCH_MX1ADS 1} else {set CONFIG_ARCH_MX1ADS 0}
	global CONFIG_ARCH_RPC
	if {$tmpvar_0 == "RiscPC"} then {set CONFIG_ARCH_RPC 1} else {set CONFIG_ARCH_RPC 0}
	global CONFIG_ARCH_RISCSTATION
	if {$tmpvar_0 == "RiscStation"} then {set CONFIG_ARCH_RISCSTATION 1} else {set CONFIG_ARCH_RISCSTATION 0}
	global CONFIG_ARCH_SA1100
	if {$tmpvar_0 == "SA1100-based"} then {set CONFIG_ARCH_SA1100 1} else {set CONFIG_ARCH_SA1100 0}
	global CONFIG_ARCH_SHARK
	if {$tmpvar_0 == "Shark"} then {set CONFIG_ARCH_SHARK 1} else {set CONFIG_ARCH_SHARK 0}
	global CONFIG_ARCH_AT91RM9200
	if {$tmpvar_0 == "AT91RM9200-based"} then {set CONFIG_ARCH_AT91RM9200 1} else {set CONFIG_ARCH_AT91RM9200 0}
	global tmpvar_5
	global CONFIG_ARCH_IXDP2400
	if {$tmpvar_5 == "IXDP2400"} then {set CONFIG_ARCH_IXDP2400 1} else {set CONFIG_ARCH_IXDP2400 0}
	global CONFIG_ARCH_IXDP2800
	if {$tmpvar_5 == "IXDP2800"} then {set CONFIG_ARCH_IXDP2800 1} else {set CONFIG_ARCH_IXDP2800 0}
	if {($CONFIG_ARCH_IXP2000 == 1)} then {
	set CONFIG_IXP2000_PCI_IO_ERRATA [expr $CONFIG_IXP2000_PCI_IO_ERRATA&15]}
	if {($CONFIG_ARCH_ARCA5K == 1 || $CONFIG_ARCH_RPC == 1)} then {	global CONSTANT_Y
set CONFIG_ARCH_ACORN $CONSTANT_Y }
	if {($CONFIG_ARCH_ARCA5K != 1 && $CONFIG_ARCH_RPC != 1)} then {	global CONSTANT_N
set CONFIG_ARCH_ACORN $CONSTANT_N }
	if {($CONFIG_ARCH_CO285 == 1 || $CONFIG_ARCH_FOOTBRIDGE == 1)} then {	global CONSTANT_Y
set CONFIG_FOOTBRIDGE $CONSTANT_Y }
	if {($CONFIG_ARCH_CO285 != 1 && $CONFIG_ARCH_FOOTBRIDGE != 1)} then {	global CONSTANT_N
set CONFIG_FOOTBRIDGE $CONSTANT_N }
	global CONFIG_ARCH_CATS
	global CONFIG_ARCH_EBSA285_HOST
	global CONFIG_ARCH_NETWINDER
	global CONFIG_ARCH_PERSONAL_SERVER
	if {($CONFIG_ARCH_CATS == 1 || $CONFIG_ARCH_EBSA285_HOST == 1 || $CONFIG_ARCH_NETWINDER == 1 || $CONFIG_ARCH_PERSONAL_SERVER == 1)} then {	global CONSTANT_Y
set CONFIG_FOOTBRIDGE_HOST $CONSTANT_Y }
	if {($CONFIG_ARCH_CATS != 1 && $CONFIG_ARCH_EBSA285_HOST != 1 && $CONFIG_ARCH_NETWINDER != 1 && $CONFIG_ARCH_PERSONAL_SERVER != 1)} then {	global CONSTANT_N
set CONFIG_FOOTBRIDGE_HOST $CONSTANT_N }
	global CONFIG_ARCH_EBSA285_ADDIN
	if {($CONFIG_ARCH_CO285 == 1 || $CONFIG_ARCH_EBSA285_ADDIN == 1)} then {	global CONSTANT_Y
set CONFIG_FOOTBRIDGE_ADDIN $CONSTANT_Y }
	if {($CONFIG_ARCH_CO285 != 1 && $CONFIG_ARCH_EBSA285_ADDIN != 1)} then {	global CONSTANT_N
set CONFIG_FOOTBRIDGE_ADDIN $CONSTANT_N }
	if {($CONFIG_ARCH_EBSA285_HOST == 1 || $CONFIG_ARCH_EBSA285_ADDIN == 1)} then {	global CONSTANT_Y
set CONFIG_ARCH_EBSA285 $CONSTANT_Y }
	global CONFIG_ASSABET_NEPONSET
	global CONFIG_SA1100_ACCELENT
	global CONFIG_SA1100_ADSAGC
	global CONFIG_SA1100_ADSBITSY
	global CONFIG_SA1100_ADSBITSYPLUS
	global CONFIG_SA1100_BADGE4
	global CONFIG_SA1100_CONSUS
	global CONFIG_SA1100_GRAPHICSMASTER
	global CONFIG_SA1100_JORNADA720
	global CONFIG_SA1100_PFS168
	global CONFIG_SA1100_PT_SYSTEM3
	global CONFIG_SA1100_XP860
	if {($CONFIG_ASSABET_NEPONSET == 1 || $CONFIG_SA1100_ACCELENT == 1 || $CONFIG_SA1100_ADSAGC == 1 || $CONFIG_SA1100_ADSBITSY == 1 || $CONFIG_SA1100_ADSBITSYPLUS == 1 || $CONFIG_SA1100_BADGE4 == 1 || $CONFIG_SA1100_CONSUS == 1 || $CONFIG_SA1100_GRAPHICSMASTER == 1 || $CONFIG_SA1100_JORNADA720 == 1 || $CONFIG_SA1100_PFS168 == 1 || $CONFIG_SA1100_PT_SYSTEM3 == 1 || $CONFIG_SA1100_XP860 == 1)} then {	global CONSTANT_Y
set CONFIG_SA1111 $CONSTANT_Y }
	if {($CONFIG_ASSABET_NEPONSET == 1 || $CONFIG_SA1100_ACCELENT == 1 || $CONFIG_SA1100_ADSAGC == 1 || $CONFIG_SA1100_ADSBITSY == 1 || $CONFIG_SA1100_ADSBITSYPLUS == 1 || $CONFIG_SA1100_BADGE4 == 1 || $CONFIG_SA1100_CONSUS == 1 || $CONFIG_SA1100_GRAPHICSMASTER == 1 || $CONFIG_SA1100_JORNADA720 == 1 || $CONFIG_SA1100_PFS168 == 1 || $CONFIG_SA1100_PT_SYSTEM3 == 1 || $CONFIG_SA1100_XP860 == 1)} then {set CONFIG_FORCE_MAX_ZONEORDER 9 }
	global tmpvar_8
	global CONFIG_EPXA10DB
	if {$tmpvar_8 == "EPXA10DB"} then {set CONFIG_EPXA10DB 1} else {set CONFIG_EPXA10DB 0}
	global CONFIG_EPXA1DB
	if {$tmpvar_8 == "EPXA1DB"} then {set CONFIG_EPXA1DB 1} else {set CONFIG_EPXA1DB 0}
	global tmpvar_9
	global CONFIG_EPXA10DB_R2
	if {$tmpvar_9 == "SDR"} then {set CONFIG_EPXA10DB_R2 1} else {set CONFIG_EPXA10DB_R2 0}
	global CONFIG_EPXA10DB_R3
	if {$tmpvar_9 == "DDR"} then {set CONFIG_EPXA10DB_R3 1} else {set CONFIG_EPXA10DB_R3 0}
	if {($CONFIG_ARCH_CAMELOT == 1)} then {	global CONSTANT_Y
set CONFIG_PLD $CONSTANT_Y }
	global CONFIG_EXPERIMENTAL
	global CONFIG_PLD_HOTSWAP
	if {($CONFIG_ARCH_CAMELOT == 1) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_EXPERIMENTAL]];set CONFIG_PLD_HOTSWAP [sync_bool $CONFIG_PLD_HOTSWAP $tmpvar_dep 0];set CONFIG_PLD_HOTSWAP [expr $CONFIG_PLD_HOTSWAP&15]}
	if {($CONFIG_ARCH_ARCA5K == 1)} then {	global CONSTANT_N
set CONFIG_CPU_32 $CONSTANT_N }
	if {($CONFIG_ARCH_ARCA5K == 1)} then {	global CONSTANT_Y
set CONFIG_CPU_26 $CONSTANT_Y }
	if {($CONFIG_ARCH_ARCA5K == 1)} then {
	set CONFIG_PAGESIZE_16 [expr $CONFIG_PAGESIZE_16&15]}
	if {($CONFIG_ARCH_ARCA5K != 1)} then {	global CONSTANT_Y
set CONFIG_CPU_32 $CONSTANT_Y }
	if {($CONFIG_ARCH_ARCA5K != 1)} then {	global CONSTANT_N
set CONFIG_CPU_26 $CONSTANT_N }
	if {($CONFIG_ARCH_RPC == 1)} then {
	set CONFIG_CPU_ARM610 [expr $CONFIG_CPU_ARM610&15]}
	if {($CONFIG_ARCH_RPC != 1)} then {	global CONSTANT_N
set CONFIG_CPU_ARM610 $CONSTANT_N }
	if {($CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1)} then {	global CONSTANT_Y
set CONFIG_CPU_ARM710 $CONSTANT_Y }
	if {($CONFIG_ARCH_CLPS7500 != 1 && $CONFIG_ARCH_RISCSTATION != 1) && ($CONFIG_ARCH_RPC == 1)} then {
	set CONFIG_CPU_ARM710 [expr $CONFIG_CPU_ARM710&15]}
	if {($CONFIG_ARCH_CLPS7500 != 1 && $CONFIG_ARCH_RISCSTATION != 1) && ($CONFIG_ARCH_RPC != 1)} then {	global CONSTANT_N
set CONFIG_CPU_ARM710 $CONSTANT_N }
	global CONFIG_ARCH_CDB89712
	if {($CONFIG_ARCH_CLPS711X == 1 || $CONFIG_ARCH_L7200 == 1 || $CONFIG_ARCH_CDB89712 == 1)} then {	global CONSTANT_Y
set CONFIG_CPU_ARM720T $CONSTANT_Y }
	if {($CONFIG_ARCH_CLPS711X != 1 && $CONFIG_ARCH_L7200 != 1 && $CONFIG_ARCH_CDB89712 != 1) && ($CONFIG_ARCH_INTEGRATOR == 1)} then {
	set CONFIG_CPU_ARM720T [expr $CONFIG_CPU_ARM720T&15]}
	if {($CONFIG_ARCH_CLPS711X != 1 && $CONFIG_ARCH_L7200 != 1 && $CONFIG_ARCH_CDB89712 != 1) && ($CONFIG_ARCH_INTEGRATOR != 1)} then {	global CONSTANT_N
set CONFIG_CPU_ARM720T $CONSTANT_N }
	if {($CONFIG_ARCH_MX1ADS == 1 || $CONFIG_ARCH_AT91RM9200 == 1)} then {	global CONSTANT_Y
set CONFIG_CPU_ARM920T $CONSTANT_Y }
	if {($CONFIG_ARCH_MX1ADS != 1 && $CONFIG_ARCH_AT91RM9200 != 1) && ($CONFIG_ARCH_INTEGRATOR == 1 || $CONFIG_ARCH_OMAHA == 1)} then {
	set CONFIG_CPU_ARM920T [expr $CONFIG_CPU_ARM920T&15]}
	if {($CONFIG_ARCH_MX1ADS != 1 && $CONFIG_ARCH_AT91RM9200 != 1) && ($CONFIG_ARCH_INTEGRATOR != 1 && $CONFIG_ARCH_OMAHA != 1)} then {	global CONSTANT_N
set CONFIG_CPU_ARM920T $CONSTANT_N }
	if {($CONFIG_ARCH_CAMELOT == 1 || $CONFIG_ARCH_KS8695 == 1)} then {	global CONSTANT_Y
set CONFIG_CPU_ARM922T $CONSTANT_Y }
	if {($CONFIG_ARCH_CAMELOT == 1 || $CONFIG_ARCH_KS8695 == 1)} then {	global CONSTANT_Y
set CONFIG_PLD $CONSTANT_Y }
	if {($CONFIG_ARCH_CAMELOT != 1 && $CONFIG_ARCH_KS8695 != 1)} then {	global CONSTANT_N
set CONFIG_CPU_ARM922T $CONSTANT_N }
	if {($CONFIG_ARCH_CAMELOT != 1 && $CONFIG_ARCH_KS8695 != 1)} then {	global CONSTANT_N
set CONFIG_PLD $CONSTANT_N }
	if {($CONFIG_ARCH_INTEGRATOR == 1)} then {
	set CONFIG_CPU_ARM926T [expr $CONFIG_CPU_ARM926T&15]}
	if {($CONFIG_ARCH_INTEGRATOR != 1)} then {	global CONSTANT_N
set CONFIG_CPU_ARM926T $CONSTANT_N }
	if {($CONFIG_ARCH_INTEGRATOR == 1)} then {
	set CONFIG_CPU_ARM1020 [expr $CONFIG_CPU_ARM1020&15]}
	if {($CONFIG_ARCH_INTEGRATOR != 1)} then {	global CONSTANT_N
set CONFIG_CPU_ARM1020 $CONSTANT_N }
	if {($CONFIG_ARCH_INTEGRATOR == 1)} then {
	set CONFIG_CPU_ARM1026 [expr $CONFIG_CPU_ARM1026&15]}
	if {($CONFIG_ARCH_INTEGRATOR != 1)} then {	global CONSTANT_N
set CONFIG_CPU_ARM1026 $CONSTANT_N }
	global CONFIG_ARCH_TBOX
	global CONFIG_ARCH_NEXUSPCI
	if {($CONFIG_ARCH_EBSA110 == 1 || $CONFIG_FOOTBRIDGE == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_NEXUSPCI == 1 || $CONFIG_ARCH_ANAKIN == 1 || $CONFIG_ARCH_IXP1200 == 1)} then {	global CONSTANT_Y
set CONFIG_CPU_SA110 $CONSTANT_Y }
	if {($CONFIG_ARCH_EBSA110 != 1 && $CONFIG_FOOTBRIDGE != 1 && $CONFIG_ARCH_TBOX != 1 && $CONFIG_ARCH_SHARK != 1 && $CONFIG_ARCH_NEXUSPCI != 1 && $CONFIG_ARCH_ANAKIN != 1 && $CONFIG_ARCH_IXP1200 != 1) && ($CONFIG_ARCH_RPC == 1)} then {
	set CONFIG_CPU_SA110 [expr $CONFIG_CPU_SA110&15]}
	if {($CONFIG_ARCH_EBSA110 != 1 && $CONFIG_FOOTBRIDGE != 1 && $CONFIG_ARCH_TBOX != 1 && $CONFIG_ARCH_SHARK != 1 && $CONFIG_ARCH_NEXUSPCI != 1 && $CONFIG_ARCH_ANAKIN != 1 && $CONFIG_ARCH_IXP1200 != 1) && ($CONFIG_ARCH_RPC != 1)} then {	global CONSTANT_N
set CONFIG_CPU_SA110 $CONSTANT_N }
	if {($CONFIG_ARCH_SA1100 == 1)} then {	global CONSTANT_Y
set CONFIG_CPU_SA1100 $CONSTANT_Y }
	if {($CONFIG_ARCH_SA1100 != 1)} then {	global CONSTANT_N
set CONFIG_CPU_SA1100 $CONSTANT_N }
	if {($CONFIG_ARCH_RPC == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_CLPS7500 == 1)} then {	global CONSTANT_Y
set CONFIG_CPU_32v3 $CONSTANT_Y }
	if {($CONFIG_ARCH_RPC != 1 && $CONFIG_ARCH_RISCSTATION != 1 && $CONFIG_ARCH_CLPS7500 != 1)} then {	global CONSTANT_N
set CONFIG_CPU_32v3 $CONSTANT_N }
	if {($CONFIG_ARCH_EBSA110 == 1 || $CONFIG_FOOTBRIDGE == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_NEXUSPCI == 1 || $CONFIG_ARCH_CLPS711X == 1 || $CONFIG_ARCH_INTEGRATOR == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_L7200 == 1 || $CONFIG_ARCH_ANAKIN == 1 || $CONFIG_ARCH_CAMELOT == 1 || $CONFIG_ARCH_MX1ADS == 1 || $CONFIG_ARCH_OMAHA == 1 || $CONFIG_ARCH_AT91RM9200 == 1 || $CONFIG_ARCH_KS8695 == 1)} then {	global CONSTANT_Y
set CONFIG_CPU_32v4 $CONSTANT_Y }
	if {($CONFIG_ARCH_EBSA110 != 1 && $CONFIG_FOOTBRIDGE != 1 && $CONFIG_ARCH_TBOX != 1 && $CONFIG_ARCH_SHARK != 1 && $CONFIG_ARCH_NEXUSPCI != 1 && $CONFIG_ARCH_CLPS711X != 1 && $CONFIG_ARCH_INTEGRATOR != 1 && $CONFIG_ARCH_SA1100 != 1 && $CONFIG_ARCH_L7200 != 1 && $CONFIG_ARCH_ANAKIN != 1 && $CONFIG_ARCH_CAMELOT != 1 && $CONFIG_ARCH_MX1ADS != 1 && $CONFIG_ARCH_OMAHA != 1 && $CONFIG_ARCH_AT91RM9200 != 1 && $CONFIG_ARCH_KS8695 != 1)} then {	global CONSTANT_N
set CONFIG_CPU_32v4 $CONSTANT_N }
	if {($CONFIG_ARCH_IOP3XX == 1 || $CONFIG_ARCH_ADIFCC == 1 || $CONFIG_ARCH_IXP425 == 1 || $CONFIG_ARCH_IXP2000 == 1)} then {	global CONSTANT_Y
set CONFIG_CPU_32v5 $CONSTANT_Y }
	if {($CONFIG_ARCH_IOP3XX == 1 || $CONFIG_ARCH_ADIFCC == 1 || $CONFIG_ARCH_IXP425 == 1 || $CONFIG_ARCH_IXP2000 == 1)} then {	global CONSTANT_Y
set CONFIG_CPU_XSCALE $CONSTANT_Y }
	if {($CONFIG_ARCH_IOP3XX == 1 || $CONFIG_ARCH_ADIFCC == 1 || $CONFIG_ARCH_IXP425 == 1 || $CONFIG_ARCH_IXP2000 == 1)} then {	global CONSTANT_Y
set CONFIG_ARM_THUMB $CONSTANT_Y }
	if {($CONFIG_CPU_XSCALE == 1)} then {
	set CONFIG_XSCALE_PMU_TIMER [expr $CONFIG_XSCALE_PMU_TIMER&15]}
	if {($CONFIG_CPU_XSCALE == 1)} then {
	set CONFIG_XSCALE_CACHE_ERRATA [expr $CONFIG_XSCALE_CACHE_ERRATA&15]}
	if {($CONFIG_CPU_XSCALE == 1)} then {
	set CONFIG_XSCALE_BDI2000 [expr $CONFIG_XSCALE_BDI2000&15]}
	if {($CONFIG_CPU_ARM720T == 1 || $CONFIG_CPU_ARM920T == 1 || $CONFIG_CPU_ARM922T == 1 || $CONFIG_CPU_ARM926T == 1 || $CONFIG_CPU_ARM1020 == 1 || $CONFIG_CPU_ARM1026 == 1) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_EXPERIMENTAL]];set CONFIG_ARM_THUMB [sync_bool $CONFIG_ARM_THUMB $tmpvar_dep 0];set CONFIG_ARM_THUMB [expr $CONFIG_ARM_THUMB&15]}
	if {($CONFIG_CPU_ARM920T == 1 || $CONFIG_CPU_ARM922T == 1 || $CONFIG_CPU_ARM926T == 1 || $CONFIG_CPU_ARM1020 == 1 || $CONFIG_CPU_ARM1026 == 1)} then {
	set CONFIG_CPU_ICACHE_DISABLE [expr $CONFIG_CPU_ICACHE_DISABLE&15]}
	if {($CONFIG_CPU_ARM920T == 1 || $CONFIG_CPU_ARM922T == 1 || $CONFIG_CPU_ARM926T == 1 || $CONFIG_CPU_ARM1020 == 1 || $CONFIG_CPU_ARM1026 == 1)} then {
	set CONFIG_CPU_DCACHE_DISABLE [expr $CONFIG_CPU_DCACHE_DISABLE&15]}
	if {($CONFIG_CPU_ARM920T == 1 || $CONFIG_CPU_ARM922T == 1 || $CONFIG_CPU_ARM926T == 1 || $CONFIG_CPU_ARM1020 == 1 || $CONFIG_CPU_ARM1026 == 1) && ($CONFIG_CPU_DCACHE_DISABLE == 0)} then {
	set CONFIG_CPU_DCACHE_WRITETHROUGH [expr $CONFIG_CPU_DCACHE_WRITETHROUGH&15]}
	if {($CONFIG_CPU_ARM926T == 1 || $CONFIG_CPU_ARM1020 == 1 || $CONFIG_CPU_ARM1026 == 1) && ($CONFIG_CPU_ICACHE_DISABLE == 0 || $CONFIG_CPU_DCACHE_DISABLE == 0)} then {
	set CONFIG_CPU_CACHE_ROUND_ROBIN [expr $CONFIG_CPU_CACHE_ROUND_ROBIN&15]}
	if {($CONFIG_CPU_ARM1020 == 1 || $CONFIG_CPU_ARM1026 == 1)} then {
	set CONFIG_CPU_BPREDICT_DISABLE [expr $CONFIG_CPU_BPREDICT_DISABLE&15]}
	global CONFIG_ARCH_EDB7211
	if {($CONFIG_ARCH_EDB7211 == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_RISCSTATION == 1)} then {	global CONSTANT_Y
set CONFIG_DISCONTIGMEM $CONSTANT_Y }
	if {($CONFIG_ARCH_EDB7211 != 1 && $CONFIG_ARCH_SA1100 != 1 && $CONFIG_ARCH_RISCSTATION != 1)} then {	global CONSTANT_N
set CONFIG_DISCONTIGMEM $CONSTANT_N }
}


proc menu4 {w title} {
	set oldFocus [focus]
	catch {focus .menu3}
	catch {destroy $w; unregister_active 4}
	toplevel $w -class Dialog
	wm withdraw $w
	global active_menus
	set active_menus [lsort -integer [linsert $active_menus end 4]]
	message $w.m -width 400 -aspect 300 -text \
		"Archimedes/A5000 Implementations"  -relief raised
	pack $w.m -pady 10 -side top -padx 10
	wm title $w "Archimedes/A5000 Implementations" 

	bind $w <Escape> "catch {focus $oldFocus}; destroy $w; unregister_active 4; break"
	set nextscript "catch {focus $oldFocus}; destroy $w; unregister_active 4; menu5 .menu5 \"$title\""
	frame $w.f
	button $w.f.back -text "OK" \
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 4"
	button $w.f.next -text "Next" -underline 0\
		-width 15 -command $nextscript
	bind all <Alt-n> $nextscript
	button $w.f.prev -text "Prev" -underline 0\
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 4; menu3 .menu3 \"$title\""
	bind $w <Alt-p> "catch {focus $oldFocus}; destroy $w; unregister_active 4; menu3 .menu3 \"$title\";break"
	pack $w.f.back $w.f.next $w.f.prev -side left -expand on
	pack $w.f -pady 10 -side bottom -anchor w -fill x
	frame $w.topline -relief ridge -borderwidth 2 -height 2
	pack $w.topline -side top -fill x

	frame $w.botline -relief ridge -borderwidth 2 -height 2
	pack $w.botline -side bottom -fill x

	frame $w.config
	pack $w.config -fill y -expand on

	scrollbar $w.config.vscroll -command "$w.config.canvas yview"
	pack $w.config.vscroll -side right -fill y

	canvas $w.config.canvas -height 1\
		-relief flat -borderwidth 0 -yscrollcommand "$w.config.vscroll set" \
		-width [expr [winfo screenwidth .] * 1 / 2] 
	frame $w.config.f
	bind $w <Key-Down> "$w.config.canvas yview scroll  1 unit;break;"
	bind $w <Key-Up> "$w.config.canvas yview scroll  -1 unit;break;"
	bind $w <Key-Next> "$w.config.canvas yview scroll  1 page;break;"
	bind $w <Key-Prior> "$w.config.canvas yview scroll  -1 page;break;"
	bind $w <Key-Home> "$w.config.canvas yview moveto 0;break;"
	bind $w <Key-End> "$w.config.canvas yview moveto 1 ;break;"
	pack $w.config.canvas -side right -fill y


	comment $w.config.f 4 0 "Archimedes/A5000 Implementations (select only ONE)"
	dep_bool $w.config.f 4 1 "  Archimedes" CONFIG_ARCH_ARC
	dep_bool $w.config.f 4 2 "  A5000" CONFIG_ARCH_A5K



	focus $w
	update_active
	global winx; global winy
	if {[winfo exists .menu3] == 0} then {menu3 .menu3 "System Type"}
	set winx [expr [winfo x .menu3]+30]; set winy [expr [winfo y .menu3]+30]
	if {[winfo exists $w]} then {wm geometry $w +$winx+$winy}
	update idletasks
	if {[winfo exists $w]} then  {$w.config.canvas create window 0 0 -anchor nw -window $w.config.f

	$w.config.canvas configure \
		-width [expr [winfo reqwidth $w.config.f] + 1]\
		-scrollregion "-1 -1 [expr [winfo reqwidth $w.config.f] + 1] \
			 [expr [winfo reqheight $w.config.f] + 1]"

	set winy [expr [winfo reqh $w] - [winfo reqh $w.config.canvas]]
	set scry [expr [winfo screenh $w] / 2]
	set maxy [expr [winfo screenh $w] * 3 / 4]
	set canvtotal [expr [winfo reqh $w.config.f] + 2]
	if [expr $winy + $canvtotal < $maxy] {
		$w.config.canvas configure -height $canvtotal
	} else {
		$w.config.canvas configure -height [expr $scry - $winy]
		}
	}
	update idletasks
	if {[winfo exists $w]} then {
	wm maxsize $w [winfo width $w] [winfo screenheight $w]
	wm minsize $w [winfo width $w] 100

	wm deiconify $w
}
}

proc update_menu4 {} {
	global CONFIG_ARCH_ARCA5K
	global CONFIG_ARCH_ARC
	if {($CONFIG_ARCH_ARCA5K == 1 || $CONFIG_ARCH_ARCA5K == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ARCH_ARCA5K]];set CONFIG_ARCH_ARC [sync_bool $CONFIG_ARCH_ARC $tmpvar_dep 0];if {$tmpvar_dep != 1} then {configure_entry .menu4.config.f.x1 disabled {y};} else {configure_entry .menu4.config.f.x1 normal {y};}; configure_entry .menu4.config.f.x1 normal {n l}} else {configure_entry .menu4.config.f.x1 disabled {y n l}}
	global CONFIG_ARCH_A5K
	if {($CONFIG_ARCH_ARCA5K == 1 || $CONFIG_ARCH_ARCA5K == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ARCH_ARCA5K]];set CONFIG_ARCH_A5K [sync_bool $CONFIG_ARCH_A5K $tmpvar_dep 0];if {$tmpvar_dep != 1} then {configure_entry .menu4.config.f.x2 disabled {y};} else {configure_entry .menu4.config.f.x2 normal {y};}; configure_entry .menu4.config.f.x2 normal {n l}} else {configure_entry .menu4.config.f.x2 disabled {y n l}}
}


proc update_define_menu4 {} {
	update_define_mainmenu
	global CONFIG_MODULES
	global CONFIG_ARCH_ARCA5K
	global CONFIG_ARCH_ARC
	if {($CONFIG_ARCH_ARCA5K == 1 || $CONFIG_ARCH_ARCA5K == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ARCH_ARCA5K]];set CONFIG_ARCH_ARC [sync_bool $CONFIG_ARCH_ARC $tmpvar_dep 0];set CONFIG_ARCH_ARC [expr $CONFIG_ARCH_ARC&15]}
	global CONFIG_ARCH_A5K
	if {($CONFIG_ARCH_ARCA5K == 1 || $CONFIG_ARCH_ARCA5K == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ARCH_ARCA5K]];set CONFIG_ARCH_A5K [sync_bool $CONFIG_ARCH_A5K $tmpvar_dep 0];set CONFIG_ARCH_A5K [expr $CONFIG_ARCH_A5K&15]}
}


proc menu5 {w title} {
	set oldFocus [focus]
	catch {focus .menu3}
	catch {destroy $w; unregister_active 5}
	toplevel $w -class Dialog
	wm withdraw $w
	global active_menus
	set active_menus [lsort -integer [linsert $active_menus end 5]]
	message $w.m -width 400 -aspect 300 -text \
		"Footbridge Implementations"  -relief raised
	pack $w.m -pady 10 -side top -padx 10
	wm title $w "Footbridge Implementations" 

	bind $w <Escape> "catch {focus $oldFocus}; destroy $w; unregister_active 5; break"
	set nextscript "catch {focus $oldFocus}; destroy $w; unregister_active 5; menu6 .menu6 \"$title\""
	frame $w.f
	button $w.f.back -text "OK" \
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 5"
	button $w.f.next -text "Next" -underline 0\
		-width 15 -command $nextscript
	bind all <Alt-n> $nextscript
	button $w.f.prev -text "Prev" -underline 0\
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 5; menu4 .menu4 \"$title\""
	bind $w <Alt-p> "catch {focus $oldFocus}; destroy $w; unregister_active 5; menu4 .menu4 \"$title\";break"
	pack $w.f.back $w.f.next $w.f.prev -side left -expand on
	pack $w.f -pady 10 -side bottom -anchor w -fill x
	frame $w.topline -relief ridge -borderwidth 2 -height 2
	pack $w.topline -side top -fill x

	frame $w.botline -relief ridge -borderwidth 2 -height 2
	pack $w.botline -side bottom -fill x

	frame $w.config
	pack $w.config -fill y -expand on

	scrollbar $w.config.vscroll -command "$w.config.canvas yview"
	pack $w.config.vscroll -side right -fill y

	canvas $w.config.canvas -height 1\
		-relief flat -borderwidth 0 -yscrollcommand "$w.config.vscroll set" \
		-width [expr [winfo screenwidth .] * 1 / 2] 
	frame $w.config.f
	bind $w <Key-Down> "$w.config.canvas yview scroll  1 unit;break;"
	bind $w <Key-Up> "$w.config.canvas yview scroll  -1 unit;break;"
	bind $w <Key-Next> "$w.config.canvas yview scroll  1 page;break;"
	bind $w <Key-Prior> "$w.config.canvas yview scroll  -1 page;break;"
	bind $w <Key-Home> "$w.config.canvas yview moveto 0;break;"
	bind $w <Key-End> "$w.config.canvas yview moveto 1 ;break;"
	pack $w.config.canvas -side right -fill y


	dep_bool $w.config.f 5 0 "  CATS" CONFIG_ARCH_CATS
	dep_bool $w.config.f 5 1 "  Compaq Personal Server" CONFIG_ARCH_PERSONAL_SERVER
	dep_bool $w.config.f 5 2 "  EBSA285 (addin mode)" CONFIG_ARCH_EBSA285_ADDIN
	dep_bool $w.config.f 5 3 "  EBSA285 (host mode)" CONFIG_ARCH_EBSA285_HOST
	dep_bool $w.config.f 5 4 "  NetWinder" CONFIG_ARCH_NETWINDER



	focus $w
	update_active
	global winx; global winy
	if {[winfo exists .menu3] == 0} then {menu3 .menu3 "System Type"}
	set winx [expr [winfo x .menu3]+30]; set winy [expr [winfo y .menu3]+30]
	if {[winfo exists $w]} then {wm geometry $w +$winx+$winy}
	update idletasks
	if {[winfo exists $w]} then  {$w.config.canvas create window 0 0 -anchor nw -window $w.config.f

	$w.config.canvas configure \
		-width [expr [winfo reqwidth $w.config.f] + 1]\
		-scrollregion "-1 -1 [expr [winfo reqwidth $w.config.f] + 1] \
			 [expr [winfo reqheight $w.config.f] + 1]"

	set winy [expr [winfo reqh $w] - [winfo reqh $w.config.canvas]]
	set scry [expr [winfo screenh $w] / 2]
	set maxy [expr [winfo screenh $w] * 3 / 4]
	set canvtotal [expr [winfo reqh $w.config.f] + 2]
	if [expr $winy + $canvtotal < $maxy] {
		$w.config.canvas configure -height $canvtotal
	} else {
		$w.config.canvas configure -height [expr $scry - $winy]
		}
	}
	update idletasks
	if {[winfo exists $w]} then {
	wm maxsize $w [winfo width $w] [winfo screenheight $w]
	wm minsize $w [winfo width $w] 100

	wm deiconify $w
}
}

proc update_menu5 {} {
	global CONFIG_ARCH_FOOTBRIDGE
	global CONFIG_ARCH_CATS
	if {($CONFIG_ARCH_FOOTBRIDGE == 1 || $CONFIG_ARCH_FOOTBRIDGE == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ARCH_FOOTBRIDGE]];set CONFIG_ARCH_CATS [sync_bool $CONFIG_ARCH_CATS $tmpvar_dep 0];if {$tmpvar_dep != 1} then {configure_entry .menu5.config.f.x0 disabled {y};} else {configure_entry .menu5.config.f.x0 normal {y};}; configure_entry .menu5.config.f.x0 normal {n l}} else {configure_entry .menu5.config.f.x0 disabled {y n l}}
	global CONFIG_ARCH_PERSONAL_SERVER
	if {($CONFIG_ARCH_FOOTBRIDGE == 1 || $CONFIG_ARCH_FOOTBRIDGE == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ARCH_FOOTBRIDGE]];set CONFIG_ARCH_PERSONAL_SERVER [sync_bool $CONFIG_ARCH_PERSONAL_SERVER $tmpvar_dep 0];if {$tmpvar_dep != 1} then {configure_entry .menu5.config.f.x1 disabled {y};} else {configure_entry .menu5.config.f.x1 normal {y};}; configure_entry .menu5.config.f.x1 normal {n l}} else {configure_entry .menu5.config.f.x1 disabled {y n l}}
	global CONFIG_ARCH_EBSA285_ADDIN
	if {($CONFIG_ARCH_FOOTBRIDGE == 1 || $CONFIG_ARCH_FOOTBRIDGE == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ARCH_FOOTBRIDGE]];set CONFIG_ARCH_EBSA285_ADDIN [sync_bool $CONFIG_ARCH_EBSA285_ADDIN $tmpvar_dep 0];if {$tmpvar_dep != 1} then {configure_entry .menu5.config.f.x2 disabled {y};} else {configure_entry .menu5.config.f.x2 normal {y};}; configure_entry .menu5.config.f.x2 normal {n l}} else {configure_entry .menu5.config.f.x2 disabled {y n l}}
	global CONFIG_ARCH_EBSA285_HOST
	if {($CONFIG_ARCH_FOOTBRIDGE == 1 || $CONFIG_ARCH_FOOTBRIDGE == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ARCH_FOOTBRIDGE]];set CONFIG_ARCH_EBSA285_HOST [sync_bool $CONFIG_ARCH_EBSA285_HOST $tmpvar_dep 0];if {$tmpvar_dep != 1} then {configure_entry .menu5.config.f.x3 disabled {y};} else {configure_entry .menu5.config.f.x3 normal {y};}; configure_entry .menu5.config.f.x3 normal {n l}} else {configure_entry .menu5.config.f.x3 disabled {y n l}}
	global CONFIG_ARCH_NETWINDER
	if {($CONFIG_ARCH_FOOTBRIDGE == 1 || $CONFIG_ARCH_FOOTBRIDGE == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ARCH_FOOTBRIDGE]];set CONFIG_ARCH_NETWINDER [sync_bool $CONFIG_ARCH_NETWINDER $tmpvar_dep 0];if {$tmpvar_dep != 1} then {configure_entry .menu5.config.f.x4 disabled {y};} else {configure_entry .menu5.config.f.x4 normal {y};}; configure_entry .menu5.config.f.x4 normal {n l}} else {configure_entry .menu5.config.f.x4 disabled {y n l}}
}


proc update_define_menu5 {} {
	update_define_mainmenu
	global CONFIG_MODULES
	global CONFIG_ARCH_FOOTBRIDGE
	global CONFIG_ARCH_CATS
	if {($CONFIG_ARCH_FOOTBRIDGE == 1 || $CONFIG_ARCH_FOOTBRIDGE == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ARCH_FOOTBRIDGE]];set CONFIG_ARCH_CATS [sync_bool $CONFIG_ARCH_CATS $tmpvar_dep 0];set CONFIG_ARCH_CATS [expr $CONFIG_ARCH_CATS&15]}
	global CONFIG_ARCH_PERSONAL_SERVER
	if {($CONFIG_ARCH_FOOTBRIDGE == 1 || $CONFIG_ARCH_FOOTBRIDGE == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ARCH_FOOTBRIDGE]];set CONFIG_ARCH_PERSONAL_SERVER [sync_bool $CONFIG_ARCH_PERSONAL_SERVER $tmpvar_dep 0];set CONFIG_ARCH_PERSONAL_SERVER [expr $CONFIG_ARCH_PERSONAL_SERVER&15]}
	global CONFIG_ARCH_EBSA285_ADDIN
	if {($CONFIG_ARCH_FOOTBRIDGE == 1 || $CONFIG_ARCH_FOOTBRIDGE == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ARCH_FOOTBRIDGE]];set CONFIG_ARCH_EBSA285_ADDIN [sync_bool $CONFIG_ARCH_EBSA285_ADDIN $tmpvar_dep 0];set CONFIG_ARCH_EBSA285_ADDIN [expr $CONFIG_ARCH_EBSA285_ADDIN&15]}
	global CONFIG_ARCH_EBSA285_HOST
	if {($CONFIG_ARCH_FOOTBRIDGE == 1 || $CONFIG_ARCH_FOOTBRIDGE == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ARCH_FOOTBRIDGE]];set CONFIG_ARCH_EBSA285_HOST [sync_bool $CONFIG_ARCH_EBSA285_HOST $tmpvar_dep 0];set CONFIG_ARCH_EBSA285_HOST [expr $CONFIG_ARCH_EBSA285_HOST&15]}
	global CONFIG_ARCH_NETWINDER
	if {($CONFIG_ARCH_FOOTBRIDGE == 1 || $CONFIG_ARCH_FOOTBRIDGE == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ARCH_FOOTBRIDGE]];set CONFIG_ARCH_NETWINDER [sync_bool $CONFIG_ARCH_NETWINDER $tmpvar_dep 0];set CONFIG_ARCH_NETWINDER [expr $CONFIG_ARCH_NETWINDER&15]}
}


proc menu6 {w title} {
	set oldFocus [focus]
	catch {focus .menu3}
	catch {destroy $w; unregister_active 6}
	toplevel $w -class Dialog
	wm withdraw $w
	global active_menus
	set active_menus [lsort -integer [linsert $active_menus end 6]]
	message $w.m -width 400 -aspect 300 -text \
		"SA11x0 Implementations"  -relief raised
	pack $w.m -pady 10 -side top -padx 10
	wm title $w "SA11x0 Implementations" 

	bind $w <Escape> "catch {focus $oldFocus}; destroy $w; unregister_active 6; break"
	set nextscript "catch {focus $oldFocus}; destroy $w; unregister_active 6; menu7 .menu7 \"$title\""
	frame $w.f
	button $w.f.back -text "OK" \
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 6"
	button $w.f.next -text "Next" -underline 0\
		-width 15 -command $nextscript
	bind all <Alt-n> $nextscript
	button $w.f.prev -text "Prev" -underline 0\
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 6; menu5 .menu5 \"$title\""
	bind $w <Alt-p> "catch {focus $oldFocus}; destroy $w; unregister_active 6; menu5 .menu5 \"$title\";break"
	pack $w.f.back $w.f.next $w.f.prev -side left -expand on
	pack $w.f -pady 10 -side bottom -anchor w -fill x
	frame $w.topline -relief ridge -borderwidth 2 -height 2
	pack $w.topline -side top -fill x

	frame $w.botline -relief ridge -borderwidth 2 -height 2
	pack $w.botline -side bottom -fill x

	frame $w.config
	pack $w.config -fill y -expand on

	scrollbar $w.config.vscroll -command "$w.config.canvas yview"
	pack $w.config.vscroll -side right -fill y

	canvas $w.config.canvas -height 1\
		-relief flat -borderwidth 0 -yscrollcommand "$w.config.vscroll set" \
		-width [expr [winfo screenwidth .] * 1 / 2] 
	frame $w.config.f
	bind $w <Key-Down> "$w.config.canvas yview scroll  1 unit;break;"
	bind $w <Key-Up> "$w.config.canvas yview scroll  -1 unit;break;"
	bind $w <Key-Next> "$w.config.canvas yview scroll  1 page;break;"
	bind $w <Key-Prior> "$w.config.canvas yview scroll  -1 page;break;"
	bind $w <Key-Home> "$w.config.canvas yview moveto 0;break;"
	bind $w <Key-End> "$w.config.canvas yview moveto 1 ;break;"
	pack $w.config.canvas -side right -fill y


	dep_bool $w.config.f 6 0 "  ACCELENT DevBoard" CONFIG_SA1100_ACCELENT
	dep_bool $w.config.f 6 1 "  Assabet" CONFIG_SA1100_ASSABET
	dep_bool $w.config.f 6 2 "    Include support for Neponset" CONFIG_ASSABET_NEPONSET
	dep_bool $w.config.f 6 3 "  ADS Advanced Graphics Client" CONFIG_SA1100_ADSAGC
	dep_bool $w.config.f 6 4 "  ADS Bitsy" CONFIG_SA1100_ADSBITSY
	dep_bool $w.config.f 6 5 "  ADS Bitsy Plus" CONFIG_SA1100_ADSBITSYPLUS
	dep_bool $w.config.f 6 6 "  Brutus" CONFIG_SA1100_BRUTUS
	dep_bool $w.config.f 6 7 "  Cep" CONFIG_SA1100_CEP
	dep_bool $w.config.f 6 8 "  CerfBoard" CONFIG_SA1100_CERF
	global tmpvar_1
	minimenu $w.config.f 6 9 "Cerf RAM available" tmpvar_1 CONFIG_SA1100_CERF_8MB
	menu $w.config.f.x9.x.menu -tearoffcommand "menutitle \"Cerf RAM available\""
	$w.config.f.x9.x.menu add radiobutton -label "8MB" -variable tmpvar_1 -value "8MB" -command "update_active"
	$w.config.f.x9.x.menu add radiobutton -label "16MB" -variable tmpvar_1 -value "16MB" -command "update_active"
	$w.config.f.x9.x.menu add radiobutton -label "32MB" -variable tmpvar_1 -value "32MB" -command "update_active"
	$w.config.f.x9.x.menu add radiobutton -label "64MB" -variable tmpvar_1 -value "64MB" -command "update_active"
	menusplit $w $w.config.f.x9.x.menu 4
	global tmpvar_2
	minimenu $w.config.f 6 10 "Cerf Flash available" tmpvar_2 CONFIG_SA1100_CERF_FLASH_8MB
	menu $w.config.f.x10.x.menu -tearoffcommand "menutitle \"Cerf Flash available\""
	$w.config.f.x10.x.menu add radiobutton -label "8MB" -variable tmpvar_2 -value "8MB" -command "update_active"
	$w.config.f.x10.x.menu add radiobutton -label "16MB" -variable tmpvar_2 -value "16MB" -command "update_active"
	$w.config.f.x10.x.menu add radiobutton -label "32MB" -variable tmpvar_2 -value "32MB" -command "update_active"
	menusplit $w $w.config.f.x10.x.menu 3
	bool $w.config.f 6 11 "Cerf w/CPLD support (CerfPDA)" CONFIG_SA1100_CERF_CPLD
	dep_bool $w.config.f 6 12 "  Compaq iPAQ H3100" CONFIG_SA1100_H3100
	dep_bool $w.config.f 6 13 "  Compaq iPAQ H3600/H3700" CONFIG_SA1100_H3600
	dep_bool $w.config.f 6 14 "  Compaq iPAQ H3800" CONFIG_SA1100_H3800
	dep_tristate $w.config.f 6 15 "Compaq iPAQ Handheld sleeve support" CONFIG_H3600_SLEEVE
	dep_bool $w.config.f 6 16 "  Extenex HandHeld Theater (Squashtail)" CONFIG_SA1100_EXTENEX1
	bool $w.config.f 6 17 "    Support 16 MB of DRAM (not just 8)" CONFIG_SA1100_EXTENEX1_16MB
	dep_bool $w.config.f 6 18 "  FlexaNet" CONFIG_SA1100_FLEXANET
	dep_bool $w.config.f 6 19 "  FreeBird-v1.1" CONFIG_SA1100_FREEBIRD
	dep_bool $w.config.f 6 20 "  Frodo" CONFIG_SA1100_FRODO
	dep_bool $w.config.f 6 21 "  GraphicsClient Plus" CONFIG_SA1100_GRAPHICSCLIENT
	dep_bool $w.config.f 6 22 "  GraphicsMaster" CONFIG_SA1100_GRAPHICSMASTER
	dep_bool $w.config.f 6 23 "  HackKit Core Board" CONFIG_SA1100_HACKKIT
	dep_bool $w.config.f 6 24 "  HP Labs BadgePAD 4" CONFIG_SA1100_BADGE4
	dep_bool $w.config.f 6 25 "  HP Jornada 720" CONFIG_SA1100_JORNADA720
	dep_bool $w.config.f 6 26 "  HuW WebPanel" CONFIG_SA1100_HUW_WEBPANEL
	dep_bool $w.config.f 6 27 "  Itsy" CONFIG_SA1100_ITSY
	dep_bool $w.config.f 6 28 "  LART" CONFIG_SA1100_LART
	dep_bool $w.config.f 6 29 "  nanoEngine" CONFIG_SA1100_NANOENGINE
	dep_bool $w.config.f 6 30 "  OmniMeter" CONFIG_SA1100_OMNIMETER
	dep_bool $w.config.f 6 31 "  Pangolin" CONFIG_SA1100_PANGOLIN
	dep_bool $w.config.f 6 32 "  PLEB" CONFIG_SA1100_PLEB
	dep_bool $w.config.f 6 33 "  PT System 3" CONFIG_SA1100_PT_SYSTEM3
	dep_bool $w.config.f 6 34 "  Shannon" CONFIG_SA1100_SHANNON
	dep_bool $w.config.f 6 35 "  Sherman" CONFIG_SA1100_SHERMAN
	dep_bool $w.config.f 6 36 "  Simpad" CONFIG_SA1100_SIMPAD
	dep_bool $w.config.f 6 37 "  Simputer" CONFIG_SA1100_SIMPUTER
	dep_bool $w.config.f 6 38 "  Tulsa" CONFIG_SA1100_PFS168
	dep_bool $w.config.f 6 39 "  Victor" CONFIG_SA1100_VICTOR
	dep_bool $w.config.f 6 40 "  XP860" CONFIG_SA1100_XP860
	dep_bool $w.config.f 6 41 "  Yopy" CONFIG_SA1100_YOPY
	dep_tristate $w.config.f 6 42 "SA1100 USB function support" CONFIG_SA1100_USB
	dep_tristate $w.config.f 6 43 "  Support for SA11x0 USB network link function" CONFIG_SA1100_USB_NETLINK
	dep_tristate $w.config.f 6 44 "  Support for SA11x0 USB character device emulation" CONFIG_SA1100_USB_CHAR
	dep_tristate $w.config.f 6 45 "SA1100 Generic PIO SSP support" CONFIG_SA1100_SSP



	focus $w
	update_active
	global winx; global winy
	if {[winfo exists .menu3] == 0} then {menu3 .menu3 "System Type"}
	set winx [expr [winfo x .menu3]+30]; set winy [expr [winfo y .menu3]+30]
	if {[winfo exists $w]} then {wm geometry $w +$winx+$winy}
	update idletasks
	if {[winfo exists $w]} then  {$w.config.canvas create window 0 0 -anchor nw -window $w.config.f

	$w.config.canvas configure \
		-width [expr [winfo reqwidth $w.config.f] + 1]\
		-scrollregion "-1 -1 [expr [winfo reqwidth $w.config.f] + 1] \
			 [expr [winfo reqheight $w.config.f] + 1]"

	set winy [expr [winfo reqh $w] - [winfo reqh $w.config.canvas]]
	set scry [expr [winfo screenh $w] / 2]
	set maxy [expr [winfo screenh $w] * 3 / 4]
	set canvtotal [expr [winfo reqh $w.config.f] + 2]
	if [expr $winy + $canvtotal < $maxy] {
		$w.config.canvas configure -height $canvtotal
	} else {
		$w.config.canvas configure -height [expr $scry - $winy]
		}
	}
	update idletasks
	if {[winfo exists $w]} then {
	wm maxsize $w [winfo width $w] [winfo screenheight $w]
	wm minsize $w [winfo width $w] 100

	wm deiconify $w
}
}

proc update_menu6 {} {
	global CONFIG_ARCH_SA1100
	global CONFIG_SA1100_ACCELENT
	if {($CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_SA1100 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ARCH_SA1100]];set CONFIG_SA1100_ACCELENT [sync_bool $CONFIG_SA1100_ACCELENT $tmpvar_dep 0];if {$tmpvar_dep != 1} then {configure_entry .menu6.config.f.x0 disabled {y};} else {configure_entry .menu6.config.f.x0 normal {y};}; configure_entry .menu6.config.f.x0 normal {n l}} else {configure_entry .menu6.config.f.x0 disabled {y n l}}
	global CONFIG_SA1100_ASSABET
	if {($CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_SA1100 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ARCH_SA1100]];set CONFIG_SA1100_ASSABET [sync_bool $CONFIG_SA1100_ASSABET $tmpvar_dep 0];if {$tmpvar_dep != 1} then {configure_entry .menu6.config.f.x1 disabled {y};} else {configure_entry .menu6.config.f.x1 normal {y};}; configure_entry .menu6.config.f.x1 normal {n l}} else {configure_entry .menu6.config.f.x1 disabled {y n l}}
	global CONFIG_ASSABET_NEPONSET
	if {($CONFIG_SA1100_ASSABET == 1 || $CONFIG_SA1100_ASSABET == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SA1100_ASSABET]];set CONFIG_ASSABET_NEPONSET [sync_bool $CONFIG_ASSABET_NEPONSET $tmpvar_dep 0];if {$tmpvar_dep != 1} then {configure_entry .menu6.config.f.x2 disabled {y};} else {configure_entry .menu6.config.f.x2 normal {y};}; configure_entry .menu6.config.f.x2 normal {n l}} else {configure_entry .menu6.config.f.x2 disabled {y n l}}
	global CONFIG_SA1100_ADSAGC
	if {($CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_SA1100 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ARCH_SA1100]];set CONFIG_SA1100_ADSAGC [sync_bool $CONFIG_SA1100_ADSAGC $tmpvar_dep 0];if {$tmpvar_dep != 1} then {configure_entry .menu6.config.f.x3 disabled {y};} else {configure_entry .menu6.config.f.x3 normal {y};}; configure_entry .menu6.config.f.x3 normal {n l}} else {configure_entry .menu6.config.f.x3 disabled {y n l}}
	global CONFIG_SA1100_ADSBITSY
	if {($CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_SA1100 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ARCH_SA1100]];set CONFIG_SA1100_ADSBITSY [sync_bool $CONFIG_SA1100_ADSBITSY $tmpvar_dep 0];if {$tmpvar_dep != 1} then {configure_entry .menu6.config.f.x4 disabled {y};} else {configure_entry .menu6.config.f.x4 normal {y};}; configure_entry .menu6.config.f.x4 normal {n l}} else {configure_entry .menu6.config.f.x4 disabled {y n l}}
	global CONFIG_SA1100_ADSBITSYPLUS
	if {($CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_SA1100 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ARCH_SA1100]];set CONFIG_SA1100_ADSBITSYPLUS [sync_bool $CONFIG_SA1100_ADSBITSYPLUS $tmpvar_dep 0];if {$tmpvar_dep != 1} then {configure_entry .menu6.config.f.x5 disabled {y};} else {configure_entry .menu6.config.f.x5 normal {y};}; configure_entry .menu6.config.f.x5 normal {n l}} else {configure_entry .menu6.config.f.x5 disabled {y n l}}
	global CONFIG_SA1100_BRUTUS
	if {($CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_SA1100 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ARCH_SA1100]];set CONFIG_SA1100_BRUTUS [sync_bool $CONFIG_SA1100_BRUTUS $tmpvar_dep 0];if {$tmpvar_dep != 1} then {configure_entry .menu6.config.f.x6 disabled {y};} else {configure_entry .menu6.config.f.x6 normal {y};}; configure_entry .menu6.config.f.x6 normal {n l}} else {configure_entry .menu6.config.f.x6 disabled {y n l}}
	global CONFIG_SA1100_CEP
	if {($CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_SA1100 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ARCH_SA1100]];set CONFIG_SA1100_CEP [sync_bool $CONFIG_SA1100_CEP $tmpvar_dep 0];if {$tmpvar_dep != 1} then {configure_entry .menu6.config.f.x7 disabled {y};} else {configure_entry .menu6.config.f.x7 normal {y};}; configure_entry .menu6.config.f.x7 normal {n l}} else {configure_entry .menu6.config.f.x7 disabled {y n l}}
	global CONFIG_SA1100_CERF
	if {($CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_SA1100 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ARCH_SA1100]];set CONFIG_SA1100_CERF [sync_bool $CONFIG_SA1100_CERF $tmpvar_dep 0];if {$tmpvar_dep != 1} then {configure_entry .menu6.config.f.x8 disabled {y};} else {configure_entry .menu6.config.f.x8 normal {y};}; configure_entry .menu6.config.f.x8 normal {n l}} else {configure_entry .menu6.config.f.x8 disabled {y n l}}
	if {($CONFIG_SA1100_CERF == 1)} then {configure_entry .menu6.config.f.x9 normal {x l}} else {configure_entry .menu6.config.f.x9 disabled {x l}}
	if {($CONFIG_SA1100_CERF == 1)} then {configure_entry .menu6.config.f.x10 normal {x l}} else {configure_entry .menu6.config.f.x10 disabled {x l}}
	global CONFIG_SA1100_CERF_CPLD
	if {($CONFIG_SA1100_CERF == 1)} then {
	configure_entry .menu6.config.f.x11 normal {n l y}} else {configure_entry .menu6.config.f.x11 disabled {y n l}}
	global CONFIG_SA1100_H3100
	if {($CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_SA1100 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ARCH_SA1100]];set CONFIG_SA1100_H3100 [sync_bool $CONFIG_SA1100_H3100 $tmpvar_dep 0];if {$tmpvar_dep != 1} then {configure_entry .menu6.config.f.x12 disabled {y};} else {configure_entry .menu6.config.f.x12 normal {y};}; configure_entry .menu6.config.f.x12 normal {n l}} else {configure_entry .menu6.config.f.x12 disabled {y n l}}
	global CONFIG_SA1100_H3600
	if {($CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_SA1100 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ARCH_SA1100]];set CONFIG_SA1100_H3600 [sync_bool $CONFIG_SA1100_H3600 $tmpvar_dep 0];if {$tmpvar_dep != 1} then {configure_entry .menu6.config.f.x13 disabled {y};} else {configure_entry .menu6.config.f.x13 normal {y};}; configure_entry .menu6.config.f.x13 normal {n l}} else {configure_entry .menu6.config.f.x13 disabled {y n l}}
	global CONFIG_SA1100_H3800
	if {($CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_SA1100 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ARCH_SA1100]];set CONFIG_SA1100_H3800 [sync_bool $CONFIG_SA1100_H3800 $tmpvar_dep 0];if {$tmpvar_dep != 1} then {configure_entry .menu6.config.f.x14 disabled {y};} else {configure_entry .menu6.config.f.x14 normal {y};}; configure_entry .menu6.config.f.x14 normal {n l}} else {configure_entry .menu6.config.f.x14 disabled {y n l}}
	global CONFIG_MODULES
	global CONFIG_H3600_SLEEVE
	if {($CONFIG_SA1100_H3600 == 1 || $CONFIG_SA1100_H3600 == 2 || $CONFIG_SA1100_H3600 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SA1100_H3600]];set CONFIG_H3600_SLEEVE [sync_tristate $CONFIG_H3600_SLEEVE $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu6.config.f.x15 disabled {y}} else {configure_entry .menu6.config.f.x15 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu6.config.f.x15 disabled {m}} else {configure_entry .menu6.config.f.x15 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu6.config.f.x15 normal {m}} else {configure_entry .menu6.config.f.x15 disabled {m}}; configure_entry .menu6.config.f.x15 normal {n l}} else {configure_entry .menu6.config.f.x15 disabled {y n m l}}
	global CONFIG_SA1100_EXTENEX1
	if {($CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_SA1100 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ARCH_SA1100]];set CONFIG_SA1100_EXTENEX1 [sync_bool $CONFIG_SA1100_EXTENEX1 $tmpvar_dep 0];if {$tmpvar_dep != 1} then {configure_entry .menu6.config.f.x16 disabled {y};} else {configure_entry .menu6.config.f.x16 normal {y};}; configure_entry .menu6.config.f.x16 normal {n l}} else {configure_entry .menu6.config.f.x16 disabled {y n l}}
	global CONFIG_SA1100_EXTENEX1_16MB
	if {($CONFIG_SA1100_EXTENEX1 == 1)} then {
	configure_entry .menu6.config.f.x17 normal {n l y}} else {configure_entry .menu6.config.f.x17 disabled {y n l}}
	global CONFIG_SA1100_FLEXANET
	if {($CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_SA1100 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ARCH_SA1100]];set CONFIG_SA1100_FLEXANET [sync_bool $CONFIG_SA1100_FLEXANET $tmpvar_dep 0];if {$tmpvar_dep != 1} then {configure_entry .menu6.config.f.x18 disabled {y};} else {configure_entry .menu6.config.f.x18 normal {y};}; configure_entry .menu6.config.f.x18 normal {n l}} else {configure_entry .menu6.config.f.x18 disabled {y n l}}
	global CONFIG_SA1100_FREEBIRD
	if {($CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_SA1100 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ARCH_SA1100]];set CONFIG_SA1100_FREEBIRD [sync_bool $CONFIG_SA1100_FREEBIRD $tmpvar_dep 0];if {$tmpvar_dep != 1} then {configure_entry .menu6.config.f.x19 disabled {y};} else {configure_entry .menu6.config.f.x19 normal {y};}; configure_entry .menu6.config.f.x19 normal {n l}} else {configure_entry .menu6.config.f.x19 disabled {y n l}}
	global CONFIG_SA1100_FRODO
	if {($CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_SA1100 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ARCH_SA1100]];set CONFIG_SA1100_FRODO [sync_bool $CONFIG_SA1100_FRODO $tmpvar_dep 0];if {$tmpvar_dep != 1} then {configure_entry .menu6.config.f.x20 disabled {y};} else {configure_entry .menu6.config.f.x20 normal {y};}; configure_entry .menu6.config.f.x20 normal {n l}} else {configure_entry .menu6.config.f.x20 disabled {y n l}}
	global CONFIG_SA1100_GRAPHICSCLIENT
	if {($CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_SA1100 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ARCH_SA1100]];set CONFIG_SA1100_GRAPHICSCLIENT [sync_bool $CONFIG_SA1100_GRAPHICSCLIENT $tmpvar_dep 0];if {$tmpvar_dep != 1} then {configure_entry .menu6.config.f.x21 disabled {y};} else {configure_entry .menu6.config.f.x21 normal {y};}; configure_entry .menu6.config.f.x21 normal {n l}} else {configure_entry .menu6.config.f.x21 disabled {y n l}}
	global CONFIG_SA1100_GRAPHICSMASTER
	if {($CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_SA1100 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ARCH_SA1100]];set CONFIG_SA1100_GRAPHICSMASTER [sync_bool $CONFIG_SA1100_GRAPHICSMASTER $tmpvar_dep 0];if {$tmpvar_dep != 1} then {configure_entry .menu6.config.f.x22 disabled {y};} else {configure_entry .menu6.config.f.x22 normal {y};}; configure_entry .menu6.config.f.x22 normal {n l}} else {configure_entry .menu6.config.f.x22 disabled {y n l}}
	global CONFIG_SA1100_HACKKIT
	if {($CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_SA1100 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ARCH_SA1100]];set CONFIG_SA1100_HACKKIT [sync_bool $CONFIG_SA1100_HACKKIT $tmpvar_dep 0];if {$tmpvar_dep != 1} then {configure_entry .menu6.config.f.x23 disabled {y};} else {configure_entry .menu6.config.f.x23 normal {y};}; configure_entry .menu6.config.f.x23 normal {n l}} else {configure_entry .menu6.config.f.x23 disabled {y n l}}
	global CONFIG_SA1100_BADGE4
	if {($CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_SA1100 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ARCH_SA1100]];set CONFIG_SA1100_BADGE4 [sync_bool $CONFIG_SA1100_BADGE4 $tmpvar_dep 0];if {$tmpvar_dep != 1} then {configure_entry .menu6.config.f.x24 disabled {y};} else {configure_entry .menu6.config.f.x24 normal {y};}; configure_entry .menu6.config.f.x24 normal {n l}} else {configure_entry .menu6.config.f.x24 disabled {y n l}}
	global CONFIG_SA1100_JORNADA720
	if {($CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_SA1100 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ARCH_SA1100]];set CONFIG_SA1100_JORNADA720 [sync_bool $CONFIG_SA1100_JORNADA720 $tmpvar_dep 0];if {$tmpvar_dep != 1} then {configure_entry .menu6.config.f.x25 disabled {y};} else {configure_entry .menu6.config.f.x25 normal {y};}; configure_entry .menu6.config.f.x25 normal {n l}} else {configure_entry .menu6.config.f.x25 disabled {y n l}}
	global CONFIG_SA1100_HUW_WEBPANEL
	if {($CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_SA1100 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ARCH_SA1100]];set CONFIG_SA1100_HUW_WEBPANEL [sync_bool $CONFIG_SA1100_HUW_WEBPANEL $tmpvar_dep 0];if {$tmpvar_dep != 1} then {configure_entry .menu6.config.f.x26 disabled {y};} else {configure_entry .menu6.config.f.x26 normal {y};}; configure_entry .menu6.config.f.x26 normal {n l}} else {configure_entry .menu6.config.f.x26 disabled {y n l}}
	global CONFIG_SA1100_ITSY
	if {($CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_SA1100 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ARCH_SA1100]];set CONFIG_SA1100_ITSY [sync_bool $CONFIG_SA1100_ITSY $tmpvar_dep 0];if {$tmpvar_dep != 1} then {configure_entry .menu6.config.f.x27 disabled {y};} else {configure_entry .menu6.config.f.x27 normal {y};}; configure_entry .menu6.config.f.x27 normal {n l}} else {configure_entry .menu6.config.f.x27 disabled {y n l}}
	global CONFIG_SA1100_LART
	if {($CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_SA1100 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ARCH_SA1100]];set CONFIG_SA1100_LART [sync_bool $CONFIG_SA1100_LART $tmpvar_dep 0];if {$tmpvar_dep != 1} then {configure_entry .menu6.config.f.x28 disabled {y};} else {configure_entry .menu6.config.f.x28 normal {y};}; configure_entry .menu6.config.f.x28 normal {n l}} else {configure_entry .menu6.config.f.x28 disabled {y n l}}
	global CONFIG_SA1100_NANOENGINE
	if {($CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_SA1100 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ARCH_SA1100]];set CONFIG_SA1100_NANOENGINE [sync_bool $CONFIG_SA1100_NANOENGINE $tmpvar_dep 0];if {$tmpvar_dep != 1} then {configure_entry .menu6.config.f.x29 disabled {y};} else {configure_entry .menu6.config.f.x29 normal {y};}; configure_entry .menu6.config.f.x29 normal {n l}} else {configure_entry .menu6.config.f.x29 disabled {y n l}}
	global CONFIG_SA1100_OMNIMETER
	if {($CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_SA1100 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ARCH_SA1100]];set CONFIG_SA1100_OMNIMETER [sync_bool $CONFIG_SA1100_OMNIMETER $tmpvar_dep 0];if {$tmpvar_dep != 1} then {configure_entry .menu6.config.f.x30 disabled {y};} else {configure_entry .menu6.config.f.x30 normal {y};}; configure_entry .menu6.config.f.x30 normal {n l}} else {configure_entry .menu6.config.f.x30 disabled {y n l}}
	global CONFIG_SA1100_PANGOLIN
	if {($CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_SA1100 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ARCH_SA1100]];set CONFIG_SA1100_PANGOLIN [sync_bool $CONFIG_SA1100_PANGOLIN $tmpvar_dep 0];if {$tmpvar_dep != 1} then {configure_entry .menu6.config.f.x31 disabled {y};} else {configure_entry .menu6.config.f.x31 normal {y};}; configure_entry .menu6.config.f.x31 normal {n l}} else {configure_entry .menu6.config.f.x31 disabled {y n l}}
	global CONFIG_SA1100_PLEB
	if {($CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_SA1100 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ARCH_SA1100]];set CONFIG_SA1100_PLEB [sync_bool $CONFIG_SA1100_PLEB $tmpvar_dep 0];if {$tmpvar_dep != 1} then {configure_entry .menu6.config.f.x32 disabled {y};} else {configure_entry .menu6.config.f.x32 normal {y};}; configure_entry .menu6.config.f.x32 normal {n l}} else {configure_entry .menu6.config.f.x32 disabled {y n l}}
	global CONFIG_SA1100_PT_SYSTEM3
	if {($CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_SA1100 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ARCH_SA1100]];set CONFIG_SA1100_PT_SYSTEM3 [sync_bool $CONFIG_SA1100_PT_SYSTEM3 $tmpvar_dep 0];if {$tmpvar_dep != 1} then {configure_entry .menu6.config.f.x33 disabled {y};} else {configure_entry .menu6.config.f.x33 normal {y};}; configure_entry .menu6.config.f.x33 normal {n l}} else {configure_entry .menu6.config.f.x33 disabled {y n l}}
	global CONFIG_SA1100_SHANNON
	if {($CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_SA1100 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ARCH_SA1100]];set CONFIG_SA1100_SHANNON [sync_bool $CONFIG_SA1100_SHANNON $tmpvar_dep 0];if {$tmpvar_dep != 1} then {configure_entry .menu6.config.f.x34 disabled {y};} else {configure_entry .menu6.config.f.x34 normal {y};}; configure_entry .menu6.config.f.x34 normal {n l}} else {configure_entry .menu6.config.f.x34 disabled {y n l}}
	global CONFIG_SA1100_SHERMAN
	if {($CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_SA1100 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ARCH_SA1100]];set CONFIG_SA1100_SHERMAN [sync_bool $CONFIG_SA1100_SHERMAN $tmpvar_dep 0];if {$tmpvar_dep != 1} then {configure_entry .menu6.config.f.x35 disabled {y};} else {configure_entry .menu6.config.f.x35 normal {y};}; configure_entry .menu6.config.f.x35 normal {n l}} else {configure_entry .menu6.config.f.x35 disabled {y n l}}
	global CONFIG_SA1100_SIMPAD
	if {($CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_SA1100 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ARCH_SA1100]];set CONFIG_SA1100_SIMPAD [sync_bool $CONFIG_SA1100_SIMPAD $tmpvar_dep 0];if {$tmpvar_dep != 1} then {configure_entry .menu6.config.f.x36 disabled {y};} else {configure_entry .menu6.config.f.x36 normal {y};}; configure_entry .menu6.config.f.x36 normal {n l}} else {configure_entry .menu6.config.f.x36 disabled {y n l}}
	global CONFIG_SA1100_SIMPUTER
	if {($CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_SA1100 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ARCH_SA1100]];set CONFIG_SA1100_SIMPUTER [sync_bool $CONFIG_SA1100_SIMPUTER $tmpvar_dep 0];if {$tmpvar_dep != 1} then {configure_entry .menu6.config.f.x37 disabled {y};} else {configure_entry .menu6.config.f.x37 normal {y};}; configure_entry .menu6.config.f.x37 normal {n l}} else {configure_entry .menu6.config.f.x37 disabled {y n l}}
	global CONFIG_SA1100_PFS168
	if {($CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_SA1100 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ARCH_SA1100]];set CONFIG_SA1100_PFS168 [sync_bool $CONFIG_SA1100_PFS168 $tmpvar_dep 0];if {$tmpvar_dep != 1} then {configure_entry .menu6.config.f.x38 disabled {y};} else {configure_entry .menu6.config.f.x38 normal {y};}; configure_entry .menu6.config.f.x38 normal {n l}} else {configure_entry .menu6.config.f.x38 disabled {y n l}}
	global CONFIG_SA1100_VICTOR
	if {($CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_SA1100 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ARCH_SA1100]];set CONFIG_SA1100_VICTOR [sync_bool $CONFIG_SA1100_VICTOR $tmpvar_dep 0];if {$tmpvar_dep != 1} then {configure_entry .menu6.config.f.x39 disabled {y};} else {configure_entry .menu6.config.f.x39 normal {y};}; configure_entry .menu6.config.f.x39 normal {n l}} else {configure_entry .menu6.config.f.x39 disabled {y n l}}
	global CONFIG_SA1100_XP860
	if {($CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_SA1100 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ARCH_SA1100]];set CONFIG_SA1100_XP860 [sync_bool $CONFIG_SA1100_XP860 $tmpvar_dep 0];if {$tmpvar_dep != 1} then {configure_entry .menu6.config.f.x40 disabled {y};} else {configure_entry .menu6.config.f.x40 normal {y};}; configure_entry .menu6.config.f.x40 normal {n l}} else {configure_entry .menu6.config.f.x40 disabled {y n l}}
	global CONFIG_SA1100_YOPY
	if {($CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_SA1100 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ARCH_SA1100]];set CONFIG_SA1100_YOPY [sync_bool $CONFIG_SA1100_YOPY $tmpvar_dep 0];if {$tmpvar_dep != 1} then {configure_entry .menu6.config.f.x41 disabled {y};} else {configure_entry .menu6.config.f.x41 normal {y};}; configure_entry .menu6.config.f.x41 normal {n l}} else {configure_entry .menu6.config.f.x41 disabled {y n l}}
	global CONFIG_SA1100_USB
	if {($CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_SA1100 == 2 || $CONFIG_ARCH_SA1100 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ARCH_SA1100]];set CONFIG_SA1100_USB [sync_tristate $CONFIG_SA1100_USB $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu6.config.f.x42 disabled {y}} else {configure_entry .menu6.config.f.x42 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu6.config.f.x42 disabled {m}} else {configure_entry .menu6.config.f.x42 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu6.config.f.x42 normal {m}} else {configure_entry .menu6.config.f.x42 disabled {m}}; configure_entry .menu6.config.f.x42 normal {n l}} else {configure_entry .menu6.config.f.x42 disabled {y n m l}}
	global CONFIG_SA1100_USB_NETLINK
	if {($CONFIG_SA1100_USB == 1 || $CONFIG_SA1100_USB == 2 || $CONFIG_SA1100_USB == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SA1100_USB]];set CONFIG_SA1100_USB_NETLINK [sync_tristate $CONFIG_SA1100_USB_NETLINK $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu6.config.f.x43 disabled {y}} else {configure_entry .menu6.config.f.x43 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu6.config.f.x43 disabled {m}} else {configure_entry .menu6.config.f.x43 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu6.config.f.x43 normal {m}} else {configure_entry .menu6.config.f.x43 disabled {m}}; configure_entry .menu6.config.f.x43 normal {n l}} else {configure_entry .menu6.config.f.x43 disabled {y n m l}}
	global CONFIG_SA1100_USB_CHAR
	if {($CONFIG_SA1100_USB == 1 || $CONFIG_SA1100_USB == 2 || $CONFIG_SA1100_USB == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SA1100_USB]];set CONFIG_SA1100_USB_CHAR [sync_tristate $CONFIG_SA1100_USB_CHAR $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu6.config.f.x44 disabled {y}} else {configure_entry .menu6.config.f.x44 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu6.config.f.x44 disabled {m}} else {configure_entry .menu6.config.f.x44 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu6.config.f.x44 normal {m}} else {configure_entry .menu6.config.f.x44 disabled {m}}; configure_entry .menu6.config.f.x44 normal {n l}} else {configure_entry .menu6.config.f.x44 disabled {y n m l}}
	global CONFIG_SA1100_SSP
	if {($CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_SA1100 == 2 || $CONFIG_ARCH_SA1100 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ARCH_SA1100]];set CONFIG_SA1100_SSP [sync_tristate $CONFIG_SA1100_SSP $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu6.config.f.x45 disabled {y}} else {configure_entry .menu6.config.f.x45 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu6.config.f.x45 disabled {m}} else {configure_entry .menu6.config.f.x45 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu6.config.f.x45 normal {m}} else {configure_entry .menu6.config.f.x45 disabled {m}}; configure_entry .menu6.config.f.x45 normal {n l}} else {configure_entry .menu6.config.f.x45 disabled {y n m l}}
}


proc update_define_menu6 {} {
	update_define_mainmenu
	global CONFIG_MODULES
	global CONFIG_SA1100_H3XXX
	global CONFIG_SA1100_CERF_CPLD
set CONFIG_SA1100_CERF_CPLD [expr $CONFIG_SA1100_CERF_CPLD|16]
	global CONFIG_SA1100_EXTENEX1_16MB
set CONFIG_SA1100_EXTENEX1_16MB [expr $CONFIG_SA1100_EXTENEX1_16MB|16]
	global CONFIG_ARCH_SA1100
	global CONFIG_SA1100_ACCELENT
	if {($CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_SA1100 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ARCH_SA1100]];set CONFIG_SA1100_ACCELENT [sync_bool $CONFIG_SA1100_ACCELENT $tmpvar_dep 0];set CONFIG_SA1100_ACCELENT [expr $CONFIG_SA1100_ACCELENT&15]}
	global CONFIG_SA1100_ASSABET
	if {($CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_SA1100 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ARCH_SA1100]];set CONFIG_SA1100_ASSABET [sync_bool $CONFIG_SA1100_ASSABET $tmpvar_dep 0];set CONFIG_SA1100_ASSABET [expr $CONFIG_SA1100_ASSABET&15]}
	global CONFIG_ASSABET_NEPONSET
	if {($CONFIG_SA1100_ASSABET == 1 || $CONFIG_SA1100_ASSABET == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SA1100_ASSABET]];set CONFIG_ASSABET_NEPONSET [sync_bool $CONFIG_ASSABET_NEPONSET $tmpvar_dep 0];set CONFIG_ASSABET_NEPONSET [expr $CONFIG_ASSABET_NEPONSET&15]}
	global CONFIG_SA1100_ADSAGC
	if {($CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_SA1100 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ARCH_SA1100]];set CONFIG_SA1100_ADSAGC [sync_bool $CONFIG_SA1100_ADSAGC $tmpvar_dep 0];set CONFIG_SA1100_ADSAGC [expr $CONFIG_SA1100_ADSAGC&15]}
	global CONFIG_SA1100_ADSBITSY
	if {($CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_SA1100 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ARCH_SA1100]];set CONFIG_SA1100_ADSBITSY [sync_bool $CONFIG_SA1100_ADSBITSY $tmpvar_dep 0];set CONFIG_SA1100_ADSBITSY [expr $CONFIG_SA1100_ADSBITSY&15]}
	global CONFIG_SA1100_ADSBITSYPLUS
	if {($CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_SA1100 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ARCH_SA1100]];set CONFIG_SA1100_ADSBITSYPLUS [sync_bool $CONFIG_SA1100_ADSBITSYPLUS $tmpvar_dep 0];set CONFIG_SA1100_ADSBITSYPLUS [expr $CONFIG_SA1100_ADSBITSYPLUS&15]}
	global CONFIG_SA1100_BRUTUS
	if {($CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_SA1100 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ARCH_SA1100]];set CONFIG_SA1100_BRUTUS [sync_bool $CONFIG_SA1100_BRUTUS $tmpvar_dep 0];set CONFIG_SA1100_BRUTUS [expr $CONFIG_SA1100_BRUTUS&15]}
	global CONFIG_SA1100_CEP
	if {($CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_SA1100 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ARCH_SA1100]];set CONFIG_SA1100_CEP [sync_bool $CONFIG_SA1100_CEP $tmpvar_dep 0];set CONFIG_SA1100_CEP [expr $CONFIG_SA1100_CEP&15]}
	global CONFIG_SA1100_CERF
	if {($CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_SA1100 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ARCH_SA1100]];set CONFIG_SA1100_CERF [sync_bool $CONFIG_SA1100_CERF $tmpvar_dep 0];set CONFIG_SA1100_CERF [expr $CONFIG_SA1100_CERF&15]}
	global tmpvar_1
	global CONFIG_SA1100_CERF_8MB
	if {$tmpvar_1 == "8MB"} then {set CONFIG_SA1100_CERF_8MB 1} else {set CONFIG_SA1100_CERF_8MB 0}
	global CONFIG_SA1100_CERF_16MB
	if {$tmpvar_1 == "16MB"} then {set CONFIG_SA1100_CERF_16MB 1} else {set CONFIG_SA1100_CERF_16MB 0}
	global CONFIG_SA1100_CERF_32MB
	if {$tmpvar_1 == "32MB"} then {set CONFIG_SA1100_CERF_32MB 1} else {set CONFIG_SA1100_CERF_32MB 0}
	global CONFIG_SA1100_CERF_64MB
	if {$tmpvar_1 == "64MB"} then {set CONFIG_SA1100_CERF_64MB 1} else {set CONFIG_SA1100_CERF_64MB 0}
	global tmpvar_2
	global CONFIG_SA1100_CERF_FLASH_8MB
	if {$tmpvar_2 == "8MB"} then {set CONFIG_SA1100_CERF_FLASH_8MB 1} else {set CONFIG_SA1100_CERF_FLASH_8MB 0}
	global CONFIG_SA1100_CERF_FLASH_16MB
	if {$tmpvar_2 == "16MB"} then {set CONFIG_SA1100_CERF_FLASH_16MB 1} else {set CONFIG_SA1100_CERF_FLASH_16MB 0}
	global CONFIG_SA1100_CERF_FLASH_32MB
	if {$tmpvar_2 == "32MB"} then {set CONFIG_SA1100_CERF_FLASH_32MB 1} else {set CONFIG_SA1100_CERF_FLASH_32MB 0}
	if {($CONFIG_SA1100_CERF == 1)} then {
	set CONFIG_SA1100_CERF_CPLD [expr $CONFIG_SA1100_CERF_CPLD&15]}
	global CONFIG_SA1100_H3100
	if {($CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_SA1100 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ARCH_SA1100]];set CONFIG_SA1100_H3100 [sync_bool $CONFIG_SA1100_H3100 $tmpvar_dep 0];set CONFIG_SA1100_H3100 [expr $CONFIG_SA1100_H3100&15]}
	global CONFIG_SA1100_H3600
	if {($CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_SA1100 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ARCH_SA1100]];set CONFIG_SA1100_H3600 [sync_bool $CONFIG_SA1100_H3600 $tmpvar_dep 0];set CONFIG_SA1100_H3600 [expr $CONFIG_SA1100_H3600&15]}
	global CONFIG_SA1100_H3800
	if {($CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_SA1100 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ARCH_SA1100]];set CONFIG_SA1100_H3800 [sync_bool $CONFIG_SA1100_H3800 $tmpvar_dep 0];set CONFIG_SA1100_H3800 [expr $CONFIG_SA1100_H3800&15]}
	if {($CONFIG_SA1100_H3100 == 1 || $CONFIG_SA1100_H3600 == 1 || $CONFIG_SA1100_H3800 == 1)} then {	global CONSTANT_Y
set CONFIG_SA1100_H3XXX $CONSTANT_Y }
	if {($CONFIG_SA1100_H3100 != 1 && $CONFIG_SA1100_H3600 != 1 && $CONFIG_SA1100_H3800 != 1)} then {	global CONSTANT_N
set CONFIG_SA1100_H3XXX $CONSTANT_N }
	global CONFIG_H3600_SLEEVE
	if {($CONFIG_SA1100_H3600 == 1 || $CONFIG_SA1100_H3600 == 2 || $CONFIG_SA1100_H3600 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SA1100_H3600]]; set CONFIG_H3600_SLEEVE [sync_tristate $CONFIG_H3600_SLEEVE $tmpvar_dep]; set CONFIG_H3600_SLEEVE [expr $CONFIG_H3600_SLEEVE&15]}
	global CONFIG_SA1100_EXTENEX1
	if {($CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_SA1100 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ARCH_SA1100]];set CONFIG_SA1100_EXTENEX1 [sync_bool $CONFIG_SA1100_EXTENEX1 $tmpvar_dep 0];set CONFIG_SA1100_EXTENEX1 [expr $CONFIG_SA1100_EXTENEX1&15]}
	if {($CONFIG_SA1100_EXTENEX1 == 1)} then {
	set CONFIG_SA1100_EXTENEX1_16MB [expr $CONFIG_SA1100_EXTENEX1_16MB&15]}
	global CONFIG_SA1100_FLEXANET
	if {($CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_SA1100 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ARCH_SA1100]];set CONFIG_SA1100_FLEXANET [sync_bool $CONFIG_SA1100_FLEXANET $tmpvar_dep 0];set CONFIG_SA1100_FLEXANET [expr $CONFIG_SA1100_FLEXANET&15]}
	global CONFIG_SA1100_FREEBIRD
	if {($CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_SA1100 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ARCH_SA1100]];set CONFIG_SA1100_FREEBIRD [sync_bool $CONFIG_SA1100_FREEBIRD $tmpvar_dep 0];set CONFIG_SA1100_FREEBIRD [expr $CONFIG_SA1100_FREEBIRD&15]}
	global CONFIG_SA1100_FRODO
	if {($CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_SA1100 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ARCH_SA1100]];set CONFIG_SA1100_FRODO [sync_bool $CONFIG_SA1100_FRODO $tmpvar_dep 0];set CONFIG_SA1100_FRODO [expr $CONFIG_SA1100_FRODO&15]}
	global CONFIG_SA1100_GRAPHICSCLIENT
	if {($CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_SA1100 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ARCH_SA1100]];set CONFIG_SA1100_GRAPHICSCLIENT [sync_bool $CONFIG_SA1100_GRAPHICSCLIENT $tmpvar_dep 0];set CONFIG_SA1100_GRAPHICSCLIENT [expr $CONFIG_SA1100_GRAPHICSCLIENT&15]}
	global CONFIG_SA1100_GRAPHICSMASTER
	if {($CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_SA1100 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ARCH_SA1100]];set CONFIG_SA1100_GRAPHICSMASTER [sync_bool $CONFIG_SA1100_GRAPHICSMASTER $tmpvar_dep 0];set CONFIG_SA1100_GRAPHICSMASTER [expr $CONFIG_SA1100_GRAPHICSMASTER&15]}
	global CONFIG_SA1100_HACKKIT
	if {($CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_SA1100 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ARCH_SA1100]];set CONFIG_SA1100_HACKKIT [sync_bool $CONFIG_SA1100_HACKKIT $tmpvar_dep 0];set CONFIG_SA1100_HACKKIT [expr $CONFIG_SA1100_HACKKIT&15]}
	global CONFIG_SA1100_BADGE4
	if {($CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_SA1100 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ARCH_SA1100]];set CONFIG_SA1100_BADGE4 [sync_bool $CONFIG_SA1100_BADGE4 $tmpvar_dep 0];set CONFIG_SA1100_BADGE4 [expr $CONFIG_SA1100_BADGE4&15]}
	global CONFIG_SA1100_JORNADA720
	if {($CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_SA1100 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ARCH_SA1100]];set CONFIG_SA1100_JORNADA720 [sync_bool $CONFIG_SA1100_JORNADA720 $tmpvar_dep 0];set CONFIG_SA1100_JORNADA720 [expr $CONFIG_SA1100_JORNADA720&15]}
	global CONFIG_SA1100_HUW_WEBPANEL
	if {($CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_SA1100 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ARCH_SA1100]];set CONFIG_SA1100_HUW_WEBPANEL [sync_bool $CONFIG_SA1100_HUW_WEBPANEL $tmpvar_dep 0];set CONFIG_SA1100_HUW_WEBPANEL [expr $CONFIG_SA1100_HUW_WEBPANEL&15]}
	global CONFIG_SA1100_ITSY
	if {($CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_SA1100 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ARCH_SA1100]];set CONFIG_SA1100_ITSY [sync_bool $CONFIG_SA1100_ITSY $tmpvar_dep 0];set CONFIG_SA1100_ITSY [expr $CONFIG_SA1100_ITSY&15]}
	global CONFIG_SA1100_LART
	if {($CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_SA1100 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ARCH_SA1100]];set CONFIG_SA1100_LART [sync_bool $CONFIG_SA1100_LART $tmpvar_dep 0];set CONFIG_SA1100_LART [expr $CONFIG_SA1100_LART&15]}
	global CONFIG_SA1100_NANOENGINE
	if {($CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_SA1100 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ARCH_SA1100]];set CONFIG_SA1100_NANOENGINE [sync_bool $CONFIG_SA1100_NANOENGINE $tmpvar_dep 0];set CONFIG_SA1100_NANOENGINE [expr $CONFIG_SA1100_NANOENGINE&15]}
	global CONFIG_SA1100_OMNIMETER
	if {($CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_SA1100 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ARCH_SA1100]];set CONFIG_SA1100_OMNIMETER [sync_bool $CONFIG_SA1100_OMNIMETER $tmpvar_dep 0];set CONFIG_SA1100_OMNIMETER [expr $CONFIG_SA1100_OMNIMETER&15]}
	global CONFIG_SA1100_PANGOLIN
	if {($CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_SA1100 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ARCH_SA1100]];set CONFIG_SA1100_PANGOLIN [sync_bool $CONFIG_SA1100_PANGOLIN $tmpvar_dep 0];set CONFIG_SA1100_PANGOLIN [expr $CONFIG_SA1100_PANGOLIN&15]}
	global CONFIG_SA1100_PLEB
	if {($CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_SA1100 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ARCH_SA1100]];set CONFIG_SA1100_PLEB [sync_bool $CONFIG_SA1100_PLEB $tmpvar_dep 0];set CONFIG_SA1100_PLEB [expr $CONFIG_SA1100_PLEB&15]}
	global CONFIG_SA1100_PT_SYSTEM3
	if {($CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_SA1100 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ARCH_SA1100]];set CONFIG_SA1100_PT_SYSTEM3 [sync_bool $CONFIG_SA1100_PT_SYSTEM3 $tmpvar_dep 0];set CONFIG_SA1100_PT_SYSTEM3 [expr $CONFIG_SA1100_PT_SYSTEM3&15]}
	global CONFIG_SA1100_SHANNON
	if {($CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_SA1100 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ARCH_SA1100]];set CONFIG_SA1100_SHANNON [sync_bool $CONFIG_SA1100_SHANNON $tmpvar_dep 0];set CONFIG_SA1100_SHANNON [expr $CONFIG_SA1100_SHANNON&15]}
	global CONFIG_SA1100_SHERMAN
	if {($CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_SA1100 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ARCH_SA1100]];set CONFIG_SA1100_SHERMAN [sync_bool $CONFIG_SA1100_SHERMAN $tmpvar_dep 0];set CONFIG_SA1100_SHERMAN [expr $CONFIG_SA1100_SHERMAN&15]}
	global CONFIG_SA1100_SIMPAD
	if {($CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_SA1100 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ARCH_SA1100]];set CONFIG_SA1100_SIMPAD [sync_bool $CONFIG_SA1100_SIMPAD $tmpvar_dep 0];set CONFIG_SA1100_SIMPAD [expr $CONFIG_SA1100_SIMPAD&15]}
	global CONFIG_SA1100_SIMPUTER
	if {($CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_SA1100 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ARCH_SA1100]];set CONFIG_SA1100_SIMPUTER [sync_bool $CONFIG_SA1100_SIMPUTER $tmpvar_dep 0];set CONFIG_SA1100_SIMPUTER [expr $CONFIG_SA1100_SIMPUTER&15]}
	global CONFIG_SA1100_PFS168
	if {($CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_SA1100 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ARCH_SA1100]];set CONFIG_SA1100_PFS168 [sync_bool $CONFIG_SA1100_PFS168 $tmpvar_dep 0];set CONFIG_SA1100_PFS168 [expr $CONFIG_SA1100_PFS168&15]}
	global CONFIG_SA1100_VICTOR
	if {($CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_SA1100 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ARCH_SA1100]];set CONFIG_SA1100_VICTOR [sync_bool $CONFIG_SA1100_VICTOR $tmpvar_dep 0];set CONFIG_SA1100_VICTOR [expr $CONFIG_SA1100_VICTOR&15]}
	global CONFIG_SA1100_XP860
	if {($CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_SA1100 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ARCH_SA1100]];set CONFIG_SA1100_XP860 [sync_bool $CONFIG_SA1100_XP860 $tmpvar_dep 0];set CONFIG_SA1100_XP860 [expr $CONFIG_SA1100_XP860&15]}
	global CONFIG_SA1100_YOPY
	if {($CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_SA1100 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ARCH_SA1100]];set CONFIG_SA1100_YOPY [sync_bool $CONFIG_SA1100_YOPY $tmpvar_dep 0];set CONFIG_SA1100_YOPY [expr $CONFIG_SA1100_YOPY&15]}
	global CONFIG_SA1100_USB
	if {($CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_SA1100 == 2 || $CONFIG_ARCH_SA1100 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ARCH_SA1100]]; set CONFIG_SA1100_USB [sync_tristate $CONFIG_SA1100_USB $tmpvar_dep]; set CONFIG_SA1100_USB [expr $CONFIG_SA1100_USB&15]}
	global CONFIG_SA1100_USB_NETLINK
	if {($CONFIG_SA1100_USB == 1 || $CONFIG_SA1100_USB == 2 || $CONFIG_SA1100_USB == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SA1100_USB]]; set CONFIG_SA1100_USB_NETLINK [sync_tristate $CONFIG_SA1100_USB_NETLINK $tmpvar_dep]; set CONFIG_SA1100_USB_NETLINK [expr $CONFIG_SA1100_USB_NETLINK&15]}
	global CONFIG_SA1100_USB_CHAR
	if {($CONFIG_SA1100_USB == 1 || $CONFIG_SA1100_USB == 2 || $CONFIG_SA1100_USB == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SA1100_USB]]; set CONFIG_SA1100_USB_CHAR [sync_tristate $CONFIG_SA1100_USB_CHAR $tmpvar_dep]; set CONFIG_SA1100_USB_CHAR [expr $CONFIG_SA1100_USB_CHAR&15]}
	global CONFIG_SA1100_SSP
	if {($CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_SA1100 == 2 || $CONFIG_ARCH_SA1100 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ARCH_SA1100]]; set CONFIG_SA1100_SSP [sync_tristate $CONFIG_SA1100_SSP $tmpvar_dep]; set CONFIG_SA1100_SSP [expr $CONFIG_SA1100_SSP&15]}
}


proc menu7 {w title} {
	set oldFocus [focus]
	catch {focus .menu3}
	catch {destroy $w; unregister_active 7}
	toplevel $w -class Dialog
	wm withdraw $w
	global active_menus
	set active_menus [lsort -integer [linsert $active_menus end 7]]
	message $w.m -width 400 -aspect 300 -text \
		"IOP3xx Implementation Options"  -relief raised
	pack $w.m -pady 10 -side top -padx 10
	wm title $w "IOP3xx Implementation Options" 

	bind $w <Escape> "catch {focus $oldFocus}; destroy $w; unregister_active 7; break"
	set nextscript "catch {focus $oldFocus}; destroy $w; unregister_active 7; menu8 .menu8 \"$title\""
	frame $w.f
	button $w.f.back -text "OK" \
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 7"
	button $w.f.next -text "Next" -underline 0\
		-width 15 -command $nextscript
	bind all <Alt-n> $nextscript
	button $w.f.prev -text "Prev" -underline 0\
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 7; menu6 .menu6 \"$title\""
	bind $w <Alt-p> "catch {focus $oldFocus}; destroy $w; unregister_active 7; menu6 .menu6 \"$title\";break"
	pack $w.f.back $w.f.next $w.f.prev -side left -expand on
	pack $w.f -pady 10 -side bottom -anchor w -fill x
	frame $w.topline -relief ridge -borderwidth 2 -height 2
	pack $w.topline -side top -fill x

	frame $w.botline -relief ridge -borderwidth 2 -height 2
	pack $w.botline -side bottom -fill x

	frame $w.config
	pack $w.config -fill y -expand on

	scrollbar $w.config.vscroll -command "$w.config.canvas yview"
	pack $w.config.vscroll -side right -fill y

	canvas $w.config.canvas -height 1\
		-relief flat -borderwidth 0 -yscrollcommand "$w.config.vscroll set" \
		-width [expr [winfo screenwidth .] * 1 / 2] 
	frame $w.config.f
	bind $w <Key-Down> "$w.config.canvas yview scroll  1 unit;break;"
	bind $w <Key-Up> "$w.config.canvas yview scroll  -1 unit;break;"
	bind $w <Key-Next> "$w.config.canvas yview scroll  1 page;break;"
	bind $w <Key-Prior> "$w.config.canvas yview scroll  -1 page;break;"
	bind $w <Key-Home> "$w.config.canvas yview moveto 0;break;"
	bind $w <Key-End> "$w.config.canvas yview moveto 1 ;break;"
	pack $w.config.canvas -side right -fill y


	global tmpvar_3
	minimenu $w.config.f 7 0 "IOP3xx System Type" tmpvar_3 CONFIG_ARCH_IQ80310
	menu $w.config.f.x0.x.menu -tearoffcommand "menutitle \"IOP3xx System Type\""
	$w.config.f.x0.x.menu add radiobutton -label "IQ80310" -variable tmpvar_3 -value "IQ80310" -command "update_active"
	$w.config.f.x0.x.menu add radiobutton -label "IQ80321" -variable tmpvar_3 -value "IQ80321" -command "update_active"
	menusplit $w $w.config.f.x0.x.menu 2
	comment $w.config.f 7 1 "IOP3xx Chipset Features"
	dep_bool $w.config.f 7 2 "Support IOP3xx AAU (EXPERIMENTAL)" CONFIG_IOP3XX_AAU
	dep_bool $w.config.f 7 3 "Support IOP3xx DMA (EXPERIMENTAL)" CONFIG_IOP3XX_DMA
	dep_bool $w.config.f 7 4 "Support IOP3xx Messaging Unit (EXPERIMENTAL)" CONFIG_IOP3XX_MU
	dep_bool $w.config.f 7 5 "Support IOP3xx Performance Monitor (EXPERIMENTAL)" CONFIG_IOP3XX_PMON



	focus $w
	update_active
	global winx; global winy
	if {[winfo exists .menu3] == 0} then {menu3 .menu3 "System Type"}
	set winx [expr [winfo x .menu3]+30]; set winy [expr [winfo y .menu3]+30]
	if {[winfo exists $w]} then {wm geometry $w +$winx+$winy}
	update idletasks
	if {[winfo exists $w]} then  {$w.config.canvas create window 0 0 -anchor nw -window $w.config.f

	$w.config.canvas configure \
		-width [expr [winfo reqwidth $w.config.f] + 1]\
		-scrollregion "-1 -1 [expr [winfo reqwidth $w.config.f] + 1] \
			 [expr [winfo reqheight $w.config.f] + 1]"

	set winy [expr [winfo reqh $w] - [winfo reqh $w.config.canvas]]
	set scry [expr [winfo screenh $w] / 2]
	set maxy [expr [winfo screenh $w] * 3 / 4]
	set canvtotal [expr [winfo reqh $w.config.f] + 2]
	if [expr $winy + $canvtotal < $maxy] {
		$w.config.canvas configure -height $canvtotal
	} else {
		$w.config.canvas configure -height [expr $scry - $winy]
		}
	}
	update idletasks
	if {[winfo exists $w]} then {
	wm maxsize $w [winfo width $w] [winfo screenheight $w]
	wm minsize $w [winfo width $w] 100

	wm deiconify $w
}
}

proc update_menu7 {} {
	global CONFIG_ARCH_IOP3XX
	if {($CONFIG_ARCH_IOP3XX == 1)} then {configure_entry .menu7.config.f.x0 normal {x l}} else {configure_entry .menu7.config.f.x0 disabled {x l}}
	if {($CONFIG_ARCH_IOP3XX == 1)} then {configure_entry .menu7.config.f.x1 normal {m}} else {configure_entry .menu7.config.f.x1 disabled {m}}
	global CONFIG_EXPERIMENTAL
	global CONFIG_IOP3XX_AAU
	if {($CONFIG_ARCH_IOP3XX == 1) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_EXPERIMENTAL]];set CONFIG_IOP3XX_AAU [sync_bool $CONFIG_IOP3XX_AAU $tmpvar_dep 0];if {$tmpvar_dep != 1} then {configure_entry .menu7.config.f.x2 disabled {y};} else {configure_entry .menu7.config.f.x2 normal {y};}; configure_entry .menu7.config.f.x2 normal {n l}} else {configure_entry .menu7.config.f.x2 disabled {y n l}}
	global CONFIG_IOP3XX_DMA
	if {($CONFIG_ARCH_IOP3XX == 1) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_EXPERIMENTAL]];set CONFIG_IOP3XX_DMA [sync_bool $CONFIG_IOP3XX_DMA $tmpvar_dep 0];if {$tmpvar_dep != 1} then {configure_entry .menu7.config.f.x3 disabled {y};} else {configure_entry .menu7.config.f.x3 normal {y};}; configure_entry .menu7.config.f.x3 normal {n l}} else {configure_entry .menu7.config.f.x3 disabled {y n l}}
	global CONFIG_IOP3XX_MU
	if {($CONFIG_ARCH_IOP3XX == 1) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_EXPERIMENTAL]];set CONFIG_IOP3XX_MU [sync_bool $CONFIG_IOP3XX_MU $tmpvar_dep 0];if {$tmpvar_dep != 1} then {configure_entry .menu7.config.f.x4 disabled {y};} else {configure_entry .menu7.config.f.x4 normal {y};}; configure_entry .menu7.config.f.x4 normal {n l}} else {configure_entry .menu7.config.f.x4 disabled {y n l}}
	global CONFIG_IOP3XX_PMON
	if {($CONFIG_ARCH_IOP3XX == 1) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_EXPERIMENTAL]];set CONFIG_IOP3XX_PMON [sync_bool $CONFIG_IOP3XX_PMON $tmpvar_dep 0];if {$tmpvar_dep != 1} then {configure_entry .menu7.config.f.x5 disabled {y};} else {configure_entry .menu7.config.f.x5 normal {y};}; configure_entry .menu7.config.f.x5 normal {n l}} else {configure_entry .menu7.config.f.x5 disabled {y n l}}
}


proc update_define_menu7 {} {
	update_define_mainmenu
	global CONFIG_MODULES
	global CONFIG_ARCH_IOP310
	global CONFIG_ARCH_IOP321
	global tmpvar_3
	global CONFIG_ARCH_IQ80310
	if {$tmpvar_3 == "IQ80310"} then {set CONFIG_ARCH_IQ80310 1} else {set CONFIG_ARCH_IQ80310 0}
	global CONFIG_ARCH_IQ80321
	if {$tmpvar_3 == "IQ80321"} then {set CONFIG_ARCH_IQ80321 1} else {set CONFIG_ARCH_IQ80321 0}
	global CONFIG_ARCH_IOP3XX
	if {($CONFIG_ARCH_IOP3XX == 1) && ($CONFIG_ARCH_IQ80310 == 1)} then {	global CONSTANT_Y
set CONFIG_ARCH_IOP310 $CONSTANT_Y }
	if {($CONFIG_ARCH_IOP3XX == 1) && ($CONFIG_ARCH_IQ80310 != 1)} then {	global CONSTANT_N
set CONFIG_ARCH_IOP310 $CONSTANT_N }
	if {($CONFIG_ARCH_IOP3XX == 1) && ($CONFIG_ARCH_IQ80321 == 1)} then {	global CONSTANT_Y
set CONFIG_ARCH_IOP321 $CONSTANT_Y }
	if {($CONFIG_ARCH_IOP3XX == 1) && ($CONFIG_ARCH_IQ80321 != 1)} then {	global CONSTANT_N
set CONFIG_ARCH_IOP321 $CONSTANT_N }
	global CONFIG_EXPERIMENTAL
	global CONFIG_IOP3XX_AAU
	if {($CONFIG_ARCH_IOP3XX == 1) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_EXPERIMENTAL]];set CONFIG_IOP3XX_AAU [sync_bool $CONFIG_IOP3XX_AAU $tmpvar_dep 0];set CONFIG_IOP3XX_AAU [expr $CONFIG_IOP3XX_AAU&15]}
	global CONFIG_IOP3XX_DMA
	if {($CONFIG_ARCH_IOP3XX == 1) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_EXPERIMENTAL]];set CONFIG_IOP3XX_DMA [sync_bool $CONFIG_IOP3XX_DMA $tmpvar_dep 0];set CONFIG_IOP3XX_DMA [expr $CONFIG_IOP3XX_DMA&15]}
	global CONFIG_IOP3XX_MU
	if {($CONFIG_ARCH_IOP3XX == 1) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_EXPERIMENTAL]];set CONFIG_IOP3XX_MU [sync_bool $CONFIG_IOP3XX_MU $tmpvar_dep 0];set CONFIG_IOP3XX_MU [expr $CONFIG_IOP3XX_MU&15]}
	global CONFIG_IOP3XX_PMON
	if {($CONFIG_ARCH_IOP3XX == 1) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_EXPERIMENTAL]];set CONFIG_IOP3XX_PMON [sync_bool $CONFIG_IOP3XX_PMON $tmpvar_dep 0];set CONFIG_IOP3XX_PMON [expr $CONFIG_IOP3XX_PMON&15]}
}


proc menu8 {w title} {
	set oldFocus [focus]
	catch {focus .menu3}
	catch {destroy $w; unregister_active 8}
	toplevel $w -class Dialog
	wm withdraw $w
	global active_menus
	set active_menus [lsort -integer [linsert $active_menus end 8]]
	message $w.m -width 400 -aspect 300 -text \
		"IXP425 Implementation Options"  -relief raised
	pack $w.m -pady 10 -side top -padx 10
	wm title $w "IXP425 Implementation Options" 

	bind $w <Escape> "catch {focus $oldFocus}; destroy $w; unregister_active 8; break"
	set nextscript "catch {focus $oldFocus}; destroy $w; unregister_active 8; menu9 .menu9 \"$title\""
	frame $w.f
	button $w.f.back -text "OK" \
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 8"
	button $w.f.next -text "Next" -underline 0\
		-width 15 -command $nextscript
	bind all <Alt-n> $nextscript
	button $w.f.prev -text "Prev" -underline 0\
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 8; menu7 .menu7 \"$title\""
	bind $w <Alt-p> "catch {focus $oldFocus}; destroy $w; unregister_active 8; menu7 .menu7 \"$title\";break"
	pack $w.f.back $w.f.next $w.f.prev -side left -expand on
	pack $w.f -pady 10 -side bottom -anchor w -fill x
	frame $w.topline -relief ridge -borderwidth 2 -height 2
	pack $w.topline -side top -fill x

	frame $w.botline -relief ridge -borderwidth 2 -height 2
	pack $w.botline -side bottom -fill x

	frame $w.config
	pack $w.config -fill y -expand on

	scrollbar $w.config.vscroll -command "$w.config.canvas yview"
	pack $w.config.vscroll -side right -fill y

	canvas $w.config.canvas -height 1\
		-relief flat -borderwidth 0 -yscrollcommand "$w.config.vscroll set" \
		-width [expr [winfo screenwidth .] * 1 / 2] 
	frame $w.config.f
	bind $w <Key-Down> "$w.config.canvas yview scroll  1 unit;break;"
	bind $w <Key-Up> "$w.config.canvas yview scroll  -1 unit;break;"
	bind $w <Key-Next> "$w.config.canvas yview scroll  1 page;break;"
	bind $w <Key-Prior> "$w.config.canvas yview scroll  -1 page;break;"
	bind $w <Key-Home> "$w.config.canvas yview moveto 0;break;"
	bind $w <Key-End> "$w.config.canvas yview moveto 1 ;break;"
	pack $w.config.canvas -side right -fill y


	global tmpvar_4
	minimenu $w.config.f 8 0 "IXP425 Board Type" tmpvar_4 CONFIG_ARCH_IXDP425
	menu $w.config.f.x0.x.menu -tearoffcommand "menutitle \"IXP425 Board Type\""
	$w.config.f.x0.x.menu add radiobutton -label "IXDP425" -variable tmpvar_4 -value "IXDP425" -command "update_active"
	$w.config.f.x0.x.menu add radiobutton -label "IXCDP1100" -variable tmpvar_4 -value "IXCDP1100" -command "update_active"
	$w.config.f.x0.x.menu add radiobutton -label "PrPMC1100" -variable tmpvar_4 -value "PrPMC1100" -command "update_active"
	$w.config.f.x0.x.menu add radiobutton -label "COYOTE" -variable tmpvar_4 -value "COYOTE" -command "update_active"
	$w.config.f.x0.x.menu add radiobutton -label "SE4000" -variable tmpvar_4 -value "SE4000" -command "update_active"
	menusplit $w $w.config.f.x0.x.menu 5



	focus $w
	update_active
	global winx; global winy
	if {[winfo exists .menu3] == 0} then {menu3 .menu3 "System Type"}
	set winx [expr [winfo x .menu3]+30]; set winy [expr [winfo y .menu3]+30]
	if {[winfo exists $w]} then {wm geometry $w +$winx+$winy}
	update idletasks
	if {[winfo exists $w]} then  {$w.config.canvas create window 0 0 -anchor nw -window $w.config.f

	$w.config.canvas configure \
		-width [expr [winfo reqwidth $w.config.f] + 1]\
		-scrollregion "-1 -1 [expr [winfo reqwidth $w.config.f] + 1] \
			 [expr [winfo reqheight $w.config.f] + 1]"

	set winy [expr [winfo reqh $w] - [winfo reqh $w.config.canvas]]
	set scry [expr [winfo screenh $w] / 2]
	set maxy [expr [winfo screenh $w] * 3 / 4]
	set canvtotal [expr [winfo reqh $w.config.f] + 2]
	if [expr $winy + $canvtotal < $maxy] {
		$w.config.canvas configure -height $canvtotal
	} else {
		$w.config.canvas configure -height [expr $scry - $winy]
		}
	}
	update idletasks
	if {[winfo exists $w]} then {
	wm maxsize $w [winfo width $w] [winfo screenheight $w]
	wm minsize $w [winfo width $w] 100

	wm deiconify $w
}
}

proc update_menu8 {} {
	global CONFIG_ARCH_IXP425
	if {($CONFIG_ARCH_IXP425 == 1)} then {configure_entry .menu8.config.f.x0 normal {x l}} else {configure_entry .menu8.config.f.x0 disabled {x l}}
}


proc update_define_menu8 {} {
	update_define_mainmenu
	global CONFIG_MODULES
	global CONFIG_IXP425_CSR
	global tmpvar_4
	global CONFIG_ARCH_IXDP425
	if {$tmpvar_4 == "IXDP425"} then {set CONFIG_ARCH_IXDP425 1} else {set CONFIG_ARCH_IXDP425 0}
	global CONFIG_ARCH_IXCDP1100
	if {$tmpvar_4 == "IXCDP1100"} then {set CONFIG_ARCH_IXCDP1100 1} else {set CONFIG_ARCH_IXCDP1100 0}
	global CONFIG_ARCH_PRPMC1100
	if {$tmpvar_4 == "PrPMC1100"} then {set CONFIG_ARCH_PRPMC1100 1} else {set CONFIG_ARCH_PRPMC1100 0}
	global CONFIG_ARCH_ADI_COYOTE
	if {$tmpvar_4 == "COYOTE"} then {set CONFIG_ARCH_ADI_COYOTE 1} else {set CONFIG_ARCH_ADI_COYOTE 0}
	global CONFIG_ARCH_SE4000
	if {$tmpvar_4 == "SE4000"} then {set CONFIG_ARCH_SE4000 1} else {set CONFIG_ARCH_SE4000 0}
	global CONFIG_ARCH_IXP425
	if {($CONFIG_ARCH_IXP425 == 1)} then {	global CONSTANT_M
set CONFIG_IXP425_CSR $CONSTANT_M }
}


proc menu9 {w title} {
	set oldFocus [focus]
	catch {focus .menu3}
	catch {destroy $w; unregister_active 9}
	toplevel $w -class Dialog
	wm withdraw $w
	global active_menus
	set active_menus [lsort -integer [linsert $active_menus end 9]]
	message $w.m -width 400 -aspect 300 -text \
		"IXP1200 Implementation Options"  -relief raised
	pack $w.m -pady 10 -side top -padx 10
	wm title $w "IXP1200 Implementation Options" 

	bind $w <Escape> "catch {focus $oldFocus}; destroy $w; unregister_active 9; break"
	set nextscript "catch {focus $oldFocus}; destroy $w; unregister_active 9; menu10 .menu10 \"$title\""
	frame $w.f
	button $w.f.back -text "OK" \
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 9"
	button $w.f.next -text "Next" -underline 0\
		-width 15 -command $nextscript
	bind all <Alt-n> $nextscript
	button $w.f.prev -text "Prev" -underline 0\
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 9; menu8 .menu8 \"$title\""
	bind $w <Alt-p> "catch {focus $oldFocus}; destroy $w; unregister_active 9; menu8 .menu8 \"$title\";break"
	pack $w.f.back $w.f.next $w.f.prev -side left -expand on
	pack $w.f -pady 10 -side bottom -anchor w -fill x
	frame $w.topline -relief ridge -borderwidth 2 -height 2
	pack $w.topline -side top -fill x

	frame $w.botline -relief ridge -borderwidth 2 -height 2
	pack $w.botline -side bottom -fill x

	frame $w.config
	pack $w.config -fill y -expand on

	scrollbar $w.config.vscroll -command "$w.config.canvas yview"
	pack $w.config.vscroll -side right -fill y

	canvas $w.config.canvas -height 1\
		-relief flat -borderwidth 0 -yscrollcommand "$w.config.vscroll set" \
		-width [expr [winfo screenwidth .] * 1 / 2] 
	frame $w.config.f
	bind $w <Key-Down> "$w.config.canvas yview scroll  1 unit;break;"
	bind $w <Key-Up> "$w.config.canvas yview scroll  -1 unit;break;"
	bind $w <Key-Next> "$w.config.canvas yview scroll  1 page;break;"
	bind $w <Key-Prior> "$w.config.canvas yview scroll  -1 page;break;"
	bind $w <Key-Home> "$w.config.canvas yview moveto 0;break;"
	bind $w <Key-End> "$w.config.canvas yview moveto 1 ;break;"
	pack $w.config.canvas -side right -fill y


	hex $w.config.f 9 0 "IXP12000 SDRAM base for Linux" CONFIG_IXP1200_SDRAM_BASE
	int $w.config.f 9 1 "IXP1200 SDRAM size for Linux (MB)" CONFIG_IXP1200_SDRAM_SIZE



	focus $w
	update_active
	global winx; global winy
	if {[winfo exists .menu3] == 0} then {menu3 .menu3 "System Type"}
	set winx [expr [winfo x .menu3]+30]; set winy [expr [winfo y .menu3]+30]
	if {[winfo exists $w]} then {wm geometry $w +$winx+$winy}
	update idletasks
	if {[winfo exists $w]} then  {$w.config.canvas create window 0 0 -anchor nw -window $w.config.f

	$w.config.canvas configure \
		-width [expr [winfo reqwidth $w.config.f] + 1]\
		-scrollregion "-1 -1 [expr [winfo reqwidth $w.config.f] + 1] \
			 [expr [winfo reqheight $w.config.f] + 1]"

	set winy [expr [winfo reqh $w] - [winfo reqh $w.config.canvas]]
	set scry [expr [winfo screenh $w] / 2]
	set maxy [expr [winfo screenh $w] * 3 / 4]
	set canvtotal [expr [winfo reqh $w.config.f] + 2]
	if [expr $winy + $canvtotal < $maxy] {
		$w.config.canvas configure -height $canvtotal
	} else {
		$w.config.canvas configure -height [expr $scry - $winy]
		}
	}
	update idletasks
	if {[winfo exists $w]} then {
	wm maxsize $w [winfo width $w] [winfo screenheight $w]
	wm minsize $w [winfo width $w] 100

	wm deiconify $w
}
}

proc update_menu9 {} {
	global CONFIG_ARCH_IXP1200
	global CONFIG_IXP1200_SDRAM_BASE
	if {($CONFIG_ARCH_IXP1200 == 1)} then {.menu9.config.f.x0.x configure -state normal -foreground [ cget .ref -foreground ]; .menu9.config.f.x0.l configure -state normal; } else {.menu9.config.f.x0.x configure -state disabled -foreground [ cget .ref -disabledforeground ]; .menu9.config.f.x0.l configure -state disabled}
	global CONFIG_IXP1200_SDRAM_SIZE
	if {($CONFIG_ARCH_IXP1200 == 1)} then {.menu9.config.f.x1.x configure -state normal -foreground [ cget .ref -foreground ]; .menu9.config.f.x1.l configure -state normal; } else {.menu9.config.f.x1.x configure -state disabled -foreground [ cget .ref -disabledforeground ]; .menu9.config.f.x1.l configure -state disabled}
}


proc update_define_menu9 {} {
	update_define_mainmenu
	global CONFIG_MODULES
	global CONFIG_ARCH_IXP1200
	global CONFIG_IXP1200_SDRAM_BASE
	if {($CONFIG_ARCH_IXP1200 == 1)} then {validate_hex CONFIG_IXP1200_SDRAM_BASE "$CONFIG_IXP1200_SDRAM_BASE" 0xc0000000}
	global CONFIG_IXP1200_SDRAM_SIZE
	if {($CONFIG_ARCH_IXP1200 == 1)} then {validate_int CONFIG_IXP1200_SDRAM_SIZE "$CONFIG_IXP1200_SDRAM_SIZE" 128}
}


proc menu10 {w title} {
	set oldFocus [focus]
	catch {focus .menu3}
	catch {destroy $w; unregister_active 10}
	toplevel $w -class Dialog
	wm withdraw $w
	global active_menus
	set active_menus [lsort -integer [linsert $active_menus end 10]]
	message $w.m -width 400 -aspect 300 -text \
		"KS8695 Implementation Options"  -relief raised
	pack $w.m -pady 10 -side top -padx 10
	wm title $w "KS8695 Implementation Options" 

	bind $w <Escape> "catch {focus $oldFocus}; destroy $w; unregister_active 10; break"
	set nextscript "catch {focus $oldFocus}; destroy $w; unregister_active 10; menu11 .menu11 \"$title\""
	frame $w.f
	button $w.f.back -text "OK" \
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 10"
	button $w.f.next -text "Next" -underline 0\
		-width 15 -command $nextscript
	bind all <Alt-n> $nextscript
	button $w.f.prev -text "Prev" -underline 0\
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 10; menu9 .menu9 \"$title\""
	bind $w <Alt-p> "catch {focus $oldFocus}; destroy $w; unregister_active 10; menu9 .menu9 \"$title\";break"
	pack $w.f.back $w.f.next $w.f.prev -side left -expand on
	pack $w.f -pady 10 -side bottom -anchor w -fill x
	frame $w.topline -relief ridge -borderwidth 2 -height 2
	pack $w.topline -side top -fill x

	frame $w.botline -relief ridge -borderwidth 2 -height 2
	pack $w.botline -side bottom -fill x

	frame $w.config
	pack $w.config -fill y -expand on

	scrollbar $w.config.vscroll -command "$w.config.canvas yview"
	pack $w.config.vscroll -side right -fill y

	canvas $w.config.canvas -height 1\
		-relief flat -borderwidth 0 -yscrollcommand "$w.config.vscroll set" \
		-width [expr [winfo screenwidth .] * 1 / 2] 
	frame $w.config.f
	bind $w <Key-Down> "$w.config.canvas yview scroll  1 unit;break;"
	bind $w <Key-Up> "$w.config.canvas yview scroll  -1 unit;break;"
	bind $w <Key-Next> "$w.config.canvas yview scroll  1 page;break;"
	bind $w <Key-Prior> "$w.config.canvas yview scroll  -1 page;break;"
	bind $w <Key-Home> "$w.config.canvas yview moveto 0;break;"
	bind $w <Key-End> "$w.config.canvas yview moveto 1 ;break;"
	pack $w.config.canvas -side right -fill y


	global tmpvar_6
	minimenu $w.config.f 10 0 "KS8695 Board Type" tmpvar_6 CONFIG_MACH_KS8695
	menu $w.config.f.x0.x.menu -tearoffcommand "menutitle \"KS8695 Board Type\""
	$w.config.f.x0.x.menu add radiobutton -label "KS8695" -variable tmpvar_6 -value "KS8695" -command "update_active"
	$w.config.f.x0.x.menu add radiobutton -label "LITE300" -variable tmpvar_6 -value "LITE300" -command "update_active"
	menusplit $w $w.config.f.x0.x.menu 2



	focus $w
	update_active
	global winx; global winy
	if {[winfo exists .menu3] == 0} then {menu3 .menu3 "System Type"}
	set winx [expr [winfo x .menu3]+30]; set winy [expr [winfo y .menu3]+30]
	if {[winfo exists $w]} then {wm geometry $w +$winx+$winy}
	update idletasks
	if {[winfo exists $w]} then  {$w.config.canvas create window 0 0 -anchor nw -window $w.config.f

	$w.config.canvas configure \
		-width [expr [winfo reqwidth $w.config.f] + 1]\
		-scrollregion "-1 -1 [expr [winfo reqwidth $w.config.f] + 1] \
			 [expr [winfo reqheight $w.config.f] + 1]"

	set winy [expr [winfo reqh $w] - [winfo reqh $w.config.canvas]]
	set scry [expr [winfo screenh $w] / 2]
	set maxy [expr [winfo screenh $w] * 3 / 4]
	set canvtotal [expr [winfo reqh $w.config.f] + 2]
	if [expr $winy + $canvtotal < $maxy] {
		$w.config.canvas configure -height $canvtotal
	} else {
		$w.config.canvas configure -height [expr $scry - $winy]
		}
	}
	update idletasks
	if {[winfo exists $w]} then {
	wm maxsize $w [winfo width $w] [winfo screenheight $w]
	wm minsize $w [winfo width $w] 100

	wm deiconify $w
}
}

proc update_menu10 {} {
	global CONFIG_ARCH_KS8695
	if {($CONFIG_ARCH_KS8695 == 1)} then {configure_entry .menu10.config.f.x0 normal {x l}} else {configure_entry .menu10.config.f.x0 disabled {x l}}
}


proc update_define_menu10 {} {
	update_define_mainmenu
	global CONFIG_MODULES
	global tmpvar_6
	global CONFIG_MACH_KS8695
	if {$tmpvar_6 == "KS8695"} then {set CONFIG_MACH_KS8695 1} else {set CONFIG_MACH_KS8695 0}
	global CONFIG_MACH_LITE300
	if {$tmpvar_6 == "LITE300"} then {set CONFIG_MACH_LITE300 1} else {set CONFIG_MACH_LITE300 0}
}


proc menu11 {w title} {
	set oldFocus [focus]
	catch {focus .menu3}
	catch {destroy $w; unregister_active 11}
	toplevel $w -class Dialog
	wm withdraw $w
	global active_menus
	set active_menus [lsort -integer [linsert $active_menus end 11]]
	message $w.m -width 400 -aspect 300 -text \
		"AT91RM9200 Implementations"  -relief raised
	pack $w.m -pady 10 -side top -padx 10
	wm title $w "AT91RM9200 Implementations" 

	bind $w <Escape> "catch {focus $oldFocus}; destroy $w; unregister_active 11; break"
	set nextscript "catch {focus $oldFocus}; destroy $w; unregister_active 11; menu12 .menu12 \"$title\""
	frame $w.f
	button $w.f.back -text "OK" \
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 11"
	button $w.f.next -text "Next" -underline 0\
		-width 15 -command $nextscript
	bind all <Alt-n> $nextscript
	button $w.f.prev -text "Prev" -underline 0\
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 11; menu10 .menu10 \"$title\""
	bind $w <Alt-p> "catch {focus $oldFocus}; destroy $w; unregister_active 11; menu10 .menu10 \"$title\";break"
	pack $w.f.back $w.f.next $w.f.prev -side left -expand on
	pack $w.f -pady 10 -side bottom -anchor w -fill x
	frame $w.topline -relief ridge -borderwidth 2 -height 2
	pack $w.topline -side top -fill x

	frame $w.botline -relief ridge -borderwidth 2 -height 2
	pack $w.botline -side bottom -fill x

	frame $w.config
	pack $w.config -fill y -expand on

	scrollbar $w.config.vscroll -command "$w.config.canvas yview"
	pack $w.config.vscroll -side right -fill y

	canvas $w.config.canvas -height 1\
		-relief flat -borderwidth 0 -yscrollcommand "$w.config.vscroll set" \
		-width [expr [winfo screenwidth .] * 1 / 2] 
	frame $w.config.f
	bind $w <Key-Down> "$w.config.canvas yview scroll  1 unit;break;"
	bind $w <Key-Up> "$w.config.canvas yview scroll  -1 unit;break;"
	bind $w <Key-Next> "$w.config.canvas yview scroll  1 page;break;"
	bind $w <Key-Prior> "$w.config.canvas yview scroll  -1 page;break;"
	bind $w <Key-Home> "$w.config.canvas yview moveto 0;break;"
	bind $w <Key-End> "$w.config.canvas yview moveto 1 ;break;"
	pack $w.config.canvas -side right -fill y


	dep_bool $w.config.f 11 0 "  Atmel AT91RM9200 Development Board" CONFIG_ARCH_AT91RM9200DK



	focus $w
	update_active
	global winx; global winy
	if {[winfo exists .menu3] == 0} then {menu3 .menu3 "System Type"}
	set winx [expr [winfo x .menu3]+30]; set winy [expr [winfo y .menu3]+30]
	if {[winfo exists $w]} then {wm geometry $w +$winx+$winy}
	update idletasks
	if {[winfo exists $w]} then  {$w.config.canvas create window 0 0 -anchor nw -window $w.config.f

	$w.config.canvas configure \
		-width [expr [winfo reqwidth $w.config.f] + 1]\
		-scrollregion "-1 -1 [expr [winfo reqwidth $w.config.f] + 1] \
			 [expr [winfo reqheight $w.config.f] + 1]"

	set winy [expr [winfo reqh $w] - [winfo reqh $w.config.canvas]]
	set scry [expr [winfo screenh $w] / 2]
	set maxy [expr [winfo screenh $w] * 3 / 4]
	set canvtotal [expr [winfo reqh $w.config.f] + 2]
	if [expr $winy + $canvtotal < $maxy] {
		$w.config.canvas configure -height $canvtotal
	} else {
		$w.config.canvas configure -height [expr $scry - $winy]
		}
	}
	update idletasks
	if {[winfo exists $w]} then {
	wm maxsize $w [winfo width $w] [winfo screenheight $w]
	wm minsize $w [winfo width $w] 100

	wm deiconify $w
}
}

proc update_menu11 {} {
	global CONFIG_ARCH_AT91RM9200
	global CONFIG_ARCH_AT91RM9200DK
	if {($CONFIG_ARCH_AT91RM9200 == 1 || $CONFIG_ARCH_AT91RM9200 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ARCH_AT91RM9200]];set CONFIG_ARCH_AT91RM9200DK [sync_bool $CONFIG_ARCH_AT91RM9200DK $tmpvar_dep 0];if {$tmpvar_dep != 1} then {configure_entry .menu11.config.f.x0 disabled {y};} else {configure_entry .menu11.config.f.x0 normal {y};}; configure_entry .menu11.config.f.x0 normal {n l}} else {configure_entry .menu11.config.f.x0 disabled {y n l}}
}


proc update_define_menu11 {} {
	update_define_mainmenu
	global CONFIG_MODULES
	global CONFIG_ARCH_AT91RM9200
	global CONFIG_ARCH_AT91RM9200DK
	if {($CONFIG_ARCH_AT91RM9200 == 1 || $CONFIG_ARCH_AT91RM9200 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ARCH_AT91RM9200]];set CONFIG_ARCH_AT91RM9200DK [sync_bool $CONFIG_ARCH_AT91RM9200DK $tmpvar_dep 0];set CONFIG_ARCH_AT91RM9200DK [expr $CONFIG_ARCH_AT91RM9200DK&15]}
}


proc menu12 {w title} {
	set oldFocus [focus]
	catch {focus .menu3}
	catch {destroy $w; unregister_active 12}
	toplevel $w -class Dialog
	wm withdraw $w
	global active_menus
	set active_menus [lsort -integer [linsert $active_menus end 12]]
	message $w.m -width 400 -aspect 300 -text \
		"CLPS711X/EP721X Implementations"  -relief raised
	pack $w.m -pady 10 -side top -padx 10
	wm title $w "CLPS711X/EP721X Implementations" 

	bind $w <Escape> "catch {focus $oldFocus}; destroy $w; unregister_active 12; break"
	set nextscript "catch {focus $oldFocus}; destroy $w; unregister_active 12; menu13 .menu13 \"$title\""
	frame $w.f
	button $w.f.back -text "OK" \
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 12"
	button $w.f.next -text "Next" -underline 0\
		-width 15 -command $nextscript
	bind all <Alt-n> $nextscript
	button $w.f.prev -text "Prev" -underline 0\
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 12; menu11 .menu11 \"$title\""
	bind $w <Alt-p> "catch {focus $oldFocus}; destroy $w; unregister_active 12; menu11 .menu11 \"$title\";break"
	pack $w.f.back $w.f.next $w.f.prev -side left -expand on
	pack $w.f -pady 10 -side bottom -anchor w -fill x
	frame $w.topline -relief ridge -borderwidth 2 -height 2
	pack $w.topline -side top -fill x

	frame $w.botline -relief ridge -borderwidth 2 -height 2
	pack $w.botline -side bottom -fill x

	frame $w.config
	pack $w.config -fill y -expand on

	scrollbar $w.config.vscroll -command "$w.config.canvas yview"
	pack $w.config.vscroll -side right -fill y

	canvas $w.config.canvas -height 1\
		-relief flat -borderwidth 0 -yscrollcommand "$w.config.vscroll set" \
		-width [expr [winfo screenwidth .] * 1 / 2] 
	frame $w.config.f
	bind $w <Key-Down> "$w.config.canvas yview scroll  1 unit;break;"
	bind $w <Key-Up> "$w.config.canvas yview scroll  -1 unit;break;"
	bind $w <Key-Next> "$w.config.canvas yview scroll  1 page;break;"
	bind $w <Key-Prior> "$w.config.canvas yview scroll  -1 page;break;"
	bind $w <Key-Home> "$w.config.canvas yview moveto 0;break;"
	bind $w <Key-End> "$w.config.canvas yview moveto 1 ;break;"
	pack $w.config.canvas -side right -fill y


	dep_bool $w.config.f 12 0 "  AUTCPU12" CONFIG_ARCH_AUTCPU12
	dep_bool $w.config.f 12 1 "  CDB89712" CONFIG_ARCH_CDB89712
	dep_bool $w.config.f 12 2 "  CLEP7312" CONFIG_ARCH_CLEP7312
	dep_bool $w.config.f 12 3 "  EDB7211" CONFIG_ARCH_EDB7211
	dep_bool $w.config.f 12 4 "  FORTUNET" CONFIG_ARCH_FORTUNET
	dep_bool $w.config.f 12 5 "  GUIDEA07" CONFIG_ARCH_GUIDEA07
	dep_bool $w.config.f 12 6 "  P720T" CONFIG_ARCH_P720T
	bool $w.config.f 12 7 "  EP72xx ROM boot" CONFIG_EP72XX_ROM_BOOT



	focus $w
	update_active
	global winx; global winy
	if {[winfo exists .menu3] == 0} then {menu3 .menu3 "System Type"}
	set winx [expr [winfo x .menu3]+30]; set winy [expr [winfo y .menu3]+30]
	if {[winfo exists $w]} then {wm geometry $w +$winx+$winy}
	update idletasks
	if {[winfo exists $w]} then  {$w.config.canvas create window 0 0 -anchor nw -window $w.config.f

	$w.config.canvas configure \
		-width [expr [winfo reqwidth $w.config.f] + 1]\
		-scrollregion "-1 -1 [expr [winfo reqwidth $w.config.f] + 1] \
			 [expr [winfo reqheight $w.config.f] + 1]"

	set winy [expr [winfo reqh $w] - [winfo reqh $w.config.canvas]]
	set scry [expr [winfo screenh $w] / 2]
	set maxy [expr [winfo screenh $w] * 3 / 4]
	set canvtotal [expr [winfo reqh $w.config.f] + 2]
	if [expr $winy + $canvtotal < $maxy] {
		$w.config.canvas configure -height $canvtotal
	} else {
		$w.config.canvas configure -height [expr $scry - $winy]
		}
	}
	update idletasks
	if {[winfo exists $w]} then {
	wm maxsize $w [winfo width $w] [winfo screenheight $w]
	wm minsize $w [winfo width $w] 100

	wm deiconify $w
}
}

proc update_menu12 {} {
	global CONFIG_ARCH_CLPS711X
	global CONFIG_ARCH_AUTCPU12
	if {($CONFIG_ARCH_CLPS711X == 1 || $CONFIG_ARCH_CLPS711X == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ARCH_CLPS711X]];set CONFIG_ARCH_AUTCPU12 [sync_bool $CONFIG_ARCH_AUTCPU12 $tmpvar_dep 0];if {$tmpvar_dep != 1} then {configure_entry .menu12.config.f.x0 disabled {y};} else {configure_entry .menu12.config.f.x0 normal {y};}; configure_entry .menu12.config.f.x0 normal {n l}} else {configure_entry .menu12.config.f.x0 disabled {y n l}}
	global CONFIG_ARCH_CDB89712
	if {($CONFIG_ARCH_CLPS711X == 1 || $CONFIG_ARCH_CLPS711X == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ARCH_CLPS711X]];set CONFIG_ARCH_CDB89712 [sync_bool $CONFIG_ARCH_CDB89712 $tmpvar_dep 0];if {$tmpvar_dep != 1} then {configure_entry .menu12.config.f.x1 disabled {y};} else {configure_entry .menu12.config.f.x1 normal {y};}; configure_entry .menu12.config.f.x1 normal {n l}} else {configure_entry .menu12.config.f.x1 disabled {y n l}}
	global CONFIG_ARCH_CLEP7312
	if {($CONFIG_ARCH_CLPS711X == 1 || $CONFIG_ARCH_CLPS711X == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ARCH_CLPS711X]];set CONFIG_ARCH_CLEP7312 [sync_bool $CONFIG_ARCH_CLEP7312 $tmpvar_dep 0];if {$tmpvar_dep != 1} then {configure_entry .menu12.config.f.x2 disabled {y};} else {configure_entry .menu12.config.f.x2 normal {y};}; configure_entry .menu12.config.f.x2 normal {n l}} else {configure_entry .menu12.config.f.x2 disabled {y n l}}
	global CONFIG_ARCH_EDB7211
	if {($CONFIG_ARCH_CLPS711X == 1 || $CONFIG_ARCH_CLPS711X == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ARCH_CLPS711X]];set CONFIG_ARCH_EDB7211 [sync_bool $CONFIG_ARCH_EDB7211 $tmpvar_dep 0];if {$tmpvar_dep != 1} then {configure_entry .menu12.config.f.x3 disabled {y};} else {configure_entry .menu12.config.f.x3 normal {y};}; configure_entry .menu12.config.f.x3 normal {n l}} else {configure_entry .menu12.config.f.x3 disabled {y n l}}
	global CONFIG_ARCH_FORTUNET
	if {($CONFIG_ARCH_CLPS711X == 1 || $CONFIG_ARCH_CLPS711X == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ARCH_CLPS711X]];set CONFIG_ARCH_FORTUNET [sync_bool $CONFIG_ARCH_FORTUNET $tmpvar_dep 0];if {$tmpvar_dep != 1} then {configure_entry .menu12.config.f.x4 disabled {y};} else {configure_entry .menu12.config.f.x4 normal {y};}; configure_entry .menu12.config.f.x4 normal {n l}} else {configure_entry .menu12.config.f.x4 disabled {y n l}}
	global CONFIG_ARCH_GUIDEA07
	if {($CONFIG_ARCH_CLPS711X == 1 || $CONFIG_ARCH_CLPS711X == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ARCH_CLPS711X]];set CONFIG_ARCH_GUIDEA07 [sync_bool $CONFIG_ARCH_GUIDEA07 $tmpvar_dep 0];if {$tmpvar_dep != 1} then {configure_entry .menu12.config.f.x5 disabled {y};} else {configure_entry .menu12.config.f.x5 normal {y};}; configure_entry .menu12.config.f.x5 normal {n l}} else {configure_entry .menu12.config.f.x5 disabled {y n l}}
	global CONFIG_ARCH_P720T
	if {($CONFIG_ARCH_CLPS711X == 1 || $CONFIG_ARCH_CLPS711X == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ARCH_CLPS711X]];set CONFIG_ARCH_P720T [sync_bool $CONFIG_ARCH_P720T $tmpvar_dep 0];if {$tmpvar_dep != 1} then {configure_entry .menu12.config.f.x6 disabled {y};} else {configure_entry .menu12.config.f.x6 normal {y};}; configure_entry .menu12.config.f.x6 normal {n l}} else {configure_entry .menu12.config.f.x6 disabled {y n l}}
	global CONFIG_ARCH_EP7211
	global CONFIG_ARCH_EP7212
	global CONFIG_EP72XX_ROM_BOOT
	if {($CONFIG_ARCH_EP7211 == 1 || $CONFIG_ARCH_EP7212 == 1)} then {
	configure_entry .menu12.config.f.x7 normal {n l y}} else {configure_entry .menu12.config.f.x7 disabled {y n l}}
}


proc update_define_menu12 {} {
	update_define_mainmenu
	global CONFIG_MODULES
	global CONFIG_ARCH_EP7211
	global CONFIG_ARCH_EP7212
	global CONFIG_ARCH_CDB89712
	global CONFIG_EP72XX_ROM_BOOT
set CONFIG_EP72XX_ROM_BOOT [expr $CONFIG_EP72XX_ROM_BOOT|16]
	global CONFIG_ARCH_CLPS711X
	global CONFIG_ARCH_AUTCPU12
	if {($CONFIG_ARCH_CLPS711X == 1 || $CONFIG_ARCH_CLPS711X == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ARCH_CLPS711X]];set CONFIG_ARCH_AUTCPU12 [sync_bool $CONFIG_ARCH_AUTCPU12 $tmpvar_dep 0];set CONFIG_ARCH_AUTCPU12 [expr $CONFIG_ARCH_AUTCPU12&15]}
	if {($CONFIG_ARCH_CLPS711X == 1 || $CONFIG_ARCH_CLPS711X == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ARCH_CLPS711X]];set CONFIG_ARCH_CDB89712 [sync_bool $CONFIG_ARCH_CDB89712 $tmpvar_dep 0];set CONFIG_ARCH_CDB89712 [expr $CONFIG_ARCH_CDB89712&15]}
	global CONFIG_ARCH_CLEP7312
	if {($CONFIG_ARCH_CLPS711X == 1 || $CONFIG_ARCH_CLPS711X == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ARCH_CLPS711X]];set CONFIG_ARCH_CLEP7312 [sync_bool $CONFIG_ARCH_CLEP7312 $tmpvar_dep 0];set CONFIG_ARCH_CLEP7312 [expr $CONFIG_ARCH_CLEP7312&15]}
	global CONFIG_ARCH_EDB7211
	if {($CONFIG_ARCH_CLPS711X == 1 || $CONFIG_ARCH_CLPS711X == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ARCH_CLPS711X]];set CONFIG_ARCH_EDB7211 [sync_bool $CONFIG_ARCH_EDB7211 $tmpvar_dep 0];set CONFIG_ARCH_EDB7211 [expr $CONFIG_ARCH_EDB7211&15]}
	global CONFIG_ARCH_FORTUNET
	if {($CONFIG_ARCH_CLPS711X == 1 || $CONFIG_ARCH_CLPS711X == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ARCH_CLPS711X]];set CONFIG_ARCH_FORTUNET [sync_bool $CONFIG_ARCH_FORTUNET $tmpvar_dep 0];set CONFIG_ARCH_FORTUNET [expr $CONFIG_ARCH_FORTUNET&15]}
	global CONFIG_ARCH_GUIDEA07
	if {($CONFIG_ARCH_CLPS711X == 1 || $CONFIG_ARCH_CLPS711X == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ARCH_CLPS711X]];set CONFIG_ARCH_GUIDEA07 [sync_bool $CONFIG_ARCH_GUIDEA07 $tmpvar_dep 0];set CONFIG_ARCH_GUIDEA07 [expr $CONFIG_ARCH_GUIDEA07&15]}
	global CONFIG_ARCH_P720T
	if {($CONFIG_ARCH_CLPS711X == 1 || $CONFIG_ARCH_CLPS711X == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ARCH_CLPS711X]];set CONFIG_ARCH_P720T [sync_bool $CONFIG_ARCH_P720T $tmpvar_dep 0];set CONFIG_ARCH_P720T [expr $CONFIG_ARCH_P720T&15]}
	if {($CONFIG_ARCH_EDB7211 == 1)} then {	global CONSTANT_Y
set CONFIG_ARCH_EP7211 $CONSTANT_Y }
	if {($CONFIG_ARCH_EDB7211 != 1)} then {	global CONSTANT_N
set CONFIG_ARCH_EP7211 $CONSTANT_N }
	if {($CONFIG_ARCH_P720T == 1)} then {	global CONSTANT_Y
set CONFIG_ARCH_EP7212 $CONSTANT_Y }
	if {($CONFIG_ARCH_P720T != 1)} then {	global CONSTANT_N
set CONFIG_ARCH_EP7212 $CONSTANT_N }
	if {($CONFIG_ARCH_EP7211 == 1 || $CONFIG_ARCH_EP7212 == 1)} then {
	set CONFIG_EP72XX_ROM_BOOT [expr $CONFIG_EP72XX_ROM_BOOT&15]}
	if {($CONFIG_ARCH_GUIDEA07 == 1)} then {	global CONSTANT_Y
set CONFIG_ARCH_CDB89712 $CONSTANT_Y }
}


proc menu13 {w title} {
	set oldFocus [focus]
	catch {focus .menu3}
	catch {destroy $w; unregister_active 13}
	toplevel $w -class Dialog
	wm withdraw $w
	global active_menus
	set active_menus [lsort -integer [linsert $active_menus end 13]]
	message $w.m -width 400 -aspect 300 -text \
		"ADI FCC Implementation Options"  -relief raised
	pack $w.m -pady 10 -side top -padx 10
	wm title $w "ADI FCC Implementation Options" 

	bind $w <Escape> "catch {focus $oldFocus}; destroy $w; unregister_active 13; break"
	set nextscript "catch {focus $oldFocus}; destroy $w; unregister_active 13; catch {destroy .menu3}; unregister_active 3; menu14 .menu14 \"$title\""
	frame $w.f
	button $w.f.back -text "OK" \
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 13"
	button $w.f.next -text "Next" -underline 0\
		-width 15 -command $nextscript
	bind all <Alt-n> $nextscript
	button $w.f.prev -text "Prev" -underline 0\
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 13; menu12 .menu12 \"$title\""
	bind $w <Alt-p> "catch {focus $oldFocus}; destroy $w; unregister_active 13; menu12 .menu12 \"$title\";break"
	pack $w.f.back $w.f.next $w.f.prev -side left -expand on
	pack $w.f -pady 10 -side bottom -anchor w -fill x
	frame $w.topline -relief ridge -borderwidth 2 -height 2
	pack $w.topline -side top -fill x

	frame $w.botline -relief ridge -borderwidth 2 -height 2
	pack $w.botline -side bottom -fill x

	frame $w.config
	pack $w.config -fill y -expand on

	scrollbar $w.config.vscroll -command "$w.config.canvas yview"
	pack $w.config.vscroll -side right -fill y

	canvas $w.config.canvas -height 1\
		-relief flat -borderwidth 0 -yscrollcommand "$w.config.vscroll set" \
		-width [expr [winfo screenwidth .] * 1 / 2] 
	frame $w.config.f
	bind $w <Key-Down> "$w.config.canvas yview scroll  1 unit;break;"
	bind $w <Key-Up> "$w.config.canvas yview scroll  -1 unit;break;"
	bind $w <Key-Next> "$w.config.canvas yview scroll  1 page;break;"
	bind $w <Key-Prior> "$w.config.canvas yview scroll  -1 page;break;"
	bind $w <Key-Home> "$w.config.canvas yview moveto 0;break;"
	bind $w <Key-End> "$w.config.canvas yview moveto 1 ;break;"
	pack $w.config.canvas -side right -fill y


	global tmpvar_7
	minimenu $w.config.f 13 0 "ADI FCC System Type" tmpvar_7 CONFIG_ARCH_ADI_EVB
	menu $w.config.f.x0.x.menu -tearoffcommand "menutitle \"ADI FCC System Type\""
	$w.config.f.x0.x.menu add radiobutton -label "80200EVB" -variable tmpvar_7 -value "80200EVB" -command "update_active"
	$w.config.f.x0.x.menu add radiobutton -label "BRH" -variable tmpvar_7 -value "BRH" -command "update_active"
	menusplit $w $w.config.f.x0.x.menu 2



	focus $w
	update_active
	global winx; global winy
	if {[winfo exists .menu3] == 0} then {menu3 .menu3 "System Type"}
	set winx [expr [winfo x .menu3]+30]; set winy [expr [winfo y .menu3]+30]
	if {[winfo exists $w]} then {wm geometry $w +$winx+$winy}
	update idletasks
	if {[winfo exists $w]} then  {$w.config.canvas create window 0 0 -anchor nw -window $w.config.f

	$w.config.canvas configure \
		-width [expr [winfo reqwidth $w.config.f] + 1]\
		-scrollregion "-1 -1 [expr [winfo reqwidth $w.config.f] + 1] \
			 [expr [winfo reqheight $w.config.f] + 1]"

	set winy [expr [winfo reqh $w] - [winfo reqh $w.config.canvas]]
	set scry [expr [winfo screenh $w] / 2]
	set maxy [expr [winfo screenh $w] * 3 / 4]
	set canvtotal [expr [winfo reqh $w.config.f] + 2]
	if [expr $winy + $canvtotal < $maxy] {
		$w.config.canvas configure -height $canvtotal
	} else {
		$w.config.canvas configure -height [expr $scry - $winy]
		}
	}
	update idletasks
	if {[winfo exists $w]} then {
	wm maxsize $w [winfo width $w] [winfo screenheight $w]
	wm minsize $w [winfo width $w] 100

	wm deiconify $w
}
}

proc update_menu13 {} {
	global CONFIG_ARCH_ADIFCC
	if {($CONFIG_ARCH_ADIFCC == 1)} then {configure_entry .menu13.config.f.x0 normal {x l}} else {configure_entry .menu13.config.f.x0 disabled {x l}}
}


proc update_define_menu13 {} {
	update_define_mainmenu
	global CONFIG_MODULES
	global tmpvar_7
	global CONFIG_ARCH_ADI_EVB
	if {$tmpvar_7 == "80200EVB"} then {set CONFIG_ARCH_ADI_EVB 1} else {set CONFIG_ARCH_ADI_EVB 0}
	global CONFIG_ARCH_BRH
	if {$tmpvar_7 == "BRH"} then {set CONFIG_ARCH_BRH 1} else {set CONFIG_ARCH_BRH 0}
}


menu_option menu14 14 "General setup"
proc menu14 {w title} {
	set oldFocus [focus]
	catch {destroy $w; unregister_active 14}
	toplevel $w -class Dialog
	wm withdraw $w
	global active_menus
	set active_menus [lsort -integer [linsert $active_menus end 14]]
	message $w.m -width 400 -aspect 300 -text \
		"General setup"  -relief raised
	pack $w.m -pady 10 -side top -padx 10
	wm title $w "General setup" 

	bind $w <Escape> "catch {focus $oldFocus}; destroy $w; unregister_active 14; break"
	set nextscript "catch {focus $oldFocus}; menu15 .menu15 \"$title\""
	frame $w.f
	button $w.f.back -text "Main Menu" \
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 14"
	button $w.f.next -text "Next" -underline 0\
		-width 15 -command $nextscript
	bind all <Alt-n> $nextscript
	button $w.f.prev -text "Prev" -underline 0\
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 14; menu13 .menu13 \"$title\""
	bind $w <Alt-p> "catch {focus $oldFocus}; destroy $w; unregister_active 14; menu13 .menu13 \"$title\";break"
	pack $w.f.back $w.f.next $w.f.prev -side left -expand on
	pack $w.f -pady 10 -side bottom -anchor w -fill x
	frame $w.topline -relief ridge -borderwidth 2 -height 2
	pack $w.topline -side top -fill x

	frame $w.botline -relief ridge -borderwidth 2 -height 2
	pack $w.botline -side bottom -fill x

	frame $w.config
	pack $w.config -fill y -expand on

	scrollbar $w.config.vscroll -command "$w.config.canvas yview"
	pack $w.config.vscroll -side right -fill y

	canvas $w.config.canvas -height 1\
		-relief flat -borderwidth 0 -yscrollcommand "$w.config.vscroll set" \
		-width [expr [winfo screenwidth .] * 1 / 2] 
	frame $w.config.f
	bind $w <Key-Down> "$w.config.canvas yview scroll  1 unit;break;"
	bind $w <Key-Up> "$w.config.canvas yview scroll  -1 unit;break;"
	bind $w <Key-Next> "$w.config.canvas yview scroll  1 page;break;"
	bind $w <Key-Prior> "$w.config.canvas yview scroll  -1 page;break;"
	bind $w <Key-Home> "$w.config.canvas yview moveto 0;break;"
	bind $w <Key-End> "$w.config.canvas yview moveto 1 ;break;"
	pack $w.config.canvas -side right -fill y


	bool $w.config.f 14 0 "PCI support" CONFIG_PCI_INTEGRATOR
	bool $w.config.f 14 1 "Set custom kernel base address" CONFIG_KERNEL_START_BOOL
	hex $w.config.f 14 2 "  Virtual address of kernel base" CONFIG_KERNEL_START
	bool $w.config.f 14 3 "Compressed boot loader in ROM/flash" CONFIG_ZBOOT_ROM
	hex $w.config.f 14 4 "Compressed ROM boot loader base address" CONFIG_ZBOOT_ROM_TEXT
	hex $w.config.f 14 5 "Compressed ROM boot loader BSS address" CONFIG_ZBOOT_ROM_BSS
	dep_bool $w.config.f 14 6 "Support CPU clock change (EXPERIMENTAL)" CONFIG_CPU_FREQ
	bool $w.config.f 14 7 "PCI device name database" CONFIG_PCI_NAMES
	bool $w.config.f 14 8 "Support for hot-pluggable devices" CONFIG_HOTPLUG
	submenu $w.config.f 14 9 "PCMCIA/CardBus support" 15
	bool $w.config.f 14 10 "  Use second PCMCIA/CF slot (disables on-board IDE)" CONFIG_SA_PCMCIA_SLOT_1
	bool $w.config.f 14 11 "Networking support" CONFIG_NET
	bool $w.config.f 14 12 "System V IPC" CONFIG_SYSVIPC
	bool $w.config.f 14 13 "BSD Process Accounting" CONFIG_BSD_PROCESS_ACCT
	bool $w.config.f 14 14 "Sysctl support" CONFIG_SYSCTL
	comment $w.config.f 14 15 "At least one math emulation must be selected"
	tristate $w.config.f 14 16 "NWFPE math emulation" CONFIG_FPE_NWFPE
	bool $w.config.f 14 17 "  Support extended precision" CONFIG_FPE_NWFPE_XP
	dep_tristate $w.config.f 14 18 "FastFPE math emulation (EXPERIMENTAL)" CONFIG_FPE_FASTFPE
	global tmpvar_10
	minimenu $w.config.f 14 19 "Kernel core (/proc/kcore) format" tmpvar_10 CONFIG_KCORE_ELF
	menu $w.config.f.x19.x.menu -tearoffcommand "menutitle \"Kernel core (/proc/kcore) format\""
	$w.config.f.x19.x.menu add radiobutton -label "ELF" -variable tmpvar_10 -value "ELF" -command "update_active"
	$w.config.f.x19.x.menu add radiobutton -label "A.OUT" -variable tmpvar_10 -value "A.OUT" -command "update_active"
	menusplit $w $w.config.f.x19.x.menu 2
	tristate $w.config.f 14 20 "Kernel support for a.out binaries" CONFIG_BINFMT_AOUT
	tristate $w.config.f 14 21 "Kernel support for ELF binaries" CONFIG_BINFMT_ELF
	tristate $w.config.f 14 22 "Kernel support for MISC binaries" CONFIG_BINFMT_MISC
	dep_bool $w.config.f 14 23 "Power Management support (experimental)" CONFIG_PM
	dep_tristate $w.config.f 14 24 "RISC OS personality" CONFIG_ARTHUR
	istring $w.config.f 14 25 "Default kernel command string" CONFIG_CMDLINE
	bool $w.config.f 14 26 "Timer and CPU usage LEDs" CONFIG_LEDS
	bool $w.config.f 14 27 "  Timer LED" CONFIG_LEDS_TIMER
	bool $w.config.f 14 28 "  CPU usage LED" CONFIG_LEDS_CPU
	bool $w.config.f 14 29 "Kernel-mode alignment trap handler" CONFIG_ALIGNMENT_TRAP



	focus $w
	update_active
	global winx; global winy
	set winx [expr [winfo x .]+30]; set winy [expr [winfo y .]+30]
	if {[winfo exists $w]} then {wm geometry $w +$winx+$winy}
	update idletasks
	if {[winfo exists $w]} then  {$w.config.canvas create window 0 0 -anchor nw -window $w.config.f

	$w.config.canvas configure \
		-width [expr [winfo reqwidth $w.config.f] + 1]\
		-scrollregion "-1 -1 [expr [winfo reqwidth $w.config.f] + 1] \
			 [expr [winfo reqheight $w.config.f] + 1]"

	set winy [expr [winfo reqh $w] - [winfo reqh $w.config.canvas]]
	set scry [expr [winfo screenh $w] / 2]
	set maxy [expr [winfo screenh $w] * 3 / 4]
	set canvtotal [expr [winfo reqh $w.config.f] + 2]
	if [expr $winy + $canvtotal < $maxy] {
		$w.config.canvas configure -height $canvtotal
	} else {
		$w.config.canvas configure -height [expr $scry - $winy]
		}
	}
	update idletasks
	if {[winfo exists $w]} then {
	wm maxsize $w [winfo width $w] [winfo screenheight $w]
	wm minsize $w [winfo width $w] 100

	wm deiconify $w
}
}

proc update_menu14 {} {
	global CONFIG_ARCH_SHARK
	global CONFIG_FOOTBRIDGE_HOST
	global CONFIG_ARCH_IXP1200
	global CONFIG_ARCH_IOP3XX
	global CONFIG_ARCH_BRH
	global CONFIG_ARCH_IXP425
	global CONFIG_ARCH_IXP2000
	global CONFIG_ARCH_INTEGRATOR
	global CONFIG_ARCH_KS8695
	global CONFIG_PCI_INTEGRATOR
	if {($CONFIG_ARCH_SHARK != 1 && $CONFIG_FOOTBRIDGE_HOST != 1 && $CONFIG_ARCH_IXP1200 != 1 && $CONFIG_ARCH_IOP3XX != 1 && $CONFIG_ARCH_BRH != 1 && $CONFIG_ARCH_IXP425 != 1 && $CONFIG_ARCH_IXP2000 != 1) && ($CONFIG_ARCH_INTEGRATOR == 1 || $CONFIG_ARCH_KS8695 == 1)} then {
	configure_entry .menu14.config.f.x0 normal {n l y}} else {configure_entry .menu14.config.f.x0 disabled {y n l}}
	global CONFIG_ADVANCED_OPTIONS
	global CONFIG_CPU_32
	global CONFIG_DISCONTIGMEM
	global CONFIG_KERNEL_START_BOOL
	if {($CONFIG_ADVANCED_OPTIONS == 1 && $CONFIG_CPU_32 == 1 && $CONFIG_DISCONTIGMEM != 1)} then {
	configure_entry .menu14.config.f.x1 normal {n l y}} else {configure_entry .menu14.config.f.x1 disabled {y n l}}
	global CONFIG_KERNEL_START
	if {($CONFIG_ADVANCED_OPTIONS == 1 && $CONFIG_CPU_32 == 1 && $CONFIG_DISCONTIGMEM != 1) && ($CONFIG_KERNEL_START_BOOL == 1)} then {.menu14.config.f.x2.x configure -state normal -foreground [ cget .ref -foreground ]; .menu14.config.f.x2.l configure -state normal; } else {.menu14.config.f.x2.x configure -state disabled -foreground [ cget .ref -disabledforeground ]; .menu14.config.f.x2.l configure -state disabled}
	global CONFIG_ARCH_SA1100
	global CONFIG_EXPERIMENTAL
	global CONFIG_CPU_FREQ
	if {($CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_INTEGRATOR == 1 || $CONFIG_ARCH_KS8695 == 1) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_EXPERIMENTAL]];set CONFIG_CPU_FREQ [sync_bool $CONFIG_CPU_FREQ $tmpvar_dep 0];if {$tmpvar_dep != 1} then {configure_entry .menu14.config.f.x6 disabled {y};} else {configure_entry .menu14.config.f.x6 normal {y};}; configure_entry .menu14.config.f.x6 normal {n l}} else {configure_entry .menu14.config.f.x6 disabled {y n l}}
	global CONFIG_PCI
	global CONFIG_PCI_NAMES
	if {($CONFIG_PCI == 1)} then {
	configure_entry .menu14.config.f.x7 normal {n l y}} else {configure_entry .menu14.config.f.x7 disabled {y n l}}
	global CONFIG_HOTPLUG
	if {($CONFIG_HOTPLUG == 1)} then {configure_entry .menu14.config.f.x9 normal {m}} else {configure_entry .menu14.config.f.x9 disabled {m}}
	global CONFIG_SA1100_ACCELENT
	global CONFIG_PCMCIA
	global CONFIG_SA_PCMCIA_SLOT_1
	if {($CONFIG_SA1100_ACCELENT == 1) && ($CONFIG_PCMCIA != 0)} then {
	configure_entry .menu14.config.f.x10 normal {n l y}} else {configure_entry .menu14.config.f.x10 disabled {y n l}}
	global CONFIG_FPE_NWFPE
	global CONFIG_MODULES

	if {($CONFIG_MODULES == 1)} then {configure_entry .menu14.config.f.x16 normal {m}} else {configure_entry .menu14.config.f.x16 disabled {m}}
	global CONFIG_FPE_NWFPE_XP
	if {($CONFIG_FPE_NWFPE != 0)} then {
	configure_entry .menu14.config.f.x17 normal {n l y}} else {configure_entry .menu14.config.f.x17 disabled {y n l}}
	global CONFIG_CPU_26
	global CONFIG_CPU_32v3
	global CONFIG_FPE_FASTFPE
	if {($CONFIG_CPU_26 == 0 && $CONFIG_CPU_32v3 == 0) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_EXPERIMENTAL]];set CONFIG_FPE_FASTFPE [sync_tristate $CONFIG_FPE_FASTFPE $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu14.config.f.x18 disabled {y}} else {configure_entry .menu14.config.f.x18 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu14.config.f.x18 disabled {m}} else {configure_entry .menu14.config.f.x18 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu14.config.f.x18 normal {m}} else {configure_entry .menu14.config.f.x18 disabled {m}}; configure_entry .menu14.config.f.x18 normal {n l}} else {configure_entry .menu14.config.f.x18 disabled {y n m l}}
	global CONFIG_BINFMT_AOUT

	if {($CONFIG_MODULES == 1)} then {configure_entry .menu14.config.f.x20 normal {m}} else {configure_entry .menu14.config.f.x20 disabled {m}}
	global CONFIG_BINFMT_ELF

	if {($CONFIG_MODULES == 1)} then {configure_entry .menu14.config.f.x21 normal {m}} else {configure_entry .menu14.config.f.x21 disabled {m}}
	global CONFIG_BINFMT_MISC

	if {($CONFIG_MODULES == 1)} then {configure_entry .menu14.config.f.x22 normal {m}} else {configure_entry .menu14.config.f.x22 disabled {m}}
	global CONFIG_PM
	if {($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_EXPERIMENTAL]];set CONFIG_PM [sync_bool $CONFIG_PM $tmpvar_dep 0];if {$tmpvar_dep != 1} then {configure_entry .menu14.config.f.x23 disabled {y};} else {configure_entry .menu14.config.f.x23 normal {y};}; configure_entry .menu14.config.f.x23 normal {n l}} else {configure_entry .menu14.config.f.x23 disabled {y n l}}
	global CONFIG_ARTHUR
	if {($CONFIG_CPU_32 == 1 || $CONFIG_CPU_32 == 2 || $CONFIG_CPU_32 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_CPU_32]];set CONFIG_ARTHUR [sync_tristate $CONFIG_ARTHUR $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu14.config.f.x24 disabled {y}} else {configure_entry .menu14.config.f.x24 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu14.config.f.x24 disabled {m}} else {configure_entry .menu14.config.f.x24 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu14.config.f.x24 normal {m}} else {configure_entry .menu14.config.f.x24 disabled {m}}; configure_entry .menu14.config.f.x24 normal {n l}} else {configure_entry .menu14.config.f.x24 disabled {y n m l}}
	global CONFIG_ARCH_NETWINDER
	global CONFIG_ARCH_EBSA110
	global CONFIG_ARCH_EBSA285
	global CONFIG_ARCH_FTVPCI
	global CONFIG_ARCH_CO285
	global CONFIG_ARCH_CDB89712
	global CONFIG_ARCH_P720T
	global CONFIG_ARCH_OMAHA
	global CONFIG_ARCH_IXDP2800
	global CONFIG_LEDS
	if {($CONFIG_ARCH_NETWINDER == 1 || $CONFIG_ARCH_EBSA110 == 1 || $CONFIG_ARCH_EBSA285 == 1 || $CONFIG_ARCH_FTVPCI == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_CO285 == 1 || $CONFIG_ARCH_IXP1200 == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_INTEGRATOR == 1 || $CONFIG_ARCH_KS8695 == 1 || $CONFIG_ARCH_CDB89712 == 1 || $CONFIG_ARCH_P720T == 1 || $CONFIG_ARCH_OMAHA == 1 || $CONFIG_ARCH_IXDP2800 == 1)} then {
	configure_entry .menu14.config.f.x26 normal {n l y}} else {configure_entry .menu14.config.f.x26 disabled {y n l}}
	global CONFIG_LEDS_TIMER
	if {($CONFIG_ARCH_NETWINDER == 1 || $CONFIG_ARCH_EBSA110 == 1 || $CONFIG_ARCH_EBSA285 == 1 || $CONFIG_ARCH_FTVPCI == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_CO285 == 1 || $CONFIG_ARCH_IXP1200 == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_INTEGRATOR == 1 || $CONFIG_ARCH_KS8695 == 1 || $CONFIG_ARCH_CDB89712 == 1 || $CONFIG_ARCH_P720T == 1 || $CONFIG_ARCH_OMAHA == 1 || $CONFIG_ARCH_IXDP2800 == 1) && ($CONFIG_LEDS == 1) && ($CONFIG_ARCH_NETWINDER == 1 || $CONFIG_ARCH_EBSA285 == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_CO285 == 1 || $CONFIG_ARCH_IXP1200 == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_INTEGRATOR == 1 || $CONFIG_ARCH_KS8695 == 1 || $CONFIG_ARCH_P720T == 1 || $CONFIG_ARCH_OMAHA == 1 || $CONFIG_ARCH_IXDP2800 == 1)} then {
	configure_entry .menu14.config.f.x27 normal {n l y}} else {configure_entry .menu14.config.f.x27 disabled {y n l}}
	global CONFIG_LEDS_CPU
	if {($CONFIG_ARCH_NETWINDER == 1 || $CONFIG_ARCH_EBSA110 == 1 || $CONFIG_ARCH_EBSA285 == 1 || $CONFIG_ARCH_FTVPCI == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_CO285 == 1 || $CONFIG_ARCH_IXP1200 == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_INTEGRATOR == 1 || $CONFIG_ARCH_KS8695 == 1 || $CONFIG_ARCH_CDB89712 == 1 || $CONFIG_ARCH_P720T == 1 || $CONFIG_ARCH_OMAHA == 1 || $CONFIG_ARCH_IXDP2800 == 1) && ($CONFIG_LEDS == 1) && ($CONFIG_ARCH_NETWINDER == 1 || $CONFIG_ARCH_EBSA285 == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_CO285 == 1 || $CONFIG_ARCH_IXP1200 == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_INTEGRATOR == 1 || $CONFIG_ARCH_KS8695 == 1 || $CONFIG_ARCH_P720T == 1 || $CONFIG_ARCH_OMAHA == 1 || $CONFIG_ARCH_IXDP2800 == 1)} then {
	configure_entry .menu14.config.f.x28 normal {n l y}} else {configure_entry .menu14.config.f.x28 disabled {y n l}}
	global CONFIG_ALIGNMENT_TRAP
	if {($CONFIG_ARCH_SA1100 != 1) && ($CONFIG_CPU_32 == 1 && $CONFIG_ARCH_EBSA110 != 1)} then {
	configure_entry .menu14.config.f.x29 normal {n l y}} else {configure_entry .menu14.config.f.x29 disabled {y n l}}
}


proc update_define_menu14 {} {
	update_define_mainmenu
	global CONFIG_MODULES
	global CONFIG_PCI
	global CONFIG_PCI_AUTOCONFIG
	global CONFIG_ISA
	global CONFIG_ISA_DMA
	global CONFIG_KERNEL_START
	global CONFIG_PCMCIA
	global CONFIG_FPE_NWFPE
	global CONFIG_BINFMT_AOUT
	global CONFIG_BINFMT_ELF
	global CONFIG_BINFMT_MISC
	global CONFIG_LEDS_TIMER
	global CONFIG_ALIGNMENT_TRAP
	global CONFIG_PCI_INTEGRATOR
set CONFIG_PCI_INTEGRATOR [expr $CONFIG_PCI_INTEGRATOR|16]
	global CONFIG_KERNEL_START_BOOL
set CONFIG_KERNEL_START_BOOL [expr $CONFIG_KERNEL_START_BOOL|16]
	global CONFIG_PCI_NAMES
set CONFIG_PCI_NAMES [expr $CONFIG_PCI_NAMES|16]
	global CONFIG_SA_PCMCIA_SLOT_1
set CONFIG_SA_PCMCIA_SLOT_1 [expr $CONFIG_SA_PCMCIA_SLOT_1|16]
	global CONFIG_FPE_NWFPE_XP
set CONFIG_FPE_NWFPE_XP [expr $CONFIG_FPE_NWFPE_XP|16]
	global CONFIG_LEDS
set CONFIG_LEDS [expr $CONFIG_LEDS|16]
set CONFIG_LEDS_TIMER [expr $CONFIG_LEDS_TIMER|16]
	global CONFIG_LEDS_CPU
set CONFIG_LEDS_CPU [expr $CONFIG_LEDS_CPU|16]
set CONFIG_ALIGNMENT_TRAP [expr $CONFIG_ALIGNMENT_TRAP|16]
	global CONFIG_ARCH_SHARK
	global CONFIG_FOOTBRIDGE_HOST
	global CONFIG_ARCH_IXP1200
	global CONFIG_ARCH_IOP3XX
	global CONFIG_ARCH_BRH
	global CONFIG_ARCH_IXP425
	global CONFIG_ARCH_IXP2000
	if {($CONFIG_ARCH_SHARK == 1 || $CONFIG_FOOTBRIDGE_HOST == 1 || $CONFIG_ARCH_IXP1200 == 1 || $CONFIG_ARCH_IOP3XX == 1 || $CONFIG_ARCH_BRH == 1 || $CONFIG_ARCH_IXP425 == 1 || $CONFIG_ARCH_IXP2000 == 1)} then {	global CONSTANT_Y
set CONFIG_PCI $CONSTANT_Y }
	global CONFIG_ARCH_INTEGRATOR
	global CONFIG_ARCH_KS8695
	if {($CONFIG_ARCH_SHARK != 1 && $CONFIG_FOOTBRIDGE_HOST != 1 && $CONFIG_ARCH_IXP1200 != 1 && $CONFIG_ARCH_IOP3XX != 1 && $CONFIG_ARCH_BRH != 1 && $CONFIG_ARCH_IXP425 != 1 && $CONFIG_ARCH_IXP2000 != 1) && ($CONFIG_ARCH_INTEGRATOR == 1 || $CONFIG_ARCH_KS8695 == 1)} then {
	set CONFIG_PCI_INTEGRATOR [expr $CONFIG_PCI_INTEGRATOR&15]}
	if {($CONFIG_ARCH_SHARK != 1 && $CONFIG_FOOTBRIDGE_HOST != 1 && $CONFIG_ARCH_IXP1200 != 1 && $CONFIG_ARCH_IOP3XX != 1 && $CONFIG_ARCH_BRH != 1 && $CONFIG_ARCH_IXP425 != 1 && $CONFIG_ARCH_IXP2000 != 1) && ($CONFIG_ARCH_INTEGRATOR == 1 || $CONFIG_ARCH_KS8695 == 1)} then {set CONFIG_PCI $CONFIG_PCI_INTEGRATOR }
	if {($CONFIG_ARCH_SHARK != 1 && $CONFIG_FOOTBRIDGE_HOST != 1 && $CONFIG_ARCH_IXP1200 != 1 && $CONFIG_ARCH_IOP3XX != 1 && $CONFIG_ARCH_BRH != 1 && $CONFIG_ARCH_IXP425 != 1 && $CONFIG_ARCH_IXP2000 != 1) && ($CONFIG_ARCH_INTEGRATOR != 1 && $CONFIG_ARCH_KS8695 != 1)} then {	global CONSTANT_N
set CONFIG_PCI $CONSTANT_N }
	if {($CONFIG_ARCH_IXP1200 == 1 || $CONFIG_ARCH_IOP3XX == 1 || $CONFIG_ARCH_BRH == 1 || $CONFIG_ARCH_IXP425 == 1 || $CONFIG_ARCH_IXP2000 == 1)} then {	global CONSTANT_Y
set CONFIG_PCI_AUTOCONFIG $CONSTANT_Y }
	global CONFIG_ARCH_CLPS7500
	global CONFIG_ARCH_RISCSTATION
	global CONFIG_ARCH_EBSA110
	global CONFIG_ARCH_CDB89712
	global CONFIG_ARCH_EDB7211
	global CONFIG_ARCH_SA1100
	if {($CONFIG_FOOTBRIDGE_HOST == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_EBSA110 == 1 || $CONFIG_ARCH_CDB89712 == 1 || $CONFIG_ARCH_EDB7211 == 1 || $CONFIG_ARCH_SA1100 == 1)} then {	global CONSTANT_Y
set CONFIG_ISA $CONSTANT_Y }
	if {($CONFIG_FOOTBRIDGE_HOST != 1 && $CONFIG_ARCH_SHARK != 1 && $CONFIG_ARCH_CLPS7500 != 1 && $CONFIG_ARCH_RISCSTATION != 1 && $CONFIG_ARCH_EBSA110 != 1 && $CONFIG_ARCH_CDB89712 != 1 && $CONFIG_ARCH_EDB7211 != 1 && $CONFIG_ARCH_SA1100 != 1)} then {	global CONSTANT_N
set CONFIG_ISA $CONSTANT_N }
	if {($CONFIG_FOOTBRIDGE_HOST == 1 || $CONFIG_ARCH_SHARK == 1)} then {	global CONSTANT_Y
set CONFIG_ISA_DMA $CONSTANT_Y }
	if {($CONFIG_FOOTBRIDGE_HOST != 1 && $CONFIG_ARCH_SHARK != 1)} then {	global CONSTANT_N
set CONFIG_ISA_DMA $CONSTANT_N }
	global CONFIG_ADVANCED_OPTIONS
	global CONFIG_CPU_32
	global CONFIG_DISCONTIGMEM
	if {($CONFIG_ADVANCED_OPTIONS == 1 && $CONFIG_CPU_32 == 1 && $CONFIG_DISCONTIGMEM != 1)} then {
	set CONFIG_KERNEL_START_BOOL [expr $CONFIG_KERNEL_START_BOOL&15]}
	if {($CONFIG_ADVANCED_OPTIONS == 1 && $CONFIG_CPU_32 == 1 && $CONFIG_DISCONTIGMEM != 1) && ($CONFIG_KERNEL_START_BOOL == 1)} then {validate_hex CONFIG_KERNEL_START "$CONFIG_KERNEL_START" 0xc0000000}
	if {($CONFIG_KERNEL_START_BOOL != 1)} then {set CONFIG_KERNEL_START 0xc0000000 }
	global CONFIG_EXPERIMENTAL
	global CONFIG_CPU_FREQ
	if {($CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_INTEGRATOR == 1 || $CONFIG_ARCH_KS8695 == 1) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_EXPERIMENTAL]];set CONFIG_CPU_FREQ [sync_bool $CONFIG_CPU_FREQ $tmpvar_dep 0];set CONFIG_CPU_FREQ [expr $CONFIG_CPU_FREQ&15]}
	if {($CONFIG_PCI == 1)} then {
	set CONFIG_PCI_NAMES [expr $CONFIG_PCI_NAMES&15]}
	global CONFIG_HOTPLUG
	if {($CONFIG_HOTPLUG != 1)} then {	global CONSTANT_N
set CONFIG_PCMCIA $CONSTANT_N }
	global CONFIG_SA1100_ACCELENT
	if {($CONFIG_SA1100_ACCELENT == 1) && ($CONFIG_PCMCIA != 0)} then {
	set CONFIG_SA_PCMCIA_SLOT_1 [expr $CONFIG_SA_PCMCIA_SLOT_1&15]}

	if {($CONFIG_MODULES == 0)} then {if {($CONFIG_FPE_NWFPE == 2)} then {set CONFIG_FPE_NWFPE 1}}
	if {($CONFIG_FPE_NWFPE != 0)} then {
	set CONFIG_FPE_NWFPE_XP [expr $CONFIG_FPE_NWFPE_XP&15]}
	global CONFIG_CPU_26
	global CONFIG_CPU_32v3
	global CONFIG_FPE_FASTFPE
	if {($CONFIG_CPU_26 == 0 && $CONFIG_CPU_32v3 == 0) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_EXPERIMENTAL]]; set CONFIG_FPE_FASTFPE [sync_tristate $CONFIG_FPE_FASTFPE $tmpvar_dep]; set CONFIG_FPE_FASTFPE [expr $CONFIG_FPE_FASTFPE&15]}
	global tmpvar_10
	global CONFIG_KCORE_ELF
	if {$tmpvar_10 == "ELF"} then {set CONFIG_KCORE_ELF 1} else {set CONFIG_KCORE_ELF 0}
	global CONFIG_KCORE_AOUT
	if {$tmpvar_10 == "A.OUT"} then {set CONFIG_KCORE_AOUT 1} else {set CONFIG_KCORE_AOUT 0}

	if {($CONFIG_MODULES == 0)} then {if {($CONFIG_BINFMT_AOUT == 2)} then {set CONFIG_BINFMT_AOUT 1}}

	if {($CONFIG_MODULES == 0)} then {if {($CONFIG_BINFMT_ELF == 2)} then {set CONFIG_BINFMT_ELF 1}}

	if {($CONFIG_MODULES == 0)} then {if {($CONFIG_BINFMT_MISC == 2)} then {set CONFIG_BINFMT_MISC 1}}
	global CONFIG_PM
	if {($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_EXPERIMENTAL]];set CONFIG_PM [sync_bool $CONFIG_PM $tmpvar_dep 0];set CONFIG_PM [expr $CONFIG_PM&15]}
	global CONFIG_ARTHUR
	if {($CONFIG_CPU_32 == 1 || $CONFIG_CPU_32 == 2 || $CONFIG_CPU_32 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_CPU_32]]; set CONFIG_ARTHUR [sync_tristate $CONFIG_ARTHUR $tmpvar_dep]; set CONFIG_ARTHUR [expr $CONFIG_ARTHUR&15]}
	global CONFIG_ARCH_NETWINDER
	global CONFIG_ARCH_EBSA285
	global CONFIG_ARCH_FTVPCI
	global CONFIG_ARCH_CO285
	global CONFIG_ARCH_P720T
	global CONFIG_ARCH_OMAHA
	global CONFIG_ARCH_IXDP2800
	if {($CONFIG_ARCH_NETWINDER == 1 || $CONFIG_ARCH_EBSA110 == 1 || $CONFIG_ARCH_EBSA285 == 1 || $CONFIG_ARCH_FTVPCI == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_CO285 == 1 || $CONFIG_ARCH_IXP1200 == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_INTEGRATOR == 1 || $CONFIG_ARCH_KS8695 == 1 || $CONFIG_ARCH_CDB89712 == 1 || $CONFIG_ARCH_P720T == 1 || $CONFIG_ARCH_OMAHA == 1 || $CONFIG_ARCH_IXDP2800 == 1)} then {
	set CONFIG_LEDS [expr $CONFIG_LEDS&15]}
	if {($CONFIG_ARCH_NETWINDER == 1 || $CONFIG_ARCH_EBSA110 == 1 || $CONFIG_ARCH_EBSA285 == 1 || $CONFIG_ARCH_FTVPCI == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_CO285 == 1 || $CONFIG_ARCH_IXP1200 == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_INTEGRATOR == 1 || $CONFIG_ARCH_KS8695 == 1 || $CONFIG_ARCH_CDB89712 == 1 || $CONFIG_ARCH_P720T == 1 || $CONFIG_ARCH_OMAHA == 1 || $CONFIG_ARCH_IXDP2800 == 1) && ($CONFIG_LEDS == 1) && ($CONFIG_ARCH_NETWINDER == 1 || $CONFIG_ARCH_EBSA285 == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_CO285 == 1 || $CONFIG_ARCH_IXP1200 == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_INTEGRATOR == 1 || $CONFIG_ARCH_KS8695 == 1 || $CONFIG_ARCH_P720T == 1 || $CONFIG_ARCH_OMAHA == 1 || $CONFIG_ARCH_IXDP2800 == 1)} then {
	set CONFIG_LEDS_TIMER [expr $CONFIG_LEDS_TIMER&15]}
	if {($CONFIG_ARCH_NETWINDER == 1 || $CONFIG_ARCH_EBSA110 == 1 || $CONFIG_ARCH_EBSA285 == 1 || $CONFIG_ARCH_FTVPCI == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_CO285 == 1 || $CONFIG_ARCH_IXP1200 == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_INTEGRATOR == 1 || $CONFIG_ARCH_KS8695 == 1 || $CONFIG_ARCH_CDB89712 == 1 || $CONFIG_ARCH_P720T == 1 || $CONFIG_ARCH_OMAHA == 1 || $CONFIG_ARCH_IXDP2800 == 1) && ($CONFIG_LEDS == 1) && ($CONFIG_ARCH_NETWINDER == 1 || $CONFIG_ARCH_EBSA285 == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_CO285 == 1 || $CONFIG_ARCH_IXP1200 == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_INTEGRATOR == 1 || $CONFIG_ARCH_KS8695 == 1 || $CONFIG_ARCH_P720T == 1 || $CONFIG_ARCH_OMAHA == 1 || $CONFIG_ARCH_IXDP2800 == 1)} then {
	set CONFIG_LEDS_CPU [expr $CONFIG_LEDS_CPU&15]}
	if {($CONFIG_ARCH_NETWINDER == 1 || $CONFIG_ARCH_EBSA110 == 1 || $CONFIG_ARCH_EBSA285 == 1 || $CONFIG_ARCH_FTVPCI == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_CO285 == 1 || $CONFIG_ARCH_IXP1200 == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_INTEGRATOR == 1 || $CONFIG_ARCH_KS8695 == 1 || $CONFIG_ARCH_CDB89712 == 1 || $CONFIG_ARCH_P720T == 1 || $CONFIG_ARCH_OMAHA == 1 || $CONFIG_ARCH_IXDP2800 == 1) && ($CONFIG_LEDS == 1) && ($CONFIG_ARCH_EBSA110 == 1)} then {	global CONSTANT_Y
set CONFIG_LEDS_TIMER $CONSTANT_Y }
	if {($CONFIG_ARCH_SA1100 == 1)} then {	global CONSTANT_Y
set CONFIG_ALIGNMENT_TRAP $CONSTANT_Y }
	if {($CONFIG_ARCH_SA1100 != 1) && ($CONFIG_CPU_32 == 1 && $CONFIG_ARCH_EBSA110 != 1)} then {
	set CONFIG_ALIGNMENT_TRAP [expr $CONFIG_ALIGNMENT_TRAP&15]}
	if {($CONFIG_ARCH_SA1100 != 1) && ($CONFIG_CPU_32 != 1 || $CONFIG_ARCH_EBSA110 == 1)} then {	global CONSTANT_N
set CONFIG_ALIGNMENT_TRAP $CONSTANT_N }
}


proc menu15 {w title} {
	set oldFocus [focus]
	catch {focus .menu14}
	catch {destroy $w; unregister_active 15}
	toplevel $w -class Dialog
	wm withdraw $w
	global active_menus
	set active_menus [lsort -integer [linsert $active_menus end 15]]
	message $w.m -width 400 -aspect 300 -text \
		"PCMCIA/CardBus support"  -relief raised
	pack $w.m -pady 10 -side top -padx 10
	wm title $w "PCMCIA/CardBus support" 

	bind $w <Escape> "catch {focus $oldFocus}; destroy $w; unregister_active 15; break"
	set nextscript "catch {focus $oldFocus}; destroy $w; unregister_active 15; catch {destroy .menu14}; unregister_active 14; menu16 .menu16 \"$title\""
	frame $w.f
	button $w.f.back -text "OK" \
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 15"
	button $w.f.next -text "Next" -underline 0\
		-width 15 -command $nextscript
	bind all <Alt-n> $nextscript
	button $w.f.prev -text "Prev" -underline 0\
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 15; menu14 .menu14 \"$title\""
	bind $w <Alt-p> "catch {focus $oldFocus}; destroy $w; unregister_active 15; menu14 .menu14 \"$title\";break"
	pack $w.f.back $w.f.next $w.f.prev -side left -expand on
	pack $w.f -pady 10 -side bottom -anchor w -fill x
	frame $w.topline -relief ridge -borderwidth 2 -height 2
	pack $w.topline -side top -fill x

	frame $w.botline -relief ridge -borderwidth 2 -height 2
	pack $w.botline -side bottom -fill x

	frame $w.config
	pack $w.config -fill y -expand on

	scrollbar $w.config.vscroll -command "$w.config.canvas yview"
	pack $w.config.vscroll -side right -fill y

	canvas $w.config.canvas -height 1\
		-relief flat -borderwidth 0 -yscrollcommand "$w.config.vscroll set" \
		-width [expr [winfo screenwidth .] * 1 / 2] 
	frame $w.config.f
	bind $w <Key-Down> "$w.config.canvas yview scroll  1 unit;break;"
	bind $w <Key-Up> "$w.config.canvas yview scroll  -1 unit;break;"
	bind $w <Key-Next> "$w.config.canvas yview scroll  1 page;break;"
	bind $w <Key-Prior> "$w.config.canvas yview scroll  -1 page;break;"
	bind $w <Key-Home> "$w.config.canvas yview moveto 0;break;"
	bind $w <Key-End> "$w.config.canvas yview moveto 1 ;break;"
	pack $w.config.canvas -side right -fill y


	tristate $w.config.f 15 0 "PCMCIA/CardBus support" CONFIG_PCMCIA
	bool $w.config.f 15 1 "  CardBus support" CONFIG_CARDBUS
	bool $w.config.f 15 2 "  Databook TCIC host bridge support" CONFIG_TCIC
	dep_bool $w.config.f 15 3 "  i82092 compatible bridge support" CONFIG_I82092
	bool $w.config.f 15 4 "  i82365 compatible bridge support" CONFIG_I82365
	dep_tristate $w.config.f 15 5 "  SA1100 support" CONFIG_PCMCIA_SA1100



	focus $w
	update_active
	global winx; global winy
	if {[winfo exists .menu14] == 0} then {menu14 .menu14 "General setup"}
	set winx [expr [winfo x .menu14]+30]; set winy [expr [winfo y .menu14]+30]
	if {[winfo exists $w]} then {wm geometry $w +$winx+$winy}
	update idletasks
	if {[winfo exists $w]} then  {$w.config.canvas create window 0 0 -anchor nw -window $w.config.f

	$w.config.canvas configure \
		-width [expr [winfo reqwidth $w.config.f] + 1]\
		-scrollregion "-1 -1 [expr [winfo reqwidth $w.config.f] + 1] \
			 [expr [winfo reqheight $w.config.f] + 1]"

	set winy [expr [winfo reqh $w] - [winfo reqh $w.config.canvas]]
	set scry [expr [winfo screenh $w] / 2]
	set maxy [expr [winfo screenh $w] * 3 / 4]
	set canvtotal [expr [winfo reqh $w.config.f] + 2]
	if [expr $winy + $canvtotal < $maxy] {
		$w.config.canvas configure -height $canvtotal
	} else {
		$w.config.canvas configure -height [expr $scry - $winy]
		}
	}
	update idletasks
	if {[winfo exists $w]} then {
	wm maxsize $w [winfo width $w] [winfo screenheight $w]
	wm minsize $w [winfo width $w] 100

	wm deiconify $w
}
}

proc update_menu15 {} {
	global CONFIG_MODULES
	global CONFIG_HOTPLUG
	global CONFIG_PCMCIA
	if {($CONFIG_HOTPLUG == 1)} then {
	configure_entry .menu15.config.f.x0 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu15.config.f.x0 normal {m}} else {configure_entry .menu15.config.f.x0 disabled {m}}; configure_entry .menu15.config.f.x0 normal {n l}} else {configure_entry .menu15.config.f.x0 disabled {y n m l}}
	global CONFIG_PCI
	global CONFIG_CARDBUS
	if {($CONFIG_HOTPLUG == 1) && ($CONFIG_PCMCIA != 0) && ($CONFIG_PCI != 0)} then {
	configure_entry .menu15.config.f.x1 normal {n l y}} else {configure_entry .menu15.config.f.x1 disabled {y n l}}
	global CONFIG_TCIC
	if {($CONFIG_HOTPLUG == 1) && ($CONFIG_PCMCIA != 0)} then {
	configure_entry .menu15.config.f.x2 normal {n l y}} else {configure_entry .menu15.config.f.x2 disabled {y n l}}
	global CONFIG_I82092
	if {($CONFIG_HOTPLUG == 1) && ($CONFIG_PCMCIA != 0) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PCI]];set CONFIG_I82092 [sync_bool $CONFIG_I82092 $tmpvar_dep 0];if {$tmpvar_dep != 1} then {configure_entry .menu15.config.f.x3 disabled {y};} else {configure_entry .menu15.config.f.x3 normal {y};}; configure_entry .menu15.config.f.x3 normal {n l}} else {configure_entry .menu15.config.f.x3 disabled {y n l}}
	global CONFIG_I82365
	if {($CONFIG_HOTPLUG == 1) && ($CONFIG_PCMCIA != 0)} then {
	configure_entry .menu15.config.f.x4 normal {n l y}} else {configure_entry .menu15.config.f.x4 disabled {y n l}}
	global CONFIG_ARCH_SA1100
	global CONFIG_PCMCIA_SA1100
	if {($CONFIG_HOTPLUG == 1) && ($CONFIG_PCMCIA != 0) && ($CONFIG_ARCH_SA1100 == 1) && ($CONFIG_PCMCIA == 1 || $CONFIG_PCMCIA == 2 || $CONFIG_PCMCIA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PCMCIA]];set CONFIG_PCMCIA_SA1100 [sync_tristate $CONFIG_PCMCIA_SA1100 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu15.config.f.x5 disabled {y}} else {configure_entry .menu15.config.f.x5 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu15.config.f.x5 disabled {m}} else {configure_entry .menu15.config.f.x5 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu15.config.f.x5 normal {m}} else {configure_entry .menu15.config.f.x5 disabled {m}}; configure_entry .menu15.config.f.x5 normal {n l}} else {configure_entry .menu15.config.f.x5 disabled {y n m l}}
}


proc update_define_menu15 {} {
	update_define_mainmenu
	global CONFIG_MODULES
	global CONFIG_PCMCIA
set CONFIG_PCMCIA [expr $CONFIG_PCMCIA|16]
	global CONFIG_CARDBUS
set CONFIG_CARDBUS [expr $CONFIG_CARDBUS|16]
	global CONFIG_TCIC
set CONFIG_TCIC [expr $CONFIG_TCIC|16]
	global CONFIG_I82365
set CONFIG_I82365 [expr $CONFIG_I82365|16]
	global CONFIG_HOTPLUG
	if {($CONFIG_HOTPLUG == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_PCMCIA == 2)} then {set CONFIG_PCMCIA 1}; set CONFIG_PCMCIA [expr $CONFIG_PCMCIA&15]}
	global CONFIG_PCI
	if {($CONFIG_HOTPLUG == 1) && ($CONFIG_PCMCIA != 0) && ($CONFIG_PCI != 0)} then {
	set CONFIG_CARDBUS [expr $CONFIG_CARDBUS&15]}
	if {($CONFIG_HOTPLUG == 1) && ($CONFIG_PCMCIA != 0)} then {
	set CONFIG_TCIC [expr $CONFIG_TCIC&15]}
	global CONFIG_I82092
	if {($CONFIG_HOTPLUG == 1) && ($CONFIG_PCMCIA != 0) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PCI]];set CONFIG_I82092 [sync_bool $CONFIG_I82092 $tmpvar_dep 0];set CONFIG_I82092 [expr $CONFIG_I82092&15]}
	if {($CONFIG_HOTPLUG == 1) && ($CONFIG_PCMCIA != 0)} then {
	set CONFIG_I82365 [expr $CONFIG_I82365&15]}
	global CONFIG_ARCH_SA1100
	global CONFIG_PCMCIA_SA1100
	if {($CONFIG_HOTPLUG == 1) && ($CONFIG_PCMCIA != 0) && ($CONFIG_ARCH_SA1100 == 1) && ($CONFIG_PCMCIA == 1 || $CONFIG_PCMCIA == 2 || $CONFIG_PCMCIA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PCMCIA]]; set CONFIG_PCMCIA_SA1100 [sync_tristate $CONFIG_PCMCIA_SA1100 $tmpvar_dep]; set CONFIG_PCMCIA_SA1100 [expr $CONFIG_PCMCIA_SA1100&15]}
}


menu_option menu16 16 "Parallel port support"
proc menu16 {w title} {
	set oldFocus [focus]
	catch {destroy $w; unregister_active 16}
	toplevel $w -class Dialog
	wm withdraw $w
	global active_menus
	set active_menus [lsort -integer [linsert $active_menus end 16]]
	message $w.m -width 400 -aspect 300 -text \
		"Parallel port support"  -relief raised
	pack $w.m -pady 10 -side top -padx 10
	wm title $w "Parallel port support" 

	bind $w <Escape> "catch {focus $oldFocus}; destroy $w; unregister_active 16; break"
	set nextscript "catch {focus $oldFocus}; destroy $w; unregister_active 16; menu17 .menu17 \"$title\""
	frame $w.f
	button $w.f.back -text "Main Menu" \
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 16"
	button $w.f.next -text "Next" -underline 0\
		-width 15 -command $nextscript
	bind all <Alt-n> $nextscript
	button $w.f.prev -text "Prev" -underline 0\
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 16; menu15 .menu15 \"$title\""
	bind $w <Alt-p> "catch {focus $oldFocus}; destroy $w; unregister_active 16; menu15 .menu15 \"$title\";break"
	pack $w.f.back $w.f.next $w.f.prev -side left -expand on
	pack $w.f -pady 10 -side bottom -anchor w -fill x
	frame $w.topline -relief ridge -borderwidth 2 -height 2
	pack $w.topline -side top -fill x

	frame $w.botline -relief ridge -borderwidth 2 -height 2
	pack $w.botline -side bottom -fill x

	frame $w.config
	pack $w.config -fill y -expand on

	scrollbar $w.config.vscroll -command "$w.config.canvas yview"
	pack $w.config.vscroll -side right -fill y

	canvas $w.config.canvas -height 1\
		-relief flat -borderwidth 0 -yscrollcommand "$w.config.vscroll set" \
		-width [expr [winfo screenwidth .] * 1 / 2] 
	frame $w.config.f
	bind $w <Key-Down> "$w.config.canvas yview scroll  1 unit;break;"
	bind $w <Key-Up> "$w.config.canvas yview scroll  -1 unit;break;"
	bind $w <Key-Next> "$w.config.canvas yview scroll  1 page;break;"
	bind $w <Key-Prior> "$w.config.canvas yview scroll  -1 page;break;"
	bind $w <Key-Home> "$w.config.canvas yview moveto 0;break;"
	bind $w <Key-End> "$w.config.canvas yview moveto 1 ;break;"
	pack $w.config.canvas -side right -fill y


	tristate $w.config.f 16 0 "Parallel port support" CONFIG_PARPORT
	dep_tristate $w.config.f 16 1 "  PC-style hardware" CONFIG_PARPORT_PC
	dep_tristate $w.config.f 16 2 "    Multi-IO cards (parallel and serial)" CONFIG_PARPORT_SERIAL
	bool $w.config.f 16 3 "    Use FIFO/DMA if available (EXPERIMENTAL)" CONFIG_PARPORT_PC_FIFO
	bool $w.config.f 16 4 "    SuperIO chipset support (EXPERIMENTAL)" CONFIG_PARPORT_PC_SUPERIO
	dep_tristate $w.config.f 16 5 "    Support for PCMCIA management for PC-style ports" CONFIG_PARPORT_PC_PCMCIA
	dep_tristate $w.config.f 16 6 "    Support for PCMCIA management for PC-style ports" CONFIG_PARPORT_PC_PCMCIA
	dep_tristate $w.config.f 16 7 "  Archimedes hardware" CONFIG_PARPORT_ARC
	dep_tristate $w.config.f 16 8 "  Sparc hardware (EXPERIMENTAL)" CONFIG_PARPORT_SUNBPP
	bool $w.config.f 16 9 "  Support foreign hardware" CONFIG_PARPORT_OTHER
	bool $w.config.f 16 10 "  IEEE 1284 transfer modes" CONFIG_PARPORT_1284
	bool $w.config.f 16 11 "  HD64465 hardware" CONFIG_PARPORT_HD64465



	focus $w
	update_active
	global winx; global winy
	set winx [expr [winfo x .]+30]; set winy [expr [winfo y .]+30]
	if {[winfo exists $w]} then {wm geometry $w +$winx+$winy}
	update idletasks
	if {[winfo exists $w]} then  {$w.config.canvas create window 0 0 -anchor nw -window $w.config.f

	$w.config.canvas configure \
		-width [expr [winfo reqwidth $w.config.f] + 1]\
		-scrollregion "-1 -1 [expr [winfo reqwidth $w.config.f] + 1] \
			 [expr [winfo reqheight $w.config.f] + 1]"

	set winy [expr [winfo reqh $w] - [winfo reqh $w.config.canvas]]
	set scry [expr [winfo screenh $w] / 2]
	set maxy [expr [winfo screenh $w] * 3 / 4]
	set canvtotal [expr [winfo reqh $w.config.f] + 2]
	if [expr $winy + $canvtotal < $maxy] {
		$w.config.canvas configure -height $canvtotal
	} else {
		$w.config.canvas configure -height [expr $scry - $winy]
		}
	}
	update idletasks
	if {[winfo exists $w]} then {
	wm maxsize $w [winfo width $w] [winfo screenheight $w]
	wm minsize $w [winfo width $w] 100

	wm deiconify $w
}
}

proc update_menu16 {} {
	global CONFIG_PARPORT
	global CONFIG_MODULES

	if {($CONFIG_MODULES == 1)} then {configure_entry .menu16.config.f.x0 normal {m}} else {configure_entry .menu16.config.f.x0 disabled {m}}
	global CONFIG_PARPORT_PC
	if {($CONFIG_PARPORT != 0) && ($CONFIG_PARPORT == 1 || $CONFIG_PARPORT == 2 || $CONFIG_PARPORT == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PARPORT]];set CONFIG_PARPORT_PC [sync_tristate $CONFIG_PARPORT_PC $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu16.config.f.x1 disabled {y}} else {configure_entry .menu16.config.f.x1 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu16.config.f.x1 disabled {m}} else {configure_entry .menu16.config.f.x1 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu16.config.f.x1 normal {m}} else {configure_entry .menu16.config.f.x1 disabled {m}}; configure_entry .menu16.config.f.x1 normal {n l}} else {configure_entry .menu16.config.f.x1 disabled {y n m l}}
	global CONFIG_SERIAL
	global CONFIG_PARPORT_PC_CML1
	global CONFIG_PARPORT_SERIAL
	if {($CONFIG_PARPORT != 0) && ($CONFIG_PARPORT_PC != 0 && $CONFIG_SERIAL != 0) && ($CONFIG_PARPORT_PC_CML1 == 1 || $CONFIG_PARPORT_PC_CML1 == 2 || $CONFIG_PARPORT_PC_CML1 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PARPORT_PC_CML1]];set CONFIG_PARPORT_SERIAL [sync_tristate $CONFIG_PARPORT_SERIAL $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu16.config.f.x2 disabled {y}} else {configure_entry .menu16.config.f.x2 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu16.config.f.x2 disabled {m}} else {configure_entry .menu16.config.f.x2 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu16.config.f.x2 normal {m}} else {configure_entry .menu16.config.f.x2 disabled {m}}; configure_entry .menu16.config.f.x2 normal {n l}} else {configure_entry .menu16.config.f.x2 disabled {y n m l}}
	global CONFIG_EXPERIMENTAL
	global CONFIG_PARPORT_PC_FIFO
	if {($CONFIG_PARPORT != 0) && ($CONFIG_PARPORT_PC != 0) && ($CONFIG_EXPERIMENTAL == 1)} then {
	configure_entry .menu16.config.f.x3 normal {n l y}} else {configure_entry .menu16.config.f.x3 disabled {y n l}}
	global CONFIG_PARPORT_PC_SUPERIO
	if {($CONFIG_PARPORT != 0) && ($CONFIG_PARPORT_PC != 0) && ($CONFIG_EXPERIMENTAL == 1)} then {
	configure_entry .menu16.config.f.x4 normal {n l y}} else {configure_entry .menu16.config.f.x4 disabled {y n l}}
	global CONFIG_HOTPLUG
	global CONFIG_PCMCIA
	global CONFIG_PARPORT_PC_PCMCIA
	if {($CONFIG_PARPORT != 0) && ($CONFIG_PARPORT_PC != 0) && ($CONFIG_HOTPLUG == 1 && $CONFIG_PCMCIA != 0) && ($CONFIG_PARPORT_PC == 1) && ($CONFIG_PCMCIA == 1 || $CONFIG_PCMCIA == 2 || $CONFIG_PCMCIA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PCMCIA]];set CONFIG_PARPORT_PC_PCMCIA [sync_tristate $CONFIG_PARPORT_PC_PCMCIA $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu16.config.f.x5 disabled {y}} else {configure_entry .menu16.config.f.x5 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu16.config.f.x5 disabled {m}} else {configure_entry .menu16.config.f.x5 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu16.config.f.x5 normal {m}} else {configure_entry .menu16.config.f.x5 disabled {m}}; configure_entry .menu16.config.f.x5 normal {n l}} else {configure_entry .menu16.config.f.x5 disabled {y n m l}}
	if {($CONFIG_PARPORT != 0) && ($CONFIG_PARPORT_PC != 0) && ($CONFIG_HOTPLUG == 1 && $CONFIG_PCMCIA != 0) && ($CONFIG_PARPORT_PC != 1) && ($CONFIG_PARPORT_PC == 1 || $CONFIG_PARPORT_PC == 2 || $CONFIG_PARPORT_PC == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PARPORT_PC]];set CONFIG_PARPORT_PC_PCMCIA [sync_tristate $CONFIG_PARPORT_PC_PCMCIA $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu16.config.f.x6 disabled {y}} else {configure_entry .menu16.config.f.x6 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu16.config.f.x6 disabled {m}} else {configure_entry .menu16.config.f.x6 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu16.config.f.x6 normal {m}} else {configure_entry .menu16.config.f.x6 disabled {m}}; configure_entry .menu16.config.f.x6 normal {n l}} else {configure_entry .menu16.config.f.x6 disabled {y n m l}}
	global CONFIG_ARM
	global CONFIG_PARPORT_ARC
	if {($CONFIG_PARPORT != 0) && ($CONFIG_ARM == 1) && ($CONFIG_PARPORT == 1 || $CONFIG_PARPORT == 2 || $CONFIG_PARPORT == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PARPORT]];set CONFIG_PARPORT_ARC [sync_tristate $CONFIG_PARPORT_ARC $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu16.config.f.x7 disabled {y}} else {configure_entry .menu16.config.f.x7 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu16.config.f.x7 disabled {m}} else {configure_entry .menu16.config.f.x7 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu16.config.f.x7 normal {m}} else {configure_entry .menu16.config.f.x7 disabled {m}}; configure_entry .menu16.config.f.x7 normal {n l}} else {configure_entry .menu16.config.f.x7 disabled {y n m l}}
	global CONFIG_SBUS
	global CONFIG_PARPORT_SUNBPP
	if {($CONFIG_PARPORT != 0) && ($CONFIG_SBUS == 1 && $CONFIG_EXPERIMENTAL == 1) && ($CONFIG_PARPORT == 1 || $CONFIG_PARPORT == 2 || $CONFIG_PARPORT == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PARPORT]];set CONFIG_PARPORT_SUNBPP [sync_tristate $CONFIG_PARPORT_SUNBPP $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu16.config.f.x8 disabled {y}} else {configure_entry .menu16.config.f.x8 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu16.config.f.x8 disabled {m}} else {configure_entry .menu16.config.f.x8 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu16.config.f.x8 normal {m}} else {configure_entry .menu16.config.f.x8 disabled {m}}; configure_entry .menu16.config.f.x8 normal {n l}} else {configure_entry .menu16.config.f.x8 disabled {y n m l}}
	global CONFIG_PARPORT_OTHER
	if {($CONFIG_PARPORT != 0)} then {
	configure_entry .menu16.config.f.x9 normal {n l y}} else {configure_entry .menu16.config.f.x9 disabled {y n l}}
	global CONFIG_PARPORT_1284
	if {($CONFIG_PARPORT != 0)} then {
	configure_entry .menu16.config.f.x10 normal {n l y}} else {configure_entry .menu16.config.f.x10 disabled {y n l}}
	global CONFIG_SH_HD64465
	global CONFIG_PARPORT_HD64465
	if {($CONFIG_PARPORT != 0) && ($CONFIG_SH_HD64465 != 0)} then {
	configure_entry .menu16.config.f.x11 normal {n l y}} else {configure_entry .menu16.config.f.x11 disabled {y n l}}
}


proc update_define_menu16 {} {
	update_define_mainmenu
	global CONFIG_MODULES
	global CONFIG_PARPORT
	global CONFIG_PARPORT_PC_CML1
	global CONFIG_PARPORT_AMIGA
	global CONFIG_PARPORT_MFC3
	global CONFIG_PARPORT_ATARI
	global CONFIG_PARPORT_GSC
	global CONFIG_PARPORT_SUNBPP
	global CONFIG_PARPORT_PC_FIFO
set CONFIG_PARPORT_PC_FIFO [expr $CONFIG_PARPORT_PC_FIFO|16]
	global CONFIG_PARPORT_PC_SUPERIO
set CONFIG_PARPORT_PC_SUPERIO [expr $CONFIG_PARPORT_PC_SUPERIO|16]
	global CONFIG_PARPORT_OTHER
set CONFIG_PARPORT_OTHER [expr $CONFIG_PARPORT_OTHER|16]
	global CONFIG_PARPORT_1284
set CONFIG_PARPORT_1284 [expr $CONFIG_PARPORT_1284|16]
	global CONFIG_PARPORT_HD64465
set CONFIG_PARPORT_HD64465 [expr $CONFIG_PARPORT_HD64465|16]

	if {($CONFIG_MODULES == 0)} then {if {($CONFIG_PARPORT == 2)} then {set CONFIG_PARPORT 1}}
	global CONFIG_PARPORT_PC
	if {($CONFIG_PARPORT != 0) && ($CONFIG_PARPORT == 1 || $CONFIG_PARPORT == 2 || $CONFIG_PARPORT == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PARPORT]]; set CONFIG_PARPORT_PC [sync_tristate $CONFIG_PARPORT_PC $tmpvar_dep]; set CONFIG_PARPORT_PC [expr $CONFIG_PARPORT_PC&15]}
	global CONFIG_SERIAL
	if {($CONFIG_PARPORT != 0) && ($CONFIG_PARPORT_PC != 0 && $CONFIG_SERIAL != 0) && ($CONFIG_SERIAL == 2)} then {	global CONSTANT_M
set CONFIG_PARPORT_PC_CML1 $CONSTANT_M }
	if {($CONFIG_PARPORT != 0) && ($CONFIG_PARPORT_PC != 0 && $CONFIG_SERIAL != 0) && ($CONFIG_SERIAL != 2)} then {set CONFIG_PARPORT_PC_CML1 $CONFIG_PARPORT_PC }
	global CONFIG_PARPORT_SERIAL
	if {($CONFIG_PARPORT != 0) && ($CONFIG_PARPORT_PC != 0 && $CONFIG_SERIAL != 0) && ($CONFIG_PARPORT_PC_CML1 == 1 || $CONFIG_PARPORT_PC_CML1 == 2 || $CONFIG_PARPORT_PC_CML1 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PARPORT_PC_CML1]]; set CONFIG_PARPORT_SERIAL [sync_tristate $CONFIG_PARPORT_SERIAL $tmpvar_dep]; set CONFIG_PARPORT_SERIAL [expr $CONFIG_PARPORT_SERIAL&15]}
	global CONFIG_EXPERIMENTAL
	if {($CONFIG_PARPORT != 0) && ($CONFIG_PARPORT_PC != 0) && ($CONFIG_EXPERIMENTAL == 1)} then {
	set CONFIG_PARPORT_PC_FIFO [expr $CONFIG_PARPORT_PC_FIFO&15]}
	if {($CONFIG_PARPORT != 0) && ($CONFIG_PARPORT_PC != 0) && ($CONFIG_EXPERIMENTAL == 1)} then {
	set CONFIG_PARPORT_PC_SUPERIO [expr $CONFIG_PARPORT_PC_SUPERIO&15]}
	global CONFIG_HOTPLUG
	global CONFIG_PCMCIA
	global CONFIG_PARPORT_PC_PCMCIA
	if {($CONFIG_PARPORT != 0) && ($CONFIG_PARPORT_PC != 0) && ($CONFIG_HOTPLUG == 1 && $CONFIG_PCMCIA != 0) && ($CONFIG_PARPORT_PC == 1) && ($CONFIG_PCMCIA == 1 || $CONFIG_PCMCIA == 2 || $CONFIG_PCMCIA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PCMCIA]]; set CONFIG_PARPORT_PC_PCMCIA [sync_tristate $CONFIG_PARPORT_PC_PCMCIA $tmpvar_dep]; set CONFIG_PARPORT_PC_PCMCIA [expr $CONFIG_PARPORT_PC_PCMCIA&15]}
	if {($CONFIG_PARPORT != 0) && ($CONFIG_PARPORT_PC != 0) && ($CONFIG_HOTPLUG == 1 && $CONFIG_PCMCIA != 0) && ($CONFIG_PARPORT_PC != 1) && ($CONFIG_PARPORT_PC == 1 || $CONFIG_PARPORT_PC == 2 || $CONFIG_PARPORT_PC == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PARPORT_PC]]; set CONFIG_PARPORT_PC_PCMCIA [sync_tristate $CONFIG_PARPORT_PC_PCMCIA $tmpvar_dep]; set CONFIG_PARPORT_PC_PCMCIA [expr $CONFIG_PARPORT_PC_PCMCIA&15]}
	global CONFIG_ARM
	global CONFIG_PARPORT_ARC
	if {($CONFIG_PARPORT != 0) && ($CONFIG_ARM == 1) && ($CONFIG_PARPORT == 1 || $CONFIG_PARPORT == 2 || $CONFIG_PARPORT == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PARPORT]]; set CONFIG_PARPORT_ARC [sync_tristate $CONFIG_PARPORT_ARC $tmpvar_dep]; set CONFIG_PARPORT_ARC [expr $CONFIG_PARPORT_ARC&15]}
	if {($CONFIG_PARPORT != 0)} then {	global CONSTANT_N
set CONFIG_PARPORT_AMIGA $CONSTANT_N }
	if {($CONFIG_PARPORT != 0)} then {	global CONSTANT_N
set CONFIG_PARPORT_MFC3 $CONSTANT_N }
	if {($CONFIG_PARPORT != 0)} then {	global CONSTANT_N
set CONFIG_PARPORT_ATARI $CONSTANT_N }
	if {($CONFIG_PARPORT != 0)} then {	global CONSTANT_N
set CONFIG_PARPORT_GSC $CONSTANT_N }
	global CONFIG_SBUS
	if {($CONFIG_PARPORT != 0) && ($CONFIG_SBUS == 1 && $CONFIG_EXPERIMENTAL == 1) && ($CONFIG_PARPORT == 1 || $CONFIG_PARPORT == 2 || $CONFIG_PARPORT == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PARPORT]]; set CONFIG_PARPORT_SUNBPP [sync_tristate $CONFIG_PARPORT_SUNBPP $tmpvar_dep]; set CONFIG_PARPORT_SUNBPP [expr $CONFIG_PARPORT_SUNBPP&15]}
	if {($CONFIG_PARPORT != 0) && ($CONFIG_SBUS != 1 || $CONFIG_EXPERIMENTAL != 1)} then {	global CONSTANT_N
set CONFIG_PARPORT_SUNBPP $CONSTANT_N }
	if {($CONFIG_PARPORT != 0)} then {
	set CONFIG_PARPORT_OTHER [expr $CONFIG_PARPORT_OTHER&15]}
	if {($CONFIG_PARPORT != 0)} then {
	set CONFIG_PARPORT_1284 [expr $CONFIG_PARPORT_1284&15]}
	global CONFIG_SH_HD64465
	if {($CONFIG_PARPORT != 0) && ($CONFIG_SH_HD64465 != 0)} then {
	set CONFIG_PARPORT_HD64465 [expr $CONFIG_PARPORT_HD64465&15]}
}


menu_option menu17 17 "Memory Technology Devices (MTD)"
proc menu17 {w title} {
	set oldFocus [focus]
	catch {destroy $w; unregister_active 17}
	toplevel $w -class Dialog
	wm withdraw $w
	global active_menus
	set active_menus [lsort -integer [linsert $active_menus end 17]]
	message $w.m -width 400 -aspect 300 -text \
		"Memory Technology Devices (MTD)"  -relief raised
	pack $w.m -pady 10 -side top -padx 10
	wm title $w "Memory Technology Devices (MTD)" 

	bind $w <Escape> "catch {focus $oldFocus}; destroy $w; unregister_active 17; break"
	set nextscript "catch {focus $oldFocus}; menu18 .menu18 \"$title\""
	frame $w.f
	button $w.f.back -text "Main Menu" \
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 17"
	button $w.f.next -text "Next" -underline 0\
		-width 15 -command $nextscript
	bind all <Alt-n> $nextscript
	button $w.f.prev -text "Prev" -underline 0\
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 17; menu16 .menu16 \"$title\""
	bind $w <Alt-p> "catch {focus $oldFocus}; destroy $w; unregister_active 17; menu16 .menu16 \"$title\";break"
	pack $w.f.back $w.f.next $w.f.prev -side left -expand on
	pack $w.f -pady 10 -side bottom -anchor w -fill x
	frame $w.topline -relief ridge -borderwidth 2 -height 2
	pack $w.topline -side top -fill x

	frame $w.botline -relief ridge -borderwidth 2 -height 2
	pack $w.botline -side bottom -fill x

	frame $w.config
	pack $w.config -fill y -expand on

	scrollbar $w.config.vscroll -command "$w.config.canvas yview"
	pack $w.config.vscroll -side right -fill y

	canvas $w.config.canvas -height 1\
		-relief flat -borderwidth 0 -yscrollcommand "$w.config.vscroll set" \
		-width [expr [winfo screenwidth .] * 1 / 2] 
	frame $w.config.f
	bind $w <Key-Down> "$w.config.canvas yview scroll  1 unit;break;"
	bind $w <Key-Up> "$w.config.canvas yview scroll  -1 unit;break;"
	bind $w <Key-Next> "$w.config.canvas yview scroll  1 page;break;"
	bind $w <Key-Prior> "$w.config.canvas yview scroll  -1 page;break;"
	bind $w <Key-Home> "$w.config.canvas yview moveto 0;break;"
	bind $w <Key-End> "$w.config.canvas yview moveto 1 ;break;"
	pack $w.config.canvas -side right -fill y


	tristate $w.config.f 17 0 "Memory Technology Device (MTD) support" CONFIG_MTD
	bool $w.config.f 17 1 "Debugging" CONFIG_MTD_DEBUG
	int $w.config.f 17 2 "  Debugging verbosity (0 = quiet, 3 = noisy)" CONFIG_MTD_DEBUG_VERBOSE
	dep_tristate $w.config.f 17 3 "  MTD partitioning support" CONFIG_MTD_PARTITIONS
	dep_tristate $w.config.f 17 4 "  MTD concatenating support" CONFIG_MTD_CONCAT
	dep_tristate $w.config.f 17 5 "  RedBoot partition table parsing" CONFIG_MTD_REDBOOT_PARTS
	dep_tristate $w.config.f 17 6 "  Command line partition table parsing" CONFIG_MTD_CMDLINE_PARTS
	dep_tristate $w.config.f 17 7 "  ARM Firmware Suite partition parsing" CONFIG_MTD_AFS_PARTS
	comment $w.config.f 17 8 "User Modules And Translation Layers"
	dep_tristate $w.config.f 17 9 "  Direct char device access to MTD devices" CONFIG_MTD_CHAR
	dep_tristate $w.config.f 17 10 "  Caching block device access to MTD devices" CONFIG_MTD_BLOCK
	dep_tristate $w.config.f 17 11 "  Readonly block device access to MTD devices" CONFIG_MTD_BLOCK_RO
	dep_tristate $w.config.f 17 12 "  FTL (Flash Translation Layer) support" CONFIG_FTL
	dep_tristate $w.config.f 17 13 "  NFTL (NAND Flash Translation Layer) support" CONFIG_NFTL
	dep_tristate $w.config.f 17 14 "  INFTL (Inverse NAND Flash Translation Layer) support" CONFIG_INFTL
	bool $w.config.f 17 15 "    Write support for NFTL (BETA)" CONFIG_NFTL_RW
	submenu $w.config.f 17 16 "RAM/ROM/Flash chip drivers" 18
	submenu $w.config.f 17 17 "Mapping drivers for chip access" 19
	submenu $w.config.f 17 18 "Self-contained MTD device drivers" 20
	submenu $w.config.f 17 19 "NAND Flash Device Drivers" 21



	focus $w
	update_active
	global winx; global winy
	set winx [expr [winfo x .]+30]; set winy [expr [winfo y .]+30]
	if {[winfo exists $w]} then {wm geometry $w +$winx+$winy}
	update idletasks
	if {[winfo exists $w]} then  {$w.config.canvas create window 0 0 -anchor nw -window $w.config.f

	$w.config.canvas configure \
		-width [expr [winfo reqwidth $w.config.f] + 1]\
		-scrollregion "-1 -1 [expr [winfo reqwidth $w.config.f] + 1] \
			 [expr [winfo reqheight $w.config.f] + 1]"

	set winy [expr [winfo reqh $w] - [winfo reqh $w.config.canvas]]
	set scry [expr [winfo screenh $w] / 2]
	set maxy [expr [winfo screenh $w] * 3 / 4]
	set canvtotal [expr [winfo reqh $w.config.f] + 2]
	if [expr $winy + $canvtotal < $maxy] {
		$w.config.canvas configure -height $canvtotal
	} else {
		$w.config.canvas configure -height [expr $scry - $winy]
		}
	}
	update idletasks
	if {[winfo exists $w]} then {
	wm maxsize $w [winfo width $w] [winfo screenheight $w]
	wm minsize $w [winfo width $w] 100

	wm deiconify $w
}
}

proc update_menu17 {} {
	global CONFIG_MODULES
	global CONFIG_ALIGNMENT_TRAP
	global CONFIG_MTD
	if {($CONFIG_ALIGNMENT_TRAP == 1)} then {
	configure_entry .menu17.config.f.x0 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu17.config.f.x0 normal {m}} else {configure_entry .menu17.config.f.x0 disabled {m}}; configure_entry .menu17.config.f.x0 normal {n l}} else {configure_entry .menu17.config.f.x0 disabled {y n m l}}
	global CONFIG_MTD_DEBUG
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2)} then {
	configure_entry .menu17.config.f.x1 normal {n l y}} else {configure_entry .menu17.config.f.x1 disabled {y n l}}
	global CONFIG_MTD_DEBUG_VERBOSE
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD_DEBUG == 1)} then {.menu17.config.f.x2.x configure -state normal -foreground [ cget .ref -foreground ]; .menu17.config.f.x2.l configure -state normal; } else {.menu17.config.f.x2.x configure -state disabled -foreground [ cget .ref -disabledforeground ]; .menu17.config.f.x2.l configure -state disabled}
	global CONFIG_MTD_PARTITIONS
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2 || $CONFIG_MTD == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_MTD]];set CONFIG_MTD_PARTITIONS [sync_tristate $CONFIG_MTD_PARTITIONS $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu17.config.f.x3 disabled {y}} else {configure_entry .menu17.config.f.x3 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu17.config.f.x3 disabled {m}} else {configure_entry .menu17.config.f.x3 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu17.config.f.x3 normal {m}} else {configure_entry .menu17.config.f.x3 disabled {m}}; configure_entry .menu17.config.f.x3 normal {n l}} else {configure_entry .menu17.config.f.x3 disabled {y n m l}}
	global CONFIG_MTD_CONCAT
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2 || $CONFIG_MTD == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_MTD]];set CONFIG_MTD_CONCAT [sync_tristate $CONFIG_MTD_CONCAT $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu17.config.f.x4 disabled {y}} else {configure_entry .menu17.config.f.x4 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu17.config.f.x4 disabled {m}} else {configure_entry .menu17.config.f.x4 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu17.config.f.x4 normal {m}} else {configure_entry .menu17.config.f.x4 disabled {m}}; configure_entry .menu17.config.f.x4 normal {n l}} else {configure_entry .menu17.config.f.x4 disabled {y n m l}}
	global CONFIG_MTD_REDBOOT_PARTS
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD_PARTITIONS == 1 || $CONFIG_MTD_PARTITIONS == 2 || $CONFIG_MTD_PARTITIONS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_MTD_PARTITIONS]];set CONFIG_MTD_REDBOOT_PARTS [sync_tristate $CONFIG_MTD_REDBOOT_PARTS $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu17.config.f.x5 disabled {y}} else {configure_entry .menu17.config.f.x5 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu17.config.f.x5 disabled {m}} else {configure_entry .menu17.config.f.x5 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu17.config.f.x5 normal {m}} else {configure_entry .menu17.config.f.x5 disabled {m}}; configure_entry .menu17.config.f.x5 normal {n l}} else {configure_entry .menu17.config.f.x5 disabled {y n m l}}
	global CONFIG_MTD_CMDLINE_PARTS
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD_PARTITIONS == 1 || $CONFIG_MTD_PARTITIONS == 2 || $CONFIG_MTD_PARTITIONS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_MTD_PARTITIONS]];set CONFIG_MTD_CMDLINE_PARTS [sync_tristate $CONFIG_MTD_CMDLINE_PARTS $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu17.config.f.x6 disabled {y}} else {configure_entry .menu17.config.f.x6 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu17.config.f.x6 disabled {m}} else {configure_entry .menu17.config.f.x6 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu17.config.f.x6 normal {m}} else {configure_entry .menu17.config.f.x6 disabled {m}}; configure_entry .menu17.config.f.x6 normal {n l}} else {configure_entry .menu17.config.f.x6 disabled {y n m l}}
	global CONFIG_ARM
	global CONFIG_MTD_AFS_PARTS
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_ARM == 1) && ($CONFIG_MTD_PARTITIONS == 1 || $CONFIG_MTD_PARTITIONS == 2 || $CONFIG_MTD_PARTITIONS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_MTD_PARTITIONS]];set CONFIG_MTD_AFS_PARTS [sync_tristate $CONFIG_MTD_AFS_PARTS $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu17.config.f.x7 disabled {y}} else {configure_entry .menu17.config.f.x7 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu17.config.f.x7 disabled {m}} else {configure_entry .menu17.config.f.x7 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu17.config.f.x7 normal {m}} else {configure_entry .menu17.config.f.x7 disabled {m}}; configure_entry .menu17.config.f.x7 normal {n l}} else {configure_entry .menu17.config.f.x7 disabled {y n m l}}
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2)} then {configure_entry .menu17.config.f.x8 normal {m}} else {configure_entry .menu17.config.f.x8 disabled {m}}
	global CONFIG_MTD_CHAR
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2 || $CONFIG_MTD == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_MTD]];set CONFIG_MTD_CHAR [sync_tristate $CONFIG_MTD_CHAR $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu17.config.f.x9 disabled {y}} else {configure_entry .menu17.config.f.x9 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu17.config.f.x9 disabled {m}} else {configure_entry .menu17.config.f.x9 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu17.config.f.x9 normal {m}} else {configure_entry .menu17.config.f.x9 disabled {m}}; configure_entry .menu17.config.f.x9 normal {n l}} else {configure_entry .menu17.config.f.x9 disabled {y n m l}}
	global CONFIG_MTD_BLOCK
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2 || $CONFIG_MTD == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_MTD]];set CONFIG_MTD_BLOCK [sync_tristate $CONFIG_MTD_BLOCK $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu17.config.f.x10 disabled {y}} else {configure_entry .menu17.config.f.x10 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu17.config.f.x10 disabled {m}} else {configure_entry .menu17.config.f.x10 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu17.config.f.x10 normal {m}} else {configure_entry .menu17.config.f.x10 disabled {m}}; configure_entry .menu17.config.f.x10 normal {n l}} else {configure_entry .menu17.config.f.x10 disabled {y n m l}}
	global CONFIG_MTD_BLOCK_RO
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD_BLOCK == 0 || $CONFIG_MTD_BLOCK == 2) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2 || $CONFIG_MTD == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_MTD]];set CONFIG_MTD_BLOCK_RO [sync_tristate $CONFIG_MTD_BLOCK_RO $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu17.config.f.x11 disabled {y}} else {configure_entry .menu17.config.f.x11 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu17.config.f.x11 disabled {m}} else {configure_entry .menu17.config.f.x11 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu17.config.f.x11 normal {m}} else {configure_entry .menu17.config.f.x11 disabled {m}}; configure_entry .menu17.config.f.x11 normal {n l}} else {configure_entry .menu17.config.f.x11 disabled {y n m l}}
	global CONFIG_FTL
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2 || $CONFIG_MTD == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_MTD]];set CONFIG_FTL [sync_tristate $CONFIG_FTL $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu17.config.f.x12 disabled {y}} else {configure_entry .menu17.config.f.x12 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu17.config.f.x12 disabled {m}} else {configure_entry .menu17.config.f.x12 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu17.config.f.x12 normal {m}} else {configure_entry .menu17.config.f.x12 disabled {m}}; configure_entry .menu17.config.f.x12 normal {n l}} else {configure_entry .menu17.config.f.x12 disabled {y n m l}}
	global CONFIG_NFTL
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2 || $CONFIG_MTD == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_MTD]];set CONFIG_NFTL [sync_tristate $CONFIG_NFTL $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu17.config.f.x13 disabled {y}} else {configure_entry .menu17.config.f.x13 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu17.config.f.x13 disabled {m}} else {configure_entry .menu17.config.f.x13 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu17.config.f.x13 normal {m}} else {configure_entry .menu17.config.f.x13 disabled {m}}; configure_entry .menu17.config.f.x13 normal {n l}} else {configure_entry .menu17.config.f.x13 disabled {y n m l}}
	global CONFIG_INFTL
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2 || $CONFIG_MTD == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_MTD]];set CONFIG_INFTL [sync_tristate $CONFIG_INFTL $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu17.config.f.x14 disabled {y}} else {configure_entry .menu17.config.f.x14 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu17.config.f.x14 disabled {m}} else {configure_entry .menu17.config.f.x14 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu17.config.f.x14 normal {m}} else {configure_entry .menu17.config.f.x14 disabled {m}}; configure_entry .menu17.config.f.x14 normal {n l}} else {configure_entry .menu17.config.f.x14 disabled {y n m l}}
	global CONFIG_NFTL_RW
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_NFTL == 1 || $CONFIG_NFTL == 2)} then {
	configure_entry .menu17.config.f.x15 normal {n l y}} else {configure_entry .menu17.config.f.x15 disabled {y n l}}
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2)} then {configure_entry .menu17.config.f.x16 normal {m}} else {configure_entry .menu17.config.f.x16 disabled {m}}
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2)} then {configure_entry .menu17.config.f.x17 normal {m}} else {configure_entry .menu17.config.f.x17 disabled {m}}
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2)} then {configure_entry .menu17.config.f.x18 normal {m}} else {configure_entry .menu17.config.f.x18 disabled {m}}
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2)} then {configure_entry .menu17.config.f.x19 normal {m}} else {configure_entry .menu17.config.f.x19 disabled {m}}
}


proc update_define_menu17 {} {
	update_define_mainmenu
	global CONFIG_MODULES
	global CONFIG_MTD
set CONFIG_MTD [expr $CONFIG_MTD|16]
	global CONFIG_MTD_DEBUG
set CONFIG_MTD_DEBUG [expr $CONFIG_MTD_DEBUG|16]
	global CONFIG_NFTL_RW
set CONFIG_NFTL_RW [expr $CONFIG_NFTL_RW|16]
	global CONFIG_ALIGNMENT_TRAP
	if {($CONFIG_ALIGNMENT_TRAP == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_MTD == 2)} then {set CONFIG_MTD 1}; set CONFIG_MTD [expr $CONFIG_MTD&15]}
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2)} then {
	set CONFIG_MTD_DEBUG [expr $CONFIG_MTD_DEBUG&15]}
	global CONFIG_MTD_DEBUG_VERBOSE
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD_DEBUG == 1)} then {validate_int CONFIG_MTD_DEBUG_VERBOSE "$CONFIG_MTD_DEBUG_VERBOSE" 0}
	global CONFIG_MTD_PARTITIONS
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2 || $CONFIG_MTD == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_MTD]]; set CONFIG_MTD_PARTITIONS [sync_tristate $CONFIG_MTD_PARTITIONS $tmpvar_dep]; set CONFIG_MTD_PARTITIONS [expr $CONFIG_MTD_PARTITIONS&15]}
	global CONFIG_MTD_CONCAT
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2 || $CONFIG_MTD == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_MTD]]; set CONFIG_MTD_CONCAT [sync_tristate $CONFIG_MTD_CONCAT $tmpvar_dep]; set CONFIG_MTD_CONCAT [expr $CONFIG_MTD_CONCAT&15]}
	global CONFIG_MTD_REDBOOT_PARTS
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD_PARTITIONS == 1 || $CONFIG_MTD_PARTITIONS == 2 || $CONFIG_MTD_PARTITIONS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_MTD_PARTITIONS]]; set CONFIG_MTD_REDBOOT_PARTS [sync_tristate $CONFIG_MTD_REDBOOT_PARTS $tmpvar_dep]; set CONFIG_MTD_REDBOOT_PARTS [expr $CONFIG_MTD_REDBOOT_PARTS&15]}
	global CONFIG_MTD_CMDLINE_PARTS
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD_PARTITIONS == 1 || $CONFIG_MTD_PARTITIONS == 2 || $CONFIG_MTD_PARTITIONS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_MTD_PARTITIONS]]; set CONFIG_MTD_CMDLINE_PARTS [sync_tristate $CONFIG_MTD_CMDLINE_PARTS $tmpvar_dep]; set CONFIG_MTD_CMDLINE_PARTS [expr $CONFIG_MTD_CMDLINE_PARTS&15]}
	global CONFIG_ARM
	global CONFIG_MTD_AFS_PARTS
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_ARM == 1) && ($CONFIG_MTD_PARTITIONS == 1 || $CONFIG_MTD_PARTITIONS == 2 || $CONFIG_MTD_PARTITIONS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_MTD_PARTITIONS]]; set CONFIG_MTD_AFS_PARTS [sync_tristate $CONFIG_MTD_AFS_PARTS $tmpvar_dep]; set CONFIG_MTD_AFS_PARTS [expr $CONFIG_MTD_AFS_PARTS&15]}
	global CONFIG_MTD_CHAR
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2 || $CONFIG_MTD == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_MTD]]; set CONFIG_MTD_CHAR [sync_tristate $CONFIG_MTD_CHAR $tmpvar_dep]; set CONFIG_MTD_CHAR [expr $CONFIG_MTD_CHAR&15]}
	global CONFIG_MTD_BLOCK
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2 || $CONFIG_MTD == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_MTD]]; set CONFIG_MTD_BLOCK [sync_tristate $CONFIG_MTD_BLOCK $tmpvar_dep]; set CONFIG_MTD_BLOCK [expr $CONFIG_MTD_BLOCK&15]}
	global CONFIG_MTD_BLOCK_RO
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD_BLOCK == 0 || $CONFIG_MTD_BLOCK == 2) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2 || $CONFIG_MTD == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_MTD]]; set CONFIG_MTD_BLOCK_RO [sync_tristate $CONFIG_MTD_BLOCK_RO $tmpvar_dep]; set CONFIG_MTD_BLOCK_RO [expr $CONFIG_MTD_BLOCK_RO&15]}
	global CONFIG_FTL
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2 || $CONFIG_MTD == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_MTD]]; set CONFIG_FTL [sync_tristate $CONFIG_FTL $tmpvar_dep]; set CONFIG_FTL [expr $CONFIG_FTL&15]}
	global CONFIG_NFTL
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2 || $CONFIG_MTD == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_MTD]]; set CONFIG_NFTL [sync_tristate $CONFIG_NFTL $tmpvar_dep]; set CONFIG_NFTL [expr $CONFIG_NFTL&15]}
	global CONFIG_INFTL
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2 || $CONFIG_MTD == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_MTD]]; set CONFIG_INFTL [sync_tristate $CONFIG_INFTL $tmpvar_dep]; set CONFIG_INFTL [expr $CONFIG_INFTL&15]}
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_NFTL == 1 || $CONFIG_NFTL == 2)} then {
	set CONFIG_NFTL_RW [expr $CONFIG_NFTL_RW&15]}
}


proc menu18 {w title} {
	set oldFocus [focus]
	catch {focus .menu17}
	catch {destroy $w; unregister_active 18}
	toplevel $w -class Dialog
	wm withdraw $w
	global active_menus
	set active_menus [lsort -integer [linsert $active_menus end 18]]
	message $w.m -width 400 -aspect 300 -text \
		"RAM/ROM/Flash chip drivers"  -relief raised
	pack $w.m -pady 10 -side top -padx 10
	wm title $w "RAM/ROM/Flash chip drivers" 

	bind $w <Escape> "catch {focus $oldFocus}; destroy $w; unregister_active 18; break"
	set nextscript "catch {focus $oldFocus}; destroy $w; unregister_active 18; menu19 .menu19 \"$title\""
	frame $w.f
	button $w.f.back -text "OK" \
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 18"
	button $w.f.next -text "Next" -underline 0\
		-width 15 -command $nextscript
	bind all <Alt-n> $nextscript
	button $w.f.prev -text "Prev" -underline 0\
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 18; menu17 .menu17 \"$title\""
	bind $w <Alt-p> "catch {focus $oldFocus}; destroy $w; unregister_active 18; menu17 .menu17 \"$title\";break"
	pack $w.f.back $w.f.next $w.f.prev -side left -expand on
	pack $w.f -pady 10 -side bottom -anchor w -fill x
	frame $w.topline -relief ridge -borderwidth 2 -height 2
	pack $w.topline -side top -fill x

	frame $w.botline -relief ridge -borderwidth 2 -height 2
	pack $w.botline -side bottom -fill x

	frame $w.config
	pack $w.config -fill y -expand on

	scrollbar $w.config.vscroll -command "$w.config.canvas yview"
	pack $w.config.vscroll -side right -fill y

	canvas $w.config.canvas -height 1\
		-relief flat -borderwidth 0 -yscrollcommand "$w.config.vscroll set" \
		-width [expr [winfo screenwidth .] * 1 / 2] 
	frame $w.config.f
	bind $w <Key-Down> "$w.config.canvas yview scroll  1 unit;break;"
	bind $w <Key-Up> "$w.config.canvas yview scroll  -1 unit;break;"
	bind $w <Key-Next> "$w.config.canvas yview scroll  1 page;break;"
	bind $w <Key-Prior> "$w.config.canvas yview scroll  -1 page;break;"
	bind $w <Key-Home> "$w.config.canvas yview moveto 0;break;"
	bind $w <Key-End> "$w.config.canvas yview moveto 1 ;break;"
	pack $w.config.canvas -side right -fill y


	dep_tristate $w.config.f 18 0 "  Detect flash chips by Common Flash Interface (CFI) probe" CONFIG_MTD_CFI
	dep_tristate $w.config.f 18 1 "  Detect JEDEC JESD21c compatible flash chips" CONFIG_MTD_JEDECPROBE
	bool $w.config.f 18 2 "  Flash chip driver advanced configuration options" CONFIG_MTD_CFI_ADV_OPTIONS
	global tmpvar_11
	minimenu $w.config.f 18 3 "Flash cmd/query data swapping" tmpvar_11 CONFIG_MTD_CFI_NOSWAP
	menu $w.config.f.x3.x.menu -tearoffcommand "menutitle \"Flash cmd/query data swapping\""
	$w.config.f.x3.x.menu add radiobutton -label "NO" -variable tmpvar_11 -value "NO" -command "update_active"
	$w.config.f.x3.x.menu add radiobutton -label "BIG_ENDIAN_BYTE" -variable tmpvar_11 -value "BIG_ENDIAN_BYTE" -command "update_active"
	$w.config.f.x3.x.menu add radiobutton -label "LITTLE_ENDIAN_BYTE" -variable tmpvar_11 -value "LITTLE_ENDIAN_BYTE" -command "update_active"
	menusplit $w $w.config.f.x3.x.menu 3
	bool $w.config.f 18 4 "  Specific CFI Flash geometry selection" CONFIG_MTD_CFI_GEOMETRY
	bool $w.config.f 18 5 "    Support  8-bit buswidth" CONFIG_MTD_CFI_B1
	bool $w.config.f 18 6 "    Support 16-bit buswidth" CONFIG_MTD_CFI_B2
	bool $w.config.f 18 7 "    Support 32-bit buswidth" CONFIG_MTD_CFI_B4
	bool $w.config.f 18 8 "    Support 64-bit buswidth" CONFIG_MTD_CFI_B8
	bool $w.config.f 18 9 "    Support 1-chip flash interleave" CONFIG_MTD_CFI_I1
	bool $w.config.f 18 10 "    Support 2-chip flash interleave" CONFIG_MTD_CFI_I2
	bool $w.config.f 18 11 "    Support 4-chip flash interleave" CONFIG_MTD_CFI_I4
	bool $w.config.f 18 12 "    Support 8-chip flash interleave" CONFIG_MTD_CFI_I8
	dep_tristate $w.config.f 18 13 "  Support for Intel/Sharp flash chips" CONFIG_MTD_CFI_INTELEXT
	dep_tristate $w.config.f 18 14 "  Support for AMD/Fujitsu flash chips" CONFIG_MTD_CFI_AMDSTD
	dep_tristate $w.config.f 18 15 "  Support for ST (Advanced Architecture) flash chips" CONFIG_MTD_CFI_STAA
	dep_tristate $w.config.f 18 16 "  Support for RAM chips in bus mapping" CONFIG_MTD_RAM
	dep_tristate $w.config.f 18 17 "  Support for ROM chips in bus mapping" CONFIG_MTD_ROM
	dep_tristate $w.config.f 18 18 "  Support for absent chips in bus mapping" CONFIG_MTD_ABSENT
	bool $w.config.f 18 19 "  Older (theoretically obsoleted now) drivers for non-CFI chips" CONFIG_MTD_OBSOLETE_CHIPS
	dep_tristate $w.config.f 18 20 "  AMD compatible flash chip support (non-CFI)" CONFIG_MTD_AMDSTD
	dep_tristate $w.config.f 18 21 "  pre-CFI Sharp chip support" CONFIG_MTD_SHARP
	dep_tristate $w.config.f 18 22 "  JEDEC device support" CONFIG_MTD_JEDEC
	dep_tristate $w.config.f 18 23 "  ST PSD4256G compatible flash chip support" CONFIG_MTD_PSD4256G



	focus $w
	update_active
	global winx; global winy
	if {[winfo exists .menu17] == 0} then {menu17 .menu17 "Memory Technology Devices (MTD)"}
	set winx [expr [winfo x .menu17]+30]; set winy [expr [winfo y .menu17]+30]
	if {[winfo exists $w]} then {wm geometry $w +$winx+$winy}
	update idletasks
	if {[winfo exists $w]} then  {$w.config.canvas create window 0 0 -anchor nw -window $w.config.f

	$w.config.canvas configure \
		-width [expr [winfo reqwidth $w.config.f] + 1]\
		-scrollregion "-1 -1 [expr [winfo reqwidth $w.config.f] + 1] \
			 [expr [winfo reqheight $w.config.f] + 1]"

	set winy [expr [winfo reqh $w] - [winfo reqh $w.config.canvas]]
	set scry [expr [winfo screenh $w] / 2]
	set maxy [expr [winfo screenh $w] * 3 / 4]
	set canvtotal [expr [winfo reqh $w.config.f] + 2]
	if [expr $winy + $canvtotal < $maxy] {
		$w.config.canvas configure -height $canvtotal
	} else {
		$w.config.canvas configure -height [expr $scry - $winy]
		}
	}
	update idletasks
	if {[winfo exists $w]} then {
	wm maxsize $w [winfo width $w] [winfo screenheight $w]
	wm minsize $w [winfo width $w] 100

	wm deiconify $w
}
}

proc update_menu18 {} {
	global CONFIG_MODULES
	global CONFIG_ALIGNMENT_TRAP
	global CONFIG_MTD
	global CONFIG_MTD_CFI
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2 || $CONFIG_MTD == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_MTD]];set CONFIG_MTD_CFI [sync_tristate $CONFIG_MTD_CFI $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu18.config.f.x0 disabled {y}} else {configure_entry .menu18.config.f.x0 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu18.config.f.x0 disabled {m}} else {configure_entry .menu18.config.f.x0 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu18.config.f.x0 normal {m}} else {configure_entry .menu18.config.f.x0 disabled {m}}; configure_entry .menu18.config.f.x0 normal {n l}} else {configure_entry .menu18.config.f.x0 disabled {y n m l}}
	global CONFIG_MTD_JEDECPROBE
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2 || $CONFIG_MTD == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_MTD]];set CONFIG_MTD_JEDECPROBE [sync_tristate $CONFIG_MTD_JEDECPROBE $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu18.config.f.x1 disabled {y}} else {configure_entry .menu18.config.f.x1 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu18.config.f.x1 disabled {m}} else {configure_entry .menu18.config.f.x1 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu18.config.f.x1 normal {m}} else {configure_entry .menu18.config.f.x1 disabled {m}}; configure_entry .menu18.config.f.x1 normal {n l}} else {configure_entry .menu18.config.f.x1 disabled {y n m l}}
	global CONFIG_MTD_GEN_PROBE
	global CONFIG_MTD_CFI_ADV_OPTIONS
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD_GEN_PROBE == 1 || $CONFIG_MTD_GEN_PROBE == 2)} then {
	configure_entry .menu18.config.f.x2 normal {n l y}} else {configure_entry .menu18.config.f.x2 disabled {y n l}}
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD_GEN_PROBE == 1 || $CONFIG_MTD_GEN_PROBE == 2) && ($CONFIG_MTD_CFI_ADV_OPTIONS == 1)} then {configure_entry .menu18.config.f.x3 normal {x l}} else {configure_entry .menu18.config.f.x3 disabled {x l}}
	global CONFIG_MTD_CFI_GEOMETRY
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD_GEN_PROBE == 1 || $CONFIG_MTD_GEN_PROBE == 2) && ($CONFIG_MTD_CFI_ADV_OPTIONS == 1)} then {
	configure_entry .menu18.config.f.x4 normal {n l y}} else {configure_entry .menu18.config.f.x4 disabled {y n l}}
	global CONFIG_MTD_CFI_B1
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD_GEN_PROBE == 1 || $CONFIG_MTD_GEN_PROBE == 2) && ($CONFIG_MTD_CFI_ADV_OPTIONS == 1) && ($CONFIG_MTD_CFI_GEOMETRY == 1)} then {
	configure_entry .menu18.config.f.x5 normal {n l y}} else {configure_entry .menu18.config.f.x5 disabled {y n l}}
	global CONFIG_MTD_CFI_B2
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD_GEN_PROBE == 1 || $CONFIG_MTD_GEN_PROBE == 2) && ($CONFIG_MTD_CFI_ADV_OPTIONS == 1) && ($CONFIG_MTD_CFI_GEOMETRY == 1)} then {
	configure_entry .menu18.config.f.x6 normal {n l y}} else {configure_entry .menu18.config.f.x6 disabled {y n l}}
	global CONFIG_MTD_CFI_B4
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD_GEN_PROBE == 1 || $CONFIG_MTD_GEN_PROBE == 2) && ($CONFIG_MTD_CFI_ADV_OPTIONS == 1) && ($CONFIG_MTD_CFI_GEOMETRY == 1)} then {
	configure_entry .menu18.config.f.x7 normal {n l y}} else {configure_entry .menu18.config.f.x7 disabled {y n l}}
	global CONFIG_MTD_CFI_B8
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD_GEN_PROBE == 1 || $CONFIG_MTD_GEN_PROBE == 2) && ($CONFIG_MTD_CFI_ADV_OPTIONS == 1) && ($CONFIG_MTD_CFI_GEOMETRY == 1)} then {
	configure_entry .menu18.config.f.x8 normal {n l y}} else {configure_entry .menu18.config.f.x8 disabled {y n l}}
	global CONFIG_MTD_CFI_I1
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD_GEN_PROBE == 1 || $CONFIG_MTD_GEN_PROBE == 2) && ($CONFIG_MTD_CFI_ADV_OPTIONS == 1) && ($CONFIG_MTD_CFI_GEOMETRY == 1) && ($CONFIG_MTD_CFI_B1 != 1)} then {
	configure_entry .menu18.config.f.x9 normal {n l y}} else {configure_entry .menu18.config.f.x9 disabled {y n l}}
	global CONFIG_MTD_CFI_I2
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD_GEN_PROBE == 1 || $CONFIG_MTD_GEN_PROBE == 2) && ($CONFIG_MTD_CFI_ADV_OPTIONS == 1) && ($CONFIG_MTD_CFI_GEOMETRY == 1)} then {
	configure_entry .menu18.config.f.x10 normal {n l y}} else {configure_entry .menu18.config.f.x10 disabled {y n l}}
	global CONFIG_MTD_CFI_I4
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD_GEN_PROBE == 1 || $CONFIG_MTD_GEN_PROBE == 2) && ($CONFIG_MTD_CFI_ADV_OPTIONS == 1) && ($CONFIG_MTD_CFI_GEOMETRY == 1)} then {
	configure_entry .menu18.config.f.x11 normal {n l y}} else {configure_entry .menu18.config.f.x11 disabled {y n l}}
	global CONFIG_MTD_CFI_I8
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD_GEN_PROBE == 1 || $CONFIG_MTD_GEN_PROBE == 2) && ($CONFIG_MTD_CFI_ADV_OPTIONS == 1) && ($CONFIG_MTD_CFI_GEOMETRY == 1)} then {
	configure_entry .menu18.config.f.x12 normal {n l y}} else {configure_entry .menu18.config.f.x12 disabled {y n l}}
	global CONFIG_MTD_CFI_INTELEXT
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD_GEN_PROBE == 1 || $CONFIG_MTD_GEN_PROBE == 2 || $CONFIG_MTD_GEN_PROBE == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_MTD_GEN_PROBE]];set CONFIG_MTD_CFI_INTELEXT [sync_tristate $CONFIG_MTD_CFI_INTELEXT $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu18.config.f.x13 disabled {y}} else {configure_entry .menu18.config.f.x13 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu18.config.f.x13 disabled {m}} else {configure_entry .menu18.config.f.x13 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu18.config.f.x13 normal {m}} else {configure_entry .menu18.config.f.x13 disabled {m}}; configure_entry .menu18.config.f.x13 normal {n l}} else {configure_entry .menu18.config.f.x13 disabled {y n m l}}
	global CONFIG_MTD_CFI_AMDSTD
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD_GEN_PROBE == 1 || $CONFIG_MTD_GEN_PROBE == 2 || $CONFIG_MTD_GEN_PROBE == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_MTD_GEN_PROBE]];set CONFIG_MTD_CFI_AMDSTD [sync_tristate $CONFIG_MTD_CFI_AMDSTD $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu18.config.f.x14 disabled {y}} else {configure_entry .menu18.config.f.x14 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu18.config.f.x14 disabled {m}} else {configure_entry .menu18.config.f.x14 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu18.config.f.x14 normal {m}} else {configure_entry .menu18.config.f.x14 disabled {m}}; configure_entry .menu18.config.f.x14 normal {n l}} else {configure_entry .menu18.config.f.x14 disabled {y n m l}}
	global CONFIG_MTD_CFI_STAA
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD_GEN_PROBE == 1 || $CONFIG_MTD_GEN_PROBE == 2 || $CONFIG_MTD_GEN_PROBE == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_MTD_GEN_PROBE]];set CONFIG_MTD_CFI_STAA [sync_tristate $CONFIG_MTD_CFI_STAA $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu18.config.f.x15 disabled {y}} else {configure_entry .menu18.config.f.x15 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu18.config.f.x15 disabled {m}} else {configure_entry .menu18.config.f.x15 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu18.config.f.x15 normal {m}} else {configure_entry .menu18.config.f.x15 disabled {m}}; configure_entry .menu18.config.f.x15 normal {n l}} else {configure_entry .menu18.config.f.x15 disabled {y n m l}}
	global CONFIG_MTD_RAM
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2 || $CONFIG_MTD == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_MTD]];set CONFIG_MTD_RAM [sync_tristate $CONFIG_MTD_RAM $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu18.config.f.x16 disabled {y}} else {configure_entry .menu18.config.f.x16 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu18.config.f.x16 disabled {m}} else {configure_entry .menu18.config.f.x16 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu18.config.f.x16 normal {m}} else {configure_entry .menu18.config.f.x16 disabled {m}}; configure_entry .menu18.config.f.x16 normal {n l}} else {configure_entry .menu18.config.f.x16 disabled {y n m l}}
	global CONFIG_MTD_ROM
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2 || $CONFIG_MTD == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_MTD]];set CONFIG_MTD_ROM [sync_tristate $CONFIG_MTD_ROM $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu18.config.f.x17 disabled {y}} else {configure_entry .menu18.config.f.x17 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu18.config.f.x17 disabled {m}} else {configure_entry .menu18.config.f.x17 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu18.config.f.x17 normal {m}} else {configure_entry .menu18.config.f.x17 disabled {m}}; configure_entry .menu18.config.f.x17 normal {n l}} else {configure_entry .menu18.config.f.x17 disabled {y n m l}}
	global CONFIG_MTD_ABSENT
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2 || $CONFIG_MTD == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_MTD]];set CONFIG_MTD_ABSENT [sync_tristate $CONFIG_MTD_ABSENT $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu18.config.f.x18 disabled {y}} else {configure_entry .menu18.config.f.x18 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu18.config.f.x18 disabled {m}} else {configure_entry .menu18.config.f.x18 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu18.config.f.x18 normal {m}} else {configure_entry .menu18.config.f.x18 disabled {m}}; configure_entry .menu18.config.f.x18 normal {n l}} else {configure_entry .menu18.config.f.x18 disabled {y n m l}}
	global CONFIG_MTD_OBSOLETE_CHIPS
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2)} then {
	configure_entry .menu18.config.f.x19 normal {n l y}} else {configure_entry .menu18.config.f.x19 disabled {y n l}}
	global CONFIG_MTD_AMDSTD
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2 || $CONFIG_MTD == 4) && ($CONFIG_MTD_OBSOLETE_CHIPS == 1 || $CONFIG_MTD_OBSOLETE_CHIPS == 2 || $CONFIG_MTD_OBSOLETE_CHIPS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_MTD $CONFIG_MTD_OBSOLETE_CHIPS]];set CONFIG_MTD_AMDSTD [sync_tristate $CONFIG_MTD_AMDSTD $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu18.config.f.x20 disabled {y}} else {configure_entry .menu18.config.f.x20 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu18.config.f.x20 disabled {m}} else {configure_entry .menu18.config.f.x20 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu18.config.f.x20 normal {m}} else {configure_entry .menu18.config.f.x20 disabled {m}}; configure_entry .menu18.config.f.x20 normal {n l}} else {configure_entry .menu18.config.f.x20 disabled {y n m l}}
	global CONFIG_MTD_SHARP
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2 || $CONFIG_MTD == 4) && ($CONFIG_MTD_OBSOLETE_CHIPS == 1 || $CONFIG_MTD_OBSOLETE_CHIPS == 2 || $CONFIG_MTD_OBSOLETE_CHIPS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_MTD $CONFIG_MTD_OBSOLETE_CHIPS]];set CONFIG_MTD_SHARP [sync_tristate $CONFIG_MTD_SHARP $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu18.config.f.x21 disabled {y}} else {configure_entry .menu18.config.f.x21 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu18.config.f.x21 disabled {m}} else {configure_entry .menu18.config.f.x21 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu18.config.f.x21 normal {m}} else {configure_entry .menu18.config.f.x21 disabled {m}}; configure_entry .menu18.config.f.x21 normal {n l}} else {configure_entry .menu18.config.f.x21 disabled {y n m l}}
	global CONFIG_MTD_JEDEC
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2 || $CONFIG_MTD == 4) && ($CONFIG_MTD_OBSOLETE_CHIPS == 1 || $CONFIG_MTD_OBSOLETE_CHIPS == 2 || $CONFIG_MTD_OBSOLETE_CHIPS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_MTD $CONFIG_MTD_OBSOLETE_CHIPS]];set CONFIG_MTD_JEDEC [sync_tristate $CONFIG_MTD_JEDEC $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu18.config.f.x22 disabled {y}} else {configure_entry .menu18.config.f.x22 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu18.config.f.x22 disabled {m}} else {configure_entry .menu18.config.f.x22 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu18.config.f.x22 normal {m}} else {configure_entry .menu18.config.f.x22 disabled {m}}; configure_entry .menu18.config.f.x22 normal {n l}} else {configure_entry .menu18.config.f.x22 disabled {y n m l}}
	global CONFIG_MTD_PSD4256G
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2 || $CONFIG_MTD == 4) && ($CONFIG_MTD_OBSOLETE_CHIPS == 1 || $CONFIG_MTD_OBSOLETE_CHIPS == 2 || $CONFIG_MTD_OBSOLETE_CHIPS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_MTD $CONFIG_MTD_OBSOLETE_CHIPS]];set CONFIG_MTD_PSD4256G [sync_tristate $CONFIG_MTD_PSD4256G $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu18.config.f.x23 disabled {y}} else {configure_entry .menu18.config.f.x23 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu18.config.f.x23 disabled {m}} else {configure_entry .menu18.config.f.x23 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu18.config.f.x23 normal {m}} else {configure_entry .menu18.config.f.x23 disabled {m}}; configure_entry .menu18.config.f.x23 normal {n l}} else {configure_entry .menu18.config.f.x23 disabled {y n m l}}
}


proc update_define_menu18 {} {
	update_define_mainmenu
	global CONFIG_MODULES
	global CONFIG_MTD_GEN_PROBE
	global CONFIG_MTD_CFI_I1
	global CONFIG_MTD_CFI_ADV_OPTIONS
set CONFIG_MTD_CFI_ADV_OPTIONS [expr $CONFIG_MTD_CFI_ADV_OPTIONS|16]
	global CONFIG_MTD_CFI_GEOMETRY
set CONFIG_MTD_CFI_GEOMETRY [expr $CONFIG_MTD_CFI_GEOMETRY|16]
	global CONFIG_MTD_CFI_B1
set CONFIG_MTD_CFI_B1 [expr $CONFIG_MTD_CFI_B1|16]
	global CONFIG_MTD_CFI_B2
set CONFIG_MTD_CFI_B2 [expr $CONFIG_MTD_CFI_B2|16]
	global CONFIG_MTD_CFI_B4
set CONFIG_MTD_CFI_B4 [expr $CONFIG_MTD_CFI_B4|16]
	global CONFIG_MTD_CFI_B8
set CONFIG_MTD_CFI_B8 [expr $CONFIG_MTD_CFI_B8|16]
set CONFIG_MTD_CFI_I1 [expr $CONFIG_MTD_CFI_I1|16]
	global CONFIG_MTD_CFI_I2
set CONFIG_MTD_CFI_I2 [expr $CONFIG_MTD_CFI_I2|16]
	global CONFIG_MTD_CFI_I4
set CONFIG_MTD_CFI_I4 [expr $CONFIG_MTD_CFI_I4|16]
	global CONFIG_MTD_CFI_I8
set CONFIG_MTD_CFI_I8 [expr $CONFIG_MTD_CFI_I8|16]
	global CONFIG_MTD_OBSOLETE_CHIPS
set CONFIG_MTD_OBSOLETE_CHIPS [expr $CONFIG_MTD_OBSOLETE_CHIPS|16]
	global CONFIG_ALIGNMENT_TRAP
	global CONFIG_MTD
	global CONFIG_MTD_CFI
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2 || $CONFIG_MTD == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_MTD]]; set CONFIG_MTD_CFI [sync_tristate $CONFIG_MTD_CFI $tmpvar_dep]; set CONFIG_MTD_CFI [expr $CONFIG_MTD_CFI&15]}
	global CONFIG_MTD_JEDECPROBE
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2 || $CONFIG_MTD == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_MTD]]; set CONFIG_MTD_JEDECPROBE [sync_tristate $CONFIG_MTD_JEDECPROBE $tmpvar_dep]; set CONFIG_MTD_JEDECPROBE [expr $CONFIG_MTD_JEDECPROBE&15]}
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD_CFI == 1 || $CONFIG_MTD_JEDECPROBE == 1)} then {	global CONSTANT_Y
set CONFIG_MTD_GEN_PROBE $CONSTANT_Y }
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD_CFI != 1 && $CONFIG_MTD_JEDECPROBE != 1) && ($CONFIG_MTD_CFI == 2 || $CONFIG_MTD_JEDECPROBE == 2)} then {	global CONSTANT_M
set CONFIG_MTD_GEN_PROBE $CONSTANT_M }
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD_CFI != 1 && $CONFIG_MTD_JEDECPROBE != 1) && ($CONFIG_MTD_CFI != 2 && $CONFIG_MTD_JEDECPROBE != 2)} then {	global CONSTANT_N
set CONFIG_MTD_GEN_PROBE $CONSTANT_N }
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD_GEN_PROBE == 1 || $CONFIG_MTD_GEN_PROBE == 2)} then {
	set CONFIG_MTD_CFI_ADV_OPTIONS [expr $CONFIG_MTD_CFI_ADV_OPTIONS&15]}
	global tmpvar_11
	global CONFIG_MTD_CFI_NOSWAP
	if {$tmpvar_11 == "NO"} then {set CONFIG_MTD_CFI_NOSWAP 1} else {set CONFIG_MTD_CFI_NOSWAP 0}
	global CONFIG_MTD_CFI_BE_BYTE_SWAP
	if {$tmpvar_11 == "BIG_ENDIAN_BYTE"} then {set CONFIG_MTD_CFI_BE_BYTE_SWAP 1} else {set CONFIG_MTD_CFI_BE_BYTE_SWAP 0}
	global CONFIG_MTD_CFI_LE_BYTE_SWAP
	if {$tmpvar_11 == "LITTLE_ENDIAN_BYTE"} then {set CONFIG_MTD_CFI_LE_BYTE_SWAP 1} else {set CONFIG_MTD_CFI_LE_BYTE_SWAP 0}
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD_GEN_PROBE == 1 || $CONFIG_MTD_GEN_PROBE == 2) && ($CONFIG_MTD_CFI_ADV_OPTIONS == 1)} then {
	set CONFIG_MTD_CFI_GEOMETRY [expr $CONFIG_MTD_CFI_GEOMETRY&15]}
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD_GEN_PROBE == 1 || $CONFIG_MTD_GEN_PROBE == 2) && ($CONFIG_MTD_CFI_ADV_OPTIONS == 1) && ($CONFIG_MTD_CFI_GEOMETRY == 1)} then {
	set CONFIG_MTD_CFI_B1 [expr $CONFIG_MTD_CFI_B1&15]}
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD_GEN_PROBE == 1 || $CONFIG_MTD_GEN_PROBE == 2) && ($CONFIG_MTD_CFI_ADV_OPTIONS == 1) && ($CONFIG_MTD_CFI_GEOMETRY == 1)} then {
	set CONFIG_MTD_CFI_B2 [expr $CONFIG_MTD_CFI_B2&15]}
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD_GEN_PROBE == 1 || $CONFIG_MTD_GEN_PROBE == 2) && ($CONFIG_MTD_CFI_ADV_OPTIONS == 1) && ($CONFIG_MTD_CFI_GEOMETRY == 1)} then {
	set CONFIG_MTD_CFI_B4 [expr $CONFIG_MTD_CFI_B4&15]}
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD_GEN_PROBE == 1 || $CONFIG_MTD_GEN_PROBE == 2) && ($CONFIG_MTD_CFI_ADV_OPTIONS == 1) && ($CONFIG_MTD_CFI_GEOMETRY == 1)} then {
	set CONFIG_MTD_CFI_B8 [expr $CONFIG_MTD_CFI_B8&15]}
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD_GEN_PROBE == 1 || $CONFIG_MTD_GEN_PROBE == 2) && ($CONFIG_MTD_CFI_ADV_OPTIONS == 1) && ($CONFIG_MTD_CFI_GEOMETRY == 1) && ($CONFIG_MTD_CFI_B1 == 1)} then {	global CONSTANT_Y
set CONFIG_MTD_CFI_I1 $CONSTANT_Y }
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD_GEN_PROBE == 1 || $CONFIG_MTD_GEN_PROBE == 2) && ($CONFIG_MTD_CFI_ADV_OPTIONS == 1) && ($CONFIG_MTD_CFI_GEOMETRY == 1) && ($CONFIG_MTD_CFI_B1 != 1)} then {
	set CONFIG_MTD_CFI_I1 [expr $CONFIG_MTD_CFI_I1&15]}
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD_GEN_PROBE == 1 || $CONFIG_MTD_GEN_PROBE == 2) && ($CONFIG_MTD_CFI_ADV_OPTIONS == 1) && ($CONFIG_MTD_CFI_GEOMETRY == 1)} then {
	set CONFIG_MTD_CFI_I2 [expr $CONFIG_MTD_CFI_I2&15]}
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD_GEN_PROBE == 1 || $CONFIG_MTD_GEN_PROBE == 2) && ($CONFIG_MTD_CFI_ADV_OPTIONS == 1) && ($CONFIG_MTD_CFI_GEOMETRY == 1)} then {
	set CONFIG_MTD_CFI_I4 [expr $CONFIG_MTD_CFI_I4&15]}
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD_GEN_PROBE == 1 || $CONFIG_MTD_GEN_PROBE == 2) && ($CONFIG_MTD_CFI_ADV_OPTIONS == 1) && ($CONFIG_MTD_CFI_GEOMETRY == 1)} then {
	set CONFIG_MTD_CFI_I8 [expr $CONFIG_MTD_CFI_I8&15]}
	global CONFIG_MTD_CFI_INTELEXT
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD_GEN_PROBE == 1 || $CONFIG_MTD_GEN_PROBE == 2 || $CONFIG_MTD_GEN_PROBE == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_MTD_GEN_PROBE]]; set CONFIG_MTD_CFI_INTELEXT [sync_tristate $CONFIG_MTD_CFI_INTELEXT $tmpvar_dep]; set CONFIG_MTD_CFI_INTELEXT [expr $CONFIG_MTD_CFI_INTELEXT&15]}
	global CONFIG_MTD_CFI_AMDSTD
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD_GEN_PROBE == 1 || $CONFIG_MTD_GEN_PROBE == 2 || $CONFIG_MTD_GEN_PROBE == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_MTD_GEN_PROBE]]; set CONFIG_MTD_CFI_AMDSTD [sync_tristate $CONFIG_MTD_CFI_AMDSTD $tmpvar_dep]; set CONFIG_MTD_CFI_AMDSTD [expr $CONFIG_MTD_CFI_AMDSTD&15]}
	global CONFIG_MTD_CFI_STAA
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD_GEN_PROBE == 1 || $CONFIG_MTD_GEN_PROBE == 2 || $CONFIG_MTD_GEN_PROBE == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_MTD_GEN_PROBE]]; set CONFIG_MTD_CFI_STAA [sync_tristate $CONFIG_MTD_CFI_STAA $tmpvar_dep]; set CONFIG_MTD_CFI_STAA [expr $CONFIG_MTD_CFI_STAA&15]}
	global CONFIG_MTD_RAM
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2 || $CONFIG_MTD == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_MTD]]; set CONFIG_MTD_RAM [sync_tristate $CONFIG_MTD_RAM $tmpvar_dep]; set CONFIG_MTD_RAM [expr $CONFIG_MTD_RAM&15]}
	global CONFIG_MTD_ROM
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2 || $CONFIG_MTD == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_MTD]]; set CONFIG_MTD_ROM [sync_tristate $CONFIG_MTD_ROM $tmpvar_dep]; set CONFIG_MTD_ROM [expr $CONFIG_MTD_ROM&15]}
	global CONFIG_MTD_ABSENT
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2 || $CONFIG_MTD == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_MTD]]; set CONFIG_MTD_ABSENT [sync_tristate $CONFIG_MTD_ABSENT $tmpvar_dep]; set CONFIG_MTD_ABSENT [expr $CONFIG_MTD_ABSENT&15]}
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2)} then {
	set CONFIG_MTD_OBSOLETE_CHIPS [expr $CONFIG_MTD_OBSOLETE_CHIPS&15]}
	global CONFIG_MTD_AMDSTD
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2 || $CONFIG_MTD == 4) && ($CONFIG_MTD_OBSOLETE_CHIPS == 1 || $CONFIG_MTD_OBSOLETE_CHIPS == 2 || $CONFIG_MTD_OBSOLETE_CHIPS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_MTD $CONFIG_MTD_OBSOLETE_CHIPS]]; set CONFIG_MTD_AMDSTD [sync_tristate $CONFIG_MTD_AMDSTD $tmpvar_dep]; set CONFIG_MTD_AMDSTD [expr $CONFIG_MTD_AMDSTD&15]}
	global CONFIG_MTD_SHARP
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2 || $CONFIG_MTD == 4) && ($CONFIG_MTD_OBSOLETE_CHIPS == 1 || $CONFIG_MTD_OBSOLETE_CHIPS == 2 || $CONFIG_MTD_OBSOLETE_CHIPS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_MTD $CONFIG_MTD_OBSOLETE_CHIPS]]; set CONFIG_MTD_SHARP [sync_tristate $CONFIG_MTD_SHARP $tmpvar_dep]; set CONFIG_MTD_SHARP [expr $CONFIG_MTD_SHARP&15]}
	global CONFIG_MTD_JEDEC
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2 || $CONFIG_MTD == 4) && ($CONFIG_MTD_OBSOLETE_CHIPS == 1 || $CONFIG_MTD_OBSOLETE_CHIPS == 2 || $CONFIG_MTD_OBSOLETE_CHIPS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_MTD $CONFIG_MTD_OBSOLETE_CHIPS]]; set CONFIG_MTD_JEDEC [sync_tristate $CONFIG_MTD_JEDEC $tmpvar_dep]; set CONFIG_MTD_JEDEC [expr $CONFIG_MTD_JEDEC&15]}
	global CONFIG_MTD_PSD4256G
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2 || $CONFIG_MTD == 4) && ($CONFIG_MTD_OBSOLETE_CHIPS == 1 || $CONFIG_MTD_OBSOLETE_CHIPS == 2 || $CONFIG_MTD_OBSOLETE_CHIPS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_MTD $CONFIG_MTD_OBSOLETE_CHIPS]]; set CONFIG_MTD_PSD4256G [sync_tristate $CONFIG_MTD_PSD4256G $tmpvar_dep]; set CONFIG_MTD_PSD4256G [expr $CONFIG_MTD_PSD4256G&15]}
}


proc menu19 {w title} {
	set oldFocus [focus]
	catch {focus .menu17}
	catch {destroy $w; unregister_active 19}
	toplevel $w -class Dialog
	wm withdraw $w
	global active_menus
	set active_menus [lsort -integer [linsert $active_menus end 19]]
	message $w.m -width 400 -aspect 300 -text \
		"Mapping drivers for chip access"  -relief raised
	pack $w.m -pady 10 -side top -padx 10
	wm title $w "Mapping drivers for chip access" 

	bind $w <Escape> "catch {focus $oldFocus}; destroy $w; unregister_active 19; break"
	set nextscript "catch {focus $oldFocus}; destroy $w; unregister_active 19; menu20 .menu20 \"$title\""
	frame $w.f
	button $w.f.back -text "OK" \
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 19"
	button $w.f.next -text "Next" -underline 0\
		-width 15 -command $nextscript
	bind all <Alt-n> $nextscript
	button $w.f.prev -text "Prev" -underline 0\
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 19; menu18 .menu18 \"$title\""
	bind $w <Alt-p> "catch {focus $oldFocus}; destroy $w; unregister_active 19; menu18 .menu18 \"$title\";break"
	pack $w.f.back $w.f.next $w.f.prev -side left -expand on
	pack $w.f -pady 10 -side bottom -anchor w -fill x
	frame $w.topline -relief ridge -borderwidth 2 -height 2
	pack $w.topline -side top -fill x

	frame $w.botline -relief ridge -borderwidth 2 -height 2
	pack $w.botline -side bottom -fill x

	frame $w.config
	pack $w.config -fill y -expand on

	scrollbar $w.config.vscroll -command "$w.config.canvas yview"
	pack $w.config.vscroll -side right -fill y

	canvas $w.config.canvas -height 1\
		-relief flat -borderwidth 0 -yscrollcommand "$w.config.vscroll set" \
		-width [expr [winfo screenwidth .] * 1 / 2] 
	frame $w.config.f
	bind $w <Key-Down> "$w.config.canvas yview scroll  1 unit;break;"
	bind $w <Key-Up> "$w.config.canvas yview scroll  -1 unit;break;"
	bind $w <Key-Next> "$w.config.canvas yview scroll  1 page;break;"
	bind $w <Key-Prior> "$w.config.canvas yview scroll  -1 page;break;"
	bind $w <Key-Home> "$w.config.canvas yview moveto 0;break;"
	bind $w <Key-End> "$w.config.canvas yview moveto 1 ;break;"
	pack $w.config.canvas -side right -fill y


	dep_tristate $w.config.f 19 0 "  CFI Flash device in physical memory map" CONFIG_MTD_PHYSMAP
	hex $w.config.f 19 1 "    Physical start address of flash mapping" CONFIG_MTD_PHYSMAP_START
	hex $w.config.f 19 2 "    Physical length of flash mapping" CONFIG_MTD_PHYSMAP_LEN
	int $w.config.f 19 3 "    Bus width in octets" CONFIG_MTD_PHYSMAP_BUSWIDTH
	dep_tristate $w.config.f 19 4 "  CFI Flash device mapped on Dragonix VZ" CONFIG_MTD_DRAGONIX
	dep_tristate $w.config.f 19 5 "  CFI Flash device mapped on SnapGear/SecureEdge" CONFIG_MTD_NETtel
	dep_tristate $w.config.f 19 6 "  CFI Flash device mapped on SnapGear/GEODE boards" CONFIG_MTD_SNAPGEODE
	dep_tristate $w.config.f 19 7 "  CFI Flash device mapped on SnapGear/SecureEdge (uClinux)" CONFIG_MTD_NETteluC
	global tmpvar_12
	minimenu $w.config.f 19 8 "  FLASH size" tmpvar_12 CONFIG_FLASHAUTO
	menu $w.config.f.x8.x.menu -tearoffcommand "menutitle \"  FLASH size\""
	$w.config.f.x8.x.menu add radiobutton -label "AUTO" -variable tmpvar_12 -value "AUTO" -command "update_active"
	$w.config.f.x8.x.menu add radiobutton -label "128KB" -variable tmpvar_12 -value "128KB" -command "update_active"
	$w.config.f.x8.x.menu add radiobutton -label "1MB" -variable tmpvar_12 -value "1MB" -command "update_active"
	$w.config.f.x8.x.menu add radiobutton -label "2MB" -variable tmpvar_12 -value "2MB" -command "update_active"
	$w.config.f.x8.x.menu add radiobutton -label "4MB" -variable tmpvar_12 -value "4MB" -command "update_active"
	$w.config.f.x8.x.menu add radiobutton -label "6MB" -variable tmpvar_12 -value "6MB" -command "update_active"
	$w.config.f.x8.x.menu add radiobutton -label "8MB" -variable tmpvar_12 -value "8MB" -command "update_active"
	$w.config.f.x8.x.menu add radiobutton -label "16MB" -variable tmpvar_12 -value "16MB" -command "update_active"
	menusplit $w $w.config.f.x8.x.menu 8
	dep_tristate $w.config.f 19 9 "  CFI Flash device mapped on Microblaze/mbvanilla (uClinux)" CONFIG_MTD_MBVANILLA
	global tmpvar_13
	minimenu $w.config.f 19 10 "  FLASH size" tmpvar_13 CONFIG_FLASHAUTO
	menu $w.config.f.x10.x.menu -tearoffcommand "menutitle \"  FLASH size\""
	$w.config.f.x10.x.menu add radiobutton -label "AUTO" -variable tmpvar_13 -value "AUTO" -command "update_active"
	$w.config.f.x10.x.menu add radiobutton -label "128KB" -variable tmpvar_13 -value "128KB" -command "update_active"
	$w.config.f.x10.x.menu add radiobutton -label "1MB" -variable tmpvar_13 -value "1MB" -command "update_active"
	$w.config.f.x10.x.menu add radiobutton -label "2MB" -variable tmpvar_13 -value "2MB" -command "update_active"
	$w.config.f.x10.x.menu add radiobutton -label "4MB" -variable tmpvar_13 -value "4MB" -command "update_active"
	$w.config.f.x10.x.menu add radiobutton -label "6MB" -variable tmpvar_13 -value "6MB" -command "update_active"
	$w.config.f.x10.x.menu add radiobutton -label "8MB" -variable tmpvar_13 -value "8MB" -command "update_active"
	menusplit $w $w.config.f.x10.x.menu 7
	dep_tristate $w.config.f 19 11 "  CFI Flash device mapped on Key Technology devices" CONFIG_MTD_KeyTechnology
	dep_tristate $w.config.f 19 12 "  CFI Flash device mapped on Nora" CONFIG_MTD_NORA
	dep_tristate $w.config.f 19 13 "  CFI Flash device mapped on ARM Integrator/P720T" CONFIG_MTD_ARM_INTEGRATOR
	dep_tristate $w.config.f 19 14 "  Cirrus CDB89712 evaluation board mappings" CONFIG_MTD_CDB89712
	dep_tristate $w.config.f 19 15 "  CFI Flash device mapped on StrongARM SA11x0" CONFIG_MTD_SA1100
	dep_tristate $w.config.f 19 16 "  CFI Flash device mapped on DC21285 Footbridge" CONFIG_MTD_DC21285
	dep_tristate $w.config.f 19 17 "  CFI Flash device mapped on the XScale IQ80310 board" CONFIG_MTD_IQ80310
	dep_tristate $w.config.f 19 18 "  CFI Flash device mapped on Epxa10db" CONFIG_MTD_EPXA10DB
	dep_tristate $w.config.f 19 19 "  CFI Flash device mapped on the FortuNet board" CONFIG_MTD_FORTUNET
	dep_tristate $w.config.f 19 20 "  NV-RAM mapping AUTCPU12 board" CONFIG_MTD_AUTCPU12
	dep_tristate $w.config.f 19 21 "  CFI Flash device mapped on IXP425" CONFIG_MTD_IXP425
	dep_tristate $w.config.f 19 22 "  CFI Flash device mapped on SnapGear SE4000 board" CONFIG_MTD_SE4000
	dep_tristate $w.config.f 19 23 "  CFI Flash device mapped on SnapGear ARM based boards" CONFIG_MTD_SNAPARM
	dep_tristate $w.config.f 19 24 "  CFI Flash device mapped on EDB7312" CONFIG_MTD_EDB7312
	dep_tristate $w.config.f 19 25 "  JEDEC Flash device mapped on impA7" CONFIG_MTD_IMPA7
	dep_tristate $w.config.f 19 26 "  JEDEC Flash device mapped on Ceiva/Polaroid PhotoMax Digital Picture Frame" CONFIG_MTD_CEIVA
	dep_tristate $w.config.f 19 27 "  CFI Flash device mapped on Motorola M5272C3" CONFIG_MTD_M5272C3
	dep_tristate $w.config.f 19 28 "  PCI MTD driver" CONFIG_MTD_PCI
	dep_tristate $w.config.f 19 29 "  PCMCIA MTD driver" CONFIG_MTD_PCMCIA



	focus $w
	update_active
	global winx; global winy
	if {[winfo exists .menu17] == 0} then {menu17 .menu17 "Memory Technology Devices (MTD)"}
	set winx [expr [winfo x .menu17]+30]; set winy [expr [winfo y .menu17]+30]
	if {[winfo exists $w]} then {wm geometry $w +$winx+$winy}
	update idletasks
	if {[winfo exists $w]} then  {$w.config.canvas create window 0 0 -anchor nw -window $w.config.f

	$w.config.canvas configure \
		-width [expr [winfo reqwidth $w.config.f] + 1]\
		-scrollregion "-1 -1 [expr [winfo reqwidth $w.config.f] + 1] \
			 [expr [winfo reqheight $w.config.f] + 1]"

	set winy [expr [winfo reqh $w] - [winfo reqh $w.config.canvas]]
	set scry [expr [winfo screenh $w] / 2]
	set maxy [expr [winfo screenh $w] * 3 / 4]
	set canvtotal [expr [winfo reqh $w.config.f] + 2]
	if [expr $winy + $canvtotal < $maxy] {
		$w.config.canvas configure -height $canvtotal
	} else {
		$w.config.canvas configure -height [expr $scry - $winy]
		}
	}
	update idletasks
	if {[winfo exists $w]} then {
	wm maxsize $w [winfo width $w] [winfo screenheight $w]
	wm minsize $w [winfo width $w] 100

	wm deiconify $w
}
}

proc update_menu19 {} {
	global CONFIG_MODULES
	global CONFIG_ALIGNMENT_TRAP
	global CONFIG_MTD
	global CONFIG_MTD_GEN_PROBE
	global CONFIG_MTD_PHYSMAP
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD_GEN_PROBE == 1 || $CONFIG_MTD_GEN_PROBE == 2 || $CONFIG_MTD_GEN_PROBE == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_MTD_GEN_PROBE]];set CONFIG_MTD_PHYSMAP [sync_tristate $CONFIG_MTD_PHYSMAP $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu19.config.f.x0 disabled {y}} else {configure_entry .menu19.config.f.x0 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu19.config.f.x0 disabled {m}} else {configure_entry .menu19.config.f.x0 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu19.config.f.x0 normal {m}} else {configure_entry .menu19.config.f.x0 disabled {m}}; configure_entry .menu19.config.f.x0 normal {n l}} else {configure_entry .menu19.config.f.x0 disabled {y n m l}}
	global CONFIG_MTD_PHYSMAP_START
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD_PHYSMAP == 1 || $CONFIG_MTD_PHYSMAP == 2)} then {.menu19.config.f.x1.x configure -state normal -foreground [ cget .ref -foreground ]; .menu19.config.f.x1.l configure -state normal; } else {.menu19.config.f.x1.x configure -state disabled -foreground [ cget .ref -disabledforeground ]; .menu19.config.f.x1.l configure -state disabled}
	global CONFIG_MTD_PHYSMAP_LEN
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD_PHYSMAP == 1 || $CONFIG_MTD_PHYSMAP == 2)} then {.menu19.config.f.x2.x configure -state normal -foreground [ cget .ref -foreground ]; .menu19.config.f.x2.l configure -state normal; } else {.menu19.config.f.x2.x configure -state disabled -foreground [ cget .ref -disabledforeground ]; .menu19.config.f.x2.l configure -state disabled}
	global CONFIG_MTD_PHYSMAP_BUSWIDTH
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD_PHYSMAP == 1 || $CONFIG_MTD_PHYSMAP == 2)} then {.menu19.config.f.x3.x configure -state normal -foreground [ cget .ref -foreground ]; .menu19.config.f.x3.l configure -state normal; } else {.menu19.config.f.x3.x configure -state disabled -foreground [ cget .ref -disabledforeground ]; .menu19.config.f.x3.l configure -state disabled}
	global CONFIG_MTD_CFI_INTELEXT
	global CONFIG_MTD_CFI_AMDSTD
	global CONFIG_MTD_PARTITIONS
	global CONFIG_MTD_DRAGONIX
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD_CFI_INTELEXT == 1 || $CONFIG_MTD_CFI_INTELEXT == 2 || $CONFIG_MTD_CFI_INTELEXT == 4) && ($CONFIG_MTD_CFI_AMDSTD == 1 || $CONFIG_MTD_CFI_AMDSTD == 2 || $CONFIG_MTD_CFI_AMDSTD == 4) && ($CONFIG_MTD_PARTITIONS == 1 || $CONFIG_MTD_PARTITIONS == 2 || $CONFIG_MTD_PARTITIONS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_MTD_CFI_INTELEXT $CONFIG_MTD_CFI_AMDSTD $CONFIG_MTD_PARTITIONS]];set CONFIG_MTD_DRAGONIX [sync_tristate $CONFIG_MTD_DRAGONIX $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu19.config.f.x4 disabled {y}} else {configure_entry .menu19.config.f.x4 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu19.config.f.x4 disabled {m}} else {configure_entry .menu19.config.f.x4 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu19.config.f.x4 normal {m}} else {configure_entry .menu19.config.f.x4 disabled {m}}; configure_entry .menu19.config.f.x4 normal {n l}} else {configure_entry .menu19.config.f.x4 disabled {y n m l}}
	global CONFIG_MTD_NETtel
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD_PARTITIONS == 1 || $CONFIG_MTD_PARTITIONS == 2 || $CONFIG_MTD_PARTITIONS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_MTD_PARTITIONS]];set CONFIG_MTD_NETtel [sync_tristate $CONFIG_MTD_NETtel $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu19.config.f.x5 disabled {y}} else {configure_entry .menu19.config.f.x5 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu19.config.f.x5 disabled {m}} else {configure_entry .menu19.config.f.x5 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu19.config.f.x5 normal {m}} else {configure_entry .menu19.config.f.x5 disabled {m}}; configure_entry .menu19.config.f.x5 normal {n l}} else {configure_entry .menu19.config.f.x5 disabled {y n m l}}
	global CONFIG_MTD_SNAPGEODE
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD_PARTITIONS == 1 || $CONFIG_MTD_PARTITIONS == 2 || $CONFIG_MTD_PARTITIONS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_MTD_PARTITIONS]];set CONFIG_MTD_SNAPGEODE [sync_tristate $CONFIG_MTD_SNAPGEODE $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu19.config.f.x6 disabled {y}} else {configure_entry .menu19.config.f.x6 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu19.config.f.x6 disabled {m}} else {configure_entry .menu19.config.f.x6 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu19.config.f.x6 normal {m}} else {configure_entry .menu19.config.f.x6 disabled {m}}; configure_entry .menu19.config.f.x6 normal {n l}} else {configure_entry .menu19.config.f.x6 disabled {y n m l}}
	global CONFIG_UCLINUX
	global CONFIG_MTD_NETteluC
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_UCLINUX == 1 || $CONFIG_UCLINUX == 2 || $CONFIG_UCLINUX == 4) && ($CONFIG_MTD_PARTITIONS == 1 || $CONFIG_MTD_PARTITIONS == 2 || $CONFIG_MTD_PARTITIONS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_UCLINUX $CONFIG_MTD_PARTITIONS]];set CONFIG_MTD_NETteluC [sync_tristate $CONFIG_MTD_NETteluC $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu19.config.f.x7 disabled {y}} else {configure_entry .menu19.config.f.x7 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu19.config.f.x7 disabled {m}} else {configure_entry .menu19.config.f.x7 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu19.config.f.x7 normal {m}} else {configure_entry .menu19.config.f.x7 disabled {m}}; configure_entry .menu19.config.f.x7 normal {n l}} else {configure_entry .menu19.config.f.x7 disabled {y n m l}}
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD_NETteluC == 1)} then {configure_entry .menu19.config.f.x8 normal {x l}} else {configure_entry .menu19.config.f.x8 disabled {x l}}
	global CONFIG_MTD_MBVANILLA
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_UCLINUX == 1 || $CONFIG_UCLINUX == 2 || $CONFIG_UCLINUX == 4) && ($CONFIG_MTD_PARTITIONS == 1 || $CONFIG_MTD_PARTITIONS == 2 || $CONFIG_MTD_PARTITIONS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_UCLINUX $CONFIG_MTD_PARTITIONS]];set CONFIG_MTD_MBVANILLA [sync_tristate $CONFIG_MTD_MBVANILLA $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu19.config.f.x9 disabled {y}} else {configure_entry .menu19.config.f.x9 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu19.config.f.x9 disabled {m}} else {configure_entry .menu19.config.f.x9 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu19.config.f.x9 normal {m}} else {configure_entry .menu19.config.f.x9 disabled {m}}; configure_entry .menu19.config.f.x9 normal {n l}} else {configure_entry .menu19.config.f.x9 disabled {y n m l}}
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD_MBVANILLA == 1)} then {configure_entry .menu19.config.f.x10 normal {x l}} else {configure_entry .menu19.config.f.x10 disabled {x l}}
	global CONFIG_MTD_KeyTechnology
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_UCLINUX == 1 || $CONFIG_UCLINUX == 2 || $CONFIG_UCLINUX == 4) && ($CONFIG_MTD_PARTITIONS == 1 || $CONFIG_MTD_PARTITIONS == 2 || $CONFIG_MTD_PARTITIONS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_UCLINUX $CONFIG_MTD_PARTITIONS]];set CONFIG_MTD_KeyTechnology [sync_tristate $CONFIG_MTD_KeyTechnology $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu19.config.f.x11 disabled {y}} else {configure_entry .menu19.config.f.x11 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu19.config.f.x11 disabled {m}} else {configure_entry .menu19.config.f.x11 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu19.config.f.x11 normal {m}} else {configure_entry .menu19.config.f.x11 disabled {m}}; configure_entry .menu19.config.f.x11 normal {n l}} else {configure_entry .menu19.config.f.x11 disabled {y n m l}}
	global CONFIG_ARM
	global CONFIG_MTD_CFI
	global CONFIG_MTD_NORA
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_ARM == 1) && ($CONFIG_MTD_CFI == 1 || $CONFIG_MTD_CFI == 2 || $CONFIG_MTD_CFI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_MTD_CFI]];set CONFIG_MTD_NORA [sync_tristate $CONFIG_MTD_NORA $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu19.config.f.x12 disabled {y}} else {configure_entry .menu19.config.f.x12 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu19.config.f.x12 disabled {m}} else {configure_entry .menu19.config.f.x12 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu19.config.f.x12 normal {m}} else {configure_entry .menu19.config.f.x12 disabled {m}}; configure_entry .menu19.config.f.x12 normal {n l}} else {configure_entry .menu19.config.f.x12 disabled {y n m l}}
	global CONFIG_MTD_ARM_INTEGRATOR
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_ARM == 1) && ($CONFIG_MTD_CFI == 1 || $CONFIG_MTD_CFI == 2 || $CONFIG_MTD_CFI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_MTD_CFI]];set CONFIG_MTD_ARM_INTEGRATOR [sync_tristate $CONFIG_MTD_ARM_INTEGRATOR $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu19.config.f.x13 disabled {y}} else {configure_entry .menu19.config.f.x13 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu19.config.f.x13 disabled {m}} else {configure_entry .menu19.config.f.x13 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu19.config.f.x13 normal {m}} else {configure_entry .menu19.config.f.x13 disabled {m}}; configure_entry .menu19.config.f.x13 normal {n l}} else {configure_entry .menu19.config.f.x13 disabled {y n m l}}
	global CONFIG_ARCH_CDB89712
	global CONFIG_MTD_CDB89712
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_ARM == 1) && ($CONFIG_MTD_CFI == 1 || $CONFIG_MTD_CFI == 2 || $CONFIG_MTD_CFI == 4) && ($CONFIG_ARCH_CDB89712 == 1 || $CONFIG_ARCH_CDB89712 == 2 || $CONFIG_ARCH_CDB89712 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_MTD_CFI $CONFIG_ARCH_CDB89712]];set CONFIG_MTD_CDB89712 [sync_tristate $CONFIG_MTD_CDB89712 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu19.config.f.x14 disabled {y}} else {configure_entry .menu19.config.f.x14 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu19.config.f.x14 disabled {m}} else {configure_entry .menu19.config.f.x14 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu19.config.f.x14 normal {m}} else {configure_entry .menu19.config.f.x14 disabled {m}}; configure_entry .menu19.config.f.x14 normal {n l}} else {configure_entry .menu19.config.f.x14 disabled {y n m l}}
	global CONFIG_ARCH_SA1100
	global CONFIG_MTD_SA1100
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_ARM == 1) && ($CONFIG_MTD_CFI == 1 || $CONFIG_MTD_CFI == 2 || $CONFIG_MTD_CFI == 4) && ($CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_SA1100 == 2 || $CONFIG_ARCH_SA1100 == 4) && ($CONFIG_MTD_PARTITIONS == 1 || $CONFIG_MTD_PARTITIONS == 2 || $CONFIG_MTD_PARTITIONS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_MTD_CFI $CONFIG_ARCH_SA1100 $CONFIG_MTD_PARTITIONS]];set CONFIG_MTD_SA1100 [sync_tristate $CONFIG_MTD_SA1100 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu19.config.f.x15 disabled {y}} else {configure_entry .menu19.config.f.x15 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu19.config.f.x15 disabled {m}} else {configure_entry .menu19.config.f.x15 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu19.config.f.x15 normal {m}} else {configure_entry .menu19.config.f.x15 disabled {m}}; configure_entry .menu19.config.f.x15 normal {n l}} else {configure_entry .menu19.config.f.x15 disabled {y n m l}}
	global CONFIG_ARCH_FOOTBRIDGE
	global CONFIG_MTD_DC21285
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_ARM == 1) && ($CONFIG_MTD_CFI == 1 || $CONFIG_MTD_CFI == 2 || $CONFIG_MTD_CFI == 4) && ($CONFIG_ARCH_FOOTBRIDGE == 1 || $CONFIG_ARCH_FOOTBRIDGE == 2 || $CONFIG_ARCH_FOOTBRIDGE == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_MTD_CFI $CONFIG_ARCH_FOOTBRIDGE]];set CONFIG_MTD_DC21285 [sync_tristate $CONFIG_MTD_DC21285 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu19.config.f.x16 disabled {y}} else {configure_entry .menu19.config.f.x16 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu19.config.f.x16 disabled {m}} else {configure_entry .menu19.config.f.x16 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu19.config.f.x16 normal {m}} else {configure_entry .menu19.config.f.x16 disabled {m}}; configure_entry .menu19.config.f.x16 normal {n l}} else {configure_entry .menu19.config.f.x16 disabled {y n m l}}
	global CONFIG_ARCH_IQ80310
	global CONFIG_MTD_IQ80310
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_ARM == 1) && ($CONFIG_MTD_CFI == 1 || $CONFIG_MTD_CFI == 2 || $CONFIG_MTD_CFI == 4) && ($CONFIG_ARCH_IQ80310 == 1 || $CONFIG_ARCH_IQ80310 == 2 || $CONFIG_ARCH_IQ80310 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_MTD_CFI $CONFIG_ARCH_IQ80310]];set CONFIG_MTD_IQ80310 [sync_tristate $CONFIG_MTD_IQ80310 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu19.config.f.x17 disabled {y}} else {configure_entry .menu19.config.f.x17 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu19.config.f.x17 disabled {m}} else {configure_entry .menu19.config.f.x17 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu19.config.f.x17 normal {m}} else {configure_entry .menu19.config.f.x17 disabled {m}}; configure_entry .menu19.config.f.x17 normal {n l}} else {configure_entry .menu19.config.f.x17 disabled {y n m l}}
	global CONFIG_ARCH_CAMELOT
	global CONFIG_MTD_EPXA10DB
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_ARM == 1) && ($CONFIG_MTD_CFI == 1 || $CONFIG_MTD_CFI == 2 || $CONFIG_MTD_CFI == 4) && ($CONFIG_MTD_PARTITIONS == 1 || $CONFIG_MTD_PARTITIONS == 2 || $CONFIG_MTD_PARTITIONS == 4) && ($CONFIG_ARCH_CAMELOT == 1 || $CONFIG_ARCH_CAMELOT == 2 || $CONFIG_ARCH_CAMELOT == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_MTD_CFI $CONFIG_MTD_PARTITIONS $CONFIG_ARCH_CAMELOT]];set CONFIG_MTD_EPXA10DB [sync_tristate $CONFIG_MTD_EPXA10DB $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu19.config.f.x18 disabled {y}} else {configure_entry .menu19.config.f.x18 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu19.config.f.x18 disabled {m}} else {configure_entry .menu19.config.f.x18 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu19.config.f.x18 normal {m}} else {configure_entry .menu19.config.f.x18 disabled {m}}; configure_entry .menu19.config.f.x18 normal {n l}} else {configure_entry .menu19.config.f.x18 disabled {y n m l}}
	global CONFIG_SA1100_FORTUNET
	global CONFIG_MTD_FORTUNET
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_ARM == 1) && ($CONFIG_MTD_CFI == 1 || $CONFIG_MTD_CFI == 2 || $CONFIG_MTD_CFI == 4) && ($CONFIG_MTD_PARTITIONS == 1 || $CONFIG_MTD_PARTITIONS == 2 || $CONFIG_MTD_PARTITIONS == 4) && ($CONFIG_SA1100_FORTUNET == 1 || $CONFIG_SA1100_FORTUNET == 2 || $CONFIG_SA1100_FORTUNET == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_MTD_CFI $CONFIG_MTD_PARTITIONS $CONFIG_SA1100_FORTUNET]];set CONFIG_MTD_FORTUNET [sync_tristate $CONFIG_MTD_FORTUNET $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu19.config.f.x19 disabled {y}} else {configure_entry .menu19.config.f.x19 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu19.config.f.x19 disabled {m}} else {configure_entry .menu19.config.f.x19 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu19.config.f.x19 normal {m}} else {configure_entry .menu19.config.f.x19 disabled {m}}; configure_entry .menu19.config.f.x19 normal {n l}} else {configure_entry .menu19.config.f.x19 disabled {y n m l}}
	global CONFIG_ARCH_AUTCPU12
	global CONFIG_MTD_AUTCPU12
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_ARM == 1) && ($CONFIG_ARCH_AUTCPU12 == 1 || $CONFIG_ARCH_AUTCPU12 == 2 || $CONFIG_ARCH_AUTCPU12 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ARCH_AUTCPU12]];set CONFIG_MTD_AUTCPU12 [sync_tristate $CONFIG_MTD_AUTCPU12 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu19.config.f.x20 disabled {y}} else {configure_entry .menu19.config.f.x20 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu19.config.f.x20 disabled {m}} else {configure_entry .menu19.config.f.x20 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu19.config.f.x20 normal {m}} else {configure_entry .menu19.config.f.x20 disabled {m}}; configure_entry .menu19.config.f.x20 normal {n l}} else {configure_entry .menu19.config.f.x20 disabled {y n m l}}
	global CONFIG_MTD_IXP425
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_ARM == 1) && ($CONFIG_MTD_CFI == 1 || $CONFIG_MTD_CFI == 2 || $CONFIG_MTD_CFI == 4) && ($CONFIG_MTD_PARTITIONS == 1 || $CONFIG_MTD_PARTITIONS == 2 || $CONFIG_MTD_PARTITIONS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_MTD_CFI $CONFIG_MTD_PARTITIONS]];set CONFIG_MTD_IXP425 [sync_tristate $CONFIG_MTD_IXP425 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu19.config.f.x21 disabled {y}} else {configure_entry .menu19.config.f.x21 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu19.config.f.x21 disabled {m}} else {configure_entry .menu19.config.f.x21 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu19.config.f.x21 normal {m}} else {configure_entry .menu19.config.f.x21 disabled {m}}; configure_entry .menu19.config.f.x21 normal {n l}} else {configure_entry .menu19.config.f.x21 disabled {y n m l}}
	global CONFIG_ARCH_SE4000
	global CONFIG_MTD_SE4000
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_ARM == 1) && ($CONFIG_MTD_CFI == 1 || $CONFIG_MTD_CFI == 2 || $CONFIG_MTD_CFI == 4) && ($CONFIG_ARCH_SE4000 == 1 || $CONFIG_ARCH_SE4000 == 2 || $CONFIG_ARCH_SE4000 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_MTD_CFI $CONFIG_ARCH_SE4000]];set CONFIG_MTD_SE4000 [sync_tristate $CONFIG_MTD_SE4000 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu19.config.f.x22 disabled {y}} else {configure_entry .menu19.config.f.x22 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu19.config.f.x22 disabled {m}} else {configure_entry .menu19.config.f.x22 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu19.config.f.x22 normal {m}} else {configure_entry .menu19.config.f.x22 disabled {m}}; configure_entry .menu19.config.f.x22 normal {n l}} else {configure_entry .menu19.config.f.x22 disabled {y n m l}}
	global CONFIG_MTD_SNAPARM
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_ARM == 1) && ($CONFIG_MTD_CFI == 1 || $CONFIG_MTD_CFI == 2 || $CONFIG_MTD_CFI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_MTD_CFI]];set CONFIG_MTD_SNAPARM [sync_tristate $CONFIG_MTD_SNAPARM $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu19.config.f.x23 disabled {y}} else {configure_entry .menu19.config.f.x23 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu19.config.f.x23 disabled {m}} else {configure_entry .menu19.config.f.x23 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu19.config.f.x23 normal {m}} else {configure_entry .menu19.config.f.x23 disabled {m}}; configure_entry .menu19.config.f.x23 normal {n l}} else {configure_entry .menu19.config.f.x23 disabled {y n m l}}
	global CONFIG_MTD_EDB7312
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_ARM == 1) && ($CONFIG_MTD_CFI == 1 || $CONFIG_MTD_CFI == 2 || $CONFIG_MTD_CFI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_MTD_CFI]];set CONFIG_MTD_EDB7312 [sync_tristate $CONFIG_MTD_EDB7312 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu19.config.f.x24 disabled {y}} else {configure_entry .menu19.config.f.x24 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu19.config.f.x24 disabled {m}} else {configure_entry .menu19.config.f.x24 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu19.config.f.x24 normal {m}} else {configure_entry .menu19.config.f.x24 disabled {m}}; configure_entry .menu19.config.f.x24 normal {n l}} else {configure_entry .menu19.config.f.x24 disabled {y n m l}}
	global CONFIG_MTD_JEDECPROBE
	global CONFIG_MTD_IMPA7
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_ARM == 1) && ($CONFIG_MTD_JEDECPROBE == 1 || $CONFIG_MTD_JEDECPROBE == 2 || $CONFIG_MTD_JEDECPROBE == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_MTD_JEDECPROBE]];set CONFIG_MTD_IMPA7 [sync_tristate $CONFIG_MTD_IMPA7 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu19.config.f.x25 disabled {y}} else {configure_entry .menu19.config.f.x25 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu19.config.f.x25 disabled {m}} else {configure_entry .menu19.config.f.x25 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu19.config.f.x25 normal {m}} else {configure_entry .menu19.config.f.x25 disabled {m}}; configure_entry .menu19.config.f.x25 normal {n l}} else {configure_entry .menu19.config.f.x25 disabled {y n m l}}
	global CONFIG_ARCH_CEIVA
	global CONFIG_MTD_CEIVA
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_ARM == 1) && ($CONFIG_MTD_JEDECPROBE == 1 || $CONFIG_MTD_JEDECPROBE == 2 || $CONFIG_MTD_JEDECPROBE == 4) && ($CONFIG_ARCH_CEIVA == 1 || $CONFIG_ARCH_CEIVA == 2 || $CONFIG_ARCH_CEIVA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_MTD_JEDECPROBE $CONFIG_ARCH_CEIVA]];set CONFIG_MTD_CEIVA [sync_tristate $CONFIG_MTD_CEIVA $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu19.config.f.x26 disabled {y}} else {configure_entry .menu19.config.f.x26 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu19.config.f.x26 disabled {m}} else {configure_entry .menu19.config.f.x26 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu19.config.f.x26 normal {m}} else {configure_entry .menu19.config.f.x26 disabled {m}}; configure_entry .menu19.config.f.x26 normal {n l}} else {configure_entry .menu19.config.f.x26 disabled {y n m l}}
	global CONFIG_M5272C3
	global CONFIG_MTD_M5272C3
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_M5272C3) && ($CONFIG_MTD_CFI == 1 || $CONFIG_MTD_CFI == 2 || $CONFIG_MTD_CFI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_MTD_CFI]];set CONFIG_MTD_M5272C3 [sync_tristate $CONFIG_MTD_M5272C3 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu19.config.f.x27 disabled {y}} else {configure_entry .menu19.config.f.x27 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu19.config.f.x27 disabled {m}} else {configure_entry .menu19.config.f.x27 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu19.config.f.x27 normal {m}} else {configure_entry .menu19.config.f.x27 disabled {m}}; configure_entry .menu19.config.f.x27 normal {n l}} else {configure_entry .menu19.config.f.x27 disabled {y n m l}}
	global CONFIG_PCI
	global CONFIG_MTD_PCI
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2 || $CONFIG_MTD == 4) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_MTD $CONFIG_PCI]];set CONFIG_MTD_PCI [sync_tristate $CONFIG_MTD_PCI $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu19.config.f.x28 disabled {y}} else {configure_entry .menu19.config.f.x28 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu19.config.f.x28 disabled {m}} else {configure_entry .menu19.config.f.x28 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu19.config.f.x28 normal {m}} else {configure_entry .menu19.config.f.x28 disabled {m}}; configure_entry .menu19.config.f.x28 normal {n l}} else {configure_entry .menu19.config.f.x28 disabled {y n m l}}
	global CONFIG_PCMCIA
	global CONFIG_MTD_PCMCIA
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2 || $CONFIG_MTD == 4) && ($CONFIG_PCMCIA == 1 || $CONFIG_PCMCIA == 2 || $CONFIG_PCMCIA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_MTD $CONFIG_PCMCIA]];set CONFIG_MTD_PCMCIA [sync_tristate $CONFIG_MTD_PCMCIA $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu19.config.f.x29 disabled {y}} else {configure_entry .menu19.config.f.x29 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu19.config.f.x29 disabled {m}} else {configure_entry .menu19.config.f.x29 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu19.config.f.x29 normal {m}} else {configure_entry .menu19.config.f.x29 disabled {m}}; configure_entry .menu19.config.f.x29 normal {n l}} else {configure_entry .menu19.config.f.x29 disabled {y n m l}}
}


proc update_define_menu19 {} {
	update_define_mainmenu
	global CONFIG_MODULES
	global CONFIG_ALIGNMENT_TRAP
	global CONFIG_MTD
	global CONFIG_MTD_GEN_PROBE
	global CONFIG_MTD_PHYSMAP
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD_GEN_PROBE == 1 || $CONFIG_MTD_GEN_PROBE == 2 || $CONFIG_MTD_GEN_PROBE == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_MTD_GEN_PROBE]]; set CONFIG_MTD_PHYSMAP [sync_tristate $CONFIG_MTD_PHYSMAP $tmpvar_dep]; set CONFIG_MTD_PHYSMAP [expr $CONFIG_MTD_PHYSMAP&15]}
	global CONFIG_MTD_PHYSMAP_START
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD_PHYSMAP == 1 || $CONFIG_MTD_PHYSMAP == 2)} then {validate_hex CONFIG_MTD_PHYSMAP_START "$CONFIG_MTD_PHYSMAP_START" 0x50000000}
	global CONFIG_MTD_PHYSMAP_LEN
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD_PHYSMAP == 1 || $CONFIG_MTD_PHYSMAP == 2)} then {validate_hex CONFIG_MTD_PHYSMAP_LEN "$CONFIG_MTD_PHYSMAP_LEN" 0x200000}
	global CONFIG_MTD_PHYSMAP_BUSWIDTH
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD_PHYSMAP == 1 || $CONFIG_MTD_PHYSMAP == 2)} then {validate_int CONFIG_MTD_PHYSMAP_BUSWIDTH "$CONFIG_MTD_PHYSMAP_BUSWIDTH" 2}
	global CONFIG_MTD_CFI_INTELEXT
	global CONFIG_MTD_CFI_AMDSTD
	global CONFIG_MTD_PARTITIONS
	global CONFIG_MTD_DRAGONIX
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD_CFI_INTELEXT == 1 || $CONFIG_MTD_CFI_INTELEXT == 2 || $CONFIG_MTD_CFI_INTELEXT == 4) && ($CONFIG_MTD_CFI_AMDSTD == 1 || $CONFIG_MTD_CFI_AMDSTD == 2 || $CONFIG_MTD_CFI_AMDSTD == 4) && ($CONFIG_MTD_PARTITIONS == 1 || $CONFIG_MTD_PARTITIONS == 2 || $CONFIG_MTD_PARTITIONS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_MTD_CFI_INTELEXT $CONFIG_MTD_CFI_AMDSTD $CONFIG_MTD_PARTITIONS]]; set CONFIG_MTD_DRAGONIX [sync_tristate $CONFIG_MTD_DRAGONIX $tmpvar_dep]; set CONFIG_MTD_DRAGONIX [expr $CONFIG_MTD_DRAGONIX&15]}
	global CONFIG_MTD_NETtel
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD_PARTITIONS == 1 || $CONFIG_MTD_PARTITIONS == 2 || $CONFIG_MTD_PARTITIONS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_MTD_PARTITIONS]]; set CONFIG_MTD_NETtel [sync_tristate $CONFIG_MTD_NETtel $tmpvar_dep]; set CONFIG_MTD_NETtel [expr $CONFIG_MTD_NETtel&15]}
	global CONFIG_MTD_SNAPGEODE
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD_PARTITIONS == 1 || $CONFIG_MTD_PARTITIONS == 2 || $CONFIG_MTD_PARTITIONS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_MTD_PARTITIONS]]; set CONFIG_MTD_SNAPGEODE [sync_tristate $CONFIG_MTD_SNAPGEODE $tmpvar_dep]; set CONFIG_MTD_SNAPGEODE [expr $CONFIG_MTD_SNAPGEODE&15]}
	global CONFIG_UCLINUX
	global CONFIG_MTD_NETteluC
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_UCLINUX == 1 || $CONFIG_UCLINUX == 2 || $CONFIG_UCLINUX == 4) && ($CONFIG_MTD_PARTITIONS == 1 || $CONFIG_MTD_PARTITIONS == 2 || $CONFIG_MTD_PARTITIONS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_UCLINUX $CONFIG_MTD_PARTITIONS]]; set CONFIG_MTD_NETteluC [sync_tristate $CONFIG_MTD_NETteluC $tmpvar_dep]; set CONFIG_MTD_NETteluC [expr $CONFIG_MTD_NETteluC&15]}
	global tmpvar_12
	global CONFIG_FLASHAUTO
	if {$tmpvar_12 == "AUTO"} then {set CONFIG_FLASHAUTO 1} else {set CONFIG_FLASHAUTO 0}
	global CONFIG_FLASH128KB
	if {$tmpvar_12 == "128KB"} then {set CONFIG_FLASH128KB 1} else {set CONFIG_FLASH128KB 0}
	global CONFIG_FLASH1MB
	if {$tmpvar_12 == "1MB"} then {set CONFIG_FLASH1MB 1} else {set CONFIG_FLASH1MB 0}
	global CONFIG_FLASH2MB
	if {$tmpvar_12 == "2MB"} then {set CONFIG_FLASH2MB 1} else {set CONFIG_FLASH2MB 0}
	global CONFIG_FLASH4MB
	if {$tmpvar_12 == "4MB"} then {set CONFIG_FLASH4MB 1} else {set CONFIG_FLASH4MB 0}
	global CONFIG_FLASH6MB
	if {$tmpvar_12 == "6MB"} then {set CONFIG_FLASH6MB 1} else {set CONFIG_FLASH6MB 0}
	global CONFIG_FLASH8MB
	if {$tmpvar_12 == "8MB"} then {set CONFIG_FLASH8MB 1} else {set CONFIG_FLASH8MB 0}
	global CONFIG_FLASH16MB
	if {$tmpvar_12 == "16MB"} then {set CONFIG_FLASH16MB 1} else {set CONFIG_FLASH16MB 0}
	global CONFIG_MTD_MBVANILLA
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_UCLINUX == 1 || $CONFIG_UCLINUX == 2 || $CONFIG_UCLINUX == 4) && ($CONFIG_MTD_PARTITIONS == 1 || $CONFIG_MTD_PARTITIONS == 2 || $CONFIG_MTD_PARTITIONS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_UCLINUX $CONFIG_MTD_PARTITIONS]]; set CONFIG_MTD_MBVANILLA [sync_tristate $CONFIG_MTD_MBVANILLA $tmpvar_dep]; set CONFIG_MTD_MBVANILLA [expr $CONFIG_MTD_MBVANILLA&15]}
	global tmpvar_13
	global CONFIG_FLASHAUTO
	if {$tmpvar_13 == "AUTO"} then {set CONFIG_FLASHAUTO 1} else {set CONFIG_FLASHAUTO 0}
	global CONFIG_FLASH128KB
	if {$tmpvar_13 == "128KB"} then {set CONFIG_FLASH128KB 1} else {set CONFIG_FLASH128KB 0}
	global CONFIG_FLASH1MB
	if {$tmpvar_13 == "1MB"} then {set CONFIG_FLASH1MB 1} else {set CONFIG_FLASH1MB 0}
	global CONFIG_FLASH2MB
	if {$tmpvar_13 == "2MB"} then {set CONFIG_FLASH2MB 1} else {set CONFIG_FLASH2MB 0}
	global CONFIG_FLASH4MB
	if {$tmpvar_13 == "4MB"} then {set CONFIG_FLASH4MB 1} else {set CONFIG_FLASH4MB 0}
	global CONFIG_FLASH6MB
	if {$tmpvar_13 == "6MB"} then {set CONFIG_FLASH6MB 1} else {set CONFIG_FLASH6MB 0}
	global CONFIG_FLASH8MB
	if {$tmpvar_13 == "8MB"} then {set CONFIG_FLASH8MB 1} else {set CONFIG_FLASH8MB 0}
	global CONFIG_MTD_KeyTechnology
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_UCLINUX == 1 || $CONFIG_UCLINUX == 2 || $CONFIG_UCLINUX == 4) && ($CONFIG_MTD_PARTITIONS == 1 || $CONFIG_MTD_PARTITIONS == 2 || $CONFIG_MTD_PARTITIONS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_UCLINUX $CONFIG_MTD_PARTITIONS]]; set CONFIG_MTD_KeyTechnology [sync_tristate $CONFIG_MTD_KeyTechnology $tmpvar_dep]; set CONFIG_MTD_KeyTechnology [expr $CONFIG_MTD_KeyTechnology&15]}
	global CONFIG_ARM
	global CONFIG_MTD_CFI
	global CONFIG_MTD_NORA
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_ARM == 1) && ($CONFIG_MTD_CFI == 1 || $CONFIG_MTD_CFI == 2 || $CONFIG_MTD_CFI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_MTD_CFI]]; set CONFIG_MTD_NORA [sync_tristate $CONFIG_MTD_NORA $tmpvar_dep]; set CONFIG_MTD_NORA [expr $CONFIG_MTD_NORA&15]}
	global CONFIG_MTD_ARM_INTEGRATOR
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_ARM == 1) && ($CONFIG_MTD_CFI == 1 || $CONFIG_MTD_CFI == 2 || $CONFIG_MTD_CFI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_MTD_CFI]]; set CONFIG_MTD_ARM_INTEGRATOR [sync_tristate $CONFIG_MTD_ARM_INTEGRATOR $tmpvar_dep]; set CONFIG_MTD_ARM_INTEGRATOR [expr $CONFIG_MTD_ARM_INTEGRATOR&15]}
	global CONFIG_ARCH_CDB89712
	global CONFIG_MTD_CDB89712
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_ARM == 1) && ($CONFIG_MTD_CFI == 1 || $CONFIG_MTD_CFI == 2 || $CONFIG_MTD_CFI == 4) && ($CONFIG_ARCH_CDB89712 == 1 || $CONFIG_ARCH_CDB89712 == 2 || $CONFIG_ARCH_CDB89712 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_MTD_CFI $CONFIG_ARCH_CDB89712]]; set CONFIG_MTD_CDB89712 [sync_tristate $CONFIG_MTD_CDB89712 $tmpvar_dep]; set CONFIG_MTD_CDB89712 [expr $CONFIG_MTD_CDB89712&15]}
	global CONFIG_ARCH_SA1100
	global CONFIG_MTD_SA1100
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_ARM == 1) && ($CONFIG_MTD_CFI == 1 || $CONFIG_MTD_CFI == 2 || $CONFIG_MTD_CFI == 4) && ($CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_SA1100 == 2 || $CONFIG_ARCH_SA1100 == 4) && ($CONFIG_MTD_PARTITIONS == 1 || $CONFIG_MTD_PARTITIONS == 2 || $CONFIG_MTD_PARTITIONS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_MTD_CFI $CONFIG_ARCH_SA1100 $CONFIG_MTD_PARTITIONS]]; set CONFIG_MTD_SA1100 [sync_tristate $CONFIG_MTD_SA1100 $tmpvar_dep]; set CONFIG_MTD_SA1100 [expr $CONFIG_MTD_SA1100&15]}
	global CONFIG_ARCH_FOOTBRIDGE
	global CONFIG_MTD_DC21285
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_ARM == 1) && ($CONFIG_MTD_CFI == 1 || $CONFIG_MTD_CFI == 2 || $CONFIG_MTD_CFI == 4) && ($CONFIG_ARCH_FOOTBRIDGE == 1 || $CONFIG_ARCH_FOOTBRIDGE == 2 || $CONFIG_ARCH_FOOTBRIDGE == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_MTD_CFI $CONFIG_ARCH_FOOTBRIDGE]]; set CONFIG_MTD_DC21285 [sync_tristate $CONFIG_MTD_DC21285 $tmpvar_dep]; set CONFIG_MTD_DC21285 [expr $CONFIG_MTD_DC21285&15]}
	global CONFIG_ARCH_IQ80310
	global CONFIG_MTD_IQ80310
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_ARM == 1) && ($CONFIG_MTD_CFI == 1 || $CONFIG_MTD_CFI == 2 || $CONFIG_MTD_CFI == 4) && ($CONFIG_ARCH_IQ80310 == 1 || $CONFIG_ARCH_IQ80310 == 2 || $CONFIG_ARCH_IQ80310 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_MTD_CFI $CONFIG_ARCH_IQ80310]]; set CONFIG_MTD_IQ80310 [sync_tristate $CONFIG_MTD_IQ80310 $tmpvar_dep]; set CONFIG_MTD_IQ80310 [expr $CONFIG_MTD_IQ80310&15]}
	global CONFIG_ARCH_CAMELOT
	global CONFIG_MTD_EPXA10DB
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_ARM == 1) && ($CONFIG_MTD_CFI == 1 || $CONFIG_MTD_CFI == 2 || $CONFIG_MTD_CFI == 4) && ($CONFIG_MTD_PARTITIONS == 1 || $CONFIG_MTD_PARTITIONS == 2 || $CONFIG_MTD_PARTITIONS == 4) && ($CONFIG_ARCH_CAMELOT == 1 || $CONFIG_ARCH_CAMELOT == 2 || $CONFIG_ARCH_CAMELOT == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_MTD_CFI $CONFIG_MTD_PARTITIONS $CONFIG_ARCH_CAMELOT]]; set CONFIG_MTD_EPXA10DB [sync_tristate $CONFIG_MTD_EPXA10DB $tmpvar_dep]; set CONFIG_MTD_EPXA10DB [expr $CONFIG_MTD_EPXA10DB&15]}
	global CONFIG_SA1100_FORTUNET
	global CONFIG_MTD_FORTUNET
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_ARM == 1) && ($CONFIG_MTD_CFI == 1 || $CONFIG_MTD_CFI == 2 || $CONFIG_MTD_CFI == 4) && ($CONFIG_MTD_PARTITIONS == 1 || $CONFIG_MTD_PARTITIONS == 2 || $CONFIG_MTD_PARTITIONS == 4) && ($CONFIG_SA1100_FORTUNET == 1 || $CONFIG_SA1100_FORTUNET == 2 || $CONFIG_SA1100_FORTUNET == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_MTD_CFI $CONFIG_MTD_PARTITIONS $CONFIG_SA1100_FORTUNET]]; set CONFIG_MTD_FORTUNET [sync_tristate $CONFIG_MTD_FORTUNET $tmpvar_dep]; set CONFIG_MTD_FORTUNET [expr $CONFIG_MTD_FORTUNET&15]}
	global CONFIG_ARCH_AUTCPU12
	global CONFIG_MTD_AUTCPU12
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_ARM == 1) && ($CONFIG_ARCH_AUTCPU12 == 1 || $CONFIG_ARCH_AUTCPU12 == 2 || $CONFIG_ARCH_AUTCPU12 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ARCH_AUTCPU12]]; set CONFIG_MTD_AUTCPU12 [sync_tristate $CONFIG_MTD_AUTCPU12 $tmpvar_dep]; set CONFIG_MTD_AUTCPU12 [expr $CONFIG_MTD_AUTCPU12&15]}
	global CONFIG_MTD_IXP425
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_ARM == 1) && ($CONFIG_MTD_CFI == 1 || $CONFIG_MTD_CFI == 2 || $CONFIG_MTD_CFI == 4) && ($CONFIG_MTD_PARTITIONS == 1 || $CONFIG_MTD_PARTITIONS == 2 || $CONFIG_MTD_PARTITIONS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_MTD_CFI $CONFIG_MTD_PARTITIONS]]; set CONFIG_MTD_IXP425 [sync_tristate $CONFIG_MTD_IXP425 $tmpvar_dep]; set CONFIG_MTD_IXP425 [expr $CONFIG_MTD_IXP425&15]}
	global CONFIG_ARCH_SE4000
	global CONFIG_MTD_SE4000
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_ARM == 1) && ($CONFIG_MTD_CFI == 1 || $CONFIG_MTD_CFI == 2 || $CONFIG_MTD_CFI == 4) && ($CONFIG_ARCH_SE4000 == 1 || $CONFIG_ARCH_SE4000 == 2 || $CONFIG_ARCH_SE4000 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_MTD_CFI $CONFIG_ARCH_SE4000]]; set CONFIG_MTD_SE4000 [sync_tristate $CONFIG_MTD_SE4000 $tmpvar_dep]; set CONFIG_MTD_SE4000 [expr $CONFIG_MTD_SE4000&15]}
	global CONFIG_MTD_SNAPARM
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_ARM == 1) && ($CONFIG_MTD_CFI == 1 || $CONFIG_MTD_CFI == 2 || $CONFIG_MTD_CFI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_MTD_CFI]]; set CONFIG_MTD_SNAPARM [sync_tristate $CONFIG_MTD_SNAPARM $tmpvar_dep]; set CONFIG_MTD_SNAPARM [expr $CONFIG_MTD_SNAPARM&15]}
	global CONFIG_MTD_EDB7312
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_ARM == 1) && ($CONFIG_MTD_CFI == 1 || $CONFIG_MTD_CFI == 2 || $CONFIG_MTD_CFI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_MTD_CFI]]; set CONFIG_MTD_EDB7312 [sync_tristate $CONFIG_MTD_EDB7312 $tmpvar_dep]; set CONFIG_MTD_EDB7312 [expr $CONFIG_MTD_EDB7312&15]}
	global CONFIG_MTD_JEDECPROBE
	global CONFIG_MTD_IMPA7
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_ARM == 1) && ($CONFIG_MTD_JEDECPROBE == 1 || $CONFIG_MTD_JEDECPROBE == 2 || $CONFIG_MTD_JEDECPROBE == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_MTD_JEDECPROBE]]; set CONFIG_MTD_IMPA7 [sync_tristate $CONFIG_MTD_IMPA7 $tmpvar_dep]; set CONFIG_MTD_IMPA7 [expr $CONFIG_MTD_IMPA7&15]}
	global CONFIG_ARCH_CEIVA
	global CONFIG_MTD_CEIVA
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_ARM == 1) && ($CONFIG_MTD_JEDECPROBE == 1 || $CONFIG_MTD_JEDECPROBE == 2 || $CONFIG_MTD_JEDECPROBE == 4) && ($CONFIG_ARCH_CEIVA == 1 || $CONFIG_ARCH_CEIVA == 2 || $CONFIG_ARCH_CEIVA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_MTD_JEDECPROBE $CONFIG_ARCH_CEIVA]]; set CONFIG_MTD_CEIVA [sync_tristate $CONFIG_MTD_CEIVA $tmpvar_dep]; set CONFIG_MTD_CEIVA [expr $CONFIG_MTD_CEIVA&15]}
	global CONFIG_M5272C3
	global CONFIG_MTD_M5272C3
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_M5272C3) && ($CONFIG_MTD_CFI == 1 || $CONFIG_MTD_CFI == 2 || $CONFIG_MTD_CFI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_MTD_CFI]]; set CONFIG_MTD_M5272C3 [sync_tristate $CONFIG_MTD_M5272C3 $tmpvar_dep]; set CONFIG_MTD_M5272C3 [expr $CONFIG_MTD_M5272C3&15]}
	global CONFIG_PCI
	global CONFIG_MTD_PCI
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2 || $CONFIG_MTD == 4) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_MTD $CONFIG_PCI]]; set CONFIG_MTD_PCI [sync_tristate $CONFIG_MTD_PCI $tmpvar_dep]; set CONFIG_MTD_PCI [expr $CONFIG_MTD_PCI&15]}
	global CONFIG_PCMCIA
	global CONFIG_MTD_PCMCIA
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2 || $CONFIG_MTD == 4) && ($CONFIG_PCMCIA == 1 || $CONFIG_PCMCIA == 2 || $CONFIG_PCMCIA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_MTD $CONFIG_PCMCIA]]; set CONFIG_MTD_PCMCIA [sync_tristate $CONFIG_MTD_PCMCIA $tmpvar_dep]; set CONFIG_MTD_PCMCIA [expr $CONFIG_MTD_PCMCIA&15]}
}


proc menu20 {w title} {
	set oldFocus [focus]
	catch {focus .menu17}
	catch {destroy $w; unregister_active 20}
	toplevel $w -class Dialog
	wm withdraw $w
	global active_menus
	set active_menus [lsort -integer [linsert $active_menus end 20]]
	message $w.m -width 400 -aspect 300 -text \
		"Self-contained MTD device drivers"  -relief raised
	pack $w.m -pady 10 -side top -padx 10
	wm title $w "Self-contained MTD device drivers" 

	bind $w <Escape> "catch {focus $oldFocus}; destroy $w; unregister_active 20; break"
	set nextscript "catch {focus $oldFocus}; destroy $w; unregister_active 20; menu21 .menu21 \"$title\""
	frame $w.f
	button $w.f.back -text "OK" \
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 20"
	button $w.f.next -text "Next" -underline 0\
		-width 15 -command $nextscript
	bind all <Alt-n> $nextscript
	button $w.f.prev -text "Prev" -underline 0\
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 20; menu19 .menu19 \"$title\""
	bind $w <Alt-p> "catch {focus $oldFocus}; destroy $w; unregister_active 20; menu19 .menu19 \"$title\";break"
	pack $w.f.back $w.f.next $w.f.prev -side left -expand on
	pack $w.f -pady 10 -side bottom -anchor w -fill x
	frame $w.topline -relief ridge -borderwidth 2 -height 2
	pack $w.topline -side top -fill x

	frame $w.botline -relief ridge -borderwidth 2 -height 2
	pack $w.botline -side bottom -fill x

	frame $w.config
	pack $w.config -fill y -expand on

	scrollbar $w.config.vscroll -command "$w.config.canvas yview"
	pack $w.config.vscroll -side right -fill y

	canvas $w.config.canvas -height 1\
		-relief flat -borderwidth 0 -yscrollcommand "$w.config.vscroll set" \
		-width [expr [winfo screenwidth .] * 1 / 2] 
	frame $w.config.f
	bind $w <Key-Down> "$w.config.canvas yview scroll  1 unit;break;"
	bind $w <Key-Up> "$w.config.canvas yview scroll  -1 unit;break;"
	bind $w <Key-Next> "$w.config.canvas yview scroll  1 page;break;"
	bind $w <Key-Prior> "$w.config.canvas yview scroll  -1 page;break;"
	bind $w <Key-Home> "$w.config.canvas yview moveto 0;break;"
	bind $w <Key-End> "$w.config.canvas yview moveto 1 ;break;"
	pack $w.config.canvas -side right -fill y


	dep_tristate $w.config.f 20 0 "  Ramix PMC551 PCI Mezzanine RAM card support" CONFIG_MTD_PMC551
	bool $w.config.f 20 1 "    PMC551 256M DRAM Bugfix" CONFIG_MTD_PMC551_BUGFIX
	bool $w.config.f 20 2 "    PMC551 Debugging" CONFIG_MTD_PMC551_DEBUG
	dep_tristate $w.config.f 20 3 "  Uncached system RAM" CONFIG_MTD_SLRAM
	dep_tristate $w.config.f 20 4 "  28F160xx flash driver for LART" CONFIG_MTD_LART
	dep_tristate $w.config.f 20 5 "  Test driver using RAM" CONFIG_MTD_MTDRAM
	int $w.config.f 20 6 "MTDRAM device size in KiB" CONFIG_MTDRAM_TOTAL_SIZE
	int $w.config.f 20 7 "MTDRAM erase block size in KiB" CONFIG_MTDRAM_ERASE_SIZE
	hex $w.config.f 20 8 "SRAM Hexadecimal Absolute position or 0" CONFIG_MTDRAM_ABS_POS
	dep_tristate $w.config.f 20 9 "  MTD emulation using block device" CONFIG_MTD_BLKMTD
	comment $w.config.f 20 10 "Disk-On-Chip Device Drivers"
	dep_tristate $w.config.f 20 11 "  M-Systems Disk-On-Chip 1000" CONFIG_MTD_DOC1000
	dep_tristate $w.config.f 20 12 "  M-Systems Disk-On-Chip 2000 and Millennium" CONFIG_MTD_DOC2000
	dep_tristate $w.config.f 20 13 "  M-Systems Disk-On-Chip Millennium-only alternative driver (see help)" CONFIG_MTD_DOC2001
	dep_tristate $w.config.f 20 14 "  M-Systems Disk-On-Chip Millennium Plus driver (see help)" CONFIG_MTD_DOC2001PLUS
	bool $w.config.f 20 15 "    Advanced detection options for DiskOnChip" CONFIG_MTD_DOCPROBE_ADVANCED
	hex $w.config.f 20 16 "    Physical address of DiskOnChip" CONFIG_MTD_DOCPROBE_ADDRESS
	bool $w.config.f 20 17 "    Probe high addresses" CONFIG_MTD_DOCPROBE_HIGH
	bool $w.config.f 20 18 "    Probe for 0x55 0xAA BIOS Extension Signature" CONFIG_MTD_DOCPROBE_55AA



	focus $w
	update_active
	global winx; global winy
	if {[winfo exists .menu17] == 0} then {menu17 .menu17 "Memory Technology Devices (MTD)"}
	set winx [expr [winfo x .menu17]+30]; set winy [expr [winfo y .menu17]+30]
	if {[winfo exists $w]} then {wm geometry $w +$winx+$winy}
	update idletasks
	if {[winfo exists $w]} then  {$w.config.canvas create window 0 0 -anchor nw -window $w.config.f

	$w.config.canvas configure \
		-width [expr [winfo reqwidth $w.config.f] + 1]\
		-scrollregion "-1 -1 [expr [winfo reqwidth $w.config.f] + 1] \
			 [expr [winfo reqheight $w.config.f] + 1]"

	set winy [expr [winfo reqh $w] - [winfo reqh $w.config.canvas]]
	set scry [expr [winfo screenh $w] / 2]
	set maxy [expr [winfo screenh $w] * 3 / 4]
	set canvtotal [expr [winfo reqh $w.config.f] + 2]
	if [expr $winy + $canvtotal < $maxy] {
		$w.config.canvas configure -height $canvtotal
	} else {
		$w.config.canvas configure -height [expr $scry - $winy]
		}
	}
	update idletasks
	if {[winfo exists $w]} then {
	wm maxsize $w [winfo width $w] [winfo screenheight $w]
	wm minsize $w [winfo width $w] 100

	wm deiconify $w
}
}

proc update_menu20 {} {
	global CONFIG_MODULES
	global CONFIG_ALIGNMENT_TRAP
	global CONFIG_MTD
	global CONFIG_PCI
	global CONFIG_MTD_PMC551
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2 || $CONFIG_MTD == 4) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_MTD $CONFIG_PCI]];set CONFIG_MTD_PMC551 [sync_tristate $CONFIG_MTD_PMC551 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu20.config.f.x0 disabled {y}} else {configure_entry .menu20.config.f.x0 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu20.config.f.x0 disabled {m}} else {configure_entry .menu20.config.f.x0 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu20.config.f.x0 normal {m}} else {configure_entry .menu20.config.f.x0 disabled {m}}; configure_entry .menu20.config.f.x0 normal {n l}} else {configure_entry .menu20.config.f.x0 disabled {y n m l}}
	global CONFIG_MTD_PMC551_BUGFIX
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD_PMC551 == 1 || $CONFIG_MTD_PMC551 == 2)} then {
	configure_entry .menu20.config.f.x1 normal {n l y}} else {configure_entry .menu20.config.f.x1 disabled {y n l}}
	global CONFIG_MTD_PMC551_DEBUG
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD_PMC551 == 1 || $CONFIG_MTD_PMC551 == 2)} then {
	configure_entry .menu20.config.f.x2 normal {n l y}} else {configure_entry .menu20.config.f.x2 disabled {y n l}}
	global CONFIG_MTD_SLRAM
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2 || $CONFIG_MTD == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_MTD]];set CONFIG_MTD_SLRAM [sync_tristate $CONFIG_MTD_SLRAM $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu20.config.f.x3 disabled {y}} else {configure_entry .menu20.config.f.x3 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu20.config.f.x3 disabled {m}} else {configure_entry .menu20.config.f.x3 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu20.config.f.x3 normal {m}} else {configure_entry .menu20.config.f.x3 disabled {m}}; configure_entry .menu20.config.f.x3 normal {n l}} else {configure_entry .menu20.config.f.x3 disabled {y n m l}}
	global CONFIG_SA1100_LART
	global CONFIG_MTD_LART
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_SA1100_LART == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2 || $CONFIG_MTD == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_MTD]];set CONFIG_MTD_LART [sync_tristate $CONFIG_MTD_LART $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu20.config.f.x4 disabled {y}} else {configure_entry .menu20.config.f.x4 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu20.config.f.x4 disabled {m}} else {configure_entry .menu20.config.f.x4 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu20.config.f.x4 normal {m}} else {configure_entry .menu20.config.f.x4 disabled {m}}; configure_entry .menu20.config.f.x4 normal {n l}} else {configure_entry .menu20.config.f.x4 disabled {y n m l}}
	global CONFIG_MTD_MTDRAM
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2 || $CONFIG_MTD == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_MTD]];set CONFIG_MTD_MTDRAM [sync_tristate $CONFIG_MTD_MTDRAM $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu20.config.f.x5 disabled {y}} else {configure_entry .menu20.config.f.x5 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu20.config.f.x5 disabled {m}} else {configure_entry .menu20.config.f.x5 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu20.config.f.x5 normal {m}} else {configure_entry .menu20.config.f.x5 disabled {m}}; configure_entry .menu20.config.f.x5 normal {n l}} else {configure_entry .menu20.config.f.x5 disabled {y n m l}}
	global CONFIG_MTDRAM_TOTAL_SIZE
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD_MTDRAM == 1 || $CONFIG_MTD_MTDRAM == 2)} then {.menu20.config.f.x6.x configure -state normal -foreground [ cget .ref -foreground ]; .menu20.config.f.x6.l configure -state normal; } else {.menu20.config.f.x6.x configure -state disabled -foreground [ cget .ref -disabledforeground ]; .menu20.config.f.x6.l configure -state disabled}
	global CONFIG_MTDRAM_ERASE_SIZE
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD_MTDRAM == 1 || $CONFIG_MTD_MTDRAM == 2)} then {.menu20.config.f.x7.x configure -state normal -foreground [ cget .ref -foreground ]; .menu20.config.f.x7.l configure -state normal; } else {.menu20.config.f.x7.x configure -state disabled -foreground [ cget .ref -disabledforeground ]; .menu20.config.f.x7.l configure -state disabled}
	global CONFIG_MTDRAM_ABS_POS
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD_MTDRAM == 1 || $CONFIG_MTD_MTDRAM == 2) && ($CONFIG_MTD_MTDRAM == 1)} then {.menu20.config.f.x8.x configure -state normal -foreground [ cget .ref -foreground ]; .menu20.config.f.x8.l configure -state normal; } else {.menu20.config.f.x8.x configure -state disabled -foreground [ cget .ref -disabledforeground ]; .menu20.config.f.x8.l configure -state disabled}
	global CONFIG_MTD_BLKMTD
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2 || $CONFIG_MTD == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_MTD]];set CONFIG_MTD_BLKMTD [sync_tristate $CONFIG_MTD_BLKMTD $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu20.config.f.x9 disabled {y}} else {configure_entry .menu20.config.f.x9 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu20.config.f.x9 disabled {m}} else {configure_entry .menu20.config.f.x9 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu20.config.f.x9 normal {m}} else {configure_entry .menu20.config.f.x9 disabled {m}}; configure_entry .menu20.config.f.x9 normal {n l}} else {configure_entry .menu20.config.f.x9 disabled {y n m l}}
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2)} then {configure_entry .menu20.config.f.x10 normal {m}} else {configure_entry .menu20.config.f.x10 disabled {m}}
	global CONFIG_MTD_DOC1000
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2 || $CONFIG_MTD == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_MTD]];set CONFIG_MTD_DOC1000 [sync_tristate $CONFIG_MTD_DOC1000 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu20.config.f.x11 disabled {y}} else {configure_entry .menu20.config.f.x11 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu20.config.f.x11 disabled {m}} else {configure_entry .menu20.config.f.x11 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu20.config.f.x11 normal {m}} else {configure_entry .menu20.config.f.x11 disabled {m}}; configure_entry .menu20.config.f.x11 normal {n l}} else {configure_entry .menu20.config.f.x11 disabled {y n m l}}
	global CONFIG_MTD_DOC2000
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2 || $CONFIG_MTD == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_MTD]];set CONFIG_MTD_DOC2000 [sync_tristate $CONFIG_MTD_DOC2000 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu20.config.f.x12 disabled {y}} else {configure_entry .menu20.config.f.x12 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu20.config.f.x12 disabled {m}} else {configure_entry .menu20.config.f.x12 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu20.config.f.x12 normal {m}} else {configure_entry .menu20.config.f.x12 disabled {m}}; configure_entry .menu20.config.f.x12 normal {n l}} else {configure_entry .menu20.config.f.x12 disabled {y n m l}}
	global CONFIG_MTD_DOC2001
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2 || $CONFIG_MTD == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_MTD]];set CONFIG_MTD_DOC2001 [sync_tristate $CONFIG_MTD_DOC2001 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu20.config.f.x13 disabled {y}} else {configure_entry .menu20.config.f.x13 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu20.config.f.x13 disabled {m}} else {configure_entry .menu20.config.f.x13 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu20.config.f.x13 normal {m}} else {configure_entry .menu20.config.f.x13 disabled {m}}; configure_entry .menu20.config.f.x13 normal {n l}} else {configure_entry .menu20.config.f.x13 disabled {y n m l}}
	global CONFIG_MTD_DOC2001PLUS
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2 || $CONFIG_MTD == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_MTD]];set CONFIG_MTD_DOC2001PLUS [sync_tristate $CONFIG_MTD_DOC2001PLUS $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu20.config.f.x14 disabled {y}} else {configure_entry .menu20.config.f.x14 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu20.config.f.x14 disabled {m}} else {configure_entry .menu20.config.f.x14 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu20.config.f.x14 normal {m}} else {configure_entry .menu20.config.f.x14 disabled {m}}; configure_entry .menu20.config.f.x14 normal {n l}} else {configure_entry .menu20.config.f.x14 disabled {y n m l}}
	global CONFIG_MTD_DOCPROBE
	global CONFIG_MTD_DOCPROBE_ADVANCED
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD_DOCPROBE == 1 || $CONFIG_MTD_DOCPROBE == 2)} then {
	configure_entry .menu20.config.f.x15 normal {n l y}} else {configure_entry .menu20.config.f.x15 disabled {y n l}}
	global CONFIG_MTD_DOCPROBE_ADDRESS
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD_DOCPROBE == 1 || $CONFIG_MTD_DOCPROBE == 2) && ($CONFIG_MTD_DOCPROBE_ADVANCED != 0)} then {.menu20.config.f.x16.x configure -state normal -foreground [ cget .ref -foreground ]; .menu20.config.f.x16.l configure -state normal; } else {.menu20.config.f.x16.x configure -state disabled -foreground [ cget .ref -disabledforeground ]; .menu20.config.f.x16.l configure -state disabled}
	global CONFIG_MTD_DOCPROBE_HIGH
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD_DOCPROBE == 1 || $CONFIG_MTD_DOCPROBE == 2) && ($CONFIG_MTD_DOCPROBE_ADVANCED != 0)} then {
	configure_entry .menu20.config.f.x17 normal {n l y}} else {configure_entry .menu20.config.f.x17 disabled {y n l}}
	global CONFIG_MTD_DOCPROBE_55AA
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD_DOCPROBE == 1 || $CONFIG_MTD_DOCPROBE == 2) && ($CONFIG_MTD_DOCPROBE_ADVANCED != 0)} then {
	configure_entry .menu20.config.f.x18 normal {n l y}} else {configure_entry .menu20.config.f.x18 disabled {y n l}}
}


proc update_define_menu20 {} {
	update_define_mainmenu
	global CONFIG_MODULES
	global CONFIG_MTD_DOCPROBE
	global CONFIG_MTD_DOCPROBE_ADDRESS
	global CONFIG_MTD_DOCPROBE_HIGH
	global CONFIG_MTD_DOCPROBE_55AA
	global CONFIG_MTD_PMC551_BUGFIX
set CONFIG_MTD_PMC551_BUGFIX [expr $CONFIG_MTD_PMC551_BUGFIX|16]
	global CONFIG_MTD_PMC551_DEBUG
set CONFIG_MTD_PMC551_DEBUG [expr $CONFIG_MTD_PMC551_DEBUG|16]
	global CONFIG_MTD_DOCPROBE_ADVANCED
set CONFIG_MTD_DOCPROBE_ADVANCED [expr $CONFIG_MTD_DOCPROBE_ADVANCED|16]
set CONFIG_MTD_DOCPROBE_HIGH [expr $CONFIG_MTD_DOCPROBE_HIGH|16]
set CONFIG_MTD_DOCPROBE_55AA [expr $CONFIG_MTD_DOCPROBE_55AA|16]
	global CONFIG_ALIGNMENT_TRAP
	global CONFIG_MTD
	global CONFIG_PCI
	global CONFIG_MTD_PMC551
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2 || $CONFIG_MTD == 4) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_MTD $CONFIG_PCI]]; set CONFIG_MTD_PMC551 [sync_tristate $CONFIG_MTD_PMC551 $tmpvar_dep]; set CONFIG_MTD_PMC551 [expr $CONFIG_MTD_PMC551&15]}
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD_PMC551 == 1 || $CONFIG_MTD_PMC551 == 2)} then {
	set CONFIG_MTD_PMC551_BUGFIX [expr $CONFIG_MTD_PMC551_BUGFIX&15]}
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD_PMC551 == 1 || $CONFIG_MTD_PMC551 == 2)} then {
	set CONFIG_MTD_PMC551_DEBUG [expr $CONFIG_MTD_PMC551_DEBUG&15]}
	global CONFIG_MTD_SLRAM
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2 || $CONFIG_MTD == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_MTD]]; set CONFIG_MTD_SLRAM [sync_tristate $CONFIG_MTD_SLRAM $tmpvar_dep]; set CONFIG_MTD_SLRAM [expr $CONFIG_MTD_SLRAM&15]}
	global CONFIG_SA1100_LART
	global CONFIG_MTD_LART
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_SA1100_LART == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2 || $CONFIG_MTD == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_MTD]]; set CONFIG_MTD_LART [sync_tristate $CONFIG_MTD_LART $tmpvar_dep]; set CONFIG_MTD_LART [expr $CONFIG_MTD_LART&15]}
	global CONFIG_MTD_MTDRAM
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2 || $CONFIG_MTD == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_MTD]]; set CONFIG_MTD_MTDRAM [sync_tristate $CONFIG_MTD_MTDRAM $tmpvar_dep]; set CONFIG_MTD_MTDRAM [expr $CONFIG_MTD_MTDRAM&15]}
	global CONFIG_MTDRAM_TOTAL_SIZE
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD_MTDRAM == 1 || $CONFIG_MTD_MTDRAM == 2)} then {validate_int CONFIG_MTDRAM_TOTAL_SIZE "$CONFIG_MTDRAM_TOTAL_SIZE" 4096}
	global CONFIG_MTDRAM_ERASE_SIZE
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD_MTDRAM == 1 || $CONFIG_MTD_MTDRAM == 2)} then {validate_int CONFIG_MTDRAM_ERASE_SIZE "$CONFIG_MTDRAM_ERASE_SIZE" 128}
	global CONFIG_MTDRAM_ABS_POS
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD_MTDRAM == 1 || $CONFIG_MTD_MTDRAM == 2) && ($CONFIG_MTD_MTDRAM == 1)} then {validate_hex CONFIG_MTDRAM_ABS_POS "$CONFIG_MTDRAM_ABS_POS" 0}
	global CONFIG_MTD_BLKMTD
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2 || $CONFIG_MTD == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_MTD]]; set CONFIG_MTD_BLKMTD [sync_tristate $CONFIG_MTD_BLKMTD $tmpvar_dep]; set CONFIG_MTD_BLKMTD [expr $CONFIG_MTD_BLKMTD&15]}
	global CONFIG_MTD_DOC1000
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2 || $CONFIG_MTD == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_MTD]]; set CONFIG_MTD_DOC1000 [sync_tristate $CONFIG_MTD_DOC1000 $tmpvar_dep]; set CONFIG_MTD_DOC1000 [expr $CONFIG_MTD_DOC1000&15]}
	global CONFIG_MTD_DOC2000
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2 || $CONFIG_MTD == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_MTD]]; set CONFIG_MTD_DOC2000 [sync_tristate $CONFIG_MTD_DOC2000 $tmpvar_dep]; set CONFIG_MTD_DOC2000 [expr $CONFIG_MTD_DOC2000&15]}
	global CONFIG_MTD_DOC2001
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2 || $CONFIG_MTD == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_MTD]]; set CONFIG_MTD_DOC2001 [sync_tristate $CONFIG_MTD_DOC2001 $tmpvar_dep]; set CONFIG_MTD_DOC2001 [expr $CONFIG_MTD_DOC2001&15]}
	global CONFIG_MTD_DOC2001PLUS
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2 || $CONFIG_MTD == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_MTD]]; set CONFIG_MTD_DOC2001PLUS [sync_tristate $CONFIG_MTD_DOC2001PLUS $tmpvar_dep]; set CONFIG_MTD_DOC2001PLUS [expr $CONFIG_MTD_DOC2001PLUS&15]}
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD_DOC2001PLUS == 1 || $CONFIG_MTD_DOC2001 == 1 || $CONFIG_MTD_DOC2000 == 1)} then {	global CONSTANT_Y
set CONFIG_MTD_DOCPROBE $CONSTANT_Y }
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD_DOC2001PLUS != 1 && $CONFIG_MTD_DOC2001 != 1 && $CONFIG_MTD_DOC2000 != 1) && ($CONFIG_MTD_DOC2001PLUS == 2 || $CONFIG_MTD_DOC2001 == 2 || $CONFIG_MTD_DOC2000 == 2)} then {	global CONSTANT_M
set CONFIG_MTD_DOCPROBE $CONSTANT_M }
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD_DOC2001PLUS != 1 && $CONFIG_MTD_DOC2001 != 1 && $CONFIG_MTD_DOC2000 != 1) && ($CONFIG_MTD_DOC2001PLUS != 2 && $CONFIG_MTD_DOC2001 != 2 && $CONFIG_MTD_DOC2000 != 2)} then {	global CONSTANT_N
set CONFIG_MTD_DOCPROBE $CONSTANT_N }
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD_DOCPROBE == 1 || $CONFIG_MTD_DOCPROBE == 2)} then {
	set CONFIG_MTD_DOCPROBE_ADVANCED [expr $CONFIG_MTD_DOCPROBE_ADVANCED&15]}
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD_DOCPROBE == 1 || $CONFIG_MTD_DOCPROBE == 2) && ($CONFIG_MTD_DOCPROBE_ADVANCED == 0)} then {set CONFIG_MTD_DOCPROBE_ADDRESS 0 }
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD_DOCPROBE == 1 || $CONFIG_MTD_DOCPROBE == 2) && ($CONFIG_MTD_DOCPROBE_ADVANCED == 0)} then {	global CONSTANT_N
set CONFIG_MTD_DOCPROBE_HIGH $CONSTANT_N }
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD_DOCPROBE == 1 || $CONFIG_MTD_DOCPROBE == 2) && ($CONFIG_MTD_DOCPROBE_ADVANCED == 0)} then {	global CONSTANT_N
set CONFIG_MTD_DOCPROBE_55AA $CONSTANT_N }
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD_DOCPROBE == 1 || $CONFIG_MTD_DOCPROBE == 2) && ($CONFIG_MTD_DOCPROBE_ADVANCED != 0)} then {validate_hex CONFIG_MTD_DOCPROBE_ADDRESS "$CONFIG_MTD_DOCPROBE_ADDRESS" 0x0000}
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD_DOCPROBE == 1 || $CONFIG_MTD_DOCPROBE == 2) && ($CONFIG_MTD_DOCPROBE_ADVANCED != 0)} then {
	set CONFIG_MTD_DOCPROBE_HIGH [expr $CONFIG_MTD_DOCPROBE_HIGH&15]}
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD_DOCPROBE == 1 || $CONFIG_MTD_DOCPROBE == 2) && ($CONFIG_MTD_DOCPROBE_ADVANCED != 0)} then {
	set CONFIG_MTD_DOCPROBE_55AA [expr $CONFIG_MTD_DOCPROBE_55AA&15]}
}


proc menu21 {w title} {
	set oldFocus [focus]
	catch {focus .menu17}
	catch {destroy $w; unregister_active 21}
	toplevel $w -class Dialog
	wm withdraw $w
	global active_menus
	set active_menus [lsort -integer [linsert $active_menus end 21]]
	message $w.m -width 400 -aspect 300 -text \
		"NAND Flash Device Drivers"  -relief raised
	pack $w.m -pady 10 -side top -padx 10
	wm title $w "NAND Flash Device Drivers" 

	bind $w <Escape> "catch {focus $oldFocus}; destroy $w; unregister_active 21; break"
	set nextscript "catch {focus $oldFocus}; destroy $w; unregister_active 21; catch {destroy .menu17}; unregister_active 17; menu22 .menu22 \"$title\""
	frame $w.f
	button $w.f.back -text "OK" \
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 21"
	button $w.f.next -text "Next" -underline 0\
		-width 15 -command $nextscript
	bind all <Alt-n> $nextscript
	button $w.f.prev -text "Prev" -underline 0\
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 21; menu20 .menu20 \"$title\""
	bind $w <Alt-p> "catch {focus $oldFocus}; destroy $w; unregister_active 21; menu20 .menu20 \"$title\";break"
	pack $w.f.back $w.f.next $w.f.prev -side left -expand on
	pack $w.f -pady 10 -side bottom -anchor w -fill x
	frame $w.topline -relief ridge -borderwidth 2 -height 2
	pack $w.topline -side top -fill x

	frame $w.botline -relief ridge -borderwidth 2 -height 2
	pack $w.botline -side bottom -fill x

	frame $w.config
	pack $w.config -fill y -expand on

	scrollbar $w.config.vscroll -command "$w.config.canvas yview"
	pack $w.config.vscroll -side right -fill y

	canvas $w.config.canvas -height 1\
		-relief flat -borderwidth 0 -yscrollcommand "$w.config.vscroll set" \
		-width [expr [winfo screenwidth .] * 1 / 2] 
	frame $w.config.f
	bind $w <Key-Down> "$w.config.canvas yview scroll  1 unit;break;"
	bind $w <Key-Up> "$w.config.canvas yview scroll  -1 unit;break;"
	bind $w <Key-Next> "$w.config.canvas yview scroll  1 page;break;"
	bind $w <Key-Prior> "$w.config.canvas yview scroll  -1 page;break;"
	bind $w <Key-Home> "$w.config.canvas yview moveto 0;break;"
	bind $w <Key-End> "$w.config.canvas yview moveto 1 ;break;"
	pack $w.config.canvas -side right -fill y


	dep_tristate $w.config.f 21 0 "  NAND Device Support" CONFIG_MTD_NAND
	bool $w.config.f 21 1 "    Verify NAND page writes" CONFIG_MTD_NAND_VERIFY_WRITE
	dep_tristate $w.config.f 21 2 "  NAND Flash device on SPIA board" CONFIG_MTD_NAND_SPIA
	dep_tristate $w.config.f 21 3 " SmartMedia Card on AUTCPU12 board" CONFIG_MTD_NAND_AUTCPU12



	focus $w
	update_active
	global winx; global winy
	if {[winfo exists .menu17] == 0} then {menu17 .menu17 "Memory Technology Devices (MTD)"}
	set winx [expr [winfo x .menu17]+30]; set winy [expr [winfo y .menu17]+30]
	if {[winfo exists $w]} then {wm geometry $w +$winx+$winy}
	update idletasks
	if {[winfo exists $w]} then  {$w.config.canvas create window 0 0 -anchor nw -window $w.config.f

	$w.config.canvas configure \
		-width [expr [winfo reqwidth $w.config.f] + 1]\
		-scrollregion "-1 -1 [expr [winfo reqwidth $w.config.f] + 1] \
			 [expr [winfo reqheight $w.config.f] + 1]"

	set winy [expr [winfo reqh $w] - [winfo reqh $w.config.canvas]]
	set scry [expr [winfo screenh $w] / 2]
	set maxy [expr [winfo screenh $w] * 3 / 4]
	set canvtotal [expr [winfo reqh $w.config.f] + 2]
	if [expr $winy + $canvtotal < $maxy] {
		$w.config.canvas configure -height $canvtotal
	} else {
		$w.config.canvas configure -height [expr $scry - $winy]
		}
	}
	update idletasks
	if {[winfo exists $w]} then {
	wm maxsize $w [winfo width $w] [winfo screenheight $w]
	wm minsize $w [winfo width $w] 100

	wm deiconify $w
}
}

proc update_menu21 {} {
	global CONFIG_MODULES
	global CONFIG_ALIGNMENT_TRAP
	global CONFIG_MTD
	global CONFIG_MTD_NAND
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2 || $CONFIG_MTD == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_MTD]];set CONFIG_MTD_NAND [sync_tristate $CONFIG_MTD_NAND $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu21.config.f.x0 disabled {y}} else {configure_entry .menu21.config.f.x0 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu21.config.f.x0 disabled {m}} else {configure_entry .menu21.config.f.x0 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu21.config.f.x0 normal {m}} else {configure_entry .menu21.config.f.x0 disabled {m}}; configure_entry .menu21.config.f.x0 normal {n l}} else {configure_entry .menu21.config.f.x0 disabled {y n m l}}
	global CONFIG_MTD_NAND_VERIFY_WRITE
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD_NAND == 1 || $CONFIG_MTD_NAND == 2)} then {
	configure_entry .menu21.config.f.x1 normal {n l y}} else {configure_entry .menu21.config.f.x1 disabled {y n l}}
	global CONFIG_ARM
	global CONFIG_ARCH_P720T
	global CONFIG_MTD_NAND_SPIA
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_ARM == 1 && $CONFIG_ARCH_P720T == 1) && ($CONFIG_MTD_NAND == 1 || $CONFIG_MTD_NAND == 2 || $CONFIG_MTD_NAND == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_MTD_NAND]];set CONFIG_MTD_NAND_SPIA [sync_tristate $CONFIG_MTD_NAND_SPIA $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu21.config.f.x2 disabled {y}} else {configure_entry .menu21.config.f.x2 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu21.config.f.x2 disabled {m}} else {configure_entry .menu21.config.f.x2 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu21.config.f.x2 normal {m}} else {configure_entry .menu21.config.f.x2 disabled {m}}; configure_entry .menu21.config.f.x2 normal {n l}} else {configure_entry .menu21.config.f.x2 disabled {y n m l}}
	global CONFIG_ARCH_AUTCPU12
	global CONFIG_MTD_NAND_AUTCPU12
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_ARCH_AUTCPU12 == 1) && ($CONFIG_MTD_NAND == 1 || $CONFIG_MTD_NAND == 2 || $CONFIG_MTD_NAND == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_MTD_NAND]];set CONFIG_MTD_NAND_AUTCPU12 [sync_tristate $CONFIG_MTD_NAND_AUTCPU12 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu21.config.f.x3 disabled {y}} else {configure_entry .menu21.config.f.x3 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu21.config.f.x3 disabled {m}} else {configure_entry .menu21.config.f.x3 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu21.config.f.x3 normal {m}} else {configure_entry .menu21.config.f.x3 disabled {m}}; configure_entry .menu21.config.f.x3 normal {n l}} else {configure_entry .menu21.config.f.x3 disabled {y n m l}}
}


proc update_define_menu21 {} {
	update_define_mainmenu
	global CONFIG_MODULES
	global CONFIG_MTD_NAND_IDS
	global CONFIG_MTD_NAND_VERIFY_WRITE
set CONFIG_MTD_NAND_VERIFY_WRITE [expr $CONFIG_MTD_NAND_VERIFY_WRITE|16]
	global CONFIG_ALIGNMENT_TRAP
	global CONFIG_MTD
	global CONFIG_MTD_NAND
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2 || $CONFIG_MTD == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_MTD]]; set CONFIG_MTD_NAND [sync_tristate $CONFIG_MTD_NAND $tmpvar_dep]; set CONFIG_MTD_NAND [expr $CONFIG_MTD_NAND&15]}
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD_NAND == 1 || $CONFIG_MTD_NAND == 2)} then {
	set CONFIG_MTD_NAND_VERIFY_WRITE [expr $CONFIG_MTD_NAND_VERIFY_WRITE&15]}
	global CONFIG_ARM
	global CONFIG_ARCH_P720T
	global CONFIG_MTD_NAND_SPIA
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_ARM == 1 && $CONFIG_ARCH_P720T == 1) && ($CONFIG_MTD_NAND == 1 || $CONFIG_MTD_NAND == 2 || $CONFIG_MTD_NAND == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_MTD_NAND]]; set CONFIG_MTD_NAND_SPIA [sync_tristate $CONFIG_MTD_NAND_SPIA $tmpvar_dep]; set CONFIG_MTD_NAND_SPIA [expr $CONFIG_MTD_NAND_SPIA&15]}
	global CONFIG_ARCH_AUTCPU12
	global CONFIG_MTD_NAND_AUTCPU12
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_ARCH_AUTCPU12 == 1) && ($CONFIG_MTD_NAND == 1 || $CONFIG_MTD_NAND == 2 || $CONFIG_MTD_NAND == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_MTD_NAND]]; set CONFIG_MTD_NAND_AUTCPU12 [sync_tristate $CONFIG_MTD_NAND_AUTCPU12 $tmpvar_dep]; set CONFIG_MTD_NAND_AUTCPU12 [expr $CONFIG_MTD_NAND_AUTCPU12&15]}
	global CONFIG_MTD_DOC2001
	global CONFIG_MTD_DOC2000
	global CONFIG_MTD_DOC2001PLUS
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD_DOC2001 == 1 || $CONFIG_MTD_DOC2000 == 1 || $CONFIG_MTD_DOC2001PLUS == 1 || $CONFIG_MTD_NAND == 1)} then {	global CONSTANT_Y
set CONFIG_MTD_NAND_IDS $CONSTANT_Y }
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD_NAND_IDS != 1) && ($CONFIG_MTD_DOC2001PLUS == 2 || $CONFIG_MTD_DOC2001 == 2 || $CONFIG_MTD_DOC2000 == 2 || $CONFIG_MTD_NAND == 2)} then {	global CONSTANT_M
set CONFIG_MTD_NAND_IDS $CONSTANT_M }
}


menu_option menu22 22 "Plug and Play configuration"
proc menu22 {w title} {
	set oldFocus [focus]
	catch {destroy $w; unregister_active 22}
	toplevel $w -class Dialog
	wm withdraw $w
	global active_menus
	set active_menus [lsort -integer [linsert $active_menus end 22]]
	message $w.m -width 400 -aspect 300 -text \
		"Plug and Play configuration"  -relief raised
	pack $w.m -pady 10 -side top -padx 10
	wm title $w "Plug and Play configuration" 

	bind $w <Escape> "catch {focus $oldFocus}; destroy $w; unregister_active 22; break"
	set nextscript "catch {focus $oldFocus}; destroy $w; unregister_active 22; menu23 .menu23 \"$title\""
	frame $w.f
	button $w.f.back -text "Main Menu" \
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 22"
	button $w.f.next -text "Next" -underline 0\
		-width 15 -command $nextscript
	bind all <Alt-n> $nextscript
	button $w.f.prev -text "Prev" -underline 0\
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 22; menu21 .menu21 \"$title\""
	bind $w <Alt-p> "catch {focus $oldFocus}; destroy $w; unregister_active 22; menu21 .menu21 \"$title\";break"
	pack $w.f.back $w.f.next $w.f.prev -side left -expand on
	pack $w.f -pady 10 -side bottom -anchor w -fill x
	frame $w.topline -relief ridge -borderwidth 2 -height 2
	pack $w.topline -side top -fill x

	frame $w.botline -relief ridge -borderwidth 2 -height 2
	pack $w.botline -side bottom -fill x

	frame $w.config
	pack $w.config -fill y -expand on

	scrollbar $w.config.vscroll -command "$w.config.canvas yview"
	pack $w.config.vscroll -side right -fill y

	canvas $w.config.canvas -height 1\
		-relief flat -borderwidth 0 -yscrollcommand "$w.config.vscroll set" \
		-width [expr [winfo screenwidth .] * 1 / 2] 
	frame $w.config.f
	bind $w <Key-Down> "$w.config.canvas yview scroll  1 unit;break;"
	bind $w <Key-Up> "$w.config.canvas yview scroll  -1 unit;break;"
	bind $w <Key-Next> "$w.config.canvas yview scroll  1 page;break;"
	bind $w <Key-Prior> "$w.config.canvas yview scroll  -1 page;break;"
	bind $w <Key-Home> "$w.config.canvas yview moveto 0;break;"
	bind $w <Key-End> "$w.config.canvas yview moveto 1 ;break;"
	pack $w.config.canvas -side right -fill y


	tristate $w.config.f 22 0 "Plug and Play support" CONFIG_PNP
	dep_tristate $w.config.f 22 1 "  ISA Plug and Play support" CONFIG_ISAPNP



	focus $w
	update_active
	global winx; global winy
	set winx [expr [winfo x .]+30]; set winy [expr [winfo y .]+30]
	if {[winfo exists $w]} then {wm geometry $w +$winx+$winy}
	update idletasks
	if {[winfo exists $w]} then  {$w.config.canvas create window 0 0 -anchor nw -window $w.config.f

	$w.config.canvas configure \
		-width [expr [winfo reqwidth $w.config.f] + 1]\
		-scrollregion "-1 -1 [expr [winfo reqwidth $w.config.f] + 1] \
			 [expr [winfo reqheight $w.config.f] + 1]"

	set winy [expr [winfo reqh $w] - [winfo reqh $w.config.canvas]]
	set scry [expr [winfo screenh $w] / 2]
	set maxy [expr [winfo screenh $w] * 3 / 4]
	set canvtotal [expr [winfo reqh $w.config.f] + 2]
	if [expr $winy + $canvtotal < $maxy] {
		$w.config.canvas configure -height $canvtotal
	} else {
		$w.config.canvas configure -height [expr $scry - $winy]
		}
	}
	update idletasks
	if {[winfo exists $w]} then {
	wm maxsize $w [winfo width $w] [winfo screenheight $w]
	wm minsize $w [winfo width $w] 100

	wm deiconify $w
}
}

proc update_menu22 {} {
	global CONFIG_PNP
	global CONFIG_MODULES

	if {($CONFIG_MODULES == 1)} then {configure_entry .menu22.config.f.x0 normal {m}} else {configure_entry .menu22.config.f.x0 disabled {m}}
	global CONFIG_ISAPNP
	if {($CONFIG_PNP == 1 || $CONFIG_PNP == 2 || $CONFIG_PNP == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PNP]];set CONFIG_ISAPNP [sync_tristate $CONFIG_ISAPNP $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu22.config.f.x1 disabled {y}} else {configure_entry .menu22.config.f.x1 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu22.config.f.x1 disabled {m}} else {configure_entry .menu22.config.f.x1 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu22.config.f.x1 normal {m}} else {configure_entry .menu22.config.f.x1 disabled {m}}; configure_entry .menu22.config.f.x1 normal {n l}} else {configure_entry .menu22.config.f.x1 disabled {y n m l}}
}


proc update_define_menu22 {} {
	update_define_mainmenu
	global CONFIG_MODULES
	global CONFIG_PNP

	if {($CONFIG_MODULES == 0)} then {if {($CONFIG_PNP == 2)} then {set CONFIG_PNP 1}}
	global CONFIG_ISAPNP
	if {($CONFIG_PNP == 1 || $CONFIG_PNP == 2 || $CONFIG_PNP == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PNP]]; set CONFIG_ISAPNP [sync_tristate $CONFIG_ISAPNP $tmpvar_dep]; set CONFIG_ISAPNP [expr $CONFIG_ISAPNP&15]}
}


menu_option menu23 23 "Block devices"
proc menu23 {w title} {
	set oldFocus [focus]
	catch {destroy $w; unregister_active 23}
	toplevel $w -class Dialog
	wm withdraw $w
	global active_menus
	set active_menus [lsort -integer [linsert $active_menus end 23]]
	message $w.m -width 400 -aspect 300 -text \
		"Block devices"  -relief raised
	pack $w.m -pady 10 -side top -padx 10
	wm title $w "Block devices" 

	bind $w <Escape> "catch {focus $oldFocus}; destroy $w; unregister_active 23; break"
	set nextscript "catch {focus $oldFocus}; destroy $w; unregister_active 23; menu24 .menu24 \"$title\""
	frame $w.f
	button $w.f.back -text "Main Menu" \
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 23"
	button $w.f.next -text "Next" -underline 0\
		-width 15 -command $nextscript
	bind all <Alt-n> $nextscript
	button $w.f.prev -text "Prev" -underline 0\
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 23; menu22 .menu22 \"$title\""
	bind $w <Alt-p> "catch {focus $oldFocus}; destroy $w; unregister_active 23; menu22 .menu22 \"$title\";break"
	pack $w.f.back $w.f.next $w.f.prev -side left -expand on
	pack $w.f -pady 10 -side bottom -anchor w -fill x
	frame $w.topline -relief ridge -borderwidth 2 -height 2
	pack $w.topline -side top -fill x

	frame $w.botline -relief ridge -borderwidth 2 -height 2
	pack $w.botline -side bottom -fill x

	frame $w.config
	pack $w.config -fill y -expand on

	scrollbar $w.config.vscroll -command "$w.config.canvas yview"
	pack $w.config.vscroll -side right -fill y

	canvas $w.config.canvas -height 1\
		-relief flat -borderwidth 0 -yscrollcommand "$w.config.vscroll set" \
		-width [expr [winfo screenwidth .] * 1 / 2] 
	frame $w.config.f
	bind $w <Key-Down> "$w.config.canvas yview scroll  1 unit;break;"
	bind $w <Key-Up> "$w.config.canvas yview scroll  -1 unit;break;"
	bind $w <Key-Next> "$w.config.canvas yview scroll  1 page;break;"
	bind $w <Key-Prior> "$w.config.canvas yview scroll  -1 page;break;"
	bind $w <Key-Home> "$w.config.canvas yview moveto 0;break;"
	bind $w <Key-End> "$w.config.canvas yview moveto 1 ;break;"
	pack $w.config.canvas -side right -fill y


	tristate $w.config.f 23 0 "Normal floppy disk support" CONFIG_BLK_DEV_FD
	tristate $w.config.f 23 1 "PS/2 ESDI hard disk support" CONFIG_BLK_DEV_PS2
	dep_tristate $w.config.f 23 2 "XT hard disk support" CONFIG_BLK_DEV_XD
	dep_tristate $w.config.f 23 3 "Parallel port IDE device support" CONFIG_PARIDE
	comment $w.config.f 23 4 "Parallel IDE high-level drivers"
	dep_tristate $w.config.f 23 5 "  Parallel port IDE disks" CONFIG_PARIDE_PD
	dep_tristate $w.config.f 23 6 "  Parallel port ATAPI CD-ROMs" CONFIG_PARIDE_PCD
	dep_tristate $w.config.f 23 7 "  Parallel port ATAPI disks" CONFIG_PARIDE_PF
	dep_tristate $w.config.f 23 8 "  Parallel port ATAPI tapes" CONFIG_PARIDE_PT
	dep_tristate $w.config.f 23 9 "  Parallel port generic ATAPI devices" CONFIG_PARIDE_PG
	comment $w.config.f 23 10 "Parallel IDE protocol modules"
	dep_tristate $w.config.f 23 11 "    ATEN EH-100 protocol" CONFIG_PARIDE_ATEN
	dep_tristate $w.config.f 23 12 "    MicroSolutions backpack (Series 5) protocol" CONFIG_PARIDE_BPCK
	dep_tristate $w.config.f 23 13 "    MicroSolutions backpack (Series 6) protocol" CONFIG_PARIDE_BPCK6
	dep_tristate $w.config.f 23 14 "    DataStor Commuter protocol" CONFIG_PARIDE_COMM
	dep_tristate $w.config.f 23 15 "    DataStor EP-2000 protocol" CONFIG_PARIDE_DSTR
	dep_tristate $w.config.f 23 16 "    FIT TD-2000 protocol" CONFIG_PARIDE_FIT2
	dep_tristate $w.config.f 23 17 "    FIT TD-3000 protocol" CONFIG_PARIDE_FIT3
	dep_tristate $w.config.f 23 18 "    Shuttle EPAT/EPEZ protocol" CONFIG_PARIDE_EPAT
	bool $w.config.f 23 19 "     Support c7/c8 chips (EXPERIMENTAL)" CONFIG_PARIDE_EPATC8
	dep_tristate $w.config.f 23 20 "    Shuttle EPIA protocol" CONFIG_PARIDE_EPIA
	dep_tristate $w.config.f 23 21 "    Freecom IQ ASIC-2 protocol" CONFIG_PARIDE_FRIQ
	dep_tristate $w.config.f 23 22 "    FreeCom power protocol" CONFIG_PARIDE_FRPW
	dep_tristate $w.config.f 23 23 "    KingByte KBIC-951A/971A protocols" CONFIG_PARIDE_KBIC
	dep_tristate $w.config.f 23 24 "    KT PHd protocol" CONFIG_PARIDE_KTTI
	dep_tristate $w.config.f 23 25 "    OnSpec 90c20 protocol" CONFIG_PARIDE_ON20
	dep_tristate $w.config.f 23 26 "    OnSpec 90c26 protocol" CONFIG_PARIDE_ON26
	dep_tristate $w.config.f 23 27 "Compaq SMART2 support" CONFIG_BLK_CPQ_DA
	dep_tristate $w.config.f 23 28 "Compaq Smart Array 5xxx support" CONFIG_BLK_CPQ_CISS_DA
	dep_bool $w.config.f 23 29 "       SCSI tape drive support for Smart Array 5xxx" CONFIG_CISS_SCSI_TAPE
	dep_bool $w.config.f 23 30 "       Enable monitor thread" CONFIG_CISS_MONITOR_THREAD
	dep_tristate $w.config.f 23 31 "Mylex DAC960/DAC1100 PCI RAID Controller support" CONFIG_BLK_DEV_DAC960
	dep_tristate $w.config.f 23 32 "Micro Memory MM5415 Battery Backed RAM support (EXPERIMENTAL)" CONFIG_BLK_DEV_UMEM
	tristate $w.config.f 23 33 "Loopback device support" CONFIG_BLK_DEV_LOOP
	dep_tristate $w.config.f 23 34 "Network block device support" CONFIG_BLK_DEV_NBD
	tristate $w.config.f 23 35 "RAM disk support" CONFIG_BLK_DEV_RAM
	int $w.config.f 23 36 "  Default RAM disk size" CONFIG_BLK_DEV_RAM_SIZE
	dep_bool $w.config.f 23 37 "  Initial RAM disk (initrd) support" CONFIG_BLK_DEV_INITRD
	dep_bool $w.config.f 23 38 "  RAM disk data block compiled in" CONFIG_BLK_DEV_RAMDISK_DATA
	tristate $w.config.f 23 39 "ROM disk memory block device (blkmem)" CONFIG_BLK_DEV_BLKMEM
	global tmpvar_14
	minimenu $w.config.f 23 40 "  FLASH type" tmpvar_14 CONFIG_NOFLASH
	menu $w.config.f.x40.x.menu -tearoffcommand "menutitle \"  FLASH type\""
	$w.config.f.x40.x.menu add radiobutton -label "NONE" -variable tmpvar_14 -value "NONE" -command "update_active"
	$w.config.f.x40.x.menu add radiobutton -label "AMD" -variable tmpvar_14 -value "AMD" -command "update_active"
	$w.config.f.x40.x.menu add radiobutton -label "INTEL" -variable tmpvar_14 -value "INTEL" -command "update_active"
	menusplit $w $w.config.f.x40.x.menu 3
	global tmpvar_15
	minimenu $w.config.f 23 41 "  FLASH size" tmpvar_15 CONFIG_FLASHAUTO
	menu $w.config.f.x41.x.menu -tearoffcommand "menutitle \"  FLASH size\""
	$w.config.f.x41.x.menu add radiobutton -label "AUTO" -variable tmpvar_15 -value "AUTO" -command "update_active"
	$w.config.f.x41.x.menu add radiobutton -label "128KB" -variable tmpvar_15 -value "128KB" -command "update_active"
	$w.config.f.x41.x.menu add radiobutton -label "1MB" -variable tmpvar_15 -value "1MB" -command "update_active"
	$w.config.f.x41.x.menu add radiobutton -label "2MB" -variable tmpvar_15 -value "2MB" -command "update_active"
	$w.config.f.x41.x.menu add radiobutton -label "4MB" -variable tmpvar_15 -value "4MB" -command "update_active"
	$w.config.f.x41.x.menu add radiobutton -label "6MB" -variable tmpvar_15 -value "6MB" -command "update_active"
	$w.config.f.x41.x.menu add radiobutton -label "8MB" -variable tmpvar_15 -value "8MB" -command "update_active"
	$w.config.f.x41.x.menu add radiobutton -label "16MB" -variable tmpvar_15 -value "16MB" -command "update_active"
	menusplit $w $w.config.f.x41.x.menu 8
	global tmpvar_16
	minimenu $w.config.f 23 42 "  FLASH bit width" tmpvar_16 CONFIG_FLASHAUTOBIT
	menu $w.config.f.x42.x.menu -tearoffcommand "menutitle \"  FLASH bit width\""
	$w.config.f.x42.x.menu add radiobutton -label "AUTO" -variable tmpvar_16 -value "AUTO" -command "update_active"
	$w.config.f.x42.x.menu add radiobutton -label "8bit" -variable tmpvar_16 -value "8bit" -command "update_active"
	$w.config.f.x42.x.menu add radiobutton -label "16bit" -variable tmpvar_16 -value "16bit" -command "update_active"
	$w.config.f.x42.x.menu add radiobutton -label "32bit" -variable tmpvar_16 -value "32bit" -command "update_active"
	menusplit $w $w.config.f.x42.x.menu 4
	bool $w.config.f 23 43 "  2nd flash in /dev/rom8" CONFIG_EXTRA_FLASH
	bool $w.config.f 23 44 "Per partition statistics in /proc/partitions" CONFIG_BLK_STATS



	focus $w
	update_active
	global winx; global winy
	set winx [expr [winfo x .]+30]; set winy [expr [winfo y .]+30]
	if {[winfo exists $w]} then {wm geometry $w +$winx+$winy}
	update idletasks
	if {[winfo exists $w]} then  {$w.config.canvas create window 0 0 -anchor nw -window $w.config.f

	$w.config.canvas configure \
		-width [expr [winfo reqwidth $w.config.f] + 1]\
		-scrollregion "-1 -1 [expr [winfo reqwidth $w.config.f] + 1] \
			 [expr [winfo reqheight $w.config.f] + 1]"

	set winy [expr [winfo reqh $w] - [winfo reqh $w.config.canvas]]
	set scry [expr [winfo screenh $w] / 2]
	set maxy [expr [winfo screenh $w] * 3 / 4]
	set canvtotal [expr [winfo reqh $w.config.f] + 2]
	if [expr $winy + $canvtotal < $maxy] {
		$w.config.canvas configure -height $canvtotal
	} else {
		$w.config.canvas configure -height [expr $scry - $winy]
		}
	}
	update idletasks
	if {[winfo exists $w]} then {
	wm maxsize $w [winfo width $w] [winfo screenheight $w]
	wm minsize $w [winfo width $w] 100

	wm deiconify $w
}
}

proc update_menu23 {} {
	global CONFIG_BLK_DEV_FD
	global CONFIG_MODULES

	if {($CONFIG_MODULES == 1)} then {configure_entry .menu23.config.f.x0 normal {m}} else {configure_entry .menu23.config.f.x0 disabled {m}}
	global CONFIG_MCA
	global CONFIG_BLK_DEV_PS2
	if {($CONFIG_MCA == 1)} then {
	configure_entry .menu23.config.f.x1 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu23.config.f.x1 normal {m}} else {configure_entry .menu23.config.f.x1 disabled {m}}; configure_entry .menu23.config.f.x1 normal {n l}} else {configure_entry .menu23.config.f.x1 disabled {y n m l}}
	global CONFIG_ISA
	global CONFIG_BLK_DEV_XD
	if {($CONFIG_ISA == 1 || $CONFIG_ISA == 2 || $CONFIG_ISA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ISA]];set CONFIG_BLK_DEV_XD [sync_tristate $CONFIG_BLK_DEV_XD $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu23.config.f.x2 disabled {y}} else {configure_entry .menu23.config.f.x2 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu23.config.f.x2 disabled {m}} else {configure_entry .menu23.config.f.x2 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu23.config.f.x2 normal {m}} else {configure_entry .menu23.config.f.x2 disabled {m}}; configure_entry .menu23.config.f.x2 normal {n l}} else {configure_entry .menu23.config.f.x2 disabled {y n m l}}
	global CONFIG_PARPORT
	global CONFIG_PARIDE
	if {($CONFIG_PARPORT == 1 || $CONFIG_PARPORT == 2 || $CONFIG_PARPORT == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PARPORT]];set CONFIG_PARIDE [sync_tristate $CONFIG_PARIDE $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu23.config.f.x3 disabled {y}} else {configure_entry .menu23.config.f.x3 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu23.config.f.x3 disabled {m}} else {configure_entry .menu23.config.f.x3 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu23.config.f.x3 normal {m}} else {configure_entry .menu23.config.f.x3 disabled {m}}; configure_entry .menu23.config.f.x3 normal {n l}} else {configure_entry .menu23.config.f.x3 disabled {y n m l}}
	if {($CONFIG_PARIDE == 1 || $CONFIG_PARIDE == 2)} then {configure_entry .menu23.config.f.x4 normal {m}} else {configure_entry .menu23.config.f.x4 disabled {m}}
	global CONFIG_PARIDE_PD
	if {($CONFIG_PARIDE == 1 || $CONFIG_PARIDE == 2) && ($CONFIG_PARIDE == 1 || $CONFIG_PARIDE == 2 || $CONFIG_PARIDE == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PARIDE]];set CONFIG_PARIDE_PD [sync_tristate $CONFIG_PARIDE_PD $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu23.config.f.x5 disabled {y}} else {configure_entry .menu23.config.f.x5 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu23.config.f.x5 disabled {m}} else {configure_entry .menu23.config.f.x5 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu23.config.f.x5 normal {m}} else {configure_entry .menu23.config.f.x5 disabled {m}}; configure_entry .menu23.config.f.x5 normal {n l}} else {configure_entry .menu23.config.f.x5 disabled {y n m l}}
	global CONFIG_PARIDE_PCD
	if {($CONFIG_PARIDE == 1 || $CONFIG_PARIDE == 2) && ($CONFIG_PARIDE == 1 || $CONFIG_PARIDE == 2 || $CONFIG_PARIDE == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PARIDE]];set CONFIG_PARIDE_PCD [sync_tristate $CONFIG_PARIDE_PCD $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu23.config.f.x6 disabled {y}} else {configure_entry .menu23.config.f.x6 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu23.config.f.x6 disabled {m}} else {configure_entry .menu23.config.f.x6 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu23.config.f.x6 normal {m}} else {configure_entry .menu23.config.f.x6 disabled {m}}; configure_entry .menu23.config.f.x6 normal {n l}} else {configure_entry .menu23.config.f.x6 disabled {y n m l}}
	global CONFIG_PARIDE_PF
	if {($CONFIG_PARIDE == 1 || $CONFIG_PARIDE == 2) && ($CONFIG_PARIDE == 1 || $CONFIG_PARIDE == 2 || $CONFIG_PARIDE == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PARIDE]];set CONFIG_PARIDE_PF [sync_tristate $CONFIG_PARIDE_PF $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu23.config.f.x7 disabled {y}} else {configure_entry .menu23.config.f.x7 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu23.config.f.x7 disabled {m}} else {configure_entry .menu23.config.f.x7 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu23.config.f.x7 normal {m}} else {configure_entry .menu23.config.f.x7 disabled {m}}; configure_entry .menu23.config.f.x7 normal {n l}} else {configure_entry .menu23.config.f.x7 disabled {y n m l}}
	global CONFIG_PARIDE_PT
	if {($CONFIG_PARIDE == 1 || $CONFIG_PARIDE == 2) && ($CONFIG_PARIDE == 1 || $CONFIG_PARIDE == 2 || $CONFIG_PARIDE == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PARIDE]];set CONFIG_PARIDE_PT [sync_tristate $CONFIG_PARIDE_PT $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu23.config.f.x8 disabled {y}} else {configure_entry .menu23.config.f.x8 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu23.config.f.x8 disabled {m}} else {configure_entry .menu23.config.f.x8 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu23.config.f.x8 normal {m}} else {configure_entry .menu23.config.f.x8 disabled {m}}; configure_entry .menu23.config.f.x8 normal {n l}} else {configure_entry .menu23.config.f.x8 disabled {y n m l}}
	global CONFIG_PARIDE_PG
	if {($CONFIG_PARIDE == 1 || $CONFIG_PARIDE == 2) && ($CONFIG_PARIDE == 1 || $CONFIG_PARIDE == 2 || $CONFIG_PARIDE == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PARIDE]];set CONFIG_PARIDE_PG [sync_tristate $CONFIG_PARIDE_PG $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu23.config.f.x9 disabled {y}} else {configure_entry .menu23.config.f.x9 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu23.config.f.x9 disabled {m}} else {configure_entry .menu23.config.f.x9 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu23.config.f.x9 normal {m}} else {configure_entry .menu23.config.f.x9 disabled {m}}; configure_entry .menu23.config.f.x9 normal {n l}} else {configure_entry .menu23.config.f.x9 disabled {y n m l}}
	if {($CONFIG_PARIDE == 1 || $CONFIG_PARIDE == 2)} then {configure_entry .menu23.config.f.x10 normal {m}} else {configure_entry .menu23.config.f.x10 disabled {m}}
	global CONFIG_PARIDE_ATEN
	if {($CONFIG_PARIDE == 1 || $CONFIG_PARIDE == 2) && ($CONFIG_PARIDE == 1 || $CONFIG_PARIDE == 2 || $CONFIG_PARIDE == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PARIDE]];set CONFIG_PARIDE_ATEN [sync_tristate $CONFIG_PARIDE_ATEN $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu23.config.f.x11 disabled {y}} else {configure_entry .menu23.config.f.x11 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu23.config.f.x11 disabled {m}} else {configure_entry .menu23.config.f.x11 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu23.config.f.x11 normal {m}} else {configure_entry .menu23.config.f.x11 disabled {m}}; configure_entry .menu23.config.f.x11 normal {n l}} else {configure_entry .menu23.config.f.x11 disabled {y n m l}}
	global CONFIG_PARIDE_BPCK
	if {($CONFIG_PARIDE == 1 || $CONFIG_PARIDE == 2) && ($CONFIG_PARIDE == 1 || $CONFIG_PARIDE == 2 || $CONFIG_PARIDE == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PARIDE]];set CONFIG_PARIDE_BPCK [sync_tristate $CONFIG_PARIDE_BPCK $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu23.config.f.x12 disabled {y}} else {configure_entry .menu23.config.f.x12 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu23.config.f.x12 disabled {m}} else {configure_entry .menu23.config.f.x12 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu23.config.f.x12 normal {m}} else {configure_entry .menu23.config.f.x12 disabled {m}}; configure_entry .menu23.config.f.x12 normal {n l}} else {configure_entry .menu23.config.f.x12 disabled {y n m l}}
	global CONFIG_PARIDE_BPCK6
	if {($CONFIG_PARIDE == 1 || $CONFIG_PARIDE == 2) && ($CONFIG_PARIDE == 1 || $CONFIG_PARIDE == 2 || $CONFIG_PARIDE == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PARIDE]];set CONFIG_PARIDE_BPCK6 [sync_tristate $CONFIG_PARIDE_BPCK6 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu23.config.f.x13 disabled {y}} else {configure_entry .menu23.config.f.x13 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu23.config.f.x13 disabled {m}} else {configure_entry .menu23.config.f.x13 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu23.config.f.x13 normal {m}} else {configure_entry .menu23.config.f.x13 disabled {m}}; configure_entry .menu23.config.f.x13 normal {n l}} else {configure_entry .menu23.config.f.x13 disabled {y n m l}}
	global CONFIG_PARIDE_COMM
	if {($CONFIG_PARIDE == 1 || $CONFIG_PARIDE == 2) && ($CONFIG_PARIDE == 1 || $CONFIG_PARIDE == 2 || $CONFIG_PARIDE == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PARIDE]];set CONFIG_PARIDE_COMM [sync_tristate $CONFIG_PARIDE_COMM $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu23.config.f.x14 disabled {y}} else {configure_entry .menu23.config.f.x14 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu23.config.f.x14 disabled {m}} else {configure_entry .menu23.config.f.x14 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu23.config.f.x14 normal {m}} else {configure_entry .menu23.config.f.x14 disabled {m}}; configure_entry .menu23.config.f.x14 normal {n l}} else {configure_entry .menu23.config.f.x14 disabled {y n m l}}
	global CONFIG_PARIDE_DSTR
	if {($CONFIG_PARIDE == 1 || $CONFIG_PARIDE == 2) && ($CONFIG_PARIDE == 1 || $CONFIG_PARIDE == 2 || $CONFIG_PARIDE == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PARIDE]];set CONFIG_PARIDE_DSTR [sync_tristate $CONFIG_PARIDE_DSTR $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu23.config.f.x15 disabled {y}} else {configure_entry .menu23.config.f.x15 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu23.config.f.x15 disabled {m}} else {configure_entry .menu23.config.f.x15 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu23.config.f.x15 normal {m}} else {configure_entry .menu23.config.f.x15 disabled {m}}; configure_entry .menu23.config.f.x15 normal {n l}} else {configure_entry .menu23.config.f.x15 disabled {y n m l}}
	global CONFIG_PARIDE_FIT2
	if {($CONFIG_PARIDE == 1 || $CONFIG_PARIDE == 2) && ($CONFIG_PARIDE == 1 || $CONFIG_PARIDE == 2 || $CONFIG_PARIDE == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PARIDE]];set CONFIG_PARIDE_FIT2 [sync_tristate $CONFIG_PARIDE_FIT2 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu23.config.f.x16 disabled {y}} else {configure_entry .menu23.config.f.x16 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu23.config.f.x16 disabled {m}} else {configure_entry .menu23.config.f.x16 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu23.config.f.x16 normal {m}} else {configure_entry .menu23.config.f.x16 disabled {m}}; configure_entry .menu23.config.f.x16 normal {n l}} else {configure_entry .menu23.config.f.x16 disabled {y n m l}}
	global CONFIG_PARIDE_FIT3
	if {($CONFIG_PARIDE == 1 || $CONFIG_PARIDE == 2) && ($CONFIG_PARIDE == 1 || $CONFIG_PARIDE == 2 || $CONFIG_PARIDE == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PARIDE]];set CONFIG_PARIDE_FIT3 [sync_tristate $CONFIG_PARIDE_FIT3 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu23.config.f.x17 disabled {y}} else {configure_entry .menu23.config.f.x17 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu23.config.f.x17 disabled {m}} else {configure_entry .menu23.config.f.x17 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu23.config.f.x17 normal {m}} else {configure_entry .menu23.config.f.x17 disabled {m}}; configure_entry .menu23.config.f.x17 normal {n l}} else {configure_entry .menu23.config.f.x17 disabled {y n m l}}
	global CONFIG_PARIDE_EPAT
	if {($CONFIG_PARIDE == 1 || $CONFIG_PARIDE == 2) && ($CONFIG_PARIDE == 1 || $CONFIG_PARIDE == 2 || $CONFIG_PARIDE == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PARIDE]];set CONFIG_PARIDE_EPAT [sync_tristate $CONFIG_PARIDE_EPAT $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu23.config.f.x18 disabled {y}} else {configure_entry .menu23.config.f.x18 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu23.config.f.x18 disabled {m}} else {configure_entry .menu23.config.f.x18 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu23.config.f.x18 normal {m}} else {configure_entry .menu23.config.f.x18 disabled {m}}; configure_entry .menu23.config.f.x18 normal {n l}} else {configure_entry .menu23.config.f.x18 disabled {y n m l}}
	global CONFIG_EXPERIMENTAL
	global CONFIG_PARIDE_EPATC8
	if {($CONFIG_PARIDE == 1 || $CONFIG_PARIDE == 2) && ($CONFIG_PARIDE_EPAT != 0) && ($CONFIG_EXPERIMENTAL == 1)} then {
	configure_entry .menu23.config.f.x19 normal {n l y}} else {configure_entry .menu23.config.f.x19 disabled {y n l}}
	global CONFIG_PARIDE_EPIA
	if {($CONFIG_PARIDE == 1 || $CONFIG_PARIDE == 2) && ($CONFIG_PARIDE == 1 || $CONFIG_PARIDE == 2 || $CONFIG_PARIDE == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PARIDE]];set CONFIG_PARIDE_EPIA [sync_tristate $CONFIG_PARIDE_EPIA $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu23.config.f.x20 disabled {y}} else {configure_entry .menu23.config.f.x20 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu23.config.f.x20 disabled {m}} else {configure_entry .menu23.config.f.x20 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu23.config.f.x20 normal {m}} else {configure_entry .menu23.config.f.x20 disabled {m}}; configure_entry .menu23.config.f.x20 normal {n l}} else {configure_entry .menu23.config.f.x20 disabled {y n m l}}
	global CONFIG_PARIDE_FRIQ
	if {($CONFIG_PARIDE == 1 || $CONFIG_PARIDE == 2) && ($CONFIG_PARIDE == 1 || $CONFIG_PARIDE == 2 || $CONFIG_PARIDE == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PARIDE]];set CONFIG_PARIDE_FRIQ [sync_tristate $CONFIG_PARIDE_FRIQ $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu23.config.f.x21 disabled {y}} else {configure_entry .menu23.config.f.x21 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu23.config.f.x21 disabled {m}} else {configure_entry .menu23.config.f.x21 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu23.config.f.x21 normal {m}} else {configure_entry .menu23.config.f.x21 disabled {m}}; configure_entry .menu23.config.f.x21 normal {n l}} else {configure_entry .menu23.config.f.x21 disabled {y n m l}}
	global CONFIG_PARIDE_FRPW
	if {($CONFIG_PARIDE == 1 || $CONFIG_PARIDE == 2) && ($CONFIG_PARIDE == 1 || $CONFIG_PARIDE == 2 || $CONFIG_PARIDE == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PARIDE]];set CONFIG_PARIDE_FRPW [sync_tristate $CONFIG_PARIDE_FRPW $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu23.config.f.x22 disabled {y}} else {configure_entry .menu23.config.f.x22 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu23.config.f.x22 disabled {m}} else {configure_entry .menu23.config.f.x22 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu23.config.f.x22 normal {m}} else {configure_entry .menu23.config.f.x22 disabled {m}}; configure_entry .menu23.config.f.x22 normal {n l}} else {configure_entry .menu23.config.f.x22 disabled {y n m l}}
	global CONFIG_PARIDE_KBIC
	if {($CONFIG_PARIDE == 1 || $CONFIG_PARIDE == 2) && ($CONFIG_PARIDE == 1 || $CONFIG_PARIDE == 2 || $CONFIG_PARIDE == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PARIDE]];set CONFIG_PARIDE_KBIC [sync_tristate $CONFIG_PARIDE_KBIC $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu23.config.f.x23 disabled {y}} else {configure_entry .menu23.config.f.x23 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu23.config.f.x23 disabled {m}} else {configure_entry .menu23.config.f.x23 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu23.config.f.x23 normal {m}} else {configure_entry .menu23.config.f.x23 disabled {m}}; configure_entry .menu23.config.f.x23 normal {n l}} else {configure_entry .menu23.config.f.x23 disabled {y n m l}}
	global CONFIG_PARIDE_KTTI
	if {($CONFIG_PARIDE == 1 || $CONFIG_PARIDE == 2) && ($CONFIG_PARIDE == 1 || $CONFIG_PARIDE == 2 || $CONFIG_PARIDE == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PARIDE]];set CONFIG_PARIDE_KTTI [sync_tristate $CONFIG_PARIDE_KTTI $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu23.config.f.x24 disabled {y}} else {configure_entry .menu23.config.f.x24 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu23.config.f.x24 disabled {m}} else {configure_entry .menu23.config.f.x24 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu23.config.f.x24 normal {m}} else {configure_entry .menu23.config.f.x24 disabled {m}}; configure_entry .menu23.config.f.x24 normal {n l}} else {configure_entry .menu23.config.f.x24 disabled {y n m l}}
	global CONFIG_PARIDE_ON20
	if {($CONFIG_PARIDE == 1 || $CONFIG_PARIDE == 2) && ($CONFIG_PARIDE == 1 || $CONFIG_PARIDE == 2 || $CONFIG_PARIDE == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PARIDE]];set CONFIG_PARIDE_ON20 [sync_tristate $CONFIG_PARIDE_ON20 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu23.config.f.x25 disabled {y}} else {configure_entry .menu23.config.f.x25 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu23.config.f.x25 disabled {m}} else {configure_entry .menu23.config.f.x25 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu23.config.f.x25 normal {m}} else {configure_entry .menu23.config.f.x25 disabled {m}}; configure_entry .menu23.config.f.x25 normal {n l}} else {configure_entry .menu23.config.f.x25 disabled {y n m l}}
	global CONFIG_PARIDE_ON26
	if {($CONFIG_PARIDE == 1 || $CONFIG_PARIDE == 2) && ($CONFIG_PARIDE == 1 || $CONFIG_PARIDE == 2 || $CONFIG_PARIDE == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PARIDE]];set CONFIG_PARIDE_ON26 [sync_tristate $CONFIG_PARIDE_ON26 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu23.config.f.x26 disabled {y}} else {configure_entry .menu23.config.f.x26 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu23.config.f.x26 disabled {m}} else {configure_entry .menu23.config.f.x26 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu23.config.f.x26 normal {m}} else {configure_entry .menu23.config.f.x26 disabled {m}}; configure_entry .menu23.config.f.x26 normal {n l}} else {configure_entry .menu23.config.f.x26 disabled {y n m l}}
	global CONFIG_PCI
	global CONFIG_BLK_CPQ_DA
	if {($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PCI]];set CONFIG_BLK_CPQ_DA [sync_tristate $CONFIG_BLK_CPQ_DA $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu23.config.f.x27 disabled {y}} else {configure_entry .menu23.config.f.x27 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu23.config.f.x27 disabled {m}} else {configure_entry .menu23.config.f.x27 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu23.config.f.x27 normal {m}} else {configure_entry .menu23.config.f.x27 disabled {m}}; configure_entry .menu23.config.f.x27 normal {n l}} else {configure_entry .menu23.config.f.x27 disabled {y n m l}}
	global CONFIG_BLK_CPQ_CISS_DA
	if {($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PCI]];set CONFIG_BLK_CPQ_CISS_DA [sync_tristate $CONFIG_BLK_CPQ_CISS_DA $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu23.config.f.x28 disabled {y}} else {configure_entry .menu23.config.f.x28 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu23.config.f.x28 disabled {m}} else {configure_entry .menu23.config.f.x28 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu23.config.f.x28 normal {m}} else {configure_entry .menu23.config.f.x28 disabled {m}}; configure_entry .menu23.config.f.x28 normal {n l}} else {configure_entry .menu23.config.f.x28 disabled {y n m l}}
	global CONFIG_SCSI
	global CONFIG_CISS_SCSI_TAPE
	if {($CONFIG_BLK_CPQ_CISS_DA == 1 || $CONFIG_BLK_CPQ_CISS_DA == 2 || $CONFIG_BLK_CPQ_CISS_DA == 4) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BLK_CPQ_CISS_DA $CONFIG_SCSI]];set CONFIG_CISS_SCSI_TAPE [sync_bool $CONFIG_CISS_SCSI_TAPE $tmpvar_dep 1];if {$tmpvar_dep != 1 && $tmpvar_dep != 2} then {configure_entry .menu23.config.f.x29 disabled {y};} else {configure_entry .menu23.config.f.x29 normal {y};}; configure_entry .menu23.config.f.x29 normal {n l}} else {configure_entry .menu23.config.f.x29 disabled {y n l}}
	global CONFIG_CISS_MONITOR_THREAD
	if {($CONFIG_BLK_CPQ_CISS_DA == 1 || $CONFIG_BLK_CPQ_CISS_DA == 2 || $CONFIG_BLK_CPQ_CISS_DA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BLK_CPQ_CISS_DA]];set CONFIG_CISS_MONITOR_THREAD [sync_bool $CONFIG_CISS_MONITOR_THREAD $tmpvar_dep 1];if {$tmpvar_dep != 1 && $tmpvar_dep != 2} then {configure_entry .menu23.config.f.x30 disabled {y};} else {configure_entry .menu23.config.f.x30 normal {y};}; configure_entry .menu23.config.f.x30 normal {n l}} else {configure_entry .menu23.config.f.x30 disabled {y n l}}
	global CONFIG_BLK_DEV_DAC960
	if {($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PCI]];set CONFIG_BLK_DEV_DAC960 [sync_tristate $CONFIG_BLK_DEV_DAC960 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu23.config.f.x31 disabled {y}} else {configure_entry .menu23.config.f.x31 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu23.config.f.x31 disabled {m}} else {configure_entry .menu23.config.f.x31 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu23.config.f.x31 normal {m}} else {configure_entry .menu23.config.f.x31 disabled {m}}; configure_entry .menu23.config.f.x31 normal {n l}} else {configure_entry .menu23.config.f.x31 disabled {y n m l}}
	global CONFIG_BLK_DEV_UMEM
	if {($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PCI $CONFIG_EXPERIMENTAL]];set CONFIG_BLK_DEV_UMEM [sync_tristate $CONFIG_BLK_DEV_UMEM $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu23.config.f.x32 disabled {y}} else {configure_entry .menu23.config.f.x32 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu23.config.f.x32 disabled {m}} else {configure_entry .menu23.config.f.x32 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu23.config.f.x32 normal {m}} else {configure_entry .menu23.config.f.x32 disabled {m}}; configure_entry .menu23.config.f.x32 normal {n l}} else {configure_entry .menu23.config.f.x32 disabled {y n m l}}
	global CONFIG_BLK_DEV_LOOP

	if {($CONFIG_MODULES == 1)} then {configure_entry .menu23.config.f.x33 normal {m}} else {configure_entry .menu23.config.f.x33 disabled {m}}
	global CONFIG_NET
	global CONFIG_BLK_DEV_NBD
	if {($CONFIG_NET == 1 || $CONFIG_NET == 2 || $CONFIG_NET == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_NET]];set CONFIG_BLK_DEV_NBD [sync_tristate $CONFIG_BLK_DEV_NBD $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu23.config.f.x34 disabled {y}} else {configure_entry .menu23.config.f.x34 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu23.config.f.x34 disabled {m}} else {configure_entry .menu23.config.f.x34 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu23.config.f.x34 normal {m}} else {configure_entry .menu23.config.f.x34 disabled {m}}; configure_entry .menu23.config.f.x34 normal {n l}} else {configure_entry .menu23.config.f.x34 disabled {y n m l}}
	global CONFIG_BLK_DEV_RAM

	if {($CONFIG_MODULES == 1)} then {configure_entry .menu23.config.f.x35 normal {m}} else {configure_entry .menu23.config.f.x35 disabled {m}}
	global CONFIG_BLK_DEV_RAM_SIZE
	if {($CONFIG_BLK_DEV_RAM == 1 || $CONFIG_BLK_DEV_RAM == 2)} then {.menu23.config.f.x36.x configure -state normal -foreground [ cget .ref -foreground ]; .menu23.config.f.x36.l configure -state normal; } else {.menu23.config.f.x36.x configure -state disabled -foreground [ cget .ref -disabledforeground ]; .menu23.config.f.x36.l configure -state disabled}
	global CONFIG_BLK_DEV_INITRD
	if {($CONFIG_BLK_DEV_RAM == 1 || $CONFIG_BLK_DEV_RAM == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BLK_DEV_RAM]];set CONFIG_BLK_DEV_INITRD [sync_bool $CONFIG_BLK_DEV_INITRD $tmpvar_dep 0];if {$tmpvar_dep != 1} then {configure_entry .menu23.config.f.x37 disabled {y};} else {configure_entry .menu23.config.f.x37 normal {y};}; configure_entry .menu23.config.f.x37 normal {n l}} else {configure_entry .menu23.config.f.x37 disabled {y n l}}
	global CONFIG_BLK_DEV_RAMDISK_DATA
	if {($CONFIG_BLK_DEV_INITRD == 1 || $CONFIG_BLK_DEV_INITRD == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BLK_DEV_INITRD]];set CONFIG_BLK_DEV_RAMDISK_DATA [sync_bool $CONFIG_BLK_DEV_RAMDISK_DATA $tmpvar_dep 0];if {$tmpvar_dep != 1} then {configure_entry .menu23.config.f.x38 disabled {y};} else {configure_entry .menu23.config.f.x38 normal {y};}; configure_entry .menu23.config.f.x38 normal {n l}} else {configure_entry .menu23.config.f.x38 disabled {y n l}}
	global CONFIG_BLK_DEV_BLKMEM

	if {($CONFIG_MODULES == 1)} then {configure_entry .menu23.config.f.x39 normal {m}} else {configure_entry .menu23.config.f.x39 disabled {m}}
	if {($CONFIG_BLK_DEV_BLKMEM == 1 || $CONFIG_BLK_DEV_BLKMEM == 2)} then {configure_entry .menu23.config.f.x40 normal {x l}} else {configure_entry .menu23.config.f.x40 disabled {x l}}
	global CONFIG_AMDFLASH
	global CONFIG_INTELFLASH
	if {($CONFIG_BLK_DEV_BLKMEM == 1 || $CONFIG_BLK_DEV_BLKMEM == 2) && ($CONFIG_AMDFLASH == 1 || $CONFIG_INTELFLASH == 1)} then {configure_entry .menu23.config.f.x41 normal {x l}} else {configure_entry .menu23.config.f.x41 disabled {x l}}
	if {($CONFIG_BLK_DEV_BLKMEM == 1 || $CONFIG_BLK_DEV_BLKMEM == 2) && ($CONFIG_AMDFLASH == 1 || $CONFIG_INTELFLASH == 1)} then {configure_entry .menu23.config.f.x42 normal {x l}} else {configure_entry .menu23.config.f.x42 disabled {x l}}
	global CONFIG_EXTRA_FLASH
	if {($CONFIG_BLK_DEV_BLKMEM == 1 || $CONFIG_BLK_DEV_BLKMEM == 2) && ($CONFIG_AMDFLASH == 1 || $CONFIG_INTELFLASH == 1)} then {
	configure_entry .menu23.config.f.x43 normal {n l y}} else {configure_entry .menu23.config.f.x43 disabled {y n l}}
}


proc update_define_menu23 {} {
	update_define_mainmenu
	global CONFIG_MODULES
	global CONFIG_BLK_DEV_FD
	global CONFIG_BLK_DEV_PS2
	global CONFIG_PARIDE_PARPORT
	global CONFIG_BLK_DEV_LOOP
	global CONFIG_BLK_DEV_RAM
	global CONFIG_BLK_DEV_BLKMEM
set CONFIG_BLK_DEV_PS2 [expr $CONFIG_BLK_DEV_PS2|16]
	global CONFIG_PARIDE_EPATC8
set CONFIG_PARIDE_EPATC8 [expr $CONFIG_PARIDE_EPATC8|16]
	global CONFIG_EXTRA_FLASH
set CONFIG_EXTRA_FLASH [expr $CONFIG_EXTRA_FLASH|16]

	if {($CONFIG_MODULES == 0)} then {if {($CONFIG_BLK_DEV_FD == 2)} then {set CONFIG_BLK_DEV_FD 1}}
	global CONFIG_MCA
	if {($CONFIG_MCA == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_BLK_DEV_PS2 == 2)} then {set CONFIG_BLK_DEV_PS2 1}; set CONFIG_BLK_DEV_PS2 [expr $CONFIG_BLK_DEV_PS2&15]}
	global CONFIG_ISA
	global CONFIG_BLK_DEV_XD
	if {($CONFIG_ISA == 1 || $CONFIG_ISA == 2 || $CONFIG_ISA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ISA]]; set CONFIG_BLK_DEV_XD [sync_tristate $CONFIG_BLK_DEV_XD $tmpvar_dep]; set CONFIG_BLK_DEV_XD [expr $CONFIG_BLK_DEV_XD&15]}
	global CONFIG_PARPORT
	global CONFIG_PARIDE
	if {($CONFIG_PARPORT == 1 || $CONFIG_PARPORT == 2 || $CONFIG_PARPORT == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PARPORT]]; set CONFIG_PARIDE [sync_tristate $CONFIG_PARIDE $tmpvar_dep]; set CONFIG_PARIDE [expr $CONFIG_PARIDE&15]}
	if {($CONFIG_PARIDE == 1 || $CONFIG_PARIDE == 2) && ($CONFIG_PARPORT == 1 || $CONFIG_PARPORT == 0)} then {	global CONSTANT_Y
set CONFIG_PARIDE_PARPORT $CONSTANT_Y }
	if {($CONFIG_PARIDE == 1 || $CONFIG_PARIDE == 2) && ($CONFIG_PARPORT != 1 && $CONFIG_PARPORT != 0)} then {	global CONSTANT_M
set CONFIG_PARIDE_PARPORT $CONSTANT_M }
	global CONFIG_PARIDE_PD
	if {($CONFIG_PARIDE == 1 || $CONFIG_PARIDE == 2) && ($CONFIG_PARIDE == 1 || $CONFIG_PARIDE == 2 || $CONFIG_PARIDE == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PARIDE]]; set CONFIG_PARIDE_PD [sync_tristate $CONFIG_PARIDE_PD $tmpvar_dep]; set CONFIG_PARIDE_PD [expr $CONFIG_PARIDE_PD&15]}
	global CONFIG_PARIDE_PCD
	if {($CONFIG_PARIDE == 1 || $CONFIG_PARIDE == 2) && ($CONFIG_PARIDE == 1 || $CONFIG_PARIDE == 2 || $CONFIG_PARIDE == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PARIDE]]; set CONFIG_PARIDE_PCD [sync_tristate $CONFIG_PARIDE_PCD $tmpvar_dep]; set CONFIG_PARIDE_PCD [expr $CONFIG_PARIDE_PCD&15]}
	global CONFIG_PARIDE_PF
	if {($CONFIG_PARIDE == 1 || $CONFIG_PARIDE == 2) && ($CONFIG_PARIDE == 1 || $CONFIG_PARIDE == 2 || $CONFIG_PARIDE == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PARIDE]]; set CONFIG_PARIDE_PF [sync_tristate $CONFIG_PARIDE_PF $tmpvar_dep]; set CONFIG_PARIDE_PF [expr $CONFIG_PARIDE_PF&15]}
	global CONFIG_PARIDE_PT
	if {($CONFIG_PARIDE == 1 || $CONFIG_PARIDE == 2) && ($CONFIG_PARIDE == 1 || $CONFIG_PARIDE == 2 || $CONFIG_PARIDE == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PARIDE]]; set CONFIG_PARIDE_PT [sync_tristate $CONFIG_PARIDE_PT $tmpvar_dep]; set CONFIG_PARIDE_PT [expr $CONFIG_PARIDE_PT&15]}
	global CONFIG_PARIDE_PG
	if {($CONFIG_PARIDE == 1 || $CONFIG_PARIDE == 2) && ($CONFIG_PARIDE == 1 || $CONFIG_PARIDE == 2 || $CONFIG_PARIDE == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PARIDE]]; set CONFIG_PARIDE_PG [sync_tristate $CONFIG_PARIDE_PG $tmpvar_dep]; set CONFIG_PARIDE_PG [expr $CONFIG_PARIDE_PG&15]}
	global CONFIG_PARIDE_ATEN
	if {($CONFIG_PARIDE == 1 || $CONFIG_PARIDE == 2) && ($CONFIG_PARIDE == 1 || $CONFIG_PARIDE == 2 || $CONFIG_PARIDE == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PARIDE]]; set CONFIG_PARIDE_ATEN [sync_tristate $CONFIG_PARIDE_ATEN $tmpvar_dep]; set CONFIG_PARIDE_ATEN [expr $CONFIG_PARIDE_ATEN&15]}
	global CONFIG_PARIDE_BPCK
	if {($CONFIG_PARIDE == 1 || $CONFIG_PARIDE == 2) && ($CONFIG_PARIDE == 1 || $CONFIG_PARIDE == 2 || $CONFIG_PARIDE == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PARIDE]]; set CONFIG_PARIDE_BPCK [sync_tristate $CONFIG_PARIDE_BPCK $tmpvar_dep]; set CONFIG_PARIDE_BPCK [expr $CONFIG_PARIDE_BPCK&15]}
	global CONFIG_PARIDE_BPCK6
	if {($CONFIG_PARIDE == 1 || $CONFIG_PARIDE == 2) && ($CONFIG_PARIDE == 1 || $CONFIG_PARIDE == 2 || $CONFIG_PARIDE == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PARIDE]]; set CONFIG_PARIDE_BPCK6 [sync_tristate $CONFIG_PARIDE_BPCK6 $tmpvar_dep]; set CONFIG_PARIDE_BPCK6 [expr $CONFIG_PARIDE_BPCK6&15]}
	global CONFIG_PARIDE_COMM
	if {($CONFIG_PARIDE == 1 || $CONFIG_PARIDE == 2) && ($CONFIG_PARIDE == 1 || $CONFIG_PARIDE == 2 || $CONFIG_PARIDE == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PARIDE]]; set CONFIG_PARIDE_COMM [sync_tristate $CONFIG_PARIDE_COMM $tmpvar_dep]; set CONFIG_PARIDE_COMM [expr $CONFIG_PARIDE_COMM&15]}
	global CONFIG_PARIDE_DSTR
	if {($CONFIG_PARIDE == 1 || $CONFIG_PARIDE == 2) && ($CONFIG_PARIDE == 1 || $CONFIG_PARIDE == 2 || $CONFIG_PARIDE == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PARIDE]]; set CONFIG_PARIDE_DSTR [sync_tristate $CONFIG_PARIDE_DSTR $tmpvar_dep]; set CONFIG_PARIDE_DSTR [expr $CONFIG_PARIDE_DSTR&15]}
	global CONFIG_PARIDE_FIT2
	if {($CONFIG_PARIDE == 1 || $CONFIG_PARIDE == 2) && ($CONFIG_PARIDE == 1 || $CONFIG_PARIDE == 2 || $CONFIG_PARIDE == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PARIDE]]; set CONFIG_PARIDE_FIT2 [sync_tristate $CONFIG_PARIDE_FIT2 $tmpvar_dep]; set CONFIG_PARIDE_FIT2 [expr $CONFIG_PARIDE_FIT2&15]}
	global CONFIG_PARIDE_FIT3
	if {($CONFIG_PARIDE == 1 || $CONFIG_PARIDE == 2) && ($CONFIG_PARIDE == 1 || $CONFIG_PARIDE == 2 || $CONFIG_PARIDE == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PARIDE]]; set CONFIG_PARIDE_FIT3 [sync_tristate $CONFIG_PARIDE_FIT3 $tmpvar_dep]; set CONFIG_PARIDE_FIT3 [expr $CONFIG_PARIDE_FIT3&15]}
	global CONFIG_PARIDE_EPAT
	if {($CONFIG_PARIDE == 1 || $CONFIG_PARIDE == 2) && ($CONFIG_PARIDE == 1 || $CONFIG_PARIDE == 2 || $CONFIG_PARIDE == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PARIDE]]; set CONFIG_PARIDE_EPAT [sync_tristate $CONFIG_PARIDE_EPAT $tmpvar_dep]; set CONFIG_PARIDE_EPAT [expr $CONFIG_PARIDE_EPAT&15]}
	global CONFIG_EXPERIMENTAL
	if {($CONFIG_PARIDE == 1 || $CONFIG_PARIDE == 2) && ($CONFIG_PARIDE_EPAT != 0) && ($CONFIG_EXPERIMENTAL == 1)} then {
	set CONFIG_PARIDE_EPATC8 [expr $CONFIG_PARIDE_EPATC8&15]}
	global CONFIG_PARIDE_EPIA
	if {($CONFIG_PARIDE == 1 || $CONFIG_PARIDE == 2) && ($CONFIG_PARIDE == 1 || $CONFIG_PARIDE == 2 || $CONFIG_PARIDE == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PARIDE]]; set CONFIG_PARIDE_EPIA [sync_tristate $CONFIG_PARIDE_EPIA $tmpvar_dep]; set CONFIG_PARIDE_EPIA [expr $CONFIG_PARIDE_EPIA&15]}
	global CONFIG_PARIDE_FRIQ
	if {($CONFIG_PARIDE == 1 || $CONFIG_PARIDE == 2) && ($CONFIG_PARIDE == 1 || $CONFIG_PARIDE == 2 || $CONFIG_PARIDE == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PARIDE]]; set CONFIG_PARIDE_FRIQ [sync_tristate $CONFIG_PARIDE_FRIQ $tmpvar_dep]; set CONFIG_PARIDE_FRIQ [expr $CONFIG_PARIDE_FRIQ&15]}
	global CONFIG_PARIDE_FRPW
	if {($CONFIG_PARIDE == 1 || $CONFIG_PARIDE == 2) && ($CONFIG_PARIDE == 1 || $CONFIG_PARIDE == 2 || $CONFIG_PARIDE == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PARIDE]]; set CONFIG_PARIDE_FRPW [sync_tristate $CONFIG_PARIDE_FRPW $tmpvar_dep]; set CONFIG_PARIDE_FRPW [expr $CONFIG_PARIDE_FRPW&15]}
	global CONFIG_PARIDE_KBIC
	if {($CONFIG_PARIDE == 1 || $CONFIG_PARIDE == 2) && ($CONFIG_PARIDE == 1 || $CONFIG_PARIDE == 2 || $CONFIG_PARIDE == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PARIDE]]; set CONFIG_PARIDE_KBIC [sync_tristate $CONFIG_PARIDE_KBIC $tmpvar_dep]; set CONFIG_PARIDE_KBIC [expr $CONFIG_PARIDE_KBIC&15]}
	global CONFIG_PARIDE_KTTI
	if {($CONFIG_PARIDE == 1 || $CONFIG_PARIDE == 2) && ($CONFIG_PARIDE == 1 || $CONFIG_PARIDE == 2 || $CONFIG_PARIDE == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PARIDE]]; set CONFIG_PARIDE_KTTI [sync_tristate $CONFIG_PARIDE_KTTI $tmpvar_dep]; set CONFIG_PARIDE_KTTI [expr $CONFIG_PARIDE_KTTI&15]}
	global CONFIG_PARIDE_ON20
	if {($CONFIG_PARIDE == 1 || $CONFIG_PARIDE == 2) && ($CONFIG_PARIDE == 1 || $CONFIG_PARIDE == 2 || $CONFIG_PARIDE == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PARIDE]]; set CONFIG_PARIDE_ON20 [sync_tristate $CONFIG_PARIDE_ON20 $tmpvar_dep]; set CONFIG_PARIDE_ON20 [expr $CONFIG_PARIDE_ON20&15]}
	global CONFIG_PARIDE_ON26
	if {($CONFIG_PARIDE == 1 || $CONFIG_PARIDE == 2) && ($CONFIG_PARIDE == 1 || $CONFIG_PARIDE == 2 || $CONFIG_PARIDE == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PARIDE]]; set CONFIG_PARIDE_ON26 [sync_tristate $CONFIG_PARIDE_ON26 $tmpvar_dep]; set CONFIG_PARIDE_ON26 [expr $CONFIG_PARIDE_ON26&15]}
	global CONFIG_PCI
	global CONFIG_BLK_CPQ_DA
	if {($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PCI]]; set CONFIG_BLK_CPQ_DA [sync_tristate $CONFIG_BLK_CPQ_DA $tmpvar_dep]; set CONFIG_BLK_CPQ_DA [expr $CONFIG_BLK_CPQ_DA&15]}
	global CONFIG_BLK_CPQ_CISS_DA
	if {($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PCI]]; set CONFIG_BLK_CPQ_CISS_DA [sync_tristate $CONFIG_BLK_CPQ_CISS_DA $tmpvar_dep]; set CONFIG_BLK_CPQ_CISS_DA [expr $CONFIG_BLK_CPQ_CISS_DA&15]}
	global CONFIG_SCSI
	global CONFIG_CISS_SCSI_TAPE
	if {($CONFIG_BLK_CPQ_CISS_DA == 1 || $CONFIG_BLK_CPQ_CISS_DA == 2 || $CONFIG_BLK_CPQ_CISS_DA == 4) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BLK_CPQ_CISS_DA $CONFIG_SCSI]];set CONFIG_CISS_SCSI_TAPE [sync_bool $CONFIG_CISS_SCSI_TAPE $tmpvar_dep 1];set CONFIG_CISS_SCSI_TAPE [expr $CONFIG_CISS_SCSI_TAPE&15]}
	global CONFIG_CISS_MONITOR_THREAD
	if {($CONFIG_BLK_CPQ_CISS_DA == 1 || $CONFIG_BLK_CPQ_CISS_DA == 2 || $CONFIG_BLK_CPQ_CISS_DA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BLK_CPQ_CISS_DA]];set CONFIG_CISS_MONITOR_THREAD [sync_bool $CONFIG_CISS_MONITOR_THREAD $tmpvar_dep 1];set CONFIG_CISS_MONITOR_THREAD [expr $CONFIG_CISS_MONITOR_THREAD&15]}
	global CONFIG_BLK_DEV_DAC960
	if {($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PCI]]; set CONFIG_BLK_DEV_DAC960 [sync_tristate $CONFIG_BLK_DEV_DAC960 $tmpvar_dep]; set CONFIG_BLK_DEV_DAC960 [expr $CONFIG_BLK_DEV_DAC960&15]}
	global CONFIG_BLK_DEV_UMEM
	if {($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PCI $CONFIG_EXPERIMENTAL]]; set CONFIG_BLK_DEV_UMEM [sync_tristate $CONFIG_BLK_DEV_UMEM $tmpvar_dep]; set CONFIG_BLK_DEV_UMEM [expr $CONFIG_BLK_DEV_UMEM&15]}

	if {($CONFIG_MODULES == 0)} then {if {($CONFIG_BLK_DEV_LOOP == 2)} then {set CONFIG_BLK_DEV_LOOP 1}}
	global CONFIG_NET
	global CONFIG_BLK_DEV_NBD
	if {($CONFIG_NET == 1 || $CONFIG_NET == 2 || $CONFIG_NET == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_NET]]; set CONFIG_BLK_DEV_NBD [sync_tristate $CONFIG_BLK_DEV_NBD $tmpvar_dep]; set CONFIG_BLK_DEV_NBD [expr $CONFIG_BLK_DEV_NBD&15]}

	if {($CONFIG_MODULES == 0)} then {if {($CONFIG_BLK_DEV_RAM == 2)} then {set CONFIG_BLK_DEV_RAM 1}}
	global CONFIG_BLK_DEV_RAM_SIZE
	if {($CONFIG_BLK_DEV_RAM == 1 || $CONFIG_BLK_DEV_RAM == 2)} then {validate_int CONFIG_BLK_DEV_RAM_SIZE "$CONFIG_BLK_DEV_RAM_SIZE" 4096}
	global CONFIG_BLK_DEV_INITRD
	if {($CONFIG_BLK_DEV_RAM == 1 || $CONFIG_BLK_DEV_RAM == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BLK_DEV_RAM]];set CONFIG_BLK_DEV_INITRD [sync_bool $CONFIG_BLK_DEV_INITRD $tmpvar_dep 0];set CONFIG_BLK_DEV_INITRD [expr $CONFIG_BLK_DEV_INITRD&15]}
	global CONFIG_BLK_DEV_RAMDISK_DATA
	if {($CONFIG_BLK_DEV_INITRD == 1 || $CONFIG_BLK_DEV_INITRD == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BLK_DEV_INITRD]];set CONFIG_BLK_DEV_RAMDISK_DATA [sync_bool $CONFIG_BLK_DEV_RAMDISK_DATA $tmpvar_dep 0];set CONFIG_BLK_DEV_RAMDISK_DATA [expr $CONFIG_BLK_DEV_RAMDISK_DATA&15]}

	if {($CONFIG_MODULES == 0)} then {if {($CONFIG_BLK_DEV_BLKMEM == 2)} then {set CONFIG_BLK_DEV_BLKMEM 1}}
	global tmpvar_14
	global CONFIG_NOFLASH
	if {$tmpvar_14 == "NONE"} then {set CONFIG_NOFLASH 1} else {set CONFIG_NOFLASH 0}
	global CONFIG_AMDFLASH
	if {$tmpvar_14 == "AMD"} then {set CONFIG_AMDFLASH 1} else {set CONFIG_AMDFLASH 0}
	global CONFIG_INTELFLASH
	if {$tmpvar_14 == "INTEL"} then {set CONFIG_INTELFLASH 1} else {set CONFIG_INTELFLASH 0}
	global tmpvar_15
	global CONFIG_FLASHAUTO
	if {$tmpvar_15 == "AUTO"} then {set CONFIG_FLASHAUTO 1} else {set CONFIG_FLASHAUTO 0}
	global CONFIG_FLASH128KB
	if {$tmpvar_15 == "128KB"} then {set CONFIG_FLASH128KB 1} else {set CONFIG_FLASH128KB 0}
	global CONFIG_FLASH1MB
	if {$tmpvar_15 == "1MB"} then {set CONFIG_FLASH1MB 1} else {set CONFIG_FLASH1MB 0}
	global CONFIG_FLASH2MB
	if {$tmpvar_15 == "2MB"} then {set CONFIG_FLASH2MB 1} else {set CONFIG_FLASH2MB 0}
	global CONFIG_FLASH4MB
	if {$tmpvar_15 == "4MB"} then {set CONFIG_FLASH4MB 1} else {set CONFIG_FLASH4MB 0}
	global CONFIG_FLASH6MB
	if {$tmpvar_15 == "6MB"} then {set CONFIG_FLASH6MB 1} else {set CONFIG_FLASH6MB 0}
	global CONFIG_FLASH8MB
	if {$tmpvar_15 == "8MB"} then {set CONFIG_FLASH8MB 1} else {set CONFIG_FLASH8MB 0}
	global CONFIG_FLASH16MB
	if {$tmpvar_15 == "16MB"} then {set CONFIG_FLASH16MB 1} else {set CONFIG_FLASH16MB 0}
	global tmpvar_16
	global CONFIG_FLASHAUTOBIT
	if {$tmpvar_16 == "AUTO"} then {set CONFIG_FLASHAUTOBIT 1} else {set CONFIG_FLASHAUTOBIT 0}
	global CONFIG_FLASH8BIT
	if {$tmpvar_16 == "8bit"} then {set CONFIG_FLASH8BIT 1} else {set CONFIG_FLASH8BIT 0}
	global CONFIG_FLASH16BIT
	if {$tmpvar_16 == "16bit"} then {set CONFIG_FLASH16BIT 1} else {set CONFIG_FLASH16BIT 0}
	global CONFIG_FLASH32bit
	if {$tmpvar_16 == "32bit"} then {set CONFIG_FLASH32bit 1} else {set CONFIG_FLASH32bit 0}
	if {($CONFIG_BLK_DEV_BLKMEM == 1 || $CONFIG_BLK_DEV_BLKMEM == 2) && ($CONFIG_AMDFLASH == 1 || $CONFIG_INTELFLASH == 1)} then {
	set CONFIG_EXTRA_FLASH [expr $CONFIG_EXTRA_FLASH&15]}
}


menu_option menu24 24 "Multi-device support (RAID and LVM)"
proc menu24 {w title} {
	set oldFocus [focus]
	catch {destroy $w; unregister_active 24}
	toplevel $w -class Dialog
	wm withdraw $w
	global active_menus
	set active_menus [lsort -integer [linsert $active_menus end 24]]
	message $w.m -width 400 -aspect 300 -text \
		"Multi-device support (RAID and LVM)"  -relief raised
	pack $w.m -pady 10 -side top -padx 10
	wm title $w "Multi-device support (RAID and LVM)" 

	bind $w <Escape> "catch {focus $oldFocus}; destroy $w; unregister_active 24; break"
	set nextscript "catch {focus $oldFocus}; destroy $w; unregister_active 24; menu25 .menu25 \"$title\""
	frame $w.f
	button $w.f.back -text "Main Menu" \
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 24"
	button $w.f.next -text "Next" -underline 0\
		-width 15 -command $nextscript
	bind all <Alt-n> $nextscript
	button $w.f.prev -text "Prev" -underline 0\
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 24; menu23 .menu23 \"$title\""
	bind $w <Alt-p> "catch {focus $oldFocus}; destroy $w; unregister_active 24; menu23 .menu23 \"$title\";break"
	pack $w.f.back $w.f.next $w.f.prev -side left -expand on
	pack $w.f -pady 10 -side bottom -anchor w -fill x
	frame $w.topline -relief ridge -borderwidth 2 -height 2
	pack $w.topline -side top -fill x

	frame $w.botline -relief ridge -borderwidth 2 -height 2
	pack $w.botline -side bottom -fill x

	frame $w.config
	pack $w.config -fill y -expand on

	scrollbar $w.config.vscroll -command "$w.config.canvas yview"
	pack $w.config.vscroll -side right -fill y

	canvas $w.config.canvas -height 1\
		-relief flat -borderwidth 0 -yscrollcommand "$w.config.vscroll set" \
		-width [expr [winfo screenwidth .] * 1 / 2] 
	frame $w.config.f
	bind $w <Key-Down> "$w.config.canvas yview scroll  1 unit;break;"
	bind $w <Key-Up> "$w.config.canvas yview scroll  -1 unit;break;"
	bind $w <Key-Next> "$w.config.canvas yview scroll  1 page;break;"
	bind $w <Key-Prior> "$w.config.canvas yview scroll  -1 page;break;"
	bind $w <Key-Home> "$w.config.canvas yview moveto 0;break;"
	bind $w <Key-End> "$w.config.canvas yview moveto 1 ;break;"
	pack $w.config.canvas -side right -fill y


	bool $w.config.f 24 0 "Multiple devices driver support (RAID and LVM)" CONFIG_MD
	dep_tristate $w.config.f 24 1 " RAID support" CONFIG_BLK_DEV_MD
	dep_tristate $w.config.f 24 2 "  Linear (append) mode" CONFIG_MD_LINEAR
	dep_tristate $w.config.f 24 3 "  RAID-0 (striping) mode" CONFIG_MD_RAID0
	dep_tristate $w.config.f 24 4 "  RAID-1 (mirroring) mode" CONFIG_MD_RAID1
	dep_tristate $w.config.f 24 5 "  RAID-4/RAID-5 mode" CONFIG_MD_RAID5
	dep_tristate $w.config.f 24 6 "  Multipath I/O support" CONFIG_MD_MULTIPATH
	dep_tristate $w.config.f 24 7 " Logical volume manager (LVM) support" CONFIG_BLK_DEV_LVM



	focus $w
	update_active
	global winx; global winy
	set winx [expr [winfo x .]+30]; set winy [expr [winfo y .]+30]
	if {[winfo exists $w]} then {wm geometry $w +$winx+$winy}
	update idletasks
	if {[winfo exists $w]} then  {$w.config.canvas create window 0 0 -anchor nw -window $w.config.f

	$w.config.canvas configure \
		-width [expr [winfo reqwidth $w.config.f] + 1]\
		-scrollregion "-1 -1 [expr [winfo reqwidth $w.config.f] + 1] \
			 [expr [winfo reqheight $w.config.f] + 1]"

	set winy [expr [winfo reqh $w] - [winfo reqh $w.config.canvas]]
	set scry [expr [winfo screenh $w] / 2]
	set maxy [expr [winfo screenh $w] * 3 / 4]
	set canvtotal [expr [winfo reqh $w.config.f] + 2]
	if [expr $winy + $canvtotal < $maxy] {
		$w.config.canvas configure -height $canvtotal
	} else {
		$w.config.canvas configure -height [expr $scry - $winy]
		}
	}
	update idletasks
	if {[winfo exists $w]} then {
	wm maxsize $w [winfo width $w] [winfo screenheight $w]
	wm minsize $w [winfo width $w] 100

	wm deiconify $w
}
}

proc update_menu24 {} {
	global CONFIG_MODULES
	global CONFIG_MD
	global CONFIG_BLK_DEV_MD
	if {($CONFIG_MD == 1 || $CONFIG_MD == 2 || $CONFIG_MD == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_MD]];set CONFIG_BLK_DEV_MD [sync_tristate $CONFIG_BLK_DEV_MD $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu24.config.f.x1 disabled {y}} else {configure_entry .menu24.config.f.x1 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu24.config.f.x1 disabled {m}} else {configure_entry .menu24.config.f.x1 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu24.config.f.x1 normal {m}} else {configure_entry .menu24.config.f.x1 disabled {m}}; configure_entry .menu24.config.f.x1 normal {n l}} else {configure_entry .menu24.config.f.x1 disabled {y n m l}}
	global CONFIG_MD_LINEAR
	if {($CONFIG_BLK_DEV_MD == 1 || $CONFIG_BLK_DEV_MD == 2 || $CONFIG_BLK_DEV_MD == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BLK_DEV_MD]];set CONFIG_MD_LINEAR [sync_tristate $CONFIG_MD_LINEAR $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu24.config.f.x2 disabled {y}} else {configure_entry .menu24.config.f.x2 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu24.config.f.x2 disabled {m}} else {configure_entry .menu24.config.f.x2 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu24.config.f.x2 normal {m}} else {configure_entry .menu24.config.f.x2 disabled {m}}; configure_entry .menu24.config.f.x2 normal {n l}} else {configure_entry .menu24.config.f.x2 disabled {y n m l}}
	global CONFIG_MD_RAID0
	if {($CONFIG_BLK_DEV_MD == 1 || $CONFIG_BLK_DEV_MD == 2 || $CONFIG_BLK_DEV_MD == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BLK_DEV_MD]];set CONFIG_MD_RAID0 [sync_tristate $CONFIG_MD_RAID0 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu24.config.f.x3 disabled {y}} else {configure_entry .menu24.config.f.x3 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu24.config.f.x3 disabled {m}} else {configure_entry .menu24.config.f.x3 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu24.config.f.x3 normal {m}} else {configure_entry .menu24.config.f.x3 disabled {m}}; configure_entry .menu24.config.f.x3 normal {n l}} else {configure_entry .menu24.config.f.x3 disabled {y n m l}}
	global CONFIG_MD_RAID1
	if {($CONFIG_BLK_DEV_MD == 1 || $CONFIG_BLK_DEV_MD == 2 || $CONFIG_BLK_DEV_MD == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BLK_DEV_MD]];set CONFIG_MD_RAID1 [sync_tristate $CONFIG_MD_RAID1 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu24.config.f.x4 disabled {y}} else {configure_entry .menu24.config.f.x4 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu24.config.f.x4 disabled {m}} else {configure_entry .menu24.config.f.x4 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu24.config.f.x4 normal {m}} else {configure_entry .menu24.config.f.x4 disabled {m}}; configure_entry .menu24.config.f.x4 normal {n l}} else {configure_entry .menu24.config.f.x4 disabled {y n m l}}
	global CONFIG_MD_RAID5
	if {($CONFIG_BLK_DEV_MD == 1 || $CONFIG_BLK_DEV_MD == 2 || $CONFIG_BLK_DEV_MD == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BLK_DEV_MD]];set CONFIG_MD_RAID5 [sync_tristate $CONFIG_MD_RAID5 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu24.config.f.x5 disabled {y}} else {configure_entry .menu24.config.f.x5 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu24.config.f.x5 disabled {m}} else {configure_entry .menu24.config.f.x5 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu24.config.f.x5 normal {m}} else {configure_entry .menu24.config.f.x5 disabled {m}}; configure_entry .menu24.config.f.x5 normal {n l}} else {configure_entry .menu24.config.f.x5 disabled {y n m l}}
	global CONFIG_MD_MULTIPATH
	if {($CONFIG_BLK_DEV_MD == 1 || $CONFIG_BLK_DEV_MD == 2 || $CONFIG_BLK_DEV_MD == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BLK_DEV_MD]];set CONFIG_MD_MULTIPATH [sync_tristate $CONFIG_MD_MULTIPATH $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu24.config.f.x6 disabled {y}} else {configure_entry .menu24.config.f.x6 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu24.config.f.x6 disabled {m}} else {configure_entry .menu24.config.f.x6 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu24.config.f.x6 normal {m}} else {configure_entry .menu24.config.f.x6 disabled {m}}; configure_entry .menu24.config.f.x6 normal {n l}} else {configure_entry .menu24.config.f.x6 disabled {y n m l}}
	global CONFIG_BLK_DEV_LVM
	if {($CONFIG_MD == 1 || $CONFIG_MD == 2 || $CONFIG_MD == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_MD]];set CONFIG_BLK_DEV_LVM [sync_tristate $CONFIG_BLK_DEV_LVM $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu24.config.f.x7 disabled {y}} else {configure_entry .menu24.config.f.x7 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu24.config.f.x7 disabled {m}} else {configure_entry .menu24.config.f.x7 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu24.config.f.x7 normal {m}} else {configure_entry .menu24.config.f.x7 disabled {m}}; configure_entry .menu24.config.f.x7 normal {n l}} else {configure_entry .menu24.config.f.x7 disabled {y n m l}}
}


proc update_define_menu24 {} {
	update_define_mainmenu
	global CONFIG_MODULES
	global CONFIG_MD
	global CONFIG_BLK_DEV_MD
	if {($CONFIG_MD == 1 || $CONFIG_MD == 2 || $CONFIG_MD == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_MD]]; set CONFIG_BLK_DEV_MD [sync_tristate $CONFIG_BLK_DEV_MD $tmpvar_dep]; set CONFIG_BLK_DEV_MD [expr $CONFIG_BLK_DEV_MD&15]}
	global CONFIG_MD_LINEAR
	if {($CONFIG_BLK_DEV_MD == 1 || $CONFIG_BLK_DEV_MD == 2 || $CONFIG_BLK_DEV_MD == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BLK_DEV_MD]]; set CONFIG_MD_LINEAR [sync_tristate $CONFIG_MD_LINEAR $tmpvar_dep]; set CONFIG_MD_LINEAR [expr $CONFIG_MD_LINEAR&15]}
	global CONFIG_MD_RAID0
	if {($CONFIG_BLK_DEV_MD == 1 || $CONFIG_BLK_DEV_MD == 2 || $CONFIG_BLK_DEV_MD == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BLK_DEV_MD]]; set CONFIG_MD_RAID0 [sync_tristate $CONFIG_MD_RAID0 $tmpvar_dep]; set CONFIG_MD_RAID0 [expr $CONFIG_MD_RAID0&15]}
	global CONFIG_MD_RAID1
	if {($CONFIG_BLK_DEV_MD == 1 || $CONFIG_BLK_DEV_MD == 2 || $CONFIG_BLK_DEV_MD == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BLK_DEV_MD]]; set CONFIG_MD_RAID1 [sync_tristate $CONFIG_MD_RAID1 $tmpvar_dep]; set CONFIG_MD_RAID1 [expr $CONFIG_MD_RAID1&15]}
	global CONFIG_MD_RAID5
	if {($CONFIG_BLK_DEV_MD == 1 || $CONFIG_BLK_DEV_MD == 2 || $CONFIG_BLK_DEV_MD == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BLK_DEV_MD]]; set CONFIG_MD_RAID5 [sync_tristate $CONFIG_MD_RAID5 $tmpvar_dep]; set CONFIG_MD_RAID5 [expr $CONFIG_MD_RAID5&15]}
	global CONFIG_MD_MULTIPATH
	if {($CONFIG_BLK_DEV_MD == 1 || $CONFIG_BLK_DEV_MD == 2 || $CONFIG_BLK_DEV_MD == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BLK_DEV_MD]]; set CONFIG_MD_MULTIPATH [sync_tristate $CONFIG_MD_MULTIPATH $tmpvar_dep]; set CONFIG_MD_MULTIPATH [expr $CONFIG_MD_MULTIPATH&15]}
	global CONFIG_BLK_DEV_LVM
	if {($CONFIG_MD == 1 || $CONFIG_MD == 2 || $CONFIG_MD == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_MD]]; set CONFIG_BLK_DEV_LVM [sync_tristate $CONFIG_BLK_DEV_LVM $tmpvar_dep]; set CONFIG_BLK_DEV_LVM [expr $CONFIG_BLK_DEV_LVM&15]}
}


menu_option menu25 25 "Acorn-specific block devices"
proc menu25 {w title} {
	set oldFocus [focus]
	catch {destroy $w; unregister_active 25}
	toplevel $w -class Dialog
	wm withdraw $w
	global active_menus
	set active_menus [lsort -integer [linsert $active_menus end 25]]
	message $w.m -width 400 -aspect 300 -text \
		"Acorn-specific block devices"  -relief raised
	pack $w.m -pady 10 -side top -padx 10
	wm title $w "Acorn-specific block devices" 

	bind $w <Escape> "catch {focus $oldFocus}; destroy $w; unregister_active 25; break"
	set nextscript "catch {focus $oldFocus}; destroy $w; unregister_active 25; menu26 .menu26 \"$title\""
	frame $w.f
	button $w.f.back -text "Main Menu" \
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 25"
	button $w.f.next -text "Next" -underline 0\
		-width 15 -command $nextscript
	bind all <Alt-n> $nextscript
	button $w.f.prev -text "Prev" -underline 0\
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 25; menu24 .menu24 \"$title\""
	bind $w <Alt-p> "catch {focus $oldFocus}; destroy $w; unregister_active 25; menu24 .menu24 \"$title\";break"
	pack $w.f.back $w.f.next $w.f.prev -side left -expand on
	pack $w.f -pady 10 -side bottom -anchor w -fill x
	frame $w.topline -relief ridge -borderwidth 2 -height 2
	pack $w.topline -side top -fill x

	frame $w.botline -relief ridge -borderwidth 2 -height 2
	pack $w.botline -side bottom -fill x

	frame $w.config
	pack $w.config -fill y -expand on

	scrollbar $w.config.vscroll -command "$w.config.canvas yview"
	pack $w.config.vscroll -side right -fill y

	canvas $w.config.canvas -height 1\
		-relief flat -borderwidth 0 -yscrollcommand "$w.config.vscroll set" \
		-width [expr [winfo screenwidth .] * 1 / 2] 
	frame $w.config.f
	bind $w <Key-Down> "$w.config.canvas yview scroll  1 unit;break;"
	bind $w <Key-Up> "$w.config.canvas yview scroll  -1 unit;break;"
	bind $w <Key-Next> "$w.config.canvas yview scroll  1 page;break;"
	bind $w <Key-Prior> "$w.config.canvas yview scroll  -1 page;break;"
	bind $w <Key-Home> "$w.config.canvas yview moveto 0;break;"
	bind $w <Key-End> "$w.config.canvas yview moveto 1 ;break;"
	pack $w.config.canvas -side right -fill y


	tristate $w.config.f 25 0 "Old Archimedes floppy (1772) support" CONFIG_BLK_DEV_FD1772
	tristate $w.config.f 25 1 "MFM harddisk support" CONFIG_BLK_DEV_MFM
	bool $w.config.f 25 2 "  Autodetect hard drive geometry" CONFIG_BLK_DEV_MFM_AUTODETECT



	focus $w
	update_active
	global winx; global winy
	set winx [expr [winfo x .]+30]; set winy [expr [winfo y .]+30]
	if {[winfo exists $w]} then {wm geometry $w +$winx+$winy}
	update idletasks
	if {[winfo exists $w]} then  {$w.config.canvas create window 0 0 -anchor nw -window $w.config.f

	$w.config.canvas configure \
		-width [expr [winfo reqwidth $w.config.f] + 1]\
		-scrollregion "-1 -1 [expr [winfo reqwidth $w.config.f] + 1] \
			 [expr [winfo reqheight $w.config.f] + 1]"

	set winy [expr [winfo reqh $w] - [winfo reqh $w.config.canvas]]
	set scry [expr [winfo screenh $w] / 2]
	set maxy [expr [winfo screenh $w] * 3 / 4]
	set canvtotal [expr [winfo reqh $w.config.f] + 2]
	if [expr $winy + $canvtotal < $maxy] {
		$w.config.canvas configure -height $canvtotal
	} else {
		$w.config.canvas configure -height [expr $scry - $winy]
		}
	}
	update idletasks
	if {[winfo exists $w]} then {
	wm maxsize $w [winfo width $w] [winfo screenheight $w]
	wm minsize $w [winfo width $w] 100

	wm deiconify $w
}
}

proc update_menu25 {} {
	global CONFIG_MODULES
	global CONFIG_ARCH_ACORN
	global CONFIG_ARCH_ARC
	global CONFIG_ARCH_A5K
	global CONFIG_BLK_DEV_FD1772
	if {($CONFIG_ARCH_ACORN == 1) && ($CONFIG_ARCH_ARC == 1 || $CONFIG_ARCH_A5K == 1)} then {
	configure_entry .menu25.config.f.x0 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu25.config.f.x0 normal {m}} else {configure_entry .menu25.config.f.x0 disabled {m}}; configure_entry .menu25.config.f.x0 normal {n l}} else {configure_entry .menu25.config.f.x0 disabled {y n m l}}
	global CONFIG_BLK_DEV_MFM
	if {($CONFIG_ARCH_ACORN == 1) && ($CONFIG_ARCH_ARC == 1 || $CONFIG_ARCH_A5K == 1)} then {
	configure_entry .menu25.config.f.x1 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu25.config.f.x1 normal {m}} else {configure_entry .menu25.config.f.x1 disabled {m}}; configure_entry .menu25.config.f.x1 normal {n l}} else {configure_entry .menu25.config.f.x1 disabled {y n m l}}
	global CONFIG_BLK_DEV_MFM_AUTODETECT
	if {($CONFIG_ARCH_ACORN == 1) && ($CONFIG_ARCH_ARC == 1 || $CONFIG_ARCH_A5K == 1) && ($CONFIG_BLK_DEV_MFM != 0)} then {
	configure_entry .menu25.config.f.x2 normal {n l y}} else {configure_entry .menu25.config.f.x2 disabled {y n l}}
}


proc update_define_menu25 {} {
	update_define_mainmenu
	global CONFIG_MODULES
	global CONFIG_BLK_DEV_FD1772
	global CONFIG_BLK_DEV_MFM
set CONFIG_BLK_DEV_FD1772 [expr $CONFIG_BLK_DEV_FD1772|16]
set CONFIG_BLK_DEV_MFM [expr $CONFIG_BLK_DEV_MFM|16]
	global CONFIG_BLK_DEV_MFM_AUTODETECT
set CONFIG_BLK_DEV_MFM_AUTODETECT [expr $CONFIG_BLK_DEV_MFM_AUTODETECT|16]
	global CONFIG_ARCH_ACORN
	global CONFIG_ARCH_ARC
	global CONFIG_ARCH_A5K
	if {($CONFIG_ARCH_ACORN == 1) && ($CONFIG_ARCH_ARC == 1 || $CONFIG_ARCH_A5K == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_BLK_DEV_FD1772 == 2)} then {set CONFIG_BLK_DEV_FD1772 1}; set CONFIG_BLK_DEV_FD1772 [expr $CONFIG_BLK_DEV_FD1772&15]}
	if {($CONFIG_ARCH_ACORN == 1) && ($CONFIG_ARCH_ARC == 1 || $CONFIG_ARCH_A5K == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_BLK_DEV_MFM == 2)} then {set CONFIG_BLK_DEV_MFM 1}; set CONFIG_BLK_DEV_MFM [expr $CONFIG_BLK_DEV_MFM&15]}
	if {($CONFIG_ARCH_ACORN == 1) && ($CONFIG_ARCH_ARC == 1 || $CONFIG_ARCH_A5K == 1) && ($CONFIG_BLK_DEV_MFM != 0)} then {
	set CONFIG_BLK_DEV_MFM_AUTODETECT [expr $CONFIG_BLK_DEV_MFM_AUTODETECT&15]}
}


menu_option menu26 26 "Networking options"
proc menu26 {w title} {
	set oldFocus [focus]
	catch {destroy $w; unregister_active 26}
	toplevel $w -class Dialog
	wm withdraw $w
	global active_menus
	set active_menus [lsort -integer [linsert $active_menus end 26]]
	message $w.m -width 400 -aspect 300 -text \
		"Networking options"  -relief raised
	pack $w.m -pady 10 -side top -padx 10
	wm title $w "Networking options" 

	bind $w <Escape> "catch {focus $oldFocus}; destroy $w; unregister_active 26; break"
	set nextscript "catch {focus $oldFocus}; menu27 .menu27 \"$title\""
	frame $w.f
	button $w.f.back -text "Main Menu" \
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 26"
	button $w.f.next -text "Next" -underline 0\
		-width 15 -command $nextscript
	bind all <Alt-n> $nextscript
	button $w.f.prev -text "Prev" -underline 0\
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 26; menu25 .menu25 \"$title\""
	bind $w <Alt-p> "catch {focus $oldFocus}; destroy $w; unregister_active 26; menu25 .menu25 \"$title\";break"
	pack $w.f.back $w.f.next $w.f.prev -side left -expand on
	pack $w.f -pady 10 -side bottom -anchor w -fill x
	frame $w.topline -relief ridge -borderwidth 2 -height 2
	pack $w.topline -side top -fill x

	frame $w.botline -relief ridge -borderwidth 2 -height 2
	pack $w.botline -side bottom -fill x

	frame $w.config
	pack $w.config -fill y -expand on

	scrollbar $w.config.vscroll -command "$w.config.canvas yview"
	pack $w.config.vscroll -side right -fill y

	canvas $w.config.canvas -height 1\
		-relief flat -borderwidth 0 -yscrollcommand "$w.config.vscroll set" \
		-width [expr [winfo screenwidth .] * 1 / 2] 
	frame $w.config.f
	bind $w <Key-Down> "$w.config.canvas yview scroll  1 unit;break;"
	bind $w <Key-Up> "$w.config.canvas yview scroll  -1 unit;break;"
	bind $w <Key-Next> "$w.config.canvas yview scroll  1 page;break;"
	bind $w <Key-Prior> "$w.config.canvas yview scroll  -1 page;break;"
	bind $w <Key-Home> "$w.config.canvas yview moveto 0;break;"
	bind $w <Key-End> "$w.config.canvas yview moveto 1 ;break;"
	pack $w.config.canvas -side right -fill y


	tristate $w.config.f 26 0 "Packet socket" CONFIG_PACKET
	bool $w.config.f 26 1 "  Packet socket: mmapped IO" CONFIG_PACKET_MMAP
	tristate $w.config.f 26 2 "Netlink device emulation" CONFIG_NETLINK_DEV
	bool $w.config.f 26 3 "Network packet filtering (replaces ipchains)" CONFIG_NETFILTER
	bool $w.config.f 26 4 "  Network packet filtering debugging" CONFIG_NETFILTER_DEBUG
	bool $w.config.f 26 5 "Socket Filtering" CONFIG_FILTER
	tristate $w.config.f 26 6 "Unix domain sockets" CONFIG_UNIX
	bool $w.config.f 26 7 "TCP/IP networking" CONFIG_INET
	bool $w.config.f 26 8 "  IP: multicasting" CONFIG_IP_MULTICAST
	bool $w.config.f 26 9 "  IP: advanced router" CONFIG_IP_ADVANCED_ROUTER
	bool $w.config.f 26 10 "    IP: policy routing" CONFIG_IP_MULTIPLE_TABLES
	bool $w.config.f 26 11 "      IP: use netfilter MARK value as routing key" CONFIG_IP_ROUTE_FWMARK
	bool $w.config.f 26 12 "      IP: fast network address translation" CONFIG_IP_ROUTE_NAT
	bool $w.config.f 26 13 "    IP: equal cost multipath" CONFIG_IP_ROUTE_MULTIPATH
	dep_bool $w.config.f 26 14 "      IP: Use sequential path selection." CONFIG_IP_ROUTE_MULTIPATH_SEQUENTIAL
	bool $w.config.f 26 15 "    IP: use TOS value as routing key" CONFIG_IP_ROUTE_TOS
	bool $w.config.f 26 16 "    IP: verbose route monitoring" CONFIG_IP_ROUTE_VERBOSE
	bool $w.config.f 26 17 "  IP: kernel level autoconfiguration" CONFIG_IP_PNP
	bool $w.config.f 26 18 "    IP: DHCP support" CONFIG_IP_PNP_DHCP
	bool $w.config.f 26 19 "    IP: BOOTP support" CONFIG_IP_PNP_BOOTP
	bool $w.config.f 26 20 "    IP: RARP support" CONFIG_IP_PNP_RARP
	bool $w.config.f 26 21 "ARP MAC Limiting" CONFIG_NET_ARP_LIMIT
	int $w.config.f 26 22 "Maximum number of MAC addresses" CONFIG_ARP_LIMIT
	tristate $w.config.f 26 23 "  IP: tunneling" CONFIG_NET_IPIP
	tristate $w.config.f 26 24 "  IP: GRE tunnels over IP" CONFIG_NET_IPGRE
	bool $w.config.f 26 25 "    IP: broadcast GRE over IP" CONFIG_NET_IPGRE_BROADCAST
	bool $w.config.f 26 26 "  IP: multicast routing" CONFIG_IP_MROUTE
	bool $w.config.f 26 27 "    IP: PIM-SM version 1 support" CONFIG_IP_PIMSM_V1
	bool $w.config.f 26 28 "    IP: PIM-SM version 2 support" CONFIG_IP_PIMSM_V2
	bool $w.config.f 26 29 "  IP: ARP daemon support (EXPERIMENTAL)" CONFIG_ARPD
	bool $w.config.f 26 30 "  IP: TCP Explicit Congestion Notification support" CONFIG_INET_ECN
	bool $w.config.f 26 31 "  IP: TCP syncookie support (disabled per default)" CONFIG_SYN_COOKIES
	submenu $w.config.f 26 32 "  IP: Netfilter Configuration" 27
	submenu $w.config.f 26 33 "  IP: Virtual Server Configuration" 28
	tristate $w.config.f 26 34 "  The IPv6 protocol (EXPERIMENTAL)" CONFIG_IPV6
	submenu $w.config.f 26 35 "  IPv6: Netfilter Configuration" 29
	tristate $w.config.f 26 36 "  Kernel httpd acceleration (EXPERIMENTAL)" CONFIG_KHTTPD
	submenu $w.config.f 26 37 "   SCTP Configuration (EXPERIMENTAL)" 30
	tristate $w.config.f 26 38 "Asynchronous Transfer Mode (ATM) (EXPERIMENTAL)" CONFIG_ATM
	dep_tristate $w.config.f 26 39 "  Classical IP over ATM" CONFIG_ATM_CLIP
	bool $w.config.f 26 40 "    Do NOT send ICMP if no neighbour" CONFIG_ATM_CLIP_NO_ICMP
	dep_tristate $w.config.f 26 41 "  LAN Emulation (LANE) support" CONFIG_ATM_LANE
	tristate $w.config.f 26 42 "    Multi-Protocol Over ATM (MPOA) support" CONFIG_ATM_MPOA
	dep_tristate $w.config.f 26 43 "  RFC1483/2684 Bridged protocols" CONFIG_ATM_BR2684
	bool $w.config.f 26 44 "    Per-VC IP filter kludge" CONFIG_ATM_BR2684_IPFILTER
	tristate $w.config.f 26 45 "802.1Q VLAN Support" CONFIG_VLAN_8021Q
	comment $w.config.f 26 46 " "
	tristate $w.config.f 26 47 "The IPX protocol" CONFIG_IPX
	bool $w.config.f 26 48 "  IPX: Full internal IPX network" CONFIG_IPX_INTERN
	tristate $w.config.f 26 49 "Appletalk protocol support" CONFIG_ATALK
	submenu $w.config.f 26 50 "Appletalk devices" 31
	tristate $w.config.f 26 51 "DECnet Support" CONFIG_DECNET
	bool $w.config.f 26 52 "  DECnet: SIOCGIFCONF support" CONFIG_DECNET_SIOCGIFCONF
	bool $w.config.f 26 53 "  DECnet: router support (EXPERIMENTAL)" CONFIG_DECNET_ROUTER
	bool $w.config.f 26 54 "    DECnet: use FWMARK value as routing key (EXPERIMENTAL)" CONFIG_DECNET_ROUTE_FWMARK
	dep_tristate $w.config.f 26 55 "802.1d Ethernet Bridging" CONFIG_BRIDGE
	dep_tristate $w.config.f 26 56 "  Bridge: ebtables" CONFIG_BRIDGE_NF_EBTABLES
	dep_tristate $w.config.f 26 57 "    ebt: filter table support" CONFIG_BRIDGE_EBT_T_FILTER
	dep_tristate $w.config.f 26 58 "    ebt: nat table support" CONFIG_BRIDGE_EBT_T_NAT
	dep_tristate $w.config.f 26 59 "    ebt: broute table support" CONFIG_BRIDGE_EBT_BROUTE
	dep_tristate $w.config.f 26 60 "    ebt: log support" CONFIG_BRIDGE_EBT_LOG
	dep_tristate $w.config.f 26 61 "    ebt: IP filter support" CONFIG_BRIDGE_EBT_IPF
	dep_tristate $w.config.f 26 62 "    ebt: ARP filter support" CONFIG_BRIDGE_EBT_ARPF
	dep_tristate $w.config.f 26 63 "    ebt: 802.1Q VLAN filter support" CONFIG_BRIDGE_EBT_VLANF
	dep_tristate $w.config.f 26 64 "    ebt: mark filter support" CONFIG_BRIDGE_EBT_MARKF
	dep_tristate $w.config.f 26 65 "    ebt: snat target support" CONFIG_BRIDGE_EBT_SNAT
	dep_tristate $w.config.f 26 66 "    ebt: dnat target support" CONFIG_BRIDGE_EBT_DNAT
	dep_tristate $w.config.f 26 67 "    ebt: redirect target support" CONFIG_BRIDGE_EBT_REDIRECT
	dep_tristate $w.config.f 26 68 "    ebt: mark target support" CONFIG_BRIDGE_EBT_MARK_T
	tristate $w.config.f 26 69 "CCITT X.25 Packet Layer (EXPERIMENTAL)" CONFIG_X25
	tristate $w.config.f 26 70 "LAPB Data Link Driver (EXPERIMENTAL)" CONFIG_LAPB
	bool $w.config.f 26 71 "802.2 LLC (EXPERIMENTAL)" CONFIG_LLC
	bool $w.config.f 26 72 "Frame Diverter (EXPERIMENTAL)" CONFIG_NET_DIVERT
	tristate $w.config.f 26 73 "Acorn Econet/AUN protocols (EXPERIMENTAL)" CONFIG_ECONET
	bool $w.config.f 26 74 "  AUN over UDP" CONFIG_ECONET_AUNUDP
	bool $w.config.f 26 75 "  Native Econet" CONFIG_ECONET_NATIVE
	tristate $w.config.f 26 76 "WAN router" CONFIG_WAN_ROUTER
	bool $w.config.f 26 77 "Fast switching (read help!)" CONFIG_NET_FASTROUTE
	bool $w.config.f 26 78 "Forwarding between high speed interfaces" CONFIG_NET_HW_FLOWCONTROL
	submenu $w.config.f 26 79 "QoS and/or fair queueing" 32
	tristate $w.config.f 26 80 "IP Security Protocol (FreeS/WAN IPSEC)" CONFIG_IPSEC
	comment $w.config.f 26 81 "IPSec options (FreeS/WAN)"
	bool $w.config.f 26 82 "   IPSEC: IP-in-IP encapsulation (tunnel mode)" CONFIG_IPSEC_IPIP
	bool $w.config.f 26 83 "   IPSEC: Authentication Header" CONFIG_IPSEC_AH
	bool $w.config.f 26 84 "      HMAC-MD5 authentication algorithm" CONFIG_IPSEC_AUTH_HMAC_MD5
	bool $w.config.f 26 85 "      HMAC-SHA1 authentication algorithm" CONFIG_IPSEC_AUTH_HMAC_SHA1
	bool $w.config.f 26 86 "   IPSEC: Encapsulating Security Payload" CONFIG_IPSEC_ESP
	bool $w.config.f 26 87 "      DES encryption algorithm" CONFIG_IPSEC_ENC_DES
	bool $w.config.f 26 88 "      3DES encryption algorithm" CONFIG_IPSEC_ENC_3DES
	bool $w.config.f 26 89 "   IPSEC: IP Compression" CONFIG_IPSEC_IPCOMP
	bool $w.config.f 26 90 "      LZS compression" CONFIG_IPSEC_IPCOMP_LZS
	bool $w.config.f 26 91 "   IPSEC Debugging Option" CONFIG_IPSEC_DEBUG
	bool $w.config.f 26 92 "   IPSEC NAT-Traversal" CONFIG_IPSEC_NAT_TRAVERSAL
	submenu $w.config.f 26 93 "Network testing" 33



	focus $w
	update_active
	global winx; global winy
	set winx [expr [winfo x .]+30]; set winy [expr [winfo y .]+30]
	if {[winfo exists $w]} then {wm geometry $w +$winx+$winy}
	update idletasks
	if {[winfo exists $w]} then  {$w.config.canvas create window 0 0 -anchor nw -window $w.config.f

	$w.config.canvas configure \
		-width [expr [winfo reqwidth $w.config.f] + 1]\
		-scrollregion "-1 -1 [expr [winfo reqwidth $w.config.f] + 1] \
			 [expr [winfo reqheight $w.config.f] + 1]"

	set winy [expr [winfo reqh $w] - [winfo reqh $w.config.canvas]]
	set scry [expr [winfo screenh $w] / 2]
	set maxy [expr [winfo screenh $w] * 3 / 4]
	set canvtotal [expr [winfo reqh $w.config.f] + 2]
	if [expr $winy + $canvtotal < $maxy] {
		$w.config.canvas configure -height $canvtotal
	} else {
		$w.config.canvas configure -height [expr $scry - $winy]
		}
	}
	update idletasks
	if {[winfo exists $w]} then {
	wm maxsize $w [winfo width $w] [winfo screenheight $w]
	wm minsize $w [winfo width $w] 100

	wm deiconify $w
}
}

proc update_menu26 {} {
	global CONFIG_MODULES
	global CONFIG_NET
	global CONFIG_PACKET
	if {($CONFIG_NET == 1)} then {
	configure_entry .menu26.config.f.x0 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu26.config.f.x0 normal {m}} else {configure_entry .menu26.config.f.x0 disabled {m}}; configure_entry .menu26.config.f.x0 normal {n l}} else {configure_entry .menu26.config.f.x0 disabled {y n m l}}
	global CONFIG_PACKET_MMAP
	if {($CONFIG_NET == 1) && ($CONFIG_PACKET != 0)} then {
	configure_entry .menu26.config.f.x1 normal {n l y}} else {configure_entry .menu26.config.f.x1 disabled {y n l}}
	global CONFIG_NETLINK_DEV
	if {($CONFIG_NET == 1)} then {
	configure_entry .menu26.config.f.x2 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu26.config.f.x2 normal {m}} else {configure_entry .menu26.config.f.x2 disabled {m}}; configure_entry .menu26.config.f.x2 normal {n l}} else {configure_entry .menu26.config.f.x2 disabled {y n m l}}
	global CONFIG_NETFILTER
	if {($CONFIG_NET == 1)} then {
	configure_entry .menu26.config.f.x3 normal {n l y}} else {configure_entry .menu26.config.f.x3 disabled {y n l}}
	global CONFIG_NETFILTER_DEBUG
	if {($CONFIG_NET == 1) && ($CONFIG_NETFILTER == 1)} then {
	configure_entry .menu26.config.f.x4 normal {n l y}} else {configure_entry .menu26.config.f.x4 disabled {y n l}}
	global CONFIG_FILTER
	if {($CONFIG_NET == 1)} then {
	configure_entry .menu26.config.f.x5 normal {n l y}} else {configure_entry .menu26.config.f.x5 disabled {y n l}}
	global CONFIG_UNIX
	if {($CONFIG_NET == 1)} then {
	configure_entry .menu26.config.f.x6 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu26.config.f.x6 normal {m}} else {configure_entry .menu26.config.f.x6 disabled {m}}; configure_entry .menu26.config.f.x6 normal {n l}} else {configure_entry .menu26.config.f.x6 disabled {y n m l}}
	global CONFIG_INET
	if {($CONFIG_NET == 1)} then {
	configure_entry .menu26.config.f.x7 normal {n l y}} else {configure_entry .menu26.config.f.x7 disabled {y n l}}
	global CONFIG_IP_MULTICAST
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1)} then {
	configure_entry .menu26.config.f.x8 normal {n l y}} else {configure_entry .menu26.config.f.x8 disabled {y n l}}
	global CONFIG_IP_ADVANCED_ROUTER
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1)} then {
	configure_entry .menu26.config.f.x9 normal {n l y}} else {configure_entry .menu26.config.f.x9 disabled {y n l}}
	global CONFIG_IP_MULTIPLE_TABLES
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_IP_ADVANCED_ROUTER == 1)} then {
	configure_entry .menu26.config.f.x10 normal {n l y}} else {configure_entry .menu26.config.f.x10 disabled {y n l}}
	global CONFIG_IP_ROUTE_FWMARK
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_IP_ADVANCED_ROUTER == 1) && ($CONFIG_IP_MULTIPLE_TABLES == 1) && ($CONFIG_NETFILTER == 1)} then {
	configure_entry .menu26.config.f.x11 normal {n l y}} else {configure_entry .menu26.config.f.x11 disabled {y n l}}
	global CONFIG_IP_ROUTE_NAT
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_IP_ADVANCED_ROUTER == 1) && ($CONFIG_IP_MULTIPLE_TABLES == 1)} then {
	configure_entry .menu26.config.f.x12 normal {n l y}} else {configure_entry .menu26.config.f.x12 disabled {y n l}}
	global CONFIG_IP_ROUTE_MULTIPATH
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_IP_ADVANCED_ROUTER == 1)} then {
	configure_entry .menu26.config.f.x13 normal {n l y}} else {configure_entry .menu26.config.f.x13 disabled {y n l}}
	global CONFIG_IP_ROUTE_MULTIPATH_SEQUENTIAL
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_IP_ADVANCED_ROUTER == 1) && ($CONFIG_IP_ROUTE_MULTIPATH == 1 || $CONFIG_IP_ROUTE_MULTIPATH == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP_ROUTE_MULTIPATH]];set CONFIG_IP_ROUTE_MULTIPATH_SEQUENTIAL [sync_bool $CONFIG_IP_ROUTE_MULTIPATH_SEQUENTIAL $tmpvar_dep 0];if {$tmpvar_dep != 1} then {configure_entry .menu26.config.f.x14 disabled {y};} else {configure_entry .menu26.config.f.x14 normal {y};}; configure_entry .menu26.config.f.x14 normal {n l}} else {configure_entry .menu26.config.f.x14 disabled {y n l}}
	global CONFIG_IP_ROUTE_TOS
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_IP_ADVANCED_ROUTER == 1)} then {
	configure_entry .menu26.config.f.x15 normal {n l y}} else {configure_entry .menu26.config.f.x15 disabled {y n l}}
	global CONFIG_IP_ROUTE_VERBOSE
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_IP_ADVANCED_ROUTER == 1)} then {
	configure_entry .menu26.config.f.x16 normal {n l y}} else {configure_entry .menu26.config.f.x16 disabled {y n l}}
	global CONFIG_IP_PNP
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1)} then {
	configure_entry .menu26.config.f.x17 normal {n l y}} else {configure_entry .menu26.config.f.x17 disabled {y n l}}
	global CONFIG_IP_PNP_DHCP
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_IP_PNP == 1)} then {
	configure_entry .menu26.config.f.x18 normal {n l y}} else {configure_entry .menu26.config.f.x18 disabled {y n l}}
	global CONFIG_IP_PNP_BOOTP
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_IP_PNP == 1)} then {
	configure_entry .menu26.config.f.x19 normal {n l y}} else {configure_entry .menu26.config.f.x19 disabled {y n l}}
	global CONFIG_IP_PNP_RARP
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_IP_PNP == 1)} then {
	configure_entry .menu26.config.f.x20 normal {n l y}} else {configure_entry .menu26.config.f.x20 disabled {y n l}}
	global CONFIG_NET_ARP_LIMIT
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1)} then {
	configure_entry .menu26.config.f.x21 normal {n l y}} else {configure_entry .menu26.config.f.x21 disabled {y n l}}
	global CONFIG_ARP_LIMIT
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NET_ARP_LIMIT == 1)} then {.menu26.config.f.x22.x configure -state normal -foreground [ cget .ref -foreground ]; .menu26.config.f.x22.l configure -state normal; } else {.menu26.config.f.x22.x configure -state disabled -foreground [ cget .ref -disabledforeground ]; .menu26.config.f.x22.l configure -state disabled}
	global CONFIG_NET_IPIP
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1)} then {
	configure_entry .menu26.config.f.x23 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu26.config.f.x23 normal {m}} else {configure_entry .menu26.config.f.x23 disabled {m}}; configure_entry .menu26.config.f.x23 normal {n l}} else {configure_entry .menu26.config.f.x23 disabled {y n m l}}
	global CONFIG_NET_IPGRE
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1)} then {
	configure_entry .menu26.config.f.x24 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu26.config.f.x24 normal {m}} else {configure_entry .menu26.config.f.x24 disabled {m}}; configure_entry .menu26.config.f.x24 normal {n l}} else {configure_entry .menu26.config.f.x24 disabled {y n m l}}
	global CONFIG_NET_IPGRE_BROADCAST
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_IP_MULTICAST == 1) && ($CONFIG_NET_IPGRE != 0)} then {
	configure_entry .menu26.config.f.x25 normal {n l y}} else {configure_entry .menu26.config.f.x25 disabled {y n l}}
	global CONFIG_IP_MROUTE
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_IP_MULTICAST == 1)} then {
	configure_entry .menu26.config.f.x26 normal {n l y}} else {configure_entry .menu26.config.f.x26 disabled {y n l}}
	global CONFIG_IP_PIMSM_V1
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_IP_MULTICAST == 1) && ($CONFIG_IP_MROUTE == 1)} then {
	configure_entry .menu26.config.f.x27 normal {n l y}} else {configure_entry .menu26.config.f.x27 disabled {y n l}}
	global CONFIG_IP_PIMSM_V2
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_IP_MULTICAST == 1) && ($CONFIG_IP_MROUTE == 1)} then {
	configure_entry .menu26.config.f.x28 normal {n l y}} else {configure_entry .menu26.config.f.x28 disabled {y n l}}
	global CONFIG_EXPERIMENTAL
	global CONFIG_ARPD
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_EXPERIMENTAL == 1)} then {
	configure_entry .menu26.config.f.x29 normal {n l y}} else {configure_entry .menu26.config.f.x29 disabled {y n l}}
	global CONFIG_INET_ECN
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1)} then {
	configure_entry .menu26.config.f.x30 normal {n l y}} else {configure_entry .menu26.config.f.x30 disabled {y n l}}
	global CONFIG_SYN_COOKIES
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1)} then {
	configure_entry .menu26.config.f.x31 normal {n l y}} else {configure_entry .menu26.config.f.x31 disabled {y n l}}
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0)} then {configure_entry .menu26.config.f.x32 normal {m}} else {configure_entry .menu26.config.f.x32 disabled {m}}
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0)} then {configure_entry .menu26.config.f.x33 normal {m}} else {configure_entry .menu26.config.f.x33 disabled {m}}
	global CONFIG_IPV6
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_EXPERIMENTAL == 1)} then {
	configure_entry .menu26.config.f.x34 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu26.config.f.x34 normal {m}} else {configure_entry .menu26.config.f.x34 disabled {m}}; configure_entry .menu26.config.f.x34 normal {n l}} else {configure_entry .menu26.config.f.x34 disabled {y n m l}}
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_IPV6 != 0) && ($CONFIG_NETFILTER != 0)} then {configure_entry .menu26.config.f.x35 normal {m}} else {configure_entry .menu26.config.f.x35 disabled {m}}
	global CONFIG_KHTTPD
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_EXPERIMENTAL == 1)} then {
	configure_entry .menu26.config.f.x36 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu26.config.f.x36 normal {m}} else {configure_entry .menu26.config.f.x36 disabled {m}}; configure_entry .menu26.config.f.x36 normal {n l}} else {configure_entry .menu26.config.f.x36 disabled {y n m l}}
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_EXPERIMENTAL == 1)} then {configure_entry .menu26.config.f.x37 normal {m}} else {configure_entry .menu26.config.f.x37 disabled {m}}
	global CONFIG_ATM
	if {($CONFIG_NET == 1) && ($CONFIG_EXPERIMENTAL == 1)} then {
	configure_entry .menu26.config.f.x38 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu26.config.f.x38 normal {m}} else {configure_entry .menu26.config.f.x38 disabled {m}}; configure_entry .menu26.config.f.x38 normal {n l}} else {configure_entry .menu26.config.f.x38 disabled {y n m l}}
	global CONFIG_ATM_CLIP
	if {($CONFIG_NET == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_ATM == 1 || $CONFIG_ATM == 2) && ($CONFIG_INET == 1) && ($CONFIG_ATM == 1 || $CONFIG_ATM == 2 || $CONFIG_ATM == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ATM]];set CONFIG_ATM_CLIP [sync_tristate $CONFIG_ATM_CLIP $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu26.config.f.x39 disabled {y}} else {configure_entry .menu26.config.f.x39 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu26.config.f.x39 disabled {m}} else {configure_entry .menu26.config.f.x39 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu26.config.f.x39 normal {m}} else {configure_entry .menu26.config.f.x39 disabled {m}}; configure_entry .menu26.config.f.x39 normal {n l}} else {configure_entry .menu26.config.f.x39 disabled {y n m l}}
	global CONFIG_ATM_CLIP_NO_ICMP
	if {($CONFIG_NET == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_ATM == 1 || $CONFIG_ATM == 2) && ($CONFIG_INET == 1) && ($CONFIG_ATM_CLIP != 0)} then {
	configure_entry .menu26.config.f.x40 normal {n l y}} else {configure_entry .menu26.config.f.x40 disabled {y n l}}
	global CONFIG_ATM_LANE
	if {($CONFIG_NET == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_ATM == 1 || $CONFIG_ATM == 2) && ($CONFIG_ATM == 1 || $CONFIG_ATM == 2 || $CONFIG_ATM == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ATM]];set CONFIG_ATM_LANE [sync_tristate $CONFIG_ATM_LANE $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu26.config.f.x41 disabled {y}} else {configure_entry .menu26.config.f.x41 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu26.config.f.x41 disabled {m}} else {configure_entry .menu26.config.f.x41 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu26.config.f.x41 normal {m}} else {configure_entry .menu26.config.f.x41 disabled {m}}; configure_entry .menu26.config.f.x41 normal {n l}} else {configure_entry .menu26.config.f.x41 disabled {y n m l}}
	global CONFIG_ATM_MPOA
	if {($CONFIG_NET == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_ATM == 1 || $CONFIG_ATM == 2) && ($CONFIG_INET == 1 && $CONFIG_ATM_LANE != 0)} then {
	configure_entry .menu26.config.f.x42 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu26.config.f.x42 normal {m}} else {configure_entry .menu26.config.f.x42 disabled {m}}; configure_entry .menu26.config.f.x42 normal {n l}} else {configure_entry .menu26.config.f.x42 disabled {y n m l}}
	global CONFIG_ATM_BR2684
	if {($CONFIG_NET == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_ATM == 1 || $CONFIG_ATM == 2) && ($CONFIG_ATM == 1 || $CONFIG_ATM == 2 || $CONFIG_ATM == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ATM]];set CONFIG_ATM_BR2684 [sync_tristate $CONFIG_ATM_BR2684 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu26.config.f.x43 disabled {y}} else {configure_entry .menu26.config.f.x43 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu26.config.f.x43 disabled {m}} else {configure_entry .menu26.config.f.x43 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu26.config.f.x43 normal {m}} else {configure_entry .menu26.config.f.x43 disabled {m}}; configure_entry .menu26.config.f.x43 normal {n l}} else {configure_entry .menu26.config.f.x43 disabled {y n m l}}
	global CONFIG_ATM_BR2684_IPFILTER
	if {($CONFIG_NET == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_ATM == 1 || $CONFIG_ATM == 2) && ($CONFIG_ATM_BR2684 != 0)} then {
	configure_entry .menu26.config.f.x44 normal {n l y}} else {configure_entry .menu26.config.f.x44 disabled {y n l}}
	global CONFIG_VLAN_8021Q
	if {($CONFIG_NET == 1)} then {
	configure_entry .menu26.config.f.x45 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu26.config.f.x45 normal {m}} else {configure_entry .menu26.config.f.x45 disabled {m}}; configure_entry .menu26.config.f.x45 normal {n l}} else {configure_entry .menu26.config.f.x45 disabled {y n m l}}
	if {($CONFIG_NET == 1)} then {configure_entry .menu26.config.f.x46 normal {m}} else {configure_entry .menu26.config.f.x46 disabled {m}}
	global CONFIG_IPX
	if {($CONFIG_NET == 1)} then {
	configure_entry .menu26.config.f.x47 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu26.config.f.x47 normal {m}} else {configure_entry .menu26.config.f.x47 disabled {m}}; configure_entry .menu26.config.f.x47 normal {n l}} else {configure_entry .menu26.config.f.x47 disabled {y n m l}}
	global CONFIG_IPX_INTERN
	if {($CONFIG_NET == 1) && ($CONFIG_IPX != 0)} then {
	configure_entry .menu26.config.f.x48 normal {n l y}} else {configure_entry .menu26.config.f.x48 disabled {y n l}}
	global CONFIG_ATALK
	if {($CONFIG_NET == 1)} then {
	configure_entry .menu26.config.f.x49 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu26.config.f.x49 normal {m}} else {configure_entry .menu26.config.f.x49 disabled {m}}; configure_entry .menu26.config.f.x49 normal {n l}} else {configure_entry .menu26.config.f.x49 disabled {y n m l}}
	if {($CONFIG_NET == 1)} then {configure_entry .menu26.config.f.x50 normal {m}} else {configure_entry .menu26.config.f.x50 disabled {m}}
	global CONFIG_DECNET
	if {($CONFIG_NET == 1)} then {
	configure_entry .menu26.config.f.x51 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu26.config.f.x51 normal {m}} else {configure_entry .menu26.config.f.x51 disabled {m}}; configure_entry .menu26.config.f.x51 normal {n l}} else {configure_entry .menu26.config.f.x51 disabled {y n m l}}
	global CONFIG_DECNET_SIOCGIFCONF
	if {($CONFIG_NET == 1) && ($CONFIG_DECNET != 0)} then {
	configure_entry .menu26.config.f.x52 normal {n l y}} else {configure_entry .menu26.config.f.x52 disabled {y n l}}
	global CONFIG_DECNET_ROUTER
	if {($CONFIG_NET == 1) && ($CONFIG_DECNET != 0) && ($CONFIG_EXPERIMENTAL == 1)} then {
	configure_entry .menu26.config.f.x53 normal {n l y}} else {configure_entry .menu26.config.f.x53 disabled {y n l}}
	global CONFIG_DECNET_ROUTE_FWMARK
	if {($CONFIG_NET == 1) && ($CONFIG_DECNET != 0) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_DECNET_ROUTER == 1) && ($CONFIG_NETFILTER == 1)} then {
	configure_entry .menu26.config.f.x54 normal {n l y}} else {configure_entry .menu26.config.f.x54 disabled {y n l}}
	global CONFIG_BRIDGE
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1 || $CONFIG_INET == 2 || $CONFIG_INET == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_INET]];set CONFIG_BRIDGE [sync_tristate $CONFIG_BRIDGE $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu26.config.f.x55 disabled {y}} else {configure_entry .menu26.config.f.x55 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu26.config.f.x55 disabled {m}} else {configure_entry .menu26.config.f.x55 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu26.config.f.x55 normal {m}} else {configure_entry .menu26.config.f.x55 disabled {m}}; configure_entry .menu26.config.f.x55 normal {n l}} else {configure_entry .menu26.config.f.x55 disabled {y n m l}}
	global CONFIG_BRIDGE_NF_EBTABLES
	if {($CONFIG_NET == 1) && ($CONFIG_BRIDGE != 0 && $CONFIG_NETFILTER != 0) && ($CONFIG_BRIDGE == 1 || $CONFIG_BRIDGE == 2 || $CONFIG_BRIDGE == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BRIDGE]];set CONFIG_BRIDGE_NF_EBTABLES [sync_tristate $CONFIG_BRIDGE_NF_EBTABLES $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu26.config.f.x56 disabled {y}} else {configure_entry .menu26.config.f.x56 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu26.config.f.x56 disabled {m}} else {configure_entry .menu26.config.f.x56 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu26.config.f.x56 normal {m}} else {configure_entry .menu26.config.f.x56 disabled {m}}; configure_entry .menu26.config.f.x56 normal {n l}} else {configure_entry .menu26.config.f.x56 disabled {y n m l}}
	global CONFIG_BRIDGE_EBT_T_FILTER
	if {($CONFIG_NET == 1) && ($CONFIG_BRIDGE != 0 && $CONFIG_NETFILTER != 0) && ($CONFIG_BRIDGE_NF_EBTABLES == 1 || $CONFIG_BRIDGE_NF_EBTABLES == 2 || $CONFIG_BRIDGE_NF_EBTABLES == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BRIDGE_NF_EBTABLES]];set CONFIG_BRIDGE_EBT_T_FILTER [sync_tristate $CONFIG_BRIDGE_EBT_T_FILTER $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu26.config.f.x57 disabled {y}} else {configure_entry .menu26.config.f.x57 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu26.config.f.x57 disabled {m}} else {configure_entry .menu26.config.f.x57 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu26.config.f.x57 normal {m}} else {configure_entry .menu26.config.f.x57 disabled {m}}; configure_entry .menu26.config.f.x57 normal {n l}} else {configure_entry .menu26.config.f.x57 disabled {y n m l}}
	global CONFIG_BRIDGE_EBT_T_NAT
	if {($CONFIG_NET == 1) && ($CONFIG_BRIDGE != 0 && $CONFIG_NETFILTER != 0) && ($CONFIG_BRIDGE_NF_EBTABLES == 1 || $CONFIG_BRIDGE_NF_EBTABLES == 2 || $CONFIG_BRIDGE_NF_EBTABLES == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BRIDGE_NF_EBTABLES]];set CONFIG_BRIDGE_EBT_T_NAT [sync_tristate $CONFIG_BRIDGE_EBT_T_NAT $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu26.config.f.x58 disabled {y}} else {configure_entry .menu26.config.f.x58 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu26.config.f.x58 disabled {m}} else {configure_entry .menu26.config.f.x58 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu26.config.f.x58 normal {m}} else {configure_entry .menu26.config.f.x58 disabled {m}}; configure_entry .menu26.config.f.x58 normal {n l}} else {configure_entry .menu26.config.f.x58 disabled {y n m l}}
	global CONFIG_BRIDGE_EBT_BROUTE
	if {($CONFIG_NET == 1) && ($CONFIG_BRIDGE != 0 && $CONFIG_NETFILTER != 0) && ($CONFIG_BRIDGE_NF_EBTABLES == 1 || $CONFIG_BRIDGE_NF_EBTABLES == 2 || $CONFIG_BRIDGE_NF_EBTABLES == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BRIDGE_NF_EBTABLES]];set CONFIG_BRIDGE_EBT_BROUTE [sync_tristate $CONFIG_BRIDGE_EBT_BROUTE $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu26.config.f.x59 disabled {y}} else {configure_entry .menu26.config.f.x59 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu26.config.f.x59 disabled {m}} else {configure_entry .menu26.config.f.x59 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu26.config.f.x59 normal {m}} else {configure_entry .menu26.config.f.x59 disabled {m}}; configure_entry .menu26.config.f.x59 normal {n l}} else {configure_entry .menu26.config.f.x59 disabled {y n m l}}
	global CONFIG_BRIDGE_EBT_LOG
	if {($CONFIG_NET == 1) && ($CONFIG_BRIDGE != 0 && $CONFIG_NETFILTER != 0) && ($CONFIG_BRIDGE_NF_EBTABLES == 1 || $CONFIG_BRIDGE_NF_EBTABLES == 2 || $CONFIG_BRIDGE_NF_EBTABLES == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BRIDGE_NF_EBTABLES]];set CONFIG_BRIDGE_EBT_LOG [sync_tristate $CONFIG_BRIDGE_EBT_LOG $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu26.config.f.x60 disabled {y}} else {configure_entry .menu26.config.f.x60 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu26.config.f.x60 disabled {m}} else {configure_entry .menu26.config.f.x60 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu26.config.f.x60 normal {m}} else {configure_entry .menu26.config.f.x60 disabled {m}}; configure_entry .menu26.config.f.x60 normal {n l}} else {configure_entry .menu26.config.f.x60 disabled {y n m l}}
	global CONFIG_BRIDGE_EBT_IPF
	if {($CONFIG_NET == 1) && ($CONFIG_BRIDGE != 0 && $CONFIG_NETFILTER != 0) && ($CONFIG_BRIDGE_NF_EBTABLES == 1 || $CONFIG_BRIDGE_NF_EBTABLES == 2 || $CONFIG_BRIDGE_NF_EBTABLES == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BRIDGE_NF_EBTABLES]];set CONFIG_BRIDGE_EBT_IPF [sync_tristate $CONFIG_BRIDGE_EBT_IPF $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu26.config.f.x61 disabled {y}} else {configure_entry .menu26.config.f.x61 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu26.config.f.x61 disabled {m}} else {configure_entry .menu26.config.f.x61 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu26.config.f.x61 normal {m}} else {configure_entry .menu26.config.f.x61 disabled {m}}; configure_entry .menu26.config.f.x61 normal {n l}} else {configure_entry .menu26.config.f.x61 disabled {y n m l}}
	global CONFIG_BRIDGE_EBT_ARPF
	if {($CONFIG_NET == 1) && ($CONFIG_BRIDGE != 0 && $CONFIG_NETFILTER != 0) && ($CONFIG_BRIDGE_NF_EBTABLES == 1 || $CONFIG_BRIDGE_NF_EBTABLES == 2 || $CONFIG_BRIDGE_NF_EBTABLES == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BRIDGE_NF_EBTABLES]];set CONFIG_BRIDGE_EBT_ARPF [sync_tristate $CONFIG_BRIDGE_EBT_ARPF $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu26.config.f.x62 disabled {y}} else {configure_entry .menu26.config.f.x62 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu26.config.f.x62 disabled {m}} else {configure_entry .menu26.config.f.x62 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu26.config.f.x62 normal {m}} else {configure_entry .menu26.config.f.x62 disabled {m}}; configure_entry .menu26.config.f.x62 normal {n l}} else {configure_entry .menu26.config.f.x62 disabled {y n m l}}
	global CONFIG_BRIDGE_EBT_VLANF
	if {($CONFIG_NET == 1) && ($CONFIG_BRIDGE != 0 && $CONFIG_NETFILTER != 0) && ($CONFIG_BRIDGE_NF_EBTABLES == 1 || $CONFIG_BRIDGE_NF_EBTABLES == 2 || $CONFIG_BRIDGE_NF_EBTABLES == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BRIDGE_NF_EBTABLES]];set CONFIG_BRIDGE_EBT_VLANF [sync_tristate $CONFIG_BRIDGE_EBT_VLANF $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu26.config.f.x63 disabled {y}} else {configure_entry .menu26.config.f.x63 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu26.config.f.x63 disabled {m}} else {configure_entry .menu26.config.f.x63 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu26.config.f.x63 normal {m}} else {configure_entry .menu26.config.f.x63 disabled {m}}; configure_entry .menu26.config.f.x63 normal {n l}} else {configure_entry .menu26.config.f.x63 disabled {y n m l}}
	global CONFIG_BRIDGE_EBT_MARKF
	if {($CONFIG_NET == 1) && ($CONFIG_BRIDGE != 0 && $CONFIG_NETFILTER != 0) && ($CONFIG_BRIDGE_NF_EBTABLES == 1 || $CONFIG_BRIDGE_NF_EBTABLES == 2 || $CONFIG_BRIDGE_NF_EBTABLES == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BRIDGE_NF_EBTABLES]];set CONFIG_BRIDGE_EBT_MARKF [sync_tristate $CONFIG_BRIDGE_EBT_MARKF $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu26.config.f.x64 disabled {y}} else {configure_entry .menu26.config.f.x64 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu26.config.f.x64 disabled {m}} else {configure_entry .menu26.config.f.x64 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu26.config.f.x64 normal {m}} else {configure_entry .menu26.config.f.x64 disabled {m}}; configure_entry .menu26.config.f.x64 normal {n l}} else {configure_entry .menu26.config.f.x64 disabled {y n m l}}
	global CONFIG_BRIDGE_EBT_SNAT
	if {($CONFIG_NET == 1) && ($CONFIG_BRIDGE != 0 && $CONFIG_NETFILTER != 0) && ($CONFIG_BRIDGE_NF_EBTABLES == 1 || $CONFIG_BRIDGE_NF_EBTABLES == 2 || $CONFIG_BRIDGE_NF_EBTABLES == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BRIDGE_NF_EBTABLES]];set CONFIG_BRIDGE_EBT_SNAT [sync_tristate $CONFIG_BRIDGE_EBT_SNAT $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu26.config.f.x65 disabled {y}} else {configure_entry .menu26.config.f.x65 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu26.config.f.x65 disabled {m}} else {configure_entry .menu26.config.f.x65 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu26.config.f.x65 normal {m}} else {configure_entry .menu26.config.f.x65 disabled {m}}; configure_entry .menu26.config.f.x65 normal {n l}} else {configure_entry .menu26.config.f.x65 disabled {y n m l}}
	global CONFIG_BRIDGE_EBT_DNAT
	if {($CONFIG_NET == 1) && ($CONFIG_BRIDGE != 0 && $CONFIG_NETFILTER != 0) && ($CONFIG_BRIDGE_NF_EBTABLES == 1 || $CONFIG_BRIDGE_NF_EBTABLES == 2 || $CONFIG_BRIDGE_NF_EBTABLES == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BRIDGE_NF_EBTABLES]];set CONFIG_BRIDGE_EBT_DNAT [sync_tristate $CONFIG_BRIDGE_EBT_DNAT $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu26.config.f.x66 disabled {y}} else {configure_entry .menu26.config.f.x66 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu26.config.f.x66 disabled {m}} else {configure_entry .menu26.config.f.x66 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu26.config.f.x66 normal {m}} else {configure_entry .menu26.config.f.x66 disabled {m}}; configure_entry .menu26.config.f.x66 normal {n l}} else {configure_entry .menu26.config.f.x66 disabled {y n m l}}
	global CONFIG_BRIDGE_EBT_REDIRECT
	if {($CONFIG_NET == 1) && ($CONFIG_BRIDGE != 0 && $CONFIG_NETFILTER != 0) && ($CONFIG_BRIDGE_NF_EBTABLES == 1 || $CONFIG_BRIDGE_NF_EBTABLES == 2 || $CONFIG_BRIDGE_NF_EBTABLES == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BRIDGE_NF_EBTABLES]];set CONFIG_BRIDGE_EBT_REDIRECT [sync_tristate $CONFIG_BRIDGE_EBT_REDIRECT $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu26.config.f.x67 disabled {y}} else {configure_entry .menu26.config.f.x67 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu26.config.f.x67 disabled {m}} else {configure_entry .menu26.config.f.x67 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu26.config.f.x67 normal {m}} else {configure_entry .menu26.config.f.x67 disabled {m}}; configure_entry .menu26.config.f.x67 normal {n l}} else {configure_entry .menu26.config.f.x67 disabled {y n m l}}
	global CONFIG_BRIDGE_EBT_MARK_T
	if {($CONFIG_NET == 1) && ($CONFIG_BRIDGE != 0 && $CONFIG_NETFILTER != 0) && ($CONFIG_BRIDGE_NF_EBTABLES == 1 || $CONFIG_BRIDGE_NF_EBTABLES == 2 || $CONFIG_BRIDGE_NF_EBTABLES == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BRIDGE_NF_EBTABLES]];set CONFIG_BRIDGE_EBT_MARK_T [sync_tristate $CONFIG_BRIDGE_EBT_MARK_T $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu26.config.f.x68 disabled {y}} else {configure_entry .menu26.config.f.x68 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu26.config.f.x68 disabled {m}} else {configure_entry .menu26.config.f.x68 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu26.config.f.x68 normal {m}} else {configure_entry .menu26.config.f.x68 disabled {m}}; configure_entry .menu26.config.f.x68 normal {n l}} else {configure_entry .menu26.config.f.x68 disabled {y n m l}}
	global CONFIG_X25
	if {($CONFIG_NET == 1) && ($CONFIG_EXPERIMENTAL == 1)} then {
	configure_entry .menu26.config.f.x69 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu26.config.f.x69 normal {m}} else {configure_entry .menu26.config.f.x69 disabled {m}}; configure_entry .menu26.config.f.x69 normal {n l}} else {configure_entry .menu26.config.f.x69 disabled {y n m l}}
	global CONFIG_LAPB
	if {($CONFIG_NET == 1) && ($CONFIG_EXPERIMENTAL == 1)} then {
	configure_entry .menu26.config.f.x70 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu26.config.f.x70 normal {m}} else {configure_entry .menu26.config.f.x70 disabled {m}}; configure_entry .menu26.config.f.x70 normal {n l}} else {configure_entry .menu26.config.f.x70 disabled {y n m l}}
	global CONFIG_LLC
	if {($CONFIG_NET == 1) && ($CONFIG_EXPERIMENTAL == 1)} then {
	configure_entry .menu26.config.f.x71 normal {n l y}} else {configure_entry .menu26.config.f.x71 disabled {y n l}}
	global CONFIG_NET_DIVERT
	if {($CONFIG_NET == 1) && ($CONFIG_EXPERIMENTAL == 1)} then {
	configure_entry .menu26.config.f.x72 normal {n l y}} else {configure_entry .menu26.config.f.x72 disabled {y n l}}
	global CONFIG_ECONET
	if {($CONFIG_NET == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_INET == 1)} then {
	configure_entry .menu26.config.f.x73 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu26.config.f.x73 normal {m}} else {configure_entry .menu26.config.f.x73 disabled {m}}; configure_entry .menu26.config.f.x73 normal {n l}} else {configure_entry .menu26.config.f.x73 disabled {y n m l}}
	global CONFIG_ECONET_AUNUDP
	if {($CONFIG_NET == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_INET == 1) && ($CONFIG_ECONET != 0)} then {
	configure_entry .menu26.config.f.x74 normal {n l y}} else {configure_entry .menu26.config.f.x74 disabled {y n l}}
	global CONFIG_ECONET_NATIVE
	if {($CONFIG_NET == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_INET == 1) && ($CONFIG_ECONET != 0)} then {
	configure_entry .menu26.config.f.x75 normal {n l y}} else {configure_entry .menu26.config.f.x75 disabled {y n l}}
	global CONFIG_WAN_ROUTER
	if {($CONFIG_NET == 1) && ($CONFIG_EXPERIMENTAL == 1)} then {
	configure_entry .menu26.config.f.x76 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu26.config.f.x76 normal {m}} else {configure_entry .menu26.config.f.x76 disabled {m}}; configure_entry .menu26.config.f.x76 normal {n l}} else {configure_entry .menu26.config.f.x76 disabled {y n m l}}
	global CONFIG_NET_FASTROUTE
	if {($CONFIG_NET == 1) && ($CONFIG_EXPERIMENTAL == 1)} then {
	configure_entry .menu26.config.f.x77 normal {n l y}} else {configure_entry .menu26.config.f.x77 disabled {y n l}}
	global CONFIG_NET_HW_FLOWCONTROL
	if {($CONFIG_NET == 1) && ($CONFIG_EXPERIMENTAL == 1)} then {
	configure_entry .menu26.config.f.x78 normal {n l y}} else {configure_entry .menu26.config.f.x78 disabled {y n l}}
	if {($CONFIG_NET == 1)} then {configure_entry .menu26.config.f.x79 normal {m}} else {configure_entry .menu26.config.f.x79 disabled {m}}
	global CONFIG_IPSEC
	if {($CONFIG_NET == 1)} then {
	configure_entry .menu26.config.f.x80 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu26.config.f.x80 normal {m}} else {configure_entry .menu26.config.f.x80 disabled {m}}; configure_entry .menu26.config.f.x80 normal {n l}} else {configure_entry .menu26.config.f.x80 disabled {y n m l}}
	if {($CONFIG_NET == 1) && ($CONFIG_IPSEC != 0)} then {configure_entry .menu26.config.f.x81 normal {m}} else {configure_entry .menu26.config.f.x81 disabled {m}}
	global CONFIG_IPSEC_IPIP
	if {($CONFIG_NET == 1) && ($CONFIG_IPSEC != 0)} then {
	configure_entry .menu26.config.f.x82 normal {n l y}} else {configure_entry .menu26.config.f.x82 disabled {y n l}}
	global CONFIG_IPSEC_AH
	if {($CONFIG_NET == 1) && ($CONFIG_IPSEC != 0)} then {
	configure_entry .menu26.config.f.x83 normal {n l y}} else {configure_entry .menu26.config.f.x83 disabled {y n l}}
	global CONFIG_IPSEC_ESP
	global CONFIG_IPSEC_AUTH_HMAC_MD5
	if {($CONFIG_NET == 1) && ($CONFIG_IPSEC != 0) && ($CONFIG_IPSEC_AH == 1 || $CONFIG_IPSEC_ESP == 1)} then {
	configure_entry .menu26.config.f.x84 normal {n l y}} else {configure_entry .menu26.config.f.x84 disabled {y n l}}
	global CONFIG_IPSEC_AUTH_HMAC_SHA1
	if {($CONFIG_NET == 1) && ($CONFIG_IPSEC != 0) && ($CONFIG_IPSEC_AH == 1 || $CONFIG_IPSEC_ESP == 1)} then {
	configure_entry .menu26.config.f.x85 normal {n l y}} else {configure_entry .menu26.config.f.x85 disabled {y n l}}
	if {($CONFIG_NET == 1) && ($CONFIG_IPSEC != 0)} then {
	configure_entry .menu26.config.f.x86 normal {n l y}} else {configure_entry .menu26.config.f.x86 disabled {y n l}}
	global CONFIG_IPSEC_ENC_DES
	if {($CONFIG_NET == 1) && ($CONFIG_IPSEC != 0) && ($CONFIG_IPSEC_ESP == 1)} then {
	configure_entry .menu26.config.f.x87 normal {n l y}} else {configure_entry .menu26.config.f.x87 disabled {y n l}}
	global CONFIG_IPSEC_ENC_3DES
	if {($CONFIG_NET == 1) && ($CONFIG_IPSEC != 0) && ($CONFIG_IPSEC_ESP == 1)} then {
	configure_entry .menu26.config.f.x88 normal {n l y}} else {configure_entry .menu26.config.f.x88 disabled {y n l}}
	global CONFIG_IPSEC_IPCOMP
	if {($CONFIG_NET == 1) && ($CONFIG_IPSEC != 0)} then {
	configure_entry .menu26.config.f.x89 normal {n l y}} else {configure_entry .menu26.config.f.x89 disabled {y n l}}
	global CONFIG_IPSEC_IPCOMP_LZS
	if {($CONFIG_NET == 1) && ($CONFIG_IPSEC != 0) && ($CONFIG_IPSEC_IPCOMP == 1)} then {
	configure_entry .menu26.config.f.x90 normal {n l y}} else {configure_entry .menu26.config.f.x90 disabled {y n l}}
	global CONFIG_IPSEC_DEBUG
	if {($CONFIG_NET == 1) && ($CONFIG_IPSEC != 0)} then {
	configure_entry .menu26.config.f.x91 normal {n l y}} else {configure_entry .menu26.config.f.x91 disabled {y n l}}
	global CONFIG_IPSEC_NAT_TRAVERSAL
	if {($CONFIG_NET == 1) && ($CONFIG_IPSEC != 0)} then {
	configure_entry .menu26.config.f.x92 normal {n l y}} else {configure_entry .menu26.config.f.x92 disabled {y n l}}
	if {($CONFIG_NET == 1)} then {configure_entry .menu26.config.f.x93 normal {m}} else {configure_entry .menu26.config.f.x93 disabled {m}}
}


proc update_define_menu26 {} {
	update_define_mainmenu
	global CONFIG_MODULES
	global CONFIG_PACKET
	global CONFIG_NETLINK_DEV
	global CONFIG_UNIX
	global CONFIG_NET_IPIP
	global CONFIG_NET_IPGRE
	global CONFIG_IPV6
	global CONFIG_KHTTPD
	global CONFIG_ATM
	global CONFIG_ATM_MPOA
	global CONFIG_VLAN_8021Q
	global CONFIG_IPX
	global CONFIG_ATALK
	global CONFIG_DECNET
	global CONFIG_X25
	global CONFIG_LAPB
	global CONFIG_ECONET
	global CONFIG_WAN_ROUTER
	global CONFIG_IPSEC
	global CONFIG_IPSEC_ALG
	global CONFIG_IPSEC_ALG_AES
set CONFIG_PACKET [expr $CONFIG_PACKET|16]
	global CONFIG_PACKET_MMAP
set CONFIG_PACKET_MMAP [expr $CONFIG_PACKET_MMAP|16]
set CONFIG_NETLINK_DEV [expr $CONFIG_NETLINK_DEV|16]
	global CONFIG_NETFILTER
set CONFIG_NETFILTER [expr $CONFIG_NETFILTER|16]
	global CONFIG_NETFILTER_DEBUG
set CONFIG_NETFILTER_DEBUG [expr $CONFIG_NETFILTER_DEBUG|16]
	global CONFIG_FILTER
set CONFIG_FILTER [expr $CONFIG_FILTER|16]
set CONFIG_UNIX [expr $CONFIG_UNIX|16]
	global CONFIG_INET
set CONFIG_INET [expr $CONFIG_INET|16]
	global CONFIG_IP_MULTICAST
set CONFIG_IP_MULTICAST [expr $CONFIG_IP_MULTICAST|16]
	global CONFIG_IP_ADVANCED_ROUTER
set CONFIG_IP_ADVANCED_ROUTER [expr $CONFIG_IP_ADVANCED_ROUTER|16]
	global CONFIG_IP_MULTIPLE_TABLES
set CONFIG_IP_MULTIPLE_TABLES [expr $CONFIG_IP_MULTIPLE_TABLES|16]
	global CONFIG_IP_ROUTE_FWMARK
set CONFIG_IP_ROUTE_FWMARK [expr $CONFIG_IP_ROUTE_FWMARK|16]
	global CONFIG_IP_ROUTE_NAT
set CONFIG_IP_ROUTE_NAT [expr $CONFIG_IP_ROUTE_NAT|16]
	global CONFIG_IP_ROUTE_MULTIPATH
set CONFIG_IP_ROUTE_MULTIPATH [expr $CONFIG_IP_ROUTE_MULTIPATH|16]
	global CONFIG_IP_ROUTE_TOS
set CONFIG_IP_ROUTE_TOS [expr $CONFIG_IP_ROUTE_TOS|16]
	global CONFIG_IP_ROUTE_VERBOSE
set CONFIG_IP_ROUTE_VERBOSE [expr $CONFIG_IP_ROUTE_VERBOSE|16]
	global CONFIG_IP_PNP
set CONFIG_IP_PNP [expr $CONFIG_IP_PNP|16]
	global CONFIG_IP_PNP_DHCP
set CONFIG_IP_PNP_DHCP [expr $CONFIG_IP_PNP_DHCP|16]
	global CONFIG_IP_PNP_BOOTP
set CONFIG_IP_PNP_BOOTP [expr $CONFIG_IP_PNP_BOOTP|16]
	global CONFIG_IP_PNP_RARP
set CONFIG_IP_PNP_RARP [expr $CONFIG_IP_PNP_RARP|16]
	global CONFIG_NET_ARP_LIMIT
set CONFIG_NET_ARP_LIMIT [expr $CONFIG_NET_ARP_LIMIT|16]
set CONFIG_NET_IPIP [expr $CONFIG_NET_IPIP|16]
set CONFIG_NET_IPGRE [expr $CONFIG_NET_IPGRE|16]
	global CONFIG_NET_IPGRE_BROADCAST
set CONFIG_NET_IPGRE_BROADCAST [expr $CONFIG_NET_IPGRE_BROADCAST|16]
	global CONFIG_IP_MROUTE
set CONFIG_IP_MROUTE [expr $CONFIG_IP_MROUTE|16]
	global CONFIG_IP_PIMSM_V1
set CONFIG_IP_PIMSM_V1 [expr $CONFIG_IP_PIMSM_V1|16]
	global CONFIG_IP_PIMSM_V2
set CONFIG_IP_PIMSM_V2 [expr $CONFIG_IP_PIMSM_V2|16]
	global CONFIG_ARPD
set CONFIG_ARPD [expr $CONFIG_ARPD|16]
	global CONFIG_INET_ECN
set CONFIG_INET_ECN [expr $CONFIG_INET_ECN|16]
	global CONFIG_SYN_COOKIES
set CONFIG_SYN_COOKIES [expr $CONFIG_SYN_COOKIES|16]
set CONFIG_IPV6 [expr $CONFIG_IPV6|16]
set CONFIG_KHTTPD [expr $CONFIG_KHTTPD|16]
set CONFIG_ATM [expr $CONFIG_ATM|16]
	global CONFIG_ATM_CLIP_NO_ICMP
set CONFIG_ATM_CLIP_NO_ICMP [expr $CONFIG_ATM_CLIP_NO_ICMP|16]
set CONFIG_ATM_MPOA [expr $CONFIG_ATM_MPOA|16]
	global CONFIG_ATM_BR2684_IPFILTER
set CONFIG_ATM_BR2684_IPFILTER [expr $CONFIG_ATM_BR2684_IPFILTER|16]
set CONFIG_VLAN_8021Q [expr $CONFIG_VLAN_8021Q|16]
set CONFIG_IPX [expr $CONFIG_IPX|16]
	global CONFIG_IPX_INTERN
set CONFIG_IPX_INTERN [expr $CONFIG_IPX_INTERN|16]
set CONFIG_ATALK [expr $CONFIG_ATALK|16]
set CONFIG_DECNET [expr $CONFIG_DECNET|16]
	global CONFIG_DECNET_SIOCGIFCONF
set CONFIG_DECNET_SIOCGIFCONF [expr $CONFIG_DECNET_SIOCGIFCONF|16]
	global CONFIG_DECNET_ROUTER
set CONFIG_DECNET_ROUTER [expr $CONFIG_DECNET_ROUTER|16]
	global CONFIG_DECNET_ROUTE_FWMARK
set CONFIG_DECNET_ROUTE_FWMARK [expr $CONFIG_DECNET_ROUTE_FWMARK|16]
set CONFIG_X25 [expr $CONFIG_X25|16]
set CONFIG_LAPB [expr $CONFIG_LAPB|16]
	global CONFIG_LLC
set CONFIG_LLC [expr $CONFIG_LLC|16]
	global CONFIG_NET_DIVERT
set CONFIG_NET_DIVERT [expr $CONFIG_NET_DIVERT|16]
set CONFIG_ECONET [expr $CONFIG_ECONET|16]
	global CONFIG_ECONET_AUNUDP
set CONFIG_ECONET_AUNUDP [expr $CONFIG_ECONET_AUNUDP|16]
	global CONFIG_ECONET_NATIVE
set CONFIG_ECONET_NATIVE [expr $CONFIG_ECONET_NATIVE|16]
set CONFIG_WAN_ROUTER [expr $CONFIG_WAN_ROUTER|16]
	global CONFIG_NET_FASTROUTE
set CONFIG_NET_FASTROUTE [expr $CONFIG_NET_FASTROUTE|16]
	global CONFIG_NET_HW_FLOWCONTROL
set CONFIG_NET_HW_FLOWCONTROL [expr $CONFIG_NET_HW_FLOWCONTROL|16]
set CONFIG_IPSEC [expr $CONFIG_IPSEC|16]
	global CONFIG_IPSEC_IPIP
set CONFIG_IPSEC_IPIP [expr $CONFIG_IPSEC_IPIP|16]
	global CONFIG_IPSEC_AH
set CONFIG_IPSEC_AH [expr $CONFIG_IPSEC_AH|16]
	global CONFIG_IPSEC_AUTH_HMAC_MD5
set CONFIG_IPSEC_AUTH_HMAC_MD5 [expr $CONFIG_IPSEC_AUTH_HMAC_MD5|16]
	global CONFIG_IPSEC_AUTH_HMAC_SHA1
set CONFIG_IPSEC_AUTH_HMAC_SHA1 [expr $CONFIG_IPSEC_AUTH_HMAC_SHA1|16]
	global CONFIG_IPSEC_ESP
set CONFIG_IPSEC_ESP [expr $CONFIG_IPSEC_ESP|16]
	global CONFIG_IPSEC_ENC_DES
set CONFIG_IPSEC_ENC_DES [expr $CONFIG_IPSEC_ENC_DES|16]
	global CONFIG_IPSEC_ENC_3DES
set CONFIG_IPSEC_ENC_3DES [expr $CONFIG_IPSEC_ENC_3DES|16]
	global CONFIG_IPSEC_IPCOMP
set CONFIG_IPSEC_IPCOMP [expr $CONFIG_IPSEC_IPCOMP|16]
	global CONFIG_IPSEC_IPCOMP_LZS
set CONFIG_IPSEC_IPCOMP_LZS [expr $CONFIG_IPSEC_IPCOMP_LZS|16]
	global CONFIG_IPSEC_DEBUG
set CONFIG_IPSEC_DEBUG [expr $CONFIG_IPSEC_DEBUG|16]
	global CONFIG_IPSEC_NAT_TRAVERSAL
set CONFIG_IPSEC_NAT_TRAVERSAL [expr $CONFIG_IPSEC_NAT_TRAVERSAL|16]
	global CONFIG_NET
	if {($CONFIG_NET == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_PACKET == 2)} then {set CONFIG_PACKET 1}; set CONFIG_PACKET [expr $CONFIG_PACKET&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_PACKET != 0)} then {
	set CONFIG_PACKET_MMAP [expr $CONFIG_PACKET_MMAP&15]}
	if {($CONFIG_NET == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_NETLINK_DEV == 2)} then {set CONFIG_NETLINK_DEV 1}; set CONFIG_NETLINK_DEV [expr $CONFIG_NETLINK_DEV&15]}
	if {($CONFIG_NET == 1)} then {
	set CONFIG_NETFILTER [expr $CONFIG_NETFILTER&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_NETFILTER == 1)} then {
	set CONFIG_NETFILTER_DEBUG [expr $CONFIG_NETFILTER_DEBUG&15]}
	if {($CONFIG_NET == 1)} then {
	set CONFIG_FILTER [expr $CONFIG_FILTER&15]}
	if {($CONFIG_NET == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_UNIX == 2)} then {set CONFIG_UNIX 1}; set CONFIG_UNIX [expr $CONFIG_UNIX&15]}
	if {($CONFIG_NET == 1)} then {
	set CONFIG_INET [expr $CONFIG_INET&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1)} then {
	set CONFIG_IP_MULTICAST [expr $CONFIG_IP_MULTICAST&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1)} then {
	set CONFIG_IP_ADVANCED_ROUTER [expr $CONFIG_IP_ADVANCED_ROUTER&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_IP_ADVANCED_ROUTER == 1)} then {
	set CONFIG_IP_MULTIPLE_TABLES [expr $CONFIG_IP_MULTIPLE_TABLES&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_IP_ADVANCED_ROUTER == 1) && ($CONFIG_IP_MULTIPLE_TABLES == 1) && ($CONFIG_NETFILTER == 1)} then {
	set CONFIG_IP_ROUTE_FWMARK [expr $CONFIG_IP_ROUTE_FWMARK&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_IP_ADVANCED_ROUTER == 1) && ($CONFIG_IP_MULTIPLE_TABLES == 1)} then {
	set CONFIG_IP_ROUTE_NAT [expr $CONFIG_IP_ROUTE_NAT&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_IP_ADVANCED_ROUTER == 1)} then {
	set CONFIG_IP_ROUTE_MULTIPATH [expr $CONFIG_IP_ROUTE_MULTIPATH&15]}
	global CONFIG_IP_ROUTE_MULTIPATH_SEQUENTIAL
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_IP_ADVANCED_ROUTER == 1) && ($CONFIG_IP_ROUTE_MULTIPATH == 1 || $CONFIG_IP_ROUTE_MULTIPATH == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP_ROUTE_MULTIPATH]];set CONFIG_IP_ROUTE_MULTIPATH_SEQUENTIAL [sync_bool $CONFIG_IP_ROUTE_MULTIPATH_SEQUENTIAL $tmpvar_dep 0];set CONFIG_IP_ROUTE_MULTIPATH_SEQUENTIAL [expr $CONFIG_IP_ROUTE_MULTIPATH_SEQUENTIAL&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_IP_ADVANCED_ROUTER == 1)} then {
	set CONFIG_IP_ROUTE_TOS [expr $CONFIG_IP_ROUTE_TOS&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_IP_ADVANCED_ROUTER == 1)} then {
	set CONFIG_IP_ROUTE_VERBOSE [expr $CONFIG_IP_ROUTE_VERBOSE&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1)} then {
	set CONFIG_IP_PNP [expr $CONFIG_IP_PNP&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_IP_PNP == 1)} then {
	set CONFIG_IP_PNP_DHCP [expr $CONFIG_IP_PNP_DHCP&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_IP_PNP == 1)} then {
	set CONFIG_IP_PNP_BOOTP [expr $CONFIG_IP_PNP_BOOTP&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_IP_PNP == 1)} then {
	set CONFIG_IP_PNP_RARP [expr $CONFIG_IP_PNP_RARP&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1)} then {
	set CONFIG_NET_ARP_LIMIT [expr $CONFIG_NET_ARP_LIMIT&15]}
	global CONFIG_ARP_LIMIT
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NET_ARP_LIMIT == 1)} then {validate_int CONFIG_ARP_LIMIT "$CONFIG_ARP_LIMIT" 20}
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_NET_IPIP == 2)} then {set CONFIG_NET_IPIP 1}; set CONFIG_NET_IPIP [expr $CONFIG_NET_IPIP&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_NET_IPGRE == 2)} then {set CONFIG_NET_IPGRE 1}; set CONFIG_NET_IPGRE [expr $CONFIG_NET_IPGRE&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_IP_MULTICAST == 1) && ($CONFIG_NET_IPGRE != 0)} then {
	set CONFIG_NET_IPGRE_BROADCAST [expr $CONFIG_NET_IPGRE_BROADCAST&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_IP_MULTICAST == 1)} then {
	set CONFIG_IP_MROUTE [expr $CONFIG_IP_MROUTE&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_IP_MULTICAST == 1) && ($CONFIG_IP_MROUTE == 1)} then {
	set CONFIG_IP_PIMSM_V1 [expr $CONFIG_IP_PIMSM_V1&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_IP_MULTICAST == 1) && ($CONFIG_IP_MROUTE == 1)} then {
	set CONFIG_IP_PIMSM_V2 [expr $CONFIG_IP_PIMSM_V2&15]}
	global CONFIG_EXPERIMENTAL
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_EXPERIMENTAL == 1)} then {
	set CONFIG_ARPD [expr $CONFIG_ARPD&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1)} then {
	set CONFIG_INET_ECN [expr $CONFIG_INET_ECN&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1)} then {
	set CONFIG_SYN_COOKIES [expr $CONFIG_SYN_COOKIES&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_EXPERIMENTAL == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_IPV6 == 2)} then {set CONFIG_IPV6 1}; set CONFIG_IPV6 [expr $CONFIG_IPV6&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_EXPERIMENTAL == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_KHTTPD == 2)} then {set CONFIG_KHTTPD 1}; set CONFIG_KHTTPD [expr $CONFIG_KHTTPD&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_EXPERIMENTAL == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_ATM == 2)} then {set CONFIG_ATM 1}; set CONFIG_ATM [expr $CONFIG_ATM&15]}
	global CONFIG_ATM_CLIP
	if {($CONFIG_NET == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_ATM == 1 || $CONFIG_ATM == 2) && ($CONFIG_INET == 1) && ($CONFIG_ATM == 1 || $CONFIG_ATM == 2 || $CONFIG_ATM == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ATM]]; set CONFIG_ATM_CLIP [sync_tristate $CONFIG_ATM_CLIP $tmpvar_dep]; set CONFIG_ATM_CLIP [expr $CONFIG_ATM_CLIP&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_ATM == 1 || $CONFIG_ATM == 2) && ($CONFIG_INET == 1) && ($CONFIG_ATM_CLIP != 0)} then {
	set CONFIG_ATM_CLIP_NO_ICMP [expr $CONFIG_ATM_CLIP_NO_ICMP&15]}
	global CONFIG_ATM_LANE
	if {($CONFIG_NET == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_ATM == 1 || $CONFIG_ATM == 2) && ($CONFIG_ATM == 1 || $CONFIG_ATM == 2 || $CONFIG_ATM == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ATM]]; set CONFIG_ATM_LANE [sync_tristate $CONFIG_ATM_LANE $tmpvar_dep]; set CONFIG_ATM_LANE [expr $CONFIG_ATM_LANE&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_ATM == 1 || $CONFIG_ATM == 2) && ($CONFIG_INET == 1 && $CONFIG_ATM_LANE != 0)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_ATM_MPOA == 2)} then {set CONFIG_ATM_MPOA 1}; set CONFIG_ATM_MPOA [expr $CONFIG_ATM_MPOA&15]}
	global CONFIG_ATM_BR2684
	if {($CONFIG_NET == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_ATM == 1 || $CONFIG_ATM == 2) && ($CONFIG_ATM == 1 || $CONFIG_ATM == 2 || $CONFIG_ATM == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ATM]]; set CONFIG_ATM_BR2684 [sync_tristate $CONFIG_ATM_BR2684 $tmpvar_dep]; set CONFIG_ATM_BR2684 [expr $CONFIG_ATM_BR2684&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_ATM == 1 || $CONFIG_ATM == 2) && ($CONFIG_ATM_BR2684 != 0)} then {
	set CONFIG_ATM_BR2684_IPFILTER [expr $CONFIG_ATM_BR2684_IPFILTER&15]}
	if {($CONFIG_NET == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_VLAN_8021Q == 2)} then {set CONFIG_VLAN_8021Q 1}; set CONFIG_VLAN_8021Q [expr $CONFIG_VLAN_8021Q&15]}
	if {($CONFIG_NET == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_IPX == 2)} then {set CONFIG_IPX 1}; set CONFIG_IPX [expr $CONFIG_IPX&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_IPX != 0)} then {
	set CONFIG_IPX_INTERN [expr $CONFIG_IPX_INTERN&15]}
	if {($CONFIG_NET == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_ATALK == 2)} then {set CONFIG_ATALK 1}; set CONFIG_ATALK [expr $CONFIG_ATALK&15]}
	if {($CONFIG_NET == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_DECNET == 2)} then {set CONFIG_DECNET 1}; set CONFIG_DECNET [expr $CONFIG_DECNET&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_DECNET != 0)} then {
	set CONFIG_DECNET_SIOCGIFCONF [expr $CONFIG_DECNET_SIOCGIFCONF&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_DECNET != 0) && ($CONFIG_EXPERIMENTAL == 1)} then {
	set CONFIG_DECNET_ROUTER [expr $CONFIG_DECNET_ROUTER&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_DECNET != 0) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_DECNET_ROUTER == 1) && ($CONFIG_NETFILTER == 1)} then {
	set CONFIG_DECNET_ROUTE_FWMARK [expr $CONFIG_DECNET_ROUTE_FWMARK&15]}
	global CONFIG_BRIDGE
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1 || $CONFIG_INET == 2 || $CONFIG_INET == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_INET]]; set CONFIG_BRIDGE [sync_tristate $CONFIG_BRIDGE $tmpvar_dep]; set CONFIG_BRIDGE [expr $CONFIG_BRIDGE&15]}
	global CONFIG_BRIDGE_NF_EBTABLES
	if {($CONFIG_NET == 1) && ($CONFIG_BRIDGE != 0 && $CONFIG_NETFILTER != 0) && ($CONFIG_BRIDGE == 1 || $CONFIG_BRIDGE == 2 || $CONFIG_BRIDGE == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BRIDGE]]; set CONFIG_BRIDGE_NF_EBTABLES [sync_tristate $CONFIG_BRIDGE_NF_EBTABLES $tmpvar_dep]; set CONFIG_BRIDGE_NF_EBTABLES [expr $CONFIG_BRIDGE_NF_EBTABLES&15]}
	global CONFIG_BRIDGE_EBT_T_FILTER
	if {($CONFIG_NET == 1) && ($CONFIG_BRIDGE != 0 && $CONFIG_NETFILTER != 0) && ($CONFIG_BRIDGE_NF_EBTABLES == 1 || $CONFIG_BRIDGE_NF_EBTABLES == 2 || $CONFIG_BRIDGE_NF_EBTABLES == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BRIDGE_NF_EBTABLES]]; set CONFIG_BRIDGE_EBT_T_FILTER [sync_tristate $CONFIG_BRIDGE_EBT_T_FILTER $tmpvar_dep]; set CONFIG_BRIDGE_EBT_T_FILTER [expr $CONFIG_BRIDGE_EBT_T_FILTER&15]}
	global CONFIG_BRIDGE_EBT_T_NAT
	if {($CONFIG_NET == 1) && ($CONFIG_BRIDGE != 0 && $CONFIG_NETFILTER != 0) && ($CONFIG_BRIDGE_NF_EBTABLES == 1 || $CONFIG_BRIDGE_NF_EBTABLES == 2 || $CONFIG_BRIDGE_NF_EBTABLES == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BRIDGE_NF_EBTABLES]]; set CONFIG_BRIDGE_EBT_T_NAT [sync_tristate $CONFIG_BRIDGE_EBT_T_NAT $tmpvar_dep]; set CONFIG_BRIDGE_EBT_T_NAT [expr $CONFIG_BRIDGE_EBT_T_NAT&15]}
	global CONFIG_BRIDGE_EBT_BROUTE
	if {($CONFIG_NET == 1) && ($CONFIG_BRIDGE != 0 && $CONFIG_NETFILTER != 0) && ($CONFIG_BRIDGE_NF_EBTABLES == 1 || $CONFIG_BRIDGE_NF_EBTABLES == 2 || $CONFIG_BRIDGE_NF_EBTABLES == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BRIDGE_NF_EBTABLES]]; set CONFIG_BRIDGE_EBT_BROUTE [sync_tristate $CONFIG_BRIDGE_EBT_BROUTE $tmpvar_dep]; set CONFIG_BRIDGE_EBT_BROUTE [expr $CONFIG_BRIDGE_EBT_BROUTE&15]}
	global CONFIG_BRIDGE_EBT_LOG
	if {($CONFIG_NET == 1) && ($CONFIG_BRIDGE != 0 && $CONFIG_NETFILTER != 0) && ($CONFIG_BRIDGE_NF_EBTABLES == 1 || $CONFIG_BRIDGE_NF_EBTABLES == 2 || $CONFIG_BRIDGE_NF_EBTABLES == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BRIDGE_NF_EBTABLES]]; set CONFIG_BRIDGE_EBT_LOG [sync_tristate $CONFIG_BRIDGE_EBT_LOG $tmpvar_dep]; set CONFIG_BRIDGE_EBT_LOG [expr $CONFIG_BRIDGE_EBT_LOG&15]}
	global CONFIG_BRIDGE_EBT_IPF
	if {($CONFIG_NET == 1) && ($CONFIG_BRIDGE != 0 && $CONFIG_NETFILTER != 0) && ($CONFIG_BRIDGE_NF_EBTABLES == 1 || $CONFIG_BRIDGE_NF_EBTABLES == 2 || $CONFIG_BRIDGE_NF_EBTABLES == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BRIDGE_NF_EBTABLES]]; set CONFIG_BRIDGE_EBT_IPF [sync_tristate $CONFIG_BRIDGE_EBT_IPF $tmpvar_dep]; set CONFIG_BRIDGE_EBT_IPF [expr $CONFIG_BRIDGE_EBT_IPF&15]}
	global CONFIG_BRIDGE_EBT_ARPF
	if {($CONFIG_NET == 1) && ($CONFIG_BRIDGE != 0 && $CONFIG_NETFILTER != 0) && ($CONFIG_BRIDGE_NF_EBTABLES == 1 || $CONFIG_BRIDGE_NF_EBTABLES == 2 || $CONFIG_BRIDGE_NF_EBTABLES == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BRIDGE_NF_EBTABLES]]; set CONFIG_BRIDGE_EBT_ARPF [sync_tristate $CONFIG_BRIDGE_EBT_ARPF $tmpvar_dep]; set CONFIG_BRIDGE_EBT_ARPF [expr $CONFIG_BRIDGE_EBT_ARPF&15]}
	global CONFIG_BRIDGE_EBT_VLANF
	if {($CONFIG_NET == 1) && ($CONFIG_BRIDGE != 0 && $CONFIG_NETFILTER != 0) && ($CONFIG_BRIDGE_NF_EBTABLES == 1 || $CONFIG_BRIDGE_NF_EBTABLES == 2 || $CONFIG_BRIDGE_NF_EBTABLES == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BRIDGE_NF_EBTABLES]]; set CONFIG_BRIDGE_EBT_VLANF [sync_tristate $CONFIG_BRIDGE_EBT_VLANF $tmpvar_dep]; set CONFIG_BRIDGE_EBT_VLANF [expr $CONFIG_BRIDGE_EBT_VLANF&15]}
	global CONFIG_BRIDGE_EBT_MARKF
	if {($CONFIG_NET == 1) && ($CONFIG_BRIDGE != 0 && $CONFIG_NETFILTER != 0) && ($CONFIG_BRIDGE_NF_EBTABLES == 1 || $CONFIG_BRIDGE_NF_EBTABLES == 2 || $CONFIG_BRIDGE_NF_EBTABLES == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BRIDGE_NF_EBTABLES]]; set CONFIG_BRIDGE_EBT_MARKF [sync_tristate $CONFIG_BRIDGE_EBT_MARKF $tmpvar_dep]; set CONFIG_BRIDGE_EBT_MARKF [expr $CONFIG_BRIDGE_EBT_MARKF&15]}
	global CONFIG_BRIDGE_EBT_SNAT
	if {($CONFIG_NET == 1) && ($CONFIG_BRIDGE != 0 && $CONFIG_NETFILTER != 0) && ($CONFIG_BRIDGE_NF_EBTABLES == 1 || $CONFIG_BRIDGE_NF_EBTABLES == 2 || $CONFIG_BRIDGE_NF_EBTABLES == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BRIDGE_NF_EBTABLES]]; set CONFIG_BRIDGE_EBT_SNAT [sync_tristate $CONFIG_BRIDGE_EBT_SNAT $tmpvar_dep]; set CONFIG_BRIDGE_EBT_SNAT [expr $CONFIG_BRIDGE_EBT_SNAT&15]}
	global CONFIG_BRIDGE_EBT_DNAT
	if {($CONFIG_NET == 1) && ($CONFIG_BRIDGE != 0 && $CONFIG_NETFILTER != 0) && ($CONFIG_BRIDGE_NF_EBTABLES == 1 || $CONFIG_BRIDGE_NF_EBTABLES == 2 || $CONFIG_BRIDGE_NF_EBTABLES == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BRIDGE_NF_EBTABLES]]; set CONFIG_BRIDGE_EBT_DNAT [sync_tristate $CONFIG_BRIDGE_EBT_DNAT $tmpvar_dep]; set CONFIG_BRIDGE_EBT_DNAT [expr $CONFIG_BRIDGE_EBT_DNAT&15]}
	global CONFIG_BRIDGE_EBT_REDIRECT
	if {($CONFIG_NET == 1) && ($CONFIG_BRIDGE != 0 && $CONFIG_NETFILTER != 0) && ($CONFIG_BRIDGE_NF_EBTABLES == 1 || $CONFIG_BRIDGE_NF_EBTABLES == 2 || $CONFIG_BRIDGE_NF_EBTABLES == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BRIDGE_NF_EBTABLES]]; set CONFIG_BRIDGE_EBT_REDIRECT [sync_tristate $CONFIG_BRIDGE_EBT_REDIRECT $tmpvar_dep]; set CONFIG_BRIDGE_EBT_REDIRECT [expr $CONFIG_BRIDGE_EBT_REDIRECT&15]}
	global CONFIG_BRIDGE_EBT_MARK_T
	if {($CONFIG_NET == 1) && ($CONFIG_BRIDGE != 0 && $CONFIG_NETFILTER != 0) && ($CONFIG_BRIDGE_NF_EBTABLES == 1 || $CONFIG_BRIDGE_NF_EBTABLES == 2 || $CONFIG_BRIDGE_NF_EBTABLES == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BRIDGE_NF_EBTABLES]]; set CONFIG_BRIDGE_EBT_MARK_T [sync_tristate $CONFIG_BRIDGE_EBT_MARK_T $tmpvar_dep]; set CONFIG_BRIDGE_EBT_MARK_T [expr $CONFIG_BRIDGE_EBT_MARK_T&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_EXPERIMENTAL == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_X25 == 2)} then {set CONFIG_X25 1}; set CONFIG_X25 [expr $CONFIG_X25&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_EXPERIMENTAL == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_LAPB == 2)} then {set CONFIG_LAPB 1}; set CONFIG_LAPB [expr $CONFIG_LAPB&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_EXPERIMENTAL == 1)} then {
	set CONFIG_LLC [expr $CONFIG_LLC&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_EXPERIMENTAL == 1)} then {
	set CONFIG_NET_DIVERT [expr $CONFIG_NET_DIVERT&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_INET == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_ECONET == 2)} then {set CONFIG_ECONET 1}; set CONFIG_ECONET [expr $CONFIG_ECONET&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_INET == 1) && ($CONFIG_ECONET != 0)} then {
	set CONFIG_ECONET_AUNUDP [expr $CONFIG_ECONET_AUNUDP&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_INET == 1) && ($CONFIG_ECONET != 0)} then {
	set CONFIG_ECONET_NATIVE [expr $CONFIG_ECONET_NATIVE&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_EXPERIMENTAL == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_WAN_ROUTER == 2)} then {set CONFIG_WAN_ROUTER 1}; set CONFIG_WAN_ROUTER [expr $CONFIG_WAN_ROUTER&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_EXPERIMENTAL == 1)} then {
	set CONFIG_NET_FASTROUTE [expr $CONFIG_NET_FASTROUTE&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_EXPERIMENTAL == 1)} then {
	set CONFIG_NET_HW_FLOWCONTROL [expr $CONFIG_NET_HW_FLOWCONTROL&15]}
	if {($CONFIG_NET == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_IPSEC == 2)} then {set CONFIG_IPSEC 1}; set CONFIG_IPSEC [expr $CONFIG_IPSEC&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_IPSEC != 0)} then {
	set CONFIG_IPSEC_IPIP [expr $CONFIG_IPSEC_IPIP&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_IPSEC != 0) && ($CONFIG_IPSEC_IPIP == 1)} then {	global CONSTANT_Y
set CONFIG_IPSEC_ALG $CONSTANT_Y }
	if {($CONFIG_NET == 1) && ($CONFIG_IPSEC != 0) && ($CONFIG_IPSEC_IPIP == 1)} then {	global CONSTANT_Y
set CONFIG_IPSEC_ALG_AES $CONSTANT_Y }
	if {($CONFIG_NET == 1) && ($CONFIG_IPSEC != 0)} then {
	set CONFIG_IPSEC_AH [expr $CONFIG_IPSEC_AH&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_IPSEC != 0) && ($CONFIG_IPSEC_AH == 1 || $CONFIG_IPSEC_ESP == 1)} then {
	set CONFIG_IPSEC_AUTH_HMAC_MD5 [expr $CONFIG_IPSEC_AUTH_HMAC_MD5&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_IPSEC != 0) && ($CONFIG_IPSEC_AH == 1 || $CONFIG_IPSEC_ESP == 1)} then {
	set CONFIG_IPSEC_AUTH_HMAC_SHA1 [expr $CONFIG_IPSEC_AUTH_HMAC_SHA1&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_IPSEC != 0)} then {
	set CONFIG_IPSEC_ESP [expr $CONFIG_IPSEC_ESP&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_IPSEC != 0) && ($CONFIG_IPSEC_ESP == 1)} then {
	set CONFIG_IPSEC_ENC_DES [expr $CONFIG_IPSEC_ENC_DES&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_IPSEC != 0) && ($CONFIG_IPSEC_ESP == 1)} then {
	set CONFIG_IPSEC_ENC_3DES [expr $CONFIG_IPSEC_ENC_3DES&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_IPSEC != 0)} then {
	set CONFIG_IPSEC_IPCOMP [expr $CONFIG_IPSEC_IPCOMP&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_IPSEC != 0) && ($CONFIG_IPSEC_IPCOMP == 1)} then {
	set CONFIG_IPSEC_IPCOMP_LZS [expr $CONFIG_IPSEC_IPCOMP_LZS&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_IPSEC != 0)} then {
	set CONFIG_IPSEC_DEBUG [expr $CONFIG_IPSEC_DEBUG&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_IPSEC != 0)} then {
	set CONFIG_IPSEC_NAT_TRAVERSAL [expr $CONFIG_IPSEC_NAT_TRAVERSAL&15]}
}


proc menu27 {w title} {
	set oldFocus [focus]
	catch {focus .menu26}
	catch {destroy $w; unregister_active 27}
	toplevel $w -class Dialog
	wm withdraw $w
	global active_menus
	set active_menus [lsort -integer [linsert $active_menus end 27]]
	message $w.m -width 400 -aspect 300 -text \
		"  IP: Netfilter Configuration"  -relief raised
	pack $w.m -pady 10 -side top -padx 10
	wm title $w "  IP: Netfilter Configuration" 

	bind $w <Escape> "catch {focus $oldFocus}; destroy $w; unregister_active 27; break"
	set nextscript "catch {focus $oldFocus}; destroy $w; unregister_active 27; menu28 .menu28 \"$title\""
	frame $w.f
	button $w.f.back -text "OK" \
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 27"
	button $w.f.next -text "Next" -underline 0\
		-width 15 -command $nextscript
	bind all <Alt-n> $nextscript
	button $w.f.prev -text "Prev" -underline 0\
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 27; menu26 .menu26 \"$title\""
	bind $w <Alt-p> "catch {focus $oldFocus}; destroy $w; unregister_active 27; menu26 .menu26 \"$title\";break"
	pack $w.f.back $w.f.next $w.f.prev -side left -expand on
	pack $w.f -pady 10 -side bottom -anchor w -fill x
	frame $w.topline -relief ridge -borderwidth 2 -height 2
	pack $w.topline -side top -fill x

	frame $w.botline -relief ridge -borderwidth 2 -height 2
	pack $w.botline -side bottom -fill x

	frame $w.config
	pack $w.config -fill y -expand on

	scrollbar $w.config.vscroll -command "$w.config.canvas yview"
	pack $w.config.vscroll -side right -fill y

	canvas $w.config.canvas -height 1\
		-relief flat -borderwidth 0 -yscrollcommand "$w.config.vscroll set" \
		-width [expr [winfo screenwidth .] * 1 / 2] 
	frame $w.config.f
	bind $w <Key-Down> "$w.config.canvas yview scroll  1 unit;break;"
	bind $w <Key-Up> "$w.config.canvas yview scroll  -1 unit;break;"
	bind $w <Key-Next> "$w.config.canvas yview scroll  1 page;break;"
	bind $w <Key-Prior> "$w.config.canvas yview scroll  -1 page;break;"
	bind $w <Key-Home> "$w.config.canvas yview moveto 0;break;"
	bind $w <Key-End> "$w.config.canvas yview moveto 1 ;break;"
	pack $w.config.canvas -side right -fill y


	tristate $w.config.f 27 0 "Connection tracking (required for masq/NAT)" CONFIG_IP_NF_CONNTRACK
	dep_tristate $w.config.f 27 1 "  FTP protocol support" CONFIG_IP_NF_FTP
	bool $w.config.f 27 2 "  Connection mark tracking support" CONFIG_IP_NF_CONNTRACK_MARK
	dep_tristate $w.config.f 27 3 "  H.323 (netmeeting) support" CONFIG_IP_NF_H323
	dep_tristate $w.config.f 27 4 "  Amanda protocol support" CONFIG_IP_NF_AMANDA
	dep_tristate $w.config.f 27 5 "  TFTP protocol support" CONFIG_IP_NF_TFTP
	dep_tristate $w.config.f 27 6 "  IRC protocol support" CONFIG_IP_NF_IRC
	dep_tristate $w.config.f 27 7 "  GRE protocol support" CONFIG_IP_NF_CT_PROTO_GRE
	dep_tristate $w.config.f 27 8 "   PPTP protocol support" CONFIG_IP_NF_PPTP
	tristate $w.config.f 27 9 "Userspace queueing via NETLINK (EXPERIMENTAL)" CONFIG_IP_NF_QUEUE
	tristate $w.config.f 27 10 "IP tables support (required for filtering/masq/NAT)" CONFIG_IP_NF_IPTABLES
	dep_tristate $w.config.f 27 11 "  limit match support" CONFIG_IP_NF_MATCH_LIMIT
	dep_tristate $w.config.f 27 12 "  IP range match support" CONFIG_IP_NF_MATCH_IPRANGE
	dep_tristate $w.config.f 27 13 "  MAC address match support" CONFIG_IP_NF_MATCH_MAC
	dep_tristate $w.config.f 27 14 "  Packet type match support" CONFIG_IP_NF_MATCH_PKTTYPE
	dep_tristate $w.config.f 27 15 "  netfilter MARK match support" CONFIG_IP_NF_MATCH_MARK
	dep_tristate $w.config.f 27 16 "  Multiple port match support" CONFIG_IP_NF_MATCH_MULTIPORT
	dep_tristate $w.config.f 27 17 "  TOS match support" CONFIG_IP_NF_MATCH_TOS
	dep_tristate $w.config.f 27 18 "  TIME match support (EXPERIMENTAL)" CONFIG_IP_NF_MATCH_TIME
	dep_tristate $w.config.f 27 19 "  recent match support" CONFIG_IP_NF_MATCH_RECENT
	dep_tristate $w.config.f 27 20 "  ECN match support" CONFIG_IP_NF_MATCH_ECN
	dep_tristate $w.config.f 27 21 "  DSCP match support" CONFIG_IP_NF_MATCH_DSCP
	dep_tristate $w.config.f 27 22 "  AH/ESP match support" CONFIG_IP_NF_MATCH_AH_ESP
	dep_tristate $w.config.f 27 23 "  LENGTH match support" CONFIG_IP_NF_MATCH_LENGTH
	dep_tristate $w.config.f 27 24 "  TTL match support" CONFIG_IP_NF_MATCH_TTL
	dep_tristate $w.config.f 27 25 "  tcpmss match support" CONFIG_IP_NF_MATCH_TCPMSS
	dep_tristate $w.config.f 27 26 "  Helper match support" CONFIG_IP_NF_MATCH_HELPER
	dep_tristate $w.config.f 27 27 "  Connection state match support" CONFIG_IP_NF_MATCH_STATE
	dep_tristate $w.config.f 27 28 "  Connection mark match support" CONFIG_IP_NF_MATCH_CONNMARK
	dep_tristate $w.config.f 27 29 "  Connection tracking match support" CONFIG_IP_NF_MATCH_CONNTRACK
	dep_tristate $w.config.f 27 30 "  Unclean match support (EXPERIMENTAL)" CONFIG_IP_NF_MATCH_UNCLEAN
	dep_tristate $w.config.f 27 31 "  String match support (EXPERIMENTAL)" CONFIG_IP_NF_MATCH_STRING
	dep_tristate $w.config.f 27 32 "  Owner match support (EXPERIMENTAL)" CONFIG_IP_NF_MATCH_OWNER
	dep_tristate $w.config.f 27 33 "  Packet filtering" CONFIG_IP_NF_FILTER
	dep_tristate $w.config.f 27 34 "    REJECT target support" CONFIG_IP_NF_TARGET_REJECT
	dep_tristate $w.config.f 27 35 "    MIRROR target support (EXPERIMENTAL)" CONFIG_IP_NF_TARGET_MIRROR
	dep_tristate $w.config.f 27 36 "  Full NAT" CONFIG_IP_NF_NAT
	dep_tristate $w.config.f 27 37 "    MASQUERADE target support" CONFIG_IP_NF_TARGET_MASQUERADE
	dep_tristate $w.config.f 27 38 "    REDIRECT target support" CONFIG_IP_NF_TARGET_REDIRECT
	dep_tristate $w.config.f 27 39 "    NETMAP target support" CONFIG_IP_NF_TARGET_NETMAP
	bool $w.config.f 27 40 "    NAT of local connections (READ HELP)" CONFIG_IP_NF_NAT_LOCAL
	dep_tristate $w.config.f 27 41 "    Basic SNMP-ALG support (EXPERIMENTAL)" CONFIG_IP_NF_NAT_SNMP_BASIC
	dep_tristate $w.config.f 27 42 "  Packet mangling" CONFIG_IP_NF_MANGLE
	dep_tristate $w.config.f 27 43 "    TOS target support" CONFIG_IP_NF_TARGET_TOS
	dep_tristate $w.config.f 27 44 "    ECN target support" CONFIG_IP_NF_TARGET_ECN
	dep_tristate $w.config.f 27 45 "    DSCP target support" CONFIG_IP_NF_TARGET_DSCP
	dep_tristate $w.config.f 27 46 "    MARK target support" CONFIG_IP_NF_TARGET_MARK
	dep_tristate $w.config.f 27 47 "  LOG target support" CONFIG_IP_NF_TARGET_LOG
	dep_tristate $w.config.f 27 48 "  CONNMARK target support" CONFIG_IP_NF_TARGET_CONNMARK
	dep_tristate $w.config.f 27 49 "  ULOG target support" CONFIG_IP_NF_TARGET_ULOG
	dep_tristate $w.config.f 27 50 "  TCPMSS target support" CONFIG_IP_NF_TARGET_TCPMSS
	tristate $w.config.f 27 51 "ARP tables support" CONFIG_IP_NF_ARPTABLES
	dep_tristate $w.config.f 27 52 "  ARP packet filtering" CONFIG_IP_NF_ARPFILTER
	dep_tristate $w.config.f 27 53 "  ARP payload mangling" CONFIG_IP_NF_ARP_MANGLE
	tristate $w.config.f 27 54 "ipchains (2.2-style) support" CONFIG_IP_NF_COMPAT_IPCHAINS
	tristate $w.config.f 27 55 "ipfwadm (2.0-style) support" CONFIG_IP_NF_COMPAT_IPFWADM



	focus $w
	update_active
	global winx; global winy
	if {[winfo exists .menu26] == 0} then {menu26 .menu26 "Networking options"}
	set winx [expr [winfo x .menu26]+30]; set winy [expr [winfo y .menu26]+30]
	if {[winfo exists $w]} then {wm geometry $w +$winx+$winy}
	update idletasks
	if {[winfo exists $w]} then  {$w.config.canvas create window 0 0 -anchor nw -window $w.config.f

	$w.config.canvas configure \
		-width [expr [winfo reqwidth $w.config.f] + 1]\
		-scrollregion "-1 -1 [expr [winfo reqwidth $w.config.f] + 1] \
			 [expr [winfo reqheight $w.config.f] + 1]"

	set winy [expr [winfo reqh $w] - [winfo reqh $w.config.canvas]]
	set scry [expr [winfo screenh $w] / 2]
	set maxy [expr [winfo screenh $w] * 3 / 4]
	set canvtotal [expr [winfo reqh $w.config.f] + 2]
	if [expr $winy + $canvtotal < $maxy] {
		$w.config.canvas configure -height $canvtotal
	} else {
		$w.config.canvas configure -height [expr $scry - $winy]
		}
	}
	update idletasks
	if {[winfo exists $w]} then {
	wm maxsize $w [winfo width $w] [winfo screenheight $w]
	wm minsize $w [winfo width $w] 100

	wm deiconify $w
}
}

proc update_menu27 {} {
	global CONFIG_MODULES
	global CONFIG_NET
	global CONFIG_INET
	global CONFIG_NETFILTER
	global CONFIG_IP_NF_CONNTRACK
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0)} then {
	configure_entry .menu27.config.f.x0 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu27.config.f.x0 normal {m}} else {configure_entry .menu27.config.f.x0 disabled {m}}; configure_entry .menu27.config.f.x0 normal {n l}} else {configure_entry .menu27.config.f.x0 disabled {y n m l}}
	global CONFIG_IP_NF_FTP
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_CONNTRACK != 0) && ($CONFIG_IP_NF_CONNTRACK == 1 || $CONFIG_IP_NF_CONNTRACK == 2 || $CONFIG_IP_NF_CONNTRACK == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP_NF_CONNTRACK]];set CONFIG_IP_NF_FTP [sync_tristate $CONFIG_IP_NF_FTP $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu27.config.f.x1 disabled {y}} else {configure_entry .menu27.config.f.x1 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu27.config.f.x1 disabled {m}} else {configure_entry .menu27.config.f.x1 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu27.config.f.x1 normal {m}} else {configure_entry .menu27.config.f.x1 disabled {m}}; configure_entry .menu27.config.f.x1 normal {n l}} else {configure_entry .menu27.config.f.x1 disabled {y n m l}}
	global CONFIG_IP_NF_CONNTRACK_MARK
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_CONNTRACK != 0)} then {
	configure_entry .menu27.config.f.x2 normal {n l y}} else {configure_entry .menu27.config.f.x2 disabled {y n l}}
	global CONFIG_IP_NF_H323
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_CONNTRACK != 0) && ($CONFIG_IP_NF_CONNTRACK == 1 || $CONFIG_IP_NF_CONNTRACK == 2 || $CONFIG_IP_NF_CONNTRACK == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP_NF_CONNTRACK]];set CONFIG_IP_NF_H323 [sync_tristate $CONFIG_IP_NF_H323 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu27.config.f.x3 disabled {y}} else {configure_entry .menu27.config.f.x3 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu27.config.f.x3 disabled {m}} else {configure_entry .menu27.config.f.x3 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu27.config.f.x3 normal {m}} else {configure_entry .menu27.config.f.x3 disabled {m}}; configure_entry .menu27.config.f.x3 normal {n l}} else {configure_entry .menu27.config.f.x3 disabled {y n m l}}
	global CONFIG_IP_NF_AMANDA
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_CONNTRACK != 0) && ($CONFIG_IP_NF_CONNTRACK == 1 || $CONFIG_IP_NF_CONNTRACK == 2 || $CONFIG_IP_NF_CONNTRACK == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP_NF_CONNTRACK]];set CONFIG_IP_NF_AMANDA [sync_tristate $CONFIG_IP_NF_AMANDA $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu27.config.f.x4 disabled {y}} else {configure_entry .menu27.config.f.x4 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu27.config.f.x4 disabled {m}} else {configure_entry .menu27.config.f.x4 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu27.config.f.x4 normal {m}} else {configure_entry .menu27.config.f.x4 disabled {m}}; configure_entry .menu27.config.f.x4 normal {n l}} else {configure_entry .menu27.config.f.x4 disabled {y n m l}}
	global CONFIG_IP_NF_TFTP
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_CONNTRACK != 0) && ($CONFIG_IP_NF_CONNTRACK == 1 || $CONFIG_IP_NF_CONNTRACK == 2 || $CONFIG_IP_NF_CONNTRACK == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP_NF_CONNTRACK]];set CONFIG_IP_NF_TFTP [sync_tristate $CONFIG_IP_NF_TFTP $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu27.config.f.x5 disabled {y}} else {configure_entry .menu27.config.f.x5 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu27.config.f.x5 disabled {m}} else {configure_entry .menu27.config.f.x5 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu27.config.f.x5 normal {m}} else {configure_entry .menu27.config.f.x5 disabled {m}}; configure_entry .menu27.config.f.x5 normal {n l}} else {configure_entry .menu27.config.f.x5 disabled {y n m l}}
	global CONFIG_IP_NF_IRC
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_CONNTRACK != 0) && ($CONFIG_IP_NF_CONNTRACK == 1 || $CONFIG_IP_NF_CONNTRACK == 2 || $CONFIG_IP_NF_CONNTRACK == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP_NF_CONNTRACK]];set CONFIG_IP_NF_IRC [sync_tristate $CONFIG_IP_NF_IRC $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu27.config.f.x6 disabled {y}} else {configure_entry .menu27.config.f.x6 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu27.config.f.x6 disabled {m}} else {configure_entry .menu27.config.f.x6 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu27.config.f.x6 normal {m}} else {configure_entry .menu27.config.f.x6 disabled {m}}; configure_entry .menu27.config.f.x6 normal {n l}} else {configure_entry .menu27.config.f.x6 disabled {y n m l}}
	global CONFIG_IP_NF_CT_PROTO_GRE
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_CONNTRACK != 0) && ($CONFIG_IP_NF_CONNTRACK == 1 || $CONFIG_IP_NF_CONNTRACK == 2 || $CONFIG_IP_NF_CONNTRACK == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP_NF_CONNTRACK]];set CONFIG_IP_NF_CT_PROTO_GRE [sync_tristate $CONFIG_IP_NF_CT_PROTO_GRE $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu27.config.f.x7 disabled {y}} else {configure_entry .menu27.config.f.x7 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu27.config.f.x7 disabled {m}} else {configure_entry .menu27.config.f.x7 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu27.config.f.x7 normal {m}} else {configure_entry .menu27.config.f.x7 disabled {m}}; configure_entry .menu27.config.f.x7 normal {n l}} else {configure_entry .menu27.config.f.x7 disabled {y n m l}}
	global CONFIG_IP_NF_PPTP
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_CONNTRACK != 0) && ($CONFIG_IP_NF_CT_PROTO_GRE == 1 || $CONFIG_IP_NF_CT_PROTO_GRE == 2 || $CONFIG_IP_NF_CT_PROTO_GRE == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP_NF_CT_PROTO_GRE]];set CONFIG_IP_NF_PPTP [sync_tristate $CONFIG_IP_NF_PPTP $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu27.config.f.x8 disabled {y}} else {configure_entry .menu27.config.f.x8 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu27.config.f.x8 disabled {m}} else {configure_entry .menu27.config.f.x8 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu27.config.f.x8 normal {m}} else {configure_entry .menu27.config.f.x8 disabled {m}}; configure_entry .menu27.config.f.x8 normal {n l}} else {configure_entry .menu27.config.f.x8 disabled {y n m l}}
	global CONFIG_EXPERIMENTAL
	global CONFIG_IP_NF_QUEUE
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_EXPERIMENTAL == 1)} then {
	configure_entry .menu27.config.f.x9 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu27.config.f.x9 normal {m}} else {configure_entry .menu27.config.f.x9 disabled {m}}; configure_entry .menu27.config.f.x9 normal {n l}} else {configure_entry .menu27.config.f.x9 disabled {y n m l}}
	global CONFIG_IP_NF_IPTABLES
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0)} then {
	configure_entry .menu27.config.f.x10 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu27.config.f.x10 normal {m}} else {configure_entry .menu27.config.f.x10 disabled {m}}; configure_entry .menu27.config.f.x10 normal {n l}} else {configure_entry .menu27.config.f.x10 disabled {y n m l}}
	global CONFIG_IP_NF_MATCH_LIMIT
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_IPTABLES == 1 || $CONFIG_IP_NF_IPTABLES == 2 || $CONFIG_IP_NF_IPTABLES == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP_NF_IPTABLES]];set CONFIG_IP_NF_MATCH_LIMIT [sync_tristate $CONFIG_IP_NF_MATCH_LIMIT $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu27.config.f.x11 disabled {y}} else {configure_entry .menu27.config.f.x11 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu27.config.f.x11 disabled {m}} else {configure_entry .menu27.config.f.x11 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu27.config.f.x11 normal {m}} else {configure_entry .menu27.config.f.x11 disabled {m}}; configure_entry .menu27.config.f.x11 normal {n l}} else {configure_entry .menu27.config.f.x11 disabled {y n m l}}
	global CONFIG_IP_NF_MATCH_IPRANGE
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_IPTABLES == 1 || $CONFIG_IP_NF_IPTABLES == 2 || $CONFIG_IP_NF_IPTABLES == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP_NF_IPTABLES]];set CONFIG_IP_NF_MATCH_IPRANGE [sync_tristate $CONFIG_IP_NF_MATCH_IPRANGE $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu27.config.f.x12 disabled {y}} else {configure_entry .menu27.config.f.x12 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu27.config.f.x12 disabled {m}} else {configure_entry .menu27.config.f.x12 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu27.config.f.x12 normal {m}} else {configure_entry .menu27.config.f.x12 disabled {m}}; configure_entry .menu27.config.f.x12 normal {n l}} else {configure_entry .menu27.config.f.x12 disabled {y n m l}}
	global CONFIG_IP_NF_MATCH_MAC
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_IPTABLES == 1 || $CONFIG_IP_NF_IPTABLES == 2 || $CONFIG_IP_NF_IPTABLES == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP_NF_IPTABLES]];set CONFIG_IP_NF_MATCH_MAC [sync_tristate $CONFIG_IP_NF_MATCH_MAC $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu27.config.f.x13 disabled {y}} else {configure_entry .menu27.config.f.x13 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu27.config.f.x13 disabled {m}} else {configure_entry .menu27.config.f.x13 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu27.config.f.x13 normal {m}} else {configure_entry .menu27.config.f.x13 disabled {m}}; configure_entry .menu27.config.f.x13 normal {n l}} else {configure_entry .menu27.config.f.x13 disabled {y n m l}}
	global CONFIG_IP_NF_MATCH_PKTTYPE
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_IPTABLES == 1 || $CONFIG_IP_NF_IPTABLES == 2 || $CONFIG_IP_NF_IPTABLES == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP_NF_IPTABLES]];set CONFIG_IP_NF_MATCH_PKTTYPE [sync_tristate $CONFIG_IP_NF_MATCH_PKTTYPE $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu27.config.f.x14 disabled {y}} else {configure_entry .menu27.config.f.x14 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu27.config.f.x14 disabled {m}} else {configure_entry .menu27.config.f.x14 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu27.config.f.x14 normal {m}} else {configure_entry .menu27.config.f.x14 disabled {m}}; configure_entry .menu27.config.f.x14 normal {n l}} else {configure_entry .menu27.config.f.x14 disabled {y n m l}}
	global CONFIG_IP_NF_MATCH_MARK
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_IPTABLES == 1 || $CONFIG_IP_NF_IPTABLES == 2 || $CONFIG_IP_NF_IPTABLES == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP_NF_IPTABLES]];set CONFIG_IP_NF_MATCH_MARK [sync_tristate $CONFIG_IP_NF_MATCH_MARK $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu27.config.f.x15 disabled {y}} else {configure_entry .menu27.config.f.x15 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu27.config.f.x15 disabled {m}} else {configure_entry .menu27.config.f.x15 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu27.config.f.x15 normal {m}} else {configure_entry .menu27.config.f.x15 disabled {m}}; configure_entry .menu27.config.f.x15 normal {n l}} else {configure_entry .menu27.config.f.x15 disabled {y n m l}}
	global CONFIG_IP_NF_MATCH_MULTIPORT
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_IPTABLES == 1 || $CONFIG_IP_NF_IPTABLES == 2 || $CONFIG_IP_NF_IPTABLES == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP_NF_IPTABLES]];set CONFIG_IP_NF_MATCH_MULTIPORT [sync_tristate $CONFIG_IP_NF_MATCH_MULTIPORT $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu27.config.f.x16 disabled {y}} else {configure_entry .menu27.config.f.x16 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu27.config.f.x16 disabled {m}} else {configure_entry .menu27.config.f.x16 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu27.config.f.x16 normal {m}} else {configure_entry .menu27.config.f.x16 disabled {m}}; configure_entry .menu27.config.f.x16 normal {n l}} else {configure_entry .menu27.config.f.x16 disabled {y n m l}}
	global CONFIG_IP_NF_MATCH_TOS
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_IPTABLES == 1 || $CONFIG_IP_NF_IPTABLES == 2 || $CONFIG_IP_NF_IPTABLES == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP_NF_IPTABLES]];set CONFIG_IP_NF_MATCH_TOS [sync_tristate $CONFIG_IP_NF_MATCH_TOS $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu27.config.f.x17 disabled {y}} else {configure_entry .menu27.config.f.x17 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu27.config.f.x17 disabled {m}} else {configure_entry .menu27.config.f.x17 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu27.config.f.x17 normal {m}} else {configure_entry .menu27.config.f.x17 disabled {m}}; configure_entry .menu27.config.f.x17 normal {n l}} else {configure_entry .menu27.config.f.x17 disabled {y n m l}}
	global CONFIG_IP_NF_MATCH_TIME
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_IPTABLES == 1 || $CONFIG_IP_NF_IPTABLES == 2 || $CONFIG_IP_NF_IPTABLES == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP_NF_IPTABLES]];set CONFIG_IP_NF_MATCH_TIME [sync_tristate $CONFIG_IP_NF_MATCH_TIME $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu27.config.f.x18 disabled {y}} else {configure_entry .menu27.config.f.x18 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu27.config.f.x18 disabled {m}} else {configure_entry .menu27.config.f.x18 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu27.config.f.x18 normal {m}} else {configure_entry .menu27.config.f.x18 disabled {m}}; configure_entry .menu27.config.f.x18 normal {n l}} else {configure_entry .menu27.config.f.x18 disabled {y n m l}}
	global CONFIG_IP_NF_MATCH_RECENT
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_IPTABLES == 1 || $CONFIG_IP_NF_IPTABLES == 2 || $CONFIG_IP_NF_IPTABLES == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP_NF_IPTABLES]];set CONFIG_IP_NF_MATCH_RECENT [sync_tristate $CONFIG_IP_NF_MATCH_RECENT $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu27.config.f.x19 disabled {y}} else {configure_entry .menu27.config.f.x19 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu27.config.f.x19 disabled {m}} else {configure_entry .menu27.config.f.x19 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu27.config.f.x19 normal {m}} else {configure_entry .menu27.config.f.x19 disabled {m}}; configure_entry .menu27.config.f.x19 normal {n l}} else {configure_entry .menu27.config.f.x19 disabled {y n m l}}
	global CONFIG_IP_NF_MATCH_ECN
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_IPTABLES == 1 || $CONFIG_IP_NF_IPTABLES == 2 || $CONFIG_IP_NF_IPTABLES == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP_NF_IPTABLES]];set CONFIG_IP_NF_MATCH_ECN [sync_tristate $CONFIG_IP_NF_MATCH_ECN $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu27.config.f.x20 disabled {y}} else {configure_entry .menu27.config.f.x20 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu27.config.f.x20 disabled {m}} else {configure_entry .menu27.config.f.x20 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu27.config.f.x20 normal {m}} else {configure_entry .menu27.config.f.x20 disabled {m}}; configure_entry .menu27.config.f.x20 normal {n l}} else {configure_entry .menu27.config.f.x20 disabled {y n m l}}
	global CONFIG_IP_NF_MATCH_DSCP
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_IPTABLES == 1 || $CONFIG_IP_NF_IPTABLES == 2 || $CONFIG_IP_NF_IPTABLES == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP_NF_IPTABLES]];set CONFIG_IP_NF_MATCH_DSCP [sync_tristate $CONFIG_IP_NF_MATCH_DSCP $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu27.config.f.x21 disabled {y}} else {configure_entry .menu27.config.f.x21 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu27.config.f.x21 disabled {m}} else {configure_entry .menu27.config.f.x21 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu27.config.f.x21 normal {m}} else {configure_entry .menu27.config.f.x21 disabled {m}}; configure_entry .menu27.config.f.x21 normal {n l}} else {configure_entry .menu27.config.f.x21 disabled {y n m l}}
	global CONFIG_IP_NF_MATCH_AH_ESP
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_IPTABLES == 1 || $CONFIG_IP_NF_IPTABLES == 2 || $CONFIG_IP_NF_IPTABLES == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP_NF_IPTABLES]];set CONFIG_IP_NF_MATCH_AH_ESP [sync_tristate $CONFIG_IP_NF_MATCH_AH_ESP $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu27.config.f.x22 disabled {y}} else {configure_entry .menu27.config.f.x22 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu27.config.f.x22 disabled {m}} else {configure_entry .menu27.config.f.x22 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu27.config.f.x22 normal {m}} else {configure_entry .menu27.config.f.x22 disabled {m}}; configure_entry .menu27.config.f.x22 normal {n l}} else {configure_entry .menu27.config.f.x22 disabled {y n m l}}
	global CONFIG_IP_NF_MATCH_LENGTH
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_IPTABLES == 1 || $CONFIG_IP_NF_IPTABLES == 2 || $CONFIG_IP_NF_IPTABLES == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP_NF_IPTABLES]];set CONFIG_IP_NF_MATCH_LENGTH [sync_tristate $CONFIG_IP_NF_MATCH_LENGTH $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu27.config.f.x23 disabled {y}} else {configure_entry .menu27.config.f.x23 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu27.config.f.x23 disabled {m}} else {configure_entry .menu27.config.f.x23 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu27.config.f.x23 normal {m}} else {configure_entry .menu27.config.f.x23 disabled {m}}; configure_entry .menu27.config.f.x23 normal {n l}} else {configure_entry .menu27.config.f.x23 disabled {y n m l}}
	global CONFIG_IP_NF_MATCH_TTL
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_IPTABLES == 1 || $CONFIG_IP_NF_IPTABLES == 2 || $CONFIG_IP_NF_IPTABLES == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP_NF_IPTABLES]];set CONFIG_IP_NF_MATCH_TTL [sync_tristate $CONFIG_IP_NF_MATCH_TTL $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu27.config.f.x24 disabled {y}} else {configure_entry .menu27.config.f.x24 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu27.config.f.x24 disabled {m}} else {configure_entry .menu27.config.f.x24 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu27.config.f.x24 normal {m}} else {configure_entry .menu27.config.f.x24 disabled {m}}; configure_entry .menu27.config.f.x24 normal {n l}} else {configure_entry .menu27.config.f.x24 disabled {y n m l}}
	global CONFIG_IP_NF_MATCH_TCPMSS
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_IPTABLES == 1 || $CONFIG_IP_NF_IPTABLES == 2 || $CONFIG_IP_NF_IPTABLES == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP_NF_IPTABLES]];set CONFIG_IP_NF_MATCH_TCPMSS [sync_tristate $CONFIG_IP_NF_MATCH_TCPMSS $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu27.config.f.x25 disabled {y}} else {configure_entry .menu27.config.f.x25 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu27.config.f.x25 disabled {m}} else {configure_entry .menu27.config.f.x25 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu27.config.f.x25 normal {m}} else {configure_entry .menu27.config.f.x25 disabled {m}}; configure_entry .menu27.config.f.x25 normal {n l}} else {configure_entry .menu27.config.f.x25 disabled {y n m l}}
	global CONFIG_IP_NF_MATCH_HELPER
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_CONNTRACK != 0) && ($CONFIG_IP_NF_IPTABLES == 1 || $CONFIG_IP_NF_IPTABLES == 2 || $CONFIG_IP_NF_IPTABLES == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP_NF_IPTABLES]];set CONFIG_IP_NF_MATCH_HELPER [sync_tristate $CONFIG_IP_NF_MATCH_HELPER $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu27.config.f.x26 disabled {y}} else {configure_entry .menu27.config.f.x26 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu27.config.f.x26 disabled {m}} else {configure_entry .menu27.config.f.x26 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu27.config.f.x26 normal {m}} else {configure_entry .menu27.config.f.x26 disabled {m}}; configure_entry .menu27.config.f.x26 normal {n l}} else {configure_entry .menu27.config.f.x26 disabled {y n m l}}
	global CONFIG_IP_NF_MATCH_STATE
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_CONNTRACK != 0) && ($CONFIG_IP_NF_CONNTRACK == 1 || $CONFIG_IP_NF_CONNTRACK == 2 || $CONFIG_IP_NF_CONNTRACK == 4) && ($CONFIG_IP_NF_IPTABLES == 1 || $CONFIG_IP_NF_IPTABLES == 2 || $CONFIG_IP_NF_IPTABLES == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP_NF_CONNTRACK $CONFIG_IP_NF_IPTABLES]];set CONFIG_IP_NF_MATCH_STATE [sync_tristate $CONFIG_IP_NF_MATCH_STATE $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu27.config.f.x27 disabled {y}} else {configure_entry .menu27.config.f.x27 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu27.config.f.x27 disabled {m}} else {configure_entry .menu27.config.f.x27 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu27.config.f.x27 normal {m}} else {configure_entry .menu27.config.f.x27 disabled {m}}; configure_entry .menu27.config.f.x27 normal {n l}} else {configure_entry .menu27.config.f.x27 disabled {y n m l}}
	global CONFIG_IP_NF_MATCH_CONNMARK
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_CONNTRACK != 0) && ($CONFIG_IP_NF_CONNTRACK_MARK != 0) && ($CONFIG_IP_NF_IPTABLES == 1 || $CONFIG_IP_NF_IPTABLES == 2 || $CONFIG_IP_NF_IPTABLES == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP_NF_IPTABLES]];set CONFIG_IP_NF_MATCH_CONNMARK [sync_tristate $CONFIG_IP_NF_MATCH_CONNMARK $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu27.config.f.x28 disabled {y}} else {configure_entry .menu27.config.f.x28 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu27.config.f.x28 disabled {m}} else {configure_entry .menu27.config.f.x28 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu27.config.f.x28 normal {m}} else {configure_entry .menu27.config.f.x28 disabled {m}}; configure_entry .menu27.config.f.x28 normal {n l}} else {configure_entry .menu27.config.f.x28 disabled {y n m l}}
	global CONFIG_IP_NF_MATCH_CONNTRACK
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_CONNTRACK != 0) && ($CONFIG_IP_NF_CONNTRACK == 1 || $CONFIG_IP_NF_CONNTRACK == 2 || $CONFIG_IP_NF_CONNTRACK == 4) && ($CONFIG_IP_NF_IPTABLES == 1 || $CONFIG_IP_NF_IPTABLES == 2 || $CONFIG_IP_NF_IPTABLES == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP_NF_CONNTRACK $CONFIG_IP_NF_IPTABLES]];set CONFIG_IP_NF_MATCH_CONNTRACK [sync_tristate $CONFIG_IP_NF_MATCH_CONNTRACK $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu27.config.f.x29 disabled {y}} else {configure_entry .menu27.config.f.x29 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu27.config.f.x29 disabled {m}} else {configure_entry .menu27.config.f.x29 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu27.config.f.x29 normal {m}} else {configure_entry .menu27.config.f.x29 disabled {m}}; configure_entry .menu27.config.f.x29 normal {n l}} else {configure_entry .menu27.config.f.x29 disabled {y n m l}}
	global CONFIG_IP_NF_MATCH_UNCLEAN
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_IP_NF_IPTABLES == 1 || $CONFIG_IP_NF_IPTABLES == 2 || $CONFIG_IP_NF_IPTABLES == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP_NF_IPTABLES]];set CONFIG_IP_NF_MATCH_UNCLEAN [sync_tristate $CONFIG_IP_NF_MATCH_UNCLEAN $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu27.config.f.x30 disabled {y}} else {configure_entry .menu27.config.f.x30 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu27.config.f.x30 disabled {m}} else {configure_entry .menu27.config.f.x30 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu27.config.f.x30 normal {m}} else {configure_entry .menu27.config.f.x30 disabled {m}}; configure_entry .menu27.config.f.x30 normal {n l}} else {configure_entry .menu27.config.f.x30 disabled {y n m l}}
	global CONFIG_IP_NF_MATCH_STRING
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_IP_NF_IPTABLES == 1 || $CONFIG_IP_NF_IPTABLES == 2 || $CONFIG_IP_NF_IPTABLES == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP_NF_IPTABLES]];set CONFIG_IP_NF_MATCH_STRING [sync_tristate $CONFIG_IP_NF_MATCH_STRING $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu27.config.f.x31 disabled {y}} else {configure_entry .menu27.config.f.x31 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu27.config.f.x31 disabled {m}} else {configure_entry .menu27.config.f.x31 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu27.config.f.x31 normal {m}} else {configure_entry .menu27.config.f.x31 disabled {m}}; configure_entry .menu27.config.f.x31 normal {n l}} else {configure_entry .menu27.config.f.x31 disabled {y n m l}}
	global CONFIG_IP_NF_MATCH_OWNER
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_IP_NF_IPTABLES == 1 || $CONFIG_IP_NF_IPTABLES == 2 || $CONFIG_IP_NF_IPTABLES == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP_NF_IPTABLES]];set CONFIG_IP_NF_MATCH_OWNER [sync_tristate $CONFIG_IP_NF_MATCH_OWNER $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu27.config.f.x32 disabled {y}} else {configure_entry .menu27.config.f.x32 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu27.config.f.x32 disabled {m}} else {configure_entry .menu27.config.f.x32 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu27.config.f.x32 normal {m}} else {configure_entry .menu27.config.f.x32 disabled {m}}; configure_entry .menu27.config.f.x32 normal {n l}} else {configure_entry .menu27.config.f.x32 disabled {y n m l}}
	global CONFIG_IP_NF_FILTER
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_IPTABLES == 1 || $CONFIG_IP_NF_IPTABLES == 2 || $CONFIG_IP_NF_IPTABLES == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP_NF_IPTABLES]];set CONFIG_IP_NF_FILTER [sync_tristate $CONFIG_IP_NF_FILTER $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu27.config.f.x33 disabled {y}} else {configure_entry .menu27.config.f.x33 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu27.config.f.x33 disabled {m}} else {configure_entry .menu27.config.f.x33 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu27.config.f.x33 normal {m}} else {configure_entry .menu27.config.f.x33 disabled {m}}; configure_entry .menu27.config.f.x33 normal {n l}} else {configure_entry .menu27.config.f.x33 disabled {y n m l}}
	global CONFIG_IP_NF_TARGET_REJECT
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_FILTER != 0) && ($CONFIG_IP_NF_FILTER == 1 || $CONFIG_IP_NF_FILTER == 2 || $CONFIG_IP_NF_FILTER == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP_NF_FILTER]];set CONFIG_IP_NF_TARGET_REJECT [sync_tristate $CONFIG_IP_NF_TARGET_REJECT $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu27.config.f.x34 disabled {y}} else {configure_entry .menu27.config.f.x34 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu27.config.f.x34 disabled {m}} else {configure_entry .menu27.config.f.x34 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu27.config.f.x34 normal {m}} else {configure_entry .menu27.config.f.x34 disabled {m}}; configure_entry .menu27.config.f.x34 normal {n l}} else {configure_entry .menu27.config.f.x34 disabled {y n m l}}
	global CONFIG_IP_NF_TARGET_MIRROR
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_FILTER != 0) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_IP_NF_FILTER == 1 || $CONFIG_IP_NF_FILTER == 2 || $CONFIG_IP_NF_FILTER == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP_NF_FILTER]];set CONFIG_IP_NF_TARGET_MIRROR [sync_tristate $CONFIG_IP_NF_TARGET_MIRROR $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu27.config.f.x35 disabled {y}} else {configure_entry .menu27.config.f.x35 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu27.config.f.x35 disabled {m}} else {configure_entry .menu27.config.f.x35 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu27.config.f.x35 normal {m}} else {configure_entry .menu27.config.f.x35 disabled {m}}; configure_entry .menu27.config.f.x35 normal {n l}} else {configure_entry .menu27.config.f.x35 disabled {y n m l}}
	global CONFIG_IP_NF_NAT
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_CONNTRACK != 0) && ($CONFIG_IP_NF_IPTABLES == 1 || $CONFIG_IP_NF_IPTABLES == 2 || $CONFIG_IP_NF_IPTABLES == 4) && ($CONFIG_IP_NF_CONNTRACK == 1 || $CONFIG_IP_NF_CONNTRACK == 2 || $CONFIG_IP_NF_CONNTRACK == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP_NF_IPTABLES $CONFIG_IP_NF_CONNTRACK]];set CONFIG_IP_NF_NAT [sync_tristate $CONFIG_IP_NF_NAT $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu27.config.f.x36 disabled {y}} else {configure_entry .menu27.config.f.x36 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu27.config.f.x36 disabled {m}} else {configure_entry .menu27.config.f.x36 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu27.config.f.x36 normal {m}} else {configure_entry .menu27.config.f.x36 disabled {m}}; configure_entry .menu27.config.f.x36 normal {n l}} else {configure_entry .menu27.config.f.x36 disabled {y n m l}}
	global CONFIG_IP_NF_TARGET_MASQUERADE
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_CONNTRACK != 0) && ($CONFIG_IP_NF_NAT != 0) && ($CONFIG_IP_NF_NAT == 1 || $CONFIG_IP_NF_NAT == 2 || $CONFIG_IP_NF_NAT == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP_NF_NAT]];set CONFIG_IP_NF_TARGET_MASQUERADE [sync_tristate $CONFIG_IP_NF_TARGET_MASQUERADE $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu27.config.f.x37 disabled {y}} else {configure_entry .menu27.config.f.x37 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu27.config.f.x37 disabled {m}} else {configure_entry .menu27.config.f.x37 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu27.config.f.x37 normal {m}} else {configure_entry .menu27.config.f.x37 disabled {m}}; configure_entry .menu27.config.f.x37 normal {n l}} else {configure_entry .menu27.config.f.x37 disabled {y n m l}}
	global CONFIG_IP_NF_TARGET_REDIRECT
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_CONNTRACK != 0) && ($CONFIG_IP_NF_NAT != 0) && ($CONFIG_IP_NF_NAT == 1 || $CONFIG_IP_NF_NAT == 2 || $CONFIG_IP_NF_NAT == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP_NF_NAT]];set CONFIG_IP_NF_TARGET_REDIRECT [sync_tristate $CONFIG_IP_NF_TARGET_REDIRECT $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu27.config.f.x38 disabled {y}} else {configure_entry .menu27.config.f.x38 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu27.config.f.x38 disabled {m}} else {configure_entry .menu27.config.f.x38 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu27.config.f.x38 normal {m}} else {configure_entry .menu27.config.f.x38 disabled {m}}; configure_entry .menu27.config.f.x38 normal {n l}} else {configure_entry .menu27.config.f.x38 disabled {y n m l}}
	global CONFIG_IP_NF_TARGET_NETMAP
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_CONNTRACK != 0) && ($CONFIG_IP_NF_NAT != 0) && ($CONFIG_IP_NF_NAT == 1 || $CONFIG_IP_NF_NAT == 2 || $CONFIG_IP_NF_NAT == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP_NF_NAT]];set CONFIG_IP_NF_TARGET_NETMAP [sync_tristate $CONFIG_IP_NF_TARGET_NETMAP $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu27.config.f.x39 disabled {y}} else {configure_entry .menu27.config.f.x39 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu27.config.f.x39 disabled {m}} else {configure_entry .menu27.config.f.x39 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu27.config.f.x39 normal {m}} else {configure_entry .menu27.config.f.x39 disabled {m}}; configure_entry .menu27.config.f.x39 normal {n l}} else {configure_entry .menu27.config.f.x39 disabled {y n m l}}
	global CONFIG_IP_NF_NAT_LOCAL
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_CONNTRACK != 0) && ($CONFIG_IP_NF_NAT != 0)} then {
	configure_entry .menu27.config.f.x40 normal {n l y}} else {configure_entry .menu27.config.f.x40 disabled {y n l}}
	global CONFIG_IP_NF_NAT_SNMP_BASIC
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_CONNTRACK != 0) && ($CONFIG_IP_NF_NAT != 0) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_IP_NF_NAT == 1 || $CONFIG_IP_NF_NAT == 2 || $CONFIG_IP_NF_NAT == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP_NF_NAT]];set CONFIG_IP_NF_NAT_SNMP_BASIC [sync_tristate $CONFIG_IP_NF_NAT_SNMP_BASIC $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu27.config.f.x41 disabled {y}} else {configure_entry .menu27.config.f.x41 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu27.config.f.x41 disabled {m}} else {configure_entry .menu27.config.f.x41 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu27.config.f.x41 normal {m}} else {configure_entry .menu27.config.f.x41 disabled {m}}; configure_entry .menu27.config.f.x41 normal {n l}} else {configure_entry .menu27.config.f.x41 disabled {y n m l}}
	global CONFIG_IP_NF_MANGLE
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_IPTABLES == 1 || $CONFIG_IP_NF_IPTABLES == 2 || $CONFIG_IP_NF_IPTABLES == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP_NF_IPTABLES]];set CONFIG_IP_NF_MANGLE [sync_tristate $CONFIG_IP_NF_MANGLE $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu27.config.f.x42 disabled {y}} else {configure_entry .menu27.config.f.x42 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu27.config.f.x42 disabled {m}} else {configure_entry .menu27.config.f.x42 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu27.config.f.x42 normal {m}} else {configure_entry .menu27.config.f.x42 disabled {m}}; configure_entry .menu27.config.f.x42 normal {n l}} else {configure_entry .menu27.config.f.x42 disabled {y n m l}}
	global CONFIG_IP_NF_TARGET_TOS
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_MANGLE != 0) && ($CONFIG_IP_NF_MANGLE == 1 || $CONFIG_IP_NF_MANGLE == 2 || $CONFIG_IP_NF_MANGLE == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP_NF_MANGLE]];set CONFIG_IP_NF_TARGET_TOS [sync_tristate $CONFIG_IP_NF_TARGET_TOS $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu27.config.f.x43 disabled {y}} else {configure_entry .menu27.config.f.x43 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu27.config.f.x43 disabled {m}} else {configure_entry .menu27.config.f.x43 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu27.config.f.x43 normal {m}} else {configure_entry .menu27.config.f.x43 disabled {m}}; configure_entry .menu27.config.f.x43 normal {n l}} else {configure_entry .menu27.config.f.x43 disabled {y n m l}}
	global CONFIG_IP_NF_TARGET_ECN
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_MANGLE != 0) && ($CONFIG_IP_NF_MANGLE == 1 || $CONFIG_IP_NF_MANGLE == 2 || $CONFIG_IP_NF_MANGLE == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP_NF_MANGLE]];set CONFIG_IP_NF_TARGET_ECN [sync_tristate $CONFIG_IP_NF_TARGET_ECN $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu27.config.f.x44 disabled {y}} else {configure_entry .menu27.config.f.x44 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu27.config.f.x44 disabled {m}} else {configure_entry .menu27.config.f.x44 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu27.config.f.x44 normal {m}} else {configure_entry .menu27.config.f.x44 disabled {m}}; configure_entry .menu27.config.f.x44 normal {n l}} else {configure_entry .menu27.config.f.x44 disabled {y n m l}}
	global CONFIG_IP_NF_TARGET_DSCP
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_MANGLE != 0) && ($CONFIG_IP_NF_MANGLE == 1 || $CONFIG_IP_NF_MANGLE == 2 || $CONFIG_IP_NF_MANGLE == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP_NF_MANGLE]];set CONFIG_IP_NF_TARGET_DSCP [sync_tristate $CONFIG_IP_NF_TARGET_DSCP $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu27.config.f.x45 disabled {y}} else {configure_entry .menu27.config.f.x45 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu27.config.f.x45 disabled {m}} else {configure_entry .menu27.config.f.x45 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu27.config.f.x45 normal {m}} else {configure_entry .menu27.config.f.x45 disabled {m}}; configure_entry .menu27.config.f.x45 normal {n l}} else {configure_entry .menu27.config.f.x45 disabled {y n m l}}
	global CONFIG_IP_NF_TARGET_MARK
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_MANGLE != 0) && ($CONFIG_IP_NF_MANGLE == 1 || $CONFIG_IP_NF_MANGLE == 2 || $CONFIG_IP_NF_MANGLE == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP_NF_MANGLE]];set CONFIG_IP_NF_TARGET_MARK [sync_tristate $CONFIG_IP_NF_TARGET_MARK $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu27.config.f.x46 disabled {y}} else {configure_entry .menu27.config.f.x46 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu27.config.f.x46 disabled {m}} else {configure_entry .menu27.config.f.x46 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu27.config.f.x46 normal {m}} else {configure_entry .menu27.config.f.x46 disabled {m}}; configure_entry .menu27.config.f.x46 normal {n l}} else {configure_entry .menu27.config.f.x46 disabled {y n m l}}
	global CONFIG_IP_NF_TARGET_LOG
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_IPTABLES == 1 || $CONFIG_IP_NF_IPTABLES == 2 || $CONFIG_IP_NF_IPTABLES == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP_NF_IPTABLES]];set CONFIG_IP_NF_TARGET_LOG [sync_tristate $CONFIG_IP_NF_TARGET_LOG $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu27.config.f.x47 disabled {y}} else {configure_entry .menu27.config.f.x47 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu27.config.f.x47 disabled {m}} else {configure_entry .menu27.config.f.x47 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu27.config.f.x47 normal {m}} else {configure_entry .menu27.config.f.x47 disabled {m}}; configure_entry .menu27.config.f.x47 normal {n l}} else {configure_entry .menu27.config.f.x47 disabled {y n m l}}
	global CONFIG_IP_NF_TARGET_CONNMARK
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_CONNTRACK_MARK != 0) && ($CONFIG_IP_NF_IPTABLES == 1 || $CONFIG_IP_NF_IPTABLES == 2 || $CONFIG_IP_NF_IPTABLES == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP_NF_IPTABLES]];set CONFIG_IP_NF_TARGET_CONNMARK [sync_tristate $CONFIG_IP_NF_TARGET_CONNMARK $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu27.config.f.x48 disabled {y}} else {configure_entry .menu27.config.f.x48 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu27.config.f.x48 disabled {m}} else {configure_entry .menu27.config.f.x48 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu27.config.f.x48 normal {m}} else {configure_entry .menu27.config.f.x48 disabled {m}}; configure_entry .menu27.config.f.x48 normal {n l}} else {configure_entry .menu27.config.f.x48 disabled {y n m l}}
	global CONFIG_IP_NF_TARGET_ULOG
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_IPTABLES == 1 || $CONFIG_IP_NF_IPTABLES == 2 || $CONFIG_IP_NF_IPTABLES == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP_NF_IPTABLES]];set CONFIG_IP_NF_TARGET_ULOG [sync_tristate $CONFIG_IP_NF_TARGET_ULOG $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu27.config.f.x49 disabled {y}} else {configure_entry .menu27.config.f.x49 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu27.config.f.x49 disabled {m}} else {configure_entry .menu27.config.f.x49 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu27.config.f.x49 normal {m}} else {configure_entry .menu27.config.f.x49 disabled {m}}; configure_entry .menu27.config.f.x49 normal {n l}} else {configure_entry .menu27.config.f.x49 disabled {y n m l}}
	global CONFIG_IP_NF_TARGET_TCPMSS
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_IPTABLES == 1 || $CONFIG_IP_NF_IPTABLES == 2 || $CONFIG_IP_NF_IPTABLES == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP_NF_IPTABLES]];set CONFIG_IP_NF_TARGET_TCPMSS [sync_tristate $CONFIG_IP_NF_TARGET_TCPMSS $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu27.config.f.x50 disabled {y}} else {configure_entry .menu27.config.f.x50 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu27.config.f.x50 disabled {m}} else {configure_entry .menu27.config.f.x50 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu27.config.f.x50 normal {m}} else {configure_entry .menu27.config.f.x50 disabled {m}}; configure_entry .menu27.config.f.x50 normal {n l}} else {configure_entry .menu27.config.f.x50 disabled {y n m l}}
	global CONFIG_IP_NF_ARPTABLES
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0)} then {
	configure_entry .menu27.config.f.x51 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu27.config.f.x51 normal {m}} else {configure_entry .menu27.config.f.x51 disabled {m}}; configure_entry .menu27.config.f.x51 normal {n l}} else {configure_entry .menu27.config.f.x51 disabled {y n m l}}
	global CONFIG_IP_NF_ARPFILTER
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_ARPTABLES != 0) && ($CONFIG_IP_NF_ARPTABLES == 1 || $CONFIG_IP_NF_ARPTABLES == 2 || $CONFIG_IP_NF_ARPTABLES == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP_NF_ARPTABLES]];set CONFIG_IP_NF_ARPFILTER [sync_tristate $CONFIG_IP_NF_ARPFILTER $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu27.config.f.x52 disabled {y}} else {configure_entry .menu27.config.f.x52 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu27.config.f.x52 disabled {m}} else {configure_entry .menu27.config.f.x52 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu27.config.f.x52 normal {m}} else {configure_entry .menu27.config.f.x52 disabled {m}}; configure_entry .menu27.config.f.x52 normal {n l}} else {configure_entry .menu27.config.f.x52 disabled {y n m l}}
	global CONFIG_IP_NF_ARP_MANGLE
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_ARPTABLES != 0) && ($CONFIG_IP_NF_ARPTABLES == 1 || $CONFIG_IP_NF_ARPTABLES == 2 || $CONFIG_IP_NF_ARPTABLES == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP_NF_ARPTABLES]];set CONFIG_IP_NF_ARP_MANGLE [sync_tristate $CONFIG_IP_NF_ARP_MANGLE $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu27.config.f.x53 disabled {y}} else {configure_entry .menu27.config.f.x53 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu27.config.f.x53 disabled {m}} else {configure_entry .menu27.config.f.x53 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu27.config.f.x53 normal {m}} else {configure_entry .menu27.config.f.x53 disabled {m}}; configure_entry .menu27.config.f.x53 normal {n l}} else {configure_entry .menu27.config.f.x53 disabled {y n m l}}
	global CONFIG_IP_NF_COMPAT_IPCHAINS
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_CONNTRACK != 1) && ($CONFIG_IP_NF_IPTABLES != 1)} then {
	configure_entry .menu27.config.f.x54 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu27.config.f.x54 normal {m}} else {configure_entry .menu27.config.f.x54 disabled {m}}; configure_entry .menu27.config.f.x54 normal {n l}} else {configure_entry .menu27.config.f.x54 disabled {y n m l}}
	global CONFIG_IP_NF_COMPAT_IPFWADM
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_CONNTRACK != 1) && ($CONFIG_IP_NF_IPTABLES != 1) && ($CONFIG_IP_NF_COMPAT_IPCHAINS != 1)} then {
	configure_entry .menu27.config.f.x55 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu27.config.f.x55 normal {m}} else {configure_entry .menu27.config.f.x55 disabled {m}}; configure_entry .menu27.config.f.x55 normal {n l}} else {configure_entry .menu27.config.f.x55 disabled {y n m l}}
}


proc update_define_menu27 {} {
	update_define_mainmenu
	global CONFIG_MODULES
	global CONFIG_IP_NF_CONNTRACK
	global CONFIG_IP_NF_QUEUE
	global CONFIG_IP_NF_IPTABLES
	global CONFIG_IP_NF_NAT_NEEDED
	global CONFIG_IP_NF_NAT_H323
	global CONFIG_IP_NF_NAT_AMANDA
	global CONFIG_IP_NF_NAT_IRC
	global CONFIG_IP_NF_NAT_FTP
	global CONFIG_IP_NF_NAT_PPTP
	global CONFIG_IP_NF_NAT_PROTO_GRE
	global CONFIG_IP_NF_NAT_TFTP
	global CONFIG_IP_NF_ARPTABLES
	global CONFIG_IP_NF_COMPAT_IPCHAINS
	global CONFIG_IP_NF_COMPAT_IPFWADM
set CONFIG_IP_NF_CONNTRACK [expr $CONFIG_IP_NF_CONNTRACK|16]
	global CONFIG_IP_NF_CONNTRACK_MARK
set CONFIG_IP_NF_CONNTRACK_MARK [expr $CONFIG_IP_NF_CONNTRACK_MARK|16]
set CONFIG_IP_NF_QUEUE [expr $CONFIG_IP_NF_QUEUE|16]
set CONFIG_IP_NF_IPTABLES [expr $CONFIG_IP_NF_IPTABLES|16]
	global CONFIG_IP_NF_NAT_LOCAL
set CONFIG_IP_NF_NAT_LOCAL [expr $CONFIG_IP_NF_NAT_LOCAL|16]
set CONFIG_IP_NF_ARPTABLES [expr $CONFIG_IP_NF_ARPTABLES|16]
set CONFIG_IP_NF_COMPAT_IPCHAINS [expr $CONFIG_IP_NF_COMPAT_IPCHAINS|16]
set CONFIG_IP_NF_COMPAT_IPFWADM [expr $CONFIG_IP_NF_COMPAT_IPFWADM|16]
	global CONFIG_NET
	global CONFIG_INET
	global CONFIG_NETFILTER
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_IP_NF_CONNTRACK == 2)} then {set CONFIG_IP_NF_CONNTRACK 1}; set CONFIG_IP_NF_CONNTRACK [expr $CONFIG_IP_NF_CONNTRACK&15]}
	global CONFIG_IP_NF_FTP
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_CONNTRACK != 0) && ($CONFIG_IP_NF_CONNTRACK == 1 || $CONFIG_IP_NF_CONNTRACK == 2 || $CONFIG_IP_NF_CONNTRACK == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP_NF_CONNTRACK]]; set CONFIG_IP_NF_FTP [sync_tristate $CONFIG_IP_NF_FTP $tmpvar_dep]; set CONFIG_IP_NF_FTP [expr $CONFIG_IP_NF_FTP&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_CONNTRACK != 0)} then {
	set CONFIG_IP_NF_CONNTRACK_MARK [expr $CONFIG_IP_NF_CONNTRACK_MARK&15]}
	global CONFIG_IP_NF_H323
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_CONNTRACK != 0) && ($CONFIG_IP_NF_CONNTRACK == 1 || $CONFIG_IP_NF_CONNTRACK == 2 || $CONFIG_IP_NF_CONNTRACK == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP_NF_CONNTRACK]]; set CONFIG_IP_NF_H323 [sync_tristate $CONFIG_IP_NF_H323 $tmpvar_dep]; set CONFIG_IP_NF_H323 [expr $CONFIG_IP_NF_H323&15]}
	global CONFIG_IP_NF_AMANDA
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_CONNTRACK != 0) && ($CONFIG_IP_NF_CONNTRACK == 1 || $CONFIG_IP_NF_CONNTRACK == 2 || $CONFIG_IP_NF_CONNTRACK == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP_NF_CONNTRACK]]; set CONFIG_IP_NF_AMANDA [sync_tristate $CONFIG_IP_NF_AMANDA $tmpvar_dep]; set CONFIG_IP_NF_AMANDA [expr $CONFIG_IP_NF_AMANDA&15]}
	global CONFIG_IP_NF_TFTP
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_CONNTRACK != 0) && ($CONFIG_IP_NF_CONNTRACK == 1 || $CONFIG_IP_NF_CONNTRACK == 2 || $CONFIG_IP_NF_CONNTRACK == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP_NF_CONNTRACK]]; set CONFIG_IP_NF_TFTP [sync_tristate $CONFIG_IP_NF_TFTP $tmpvar_dep]; set CONFIG_IP_NF_TFTP [expr $CONFIG_IP_NF_TFTP&15]}
	global CONFIG_IP_NF_IRC
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_CONNTRACK != 0) && ($CONFIG_IP_NF_CONNTRACK == 1 || $CONFIG_IP_NF_CONNTRACK == 2 || $CONFIG_IP_NF_CONNTRACK == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP_NF_CONNTRACK]]; set CONFIG_IP_NF_IRC [sync_tristate $CONFIG_IP_NF_IRC $tmpvar_dep]; set CONFIG_IP_NF_IRC [expr $CONFIG_IP_NF_IRC&15]}
	global CONFIG_IP_NF_CT_PROTO_GRE
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_CONNTRACK != 0) && ($CONFIG_IP_NF_CONNTRACK == 1 || $CONFIG_IP_NF_CONNTRACK == 2 || $CONFIG_IP_NF_CONNTRACK == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP_NF_CONNTRACK]]; set CONFIG_IP_NF_CT_PROTO_GRE [sync_tristate $CONFIG_IP_NF_CT_PROTO_GRE $tmpvar_dep]; set CONFIG_IP_NF_CT_PROTO_GRE [expr $CONFIG_IP_NF_CT_PROTO_GRE&15]}
	global CONFIG_IP_NF_PPTP
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_CONNTRACK != 0) && ($CONFIG_IP_NF_CT_PROTO_GRE == 1 || $CONFIG_IP_NF_CT_PROTO_GRE == 2 || $CONFIG_IP_NF_CT_PROTO_GRE == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP_NF_CT_PROTO_GRE]]; set CONFIG_IP_NF_PPTP [sync_tristate $CONFIG_IP_NF_PPTP $tmpvar_dep]; set CONFIG_IP_NF_PPTP [expr $CONFIG_IP_NF_PPTP&15]}
	global CONFIG_EXPERIMENTAL
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_EXPERIMENTAL == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_IP_NF_QUEUE == 2)} then {set CONFIG_IP_NF_QUEUE 1}; set CONFIG_IP_NF_QUEUE [expr $CONFIG_IP_NF_QUEUE&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_IP_NF_IPTABLES == 2)} then {set CONFIG_IP_NF_IPTABLES 1}; set CONFIG_IP_NF_IPTABLES [expr $CONFIG_IP_NF_IPTABLES&15]}
	global CONFIG_IP_NF_MATCH_LIMIT
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_IPTABLES == 1 || $CONFIG_IP_NF_IPTABLES == 2 || $CONFIG_IP_NF_IPTABLES == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP_NF_IPTABLES]]; set CONFIG_IP_NF_MATCH_LIMIT [sync_tristate $CONFIG_IP_NF_MATCH_LIMIT $tmpvar_dep]; set CONFIG_IP_NF_MATCH_LIMIT [expr $CONFIG_IP_NF_MATCH_LIMIT&15]}
	global CONFIG_IP_NF_MATCH_IPRANGE
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_IPTABLES == 1 || $CONFIG_IP_NF_IPTABLES == 2 || $CONFIG_IP_NF_IPTABLES == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP_NF_IPTABLES]]; set CONFIG_IP_NF_MATCH_IPRANGE [sync_tristate $CONFIG_IP_NF_MATCH_IPRANGE $tmpvar_dep]; set CONFIG_IP_NF_MATCH_IPRANGE [expr $CONFIG_IP_NF_MATCH_IPRANGE&15]}
	global CONFIG_IP_NF_MATCH_MAC
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_IPTABLES == 1 || $CONFIG_IP_NF_IPTABLES == 2 || $CONFIG_IP_NF_IPTABLES == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP_NF_IPTABLES]]; set CONFIG_IP_NF_MATCH_MAC [sync_tristate $CONFIG_IP_NF_MATCH_MAC $tmpvar_dep]; set CONFIG_IP_NF_MATCH_MAC [expr $CONFIG_IP_NF_MATCH_MAC&15]}
	global CONFIG_IP_NF_MATCH_PKTTYPE
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_IPTABLES == 1 || $CONFIG_IP_NF_IPTABLES == 2 || $CONFIG_IP_NF_IPTABLES == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP_NF_IPTABLES]]; set CONFIG_IP_NF_MATCH_PKTTYPE [sync_tristate $CONFIG_IP_NF_MATCH_PKTTYPE $tmpvar_dep]; set CONFIG_IP_NF_MATCH_PKTTYPE [expr $CONFIG_IP_NF_MATCH_PKTTYPE&15]}
	global CONFIG_IP_NF_MATCH_MARK
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_IPTABLES == 1 || $CONFIG_IP_NF_IPTABLES == 2 || $CONFIG_IP_NF_IPTABLES == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP_NF_IPTABLES]]; set CONFIG_IP_NF_MATCH_MARK [sync_tristate $CONFIG_IP_NF_MATCH_MARK $tmpvar_dep]; set CONFIG_IP_NF_MATCH_MARK [expr $CONFIG_IP_NF_MATCH_MARK&15]}
	global CONFIG_IP_NF_MATCH_MULTIPORT
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_IPTABLES == 1 || $CONFIG_IP_NF_IPTABLES == 2 || $CONFIG_IP_NF_IPTABLES == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP_NF_IPTABLES]]; set CONFIG_IP_NF_MATCH_MULTIPORT [sync_tristate $CONFIG_IP_NF_MATCH_MULTIPORT $tmpvar_dep]; set CONFIG_IP_NF_MATCH_MULTIPORT [expr $CONFIG_IP_NF_MATCH_MULTIPORT&15]}
	global CONFIG_IP_NF_MATCH_TOS
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_IPTABLES == 1 || $CONFIG_IP_NF_IPTABLES == 2 || $CONFIG_IP_NF_IPTABLES == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP_NF_IPTABLES]]; set CONFIG_IP_NF_MATCH_TOS [sync_tristate $CONFIG_IP_NF_MATCH_TOS $tmpvar_dep]; set CONFIG_IP_NF_MATCH_TOS [expr $CONFIG_IP_NF_MATCH_TOS&15]}
	global CONFIG_IP_NF_MATCH_TIME
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_IPTABLES == 1 || $CONFIG_IP_NF_IPTABLES == 2 || $CONFIG_IP_NF_IPTABLES == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP_NF_IPTABLES]]; set CONFIG_IP_NF_MATCH_TIME [sync_tristate $CONFIG_IP_NF_MATCH_TIME $tmpvar_dep]; set CONFIG_IP_NF_MATCH_TIME [expr $CONFIG_IP_NF_MATCH_TIME&15]}
	global CONFIG_IP_NF_MATCH_RECENT
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_IPTABLES == 1 || $CONFIG_IP_NF_IPTABLES == 2 || $CONFIG_IP_NF_IPTABLES == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP_NF_IPTABLES]]; set CONFIG_IP_NF_MATCH_RECENT [sync_tristate $CONFIG_IP_NF_MATCH_RECENT $tmpvar_dep]; set CONFIG_IP_NF_MATCH_RECENT [expr $CONFIG_IP_NF_MATCH_RECENT&15]}
	global CONFIG_IP_NF_MATCH_ECN
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_IPTABLES == 1 || $CONFIG_IP_NF_IPTABLES == 2 || $CONFIG_IP_NF_IPTABLES == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP_NF_IPTABLES]]; set CONFIG_IP_NF_MATCH_ECN [sync_tristate $CONFIG_IP_NF_MATCH_ECN $tmpvar_dep]; set CONFIG_IP_NF_MATCH_ECN [expr $CONFIG_IP_NF_MATCH_ECN&15]}
	global CONFIG_IP_NF_MATCH_DSCP
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_IPTABLES == 1 || $CONFIG_IP_NF_IPTABLES == 2 || $CONFIG_IP_NF_IPTABLES == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP_NF_IPTABLES]]; set CONFIG_IP_NF_MATCH_DSCP [sync_tristate $CONFIG_IP_NF_MATCH_DSCP $tmpvar_dep]; set CONFIG_IP_NF_MATCH_DSCP [expr $CONFIG_IP_NF_MATCH_DSCP&15]}
	global CONFIG_IP_NF_MATCH_AH_ESP
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_IPTABLES == 1 || $CONFIG_IP_NF_IPTABLES == 2 || $CONFIG_IP_NF_IPTABLES == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP_NF_IPTABLES]]; set CONFIG_IP_NF_MATCH_AH_ESP [sync_tristate $CONFIG_IP_NF_MATCH_AH_ESP $tmpvar_dep]; set CONFIG_IP_NF_MATCH_AH_ESP [expr $CONFIG_IP_NF_MATCH_AH_ESP&15]}
	global CONFIG_IP_NF_MATCH_LENGTH
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_IPTABLES == 1 || $CONFIG_IP_NF_IPTABLES == 2 || $CONFIG_IP_NF_IPTABLES == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP_NF_IPTABLES]]; set CONFIG_IP_NF_MATCH_LENGTH [sync_tristate $CONFIG_IP_NF_MATCH_LENGTH $tmpvar_dep]; set CONFIG_IP_NF_MATCH_LENGTH [expr $CONFIG_IP_NF_MATCH_LENGTH&15]}
	global CONFIG_IP_NF_MATCH_TTL
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_IPTABLES == 1 || $CONFIG_IP_NF_IPTABLES == 2 || $CONFIG_IP_NF_IPTABLES == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP_NF_IPTABLES]]; set CONFIG_IP_NF_MATCH_TTL [sync_tristate $CONFIG_IP_NF_MATCH_TTL $tmpvar_dep]; set CONFIG_IP_NF_MATCH_TTL [expr $CONFIG_IP_NF_MATCH_TTL&15]}
	global CONFIG_IP_NF_MATCH_TCPMSS
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_IPTABLES == 1 || $CONFIG_IP_NF_IPTABLES == 2 || $CONFIG_IP_NF_IPTABLES == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP_NF_IPTABLES]]; set CONFIG_IP_NF_MATCH_TCPMSS [sync_tristate $CONFIG_IP_NF_MATCH_TCPMSS $tmpvar_dep]; set CONFIG_IP_NF_MATCH_TCPMSS [expr $CONFIG_IP_NF_MATCH_TCPMSS&15]}
	global CONFIG_IP_NF_MATCH_HELPER
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_CONNTRACK != 0) && ($CONFIG_IP_NF_IPTABLES == 1 || $CONFIG_IP_NF_IPTABLES == 2 || $CONFIG_IP_NF_IPTABLES == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP_NF_IPTABLES]]; set CONFIG_IP_NF_MATCH_HELPER [sync_tristate $CONFIG_IP_NF_MATCH_HELPER $tmpvar_dep]; set CONFIG_IP_NF_MATCH_HELPER [expr $CONFIG_IP_NF_MATCH_HELPER&15]}
	global CONFIG_IP_NF_MATCH_STATE
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_CONNTRACK != 0) && ($CONFIG_IP_NF_CONNTRACK == 1 || $CONFIG_IP_NF_CONNTRACK == 2 || $CONFIG_IP_NF_CONNTRACK == 4) && ($CONFIG_IP_NF_IPTABLES == 1 || $CONFIG_IP_NF_IPTABLES == 2 || $CONFIG_IP_NF_IPTABLES == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP_NF_CONNTRACK $CONFIG_IP_NF_IPTABLES]]; set CONFIG_IP_NF_MATCH_STATE [sync_tristate $CONFIG_IP_NF_MATCH_STATE $tmpvar_dep]; set CONFIG_IP_NF_MATCH_STATE [expr $CONFIG_IP_NF_MATCH_STATE&15]}
	global CONFIG_IP_NF_MATCH_CONNMARK
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_CONNTRACK != 0) && ($CONFIG_IP_NF_CONNTRACK_MARK != 0) && ($CONFIG_IP_NF_IPTABLES == 1 || $CONFIG_IP_NF_IPTABLES == 2 || $CONFIG_IP_NF_IPTABLES == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP_NF_IPTABLES]]; set CONFIG_IP_NF_MATCH_CONNMARK [sync_tristate $CONFIG_IP_NF_MATCH_CONNMARK $tmpvar_dep]; set CONFIG_IP_NF_MATCH_CONNMARK [expr $CONFIG_IP_NF_MATCH_CONNMARK&15]}
	global CONFIG_IP_NF_MATCH_CONNTRACK
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_CONNTRACK != 0) && ($CONFIG_IP_NF_CONNTRACK == 1 || $CONFIG_IP_NF_CONNTRACK == 2 || $CONFIG_IP_NF_CONNTRACK == 4) && ($CONFIG_IP_NF_IPTABLES == 1 || $CONFIG_IP_NF_IPTABLES == 2 || $CONFIG_IP_NF_IPTABLES == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP_NF_CONNTRACK $CONFIG_IP_NF_IPTABLES]]; set CONFIG_IP_NF_MATCH_CONNTRACK [sync_tristate $CONFIG_IP_NF_MATCH_CONNTRACK $tmpvar_dep]; set CONFIG_IP_NF_MATCH_CONNTRACK [expr $CONFIG_IP_NF_MATCH_CONNTRACK&15]}
	global CONFIG_IP_NF_MATCH_UNCLEAN
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_IP_NF_IPTABLES == 1 || $CONFIG_IP_NF_IPTABLES == 2 || $CONFIG_IP_NF_IPTABLES == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP_NF_IPTABLES]]; set CONFIG_IP_NF_MATCH_UNCLEAN [sync_tristate $CONFIG_IP_NF_MATCH_UNCLEAN $tmpvar_dep]; set CONFIG_IP_NF_MATCH_UNCLEAN [expr $CONFIG_IP_NF_MATCH_UNCLEAN&15]}
	global CONFIG_IP_NF_MATCH_STRING
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_IP_NF_IPTABLES == 1 || $CONFIG_IP_NF_IPTABLES == 2 || $CONFIG_IP_NF_IPTABLES == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP_NF_IPTABLES]]; set CONFIG_IP_NF_MATCH_STRING [sync_tristate $CONFIG_IP_NF_MATCH_STRING $tmpvar_dep]; set CONFIG_IP_NF_MATCH_STRING [expr $CONFIG_IP_NF_MATCH_STRING&15]}
	global CONFIG_IP_NF_MATCH_OWNER
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_IP_NF_IPTABLES == 1 || $CONFIG_IP_NF_IPTABLES == 2 || $CONFIG_IP_NF_IPTABLES == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP_NF_IPTABLES]]; set CONFIG_IP_NF_MATCH_OWNER [sync_tristate $CONFIG_IP_NF_MATCH_OWNER $tmpvar_dep]; set CONFIG_IP_NF_MATCH_OWNER [expr $CONFIG_IP_NF_MATCH_OWNER&15]}
	global CONFIG_IP_NF_FILTER
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_IPTABLES == 1 || $CONFIG_IP_NF_IPTABLES == 2 || $CONFIG_IP_NF_IPTABLES == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP_NF_IPTABLES]]; set CONFIG_IP_NF_FILTER [sync_tristate $CONFIG_IP_NF_FILTER $tmpvar_dep]; set CONFIG_IP_NF_FILTER [expr $CONFIG_IP_NF_FILTER&15]}
	global CONFIG_IP_NF_TARGET_REJECT
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_FILTER != 0) && ($CONFIG_IP_NF_FILTER == 1 || $CONFIG_IP_NF_FILTER == 2 || $CONFIG_IP_NF_FILTER == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP_NF_FILTER]]; set CONFIG_IP_NF_TARGET_REJECT [sync_tristate $CONFIG_IP_NF_TARGET_REJECT $tmpvar_dep]; set CONFIG_IP_NF_TARGET_REJECT [expr $CONFIG_IP_NF_TARGET_REJECT&15]}
	global CONFIG_IP_NF_TARGET_MIRROR
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_FILTER != 0) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_IP_NF_FILTER == 1 || $CONFIG_IP_NF_FILTER == 2 || $CONFIG_IP_NF_FILTER == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP_NF_FILTER]]; set CONFIG_IP_NF_TARGET_MIRROR [sync_tristate $CONFIG_IP_NF_TARGET_MIRROR $tmpvar_dep]; set CONFIG_IP_NF_TARGET_MIRROR [expr $CONFIG_IP_NF_TARGET_MIRROR&15]}
	global CONFIG_IP_NF_NAT
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_CONNTRACK != 0) && ($CONFIG_IP_NF_IPTABLES == 1 || $CONFIG_IP_NF_IPTABLES == 2 || $CONFIG_IP_NF_IPTABLES == 4) && ($CONFIG_IP_NF_CONNTRACK == 1 || $CONFIG_IP_NF_CONNTRACK == 2 || $CONFIG_IP_NF_CONNTRACK == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP_NF_IPTABLES $CONFIG_IP_NF_CONNTRACK]]; set CONFIG_IP_NF_NAT [sync_tristate $CONFIG_IP_NF_NAT $tmpvar_dep]; set CONFIG_IP_NF_NAT [expr $CONFIG_IP_NF_NAT&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_CONNTRACK != 0) && ($CONFIG_IP_NF_NAT != 0)} then {	global CONSTANT_Y
set CONFIG_IP_NF_NAT_NEEDED $CONSTANT_Y }
	global CONFIG_IP_NF_TARGET_MASQUERADE
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_CONNTRACK != 0) && ($CONFIG_IP_NF_NAT != 0) && ($CONFIG_IP_NF_NAT == 1 || $CONFIG_IP_NF_NAT == 2 || $CONFIG_IP_NF_NAT == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP_NF_NAT]]; set CONFIG_IP_NF_TARGET_MASQUERADE [sync_tristate $CONFIG_IP_NF_TARGET_MASQUERADE $tmpvar_dep]; set CONFIG_IP_NF_TARGET_MASQUERADE [expr $CONFIG_IP_NF_TARGET_MASQUERADE&15]}
	global CONFIG_IP_NF_TARGET_REDIRECT
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_CONNTRACK != 0) && ($CONFIG_IP_NF_NAT != 0) && ($CONFIG_IP_NF_NAT == 1 || $CONFIG_IP_NF_NAT == 2 || $CONFIG_IP_NF_NAT == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP_NF_NAT]]; set CONFIG_IP_NF_TARGET_REDIRECT [sync_tristate $CONFIG_IP_NF_TARGET_REDIRECT $tmpvar_dep]; set CONFIG_IP_NF_TARGET_REDIRECT [expr $CONFIG_IP_NF_TARGET_REDIRECT&15]}
	global CONFIG_IP_NF_TARGET_NETMAP
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_CONNTRACK != 0) && ($CONFIG_IP_NF_NAT != 0) && ($CONFIG_IP_NF_NAT == 1 || $CONFIG_IP_NF_NAT == 2 || $CONFIG_IP_NF_NAT == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP_NF_NAT]]; set CONFIG_IP_NF_TARGET_NETMAP [sync_tristate $CONFIG_IP_NF_TARGET_NETMAP $tmpvar_dep]; set CONFIG_IP_NF_TARGET_NETMAP [expr $CONFIG_IP_NF_TARGET_NETMAP&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_CONNTRACK != 0) && ($CONFIG_IP_NF_NAT != 0) && ($CONFIG_IP_NF_H323 == 2)} then {	global CONSTANT_M
set CONFIG_IP_NF_NAT_H323 $CONSTANT_M }
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_CONNTRACK != 0) && ($CONFIG_IP_NF_NAT != 0) && ($CONFIG_IP_NF_H323 != 2) && ($CONFIG_IP_NF_H323 == 1)} then {set CONFIG_IP_NF_NAT_H323 $CONFIG_IP_NF_NAT }
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_CONNTRACK != 0) && ($CONFIG_IP_NF_NAT != 0) && ($CONFIG_IP_NF_AMANDA == 2)} then {	global CONSTANT_M
set CONFIG_IP_NF_NAT_AMANDA $CONSTANT_M }
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_CONNTRACK != 0) && ($CONFIG_IP_NF_NAT != 0) && ($CONFIG_IP_NF_AMANDA != 2) && ($CONFIG_IP_NF_AMANDA == 1)} then {set CONFIG_IP_NF_NAT_AMANDA $CONFIG_IP_NF_NAT }
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_CONNTRACK != 0) && ($CONFIG_IP_NF_NAT != 0)} then {
	set CONFIG_IP_NF_NAT_LOCAL [expr $CONFIG_IP_NF_NAT_LOCAL&15]}
	global CONFIG_IP_NF_NAT_SNMP_BASIC
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_CONNTRACK != 0) && ($CONFIG_IP_NF_NAT != 0) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_IP_NF_NAT == 1 || $CONFIG_IP_NF_NAT == 2 || $CONFIG_IP_NF_NAT == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP_NF_NAT]]; set CONFIG_IP_NF_NAT_SNMP_BASIC [sync_tristate $CONFIG_IP_NF_NAT_SNMP_BASIC $tmpvar_dep]; set CONFIG_IP_NF_NAT_SNMP_BASIC [expr $CONFIG_IP_NF_NAT_SNMP_BASIC&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_CONNTRACK != 0) && ($CONFIG_IP_NF_NAT != 0) && ($CONFIG_IP_NF_IRC == 2)} then {	global CONSTANT_M
set CONFIG_IP_NF_NAT_IRC $CONSTANT_M }
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_CONNTRACK != 0) && ($CONFIG_IP_NF_NAT != 0) && ($CONFIG_IP_NF_IRC != 2) && ($CONFIG_IP_NF_IRC == 1)} then {set CONFIG_IP_NF_NAT_IRC $CONFIG_IP_NF_NAT }
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_CONNTRACK != 0) && ($CONFIG_IP_NF_NAT != 0) && ($CONFIG_IP_NF_FTP == 2)} then {	global CONSTANT_M
set CONFIG_IP_NF_NAT_FTP $CONSTANT_M }
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_CONNTRACK != 0) && ($CONFIG_IP_NF_NAT != 0) && ($CONFIG_IP_NF_FTP != 2) && ($CONFIG_IP_NF_FTP == 1)} then {set CONFIG_IP_NF_NAT_FTP $CONFIG_IP_NF_NAT }
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_CONNTRACK != 0) && ($CONFIG_IP_NF_NAT != 0) && ($CONFIG_IP_NF_PPTP == 2)} then {	global CONSTANT_M
set CONFIG_IP_NF_NAT_PPTP $CONSTANT_M }
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_CONNTRACK != 0) && ($CONFIG_IP_NF_NAT != 0) && ($CONFIG_IP_NF_PPTP != 2) && ($CONFIG_IP_NF_PPTP == 1)} then {set CONFIG_IP_NF_NAT_PPTP $CONFIG_IP_NF_NAT }
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_CONNTRACK != 0) && ($CONFIG_IP_NF_NAT != 0) && ($CONFIG_IP_NF_CT_PROTO_GRE == 2)} then {	global CONSTANT_M
set CONFIG_IP_NF_NAT_PROTO_GRE $CONSTANT_M }
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_CONNTRACK != 0) && ($CONFIG_IP_NF_NAT != 0) && ($CONFIG_IP_NF_CT_PROTO_GRE != 2) && ($CONFIG_IP_NF_CT_PROTO_GRE == 1)} then {set CONFIG_IP_NF_NAT_PROTO_GRE $CONFIG_IP_NF_NAT }
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_CONNTRACK != 0) && ($CONFIG_IP_NF_NAT != 0) && ($CONFIG_IP_NF_TFTP == 2)} then {	global CONSTANT_M
set CONFIG_IP_NF_NAT_TFTP $CONSTANT_M }
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_CONNTRACK != 0) && ($CONFIG_IP_NF_NAT != 0) && ($CONFIG_IP_NF_TFTP != 2) && ($CONFIG_IP_NF_TFTP == 1)} then {set CONFIG_IP_NF_NAT_TFTP $CONFIG_IP_NF_NAT }
	global CONFIG_IP_NF_MANGLE
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_IPTABLES == 1 || $CONFIG_IP_NF_IPTABLES == 2 || $CONFIG_IP_NF_IPTABLES == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP_NF_IPTABLES]]; set CONFIG_IP_NF_MANGLE [sync_tristate $CONFIG_IP_NF_MANGLE $tmpvar_dep]; set CONFIG_IP_NF_MANGLE [expr $CONFIG_IP_NF_MANGLE&15]}
	global CONFIG_IP_NF_TARGET_TOS
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_MANGLE != 0) && ($CONFIG_IP_NF_MANGLE == 1 || $CONFIG_IP_NF_MANGLE == 2 || $CONFIG_IP_NF_MANGLE == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP_NF_MANGLE]]; set CONFIG_IP_NF_TARGET_TOS [sync_tristate $CONFIG_IP_NF_TARGET_TOS $tmpvar_dep]; set CONFIG_IP_NF_TARGET_TOS [expr $CONFIG_IP_NF_TARGET_TOS&15]}
	global CONFIG_IP_NF_TARGET_ECN
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_MANGLE != 0) && ($CONFIG_IP_NF_MANGLE == 1 || $CONFIG_IP_NF_MANGLE == 2 || $CONFIG_IP_NF_MANGLE == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP_NF_MANGLE]]; set CONFIG_IP_NF_TARGET_ECN [sync_tristate $CONFIG_IP_NF_TARGET_ECN $tmpvar_dep]; set CONFIG_IP_NF_TARGET_ECN [expr $CONFIG_IP_NF_TARGET_ECN&15]}
	global CONFIG_IP_NF_TARGET_DSCP
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_MANGLE != 0) && ($CONFIG_IP_NF_MANGLE == 1 || $CONFIG_IP_NF_MANGLE == 2 || $CONFIG_IP_NF_MANGLE == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP_NF_MANGLE]]; set CONFIG_IP_NF_TARGET_DSCP [sync_tristate $CONFIG_IP_NF_TARGET_DSCP $tmpvar_dep]; set CONFIG_IP_NF_TARGET_DSCP [expr $CONFIG_IP_NF_TARGET_DSCP&15]}
	global CONFIG_IP_NF_TARGET_MARK
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_MANGLE != 0) && ($CONFIG_IP_NF_MANGLE == 1 || $CONFIG_IP_NF_MANGLE == 2 || $CONFIG_IP_NF_MANGLE == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP_NF_MANGLE]]; set CONFIG_IP_NF_TARGET_MARK [sync_tristate $CONFIG_IP_NF_TARGET_MARK $tmpvar_dep]; set CONFIG_IP_NF_TARGET_MARK [expr $CONFIG_IP_NF_TARGET_MARK&15]}
	global CONFIG_IP_NF_TARGET_LOG
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_IPTABLES == 1 || $CONFIG_IP_NF_IPTABLES == 2 || $CONFIG_IP_NF_IPTABLES == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP_NF_IPTABLES]]; set CONFIG_IP_NF_TARGET_LOG [sync_tristate $CONFIG_IP_NF_TARGET_LOG $tmpvar_dep]; set CONFIG_IP_NF_TARGET_LOG [expr $CONFIG_IP_NF_TARGET_LOG&15]}
	global CONFIG_IP_NF_TARGET_CONNMARK
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_CONNTRACK_MARK != 0) && ($CONFIG_IP_NF_IPTABLES == 1 || $CONFIG_IP_NF_IPTABLES == 2 || $CONFIG_IP_NF_IPTABLES == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP_NF_IPTABLES]]; set CONFIG_IP_NF_TARGET_CONNMARK [sync_tristate $CONFIG_IP_NF_TARGET_CONNMARK $tmpvar_dep]; set CONFIG_IP_NF_TARGET_CONNMARK [expr $CONFIG_IP_NF_TARGET_CONNMARK&15]}
	global CONFIG_IP_NF_TARGET_ULOG
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_IPTABLES == 1 || $CONFIG_IP_NF_IPTABLES == 2 || $CONFIG_IP_NF_IPTABLES == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP_NF_IPTABLES]]; set CONFIG_IP_NF_TARGET_ULOG [sync_tristate $CONFIG_IP_NF_TARGET_ULOG $tmpvar_dep]; set CONFIG_IP_NF_TARGET_ULOG [expr $CONFIG_IP_NF_TARGET_ULOG&15]}
	global CONFIG_IP_NF_TARGET_TCPMSS
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_IPTABLES == 1 || $CONFIG_IP_NF_IPTABLES == 2 || $CONFIG_IP_NF_IPTABLES == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP_NF_IPTABLES]]; set CONFIG_IP_NF_TARGET_TCPMSS [sync_tristate $CONFIG_IP_NF_TARGET_TCPMSS $tmpvar_dep]; set CONFIG_IP_NF_TARGET_TCPMSS [expr $CONFIG_IP_NF_TARGET_TCPMSS&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_IP_NF_ARPTABLES == 2)} then {set CONFIG_IP_NF_ARPTABLES 1}; set CONFIG_IP_NF_ARPTABLES [expr $CONFIG_IP_NF_ARPTABLES&15]}
	global CONFIG_IP_NF_ARPFILTER
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_ARPTABLES != 0) && ($CONFIG_IP_NF_ARPTABLES == 1 || $CONFIG_IP_NF_ARPTABLES == 2 || $CONFIG_IP_NF_ARPTABLES == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP_NF_ARPTABLES]]; set CONFIG_IP_NF_ARPFILTER [sync_tristate $CONFIG_IP_NF_ARPFILTER $tmpvar_dep]; set CONFIG_IP_NF_ARPFILTER [expr $CONFIG_IP_NF_ARPFILTER&15]}
	global CONFIG_IP_NF_ARP_MANGLE
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_ARPTABLES != 0) && ($CONFIG_IP_NF_ARPTABLES == 1 || $CONFIG_IP_NF_ARPTABLES == 2 || $CONFIG_IP_NF_ARPTABLES == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP_NF_ARPTABLES]]; set CONFIG_IP_NF_ARP_MANGLE [sync_tristate $CONFIG_IP_NF_ARP_MANGLE $tmpvar_dep]; set CONFIG_IP_NF_ARP_MANGLE [expr $CONFIG_IP_NF_ARP_MANGLE&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_CONNTRACK != 1) && ($CONFIG_IP_NF_IPTABLES != 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_IP_NF_COMPAT_IPCHAINS == 2)} then {set CONFIG_IP_NF_COMPAT_IPCHAINS 1}; set CONFIG_IP_NF_COMPAT_IPCHAINS [expr $CONFIG_IP_NF_COMPAT_IPCHAINS&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_CONNTRACK != 1) && ($CONFIG_IP_NF_IPTABLES != 1) && ($CONFIG_IP_NF_COMPAT_IPCHAINS != 0)} then {	global CONSTANT_Y
set CONFIG_IP_NF_NAT_NEEDED $CONSTANT_Y }
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_CONNTRACK != 1) && ($CONFIG_IP_NF_IPTABLES != 1) && ($CONFIG_IP_NF_COMPAT_IPCHAINS != 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_IP_NF_COMPAT_IPFWADM == 2)} then {set CONFIG_IP_NF_COMPAT_IPFWADM 1}; set CONFIG_IP_NF_COMPAT_IPFWADM [expr $CONFIG_IP_NF_COMPAT_IPFWADM&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_CONNTRACK != 1) && ($CONFIG_IP_NF_IPTABLES != 1) && ($CONFIG_IP_NF_COMPAT_IPCHAINS != 1) && ($CONFIG_IP_NF_COMPAT_IPFWADM != 0)} then {	global CONSTANT_Y
set CONFIG_IP_NF_NAT_NEEDED $CONSTANT_Y }
}


proc menu28 {w title} {
	set oldFocus [focus]
	catch {focus .menu26}
	catch {destroy $w; unregister_active 28}
	toplevel $w -class Dialog
	wm withdraw $w
	global active_menus
	set active_menus [lsort -integer [linsert $active_menus end 28]]
	message $w.m -width 400 -aspect 300 -text \
		"  IP: Virtual Server Configuration"  -relief raised
	pack $w.m -pady 10 -side top -padx 10
	wm title $w "  IP: Virtual Server Configuration" 

	bind $w <Escape> "catch {focus $oldFocus}; destroy $w; unregister_active 28; break"
	set nextscript "catch {focus $oldFocus}; destroy $w; unregister_active 28; menu29 .menu29 \"$title\""
	frame $w.f
	button $w.f.back -text "OK" \
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 28"
	button $w.f.next -text "Next" -underline 0\
		-width 15 -command $nextscript
	bind all <Alt-n> $nextscript
	button $w.f.prev -text "Prev" -underline 0\
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 28; menu27 .menu27 \"$title\""
	bind $w <Alt-p> "catch {focus $oldFocus}; destroy $w; unregister_active 28; menu27 .menu27 \"$title\";break"
	pack $w.f.back $w.f.next $w.f.prev -side left -expand on
	pack $w.f -pady 10 -side bottom -anchor w -fill x
	frame $w.topline -relief ridge -borderwidth 2 -height 2
	pack $w.topline -side top -fill x

	frame $w.botline -relief ridge -borderwidth 2 -height 2
	pack $w.botline -side bottom -fill x

	frame $w.config
	pack $w.config -fill y -expand on

	scrollbar $w.config.vscroll -command "$w.config.canvas yview"
	pack $w.config.vscroll -side right -fill y

	canvas $w.config.canvas -height 1\
		-relief flat -borderwidth 0 -yscrollcommand "$w.config.vscroll set" \
		-width [expr [winfo screenwidth .] * 1 / 2] 
	frame $w.config.f
	bind $w <Key-Down> "$w.config.canvas yview scroll  1 unit;break;"
	bind $w <Key-Up> "$w.config.canvas yview scroll  -1 unit;break;"
	bind $w <Key-Next> "$w.config.canvas yview scroll  1 page;break;"
	bind $w <Key-Prior> "$w.config.canvas yview scroll  -1 page;break;"
	bind $w <Key-Home> "$w.config.canvas yview moveto 0;break;"
	bind $w <Key-End> "$w.config.canvas yview moveto 1 ;break;"
	pack $w.config.canvas -side right -fill y


	tristate $w.config.f 28 0 "virtual server support (EXPERIMENTAL)" CONFIG_IP_VS
	bool $w.config.f 28 1 "  IP virtual server debugging" CONFIG_IP_VS_DEBUG
	int $w.config.f 28 2 "  IPVS connection table size (the Nth power of 2)" CONFIG_IP_VS_TAB_BITS
	comment $w.config.f 28 3 "IPVS scheduler"
	dep_tristate $w.config.f 28 4 "  round-robin scheduling" CONFIG_IP_VS_RR
	dep_tristate $w.config.f 28 5 "  weighted round-robin scheduling" CONFIG_IP_VS_WRR
	dep_tristate $w.config.f 28 6 "  least-connection scheduling scheduling" CONFIG_IP_VS_LC
	dep_tristate $w.config.f 28 7 "  weighted least-connection scheduling" CONFIG_IP_VS_WLC
	dep_tristate $w.config.f 28 8 "  locality-based least-connection scheduling" CONFIG_IP_VS_LBLC
	dep_tristate $w.config.f 28 9 "  locality-based least-connection with replication scheduling" CONFIG_IP_VS_LBLCR
	dep_tristate $w.config.f 28 10 "  destination hashing scheduling" CONFIG_IP_VS_DH
	dep_tristate $w.config.f 28 11 "  source hashing scheduling" CONFIG_IP_VS_SH
	dep_tristate $w.config.f 28 12 "  shortest expected delay scheduling" CONFIG_IP_VS_SED
	dep_tristate $w.config.f 28 13 "  never queue scheduling" CONFIG_IP_VS_NQ
	comment $w.config.f 28 14 "IPVS application helper"
	dep_tristate $w.config.f 28 15 "  FTP protocol helper" CONFIG_IP_VS_FTP



	focus $w
	update_active
	global winx; global winy
	if {[winfo exists .menu26] == 0} then {menu26 .menu26 "Networking options"}
	set winx [expr [winfo x .menu26]+30]; set winy [expr [winfo y .menu26]+30]
	if {[winfo exists $w]} then {wm geometry $w +$winx+$winy}
	update idletasks
	if {[winfo exists $w]} then  {$w.config.canvas create window 0 0 -anchor nw -window $w.config.f

	$w.config.canvas configure \
		-width [expr [winfo reqwidth $w.config.f] + 1]\
		-scrollregion "-1 -1 [expr [winfo reqwidth $w.config.f] + 1] \
			 [expr [winfo reqheight $w.config.f] + 1]"

	set winy [expr [winfo reqh $w] - [winfo reqh $w.config.canvas]]
	set scry [expr [winfo screenh $w] / 2]
	set maxy [expr [winfo screenh $w] * 3 / 4]
	set canvtotal [expr [winfo reqh $w.config.f] + 2]
	if [expr $winy + $canvtotal < $maxy] {
		$w.config.canvas configure -height $canvtotal
	} else {
		$w.config.canvas configure -height [expr $scry - $winy]
		}
	}
	update idletasks
	if {[winfo exists $w]} then {
	wm maxsize $w [winfo width $w] [winfo screenheight $w]
	wm minsize $w [winfo width $w] 100

	wm deiconify $w
}
}

proc update_menu28 {} {
	global CONFIG_MODULES
	global CONFIG_NET
	global CONFIG_INET
	global CONFIG_NETFILTER
	global CONFIG_IP_VS
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0)} then {
	configure_entry .menu28.config.f.x0 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu28.config.f.x0 normal {m}} else {configure_entry .menu28.config.f.x0 disabled {m}}; configure_entry .menu28.config.f.x0 normal {n l}} else {configure_entry .menu28.config.f.x0 disabled {y n m l}}
	global CONFIG_IP_VS_DEBUG
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_VS != 0)} then {
	configure_entry .menu28.config.f.x1 normal {n l y}} else {configure_entry .menu28.config.f.x1 disabled {y n l}}
	global CONFIG_IP_VS_TAB_BITS
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_VS != 0)} then {.menu28.config.f.x2.x configure -state normal -foreground [ cget .ref -foreground ]; .menu28.config.f.x2.l configure -state normal; } else {.menu28.config.f.x2.x configure -state disabled -foreground [ cget .ref -disabledforeground ]; .menu28.config.f.x2.l configure -state disabled}
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_VS != 0)} then {configure_entry .menu28.config.f.x3 normal {m}} else {configure_entry .menu28.config.f.x3 disabled {m}}
	global CONFIG_IP_VS_RR
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_VS != 0) && ($CONFIG_IP_VS == 1 || $CONFIG_IP_VS == 2 || $CONFIG_IP_VS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP_VS]];set CONFIG_IP_VS_RR [sync_tristate $CONFIG_IP_VS_RR $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu28.config.f.x4 disabled {y}} else {configure_entry .menu28.config.f.x4 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu28.config.f.x4 disabled {m}} else {configure_entry .menu28.config.f.x4 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu28.config.f.x4 normal {m}} else {configure_entry .menu28.config.f.x4 disabled {m}}; configure_entry .menu28.config.f.x4 normal {n l}} else {configure_entry .menu28.config.f.x4 disabled {y n m l}}
	global CONFIG_IP_VS_WRR
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_VS != 0) && ($CONFIG_IP_VS == 1 || $CONFIG_IP_VS == 2 || $CONFIG_IP_VS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP_VS]];set CONFIG_IP_VS_WRR [sync_tristate $CONFIG_IP_VS_WRR $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu28.config.f.x5 disabled {y}} else {configure_entry .menu28.config.f.x5 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu28.config.f.x5 disabled {m}} else {configure_entry .menu28.config.f.x5 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu28.config.f.x5 normal {m}} else {configure_entry .menu28.config.f.x5 disabled {m}}; configure_entry .menu28.config.f.x5 normal {n l}} else {configure_entry .menu28.config.f.x5 disabled {y n m l}}
	global CONFIG_IP_VS_LC
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_VS != 0) && ($CONFIG_IP_VS == 1 || $CONFIG_IP_VS == 2 || $CONFIG_IP_VS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP_VS]];set CONFIG_IP_VS_LC [sync_tristate $CONFIG_IP_VS_LC $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu28.config.f.x6 disabled {y}} else {configure_entry .menu28.config.f.x6 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu28.config.f.x6 disabled {m}} else {configure_entry .menu28.config.f.x6 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu28.config.f.x6 normal {m}} else {configure_entry .menu28.config.f.x6 disabled {m}}; configure_entry .menu28.config.f.x6 normal {n l}} else {configure_entry .menu28.config.f.x6 disabled {y n m l}}
	global CONFIG_IP_VS_WLC
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_VS != 0) && ($CONFIG_IP_VS == 1 || $CONFIG_IP_VS == 2 || $CONFIG_IP_VS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP_VS]];set CONFIG_IP_VS_WLC [sync_tristate $CONFIG_IP_VS_WLC $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu28.config.f.x7 disabled {y}} else {configure_entry .menu28.config.f.x7 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu28.config.f.x7 disabled {m}} else {configure_entry .menu28.config.f.x7 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu28.config.f.x7 normal {m}} else {configure_entry .menu28.config.f.x7 disabled {m}}; configure_entry .menu28.config.f.x7 normal {n l}} else {configure_entry .menu28.config.f.x7 disabled {y n m l}}
	global CONFIG_IP_VS_LBLC
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_VS != 0) && ($CONFIG_IP_VS == 1 || $CONFIG_IP_VS == 2 || $CONFIG_IP_VS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP_VS]];set CONFIG_IP_VS_LBLC [sync_tristate $CONFIG_IP_VS_LBLC $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu28.config.f.x8 disabled {y}} else {configure_entry .menu28.config.f.x8 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu28.config.f.x8 disabled {m}} else {configure_entry .menu28.config.f.x8 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu28.config.f.x8 normal {m}} else {configure_entry .menu28.config.f.x8 disabled {m}}; configure_entry .menu28.config.f.x8 normal {n l}} else {configure_entry .menu28.config.f.x8 disabled {y n m l}}
	global CONFIG_IP_VS_LBLCR
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_VS != 0) && ($CONFIG_IP_VS == 1 || $CONFIG_IP_VS == 2 || $CONFIG_IP_VS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP_VS]];set CONFIG_IP_VS_LBLCR [sync_tristate $CONFIG_IP_VS_LBLCR $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu28.config.f.x9 disabled {y}} else {configure_entry .menu28.config.f.x9 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu28.config.f.x9 disabled {m}} else {configure_entry .menu28.config.f.x9 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu28.config.f.x9 normal {m}} else {configure_entry .menu28.config.f.x9 disabled {m}}; configure_entry .menu28.config.f.x9 normal {n l}} else {configure_entry .menu28.config.f.x9 disabled {y n m l}}
	global CONFIG_IP_VS_DH
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_VS != 0) && ($CONFIG_IP_VS == 1 || $CONFIG_IP_VS == 2 || $CONFIG_IP_VS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP_VS]];set CONFIG_IP_VS_DH [sync_tristate $CONFIG_IP_VS_DH $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu28.config.f.x10 disabled {y}} else {configure_entry .menu28.config.f.x10 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu28.config.f.x10 disabled {m}} else {configure_entry .menu28.config.f.x10 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu28.config.f.x10 normal {m}} else {configure_entry .menu28.config.f.x10 disabled {m}}; configure_entry .menu28.config.f.x10 normal {n l}} else {configure_entry .menu28.config.f.x10 disabled {y n m l}}
	global CONFIG_IP_VS_SH
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_VS != 0) && ($CONFIG_IP_VS == 1 || $CONFIG_IP_VS == 2 || $CONFIG_IP_VS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP_VS]];set CONFIG_IP_VS_SH [sync_tristate $CONFIG_IP_VS_SH $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu28.config.f.x11 disabled {y}} else {configure_entry .menu28.config.f.x11 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu28.config.f.x11 disabled {m}} else {configure_entry .menu28.config.f.x11 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu28.config.f.x11 normal {m}} else {configure_entry .menu28.config.f.x11 disabled {m}}; configure_entry .menu28.config.f.x11 normal {n l}} else {configure_entry .menu28.config.f.x11 disabled {y n m l}}
	global CONFIG_IP_VS_SED
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_VS != 0) && ($CONFIG_IP_VS == 1 || $CONFIG_IP_VS == 2 || $CONFIG_IP_VS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP_VS]];set CONFIG_IP_VS_SED [sync_tristate $CONFIG_IP_VS_SED $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu28.config.f.x12 disabled {y}} else {configure_entry .menu28.config.f.x12 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu28.config.f.x12 disabled {m}} else {configure_entry .menu28.config.f.x12 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu28.config.f.x12 normal {m}} else {configure_entry .menu28.config.f.x12 disabled {m}}; configure_entry .menu28.config.f.x12 normal {n l}} else {configure_entry .menu28.config.f.x12 disabled {y n m l}}
	global CONFIG_IP_VS_NQ
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_VS != 0) && ($CONFIG_IP_VS == 1 || $CONFIG_IP_VS == 2 || $CONFIG_IP_VS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP_VS]];set CONFIG_IP_VS_NQ [sync_tristate $CONFIG_IP_VS_NQ $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu28.config.f.x13 disabled {y}} else {configure_entry .menu28.config.f.x13 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu28.config.f.x13 disabled {m}} else {configure_entry .menu28.config.f.x13 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu28.config.f.x13 normal {m}} else {configure_entry .menu28.config.f.x13 disabled {m}}; configure_entry .menu28.config.f.x13 normal {n l}} else {configure_entry .menu28.config.f.x13 disabled {y n m l}}
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_VS != 0)} then {configure_entry .menu28.config.f.x14 normal {m}} else {configure_entry .menu28.config.f.x14 disabled {m}}
	global CONFIG_IP_VS_FTP
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_VS != 0) && ($CONFIG_IP_VS == 1 || $CONFIG_IP_VS == 2 || $CONFIG_IP_VS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP_VS]];set CONFIG_IP_VS_FTP [sync_tristate $CONFIG_IP_VS_FTP $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu28.config.f.x15 disabled {y}} else {configure_entry .menu28.config.f.x15 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu28.config.f.x15 disabled {m}} else {configure_entry .menu28.config.f.x15 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu28.config.f.x15 normal {m}} else {configure_entry .menu28.config.f.x15 disabled {m}}; configure_entry .menu28.config.f.x15 normal {n l}} else {configure_entry .menu28.config.f.x15 disabled {y n m l}}
}


proc update_define_menu28 {} {
	update_define_mainmenu
	global CONFIG_MODULES
	global CONFIG_IP_VS
set CONFIG_IP_VS [expr $CONFIG_IP_VS|16]
	global CONFIG_IP_VS_DEBUG
set CONFIG_IP_VS_DEBUG [expr $CONFIG_IP_VS_DEBUG|16]
	global CONFIG_NET
	global CONFIG_INET
	global CONFIG_NETFILTER
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_IP_VS == 2)} then {set CONFIG_IP_VS 1}; set CONFIG_IP_VS [expr $CONFIG_IP_VS&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_VS != 0)} then {
	set CONFIG_IP_VS_DEBUG [expr $CONFIG_IP_VS_DEBUG&15]}
	global CONFIG_IP_VS_TAB_BITS
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_VS != 0)} then {validate_int CONFIG_IP_VS_TAB_BITS "$CONFIG_IP_VS_TAB_BITS" 12}
	global CONFIG_IP_VS_RR
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_VS != 0) && ($CONFIG_IP_VS == 1 || $CONFIG_IP_VS == 2 || $CONFIG_IP_VS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP_VS]]; set CONFIG_IP_VS_RR [sync_tristate $CONFIG_IP_VS_RR $tmpvar_dep]; set CONFIG_IP_VS_RR [expr $CONFIG_IP_VS_RR&15]}
	global CONFIG_IP_VS_WRR
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_VS != 0) && ($CONFIG_IP_VS == 1 || $CONFIG_IP_VS == 2 || $CONFIG_IP_VS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP_VS]]; set CONFIG_IP_VS_WRR [sync_tristate $CONFIG_IP_VS_WRR $tmpvar_dep]; set CONFIG_IP_VS_WRR [expr $CONFIG_IP_VS_WRR&15]}
	global CONFIG_IP_VS_LC
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_VS != 0) && ($CONFIG_IP_VS == 1 || $CONFIG_IP_VS == 2 || $CONFIG_IP_VS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP_VS]]; set CONFIG_IP_VS_LC [sync_tristate $CONFIG_IP_VS_LC $tmpvar_dep]; set CONFIG_IP_VS_LC [expr $CONFIG_IP_VS_LC&15]}
	global CONFIG_IP_VS_WLC
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_VS != 0) && ($CONFIG_IP_VS == 1 || $CONFIG_IP_VS == 2 || $CONFIG_IP_VS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP_VS]]; set CONFIG_IP_VS_WLC [sync_tristate $CONFIG_IP_VS_WLC $tmpvar_dep]; set CONFIG_IP_VS_WLC [expr $CONFIG_IP_VS_WLC&15]}
	global CONFIG_IP_VS_LBLC
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_VS != 0) && ($CONFIG_IP_VS == 1 || $CONFIG_IP_VS == 2 || $CONFIG_IP_VS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP_VS]]; set CONFIG_IP_VS_LBLC [sync_tristate $CONFIG_IP_VS_LBLC $tmpvar_dep]; set CONFIG_IP_VS_LBLC [expr $CONFIG_IP_VS_LBLC&15]}
	global CONFIG_IP_VS_LBLCR
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_VS != 0) && ($CONFIG_IP_VS == 1 || $CONFIG_IP_VS == 2 || $CONFIG_IP_VS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP_VS]]; set CONFIG_IP_VS_LBLCR [sync_tristate $CONFIG_IP_VS_LBLCR $tmpvar_dep]; set CONFIG_IP_VS_LBLCR [expr $CONFIG_IP_VS_LBLCR&15]}
	global CONFIG_IP_VS_DH
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_VS != 0) && ($CONFIG_IP_VS == 1 || $CONFIG_IP_VS == 2 || $CONFIG_IP_VS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP_VS]]; set CONFIG_IP_VS_DH [sync_tristate $CONFIG_IP_VS_DH $tmpvar_dep]; set CONFIG_IP_VS_DH [expr $CONFIG_IP_VS_DH&15]}
	global CONFIG_IP_VS_SH
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_VS != 0) && ($CONFIG_IP_VS == 1 || $CONFIG_IP_VS == 2 || $CONFIG_IP_VS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP_VS]]; set CONFIG_IP_VS_SH [sync_tristate $CONFIG_IP_VS_SH $tmpvar_dep]; set CONFIG_IP_VS_SH [expr $CONFIG_IP_VS_SH&15]}
	global CONFIG_IP_VS_SED
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_VS != 0) && ($CONFIG_IP_VS == 1 || $CONFIG_IP_VS == 2 || $CONFIG_IP_VS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP_VS]]; set CONFIG_IP_VS_SED [sync_tristate $CONFIG_IP_VS_SED $tmpvar_dep]; set CONFIG_IP_VS_SED [expr $CONFIG_IP_VS_SED&15]}
	global CONFIG_IP_VS_NQ
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_VS != 0) && ($CONFIG_IP_VS == 1 || $CONFIG_IP_VS == 2 || $CONFIG_IP_VS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP_VS]]; set CONFIG_IP_VS_NQ [sync_tristate $CONFIG_IP_VS_NQ $tmpvar_dep]; set CONFIG_IP_VS_NQ [expr $CONFIG_IP_VS_NQ&15]}
	global CONFIG_IP_VS_FTP
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_VS != 0) && ($CONFIG_IP_VS == 1 || $CONFIG_IP_VS == 2 || $CONFIG_IP_VS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP_VS]]; set CONFIG_IP_VS_FTP [sync_tristate $CONFIG_IP_VS_FTP $tmpvar_dep]; set CONFIG_IP_VS_FTP [expr $CONFIG_IP_VS_FTP&15]}
}


proc menu29 {w title} {
	set oldFocus [focus]
	catch {focus .menu26}
	catch {destroy $w; unregister_active 29}
	toplevel $w -class Dialog
	wm withdraw $w
	global active_menus
	set active_menus [lsort -integer [linsert $active_menus end 29]]
	message $w.m -width 400 -aspect 300 -text \
		"  IPv6: Netfilter Configuration"  -relief raised
	pack $w.m -pady 10 -side top -padx 10
	wm title $w "  IPv6: Netfilter Configuration" 

	bind $w <Escape> "catch {focus $oldFocus}; destroy $w; unregister_active 29; break"
	set nextscript "catch {focus $oldFocus}; destroy $w; unregister_active 29; menu30 .menu30 \"$title\""
	frame $w.f
	button $w.f.back -text "OK" \
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 29"
	button $w.f.next -text "Next" -underline 0\
		-width 15 -command $nextscript
	bind all <Alt-n> $nextscript
	button $w.f.prev -text "Prev" -underline 0\
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 29; menu28 .menu28 \"$title\""
	bind $w <Alt-p> "catch {focus $oldFocus}; destroy $w; unregister_active 29; menu28 .menu28 \"$title\";break"
	pack $w.f.back $w.f.next $w.f.prev -side left -expand on
	pack $w.f -pady 10 -side bottom -anchor w -fill x
	frame $w.topline -relief ridge -borderwidth 2 -height 2
	pack $w.topline -side top -fill x

	frame $w.botline -relief ridge -borderwidth 2 -height 2
	pack $w.botline -side bottom -fill x

	frame $w.config
	pack $w.config -fill y -expand on

	scrollbar $w.config.vscroll -command "$w.config.canvas yview"
	pack $w.config.vscroll -side right -fill y

	canvas $w.config.canvas -height 1\
		-relief flat -borderwidth 0 -yscrollcommand "$w.config.vscroll set" \
		-width [expr [winfo screenwidth .] * 1 / 2] 
	frame $w.config.f
	bind $w <Key-Down> "$w.config.canvas yview scroll  1 unit;break;"
	bind $w <Key-Up> "$w.config.canvas yview scroll  -1 unit;break;"
	bind $w <Key-Next> "$w.config.canvas yview scroll  1 page;break;"
	bind $w <Key-Prior> "$w.config.canvas yview scroll  -1 page;break;"
	bind $w <Key-Home> "$w.config.canvas yview moveto 0;break;"
	bind $w <Key-End> "$w.config.canvas yview moveto 1 ;break;"
	pack $w.config.canvas -side right -fill y


	tristate $w.config.f 29 0 "Userspace queueing via NETLINK (EXPERIMENTAL)" CONFIG_IP6_NF_QUEUE
	tristate $w.config.f 29 1 "IP6 tables support (required for filtering/masq/NAT)" CONFIG_IP6_NF_IPTABLES
	dep_tristate $w.config.f 29 2 "  limit match support" CONFIG_IP6_NF_MATCH_LIMIT
	dep_tristate $w.config.f 29 3 "  MAC address match support" CONFIG_IP6_NF_MATCH_MAC
	dep_tristate $w.config.f 29 4 "  Routing header match support (EXPERIMENTAL)" CONFIG_IP6_NF_MATCH_RT
	dep_tristate $w.config.f 29 5 "  Hop-by-Hop and Dst opts header match (EXPERIMENTAL)" CONFIG_IP6_NF_MATCH_OPTS
	dep_tristate $w.config.f 29 6 "  Fragmentation header match support (EXPERIMENTAL)" CONFIG_IP6_NF_MATCH_FRAG
	dep_tristate $w.config.f 29 7 "  HL match support" CONFIG_IP6_NF_MATCH_HL
	dep_tristate $w.config.f 29 8 "  Multiple port match support" CONFIG_IP6_NF_MATCH_MULTIPORT
	dep_tristate $w.config.f 29 9 "  Owner match support (EXPERIMENTAL)" CONFIG_IP6_NF_MATCH_OWNER
	dep_tristate $w.config.f 29 10 "  netfilter MARK match support" CONFIG_IP6_NF_MATCH_MARK
	dep_tristate $w.config.f 29 11 "  IPv6 Extension Headers Match (EXPERIMENTAL)" CONFIG_IP6_NF_MATCH_IPV6HEADER
	dep_tristate $w.config.f 29 12 "  AH/ESP match support (EXPERIMENTAL)" CONFIG_IP6_NF_MATCH_AHESP
	dep_tristate $w.config.f 29 13 "  Packet Length match support" CONFIG_IP6_NF_MATCH_LENGTH
	dep_tristate $w.config.f 29 14 "  EUI64 address check (EXPERIMENTAL)" CONFIG_IP6_NF_MATCH_EUI64
	dep_tristate $w.config.f 29 15 "  Packet filtering" CONFIG_IP6_NF_FILTER
	dep_tristate $w.config.f 29 16 "    LOG target support" CONFIG_IP6_NF_TARGET_LOG
	dep_tristate $w.config.f 29 17 "  Packet mangling" CONFIG_IP6_NF_MANGLE
	dep_tristate $w.config.f 29 18 "    MARK target support" CONFIG_IP6_NF_TARGET_MARK



	focus $w
	update_active
	global winx; global winy
	if {[winfo exists .menu26] == 0} then {menu26 .menu26 "Networking options"}
	set winx [expr [winfo x .menu26]+30]; set winy [expr [winfo y .menu26]+30]
	if {[winfo exists $w]} then {wm geometry $w +$winx+$winy}
	update idletasks
	if {[winfo exists $w]} then  {$w.config.canvas create window 0 0 -anchor nw -window $w.config.f

	$w.config.canvas configure \
		-width [expr [winfo reqwidth $w.config.f] + 1]\
		-scrollregion "-1 -1 [expr [winfo reqwidth $w.config.f] + 1] \
			 [expr [winfo reqheight $w.config.f] + 1]"

	set winy [expr [winfo reqh $w] - [winfo reqh $w.config.canvas]]
	set scry [expr [winfo screenh $w] / 2]
	set maxy [expr [winfo screenh $w] * 3 / 4]
	set canvtotal [expr [winfo reqh $w.config.f] + 2]
	if [expr $winy + $canvtotal < $maxy] {
		$w.config.canvas configure -height $canvtotal
	} else {
		$w.config.canvas configure -height [expr $scry - $winy]
		}
	}
	update idletasks
	if {[winfo exists $w]} then {
	wm maxsize $w [winfo width $w] [winfo screenheight $w]
	wm minsize $w [winfo width $w] 100

	wm deiconify $w
}
}

proc update_menu29 {} {
	global CONFIG_MODULES
	global CONFIG_NET
	global CONFIG_INET
	global CONFIG_IPV6
	global CONFIG_NETFILTER
	global CONFIG_EXPERIMENTAL
	global CONFIG_IP6_NF_QUEUE
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_IPV6 != 0) && ($CONFIG_NETFILTER != 0) && ($CONFIG_EXPERIMENTAL == 1)} then {
	configure_entry .menu29.config.f.x0 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu29.config.f.x0 normal {m}} else {configure_entry .menu29.config.f.x0 disabled {m}}; configure_entry .menu29.config.f.x0 normal {n l}} else {configure_entry .menu29.config.f.x0 disabled {y n m l}}
	global CONFIG_IP6_NF_IPTABLES
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_IPV6 != 0) && ($CONFIG_NETFILTER != 0)} then {
	configure_entry .menu29.config.f.x1 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu29.config.f.x1 normal {m}} else {configure_entry .menu29.config.f.x1 disabled {m}}; configure_entry .menu29.config.f.x1 normal {n l}} else {configure_entry .menu29.config.f.x1 disabled {y n m l}}
	global CONFIG_IP6_NF_MATCH_LIMIT
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_IPV6 != 0) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP6_NF_IPTABLES != 0) && ($CONFIG_IP6_NF_IPTABLES == 1 || $CONFIG_IP6_NF_IPTABLES == 2 || $CONFIG_IP6_NF_IPTABLES == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP6_NF_IPTABLES]];set CONFIG_IP6_NF_MATCH_LIMIT [sync_tristate $CONFIG_IP6_NF_MATCH_LIMIT $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu29.config.f.x2 disabled {y}} else {configure_entry .menu29.config.f.x2 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu29.config.f.x2 disabled {m}} else {configure_entry .menu29.config.f.x2 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu29.config.f.x2 normal {m}} else {configure_entry .menu29.config.f.x2 disabled {m}}; configure_entry .menu29.config.f.x2 normal {n l}} else {configure_entry .menu29.config.f.x2 disabled {y n m l}}
	global CONFIG_IP6_NF_MATCH_MAC
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_IPV6 != 0) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP6_NF_IPTABLES != 0) && ($CONFIG_IP6_NF_IPTABLES == 1 || $CONFIG_IP6_NF_IPTABLES == 2 || $CONFIG_IP6_NF_IPTABLES == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP6_NF_IPTABLES]];set CONFIG_IP6_NF_MATCH_MAC [sync_tristate $CONFIG_IP6_NF_MATCH_MAC $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu29.config.f.x3 disabled {y}} else {configure_entry .menu29.config.f.x3 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu29.config.f.x3 disabled {m}} else {configure_entry .menu29.config.f.x3 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu29.config.f.x3 normal {m}} else {configure_entry .menu29.config.f.x3 disabled {m}}; configure_entry .menu29.config.f.x3 normal {n l}} else {configure_entry .menu29.config.f.x3 disabled {y n m l}}
	global CONFIG_IP6_NF_MATCH_RT
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_IPV6 != 0) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP6_NF_IPTABLES != 0) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_IP6_NF_IPTABLES == 1 || $CONFIG_IP6_NF_IPTABLES == 2 || $CONFIG_IP6_NF_IPTABLES == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP6_NF_IPTABLES]];set CONFIG_IP6_NF_MATCH_RT [sync_tristate $CONFIG_IP6_NF_MATCH_RT $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu29.config.f.x4 disabled {y}} else {configure_entry .menu29.config.f.x4 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu29.config.f.x4 disabled {m}} else {configure_entry .menu29.config.f.x4 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu29.config.f.x4 normal {m}} else {configure_entry .menu29.config.f.x4 disabled {m}}; configure_entry .menu29.config.f.x4 normal {n l}} else {configure_entry .menu29.config.f.x4 disabled {y n m l}}
	global CONFIG_IP6_NF_MATCH_OPTS
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_IPV6 != 0) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP6_NF_IPTABLES != 0) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_IP6_NF_IPTABLES == 1 || $CONFIG_IP6_NF_IPTABLES == 2 || $CONFIG_IP6_NF_IPTABLES == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP6_NF_IPTABLES]];set CONFIG_IP6_NF_MATCH_OPTS [sync_tristate $CONFIG_IP6_NF_MATCH_OPTS $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu29.config.f.x5 disabled {y}} else {configure_entry .menu29.config.f.x5 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu29.config.f.x5 disabled {m}} else {configure_entry .menu29.config.f.x5 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu29.config.f.x5 normal {m}} else {configure_entry .menu29.config.f.x5 disabled {m}}; configure_entry .menu29.config.f.x5 normal {n l}} else {configure_entry .menu29.config.f.x5 disabled {y n m l}}
	global CONFIG_IP6_NF_MATCH_FRAG
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_IPV6 != 0) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP6_NF_IPTABLES != 0) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_IP6_NF_IPTABLES == 1 || $CONFIG_IP6_NF_IPTABLES == 2 || $CONFIG_IP6_NF_IPTABLES == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP6_NF_IPTABLES]];set CONFIG_IP6_NF_MATCH_FRAG [sync_tristate $CONFIG_IP6_NF_MATCH_FRAG $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu29.config.f.x6 disabled {y}} else {configure_entry .menu29.config.f.x6 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu29.config.f.x6 disabled {m}} else {configure_entry .menu29.config.f.x6 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu29.config.f.x6 normal {m}} else {configure_entry .menu29.config.f.x6 disabled {m}}; configure_entry .menu29.config.f.x6 normal {n l}} else {configure_entry .menu29.config.f.x6 disabled {y n m l}}
	global CONFIG_IP6_NF_MATCH_HL
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_IPV6 != 0) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP6_NF_IPTABLES != 0) && ($CONFIG_IP6_NF_IPTABLES == 1 || $CONFIG_IP6_NF_IPTABLES == 2 || $CONFIG_IP6_NF_IPTABLES == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP6_NF_IPTABLES]];set CONFIG_IP6_NF_MATCH_HL [sync_tristate $CONFIG_IP6_NF_MATCH_HL $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu29.config.f.x7 disabled {y}} else {configure_entry .menu29.config.f.x7 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu29.config.f.x7 disabled {m}} else {configure_entry .menu29.config.f.x7 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu29.config.f.x7 normal {m}} else {configure_entry .menu29.config.f.x7 disabled {m}}; configure_entry .menu29.config.f.x7 normal {n l}} else {configure_entry .menu29.config.f.x7 disabled {y n m l}}
	global CONFIG_IP6_NF_MATCH_MULTIPORT
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_IPV6 != 0) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP6_NF_IPTABLES != 0) && ($CONFIG_IP6_NF_IPTABLES == 1 || $CONFIG_IP6_NF_IPTABLES == 2 || $CONFIG_IP6_NF_IPTABLES == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP6_NF_IPTABLES]];set CONFIG_IP6_NF_MATCH_MULTIPORT [sync_tristate $CONFIG_IP6_NF_MATCH_MULTIPORT $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu29.config.f.x8 disabled {y}} else {configure_entry .menu29.config.f.x8 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu29.config.f.x8 disabled {m}} else {configure_entry .menu29.config.f.x8 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu29.config.f.x8 normal {m}} else {configure_entry .menu29.config.f.x8 disabled {m}}; configure_entry .menu29.config.f.x8 normal {n l}} else {configure_entry .menu29.config.f.x8 disabled {y n m l}}
	global CONFIG_IP6_NF_MATCH_OWNER
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_IPV6 != 0) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP6_NF_IPTABLES != 0) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_IP6_NF_IPTABLES == 1 || $CONFIG_IP6_NF_IPTABLES == 2 || $CONFIG_IP6_NF_IPTABLES == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP6_NF_IPTABLES]];set CONFIG_IP6_NF_MATCH_OWNER [sync_tristate $CONFIG_IP6_NF_MATCH_OWNER $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu29.config.f.x9 disabled {y}} else {configure_entry .menu29.config.f.x9 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu29.config.f.x9 disabled {m}} else {configure_entry .menu29.config.f.x9 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu29.config.f.x9 normal {m}} else {configure_entry .menu29.config.f.x9 disabled {m}}; configure_entry .menu29.config.f.x9 normal {n l}} else {configure_entry .menu29.config.f.x9 disabled {y n m l}}
	global CONFIG_IP6_NF_MATCH_MARK
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_IPV6 != 0) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP6_NF_IPTABLES != 0) && ($CONFIG_IP6_NF_IPTABLES == 1 || $CONFIG_IP6_NF_IPTABLES == 2 || $CONFIG_IP6_NF_IPTABLES == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP6_NF_IPTABLES]];set CONFIG_IP6_NF_MATCH_MARK [sync_tristate $CONFIG_IP6_NF_MATCH_MARK $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu29.config.f.x10 disabled {y}} else {configure_entry .menu29.config.f.x10 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu29.config.f.x10 disabled {m}} else {configure_entry .menu29.config.f.x10 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu29.config.f.x10 normal {m}} else {configure_entry .menu29.config.f.x10 disabled {m}}; configure_entry .menu29.config.f.x10 normal {n l}} else {configure_entry .menu29.config.f.x10 disabled {y n m l}}
	global CONFIG_IP6_NF_MATCH_IPV6HEADER
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_IPV6 != 0) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP6_NF_IPTABLES != 0) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_IP6_NF_IPTABLES == 1 || $CONFIG_IP6_NF_IPTABLES == 2 || $CONFIG_IP6_NF_IPTABLES == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP6_NF_IPTABLES]];set CONFIG_IP6_NF_MATCH_IPV6HEADER [sync_tristate $CONFIG_IP6_NF_MATCH_IPV6HEADER $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu29.config.f.x11 disabled {y}} else {configure_entry .menu29.config.f.x11 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu29.config.f.x11 disabled {m}} else {configure_entry .menu29.config.f.x11 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu29.config.f.x11 normal {m}} else {configure_entry .menu29.config.f.x11 disabled {m}}; configure_entry .menu29.config.f.x11 normal {n l}} else {configure_entry .menu29.config.f.x11 disabled {y n m l}}
	global CONFIG_IP6_NF_MATCH_AHESP
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_IPV6 != 0) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP6_NF_IPTABLES != 0) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_IP6_NF_IPTABLES == 1 || $CONFIG_IP6_NF_IPTABLES == 2 || $CONFIG_IP6_NF_IPTABLES == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP6_NF_IPTABLES]];set CONFIG_IP6_NF_MATCH_AHESP [sync_tristate $CONFIG_IP6_NF_MATCH_AHESP $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu29.config.f.x12 disabled {y}} else {configure_entry .menu29.config.f.x12 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu29.config.f.x12 disabled {m}} else {configure_entry .menu29.config.f.x12 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu29.config.f.x12 normal {m}} else {configure_entry .menu29.config.f.x12 disabled {m}}; configure_entry .menu29.config.f.x12 normal {n l}} else {configure_entry .menu29.config.f.x12 disabled {y n m l}}
	global CONFIG_IP6_NF_MATCH_LENGTH
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_IPV6 != 0) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP6_NF_IPTABLES != 0) && ($CONFIG_IP6_NF_IPTABLES == 1 || $CONFIG_IP6_NF_IPTABLES == 2 || $CONFIG_IP6_NF_IPTABLES == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP6_NF_IPTABLES]];set CONFIG_IP6_NF_MATCH_LENGTH [sync_tristate $CONFIG_IP6_NF_MATCH_LENGTH $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu29.config.f.x13 disabled {y}} else {configure_entry .menu29.config.f.x13 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu29.config.f.x13 disabled {m}} else {configure_entry .menu29.config.f.x13 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu29.config.f.x13 normal {m}} else {configure_entry .menu29.config.f.x13 disabled {m}}; configure_entry .menu29.config.f.x13 normal {n l}} else {configure_entry .menu29.config.f.x13 disabled {y n m l}}
	global CONFIG_IP6_NF_MATCH_EUI64
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_IPV6 != 0) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP6_NF_IPTABLES != 0) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_IP6_NF_IPTABLES == 1 || $CONFIG_IP6_NF_IPTABLES == 2 || $CONFIG_IP6_NF_IPTABLES == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP6_NF_IPTABLES]];set CONFIG_IP6_NF_MATCH_EUI64 [sync_tristate $CONFIG_IP6_NF_MATCH_EUI64 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu29.config.f.x14 disabled {y}} else {configure_entry .menu29.config.f.x14 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu29.config.f.x14 disabled {m}} else {configure_entry .menu29.config.f.x14 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu29.config.f.x14 normal {m}} else {configure_entry .menu29.config.f.x14 disabled {m}}; configure_entry .menu29.config.f.x14 normal {n l}} else {configure_entry .menu29.config.f.x14 disabled {y n m l}}
	global CONFIG_IP6_NF_FILTER
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_IPV6 != 0) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP6_NF_IPTABLES != 0) && ($CONFIG_IP6_NF_IPTABLES == 1 || $CONFIG_IP6_NF_IPTABLES == 2 || $CONFIG_IP6_NF_IPTABLES == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP6_NF_IPTABLES]];set CONFIG_IP6_NF_FILTER [sync_tristate $CONFIG_IP6_NF_FILTER $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu29.config.f.x15 disabled {y}} else {configure_entry .menu29.config.f.x15 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu29.config.f.x15 disabled {m}} else {configure_entry .menu29.config.f.x15 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu29.config.f.x15 normal {m}} else {configure_entry .menu29.config.f.x15 disabled {m}}; configure_entry .menu29.config.f.x15 normal {n l}} else {configure_entry .menu29.config.f.x15 disabled {y n m l}}
	global CONFIG_IP6_NF_TARGET_LOG
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_IPV6 != 0) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP6_NF_IPTABLES != 0) && ($CONFIG_IP6_NF_FILTER != 0) && ($CONFIG_IP6_NF_FILTER == 1 || $CONFIG_IP6_NF_FILTER == 2 || $CONFIG_IP6_NF_FILTER == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP6_NF_FILTER]];set CONFIG_IP6_NF_TARGET_LOG [sync_tristate $CONFIG_IP6_NF_TARGET_LOG $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu29.config.f.x16 disabled {y}} else {configure_entry .menu29.config.f.x16 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu29.config.f.x16 disabled {m}} else {configure_entry .menu29.config.f.x16 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu29.config.f.x16 normal {m}} else {configure_entry .menu29.config.f.x16 disabled {m}}; configure_entry .menu29.config.f.x16 normal {n l}} else {configure_entry .menu29.config.f.x16 disabled {y n m l}}
	global CONFIG_IP6_NF_MANGLE
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_IPV6 != 0) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP6_NF_IPTABLES != 0) && ($CONFIG_IP6_NF_IPTABLES == 1 || $CONFIG_IP6_NF_IPTABLES == 2 || $CONFIG_IP6_NF_IPTABLES == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP6_NF_IPTABLES]];set CONFIG_IP6_NF_MANGLE [sync_tristate $CONFIG_IP6_NF_MANGLE $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu29.config.f.x17 disabled {y}} else {configure_entry .menu29.config.f.x17 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu29.config.f.x17 disabled {m}} else {configure_entry .menu29.config.f.x17 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu29.config.f.x17 normal {m}} else {configure_entry .menu29.config.f.x17 disabled {m}}; configure_entry .menu29.config.f.x17 normal {n l}} else {configure_entry .menu29.config.f.x17 disabled {y n m l}}
	global CONFIG_IP6_NF_TARGET_MARK
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_IPV6 != 0) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP6_NF_IPTABLES != 0) && ($CONFIG_IP6_NF_MANGLE != 0) && ($CONFIG_IP6_NF_MANGLE == 1 || $CONFIG_IP6_NF_MANGLE == 2 || $CONFIG_IP6_NF_MANGLE == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP6_NF_MANGLE]];set CONFIG_IP6_NF_TARGET_MARK [sync_tristate $CONFIG_IP6_NF_TARGET_MARK $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu29.config.f.x18 disabled {y}} else {configure_entry .menu29.config.f.x18 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu29.config.f.x18 disabled {m}} else {configure_entry .menu29.config.f.x18 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu29.config.f.x18 normal {m}} else {configure_entry .menu29.config.f.x18 disabled {m}}; configure_entry .menu29.config.f.x18 normal {n l}} else {configure_entry .menu29.config.f.x18 disabled {y n m l}}
}


proc update_define_menu29 {} {
	update_define_mainmenu
	global CONFIG_MODULES
	global CONFIG_IP6_NF_QUEUE
	global CONFIG_IP6_NF_IPTABLES
set CONFIG_IP6_NF_QUEUE [expr $CONFIG_IP6_NF_QUEUE|16]
set CONFIG_IP6_NF_IPTABLES [expr $CONFIG_IP6_NF_IPTABLES|16]
	global CONFIG_NET
	global CONFIG_INET
	global CONFIG_IPV6
	global CONFIG_NETFILTER
	global CONFIG_EXPERIMENTAL
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_IPV6 != 0) && ($CONFIG_NETFILTER != 0) && ($CONFIG_EXPERIMENTAL == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_IP6_NF_QUEUE == 2)} then {set CONFIG_IP6_NF_QUEUE 1}; set CONFIG_IP6_NF_QUEUE [expr $CONFIG_IP6_NF_QUEUE&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_IPV6 != 0) && ($CONFIG_NETFILTER != 0)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_IP6_NF_IPTABLES == 2)} then {set CONFIG_IP6_NF_IPTABLES 1}; set CONFIG_IP6_NF_IPTABLES [expr $CONFIG_IP6_NF_IPTABLES&15]}
	global CONFIG_IP6_NF_MATCH_LIMIT
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_IPV6 != 0) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP6_NF_IPTABLES != 0) && ($CONFIG_IP6_NF_IPTABLES == 1 || $CONFIG_IP6_NF_IPTABLES == 2 || $CONFIG_IP6_NF_IPTABLES == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP6_NF_IPTABLES]]; set CONFIG_IP6_NF_MATCH_LIMIT [sync_tristate $CONFIG_IP6_NF_MATCH_LIMIT $tmpvar_dep]; set CONFIG_IP6_NF_MATCH_LIMIT [expr $CONFIG_IP6_NF_MATCH_LIMIT&15]}
	global CONFIG_IP6_NF_MATCH_MAC
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_IPV6 != 0) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP6_NF_IPTABLES != 0) && ($CONFIG_IP6_NF_IPTABLES == 1 || $CONFIG_IP6_NF_IPTABLES == 2 || $CONFIG_IP6_NF_IPTABLES == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP6_NF_IPTABLES]]; set CONFIG_IP6_NF_MATCH_MAC [sync_tristate $CONFIG_IP6_NF_MATCH_MAC $tmpvar_dep]; set CONFIG_IP6_NF_MATCH_MAC [expr $CONFIG_IP6_NF_MATCH_MAC&15]}
	global CONFIG_IP6_NF_MATCH_RT
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_IPV6 != 0) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP6_NF_IPTABLES != 0) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_IP6_NF_IPTABLES == 1 || $CONFIG_IP6_NF_IPTABLES == 2 || $CONFIG_IP6_NF_IPTABLES == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP6_NF_IPTABLES]]; set CONFIG_IP6_NF_MATCH_RT [sync_tristate $CONFIG_IP6_NF_MATCH_RT $tmpvar_dep]; set CONFIG_IP6_NF_MATCH_RT [expr $CONFIG_IP6_NF_MATCH_RT&15]}
	global CONFIG_IP6_NF_MATCH_OPTS
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_IPV6 != 0) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP6_NF_IPTABLES != 0) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_IP6_NF_IPTABLES == 1 || $CONFIG_IP6_NF_IPTABLES == 2 || $CONFIG_IP6_NF_IPTABLES == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP6_NF_IPTABLES]]; set CONFIG_IP6_NF_MATCH_OPTS [sync_tristate $CONFIG_IP6_NF_MATCH_OPTS $tmpvar_dep]; set CONFIG_IP6_NF_MATCH_OPTS [expr $CONFIG_IP6_NF_MATCH_OPTS&15]}
	global CONFIG_IP6_NF_MATCH_FRAG
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_IPV6 != 0) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP6_NF_IPTABLES != 0) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_IP6_NF_IPTABLES == 1 || $CONFIG_IP6_NF_IPTABLES == 2 || $CONFIG_IP6_NF_IPTABLES == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP6_NF_IPTABLES]]; set CONFIG_IP6_NF_MATCH_FRAG [sync_tristate $CONFIG_IP6_NF_MATCH_FRAG $tmpvar_dep]; set CONFIG_IP6_NF_MATCH_FRAG [expr $CONFIG_IP6_NF_MATCH_FRAG&15]}
	global CONFIG_IP6_NF_MATCH_HL
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_IPV6 != 0) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP6_NF_IPTABLES != 0) && ($CONFIG_IP6_NF_IPTABLES == 1 || $CONFIG_IP6_NF_IPTABLES == 2 || $CONFIG_IP6_NF_IPTABLES == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP6_NF_IPTABLES]]; set CONFIG_IP6_NF_MATCH_HL [sync_tristate $CONFIG_IP6_NF_MATCH_HL $tmpvar_dep]; set CONFIG_IP6_NF_MATCH_HL [expr $CONFIG_IP6_NF_MATCH_HL&15]}
	global CONFIG_IP6_NF_MATCH_MULTIPORT
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_IPV6 != 0) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP6_NF_IPTABLES != 0) && ($CONFIG_IP6_NF_IPTABLES == 1 || $CONFIG_IP6_NF_IPTABLES == 2 || $CONFIG_IP6_NF_IPTABLES == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP6_NF_IPTABLES]]; set CONFIG_IP6_NF_MATCH_MULTIPORT [sync_tristate $CONFIG_IP6_NF_MATCH_MULTIPORT $tmpvar_dep]; set CONFIG_IP6_NF_MATCH_MULTIPORT [expr $CONFIG_IP6_NF_MATCH_MULTIPORT&15]}
	global CONFIG_IP6_NF_MATCH_OWNER
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_IPV6 != 0) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP6_NF_IPTABLES != 0) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_IP6_NF_IPTABLES == 1 || $CONFIG_IP6_NF_IPTABLES == 2 || $CONFIG_IP6_NF_IPTABLES == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP6_NF_IPTABLES]]; set CONFIG_IP6_NF_MATCH_OWNER [sync_tristate $CONFIG_IP6_NF_MATCH_OWNER $tmpvar_dep]; set CONFIG_IP6_NF_MATCH_OWNER [expr $CONFIG_IP6_NF_MATCH_OWNER&15]}
	global CONFIG_IP6_NF_MATCH_MARK
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_IPV6 != 0) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP6_NF_IPTABLES != 0) && ($CONFIG_IP6_NF_IPTABLES == 1 || $CONFIG_IP6_NF_IPTABLES == 2 || $CONFIG_IP6_NF_IPTABLES == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP6_NF_IPTABLES]]; set CONFIG_IP6_NF_MATCH_MARK [sync_tristate $CONFIG_IP6_NF_MATCH_MARK $tmpvar_dep]; set CONFIG_IP6_NF_MATCH_MARK [expr $CONFIG_IP6_NF_MATCH_MARK&15]}
	global CONFIG_IP6_NF_MATCH_IPV6HEADER
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_IPV6 != 0) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP6_NF_IPTABLES != 0) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_IP6_NF_IPTABLES == 1 || $CONFIG_IP6_NF_IPTABLES == 2 || $CONFIG_IP6_NF_IPTABLES == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP6_NF_IPTABLES]]; set CONFIG_IP6_NF_MATCH_IPV6HEADER [sync_tristate $CONFIG_IP6_NF_MATCH_IPV6HEADER $tmpvar_dep]; set CONFIG_IP6_NF_MATCH_IPV6HEADER [expr $CONFIG_IP6_NF_MATCH_IPV6HEADER&15]}
	global CONFIG_IP6_NF_MATCH_AHESP
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_IPV6 != 0) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP6_NF_IPTABLES != 0) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_IP6_NF_IPTABLES == 1 || $CONFIG_IP6_NF_IPTABLES == 2 || $CONFIG_IP6_NF_IPTABLES == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP6_NF_IPTABLES]]; set CONFIG_IP6_NF_MATCH_AHESP [sync_tristate $CONFIG_IP6_NF_MATCH_AHESP $tmpvar_dep]; set CONFIG_IP6_NF_MATCH_AHESP [expr $CONFIG_IP6_NF_MATCH_AHESP&15]}
	global CONFIG_IP6_NF_MATCH_LENGTH
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_IPV6 != 0) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP6_NF_IPTABLES != 0) && ($CONFIG_IP6_NF_IPTABLES == 1 || $CONFIG_IP6_NF_IPTABLES == 2 || $CONFIG_IP6_NF_IPTABLES == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP6_NF_IPTABLES]]; set CONFIG_IP6_NF_MATCH_LENGTH [sync_tristate $CONFIG_IP6_NF_MATCH_LENGTH $tmpvar_dep]; set CONFIG_IP6_NF_MATCH_LENGTH [expr $CONFIG_IP6_NF_MATCH_LENGTH&15]}
	global CONFIG_IP6_NF_MATCH_EUI64
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_IPV6 != 0) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP6_NF_IPTABLES != 0) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_IP6_NF_IPTABLES == 1 || $CONFIG_IP6_NF_IPTABLES == 2 || $CONFIG_IP6_NF_IPTABLES == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP6_NF_IPTABLES]]; set CONFIG_IP6_NF_MATCH_EUI64 [sync_tristate $CONFIG_IP6_NF_MATCH_EUI64 $tmpvar_dep]; set CONFIG_IP6_NF_MATCH_EUI64 [expr $CONFIG_IP6_NF_MATCH_EUI64&15]}
	global CONFIG_IP6_NF_FILTER
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_IPV6 != 0) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP6_NF_IPTABLES != 0) && ($CONFIG_IP6_NF_IPTABLES == 1 || $CONFIG_IP6_NF_IPTABLES == 2 || $CONFIG_IP6_NF_IPTABLES == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP6_NF_IPTABLES]]; set CONFIG_IP6_NF_FILTER [sync_tristate $CONFIG_IP6_NF_FILTER $tmpvar_dep]; set CONFIG_IP6_NF_FILTER [expr $CONFIG_IP6_NF_FILTER&15]}
	global CONFIG_IP6_NF_TARGET_LOG
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_IPV6 != 0) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP6_NF_IPTABLES != 0) && ($CONFIG_IP6_NF_FILTER != 0) && ($CONFIG_IP6_NF_FILTER == 1 || $CONFIG_IP6_NF_FILTER == 2 || $CONFIG_IP6_NF_FILTER == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP6_NF_FILTER]]; set CONFIG_IP6_NF_TARGET_LOG [sync_tristate $CONFIG_IP6_NF_TARGET_LOG $tmpvar_dep]; set CONFIG_IP6_NF_TARGET_LOG [expr $CONFIG_IP6_NF_TARGET_LOG&15]}
	global CONFIG_IP6_NF_MANGLE
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_IPV6 != 0) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP6_NF_IPTABLES != 0) && ($CONFIG_IP6_NF_IPTABLES == 1 || $CONFIG_IP6_NF_IPTABLES == 2 || $CONFIG_IP6_NF_IPTABLES == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP6_NF_IPTABLES]]; set CONFIG_IP6_NF_MANGLE [sync_tristate $CONFIG_IP6_NF_MANGLE $tmpvar_dep]; set CONFIG_IP6_NF_MANGLE [expr $CONFIG_IP6_NF_MANGLE&15]}
	global CONFIG_IP6_NF_TARGET_MARK
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_IPV6 != 0) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP6_NF_IPTABLES != 0) && ($CONFIG_IP6_NF_MANGLE != 0) && ($CONFIG_IP6_NF_MANGLE == 1 || $CONFIG_IP6_NF_MANGLE == 2 || $CONFIG_IP6_NF_MANGLE == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IP6_NF_MANGLE]]; set CONFIG_IP6_NF_TARGET_MARK [sync_tristate $CONFIG_IP6_NF_TARGET_MARK $tmpvar_dep]; set CONFIG_IP6_NF_TARGET_MARK [expr $CONFIG_IP6_NF_TARGET_MARK&15]}
}


proc menu30 {w title} {
	set oldFocus [focus]
	catch {focus .menu26}
	catch {destroy $w; unregister_active 30}
	toplevel $w -class Dialog
	wm withdraw $w
	global active_menus
	set active_menus [lsort -integer [linsert $active_menus end 30]]
	message $w.m -width 400 -aspect 300 -text \
		"   SCTP Configuration (EXPERIMENTAL)"  -relief raised
	pack $w.m -pady 10 -side top -padx 10
	wm title $w "   SCTP Configuration (EXPERIMENTAL)" 

	bind $w <Escape> "catch {focus $oldFocus}; destroy $w; unregister_active 30; break"
	set nextscript "catch {focus $oldFocus}; destroy $w; unregister_active 30; menu31 .menu31 \"$title\""
	frame $w.f
	button $w.f.back -text "OK" \
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 30"
	button $w.f.next -text "Next" -underline 0\
		-width 15 -command $nextscript
	bind all <Alt-n> $nextscript
	button $w.f.prev -text "Prev" -underline 0\
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 30; menu29 .menu29 \"$title\""
	bind $w <Alt-p> "catch {focus $oldFocus}; destroy $w; unregister_active 30; menu29 .menu29 \"$title\";break"
	pack $w.f.back $w.f.next $w.f.prev -side left -expand on
	pack $w.f -pady 10 -side bottom -anchor w -fill x
	frame $w.topline -relief ridge -borderwidth 2 -height 2
	pack $w.topline -side top -fill x

	frame $w.botline -relief ridge -borderwidth 2 -height 2
	pack $w.botline -side bottom -fill x

	frame $w.config
	pack $w.config -fill y -expand on

	scrollbar $w.config.vscroll -command "$w.config.canvas yview"
	pack $w.config.vscroll -side right -fill y

	canvas $w.config.canvas -height 1\
		-relief flat -borderwidth 0 -yscrollcommand "$w.config.vscroll set" \
		-width [expr [winfo screenwidth .] * 1 / 2] 
	frame $w.config.f
	bind $w <Key-Down> "$w.config.canvas yview scroll  1 unit;break;"
	bind $w <Key-Up> "$w.config.canvas yview scroll  -1 unit;break;"
	bind $w <Key-Next> "$w.config.canvas yview scroll  1 page;break;"
	bind $w <Key-Prior> "$w.config.canvas yview scroll  -1 page;break;"
	bind $w <Key-Home> "$w.config.canvas yview moveto 0;break;"
	bind $w <Key-End> "$w.config.canvas yview moveto 1 ;break;"
	pack $w.config.canvas -side right -fill y


	dep_tristate $w.config.f 30 0 "  The SCTP Protocol (EXPERIMENTAL)" CONFIG_IP_SCTP
	bool $w.config.f 30 1 "    SCTP: Use old checksum (Adler-32)" CONFIG_SCTP_ADLER32
	bool $w.config.f 30 2 "    SCTP: Debug messages" CONFIG_SCTP_DBG_MSG
	bool $w.config.f 30 3 "    SCTP: Debug object counts" CONFIG_SCTP_DBG_OBJCNT



	focus $w
	update_active
	global winx; global winy
	if {[winfo exists .menu26] == 0} then {menu26 .menu26 "Networking options"}
	set winx [expr [winfo x .menu26]+30]; set winy [expr [winfo y .menu26]+30]
	if {[winfo exists $w]} then {wm geometry $w +$winx+$winy}
	update idletasks
	if {[winfo exists $w]} then  {$w.config.canvas create window 0 0 -anchor nw -window $w.config.f

	$w.config.canvas configure \
		-width [expr [winfo reqwidth $w.config.f] + 1]\
		-scrollregion "-1 -1 [expr [winfo reqwidth $w.config.f] + 1] \
			 [expr [winfo reqheight $w.config.f] + 1]"

	set winy [expr [winfo reqh $w] - [winfo reqh $w.config.canvas]]
	set scry [expr [winfo screenh $w] / 2]
	set maxy [expr [winfo screenh $w] * 3 / 4]
	set canvtotal [expr [winfo reqh $w.config.f] + 2]
	if [expr $winy + $canvtotal < $maxy] {
		$w.config.canvas configure -height $canvtotal
	} else {
		$w.config.canvas configure -height [expr $scry - $winy]
		}
	}
	update idletasks
	if {[winfo exists $w]} then {
	wm maxsize $w [winfo width $w] [winfo screenheight $w]
	wm minsize $w [winfo width $w] 100

	wm deiconify $w
}
}

proc update_menu30 {} {
	global CONFIG_MODULES
	global CONFIG_NET
	global CONFIG_INET
	global CONFIG_EXPERIMENTAL
	global CONFIG_IPV6_SCTP__
	global CONFIG_IP_SCTP
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_IPV6_SCTP__ == 1 || $CONFIG_IPV6_SCTP__ == 2 || $CONFIG_IPV6_SCTP__ == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IPV6_SCTP__]];set CONFIG_IP_SCTP [sync_tristate $CONFIG_IP_SCTP $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu30.config.f.x0 disabled {y}} else {configure_entry .menu30.config.f.x0 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu30.config.f.x0 disabled {m}} else {configure_entry .menu30.config.f.x0 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu30.config.f.x0 normal {m}} else {configure_entry .menu30.config.f.x0 disabled {m}}; configure_entry .menu30.config.f.x0 normal {n l}} else {configure_entry .menu30.config.f.x0 disabled {y n m l}}
	global CONFIG_SCTP_ADLER32
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_IP_SCTP != 0)} then {
	configure_entry .menu30.config.f.x1 normal {n l y}} else {configure_entry .menu30.config.f.x1 disabled {y n l}}
	global CONFIG_SCTP_DBG_MSG
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_IP_SCTP != 0)} then {
	configure_entry .menu30.config.f.x2 normal {n l y}} else {configure_entry .menu30.config.f.x2 disabled {y n l}}
	global CONFIG_SCTP_DBG_OBJCNT
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_IP_SCTP != 0)} then {
	configure_entry .menu30.config.f.x3 normal {n l y}} else {configure_entry .menu30.config.f.x3 disabled {y n l}}
}


proc update_define_menu30 {} {
	update_define_mainmenu
	global CONFIG_MODULES
	global CONFIG_IPV6_SCTP__
	global CONFIG_SCTP_ADLER32
set CONFIG_SCTP_ADLER32 [expr $CONFIG_SCTP_ADLER32|16]
	global CONFIG_SCTP_DBG_MSG
set CONFIG_SCTP_DBG_MSG [expr $CONFIG_SCTP_DBG_MSG|16]
	global CONFIG_SCTP_DBG_OBJCNT
set CONFIG_SCTP_DBG_OBJCNT [expr $CONFIG_SCTP_DBG_OBJCNT|16]
	global CONFIG_NET
	global CONFIG_INET
	global CONFIG_EXPERIMENTAL
	global CONFIG_IPV6
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_IPV6 != 0)} then {set CONFIG_IPV6_SCTP__ $CONFIG_IPV6 }
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_IPV6 == 0)} then {	global CONSTANT_Y
set CONFIG_IPV6_SCTP__ $CONSTANT_Y }
	global CONFIG_IP_SCTP
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_IPV6_SCTP__ == 1 || $CONFIG_IPV6_SCTP__ == 2 || $CONFIG_IPV6_SCTP__ == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IPV6_SCTP__]]; set CONFIG_IP_SCTP [sync_tristate $CONFIG_IP_SCTP $tmpvar_dep]; set CONFIG_IP_SCTP [expr $CONFIG_IP_SCTP&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_IP_SCTP != 0)} then {
	set CONFIG_SCTP_ADLER32 [expr $CONFIG_SCTP_ADLER32&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_IP_SCTP != 0)} then {
	set CONFIG_SCTP_DBG_MSG [expr $CONFIG_SCTP_DBG_MSG&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_IP_SCTP != 0)} then {
	set CONFIG_SCTP_DBG_OBJCNT [expr $CONFIG_SCTP_DBG_OBJCNT&15]}
}


proc menu31 {w title} {
	set oldFocus [focus]
	catch {focus .menu26}
	catch {destroy $w; unregister_active 31}
	toplevel $w -class Dialog
	wm withdraw $w
	global active_menus
	set active_menus [lsort -integer [linsert $active_menus end 31]]
	message $w.m -width 400 -aspect 300 -text \
		"Appletalk devices"  -relief raised
	pack $w.m -pady 10 -side top -padx 10
	wm title $w "Appletalk devices" 

	bind $w <Escape> "catch {focus $oldFocus}; destroy $w; unregister_active 31; break"
	set nextscript "catch {focus $oldFocus}; destroy $w; unregister_active 31; menu32 .menu32 \"$title\""
	frame $w.f
	button $w.f.back -text "OK" \
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 31"
	button $w.f.next -text "Next" -underline 0\
		-width 15 -command $nextscript
	bind all <Alt-n> $nextscript
	button $w.f.prev -text "Prev" -underline 0\
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 31; menu30 .menu30 \"$title\""
	bind $w <Alt-p> "catch {focus $oldFocus}; destroy $w; unregister_active 31; menu30 .menu30 \"$title\";break"
	pack $w.f.back $w.f.next $w.f.prev -side left -expand on
	pack $w.f -pady 10 -side bottom -anchor w -fill x
	frame $w.topline -relief ridge -borderwidth 2 -height 2
	pack $w.topline -side top -fill x

	frame $w.botline -relief ridge -borderwidth 2 -height 2
	pack $w.botline -side bottom -fill x

	frame $w.config
	pack $w.config -fill y -expand on

	scrollbar $w.config.vscroll -command "$w.config.canvas yview"
	pack $w.config.vscroll -side right -fill y

	canvas $w.config.canvas -height 1\
		-relief flat -borderwidth 0 -yscrollcommand "$w.config.vscroll set" \
		-width [expr [winfo screenwidth .] * 1 / 2] 
	frame $w.config.f
	bind $w <Key-Down> "$w.config.canvas yview scroll  1 unit;break;"
	bind $w <Key-Up> "$w.config.canvas yview scroll  -1 unit;break;"
	bind $w <Key-Next> "$w.config.canvas yview scroll  1 page;break;"
	bind $w <Key-Prior> "$w.config.canvas yview scroll  -1 page;break;"
	bind $w <Key-Home> "$w.config.canvas yview moveto 0;break;"
	bind $w <Key-End> "$w.config.canvas yview moveto 1 ;break;"
	pack $w.config.canvas -side right -fill y


	dep_bool $w.config.f 31 0 "Appletalk interfaces support" CONFIG_DEV_APPLETALK
	tristate $w.config.f 31 1 "  Apple/Farallon LocalTalk PC support" CONFIG_LTPC
	tristate $w.config.f 31 2 "  COPS LocalTalk PC support" CONFIG_COPS
	bool $w.config.f 31 3 "    Dayna firmware support" CONFIG_COPS_DAYNA
	bool $w.config.f 31 4 "    Tangent firmware support" CONFIG_COPS_TANGENT
	dep_tristate $w.config.f 31 5 "  Appletalk-IP driver support" CONFIG_IPDDP
	bool $w.config.f 31 6 "    IP to Appletalk-IP Encapsulation support" CONFIG_IPDDP_ENCAP
	bool $w.config.f 31 7 "    Appletalk-IP to IP Decapsulation support" CONFIG_IPDDP_DECAP



	focus $w
	update_active
	global winx; global winy
	if {[winfo exists .menu26] == 0} then {menu26 .menu26 "Networking options"}
	set winx [expr [winfo x .menu26]+30]; set winy [expr [winfo y .menu26]+30]
	if {[winfo exists $w]} then {wm geometry $w +$winx+$winy}
	update idletasks
	if {[winfo exists $w]} then  {$w.config.canvas create window 0 0 -anchor nw -window $w.config.f

	$w.config.canvas configure \
		-width [expr [winfo reqwidth $w.config.f] + 1]\
		-scrollregion "-1 -1 [expr [winfo reqwidth $w.config.f] + 1] \
			 [expr [winfo reqheight $w.config.f] + 1]"

	set winy [expr [winfo reqh $w] - [winfo reqh $w.config.canvas]]
	set scry [expr [winfo screenh $w] / 2]
	set maxy [expr [winfo screenh $w] * 3 / 4]
	set canvtotal [expr [winfo reqh $w.config.f] + 2]
	if [expr $winy + $canvtotal < $maxy] {
		$w.config.canvas configure -height $canvtotal
	} else {
		$w.config.canvas configure -height [expr $scry - $winy]
		}
	}
	update idletasks
	if {[winfo exists $w]} then {
	wm maxsize $w [winfo width $w] [winfo screenheight $w]
	wm minsize $w [winfo width $w] 100

	wm deiconify $w
}
}

proc update_menu31 {} {
	global CONFIG_NET
	global CONFIG_ATALK
	global CONFIG_DEV_APPLETALK
	if {($CONFIG_NET == 1) && ($CONFIG_ATALK == 1 || $CONFIG_ATALK == 2 || $CONFIG_ATALK == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ATALK]];set CONFIG_DEV_APPLETALK [sync_bool $CONFIG_DEV_APPLETALK $tmpvar_dep 1];if {$tmpvar_dep != 1 && $tmpvar_dep != 2} then {configure_entry .menu31.config.f.x0 disabled {y};} else {configure_entry .menu31.config.f.x0 normal {y};}; configure_entry .menu31.config.f.x0 normal {n l}} else {configure_entry .menu31.config.f.x0 disabled {y n l}}
	global CONFIG_MODULES
	global CONFIG_ISA
	global CONFIG_EISA
	global CONFIG_LTPC
	if {($CONFIG_NET == 1) && ($CONFIG_DEV_APPLETALK == 1) && ($CONFIG_ISA == 1 || $CONFIG_EISA == 1)} then {
	configure_entry .menu31.config.f.x1 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu31.config.f.x1 normal {m}} else {configure_entry .menu31.config.f.x1 disabled {m}}; configure_entry .menu31.config.f.x1 normal {n l}} else {configure_entry .menu31.config.f.x1 disabled {y n m l}}
	global CONFIG_COPS
	if {($CONFIG_NET == 1) && ($CONFIG_DEV_APPLETALK == 1) && ($CONFIG_ISA == 1 || $CONFIG_EISA == 1)} then {
	configure_entry .menu31.config.f.x2 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu31.config.f.x2 normal {m}} else {configure_entry .menu31.config.f.x2 disabled {m}}; configure_entry .menu31.config.f.x2 normal {n l}} else {configure_entry .menu31.config.f.x2 disabled {y n m l}}
	global CONFIG_COPS_DAYNA
	if {($CONFIG_NET == 1) && ($CONFIG_DEV_APPLETALK == 1) && ($CONFIG_COPS != 0)} then {
	configure_entry .menu31.config.f.x3 normal {n l y}} else {configure_entry .menu31.config.f.x3 disabled {y n l}}
	global CONFIG_COPS_TANGENT
	if {($CONFIG_NET == 1) && ($CONFIG_DEV_APPLETALK == 1) && ($CONFIG_COPS != 0)} then {
	configure_entry .menu31.config.f.x4 normal {n l y}} else {configure_entry .menu31.config.f.x4 disabled {y n l}}
	global CONFIG_IPDDP
	if {($CONFIG_NET == 1) && ($CONFIG_DEV_APPLETALK == 1) && ($CONFIG_ATALK == 1 || $CONFIG_ATALK == 2 || $CONFIG_ATALK == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ATALK]];set CONFIG_IPDDP [sync_tristate $CONFIG_IPDDP $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu31.config.f.x5 disabled {y}} else {configure_entry .menu31.config.f.x5 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu31.config.f.x5 disabled {m}} else {configure_entry .menu31.config.f.x5 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu31.config.f.x5 normal {m}} else {configure_entry .menu31.config.f.x5 disabled {m}}; configure_entry .menu31.config.f.x5 normal {n l}} else {configure_entry .menu31.config.f.x5 disabled {y n m l}}
	global CONFIG_IPDDP_ENCAP
	if {($CONFIG_NET == 1) && ($CONFIG_DEV_APPLETALK == 1) && ($CONFIG_IPDDP != 0)} then {
	configure_entry .menu31.config.f.x6 normal {n l y}} else {configure_entry .menu31.config.f.x6 disabled {y n l}}
	global CONFIG_IPDDP_DECAP
	if {($CONFIG_NET == 1) && ($CONFIG_DEV_APPLETALK == 1) && ($CONFIG_IPDDP != 0)} then {
	configure_entry .menu31.config.f.x7 normal {n l y}} else {configure_entry .menu31.config.f.x7 disabled {y n l}}
}


proc update_define_menu31 {} {
	update_define_mainmenu
	global CONFIG_MODULES
	global CONFIG_LTPC
	global CONFIG_COPS
set CONFIG_LTPC [expr $CONFIG_LTPC|16]
set CONFIG_COPS [expr $CONFIG_COPS|16]
	global CONFIG_COPS_DAYNA
set CONFIG_COPS_DAYNA [expr $CONFIG_COPS_DAYNA|16]
	global CONFIG_COPS_TANGENT
set CONFIG_COPS_TANGENT [expr $CONFIG_COPS_TANGENT|16]
	global CONFIG_IPDDP_ENCAP
set CONFIG_IPDDP_ENCAP [expr $CONFIG_IPDDP_ENCAP|16]
	global CONFIG_IPDDP_DECAP
set CONFIG_IPDDP_DECAP [expr $CONFIG_IPDDP_DECAP|16]
	global CONFIG_NET
	global CONFIG_ATALK
	global CONFIG_DEV_APPLETALK
	if {($CONFIG_NET == 1) && ($CONFIG_ATALK == 1 || $CONFIG_ATALK == 2 || $CONFIG_ATALK == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ATALK]];set CONFIG_DEV_APPLETALK [sync_bool $CONFIG_DEV_APPLETALK $tmpvar_dep 1];set CONFIG_DEV_APPLETALK [expr $CONFIG_DEV_APPLETALK&15]}
	global CONFIG_ISA
	global CONFIG_EISA
	if {($CONFIG_NET == 1) && ($CONFIG_DEV_APPLETALK == 1) && ($CONFIG_ISA == 1 || $CONFIG_EISA == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_LTPC == 2)} then {set CONFIG_LTPC 1}; set CONFIG_LTPC [expr $CONFIG_LTPC&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_DEV_APPLETALK == 1) && ($CONFIG_ISA == 1 || $CONFIG_EISA == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_COPS == 2)} then {set CONFIG_COPS 1}; set CONFIG_COPS [expr $CONFIG_COPS&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_DEV_APPLETALK == 1) && ($CONFIG_COPS != 0)} then {
	set CONFIG_COPS_DAYNA [expr $CONFIG_COPS_DAYNA&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_DEV_APPLETALK == 1) && ($CONFIG_COPS != 0)} then {
	set CONFIG_COPS_TANGENT [expr $CONFIG_COPS_TANGENT&15]}
	global CONFIG_IPDDP
	if {($CONFIG_NET == 1) && ($CONFIG_DEV_APPLETALK == 1) && ($CONFIG_ATALK == 1 || $CONFIG_ATALK == 2 || $CONFIG_ATALK == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ATALK]]; set CONFIG_IPDDP [sync_tristate $CONFIG_IPDDP $tmpvar_dep]; set CONFIG_IPDDP [expr $CONFIG_IPDDP&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_DEV_APPLETALK == 1) && ($CONFIG_IPDDP != 0)} then {
	set CONFIG_IPDDP_ENCAP [expr $CONFIG_IPDDP_ENCAP&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_DEV_APPLETALK == 1) && ($CONFIG_IPDDP != 0)} then {
	set CONFIG_IPDDP_DECAP [expr $CONFIG_IPDDP_DECAP&15]}
}


proc menu32 {w title} {
	set oldFocus [focus]
	catch {focus .menu26}
	catch {destroy $w; unregister_active 32}
	toplevel $w -class Dialog
	wm withdraw $w
	global active_menus
	set active_menus [lsort -integer [linsert $active_menus end 32]]
	message $w.m -width 400 -aspect 300 -text \
		"QoS and/or fair queueing"  -relief raised
	pack $w.m -pady 10 -side top -padx 10
	wm title $w "QoS and/or fair queueing" 

	bind $w <Escape> "catch {focus $oldFocus}; destroy $w; unregister_active 32; break"
	set nextscript "catch {focus $oldFocus}; destroy $w; unregister_active 32; menu33 .menu33 \"$title\""
	frame $w.f
	button $w.f.back -text "OK" \
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 32"
	button $w.f.next -text "Next" -underline 0\
		-width 15 -command $nextscript
	bind all <Alt-n> $nextscript
	button $w.f.prev -text "Prev" -underline 0\
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 32; menu31 .menu31 \"$title\""
	bind $w <Alt-p> "catch {focus $oldFocus}; destroy $w; unregister_active 32; menu31 .menu31 \"$title\";break"
	pack $w.f.back $w.f.next $w.f.prev -side left -expand on
	pack $w.f -pady 10 -side bottom -anchor w -fill x
	frame $w.topline -relief ridge -borderwidth 2 -height 2
	pack $w.topline -side top -fill x

	frame $w.botline -relief ridge -borderwidth 2 -height 2
	pack $w.botline -side bottom -fill x

	frame $w.config
	pack $w.config -fill y -expand on

	scrollbar $w.config.vscroll -command "$w.config.canvas yview"
	pack $w.config.vscroll -side right -fill y

	canvas $w.config.canvas -height 1\
		-relief flat -borderwidth 0 -yscrollcommand "$w.config.vscroll set" \
		-width [expr [winfo screenwidth .] * 1 / 2] 
	frame $w.config.f
	bind $w <Key-Down> "$w.config.canvas yview scroll  1 unit;break;"
	bind $w <Key-Up> "$w.config.canvas yview scroll  -1 unit;break;"
	bind $w <Key-Next> "$w.config.canvas yview scroll  1 page;break;"
	bind $w <Key-Prior> "$w.config.canvas yview scroll  -1 page;break;"
	bind $w <Key-Home> "$w.config.canvas yview moveto 0;break;"
	bind $w <Key-End> "$w.config.canvas yview moveto 1 ;break;"
	pack $w.config.canvas -side right -fill y


	bool $w.config.f 32 0 "QoS and/or fair queueing" CONFIG_NET_SCHED
	tristate $w.config.f 32 1 "  CBQ packet scheduler" CONFIG_NET_SCH_CBQ
	tristate $w.config.f 32 2 "  HTB packet scheduler" CONFIG_NET_SCH_HTB
	tristate $w.config.f 32 3 "  CSZ packet scheduler" CONFIG_NET_SCH_CSZ
	dep_tristate $w.config.f 32 4 "  ATM pseudo-scheduler" CONFIG_NET_SCH_ATM
	tristate $w.config.f 32 5 "  The simplest PRIO pseudoscheduler" CONFIG_NET_SCH_PRIO
	tristate $w.config.f 32 6 "  RED queue" CONFIG_NET_SCH_RED
	tristate $w.config.f 32 7 "  SFQ queue" CONFIG_NET_SCH_SFQ
	tristate $w.config.f 32 8 "  TEQL queue" CONFIG_NET_SCH_TEQL
	tristate $w.config.f 32 9 "  TBF queue" CONFIG_NET_SCH_TBF
	tristate $w.config.f 32 10 "  GRED queue" CONFIG_NET_SCH_GRED
	tristate $w.config.f 32 11 "  Diffserv field marker" CONFIG_NET_SCH_DSMARK
	tristate $w.config.f 32 12 "  Ingress Qdisc" CONFIG_NET_SCH_INGRESS
	bool $w.config.f 32 13 "  QoS support" CONFIG_NET_QOS
	bool $w.config.f 32 14 "    Rate estimator" CONFIG_NET_ESTIMATOR
	bool $w.config.f 32 15 "  Packet classifier API" CONFIG_NET_CLS
	tristate $w.config.f 32 16 "    TC index classifier" CONFIG_NET_CLS_TCINDEX
	tristate $w.config.f 32 17 "    Routing table based classifier" CONFIG_NET_CLS_ROUTE4
	tristate $w.config.f 32 18 "    Firewall based classifier" CONFIG_NET_CLS_FW
	tristate $w.config.f 32 19 "    U32 classifier" CONFIG_NET_CLS_U32
	tristate $w.config.f 32 20 "    Special RSVP classifier" CONFIG_NET_CLS_RSVP
	tristate $w.config.f 32 21 "    Special RSVP classifier for IPv6" CONFIG_NET_CLS_RSVP6
	bool $w.config.f 32 22 "    Traffic policing (needed for in/egress)" CONFIG_NET_CLS_POLICE



	focus $w
	update_active
	global winx; global winy
	if {[winfo exists .menu26] == 0} then {menu26 .menu26 "Networking options"}
	set winx [expr [winfo x .menu26]+30]; set winy [expr [winfo y .menu26]+30]
	if {[winfo exists $w]} then {wm geometry $w +$winx+$winy}
	update idletasks
	if {[winfo exists $w]} then  {$w.config.canvas create window 0 0 -anchor nw -window $w.config.f

	$w.config.canvas configure \
		-width [expr [winfo reqwidth $w.config.f] + 1]\
		-scrollregion "-1 -1 [expr [winfo reqwidth $w.config.f] + 1] \
			 [expr [winfo reqheight $w.config.f] + 1]"

	set winy [expr [winfo reqh $w] - [winfo reqh $w.config.canvas]]
	set scry [expr [winfo screenh $w] / 2]
	set maxy [expr [winfo screenh $w] * 3 / 4]
	set canvtotal [expr [winfo reqh $w.config.f] + 2]
	if [expr $winy + $canvtotal < $maxy] {
		$w.config.canvas configure -height $canvtotal
	} else {
		$w.config.canvas configure -height [expr $scry - $winy]
		}
	}
	update idletasks
	if {[winfo exists $w]} then {
	wm maxsize $w [winfo width $w] [winfo screenheight $w]
	wm minsize $w [winfo width $w] 100

	wm deiconify $w
}
}

proc update_menu32 {} {
	global CONFIG_NET
	global CONFIG_NET_SCHED
	if {($CONFIG_NET == 1)} then {
	configure_entry .menu32.config.f.x0 normal {n l y}} else {configure_entry .menu32.config.f.x0 disabled {y n l}}
	global CONFIG_MODULES
	global CONFIG_NET_SCH_CBQ
	if {($CONFIG_NET == 1) && ($CONFIG_NET_SCHED == 1)} then {
	configure_entry .menu32.config.f.x1 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu32.config.f.x1 normal {m}} else {configure_entry .menu32.config.f.x1 disabled {m}}; configure_entry .menu32.config.f.x1 normal {n l}} else {configure_entry .menu32.config.f.x1 disabled {y n m l}}
	global CONFIG_NET_SCH_HTB
	if {($CONFIG_NET == 1) && ($CONFIG_NET_SCHED == 1)} then {
	configure_entry .menu32.config.f.x2 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu32.config.f.x2 normal {m}} else {configure_entry .menu32.config.f.x2 disabled {m}}; configure_entry .menu32.config.f.x2 normal {n l}} else {configure_entry .menu32.config.f.x2 disabled {y n m l}}
	global CONFIG_NET_SCH_CSZ
	if {($CONFIG_NET == 1) && ($CONFIG_NET_SCHED == 1)} then {
	configure_entry .menu32.config.f.x3 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu32.config.f.x3 normal {m}} else {configure_entry .menu32.config.f.x3 disabled {m}}; configure_entry .menu32.config.f.x3 normal {n l}} else {configure_entry .menu32.config.f.x3 disabled {y n m l}}
	global CONFIG_ATM
	global CONFIG_NET_SCH_ATM
	if {($CONFIG_NET == 1) && ($CONFIG_NET_SCHED == 1) && ($CONFIG_ATM == 1 || $CONFIG_ATM == 2) && ($CONFIG_ATM == 1 || $CONFIG_ATM == 2 || $CONFIG_ATM == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ATM]];set CONFIG_NET_SCH_ATM [sync_tristate $CONFIG_NET_SCH_ATM $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu32.config.f.x4 disabled {y}} else {configure_entry .menu32.config.f.x4 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu32.config.f.x4 disabled {m}} else {configure_entry .menu32.config.f.x4 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu32.config.f.x4 normal {m}} else {configure_entry .menu32.config.f.x4 disabled {m}}; configure_entry .menu32.config.f.x4 normal {n l}} else {configure_entry .menu32.config.f.x4 disabled {y n m l}}
	global CONFIG_NET_SCH_PRIO
	if {($CONFIG_NET == 1) && ($CONFIG_NET_SCHED == 1)} then {
	configure_entry .menu32.config.f.x5 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu32.config.f.x5 normal {m}} else {configure_entry .menu32.config.f.x5 disabled {m}}; configure_entry .menu32.config.f.x5 normal {n l}} else {configure_entry .menu32.config.f.x5 disabled {y n m l}}
	global CONFIG_NET_SCH_RED
	if {($CONFIG_NET == 1) && ($CONFIG_NET_SCHED == 1)} then {
	configure_entry .menu32.config.f.x6 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu32.config.f.x6 normal {m}} else {configure_entry .menu32.config.f.x6 disabled {m}}; configure_entry .menu32.config.f.x6 normal {n l}} else {configure_entry .menu32.config.f.x6 disabled {y n m l}}
	global CONFIG_NET_SCH_SFQ
	if {($CONFIG_NET == 1) && ($CONFIG_NET_SCHED == 1)} then {
	configure_entry .menu32.config.f.x7 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu32.config.f.x7 normal {m}} else {configure_entry .menu32.config.f.x7 disabled {m}}; configure_entry .menu32.config.f.x7 normal {n l}} else {configure_entry .menu32.config.f.x7 disabled {y n m l}}
	global CONFIG_NET_SCH_TEQL
	if {($CONFIG_NET == 1) && ($CONFIG_NET_SCHED == 1)} then {
	configure_entry .menu32.config.f.x8 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu32.config.f.x8 normal {m}} else {configure_entry .menu32.config.f.x8 disabled {m}}; configure_entry .menu32.config.f.x8 normal {n l}} else {configure_entry .menu32.config.f.x8 disabled {y n m l}}
	global CONFIG_NET_SCH_TBF
	if {($CONFIG_NET == 1) && ($CONFIG_NET_SCHED == 1)} then {
	configure_entry .menu32.config.f.x9 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu32.config.f.x9 normal {m}} else {configure_entry .menu32.config.f.x9 disabled {m}}; configure_entry .menu32.config.f.x9 normal {n l}} else {configure_entry .menu32.config.f.x9 disabled {y n m l}}
	global CONFIG_NET_SCH_GRED
	if {($CONFIG_NET == 1) && ($CONFIG_NET_SCHED == 1)} then {
	configure_entry .menu32.config.f.x10 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu32.config.f.x10 normal {m}} else {configure_entry .menu32.config.f.x10 disabled {m}}; configure_entry .menu32.config.f.x10 normal {n l}} else {configure_entry .menu32.config.f.x10 disabled {y n m l}}
	global CONFIG_NET_SCH_DSMARK
	if {($CONFIG_NET == 1) && ($CONFIG_NET_SCHED == 1)} then {
	configure_entry .menu32.config.f.x11 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu32.config.f.x11 normal {m}} else {configure_entry .menu32.config.f.x11 disabled {m}}; configure_entry .menu32.config.f.x11 normal {n l}} else {configure_entry .menu32.config.f.x11 disabled {y n m l}}
	global CONFIG_NETFILTER
	global CONFIG_NET_SCH_INGRESS
	if {($CONFIG_NET == 1) && ($CONFIG_NET_SCHED == 1) && ($CONFIG_NETFILTER == 1)} then {
	configure_entry .menu32.config.f.x12 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu32.config.f.x12 normal {m}} else {configure_entry .menu32.config.f.x12 disabled {m}}; configure_entry .menu32.config.f.x12 normal {n l}} else {configure_entry .menu32.config.f.x12 disabled {y n m l}}
	global CONFIG_NET_QOS
	if {($CONFIG_NET == 1) && ($CONFIG_NET_SCHED == 1)} then {
	configure_entry .menu32.config.f.x13 normal {n l y}} else {configure_entry .menu32.config.f.x13 disabled {y n l}}
	global CONFIG_NET_ESTIMATOR
	if {($CONFIG_NET == 1) && ($CONFIG_NET_SCHED == 1) && ($CONFIG_NET_QOS == 1)} then {
	configure_entry .menu32.config.f.x14 normal {n l y}} else {configure_entry .menu32.config.f.x14 disabled {y n l}}
	global CONFIG_NET_CLS
	if {($CONFIG_NET == 1) && ($CONFIG_NET_SCHED == 1)} then {
	configure_entry .menu32.config.f.x15 normal {n l y}} else {configure_entry .menu32.config.f.x15 disabled {y n l}}
	global CONFIG_NET_CLS_TCINDEX
	if {($CONFIG_NET == 1) && ($CONFIG_NET_SCHED == 1) && ($CONFIG_NET_CLS == 1)} then {
	configure_entry .menu32.config.f.x16 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu32.config.f.x16 normal {m}} else {configure_entry .menu32.config.f.x16 disabled {m}}; configure_entry .menu32.config.f.x16 normal {n l}} else {configure_entry .menu32.config.f.x16 disabled {y n m l}}
	global CONFIG_NET_CLS_ROUTE4
	if {($CONFIG_NET == 1) && ($CONFIG_NET_SCHED == 1) && ($CONFIG_NET_CLS == 1)} then {
	configure_entry .menu32.config.f.x17 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu32.config.f.x17 normal {m}} else {configure_entry .menu32.config.f.x17 disabled {m}}; configure_entry .menu32.config.f.x17 normal {n l}} else {configure_entry .menu32.config.f.x17 disabled {y n m l}}
	global CONFIG_NET_CLS_FW
	if {($CONFIG_NET == 1) && ($CONFIG_NET_SCHED == 1) && ($CONFIG_NET_CLS == 1)} then {
	configure_entry .menu32.config.f.x18 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu32.config.f.x18 normal {m}} else {configure_entry .menu32.config.f.x18 disabled {m}}; configure_entry .menu32.config.f.x18 normal {n l}} else {configure_entry .menu32.config.f.x18 disabled {y n m l}}
	global CONFIG_NET_CLS_U32
	if {($CONFIG_NET == 1) && ($CONFIG_NET_SCHED == 1) && ($CONFIG_NET_CLS == 1)} then {
	configure_entry .menu32.config.f.x19 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu32.config.f.x19 normal {m}} else {configure_entry .menu32.config.f.x19 disabled {m}}; configure_entry .menu32.config.f.x19 normal {n l}} else {configure_entry .menu32.config.f.x19 disabled {y n m l}}
	global CONFIG_NET_CLS_RSVP
	if {($CONFIG_NET == 1) && ($CONFIG_NET_SCHED == 1) && ($CONFIG_NET_CLS == 1) && ($CONFIG_NET_QOS == 1)} then {
	configure_entry .menu32.config.f.x20 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu32.config.f.x20 normal {m}} else {configure_entry .menu32.config.f.x20 disabled {m}}; configure_entry .menu32.config.f.x20 normal {n l}} else {configure_entry .menu32.config.f.x20 disabled {y n m l}}
	global CONFIG_NET_CLS_RSVP6
	if {($CONFIG_NET == 1) && ($CONFIG_NET_SCHED == 1) && ($CONFIG_NET_CLS == 1) && ($CONFIG_NET_QOS == 1)} then {
	configure_entry .menu32.config.f.x21 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu32.config.f.x21 normal {m}} else {configure_entry .menu32.config.f.x21 disabled {m}}; configure_entry .menu32.config.f.x21 normal {n l}} else {configure_entry .menu32.config.f.x21 disabled {y n m l}}
	global CONFIG_NET_CLS_POLICE
	if {($CONFIG_NET == 1) && ($CONFIG_NET_SCHED == 1) && ($CONFIG_NET_CLS == 1) && ($CONFIG_NET_QOS == 1)} then {
	configure_entry .menu32.config.f.x22 normal {n l y}} else {configure_entry .menu32.config.f.x22 disabled {y n l}}
}


proc update_define_menu32 {} {
	update_define_mainmenu
	global CONFIG_MODULES
	global CONFIG_NET_SCH_CBQ
	global CONFIG_NET_SCH_HTB
	global CONFIG_NET_SCH_CSZ
	global CONFIG_NET_SCH_PRIO
	global CONFIG_NET_SCH_RED
	global CONFIG_NET_SCH_SFQ
	global CONFIG_NET_SCH_TEQL
	global CONFIG_NET_SCH_TBF
	global CONFIG_NET_SCH_GRED
	global CONFIG_NET_SCH_DSMARK
	global CONFIG_NET_SCH_INGRESS
	global CONFIG_NET_CLS_TCINDEX
	global CONFIG_NET_CLS_ROUTE4
	global CONFIG_NET_CLS_ROUTE
	global CONFIG_NET_CLS_FW
	global CONFIG_NET_CLS_U32
	global CONFIG_NET_CLS_RSVP
	global CONFIG_NET_CLS_RSVP6
	global CONFIG_NET_SCHED
set CONFIG_NET_SCHED [expr $CONFIG_NET_SCHED|16]
set CONFIG_NET_SCH_CBQ [expr $CONFIG_NET_SCH_CBQ|16]
set CONFIG_NET_SCH_HTB [expr $CONFIG_NET_SCH_HTB|16]
set CONFIG_NET_SCH_CSZ [expr $CONFIG_NET_SCH_CSZ|16]
set CONFIG_NET_SCH_PRIO [expr $CONFIG_NET_SCH_PRIO|16]
set CONFIG_NET_SCH_RED [expr $CONFIG_NET_SCH_RED|16]
set CONFIG_NET_SCH_SFQ [expr $CONFIG_NET_SCH_SFQ|16]
set CONFIG_NET_SCH_TEQL [expr $CONFIG_NET_SCH_TEQL|16]
set CONFIG_NET_SCH_TBF [expr $CONFIG_NET_SCH_TBF|16]
set CONFIG_NET_SCH_GRED [expr $CONFIG_NET_SCH_GRED|16]
set CONFIG_NET_SCH_DSMARK [expr $CONFIG_NET_SCH_DSMARK|16]
set CONFIG_NET_SCH_INGRESS [expr $CONFIG_NET_SCH_INGRESS|16]
	global CONFIG_NET_QOS
set CONFIG_NET_QOS [expr $CONFIG_NET_QOS|16]
	global CONFIG_NET_ESTIMATOR
set CONFIG_NET_ESTIMATOR [expr $CONFIG_NET_ESTIMATOR|16]
	global CONFIG_NET_CLS
set CONFIG_NET_CLS [expr $CONFIG_NET_CLS|16]
set CONFIG_NET_CLS_TCINDEX [expr $CONFIG_NET_CLS_TCINDEX|16]
set CONFIG_NET_CLS_ROUTE4 [expr $CONFIG_NET_CLS_ROUTE4|16]
set CONFIG_NET_CLS_FW [expr $CONFIG_NET_CLS_FW|16]
set CONFIG_NET_CLS_U32 [expr $CONFIG_NET_CLS_U32|16]
set CONFIG_NET_CLS_RSVP [expr $CONFIG_NET_CLS_RSVP|16]
set CONFIG_NET_CLS_RSVP6 [expr $CONFIG_NET_CLS_RSVP6|16]
	global CONFIG_NET_CLS_POLICE
set CONFIG_NET_CLS_POLICE [expr $CONFIG_NET_CLS_POLICE|16]
	global CONFIG_NET
	if {($CONFIG_NET == 1)} then {
	set CONFIG_NET_SCHED [expr $CONFIG_NET_SCHED&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_NET_SCHED == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_NET_SCH_CBQ == 2)} then {set CONFIG_NET_SCH_CBQ 1}; set CONFIG_NET_SCH_CBQ [expr $CONFIG_NET_SCH_CBQ&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_NET_SCHED == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_NET_SCH_HTB == 2)} then {set CONFIG_NET_SCH_HTB 1}; set CONFIG_NET_SCH_HTB [expr $CONFIG_NET_SCH_HTB&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_NET_SCHED == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_NET_SCH_CSZ == 2)} then {set CONFIG_NET_SCH_CSZ 1}; set CONFIG_NET_SCH_CSZ [expr $CONFIG_NET_SCH_CSZ&15]}
	global CONFIG_ATM
	global CONFIG_NET_SCH_ATM
	if {($CONFIG_NET == 1) && ($CONFIG_NET_SCHED == 1) && ($CONFIG_ATM == 1 || $CONFIG_ATM == 2) && ($CONFIG_ATM == 1 || $CONFIG_ATM == 2 || $CONFIG_ATM == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ATM]]; set CONFIG_NET_SCH_ATM [sync_tristate $CONFIG_NET_SCH_ATM $tmpvar_dep]; set CONFIG_NET_SCH_ATM [expr $CONFIG_NET_SCH_ATM&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_NET_SCHED == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_NET_SCH_PRIO == 2)} then {set CONFIG_NET_SCH_PRIO 1}; set CONFIG_NET_SCH_PRIO [expr $CONFIG_NET_SCH_PRIO&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_NET_SCHED == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_NET_SCH_RED == 2)} then {set CONFIG_NET_SCH_RED 1}; set CONFIG_NET_SCH_RED [expr $CONFIG_NET_SCH_RED&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_NET_SCHED == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_NET_SCH_SFQ == 2)} then {set CONFIG_NET_SCH_SFQ 1}; set CONFIG_NET_SCH_SFQ [expr $CONFIG_NET_SCH_SFQ&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_NET_SCHED == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_NET_SCH_TEQL == 2)} then {set CONFIG_NET_SCH_TEQL 1}; set CONFIG_NET_SCH_TEQL [expr $CONFIG_NET_SCH_TEQL&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_NET_SCHED == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_NET_SCH_TBF == 2)} then {set CONFIG_NET_SCH_TBF 1}; set CONFIG_NET_SCH_TBF [expr $CONFIG_NET_SCH_TBF&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_NET_SCHED == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_NET_SCH_GRED == 2)} then {set CONFIG_NET_SCH_GRED 1}; set CONFIG_NET_SCH_GRED [expr $CONFIG_NET_SCH_GRED&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_NET_SCHED == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_NET_SCH_DSMARK == 2)} then {set CONFIG_NET_SCH_DSMARK 1}; set CONFIG_NET_SCH_DSMARK [expr $CONFIG_NET_SCH_DSMARK&15]}
	global CONFIG_NETFILTER
	if {($CONFIG_NET == 1) && ($CONFIG_NET_SCHED == 1) && ($CONFIG_NETFILTER == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_NET_SCH_INGRESS == 2)} then {set CONFIG_NET_SCH_INGRESS 1}; set CONFIG_NET_SCH_INGRESS [expr $CONFIG_NET_SCH_INGRESS&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_NET_SCHED == 1)} then {
	set CONFIG_NET_QOS [expr $CONFIG_NET_QOS&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_NET_SCHED == 1) && ($CONFIG_NET_QOS == 1)} then {
	set CONFIG_NET_ESTIMATOR [expr $CONFIG_NET_ESTIMATOR&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_NET_SCHED == 1)} then {
	set CONFIG_NET_CLS [expr $CONFIG_NET_CLS&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_NET_SCHED == 1) && ($CONFIG_NET_CLS == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_NET_CLS_TCINDEX == 2)} then {set CONFIG_NET_CLS_TCINDEX 1}; set CONFIG_NET_CLS_TCINDEX [expr $CONFIG_NET_CLS_TCINDEX&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_NET_SCHED == 1) && ($CONFIG_NET_CLS == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_NET_CLS_ROUTE4 == 2)} then {set CONFIG_NET_CLS_ROUTE4 1}; set CONFIG_NET_CLS_ROUTE4 [expr $CONFIG_NET_CLS_ROUTE4&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_NET_SCHED == 1) && ($CONFIG_NET_CLS == 1) && ($CONFIG_NET_CLS_ROUTE4 != 0)} then {	global CONSTANT_Y
set CONFIG_NET_CLS_ROUTE $CONSTANT_Y }
	if {($CONFIG_NET == 1) && ($CONFIG_NET_SCHED == 1) && ($CONFIG_NET_CLS == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_NET_CLS_FW == 2)} then {set CONFIG_NET_CLS_FW 1}; set CONFIG_NET_CLS_FW [expr $CONFIG_NET_CLS_FW&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_NET_SCHED == 1) && ($CONFIG_NET_CLS == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_NET_CLS_U32 == 2)} then {set CONFIG_NET_CLS_U32 1}; set CONFIG_NET_CLS_U32 [expr $CONFIG_NET_CLS_U32&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_NET_SCHED == 1) && ($CONFIG_NET_CLS == 1) && ($CONFIG_NET_QOS == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_NET_CLS_RSVP == 2)} then {set CONFIG_NET_CLS_RSVP 1}; set CONFIG_NET_CLS_RSVP [expr $CONFIG_NET_CLS_RSVP&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_NET_SCHED == 1) && ($CONFIG_NET_CLS == 1) && ($CONFIG_NET_QOS == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_NET_CLS_RSVP6 == 2)} then {set CONFIG_NET_CLS_RSVP6 1}; set CONFIG_NET_CLS_RSVP6 [expr $CONFIG_NET_CLS_RSVP6&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_NET_SCHED == 1) && ($CONFIG_NET_CLS == 1) && ($CONFIG_NET_QOS == 1)} then {
	set CONFIG_NET_CLS_POLICE [expr $CONFIG_NET_CLS_POLICE&15]}
}


proc menu33 {w title} {
	set oldFocus [focus]
	catch {focus .menu26}
	catch {destroy $w; unregister_active 33}
	toplevel $w -class Dialog
	wm withdraw $w
	global active_menus
	set active_menus [lsort -integer [linsert $active_menus end 33]]
	message $w.m -width 400 -aspect 300 -text \
		"Network testing"  -relief raised
	pack $w.m -pady 10 -side top -padx 10
	wm title $w "Network testing" 

	bind $w <Escape> "catch {focus $oldFocus}; destroy $w; unregister_active 33; break"
	set nextscript "catch {focus $oldFocus}; destroy $w; unregister_active 33; catch {destroy .menu26}; unregister_active 26; menu34 .menu34 \"$title\""
	frame $w.f
	button $w.f.back -text "OK" \
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 33"
	button $w.f.next -text "Next" -underline 0\
		-width 15 -command $nextscript
	bind all <Alt-n> $nextscript
	button $w.f.prev -text "Prev" -underline 0\
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 33; menu32 .menu32 \"$title\""
	bind $w <Alt-p> "catch {focus $oldFocus}; destroy $w; unregister_active 33; menu32 .menu32 \"$title\";break"
	pack $w.f.back $w.f.next $w.f.prev -side left -expand on
	pack $w.f -pady 10 -side bottom -anchor w -fill x
	frame $w.topline -relief ridge -borderwidth 2 -height 2
	pack $w.topline -side top -fill x

	frame $w.botline -relief ridge -borderwidth 2 -height 2
	pack $w.botline -side bottom -fill x

	frame $w.config
	pack $w.config -fill y -expand on

	scrollbar $w.config.vscroll -command "$w.config.canvas yview"
	pack $w.config.vscroll -side right -fill y

	canvas $w.config.canvas -height 1\
		-relief flat -borderwidth 0 -yscrollcommand "$w.config.vscroll set" \
		-width [expr [winfo screenwidth .] * 1 / 2] 
	frame $w.config.f
	bind $w <Key-Down> "$w.config.canvas yview scroll  1 unit;break;"
	bind $w <Key-Up> "$w.config.canvas yview scroll  -1 unit;break;"
	bind $w <Key-Next> "$w.config.canvas yview scroll  1 page;break;"
	bind $w <Key-Prior> "$w.config.canvas yview scroll  -1 page;break;"
	bind $w <Key-Home> "$w.config.canvas yview moveto 0;break;"
	bind $w <Key-End> "$w.config.canvas yview moveto 1 ;break;"
	pack $w.config.canvas -side right -fill y


	tristate $w.config.f 33 0 "Packet Generator (USE WITH CAUTION)" CONFIG_NET_PKTGEN



	focus $w
	update_active
	global winx; global winy
	if {[winfo exists .menu26] == 0} then {menu26 .menu26 "Networking options"}
	set winx [expr [winfo x .menu26]+30]; set winy [expr [winfo y .menu26]+30]
	if {[winfo exists $w]} then {wm geometry $w +$winx+$winy}
	update idletasks
	if {[winfo exists $w]} then  {$w.config.canvas create window 0 0 -anchor nw -window $w.config.f

	$w.config.canvas configure \
		-width [expr [winfo reqwidth $w.config.f] + 1]\
		-scrollregion "-1 -1 [expr [winfo reqwidth $w.config.f] + 1] \
			 [expr [winfo reqheight $w.config.f] + 1]"

	set winy [expr [winfo reqh $w] - [winfo reqh $w.config.canvas]]
	set scry [expr [winfo screenh $w] / 2]
	set maxy [expr [winfo screenh $w] * 3 / 4]
	set canvtotal [expr [winfo reqh $w.config.f] + 2]
	if [expr $winy + $canvtotal < $maxy] {
		$w.config.canvas configure -height $canvtotal
	} else {
		$w.config.canvas configure -height [expr $scry - $winy]
		}
	}
	update idletasks
	if {[winfo exists $w]} then {
	wm maxsize $w [winfo width $w] [winfo screenheight $w]
	wm minsize $w [winfo width $w] 100

	wm deiconify $w
}
}

proc update_menu33 {} {
	global CONFIG_MODULES
	global CONFIG_NET
	global CONFIG_NET_PKTGEN
	if {($CONFIG_NET == 1)} then {
	configure_entry .menu33.config.f.x0 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu33.config.f.x0 normal {m}} else {configure_entry .menu33.config.f.x0 disabled {m}}; configure_entry .menu33.config.f.x0 normal {n l}} else {configure_entry .menu33.config.f.x0 disabled {y n m l}}
}


proc update_define_menu33 {} {
	update_define_mainmenu
	global CONFIG_MODULES
	global CONFIG_NET_PKTGEN
set CONFIG_NET_PKTGEN [expr $CONFIG_NET_PKTGEN|16]
	global CONFIG_NET
	if {($CONFIG_NET == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_NET_PKTGEN == 2)} then {set CONFIG_NET_PKTGEN 1}; set CONFIG_NET_PKTGEN [expr $CONFIG_NET_PKTGEN&15]}
}


menu_option menu34 34 "Network device support"
proc menu34 {w title} {
	set oldFocus [focus]
	catch {destroy $w; unregister_active 34}
	toplevel $w -class Dialog
	wm withdraw $w
	global active_menus
	set active_menus [lsort -integer [linsert $active_menus end 34]]
	message $w.m -width 400 -aspect 300 -text \
		"Network device support"  -relief raised
	pack $w.m -pady 10 -side top -padx 10
	wm title $w "Network device support" 

	bind $w <Escape> "catch {focus $oldFocus}; destroy $w; unregister_active 34; break"
	set nextscript "catch {focus $oldFocus}; menu35 .menu35 \"$title\""
	frame $w.f
	button $w.f.back -text "Main Menu" \
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 34"
	button $w.f.next -text "Next" -underline 0\
		-width 15 -command $nextscript
	bind all <Alt-n> $nextscript
	button $w.f.prev -text "Prev" -underline 0\
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 34; menu33 .menu33 \"$title\""
	bind $w <Alt-p> "catch {focus $oldFocus}; destroy $w; unregister_active 34; menu33 .menu33 \"$title\";break"
	pack $w.f.back $w.f.next $w.f.prev -side left -expand on
	pack $w.f -pady 10 -side bottom -anchor w -fill x
	frame $w.topline -relief ridge -borderwidth 2 -height 2
	pack $w.topline -side top -fill x

	frame $w.botline -relief ridge -borderwidth 2 -height 2
	pack $w.botline -side bottom -fill x

	frame $w.config
	pack $w.config -fill y -expand on

	scrollbar $w.config.vscroll -command "$w.config.canvas yview"
	pack $w.config.vscroll -side right -fill y

	canvas $w.config.canvas -height 1\
		-relief flat -borderwidth 0 -yscrollcommand "$w.config.vscroll set" \
		-width [expr [winfo screenwidth .] * 1 / 2] 
	frame $w.config.f
	bind $w <Key-Down> "$w.config.canvas yview scroll  1 unit;break;"
	bind $w <Key-Up> "$w.config.canvas yview scroll  -1 unit;break;"
	bind $w <Key-Next> "$w.config.canvas yview scroll  1 page;break;"
	bind $w <Key-Prior> "$w.config.canvas yview scroll  -1 page;break;"
	bind $w <Key-Home> "$w.config.canvas yview moveto 0;break;"
	bind $w <Key-End> "$w.config.canvas yview moveto 1 ;break;"
	pack $w.config.canvas -side right -fill y


	bool $w.config.f 34 0 "Network device support" CONFIG_NETDEVICES
	submenu $w.config.f 34 1 "ARCnet devices" 35
	tristate $w.config.f 34 2 "Dummy net driver support" CONFIG_DUMMY
	tristate $w.config.f 34 3 "Bonding driver support" CONFIG_BONDING
	tristate $w.config.f 34 4 "EQL (serial line load balancing) support" CONFIG_EQUALIZER
	tristate $w.config.f 34 5 "Universal TUN/TAP device driver support" CONFIG_TUN
	tristate $w.config.f 34 6 "Ethertap network tap (OBSOLETE)" CONFIG_ETHERTAP
	dep_tristate $w.config.f 34 7 "General Instruments Surfboard 1000" CONFIG_NET_SB1000
	submenu $w.config.f 34 8 "Ethernet (10 or 100Mbit)" 36
	submenu $w.config.f 34 9 "Ethernet (1000 Mbit)" 37
	bool $w.config.f 34 10 "FDDI driver support" CONFIG_FDDI
	tristate $w.config.f 34 11 "  Digital DEFEA and DEFPA adapter support" CONFIG_DEFXX
	dep_tristate $w.config.f 34 12 "  SysKonnect FDDI PCI support" CONFIG_SKFP
	bool $w.config.f 34 13 "HIPPI driver support (EXPERIMENTAL)" CONFIG_HIPPI
	dep_tristate $w.config.f 34 14 "  Essential RoadRunner HIPPI PCI adapter support (EXPERIMENTAL)" CONFIG_ROADRUNNER
	bool $w.config.f 34 15 "    Use large TX/RX rings (EXPERIMENTAL)" CONFIG_ROADRUNNER_LARGE_RINGS
	dep_tristate $w.config.f 34 16 "PLIP (parallel port) support" CONFIG_PLIP
	tristate $w.config.f 34 17 "PPP (point-to-point protocol) support" CONFIG_PPP
	dep_bool $w.config.f 34 18 "  PPP multilink support (EXPERIMENTAL)" CONFIG_PPP_MULTILINK
	dep_bool $w.config.f 34 19 "  PPP filtering" CONFIG_PPP_FILTER
	dep_tristate $w.config.f 34 20 "  PPP support for async serial ports" CONFIG_PPP_ASYNC
	dep_tristate $w.config.f 34 21 "  PPP support for sync tty ports" CONFIG_PPP_SYNC_TTY
	dep_tristate $w.config.f 34 22 "  PPP Deflate compression" CONFIG_PPP_DEFLATE
	dep_tristate $w.config.f 34 23 "  PPP BSD-Compress compression" CONFIG_PPP_BSDCOMP
	dep_tristate $w.config.f 34 24 "  PPP over Ethernet (EXPERIMENTAL)" CONFIG_PPPOE
	dep_tristate $w.config.f 34 25 "  PPP over ATM (EXPERIMENTAL)" CONFIG_PPPOATM
	tristate $w.config.f 34 26 "SLIP (serial line) support" CONFIG_SLIP
	bool $w.config.f 34 27 "  CSLIP compressed headers" CONFIG_SLIP_COMPRESSED
	bool $w.config.f 34 28 "  Keepalive and linefill" CONFIG_SLIP_SMART
	bool $w.config.f 34 29 "  Six bit SLIP encapsulation" CONFIG_SLIP_MODE_SLIP6
	submenu $w.config.f 34 30 "Wireless LAN (non-hamradio)" 38
	submenu $w.config.f 34 31 "Token Ring devices" 39
	bool $w.config.f 34 32 "Fibre Channel driver support" CONFIG_NET_FC
	dep_tristate $w.config.f 34 33 "  Interphase 5526 Tachyon chipset based adapter support" CONFIG_IPHASE5526
	dep_tristate $w.config.f 34 34 "Red Creek Hardware VPN (EXPERIMENTAL)" CONFIG_RCPCI
	tristate $w.config.f 34 35 "Traffic Shaper (EXPERIMENTAL)" CONFIG_SHAPER
	submenu $w.config.f 34 36 "Wan interfaces" 40
	submenu $w.config.f 34 37 "PCMCIA network device support" 41



	focus $w
	update_active
	global winx; global winy
	set winx [expr [winfo x .]+30]; set winy [expr [winfo y .]+30]
	if {[winfo exists $w]} then {wm geometry $w +$winx+$winy}
	update idletasks
	if {[winfo exists $w]} then  {$w.config.canvas create window 0 0 -anchor nw -window $w.config.f

	$w.config.canvas configure \
		-width [expr [winfo reqwidth $w.config.f] + 1]\
		-scrollregion "-1 -1 [expr [winfo reqwidth $w.config.f] + 1] \
			 [expr [winfo reqheight $w.config.f] + 1]"

	set winy [expr [winfo reqh $w] - [winfo reqh $w.config.canvas]]
	set scry [expr [winfo screenh $w] / 2]
	set maxy [expr [winfo screenh $w] * 3 / 4]
	set canvtotal [expr [winfo reqh $w.config.f] + 2]
	if [expr $winy + $canvtotal < $maxy] {
		$w.config.canvas configure -height $canvtotal
	} else {
		$w.config.canvas configure -height [expr $scry - $winy]
		}
	}
	update idletasks
	if {[winfo exists $w]} then {
	wm maxsize $w [winfo width $w] [winfo screenheight $w]
	wm minsize $w [winfo width $w] 100

	wm deiconify $w
}
}

proc update_menu34 {} {
	global CONFIG_NET
	global CONFIG_NETDEVICES
	if {($CONFIG_NET == 1)} then {
	configure_entry .menu34.config.f.x0 normal {n l y}} else {configure_entry .menu34.config.f.x0 disabled {y n l}}
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1)} then {configure_entry .menu34.config.f.x1 normal {m}} else {configure_entry .menu34.config.f.x1 disabled {m}}
	global CONFIG_MODULES
	global CONFIG_DUMMY
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1)} then {
	configure_entry .menu34.config.f.x2 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu34.config.f.x2 normal {m}} else {configure_entry .menu34.config.f.x2 disabled {m}}; configure_entry .menu34.config.f.x2 normal {n l}} else {configure_entry .menu34.config.f.x2 disabled {y n m l}}
	global CONFIG_BONDING
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1)} then {
	configure_entry .menu34.config.f.x3 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu34.config.f.x3 normal {m}} else {configure_entry .menu34.config.f.x3 disabled {m}}; configure_entry .menu34.config.f.x3 normal {n l}} else {configure_entry .menu34.config.f.x3 disabled {y n m l}}
	global CONFIG_EQUALIZER
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1)} then {
	configure_entry .menu34.config.f.x4 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu34.config.f.x4 normal {m}} else {configure_entry .menu34.config.f.x4 disabled {m}}; configure_entry .menu34.config.f.x4 normal {n l}} else {configure_entry .menu34.config.f.x4 disabled {y n m l}}
	global CONFIG_TUN
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1)} then {
	configure_entry .menu34.config.f.x5 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu34.config.f.x5 normal {m}} else {configure_entry .menu34.config.f.x5 disabled {m}}; configure_entry .menu34.config.f.x5 normal {n l}} else {configure_entry .menu34.config.f.x5 disabled {y n m l}}
	global CONFIG_EXPERIMENTAL
	global CONFIG_ETHERTAP
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_EXPERIMENTAL == 1)} then {
	configure_entry .menu34.config.f.x6 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu34.config.f.x6 normal {m}} else {configure_entry .menu34.config.f.x6 disabled {m}}; configure_entry .menu34.config.f.x6 normal {n l}} else {configure_entry .menu34.config.f.x6 disabled {y n m l}}
	global CONFIG_ISAPNP
	global CONFIG_NET_SB1000
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_ISAPNP == 1 || $CONFIG_ISAPNP == 2) && ($CONFIG_ISAPNP == 1 || $CONFIG_ISAPNP == 2 || $CONFIG_ISAPNP == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ISAPNP]];set CONFIG_NET_SB1000 [sync_tristate $CONFIG_NET_SB1000 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu34.config.f.x7 disabled {y}} else {configure_entry .menu34.config.f.x7 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu34.config.f.x7 disabled {m}} else {configure_entry .menu34.config.f.x7 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu34.config.f.x7 normal {m}} else {configure_entry .menu34.config.f.x7 disabled {m}}; configure_entry .menu34.config.f.x7 normal {n l}} else {configure_entry .menu34.config.f.x7 disabled {y n m l}}
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1)} then {configure_entry .menu34.config.f.x8 normal {m}} else {configure_entry .menu34.config.f.x8 disabled {m}}
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1)} then {configure_entry .menu34.config.f.x9 normal {m}} else {configure_entry .menu34.config.f.x9 disabled {m}}
	global CONFIG_FDDI
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1)} then {
	configure_entry .menu34.config.f.x10 normal {n l y}} else {configure_entry .menu34.config.f.x10 disabled {y n l}}
	global CONFIG_PCI
	global CONFIG_EISA
	global CONFIG_DEFXX
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_FDDI == 1) && ($CONFIG_PCI == 1 || $CONFIG_EISA == 1)} then {
	configure_entry .menu34.config.f.x11 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu34.config.f.x11 normal {m}} else {configure_entry .menu34.config.f.x11 disabled {m}}; configure_entry .menu34.config.f.x11 normal {n l}} else {configure_entry .menu34.config.f.x11 disabled {y n m l}}
	global CONFIG_SKFP
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_FDDI == 1) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PCI]];set CONFIG_SKFP [sync_tristate $CONFIG_SKFP $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu34.config.f.x12 disabled {y}} else {configure_entry .menu34.config.f.x12 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu34.config.f.x12 disabled {m}} else {configure_entry .menu34.config.f.x12 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu34.config.f.x12 normal {m}} else {configure_entry .menu34.config.f.x12 disabled {m}}; configure_entry .menu34.config.f.x12 normal {n l}} else {configure_entry .menu34.config.f.x12 disabled {y n m l}}
	global CONFIG_INET
	global CONFIG_HIPPI
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_INET == 1)} then {
	configure_entry .menu34.config.f.x13 normal {n l y}} else {configure_entry .menu34.config.f.x13 disabled {y n l}}
	global CONFIG_ROADRUNNER
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_INET == 1) && ($CONFIG_HIPPI == 1 && $CONFIG_PCI == 1) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PCI]];set CONFIG_ROADRUNNER [sync_tristate $CONFIG_ROADRUNNER $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu34.config.f.x14 disabled {y}} else {configure_entry .menu34.config.f.x14 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu34.config.f.x14 disabled {m}} else {configure_entry .menu34.config.f.x14 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu34.config.f.x14 normal {m}} else {configure_entry .menu34.config.f.x14 disabled {m}}; configure_entry .menu34.config.f.x14 normal {n l}} else {configure_entry .menu34.config.f.x14 disabled {y n m l}}
	global CONFIG_ROADRUNNER_LARGE_RINGS
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_INET == 1) && ($CONFIG_HIPPI == 1 && $CONFIG_PCI == 1) && ($CONFIG_ROADRUNNER != 0)} then {
	configure_entry .menu34.config.f.x15 normal {n l y}} else {configure_entry .menu34.config.f.x15 disabled {y n l}}
	global CONFIG_PARPORT
	global CONFIG_PLIP
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_PARPORT == 1 || $CONFIG_PARPORT == 2 || $CONFIG_PARPORT == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PARPORT]];set CONFIG_PLIP [sync_tristate $CONFIG_PLIP $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu34.config.f.x16 disabled {y}} else {configure_entry .menu34.config.f.x16 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu34.config.f.x16 disabled {m}} else {configure_entry .menu34.config.f.x16 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu34.config.f.x16 normal {m}} else {configure_entry .menu34.config.f.x16 disabled {m}}; configure_entry .menu34.config.f.x16 normal {n l}} else {configure_entry .menu34.config.f.x16 disabled {y n m l}}
	global CONFIG_PPP
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1)} then {
	configure_entry .menu34.config.f.x17 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu34.config.f.x17 normal {m}} else {configure_entry .menu34.config.f.x17 disabled {m}}; configure_entry .menu34.config.f.x17 normal {n l}} else {configure_entry .menu34.config.f.x17 disabled {y n m l}}
	global CONFIG_PPP_MULTILINK
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_PPP != 0) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_EXPERIMENTAL]];set CONFIG_PPP_MULTILINK [sync_bool $CONFIG_PPP_MULTILINK $tmpvar_dep 0];if {$tmpvar_dep != 1} then {configure_entry .menu34.config.f.x18 disabled {y};} else {configure_entry .menu34.config.f.x18 normal {y};}; configure_entry .menu34.config.f.x18 normal {n l}} else {configure_entry .menu34.config.f.x18 disabled {y n l}}
	global CONFIG_FILTER
	global CONFIG_PPP_FILTER
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_PPP != 0) && ($CONFIG_FILTER == 1 || $CONFIG_FILTER == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_FILTER]];set CONFIG_PPP_FILTER [sync_bool $CONFIG_PPP_FILTER $tmpvar_dep 0];if {$tmpvar_dep != 1} then {configure_entry .menu34.config.f.x19 disabled {y};} else {configure_entry .menu34.config.f.x19 normal {y};}; configure_entry .menu34.config.f.x19 normal {n l}} else {configure_entry .menu34.config.f.x19 disabled {y n l}}
	global CONFIG_PPP_ASYNC
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_PPP != 0) && ($CONFIG_PPP == 1 || $CONFIG_PPP == 2 || $CONFIG_PPP == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PPP]];set CONFIG_PPP_ASYNC [sync_tristate $CONFIG_PPP_ASYNC $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu34.config.f.x20 disabled {y}} else {configure_entry .menu34.config.f.x20 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu34.config.f.x20 disabled {m}} else {configure_entry .menu34.config.f.x20 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu34.config.f.x20 normal {m}} else {configure_entry .menu34.config.f.x20 disabled {m}}; configure_entry .menu34.config.f.x20 normal {n l}} else {configure_entry .menu34.config.f.x20 disabled {y n m l}}
	global CONFIG_PPP_SYNC_TTY
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_PPP != 0) && ($CONFIG_PPP == 1 || $CONFIG_PPP == 2 || $CONFIG_PPP == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PPP]];set CONFIG_PPP_SYNC_TTY [sync_tristate $CONFIG_PPP_SYNC_TTY $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu34.config.f.x21 disabled {y}} else {configure_entry .menu34.config.f.x21 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu34.config.f.x21 disabled {m}} else {configure_entry .menu34.config.f.x21 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu34.config.f.x21 normal {m}} else {configure_entry .menu34.config.f.x21 disabled {m}}; configure_entry .menu34.config.f.x21 normal {n l}} else {configure_entry .menu34.config.f.x21 disabled {y n m l}}
	global CONFIG_PPP_DEFLATE
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_PPP != 0) && ($CONFIG_PPP == 1 || $CONFIG_PPP == 2 || $CONFIG_PPP == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PPP]];set CONFIG_PPP_DEFLATE [sync_tristate $CONFIG_PPP_DEFLATE $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu34.config.f.x22 disabled {y}} else {configure_entry .menu34.config.f.x22 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu34.config.f.x22 disabled {m}} else {configure_entry .menu34.config.f.x22 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu34.config.f.x22 normal {m}} else {configure_entry .menu34.config.f.x22 disabled {m}}; configure_entry .menu34.config.f.x22 normal {n l}} else {configure_entry .menu34.config.f.x22 disabled {y n m l}}
	global CONFIG_PPP_BSDCOMP
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_PPP != 0) && ($CONFIG_PPP == 1 || $CONFIG_PPP == 2 || $CONFIG_PPP == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PPP]];set CONFIG_PPP_BSDCOMP [sync_tristate $CONFIG_PPP_BSDCOMP $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu34.config.f.x23 disabled {y}} else {configure_entry .menu34.config.f.x23 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu34.config.f.x23 disabled {m}} else {configure_entry .menu34.config.f.x23 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu34.config.f.x23 normal {m}} else {configure_entry .menu34.config.f.x23 disabled {m}}; configure_entry .menu34.config.f.x23 normal {n l}} else {configure_entry .menu34.config.f.x23 disabled {y n m l}}
	global CONFIG_PPPOE
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_PPP != 0) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_PPP == 1 || $CONFIG_PPP == 2 || $CONFIG_PPP == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PPP]];set CONFIG_PPPOE [sync_tristate $CONFIG_PPPOE $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu34.config.f.x24 disabled {y}} else {configure_entry .menu34.config.f.x24 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu34.config.f.x24 disabled {m}} else {configure_entry .menu34.config.f.x24 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu34.config.f.x24 normal {m}} else {configure_entry .menu34.config.f.x24 disabled {m}}; configure_entry .menu34.config.f.x24 normal {n l}} else {configure_entry .menu34.config.f.x24 disabled {y n m l}}
	global CONFIG_ATM
	global CONFIG_PPPOATM
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_PPP != 0) && ($CONFIG_ATM == 1 || $CONFIG_ATM == 2) && ($CONFIG_PPP == 1 || $CONFIG_PPP == 2 || $CONFIG_PPP == 4) && ($CONFIG_ATM == 1 || $CONFIG_ATM == 2 || $CONFIG_ATM == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PPP $CONFIG_ATM]];set CONFIG_PPPOATM [sync_tristate $CONFIG_PPPOATM $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu34.config.f.x25 disabled {y}} else {configure_entry .menu34.config.f.x25 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu34.config.f.x25 disabled {m}} else {configure_entry .menu34.config.f.x25 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu34.config.f.x25 normal {m}} else {configure_entry .menu34.config.f.x25 disabled {m}}; configure_entry .menu34.config.f.x25 normal {n l}} else {configure_entry .menu34.config.f.x25 disabled {y n m l}}
	global CONFIG_SLIP
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1)} then {
	configure_entry .menu34.config.f.x26 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu34.config.f.x26 normal {m}} else {configure_entry .menu34.config.f.x26 disabled {m}}; configure_entry .menu34.config.f.x26 normal {n l}} else {configure_entry .menu34.config.f.x26 disabled {y n m l}}
	global CONFIG_SLIP_COMPRESSED
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_SLIP != 0)} then {
	configure_entry .menu34.config.f.x27 normal {n l y}} else {configure_entry .menu34.config.f.x27 disabled {y n l}}
	global CONFIG_SLIP_SMART
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_SLIP != 0)} then {
	configure_entry .menu34.config.f.x28 normal {n l y}} else {configure_entry .menu34.config.f.x28 disabled {y n l}}
	global CONFIG_SLIP_MODE_SLIP6
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_SLIP != 0)} then {
	configure_entry .menu34.config.f.x29 normal {n l y}} else {configure_entry .menu34.config.f.x29 disabled {y n l}}
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1)} then {configure_entry .menu34.config.f.x30 normal {m}} else {configure_entry .menu34.config.f.x30 disabled {m}}
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1)} then {configure_entry .menu34.config.f.x31 normal {m}} else {configure_entry .menu34.config.f.x31 disabled {m}}
	global CONFIG_NET_FC
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1)} then {
	configure_entry .menu34.config.f.x32 normal {n l y}} else {configure_entry .menu34.config.f.x32 disabled {y n l}}
	global CONFIG_SCSI
	global CONFIG_IPHASE5526
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_FC == 1) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCSI $CONFIG_PCI]];set CONFIG_IPHASE5526 [sync_tristate $CONFIG_IPHASE5526 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu34.config.f.x33 disabled {y}} else {configure_entry .menu34.config.f.x33 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu34.config.f.x33 disabled {m}} else {configure_entry .menu34.config.f.x33 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu34.config.f.x33 normal {m}} else {configure_entry .menu34.config.f.x33 disabled {m}}; configure_entry .menu34.config.f.x33 normal {n l}} else {configure_entry .menu34.config.f.x33 disabled {y n m l}}
	global CONFIG_RCPCI
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PCI]];set CONFIG_RCPCI [sync_tristate $CONFIG_RCPCI $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu34.config.f.x34 disabled {y}} else {configure_entry .menu34.config.f.x34 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu34.config.f.x34 disabled {m}} else {configure_entry .menu34.config.f.x34 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu34.config.f.x34 normal {m}} else {configure_entry .menu34.config.f.x34 disabled {m}}; configure_entry .menu34.config.f.x34 normal {n l}} else {configure_entry .menu34.config.f.x34 disabled {y n m l}}
	global CONFIG_SHAPER
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_EXPERIMENTAL == 1)} then {
	configure_entry .menu34.config.f.x35 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu34.config.f.x35 normal {m}} else {configure_entry .menu34.config.f.x35 disabled {m}}; configure_entry .menu34.config.f.x35 normal {n l}} else {configure_entry .menu34.config.f.x35 disabled {y n m l}}
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1)} then {configure_entry .menu34.config.f.x36 normal {m}} else {configure_entry .menu34.config.f.x36 disabled {m}}
	global CONFIG_HOTPLUG
	global CONFIG_PCMCIA
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_HOTPLUG == 1 && $CONFIG_PCMCIA != 0)} then {configure_entry .menu34.config.f.x37 normal {m}} else {configure_entry .menu34.config.f.x37 disabled {m}}
}


proc update_define_menu34 {} {
	update_define_mainmenu
	global CONFIG_MODULES
	global CONFIG_DUMMY
	global CONFIG_BONDING
	global CONFIG_EQUALIZER
	global CONFIG_TUN
	global CONFIG_ETHERTAP
	global CONFIG_DEFXX
	global CONFIG_PPP
	global CONFIG_SLIP
	global CONFIG_SHAPER
	global CONFIG_NETDEVICES
set CONFIG_NETDEVICES [expr $CONFIG_NETDEVICES|16]
set CONFIG_DUMMY [expr $CONFIG_DUMMY|16]
set CONFIG_BONDING [expr $CONFIG_BONDING|16]
set CONFIG_EQUALIZER [expr $CONFIG_EQUALIZER|16]
set CONFIG_TUN [expr $CONFIG_TUN|16]
set CONFIG_ETHERTAP [expr $CONFIG_ETHERTAP|16]
	global CONFIG_FDDI
set CONFIG_FDDI [expr $CONFIG_FDDI|16]
set CONFIG_DEFXX [expr $CONFIG_DEFXX|16]
	global CONFIG_HIPPI
set CONFIG_HIPPI [expr $CONFIG_HIPPI|16]
	global CONFIG_ROADRUNNER_LARGE_RINGS
set CONFIG_ROADRUNNER_LARGE_RINGS [expr $CONFIG_ROADRUNNER_LARGE_RINGS|16]
set CONFIG_PPP [expr $CONFIG_PPP|16]
set CONFIG_SLIP [expr $CONFIG_SLIP|16]
	global CONFIG_SLIP_COMPRESSED
set CONFIG_SLIP_COMPRESSED [expr $CONFIG_SLIP_COMPRESSED|16]
	global CONFIG_SLIP_SMART
set CONFIG_SLIP_SMART [expr $CONFIG_SLIP_SMART|16]
	global CONFIG_SLIP_MODE_SLIP6
set CONFIG_SLIP_MODE_SLIP6 [expr $CONFIG_SLIP_MODE_SLIP6|16]
	global CONFIG_NET_FC
set CONFIG_NET_FC [expr $CONFIG_NET_FC|16]
set CONFIG_SHAPER [expr $CONFIG_SHAPER|16]
	global CONFIG_NET
	if {($CONFIG_NET == 1)} then {
	set CONFIG_NETDEVICES [expr $CONFIG_NETDEVICES&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_DUMMY == 2)} then {set CONFIG_DUMMY 1}; set CONFIG_DUMMY [expr $CONFIG_DUMMY&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_BONDING == 2)} then {set CONFIG_BONDING 1}; set CONFIG_BONDING [expr $CONFIG_BONDING&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_EQUALIZER == 2)} then {set CONFIG_EQUALIZER 1}; set CONFIG_EQUALIZER [expr $CONFIG_EQUALIZER&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_TUN == 2)} then {set CONFIG_TUN 1}; set CONFIG_TUN [expr $CONFIG_TUN&15]}
	global CONFIG_EXPERIMENTAL
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_EXPERIMENTAL == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_ETHERTAP == 2)} then {set CONFIG_ETHERTAP 1}; set CONFIG_ETHERTAP [expr $CONFIG_ETHERTAP&15]}
	global CONFIG_ISAPNP
	global CONFIG_NET_SB1000
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_ISAPNP == 1 || $CONFIG_ISAPNP == 2) && ($CONFIG_ISAPNP == 1 || $CONFIG_ISAPNP == 2 || $CONFIG_ISAPNP == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ISAPNP]]; set CONFIG_NET_SB1000 [sync_tristate $CONFIG_NET_SB1000 $tmpvar_dep]; set CONFIG_NET_SB1000 [expr $CONFIG_NET_SB1000&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1)} then {
	set CONFIG_FDDI [expr $CONFIG_FDDI&15]}
	global CONFIG_PCI
	global CONFIG_EISA
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_FDDI == 1) && ($CONFIG_PCI == 1 || $CONFIG_EISA == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_DEFXX == 2)} then {set CONFIG_DEFXX 1}; set CONFIG_DEFXX [expr $CONFIG_DEFXX&15]}
	global CONFIG_SKFP
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_FDDI == 1) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PCI]]; set CONFIG_SKFP [sync_tristate $CONFIG_SKFP $tmpvar_dep]; set CONFIG_SKFP [expr $CONFIG_SKFP&15]}
	global CONFIG_INET
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_INET == 1)} then {
	set CONFIG_HIPPI [expr $CONFIG_HIPPI&15]}
	global CONFIG_ROADRUNNER
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_INET == 1) && ($CONFIG_HIPPI == 1 && $CONFIG_PCI == 1) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PCI]]; set CONFIG_ROADRUNNER [sync_tristate $CONFIG_ROADRUNNER $tmpvar_dep]; set CONFIG_ROADRUNNER [expr $CONFIG_ROADRUNNER&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_INET == 1) && ($CONFIG_HIPPI == 1 && $CONFIG_PCI == 1) && ($CONFIG_ROADRUNNER != 0)} then {
	set CONFIG_ROADRUNNER_LARGE_RINGS [expr $CONFIG_ROADRUNNER_LARGE_RINGS&15]}
	global CONFIG_PARPORT
	global CONFIG_PLIP
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_PARPORT == 1 || $CONFIG_PARPORT == 2 || $CONFIG_PARPORT == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PARPORT]]; set CONFIG_PLIP [sync_tristate $CONFIG_PLIP $tmpvar_dep]; set CONFIG_PLIP [expr $CONFIG_PLIP&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_PPP == 2)} then {set CONFIG_PPP 1}; set CONFIG_PPP [expr $CONFIG_PPP&15]}
	global CONFIG_PPP_MULTILINK
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_PPP != 0) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_EXPERIMENTAL]];set CONFIG_PPP_MULTILINK [sync_bool $CONFIG_PPP_MULTILINK $tmpvar_dep 0];set CONFIG_PPP_MULTILINK [expr $CONFIG_PPP_MULTILINK&15]}
	global CONFIG_FILTER
	global CONFIG_PPP_FILTER
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_PPP != 0) && ($CONFIG_FILTER == 1 || $CONFIG_FILTER == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_FILTER]];set CONFIG_PPP_FILTER [sync_bool $CONFIG_PPP_FILTER $tmpvar_dep 0];set CONFIG_PPP_FILTER [expr $CONFIG_PPP_FILTER&15]}
	global CONFIG_PPP_ASYNC
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_PPP != 0) && ($CONFIG_PPP == 1 || $CONFIG_PPP == 2 || $CONFIG_PPP == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PPP]]; set CONFIG_PPP_ASYNC [sync_tristate $CONFIG_PPP_ASYNC $tmpvar_dep]; set CONFIG_PPP_ASYNC [expr $CONFIG_PPP_ASYNC&15]}
	global CONFIG_PPP_SYNC_TTY
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_PPP != 0) && ($CONFIG_PPP == 1 || $CONFIG_PPP == 2 || $CONFIG_PPP == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PPP]]; set CONFIG_PPP_SYNC_TTY [sync_tristate $CONFIG_PPP_SYNC_TTY $tmpvar_dep]; set CONFIG_PPP_SYNC_TTY [expr $CONFIG_PPP_SYNC_TTY&15]}
	global CONFIG_PPP_DEFLATE
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_PPP != 0) && ($CONFIG_PPP == 1 || $CONFIG_PPP == 2 || $CONFIG_PPP == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PPP]]; set CONFIG_PPP_DEFLATE [sync_tristate $CONFIG_PPP_DEFLATE $tmpvar_dep]; set CONFIG_PPP_DEFLATE [expr $CONFIG_PPP_DEFLATE&15]}
	global CONFIG_PPP_BSDCOMP
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_PPP != 0) && ($CONFIG_PPP == 1 || $CONFIG_PPP == 2 || $CONFIG_PPP == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PPP]]; set CONFIG_PPP_BSDCOMP [sync_tristate $CONFIG_PPP_BSDCOMP $tmpvar_dep]; set CONFIG_PPP_BSDCOMP [expr $CONFIG_PPP_BSDCOMP&15]}
	global CONFIG_PPPOE
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_PPP != 0) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_PPP == 1 || $CONFIG_PPP == 2 || $CONFIG_PPP == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PPP]]; set CONFIG_PPPOE [sync_tristate $CONFIG_PPPOE $tmpvar_dep]; set CONFIG_PPPOE [expr $CONFIG_PPPOE&15]}
	global CONFIG_ATM
	global CONFIG_PPPOATM
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_PPP != 0) && ($CONFIG_ATM == 1 || $CONFIG_ATM == 2) && ($CONFIG_PPP == 1 || $CONFIG_PPP == 2 || $CONFIG_PPP == 4) && ($CONFIG_ATM == 1 || $CONFIG_ATM == 2 || $CONFIG_ATM == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PPP $CONFIG_ATM]]; set CONFIG_PPPOATM [sync_tristate $CONFIG_PPPOATM $tmpvar_dep]; set CONFIG_PPPOATM [expr $CONFIG_PPPOATM&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_SLIP == 2)} then {set CONFIG_SLIP 1}; set CONFIG_SLIP [expr $CONFIG_SLIP&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_SLIP != 0)} then {
	set CONFIG_SLIP_COMPRESSED [expr $CONFIG_SLIP_COMPRESSED&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_SLIP != 0)} then {
	set CONFIG_SLIP_SMART [expr $CONFIG_SLIP_SMART&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_SLIP != 0)} then {
	set CONFIG_SLIP_MODE_SLIP6 [expr $CONFIG_SLIP_MODE_SLIP6&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1)} then {
	set CONFIG_NET_FC [expr $CONFIG_NET_FC&15]}
	global CONFIG_SCSI
	global CONFIG_IPHASE5526
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_FC == 1) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCSI $CONFIG_PCI]]; set CONFIG_IPHASE5526 [sync_tristate $CONFIG_IPHASE5526 $tmpvar_dep]; set CONFIG_IPHASE5526 [expr $CONFIG_IPHASE5526&15]}
	global CONFIG_RCPCI
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PCI]]; set CONFIG_RCPCI [sync_tristate $CONFIG_RCPCI $tmpvar_dep]; set CONFIG_RCPCI [expr $CONFIG_RCPCI&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_EXPERIMENTAL == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_SHAPER == 2)} then {set CONFIG_SHAPER 1}; set CONFIG_SHAPER [expr $CONFIG_SHAPER&15]}
}


proc menu35 {w title} {
	set oldFocus [focus]
	catch {focus .menu34}
	catch {destroy $w; unregister_active 35}
	toplevel $w -class Dialog
	wm withdraw $w
	global active_menus
	set active_menus [lsort -integer [linsert $active_menus end 35]]
	message $w.m -width 400 -aspect 300 -text \
		"ARCnet devices"  -relief raised
	pack $w.m -pady 10 -side top -padx 10
	wm title $w "ARCnet devices" 

	bind $w <Escape> "catch {focus $oldFocus}; destroy $w; unregister_active 35; break"
	set nextscript "catch {focus $oldFocus}; destroy $w; unregister_active 35; menu36 .menu36 \"$title\""
	frame $w.f
	button $w.f.back -text "OK" \
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 35"
	button $w.f.next -text "Next" -underline 0\
		-width 15 -command $nextscript
	bind all <Alt-n> $nextscript
	button $w.f.prev -text "Prev" -underline 0\
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 35; menu34 .menu34 \"$title\""
	bind $w <Alt-p> "catch {focus $oldFocus}; destroy $w; unregister_active 35; menu34 .menu34 \"$title\";break"
	pack $w.f.back $w.f.next $w.f.prev -side left -expand on
	pack $w.f -pady 10 -side bottom -anchor w -fill x
	frame $w.topline -relief ridge -borderwidth 2 -height 2
	pack $w.topline -side top -fill x

	frame $w.botline -relief ridge -borderwidth 2 -height 2
	pack $w.botline -side bottom -fill x

	frame $w.config
	pack $w.config -fill y -expand on

	scrollbar $w.config.vscroll -command "$w.config.canvas yview"
	pack $w.config.vscroll -side right -fill y

	canvas $w.config.canvas -height 1\
		-relief flat -borderwidth 0 -yscrollcommand "$w.config.vscroll set" \
		-width [expr [winfo screenwidth .] * 1 / 2] 
	frame $w.config.f
	bind $w <Key-Down> "$w.config.canvas yview scroll  1 unit;break;"
	bind $w <Key-Up> "$w.config.canvas yview scroll  -1 unit;break;"
	bind $w <Key-Next> "$w.config.canvas yview scroll  1 page;break;"
	bind $w <Key-Prior> "$w.config.canvas yview scroll  -1 page;break;"
	bind $w <Key-Home> "$w.config.canvas yview moveto 0;break;"
	bind $w <Key-End> "$w.config.canvas yview moveto 1 ;break;"
	pack $w.config.canvas -side right -fill y


	tristate $w.config.f 35 0 "ARCnet support" CONFIG_ARCNET
	dep_tristate $w.config.f 35 1 "Enable standard ARCNet packet format (RFC 1201)" CONFIG_ARCNET_1201
	dep_tristate $w.config.f 35 2 "Enable old ARCNet packet format (RFC 1051)" CONFIG_ARCNET_1051
	dep_tristate $w.config.f 35 3 "Enable raw mode packet interface" CONFIG_ARCNET_RAW
	dep_tristate $w.config.f 35 4 "ARCnet COM90xx (normal) chipset driver" CONFIG_ARCNET_COM90xx
	dep_tristate $w.config.f 35 5 "ARCnet COM90xx (IO mapped) chipset driver" CONFIG_ARCNET_COM90xxIO
	dep_tristate $w.config.f 35 6 "ARCnet COM90xx (RIM I) chipset driver" CONFIG_ARCNET_RIM_I
	dep_tristate $w.config.f 35 7 "ARCnet COM20020 chipset driver" CONFIG_ARCNET_COM20020
	dep_tristate $w.config.f 35 8 "  Support for COM20020 on ISA" CONFIG_ARCNET_COM20020_ISA
	dep_tristate $w.config.f 35 9 "  Support for COM20020 on PCI" CONFIG_ARCNET_COM20020_PCI



	focus $w
	update_active
	global winx; global winy
	if {[winfo exists .menu34] == 0} then {menu34 .menu34 "Network device support"}
	set winx [expr [winfo x .menu34]+30]; set winy [expr [winfo y .menu34]+30]
	if {[winfo exists $w]} then {wm geometry $w +$winx+$winy}
	update idletasks
	if {[winfo exists $w]} then  {$w.config.canvas create window 0 0 -anchor nw -window $w.config.f

	$w.config.canvas configure \
		-width [expr [winfo reqwidth $w.config.f] + 1]\
		-scrollregion "-1 -1 [expr [winfo reqwidth $w.config.f] + 1] \
			 [expr [winfo reqheight $w.config.f] + 1]"

	set winy [expr [winfo reqh $w] - [winfo reqh $w.config.canvas]]
	set scry [expr [winfo screenh $w] / 2]
	set maxy [expr [winfo screenh $w] * 3 / 4]
	set canvtotal [expr [winfo reqh $w.config.f] + 2]
	if [expr $winy + $canvtotal < $maxy] {
		$w.config.canvas configure -height $canvtotal
	} else {
		$w.config.canvas configure -height [expr $scry - $winy]
		}
	}
	update idletasks
	if {[winfo exists $w]} then {
	wm maxsize $w [winfo width $w] [winfo screenheight $w]
	wm minsize $w [winfo width $w] 100

	wm deiconify $w
}
}

proc update_menu35 {} {
	global CONFIG_MODULES
	global CONFIG_NET
	global CONFIG_NETDEVICES
	global CONFIG_ARCNET
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1)} then {
	configure_entry .menu35.config.f.x0 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu35.config.f.x0 normal {m}} else {configure_entry .menu35.config.f.x0 disabled {m}}; configure_entry .menu35.config.f.x0 normal {n l}} else {configure_entry .menu35.config.f.x0 disabled {y n m l}}
	global CONFIG_ARCNET_1201
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_ARCNET != 0) && ($CONFIG_ARCNET == 1 || $CONFIG_ARCNET == 2 || $CONFIG_ARCNET == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ARCNET]];set CONFIG_ARCNET_1201 [sync_tristate $CONFIG_ARCNET_1201 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu35.config.f.x1 disabled {y}} else {configure_entry .menu35.config.f.x1 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu35.config.f.x1 disabled {m}} else {configure_entry .menu35.config.f.x1 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu35.config.f.x1 normal {m}} else {configure_entry .menu35.config.f.x1 disabled {m}}; configure_entry .menu35.config.f.x1 normal {n l}} else {configure_entry .menu35.config.f.x1 disabled {y n m l}}
	global CONFIG_ARCNET_1051
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_ARCNET != 0) && ($CONFIG_ARCNET == 1 || $CONFIG_ARCNET == 2 || $CONFIG_ARCNET == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ARCNET]];set CONFIG_ARCNET_1051 [sync_tristate $CONFIG_ARCNET_1051 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu35.config.f.x2 disabled {y}} else {configure_entry .menu35.config.f.x2 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu35.config.f.x2 disabled {m}} else {configure_entry .menu35.config.f.x2 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu35.config.f.x2 normal {m}} else {configure_entry .menu35.config.f.x2 disabled {m}}; configure_entry .menu35.config.f.x2 normal {n l}} else {configure_entry .menu35.config.f.x2 disabled {y n m l}}
	global CONFIG_ARCNET_RAW
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_ARCNET != 0) && ($CONFIG_ARCNET == 1 || $CONFIG_ARCNET == 2 || $CONFIG_ARCNET == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ARCNET]];set CONFIG_ARCNET_RAW [sync_tristate $CONFIG_ARCNET_RAW $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu35.config.f.x3 disabled {y}} else {configure_entry .menu35.config.f.x3 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu35.config.f.x3 disabled {m}} else {configure_entry .menu35.config.f.x3 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu35.config.f.x3 normal {m}} else {configure_entry .menu35.config.f.x3 disabled {m}}; configure_entry .menu35.config.f.x3 normal {n l}} else {configure_entry .menu35.config.f.x3 disabled {y n m l}}
	global CONFIG_ARCNET_COM90xx
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_ARCNET != 0) && ($CONFIG_ARCNET == 1 || $CONFIG_ARCNET == 2 || $CONFIG_ARCNET == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ARCNET]];set CONFIG_ARCNET_COM90xx [sync_tristate $CONFIG_ARCNET_COM90xx $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu35.config.f.x4 disabled {y}} else {configure_entry .menu35.config.f.x4 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu35.config.f.x4 disabled {m}} else {configure_entry .menu35.config.f.x4 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu35.config.f.x4 normal {m}} else {configure_entry .menu35.config.f.x4 disabled {m}}; configure_entry .menu35.config.f.x4 normal {n l}} else {configure_entry .menu35.config.f.x4 disabled {y n m l}}
	global CONFIG_ARCNET_COM90xxIO
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_ARCNET != 0) && ($CONFIG_ARCNET == 1 || $CONFIG_ARCNET == 2 || $CONFIG_ARCNET == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ARCNET]];set CONFIG_ARCNET_COM90xxIO [sync_tristate $CONFIG_ARCNET_COM90xxIO $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu35.config.f.x5 disabled {y}} else {configure_entry .menu35.config.f.x5 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu35.config.f.x5 disabled {m}} else {configure_entry .menu35.config.f.x5 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu35.config.f.x5 normal {m}} else {configure_entry .menu35.config.f.x5 disabled {m}}; configure_entry .menu35.config.f.x5 normal {n l}} else {configure_entry .menu35.config.f.x5 disabled {y n m l}}
	global CONFIG_ARCNET_RIM_I
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_ARCNET != 0) && ($CONFIG_ARCNET == 1 || $CONFIG_ARCNET == 2 || $CONFIG_ARCNET == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ARCNET]];set CONFIG_ARCNET_RIM_I [sync_tristate $CONFIG_ARCNET_RIM_I $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu35.config.f.x6 disabled {y}} else {configure_entry .menu35.config.f.x6 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu35.config.f.x6 disabled {m}} else {configure_entry .menu35.config.f.x6 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu35.config.f.x6 normal {m}} else {configure_entry .menu35.config.f.x6 disabled {m}}; configure_entry .menu35.config.f.x6 normal {n l}} else {configure_entry .menu35.config.f.x6 disabled {y n m l}}
	global CONFIG_ARCNET_COM20020
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_ARCNET != 0) && ($CONFIG_ARCNET == 1 || $CONFIG_ARCNET == 2 || $CONFIG_ARCNET == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ARCNET]];set CONFIG_ARCNET_COM20020 [sync_tristate $CONFIG_ARCNET_COM20020 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu35.config.f.x7 disabled {y}} else {configure_entry .menu35.config.f.x7 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu35.config.f.x7 disabled {m}} else {configure_entry .menu35.config.f.x7 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu35.config.f.x7 normal {m}} else {configure_entry .menu35.config.f.x7 disabled {m}}; configure_entry .menu35.config.f.x7 normal {n l}} else {configure_entry .menu35.config.f.x7 disabled {y n m l}}
	global CONFIG_ISA
	global CONFIG_ARCNET_COM20020_ISA
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_ARCNET != 0) && ($CONFIG_ARCNET_COM20020 == 1 || $CONFIG_ARCNET_COM20020 == 2 || $CONFIG_ARCNET_COM20020 == 4) && ($CONFIG_ISA == 1 || $CONFIG_ISA == 2 || $CONFIG_ISA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ARCNET_COM20020 $CONFIG_ISA]];set CONFIG_ARCNET_COM20020_ISA [sync_tristate $CONFIG_ARCNET_COM20020_ISA $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu35.config.f.x8 disabled {y}} else {configure_entry .menu35.config.f.x8 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu35.config.f.x8 disabled {m}} else {configure_entry .menu35.config.f.x8 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu35.config.f.x8 normal {m}} else {configure_entry .menu35.config.f.x8 disabled {m}}; configure_entry .menu35.config.f.x8 normal {n l}} else {configure_entry .menu35.config.f.x8 disabled {y n m l}}
	global CONFIG_PCI
	global CONFIG_ARCNET_COM20020_PCI
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_ARCNET != 0) && ($CONFIG_ARCNET_COM20020 == 1 || $CONFIG_ARCNET_COM20020 == 2 || $CONFIG_ARCNET_COM20020 == 4) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ARCNET_COM20020 $CONFIG_PCI]];set CONFIG_ARCNET_COM20020_PCI [sync_tristate $CONFIG_ARCNET_COM20020_PCI $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu35.config.f.x9 disabled {y}} else {configure_entry .menu35.config.f.x9 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu35.config.f.x9 disabled {m}} else {configure_entry .menu35.config.f.x9 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu35.config.f.x9 normal {m}} else {configure_entry .menu35.config.f.x9 disabled {m}}; configure_entry .menu35.config.f.x9 normal {n l}} else {configure_entry .menu35.config.f.x9 disabled {y n m l}}
}


proc update_define_menu35 {} {
	update_define_mainmenu
	global CONFIG_MODULES
	global CONFIG_ARCNET
set CONFIG_ARCNET [expr $CONFIG_ARCNET|16]
	global CONFIG_NET
	global CONFIG_NETDEVICES
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_ARCNET == 2)} then {set CONFIG_ARCNET 1}; set CONFIG_ARCNET [expr $CONFIG_ARCNET&15]}
	global CONFIG_ARCNET_1201
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_ARCNET != 0) && ($CONFIG_ARCNET == 1 || $CONFIG_ARCNET == 2 || $CONFIG_ARCNET == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ARCNET]]; set CONFIG_ARCNET_1201 [sync_tristate $CONFIG_ARCNET_1201 $tmpvar_dep]; set CONFIG_ARCNET_1201 [expr $CONFIG_ARCNET_1201&15]}
	global CONFIG_ARCNET_1051
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_ARCNET != 0) && ($CONFIG_ARCNET == 1 || $CONFIG_ARCNET == 2 || $CONFIG_ARCNET == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ARCNET]]; set CONFIG_ARCNET_1051 [sync_tristate $CONFIG_ARCNET_1051 $tmpvar_dep]; set CONFIG_ARCNET_1051 [expr $CONFIG_ARCNET_1051&15]}
	global CONFIG_ARCNET_RAW
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_ARCNET != 0) && ($CONFIG_ARCNET == 1 || $CONFIG_ARCNET == 2 || $CONFIG_ARCNET == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ARCNET]]; set CONFIG_ARCNET_RAW [sync_tristate $CONFIG_ARCNET_RAW $tmpvar_dep]; set CONFIG_ARCNET_RAW [expr $CONFIG_ARCNET_RAW&15]}
	global CONFIG_ARCNET_COM90xx
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_ARCNET != 0) && ($CONFIG_ARCNET == 1 || $CONFIG_ARCNET == 2 || $CONFIG_ARCNET == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ARCNET]]; set CONFIG_ARCNET_COM90xx [sync_tristate $CONFIG_ARCNET_COM90xx $tmpvar_dep]; set CONFIG_ARCNET_COM90xx [expr $CONFIG_ARCNET_COM90xx&15]}
	global CONFIG_ARCNET_COM90xxIO
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_ARCNET != 0) && ($CONFIG_ARCNET == 1 || $CONFIG_ARCNET == 2 || $CONFIG_ARCNET == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ARCNET]]; set CONFIG_ARCNET_COM90xxIO [sync_tristate $CONFIG_ARCNET_COM90xxIO $tmpvar_dep]; set CONFIG_ARCNET_COM90xxIO [expr $CONFIG_ARCNET_COM90xxIO&15]}
	global CONFIG_ARCNET_RIM_I
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_ARCNET != 0) && ($CONFIG_ARCNET == 1 || $CONFIG_ARCNET == 2 || $CONFIG_ARCNET == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ARCNET]]; set CONFIG_ARCNET_RIM_I [sync_tristate $CONFIG_ARCNET_RIM_I $tmpvar_dep]; set CONFIG_ARCNET_RIM_I [expr $CONFIG_ARCNET_RIM_I&15]}
	global CONFIG_ARCNET_COM20020
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_ARCNET != 0) && ($CONFIG_ARCNET == 1 || $CONFIG_ARCNET == 2 || $CONFIG_ARCNET == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ARCNET]]; set CONFIG_ARCNET_COM20020 [sync_tristate $CONFIG_ARCNET_COM20020 $tmpvar_dep]; set CONFIG_ARCNET_COM20020 [expr $CONFIG_ARCNET_COM20020&15]}
	global CONFIG_ISA
	global CONFIG_ARCNET_COM20020_ISA
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_ARCNET != 0) && ($CONFIG_ARCNET_COM20020 == 1 || $CONFIG_ARCNET_COM20020 == 2 || $CONFIG_ARCNET_COM20020 == 4) && ($CONFIG_ISA == 1 || $CONFIG_ISA == 2 || $CONFIG_ISA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ARCNET_COM20020 $CONFIG_ISA]]; set CONFIG_ARCNET_COM20020_ISA [sync_tristate $CONFIG_ARCNET_COM20020_ISA $tmpvar_dep]; set CONFIG_ARCNET_COM20020_ISA [expr $CONFIG_ARCNET_COM20020_ISA&15]}
	global CONFIG_PCI
	global CONFIG_ARCNET_COM20020_PCI
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_ARCNET != 0) && ($CONFIG_ARCNET_COM20020 == 1 || $CONFIG_ARCNET_COM20020 == 2 || $CONFIG_ARCNET_COM20020 == 4) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ARCNET_COM20020 $CONFIG_PCI]]; set CONFIG_ARCNET_COM20020_PCI [sync_tristate $CONFIG_ARCNET_COM20020_PCI $tmpvar_dep]; set CONFIG_ARCNET_COM20020_PCI [expr $CONFIG_ARCNET_COM20020_PCI&15]}
}


proc menu36 {w title} {
	set oldFocus [focus]
	catch {focus .menu34}
	catch {destroy $w; unregister_active 36}
	toplevel $w -class Dialog
	wm withdraw $w
	global active_menus
	set active_menus [lsort -integer [linsert $active_menus end 36]]
	message $w.m -width 400 -aspect 300 -text \
		"Ethernet (10 or 100Mbit)"  -relief raised
	pack $w.m -pady 10 -side top -padx 10
	wm title $w "Ethernet (10 or 100Mbit)" 

	bind $w <Escape> "catch {focus $oldFocus}; destroy $w; unregister_active 36; break"
	set nextscript "catch {focus $oldFocus}; destroy $w; unregister_active 36; menu37 .menu37 \"$title\""
	frame $w.f
	button $w.f.back -text "OK" \
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 36"
	button $w.f.next -text "Next" -underline 0\
		-width 15 -command $nextscript
	bind all <Alt-n> $nextscript
	button $w.f.prev -text "Prev" -underline 0\
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 36; menu35 .menu35 \"$title\""
	bind $w <Alt-p> "catch {focus $oldFocus}; destroy $w; unregister_active 36; menu35 .menu35 \"$title\";break"
	pack $w.f.back $w.f.next $w.f.prev -side left -expand on
	pack $w.f -pady 10 -side bottom -anchor w -fill x
	frame $w.topline -relief ridge -borderwidth 2 -height 2
	pack $w.topline -side top -fill x

	frame $w.botline -relief ridge -borderwidth 2 -height 2
	pack $w.botline -side bottom -fill x

	frame $w.config
	pack $w.config -fill y -expand on

	scrollbar $w.config.vscroll -command "$w.config.canvas yview"
	pack $w.config.vscroll -side right -fill y

	canvas $w.config.canvas -height 1\
		-relief flat -borderwidth 0 -yscrollcommand "$w.config.vscroll set" \
		-width [expr [winfo screenwidth .] * 1 / 2] 
	frame $w.config.f
	bind $w <Key-Down> "$w.config.canvas yview scroll  1 unit;break;"
	bind $w <Key-Up> "$w.config.canvas yview scroll  -1 unit;break;"
	bind $w <Key-Next> "$w.config.canvas yview scroll  1 page;break;"
	bind $w <Key-Prior> "$w.config.canvas yview scroll  -1 page;break;"
	bind $w <Key-Home> "$w.config.canvas yview moveto 0;break;"
	bind $w <Key-End> "$w.config.canvas yview moveto 1 ;break;"
	pack $w.config.canvas -side right -fill y


	bool $w.config.f 36 0 "Ethernet (10 or 100Mbit)" CONFIG_NET_ETHERNET
	dep_tristate $w.config.f 36 1 "Intel IXP425 Ethernet Device support" CONFIG_IXP425_ETH
	tristate $w.config.f 36 2 "  KS8695 internal ethernet support" CONFIG_KS8695
	bool $w.config.f 36 3 "    Hardware IP/TCP/UDP checksum" CONFIG_CSUM_UNNECESSARY
	dep_bool $w.config.f 36 4 "  ARM EBSA110 AM79C961A support" CONFIG_ARM_AM79C961A
	tristate $w.config.f 36 5 "  Cirrus Logic CS8900A support" CONFIG_ARM_CIRRUS
	tristate $w.config.f 36 6 "  Acorn Ether1 support" CONFIG_ARM_ETHER1
	tristate $w.config.f 36 7 "  Acorn/ANT Ether3 support" CONFIG_ARM_ETHER3
	tristate $w.config.f 36 8 "  I-cubed EtherH/ANT EtherM support" CONFIG_ARM_ETHERH
	tristate $w.config.f 36 9 " Altera Ether00 support" CONFIG_ETHER00
	dep_tristate $w.config.f 36 10 "  Sun LANCE support" CONFIG_SUNLANCE
	tristate $w.config.f 36 11 "  Sun Happy Meal 10/100baseT support" CONFIG_HAPPYMEAL
	dep_tristate $w.config.f 36 12 "  Sun BigMAC 10/100baseT support (EXPERIMENTAL)" CONFIG_SUNBMAC
	dep_tristate $w.config.f 36 13 "  Sun QuadEthernet support" CONFIG_SUNQE
	dep_tristate $w.config.f 36 14 "  Sun GEM & Apple GMAC support" CONFIG_SUNGEM
	bool $w.config.f 36 15 "  3COM cards" CONFIG_NET_VENDOR_3COM
	dep_tristate $w.config.f 36 16 "    3c501 \"EtherLink\" support" CONFIG_EL1
	dep_tristate $w.config.f 36 17 "    3c503 \"EtherLink II\" support" CONFIG_EL2
	dep_tristate $w.config.f 36 18 "    3c505 \"EtherLink Plus\" support" CONFIG_ELPLUS
	dep_tristate $w.config.f 36 19 "    3c507 \"EtherLink 16\" support (EXPERIMENTAL)" CONFIG_EL16
	tristate $w.config.f 36 20 "    3c509/3c529 (MCA)/3c579 \"EtherLink III\" support" CONFIG_EL3
	tristate $w.config.f 36 21 "    3c515 ISA \"Fast EtherLink\"" CONFIG_3C515
	dep_tristate $w.config.f 36 22 "    3c523 \"EtherLink/MC\" support" CONFIG_ELMC
	dep_tristate $w.config.f 36 23 "    3c527 \"EtherLink/MC 32\" support (EXPERIMENTAL)" CONFIG_ELMC_II
	tristate $w.config.f 36 24 "    3c590/3c900 series (592/595/597) \"Vortex/Boomerang\" support" CONFIG_VORTEX
	tristate $w.config.f 36 25 "    3cr990 series \"Typhoon\" support" CONFIG_TYPHOON
	dep_tristate $w.config.f 36 26 "  AMD LANCE and PCnet (AT1500 and NE2100) support" CONFIG_LANCE
	bool $w.config.f 36 27 "  Western Digital/SMC cards" CONFIG_NET_VENDOR_SMC
	dep_tristate $w.config.f 36 28 "    WD80*3 support" CONFIG_WD80x3
	dep_tristate $w.config.f 36 29 "    SMC Ultra MCA support" CONFIG_ULTRAMCA
	dep_tristate $w.config.f 36 30 "    SMC Ultra support" CONFIG_ULTRA
	dep_tristate $w.config.f 36 31 "    SMC Ultra32 EISA support" CONFIG_ULTRA32
	dep_tristate $w.config.f 36 32 "    SMC 9194 support" CONFIG_SMC9194
	tristate $w.config.f 36 33 "    SMC 91111 support" CONFIG_SMC91111
	bool $w.config.f 36 34 "  Racal-Interlan (Micom) NI cards" CONFIG_NET_VENDOR_RACAL
	dep_tristate $w.config.f 36 35 "    NI5010 support (EXPERIMENTAL)" CONFIG_NI5010
	dep_tristate $w.config.f 36 36 "    NI5210 support" CONFIG_NI52
	dep_tristate $w.config.f 36 37 "    NI6510 support" CONFIG_NI65
	dep_tristate $w.config.f 36 38 "  AT1700/1720 support (EXPERIMENTAL)" CONFIG_AT1700
	tristate $w.config.f 36 39 "  DEPCA, DE10x, DE200, DE201, DE202, DE422 support" CONFIG_DEPCA
	tristate $w.config.f 36 40 "  HP 10/100VG PCLAN (ISA, EISA, PCI) support" CONFIG_HP100
	dep_bool $w.config.f 36 41 "  Other ISA cards" CONFIG_NET_ISA
	tristate $w.config.f 36 42 "    Cabletron E21xx support" CONFIG_E2100
	tristate $w.config.f 36 43 "    EtherWORKS 3 (DE203, DE204, DE205) support" CONFIG_EWRK3
	tristate $w.config.f 36 44 "    EtherExpress 16 support" CONFIG_EEXPRESS
	tristate $w.config.f 36 45 "    EtherExpressPro support/EtherExpress 10 (i82595) support" CONFIG_EEXPRESS_PRO
	tristate $w.config.f 36 46 "    FMV-181/182/183/184 support (OBSOLETE)" CONFIG_FMV18X
	tristate $w.config.f 36 47 "    HP PCLAN+ (27247B and 27252A) support" CONFIG_HPLAN_PLUS
	tristate $w.config.f 36 48 "    HP PCLAN (27245 and other 27xxx series) support" CONFIG_HPLAN
	tristate $w.config.f 36 49 "    LP486E on board Ethernet" CONFIG_LP486E
	tristate $w.config.f 36 50 "    ICL EtherTeam 16i/32 support" CONFIG_ETH16I
	tristate $w.config.f 36 51 "    NE2000/NE1000 support" CONFIG_NE2000
	dep_tristate $w.config.f 36 52 "    SEEQ8005 support (EXPERIMENTAL)" CONFIG_SEEQ8005
	tristate $w.config.f 36 53 "    SK_G16 support" CONFIG_SK_G16
	tristate $w.config.f 36 54 "  SKnet MCA support" CONFIG_SKMC
	tristate $w.config.f 36 55 "  NE/2 (ne2000 MCA version) support" CONFIG_NE2_MCA
	tristate $w.config.f 36 56 "  IBM LAN Adapter/A support" CONFIG_IBMLANA
	bool $w.config.f 36 57 "  EISA, VLB, PCI and on board controllers" CONFIG_NET_PCI
	dep_tristate $w.config.f 36 58 "    AMD PCnet32 PCI support" CONFIG_PCNET32
	dep_tristate $w.config.f 36 59 "    AMD 8111 (new PCI lance) support" CONFIG_AMD8111_ETH
	dep_tristate $w.config.f 36 60 "    Adaptec Starfire/DuraLAN support" CONFIG_ADAPTEC_STARFIRE
	dep_tristate $w.config.f 36 61 "    Ansel Communications EISA 3200 support (EXPERIMENTAL)" CONFIG_AC3200
	dep_tristate $w.config.f 36 62 "    Apricot Xen-II on board Ethernet" CONFIG_APRICOT
	dep_tristate $w.config.f 36 63 "    Broadcom 4400 ethernet support (EXPERIMENTAL)" CONFIG_B44
	dep_tristate $w.config.f 36 64 "    CS89x0 support" CONFIG_CS89x0
	dep_tristate $w.config.f 36 65 "    DECchip Tulip (dc21x4x) PCI support" CONFIG_TULIP
	dep_bool $w.config.f 36 66 "      New bus configuration (EXPERIMENTAL)" CONFIG_TULIP_MWI
	bool $w.config.f 36 67 "      Use PCI shared mem for NIC registers" CONFIG_TULIP_MMIO
	tristate $w.config.f 36 68 "    Generic DECchip & DIGITAL EtherWORKS PCI/EISA" CONFIG_DE4X5
	tristate $w.config.f 36 69 "    Digi Intl. RightSwitch SE-X support" CONFIG_DGRS
	dep_tristate $w.config.f 36 70 "    Davicom DM910x/DM980x support" CONFIG_DM9102
	dep_tristate $w.config.f 36 71 "    EtherExpressPro/100 support (eepro100, original Becker driver)" CONFIG_EEPRO100
	dep_bool $w.config.f 36 72 "      Use PIO instead of MMIO" CONFIG_EEPRO100_PIO
	dep_tristate $w.config.f 36 73 "    EtherExpressPro/100 support (e100, Alternate Intel driver)" CONFIG_E100
	dep_tristate $w.config.f 36 74 "    Mylex EISA LNE390A/B support (EXPERIMENTAL)" CONFIG_LNE390
	dep_tristate $w.config.f 36 75 "    Myson MTD-8xx PCI Ethernet support" CONFIG_FEALNX
	dep_tristate $w.config.f 36 76 "    National Semiconductor DP8381x series PCI Ethernet support" CONFIG_NATSEMI
	dep_tristate $w.config.f 36 77 "    PCI NE2000 and clones support (see help)" CONFIG_NE2K_PCI
	dep_tristate $w.config.f 36 78 "    Novell/Eagle/Microdyne NE3210 EISA support (EXPERIMENTAL)" CONFIG_NE3210
	dep_tristate $w.config.f 36 79 "    Racal-Interlan EISA ES3210 support (EXPERIMENTAL)" CONFIG_ES3210
	dep_tristate $w.config.f 36 80 "    RealTek RTL-8139 C+ PCI Fast Ethernet Adapter support (EXPERIMENTAL)" CONFIG_8139CP
	dep_bool $w.config.f 36 81 "      Support for External PHY" CONFIG_8139CP_EXTERNAL_PHY
	int $w.config.f 36 82 "        The CP uses this Phy" CONFIG_8139CP_PHY_NUM
	dep_tristate $w.config.f 36 83 "    RealTek RTL-8139 PCI Fast Ethernet Adapter support" CONFIG_8139TOO
	dep_bool $w.config.f 36 84 "      Use PIO instead of MMIO" CONFIG_8139TOO_PIO
	dep_bool $w.config.f 36 85 "      Support for uncommon RTL-8139 rev. K (automatic channel equalization)" CONFIG_8139TOO_TUNE_TWISTER
	dep_bool $w.config.f 36 86 "      Support for older RTL-8129/8130 boards" CONFIG_8139TOO_8129
	dep_bool $w.config.f 36 87 "      Use older RX-reset method" CONFIG_8139_OLD_RX_RESET
	dep_tristate $w.config.f 36 88 "    ORIGINAL RealTek RTL-8139 PCI Fast Ethernet Adapter support" CONFIG_RTL8139
	dep_tristate $w.config.f 36 89 "    SiS 900/7016 PCI Fast Ethernet Adapter support" CONFIG_SIS900
	dep_tristate $w.config.f 36 90 "    SMC EtherPower II" CONFIG_EPIC100
	dep_tristate $w.config.f 36 91 "    Sundance Alta support" CONFIG_SUNDANCE
	dep_bool $w.config.f 36 92 "      Use MMIO instead of PIO" CONFIG_SUNDANCE_MMIO
	tristate $w.config.f 36 93 "    TI ThunderLAN support" CONFIG_TLAN
	dep_tristate $w.config.f 36 94 "    VIA Rhine support" CONFIG_VIA_RHINE
	dep_tristate $w.config.f 36 95 "    VIA Rhine FET support" CONFIG_VIA_RHINE_FET
	dep_bool $w.config.f 36 96 "      Use MMIO instead of PIO (EXPERIMENTAL)" CONFIG_VIA_RHINE_MMIO
	dep_tristate $w.config.f 36 97 "    Winbond W89c840 Ethernet support" CONFIG_WINBOND_840
	dep_bool $w.config.f 36 98 "    Zenith Z-Note support (OBSOLETE)" CONFIG_ZNET
	bool $w.config.f 36 99 "    Philips SAA9730 Ethernet support (EXPERIMENTAL)" CONFIG_LAN_SAA9730
	bool $w.config.f 36 100 "  Pocket and portable adapters" CONFIG_NET_POCKET
	tristate $w.config.f 36 101 "    AT-LAN-TEC/RealTek pocket adapter support" CONFIG_ATP
	dep_tristate $w.config.f 36 102 "    D-Link DE600 pocket adapter support" CONFIG_DE600
	dep_tristate $w.config.f 36 103 "    D-Link DE620 pocket adapter support" CONFIG_DE620
	bool $w.config.f 36 104 "  FEC ethernet controller (of ColdFire 5272/5282/5280)" CONFIG_FEC
	dep_bool $w.config.f 36 105 "   enable IOCTL (EXPERIMENTAL)" CONFIG_FEC_IOCTL
	dep_bool $w.config.f 36 106 "   uCdimm PHY interrupt support (uC5272 v1.3 +) " CONFIG_UC5272_PHY_INT
	bool $w.config.f 36 107 "   Micrel KS8995M switch chip support" CONFIG_FEC_KS8995M
	global tmpvar_17
	minimenu $w.config.f 36 108 "KS8995M MII Mode" tmpvar_17 CONFIG_FEC_KS8995M_P5
	menu $w.config.f.x108.x.menu -tearoffcommand "menutitle \"KS8995M MII Mode\""
	$w.config.f.x108.x.menu add radiobutton -label "MII-P5" -variable tmpvar_17 -value "MII-P5" -command "update_active"
	$w.config.f.x108.x.menu add radiobutton -label "MII-SW" -variable tmpvar_17 -value "MII-SW" -command "update_active"
	menusplit $w $w.config.f.x108.x.menu 2
	tristate $w.config.f 36 109 "  CS89x0 support" CONFIG_CS89x0
	bool $w.config.f 36 110 "  uCcs8900 support" CONFIG_UCCS8900
	bool $w.config.f 36 111 "    Hardware byte-swapping support for CS89x0 Ethernet" CONFIG_UCCS89x0_HW_SWAP
	istring $w.config.f 36 112 "CS8900A MAC Address" CS8900A_HWADDR



	focus $w
	update_active
	global winx; global winy
	if {[winfo exists .menu34] == 0} then {menu34 .menu34 "Network device support"}
	set winx [expr [winfo x .menu34]+30]; set winy [expr [winfo y .menu34]+30]
	if {[winfo exists $w]} then {wm geometry $w +$winx+$winy}
	update idletasks
	if {[winfo exists $w]} then  {$w.config.canvas create window 0 0 -anchor nw -window $w.config.f

	$w.config.canvas configure \
		-width [expr [winfo reqwidth $w.config.f] + 1]\
		-scrollregion "-1 -1 [expr [winfo reqwidth $w.config.f] + 1] \
			 [expr [winfo reqheight $w.config.f] + 1]"

	set winy [expr [winfo reqh $w] - [winfo reqh $w.config.canvas]]
	set scry [expr [winfo screenh $w] / 2]
	set maxy [expr [winfo screenh $w] * 3 / 4]
	set canvtotal [expr [winfo reqh $w.config.f] + 2]
	if [expr $winy + $canvtotal < $maxy] {
		$w.config.canvas configure -height $canvtotal
	} else {
		$w.config.canvas configure -height [expr $scry - $winy]
		}
	}
	update idletasks
	if {[winfo exists $w]} then {
	wm maxsize $w [winfo width $w] [winfo screenheight $w]
	wm minsize $w [winfo width $w] 100

	wm deiconify $w
}
}

proc update_menu36 {} {
	global CONFIG_NET
	global CONFIG_NETDEVICES
	global CONFIG_NET_ETHERNET
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1)} then {
	configure_entry .menu36.config.f.x0 normal {n l y}} else {configure_entry .menu36.config.f.x0 disabled {y n l}}
	global CONFIG_MODULES
	global CONFIG_ARCH_IXP425
	global CONFIG_IXP425_CSR
	global CONFIG_IXP425_ETH
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_ARCH_IXP425 == 1) && ($CONFIG_IXP425_CSR == 1 || $CONFIG_IXP425_CSR == 2 || $CONFIG_IXP425_CSR == 4)} then {
	global CONSTANT_M
	set tmpvar_dep [effective_dep [list $CONFIG_IXP425_CSR $CONSTANT_M]];set CONFIG_IXP425_ETH [sync_tristate $CONFIG_IXP425_ETH $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu36.config.f.x1 disabled {y}} else {configure_entry .menu36.config.f.x1 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu36.config.f.x1 disabled {m}} else {configure_entry .menu36.config.f.x1 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu36.config.f.x1 normal {m}} else {configure_entry .menu36.config.f.x1 disabled {m}}; configure_entry .menu36.config.f.x1 normal {n l}} else {configure_entry .menu36.config.f.x1 disabled {y n m l}}
	global CONFIG_ARM
	global CONFIG_ARCH_KS8695
	global CONFIG_KS8695
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_ARM == 1) && ($CONFIG_ARCH_KS8695 == 1)} then {
	configure_entry .menu36.config.f.x2 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu36.config.f.x2 normal {m}} else {configure_entry .menu36.config.f.x2 disabled {m}}; configure_entry .menu36.config.f.x2 normal {n l}} else {configure_entry .menu36.config.f.x2 disabled {y n m l}}
	global CONFIG_CSUM_UNNECESSARY
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_ARM == 1) && ($CONFIG_ARCH_KS8695 == 1) && ($CONFIG_KS8695 == 1 || $CONFIG_KS8695 == 2)} then {
	configure_entry .menu36.config.f.x3 normal {n l y}} else {configure_entry .menu36.config.f.x3 disabled {y n l}}
	global CONFIG_ARCH_EBSA110
	global CONFIG_ARM_AM79C961A
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_ARM == 1) && ($CONFIG_ARCH_EBSA110 == 1 || $CONFIG_ARCH_EBSA110 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ARCH_EBSA110]];set CONFIG_ARM_AM79C961A [sync_bool $CONFIG_ARM_AM79C961A $tmpvar_dep 0];if {$tmpvar_dep != 1} then {configure_entry .menu36.config.f.x4 disabled {y};} else {configure_entry .menu36.config.f.x4 normal {y};}; configure_entry .menu36.config.f.x4 normal {n l}} else {configure_entry .menu36.config.f.x4 disabled {y n l}}
	global CONFIG_ARM_CIRRUS
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_ARM == 1)} then {
	configure_entry .menu36.config.f.x5 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu36.config.f.x5 normal {m}} else {configure_entry .menu36.config.f.x5 disabled {m}}; configure_entry .menu36.config.f.x5 normal {n l}} else {configure_entry .menu36.config.f.x5 disabled {y n m l}}
	global CONFIG_ARCH_ACORN
	global CONFIG_ARM_ETHER1
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_ARM == 1) && ($CONFIG_ARCH_ACORN == 1)} then {
	configure_entry .menu36.config.f.x6 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu36.config.f.x6 normal {m}} else {configure_entry .menu36.config.f.x6 disabled {m}}; configure_entry .menu36.config.f.x6 normal {n l}} else {configure_entry .menu36.config.f.x6 disabled {y n m l}}
	global CONFIG_ARM_ETHER3
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_ARM == 1) && ($CONFIG_ARCH_ACORN == 1)} then {
	configure_entry .menu36.config.f.x7 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu36.config.f.x7 normal {m}} else {configure_entry .menu36.config.f.x7 disabled {m}}; configure_entry .menu36.config.f.x7 normal {n l}} else {configure_entry .menu36.config.f.x7 disabled {y n m l}}
	global CONFIG_ARM_ETHERH
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_ARM == 1) && ($CONFIG_ARCH_ACORN == 1)} then {
	configure_entry .menu36.config.f.x8 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu36.config.f.x8 normal {m}} else {configure_entry .menu36.config.f.x8 disabled {m}}; configure_entry .menu36.config.f.x8 normal {n l}} else {configure_entry .menu36.config.f.x8 disabled {y n m l}}
	global CONFIG_ARCH_CAMELOT
	global CONFIG_ETHER00
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_ARCH_CAMELOT == 1)} then {
	configure_entry .menu36.config.f.x9 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu36.config.f.x9 normal {m}} else {configure_entry .menu36.config.f.x9 disabled {m}}; configure_entry .menu36.config.f.x9 normal {n l}} else {configure_entry .menu36.config.f.x9 disabled {y n m l}}
	global CONFIG_SBUS
	global CONFIG_SUNLANCE
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_SBUS == 1 || $CONFIG_SBUS == 2 || $CONFIG_SBUS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SBUS]];set CONFIG_SUNLANCE [sync_tristate $CONFIG_SUNLANCE $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu36.config.f.x10 disabled {y}} else {configure_entry .menu36.config.f.x10 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu36.config.f.x10 disabled {m}} else {configure_entry .menu36.config.f.x10 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu36.config.f.x10 normal {m}} else {configure_entry .menu36.config.f.x10 disabled {m}}; configure_entry .menu36.config.f.x10 normal {n l}} else {configure_entry .menu36.config.f.x10 disabled {y n m l}}
	global CONFIG_PCI
	global CONFIG_HAPPYMEAL
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_SBUS == 1 || $CONFIG_PCI == 1)} then {
	configure_entry .menu36.config.f.x11 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu36.config.f.x11 normal {m}} else {configure_entry .menu36.config.f.x11 disabled {m}}; configure_entry .menu36.config.f.x11 normal {n l}} else {configure_entry .menu36.config.f.x11 disabled {y n m l}}
	global CONFIG_EXPERIMENTAL
	global CONFIG_SUNBMAC
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_SBUS == 1 || $CONFIG_SBUS == 2 || $CONFIG_SBUS == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SBUS $CONFIG_EXPERIMENTAL]];set CONFIG_SUNBMAC [sync_tristate $CONFIG_SUNBMAC $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu36.config.f.x12 disabled {y}} else {configure_entry .menu36.config.f.x12 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu36.config.f.x12 disabled {m}} else {configure_entry .menu36.config.f.x12 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu36.config.f.x12 normal {m}} else {configure_entry .menu36.config.f.x12 disabled {m}}; configure_entry .menu36.config.f.x12 normal {n l}} else {configure_entry .menu36.config.f.x12 disabled {y n m l}}
	global CONFIG_SUNQE
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_SBUS == 1 || $CONFIG_SBUS == 2 || $CONFIG_SBUS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SBUS]];set CONFIG_SUNQE [sync_tristate $CONFIG_SUNQE $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu36.config.f.x13 disabled {y}} else {configure_entry .menu36.config.f.x13 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu36.config.f.x13 disabled {m}} else {configure_entry .menu36.config.f.x13 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu36.config.f.x13 normal {m}} else {configure_entry .menu36.config.f.x13 disabled {m}}; configure_entry .menu36.config.f.x13 normal {n l}} else {configure_entry .menu36.config.f.x13 disabled {y n m l}}
	global CONFIG_SUNGEM
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PCI]];set CONFIG_SUNGEM [sync_tristate $CONFIG_SUNGEM $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu36.config.f.x14 disabled {y}} else {configure_entry .menu36.config.f.x14 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu36.config.f.x14 disabled {m}} else {configure_entry .menu36.config.f.x14 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu36.config.f.x14 normal {m}} else {configure_entry .menu36.config.f.x14 disabled {m}}; configure_entry .menu36.config.f.x14 normal {n l}} else {configure_entry .menu36.config.f.x14 disabled {y n m l}}
	global CONFIG_NET_VENDOR_3COM
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1)} then {
	configure_entry .menu36.config.f.x15 normal {n l y}} else {configure_entry .menu36.config.f.x15 disabled {y n l}}
	global CONFIG_ISA
	global CONFIG_EL1
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_VENDOR_3COM == 1) && ($CONFIG_ISA == 1 || $CONFIG_ISA == 2 || $CONFIG_ISA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ISA]];set CONFIG_EL1 [sync_tristate $CONFIG_EL1 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu36.config.f.x16 disabled {y}} else {configure_entry .menu36.config.f.x16 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu36.config.f.x16 disabled {m}} else {configure_entry .menu36.config.f.x16 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu36.config.f.x16 normal {m}} else {configure_entry .menu36.config.f.x16 disabled {m}}; configure_entry .menu36.config.f.x16 normal {n l}} else {configure_entry .menu36.config.f.x16 disabled {y n m l}}
	global CONFIG_EL2
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_VENDOR_3COM == 1) && ($CONFIG_ISA == 1 || $CONFIG_ISA == 2 || $CONFIG_ISA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ISA]];set CONFIG_EL2 [sync_tristate $CONFIG_EL2 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu36.config.f.x17 disabled {y}} else {configure_entry .menu36.config.f.x17 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu36.config.f.x17 disabled {m}} else {configure_entry .menu36.config.f.x17 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu36.config.f.x17 normal {m}} else {configure_entry .menu36.config.f.x17 disabled {m}}; configure_entry .menu36.config.f.x17 normal {n l}} else {configure_entry .menu36.config.f.x17 disabled {y n m l}}
	global CONFIG_ELPLUS
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_VENDOR_3COM == 1) && ($CONFIG_ISA == 1 || $CONFIG_ISA == 2 || $CONFIG_ISA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ISA]];set CONFIG_ELPLUS [sync_tristate $CONFIG_ELPLUS $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu36.config.f.x18 disabled {y}} else {configure_entry .menu36.config.f.x18 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu36.config.f.x18 disabled {m}} else {configure_entry .menu36.config.f.x18 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu36.config.f.x18 normal {m}} else {configure_entry .menu36.config.f.x18 disabled {m}}; configure_entry .menu36.config.f.x18 normal {n l}} else {configure_entry .menu36.config.f.x18 disabled {y n m l}}
	global CONFIG_EL16
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_VENDOR_3COM == 1) && ($CONFIG_ISA == 1 || $CONFIG_ISA == 2 || $CONFIG_ISA == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ISA $CONFIG_EXPERIMENTAL]];set CONFIG_EL16 [sync_tristate $CONFIG_EL16 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu36.config.f.x19 disabled {y}} else {configure_entry .menu36.config.f.x19 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu36.config.f.x19 disabled {m}} else {configure_entry .menu36.config.f.x19 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu36.config.f.x19 normal {m}} else {configure_entry .menu36.config.f.x19 disabled {m}}; configure_entry .menu36.config.f.x19 normal {n l}} else {configure_entry .menu36.config.f.x19 disabled {y n m l}}
	global CONFIG_EISA
	global CONFIG_MCA
	global CONFIG_EL3
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_VENDOR_3COM == 1) && ($CONFIG_ISA == 1 || $CONFIG_EISA == 1 || $CONFIG_MCA == 1)} then {
	configure_entry .menu36.config.f.x20 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu36.config.f.x20 normal {m}} else {configure_entry .menu36.config.f.x20 disabled {m}}; configure_entry .menu36.config.f.x20 normal {n l}} else {configure_entry .menu36.config.f.x20 disabled {y n m l}}
	global CONFIG_3C515
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_VENDOR_3COM == 1) && ($CONFIG_ISA == 1 || $CONFIG_EISA == 1)} then {
	configure_entry .menu36.config.f.x21 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu36.config.f.x21 normal {m}} else {configure_entry .menu36.config.f.x21 disabled {m}}; configure_entry .menu36.config.f.x21 normal {n l}} else {configure_entry .menu36.config.f.x21 disabled {y n m l}}
	global CONFIG_ELMC
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_VENDOR_3COM == 1) && ($CONFIG_MCA == 1 || $CONFIG_MCA == 2 || $CONFIG_MCA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_MCA]];set CONFIG_ELMC [sync_tristate $CONFIG_ELMC $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu36.config.f.x22 disabled {y}} else {configure_entry .menu36.config.f.x22 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu36.config.f.x22 disabled {m}} else {configure_entry .menu36.config.f.x22 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu36.config.f.x22 normal {m}} else {configure_entry .menu36.config.f.x22 disabled {m}}; configure_entry .menu36.config.f.x22 normal {n l}} else {configure_entry .menu36.config.f.x22 disabled {y n m l}}
	global CONFIG_ELMC_II
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_VENDOR_3COM == 1) && ($CONFIG_MCA == 1 || $CONFIG_MCA == 2 || $CONFIG_MCA == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_MCA $CONFIG_EXPERIMENTAL]];set CONFIG_ELMC_II [sync_tristate $CONFIG_ELMC_II $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu36.config.f.x23 disabled {y}} else {configure_entry .menu36.config.f.x23 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu36.config.f.x23 disabled {m}} else {configure_entry .menu36.config.f.x23 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu36.config.f.x23 normal {m}} else {configure_entry .menu36.config.f.x23 disabled {m}}; configure_entry .menu36.config.f.x23 normal {n l}} else {configure_entry .menu36.config.f.x23 disabled {y n m l}}
	global CONFIG_VORTEX
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_VENDOR_3COM == 1) && ($CONFIG_PCI == 1 || $CONFIG_EISA == 1)} then {
	configure_entry .menu36.config.f.x24 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu36.config.f.x24 normal {m}} else {configure_entry .menu36.config.f.x24 disabled {m}}; configure_entry .menu36.config.f.x24 normal {n l}} else {configure_entry .menu36.config.f.x24 disabled {y n m l}}
	global CONFIG_TYPHOON
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_VENDOR_3COM == 1) && ($CONFIG_PCI == 1)} then {
	configure_entry .menu36.config.f.x25 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu36.config.f.x25 normal {m}} else {configure_entry .menu36.config.f.x25 disabled {m}}; configure_entry .menu36.config.f.x25 normal {n l}} else {configure_entry .menu36.config.f.x25 disabled {y n m l}}
	global CONFIG_LANCE
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_ISA == 1 || $CONFIG_ISA == 2 || $CONFIG_ISA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ISA]];set CONFIG_LANCE [sync_tristate $CONFIG_LANCE $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu36.config.f.x26 disabled {y}} else {configure_entry .menu36.config.f.x26 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu36.config.f.x26 disabled {m}} else {configure_entry .menu36.config.f.x26 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu36.config.f.x26 normal {m}} else {configure_entry .menu36.config.f.x26 disabled {m}}; configure_entry .menu36.config.f.x26 normal {n l}} else {configure_entry .menu36.config.f.x26 disabled {y n m l}}
	global CONFIG_NET_VENDOR_SMC
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1)} then {
	configure_entry .menu36.config.f.x27 normal {n l y}} else {configure_entry .menu36.config.f.x27 disabled {y n l}}
	global CONFIG_WD80x3
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_VENDOR_SMC == 1) && ($CONFIG_ISA == 1 || $CONFIG_ISA == 2 || $CONFIG_ISA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ISA]];set CONFIG_WD80x3 [sync_tristate $CONFIG_WD80x3 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu36.config.f.x28 disabled {y}} else {configure_entry .menu36.config.f.x28 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu36.config.f.x28 disabled {m}} else {configure_entry .menu36.config.f.x28 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu36.config.f.x28 normal {m}} else {configure_entry .menu36.config.f.x28 disabled {m}}; configure_entry .menu36.config.f.x28 normal {n l}} else {configure_entry .menu36.config.f.x28 disabled {y n m l}}
	global CONFIG_ULTRAMCA
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_VENDOR_SMC == 1) && ($CONFIG_MCA == 1 || $CONFIG_MCA == 2 || $CONFIG_MCA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_MCA]];set CONFIG_ULTRAMCA [sync_tristate $CONFIG_ULTRAMCA $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu36.config.f.x29 disabled {y}} else {configure_entry .menu36.config.f.x29 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu36.config.f.x29 disabled {m}} else {configure_entry .menu36.config.f.x29 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu36.config.f.x29 normal {m}} else {configure_entry .menu36.config.f.x29 disabled {m}}; configure_entry .menu36.config.f.x29 normal {n l}} else {configure_entry .menu36.config.f.x29 disabled {y n m l}}
	global CONFIG_ULTRA
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_VENDOR_SMC == 1) && ($CONFIG_ISA == 1 || $CONFIG_ISA == 2 || $CONFIG_ISA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ISA]];set CONFIG_ULTRA [sync_tristate $CONFIG_ULTRA $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu36.config.f.x30 disabled {y}} else {configure_entry .menu36.config.f.x30 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu36.config.f.x30 disabled {m}} else {configure_entry .menu36.config.f.x30 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu36.config.f.x30 normal {m}} else {configure_entry .menu36.config.f.x30 disabled {m}}; configure_entry .menu36.config.f.x30 normal {n l}} else {configure_entry .menu36.config.f.x30 disabled {y n m l}}
	global CONFIG_ULTRA32
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_VENDOR_SMC == 1) && ($CONFIG_EISA == 1 || $CONFIG_EISA == 2 || $CONFIG_EISA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_EISA]];set CONFIG_ULTRA32 [sync_tristate $CONFIG_ULTRA32 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu36.config.f.x31 disabled {y}} else {configure_entry .menu36.config.f.x31 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu36.config.f.x31 disabled {m}} else {configure_entry .menu36.config.f.x31 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu36.config.f.x31 normal {m}} else {configure_entry .menu36.config.f.x31 disabled {m}}; configure_entry .menu36.config.f.x31 normal {n l}} else {configure_entry .menu36.config.f.x31 disabled {y n m l}}
	global CONFIG_SMC9194
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_VENDOR_SMC == 1) && ($CONFIG_ISA == 1 || $CONFIG_ISA == 2 || $CONFIG_ISA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ISA]];set CONFIG_SMC9194 [sync_tristate $CONFIG_SMC9194 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu36.config.f.x32 disabled {y}} else {configure_entry .menu36.config.f.x32 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu36.config.f.x32 disabled {m}} else {configure_entry .menu36.config.f.x32 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu36.config.f.x32 normal {m}} else {configure_entry .menu36.config.f.x32 disabled {m}}; configure_entry .menu36.config.f.x32 normal {n l}} else {configure_entry .menu36.config.f.x32 disabled {y n m l}}
	global CONFIG_SMC91111
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_VENDOR_SMC == 1)} then {
	configure_entry .menu36.config.f.x33 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu36.config.f.x33 normal {m}} else {configure_entry .menu36.config.f.x33 disabled {m}}; configure_entry .menu36.config.f.x33 normal {n l}} else {configure_entry .menu36.config.f.x33 disabled {y n m l}}
	global CONFIG_NET_VENDOR_RACAL
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1)} then {
	configure_entry .menu36.config.f.x34 normal {n l y}} else {configure_entry .menu36.config.f.x34 disabled {y n l}}
	global CONFIG_NI5010
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_VENDOR_RACAL == 1) && ($CONFIG_ISA == 1 || $CONFIG_ISA == 2 || $CONFIG_ISA == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ISA $CONFIG_EXPERIMENTAL]];set CONFIG_NI5010 [sync_tristate $CONFIG_NI5010 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu36.config.f.x35 disabled {y}} else {configure_entry .menu36.config.f.x35 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu36.config.f.x35 disabled {m}} else {configure_entry .menu36.config.f.x35 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu36.config.f.x35 normal {m}} else {configure_entry .menu36.config.f.x35 disabled {m}}; configure_entry .menu36.config.f.x35 normal {n l}} else {configure_entry .menu36.config.f.x35 disabled {y n m l}}
	global CONFIG_NI52
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_VENDOR_RACAL == 1) && ($CONFIG_ISA == 1 || $CONFIG_ISA == 2 || $CONFIG_ISA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ISA]];set CONFIG_NI52 [sync_tristate $CONFIG_NI52 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu36.config.f.x36 disabled {y}} else {configure_entry .menu36.config.f.x36 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu36.config.f.x36 disabled {m}} else {configure_entry .menu36.config.f.x36 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu36.config.f.x36 normal {m}} else {configure_entry .menu36.config.f.x36 disabled {m}}; configure_entry .menu36.config.f.x36 normal {n l}} else {configure_entry .menu36.config.f.x36 disabled {y n m l}}
	global CONFIG_NI65
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_VENDOR_RACAL == 1) && ($CONFIG_ISA == 1 || $CONFIG_ISA == 2 || $CONFIG_ISA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ISA]];set CONFIG_NI65 [sync_tristate $CONFIG_NI65 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu36.config.f.x37 disabled {y}} else {configure_entry .menu36.config.f.x37 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu36.config.f.x37 disabled {m}} else {configure_entry .menu36.config.f.x37 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu36.config.f.x37 normal {m}} else {configure_entry .menu36.config.f.x37 disabled {m}}; configure_entry .menu36.config.f.x37 normal {n l}} else {configure_entry .menu36.config.f.x37 disabled {y n m l}}
	global CONFIG_AT1700
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_ISA == 1 || $CONFIG_MCA == 1) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_EXPERIMENTAL]];set CONFIG_AT1700 [sync_tristate $CONFIG_AT1700 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu36.config.f.x38 disabled {y}} else {configure_entry .menu36.config.f.x38 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu36.config.f.x38 disabled {m}} else {configure_entry .menu36.config.f.x38 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu36.config.f.x38 normal {m}} else {configure_entry .menu36.config.f.x38 disabled {m}}; configure_entry .menu36.config.f.x38 normal {n l}} else {configure_entry .menu36.config.f.x38 disabled {y n m l}}
	global CONFIG_DEPCA
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_ISA == 1 || $CONFIG_EISA == 1 || $CONFIG_MCA == 1)} then {
	configure_entry .menu36.config.f.x39 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu36.config.f.x39 normal {m}} else {configure_entry .menu36.config.f.x39 disabled {m}}; configure_entry .menu36.config.f.x39 normal {n l}} else {configure_entry .menu36.config.f.x39 disabled {y n m l}}
	global CONFIG_HP100
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_ISA == 1 || $CONFIG_EISA == 1 || $CONFIG_PCI == 1)} then {
	configure_entry .menu36.config.f.x40 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu36.config.f.x40 normal {m}} else {configure_entry .menu36.config.f.x40 disabled {m}}; configure_entry .menu36.config.f.x40 normal {n l}} else {configure_entry .menu36.config.f.x40 disabled {y n m l}}
	global CONFIG_NET_ISA
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_ISA == 1 || $CONFIG_ISA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ISA]];set CONFIG_NET_ISA [sync_bool $CONFIG_NET_ISA $tmpvar_dep 0];if {$tmpvar_dep != 1} then {configure_entry .menu36.config.f.x41 disabled {y};} else {configure_entry .menu36.config.f.x41 normal {y};}; configure_entry .menu36.config.f.x41 normal {n l}} else {configure_entry .menu36.config.f.x41 disabled {y n l}}
	global CONFIG_E2100
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_ISA == 1)} then {
	configure_entry .menu36.config.f.x42 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu36.config.f.x42 normal {m}} else {configure_entry .menu36.config.f.x42 disabled {m}}; configure_entry .menu36.config.f.x42 normal {n l}} else {configure_entry .menu36.config.f.x42 disabled {y n m l}}
	global CONFIG_EWRK3
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_ISA == 1)} then {
	configure_entry .menu36.config.f.x43 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu36.config.f.x43 normal {m}} else {configure_entry .menu36.config.f.x43 disabled {m}}; configure_entry .menu36.config.f.x43 normal {n l}} else {configure_entry .menu36.config.f.x43 disabled {y n m l}}
	global CONFIG_EEXPRESS
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_ISA == 1)} then {
	configure_entry .menu36.config.f.x44 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu36.config.f.x44 normal {m}} else {configure_entry .menu36.config.f.x44 disabled {m}}; configure_entry .menu36.config.f.x44 normal {n l}} else {configure_entry .menu36.config.f.x44 disabled {y n m l}}
	global CONFIG_EEXPRESS_PRO
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_ISA == 1)} then {
	configure_entry .menu36.config.f.x45 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu36.config.f.x45 normal {m}} else {configure_entry .menu36.config.f.x45 disabled {m}}; configure_entry .menu36.config.f.x45 normal {n l}} else {configure_entry .menu36.config.f.x45 disabled {y n m l}}
	global CONFIG_OBSOLETE
	global CONFIG_FMV18X
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_ISA == 1) && ($CONFIG_OBSOLETE == 1)} then {
	configure_entry .menu36.config.f.x46 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu36.config.f.x46 normal {m}} else {configure_entry .menu36.config.f.x46 disabled {m}}; configure_entry .menu36.config.f.x46 normal {n l}} else {configure_entry .menu36.config.f.x46 disabled {y n m l}}
	global CONFIG_HPLAN_PLUS
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_ISA == 1)} then {
	configure_entry .menu36.config.f.x47 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu36.config.f.x47 normal {m}} else {configure_entry .menu36.config.f.x47 disabled {m}}; configure_entry .menu36.config.f.x47 normal {n l}} else {configure_entry .menu36.config.f.x47 disabled {y n m l}}
	global CONFIG_HPLAN
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_ISA == 1)} then {
	configure_entry .menu36.config.f.x48 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu36.config.f.x48 normal {m}} else {configure_entry .menu36.config.f.x48 disabled {m}}; configure_entry .menu36.config.f.x48 normal {n l}} else {configure_entry .menu36.config.f.x48 disabled {y n m l}}
	global CONFIG_LP486E
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_ISA == 1)} then {
	configure_entry .menu36.config.f.x49 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu36.config.f.x49 normal {m}} else {configure_entry .menu36.config.f.x49 disabled {m}}; configure_entry .menu36.config.f.x49 normal {n l}} else {configure_entry .menu36.config.f.x49 disabled {y n m l}}
	global CONFIG_ETH16I
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_ISA == 1)} then {
	configure_entry .menu36.config.f.x50 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu36.config.f.x50 normal {m}} else {configure_entry .menu36.config.f.x50 disabled {m}}; configure_entry .menu36.config.f.x50 normal {n l}} else {configure_entry .menu36.config.f.x50 disabled {y n m l}}
	global CONFIG_NE2000
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_ISA == 1)} then {
	configure_entry .menu36.config.f.x51 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu36.config.f.x51 normal {m}} else {configure_entry .menu36.config.f.x51 disabled {m}}; configure_entry .menu36.config.f.x51 normal {n l}} else {configure_entry .menu36.config.f.x51 disabled {y n m l}}
	global CONFIG_SEEQ8005
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_ISA == 1) && ($CONFIG_OBSOLETE == 1) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_EXPERIMENTAL]];set CONFIG_SEEQ8005 [sync_tristate $CONFIG_SEEQ8005 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu36.config.f.x52 disabled {y}} else {configure_entry .menu36.config.f.x52 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu36.config.f.x52 disabled {m}} else {configure_entry .menu36.config.f.x52 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu36.config.f.x52 normal {m}} else {configure_entry .menu36.config.f.x52 disabled {m}}; configure_entry .menu36.config.f.x52 normal {n l}} else {configure_entry .menu36.config.f.x52 disabled {y n m l}}
	global CONFIG_SK_G16
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_ISA == 1) && ($CONFIG_OBSOLETE == 1)} then {
	configure_entry .menu36.config.f.x53 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu36.config.f.x53 normal {m}} else {configure_entry .menu36.config.f.x53 disabled {m}}; configure_entry .menu36.config.f.x53 normal {n l}} else {configure_entry .menu36.config.f.x53 disabled {y n m l}}
	global CONFIG_SKMC
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_MCA == 1)} then {
	configure_entry .menu36.config.f.x54 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu36.config.f.x54 normal {m}} else {configure_entry .menu36.config.f.x54 disabled {m}}; configure_entry .menu36.config.f.x54 normal {n l}} else {configure_entry .menu36.config.f.x54 disabled {y n m l}}
	global CONFIG_NE2_MCA
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_MCA == 1)} then {
	configure_entry .menu36.config.f.x55 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu36.config.f.x55 normal {m}} else {configure_entry .menu36.config.f.x55 disabled {m}}; configure_entry .menu36.config.f.x55 normal {n l}} else {configure_entry .menu36.config.f.x55 disabled {y n m l}}
	global CONFIG_IBMLANA
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_MCA == 1)} then {
	configure_entry .menu36.config.f.x56 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu36.config.f.x56 normal {m}} else {configure_entry .menu36.config.f.x56 disabled {m}}; configure_entry .menu36.config.f.x56 normal {n l}} else {configure_entry .menu36.config.f.x56 disabled {y n m l}}
	global CONFIG_NET_PCI
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_ISA == 1 || $CONFIG_EISA == 1 || $CONFIG_PCI == 1)} then {
	configure_entry .menu36.config.f.x57 normal {n l y}} else {configure_entry .menu36.config.f.x57 disabled {y n l}}
	global CONFIG_PCNET32
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_PCI == 1) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PCI]];set CONFIG_PCNET32 [sync_tristate $CONFIG_PCNET32 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu36.config.f.x58 disabled {y}} else {configure_entry .menu36.config.f.x58 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu36.config.f.x58 disabled {m}} else {configure_entry .menu36.config.f.x58 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu36.config.f.x58 normal {m}} else {configure_entry .menu36.config.f.x58 disabled {m}}; configure_entry .menu36.config.f.x58 normal {n l}} else {configure_entry .menu36.config.f.x58 disabled {y n m l}}
	global CONFIG_AMD8111_ETH
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_PCI == 1) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PCI]];set CONFIG_AMD8111_ETH [sync_tristate $CONFIG_AMD8111_ETH $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu36.config.f.x59 disabled {y}} else {configure_entry .menu36.config.f.x59 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu36.config.f.x59 disabled {m}} else {configure_entry .menu36.config.f.x59 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu36.config.f.x59 normal {m}} else {configure_entry .menu36.config.f.x59 disabled {m}}; configure_entry .menu36.config.f.x59 normal {n l}} else {configure_entry .menu36.config.f.x59 disabled {y n m l}}
	global CONFIG_ADAPTEC_STARFIRE
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_PCI == 1) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PCI]];set CONFIG_ADAPTEC_STARFIRE [sync_tristate $CONFIG_ADAPTEC_STARFIRE $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu36.config.f.x60 disabled {y}} else {configure_entry .menu36.config.f.x60 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu36.config.f.x60 disabled {m}} else {configure_entry .menu36.config.f.x60 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu36.config.f.x60 normal {m}} else {configure_entry .menu36.config.f.x60 disabled {m}}; configure_entry .menu36.config.f.x60 normal {n l}} else {configure_entry .menu36.config.f.x60 disabled {y n m l}}
	global CONFIG_AC3200
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_PCI == 1) && ($CONFIG_ISA == 1 || $CONFIG_EISA == 1) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_EXPERIMENTAL]];set CONFIG_AC3200 [sync_tristate $CONFIG_AC3200 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu36.config.f.x61 disabled {y}} else {configure_entry .menu36.config.f.x61 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu36.config.f.x61 disabled {m}} else {configure_entry .menu36.config.f.x61 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu36.config.f.x61 normal {m}} else {configure_entry .menu36.config.f.x61 disabled {m}}; configure_entry .menu36.config.f.x61 normal {n l}} else {configure_entry .menu36.config.f.x61 disabled {y n m l}}
	global CONFIG_APRICOT
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_PCI == 1) && ($CONFIG_ISA == 1 || $CONFIG_ISA == 2 || $CONFIG_ISA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ISA]];set CONFIG_APRICOT [sync_tristate $CONFIG_APRICOT $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu36.config.f.x62 disabled {y}} else {configure_entry .menu36.config.f.x62 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu36.config.f.x62 disabled {m}} else {configure_entry .menu36.config.f.x62 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu36.config.f.x62 normal {m}} else {configure_entry .menu36.config.f.x62 disabled {m}}; configure_entry .menu36.config.f.x62 normal {n l}} else {configure_entry .menu36.config.f.x62 disabled {y n m l}}
	global CONFIG_B44
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_PCI == 1) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PCI $CONFIG_EXPERIMENTAL]];set CONFIG_B44 [sync_tristate $CONFIG_B44 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu36.config.f.x63 disabled {y}} else {configure_entry .menu36.config.f.x63 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu36.config.f.x63 disabled {m}} else {configure_entry .menu36.config.f.x63 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu36.config.f.x63 normal {m}} else {configure_entry .menu36.config.f.x63 disabled {m}}; configure_entry .menu36.config.f.x63 normal {n l}} else {configure_entry .menu36.config.f.x63 disabled {y n m l}}
	global CONFIG_CS89x0
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_PCI == 1) && ($CONFIG_ISA == 1 || $CONFIG_ISA == 2 || $CONFIG_ISA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ISA]];set CONFIG_CS89x0 [sync_tristate $CONFIG_CS89x0 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu36.config.f.x64 disabled {y}} else {configure_entry .menu36.config.f.x64 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu36.config.f.x64 disabled {m}} else {configure_entry .menu36.config.f.x64 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu36.config.f.x64 normal {m}} else {configure_entry .menu36.config.f.x64 disabled {m}}; configure_entry .menu36.config.f.x64 normal {n l}} else {configure_entry .menu36.config.f.x64 disabled {y n m l}}
	global CONFIG_TULIP
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_PCI == 1) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PCI]];set CONFIG_TULIP [sync_tristate $CONFIG_TULIP $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu36.config.f.x65 disabled {y}} else {configure_entry .menu36.config.f.x65 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu36.config.f.x65 disabled {m}} else {configure_entry .menu36.config.f.x65 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu36.config.f.x65 normal {m}} else {configure_entry .menu36.config.f.x65 disabled {m}}; configure_entry .menu36.config.f.x65 normal {n l}} else {configure_entry .menu36.config.f.x65 disabled {y n m l}}
	global CONFIG_TULIP_MWI
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_PCI == 1) && ($CONFIG_TULIP == 1 || $CONFIG_TULIP == 2) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_EXPERIMENTAL]];set CONFIG_TULIP_MWI [sync_bool $CONFIG_TULIP_MWI $tmpvar_dep 0];if {$tmpvar_dep != 1} then {configure_entry .menu36.config.f.x66 disabled {y};} else {configure_entry .menu36.config.f.x66 normal {y};}; configure_entry .menu36.config.f.x66 normal {n l}} else {configure_entry .menu36.config.f.x66 disabled {y n l}}
	global CONFIG_TULIP_MMIO
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_PCI == 1) && ($CONFIG_TULIP == 1 || $CONFIG_TULIP == 2)} then {
	configure_entry .menu36.config.f.x67 normal {n l y}} else {configure_entry .menu36.config.f.x67 disabled {y n l}}
	global CONFIG_DE4X5
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_PCI == 1) && ($CONFIG_PCI == 1 || $CONFIG_EISA == 1)} then {
	configure_entry .menu36.config.f.x68 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu36.config.f.x68 normal {m}} else {configure_entry .menu36.config.f.x68 disabled {m}}; configure_entry .menu36.config.f.x68 normal {n l}} else {configure_entry .menu36.config.f.x68 disabled {y n m l}}
	global CONFIG_DGRS
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_PCI == 1) && ($CONFIG_PCI == 1 || $CONFIG_EISA == 1)} then {
	configure_entry .menu36.config.f.x69 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu36.config.f.x69 normal {m}} else {configure_entry .menu36.config.f.x69 disabled {m}}; configure_entry .menu36.config.f.x69 normal {n l}} else {configure_entry .menu36.config.f.x69 disabled {y n m l}}
	global CONFIG_DM9102
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_PCI == 1) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PCI]];set CONFIG_DM9102 [sync_tristate $CONFIG_DM9102 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu36.config.f.x70 disabled {y}} else {configure_entry .menu36.config.f.x70 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu36.config.f.x70 disabled {m}} else {configure_entry .menu36.config.f.x70 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu36.config.f.x70 normal {m}} else {configure_entry .menu36.config.f.x70 disabled {m}}; configure_entry .menu36.config.f.x70 normal {n l}} else {configure_entry .menu36.config.f.x70 disabled {y n m l}}
	global CONFIG_EEPRO100
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_PCI == 1) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PCI]];set CONFIG_EEPRO100 [sync_tristate $CONFIG_EEPRO100 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu36.config.f.x71 disabled {y}} else {configure_entry .menu36.config.f.x71 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu36.config.f.x71 disabled {m}} else {configure_entry .menu36.config.f.x71 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu36.config.f.x71 normal {m}} else {configure_entry .menu36.config.f.x71 disabled {m}}; configure_entry .menu36.config.f.x71 normal {n l}} else {configure_entry .menu36.config.f.x71 disabled {y n m l}}
	global CONFIG_EEPRO100_PIO
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_PCI == 1) && ($CONFIG_EEPRO100 == 1 || $CONFIG_EEPRO100 == 2 || $CONFIG_EEPRO100 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_EEPRO100]];set CONFIG_EEPRO100_PIO [sync_bool $CONFIG_EEPRO100_PIO $tmpvar_dep 1];if {$tmpvar_dep != 1 && $tmpvar_dep != 2} then {configure_entry .menu36.config.f.x72 disabled {y};} else {configure_entry .menu36.config.f.x72 normal {y};}; configure_entry .menu36.config.f.x72 normal {n l}} else {configure_entry .menu36.config.f.x72 disabled {y n l}}
	global CONFIG_E100
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_PCI == 1) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PCI]];set CONFIG_E100 [sync_tristate $CONFIG_E100 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu36.config.f.x73 disabled {y}} else {configure_entry .menu36.config.f.x73 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu36.config.f.x73 disabled {m}} else {configure_entry .menu36.config.f.x73 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu36.config.f.x73 normal {m}} else {configure_entry .menu36.config.f.x73 disabled {m}}; configure_entry .menu36.config.f.x73 normal {n l}} else {configure_entry .menu36.config.f.x73 disabled {y n m l}}
	global CONFIG_LNE390
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_PCI == 1) && ($CONFIG_EISA == 1 || $CONFIG_EISA == 2 || $CONFIG_EISA == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_EISA $CONFIG_EXPERIMENTAL]];set CONFIG_LNE390 [sync_tristate $CONFIG_LNE390 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu36.config.f.x74 disabled {y}} else {configure_entry .menu36.config.f.x74 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu36.config.f.x74 disabled {m}} else {configure_entry .menu36.config.f.x74 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu36.config.f.x74 normal {m}} else {configure_entry .menu36.config.f.x74 disabled {m}}; configure_entry .menu36.config.f.x74 normal {n l}} else {configure_entry .menu36.config.f.x74 disabled {y n m l}}
	global CONFIG_FEALNX
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_PCI == 1) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PCI]];set CONFIG_FEALNX [sync_tristate $CONFIG_FEALNX $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu36.config.f.x75 disabled {y}} else {configure_entry .menu36.config.f.x75 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu36.config.f.x75 disabled {m}} else {configure_entry .menu36.config.f.x75 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu36.config.f.x75 normal {m}} else {configure_entry .menu36.config.f.x75 disabled {m}}; configure_entry .menu36.config.f.x75 normal {n l}} else {configure_entry .menu36.config.f.x75 disabled {y n m l}}
	global CONFIG_NATSEMI
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_PCI == 1) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PCI]];set CONFIG_NATSEMI [sync_tristate $CONFIG_NATSEMI $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu36.config.f.x76 disabled {y}} else {configure_entry .menu36.config.f.x76 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu36.config.f.x76 disabled {m}} else {configure_entry .menu36.config.f.x76 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu36.config.f.x76 normal {m}} else {configure_entry .menu36.config.f.x76 disabled {m}}; configure_entry .menu36.config.f.x76 normal {n l}} else {configure_entry .menu36.config.f.x76 disabled {y n m l}}
	global CONFIG_NE2K_PCI
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_PCI == 1) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PCI]];set CONFIG_NE2K_PCI [sync_tristate $CONFIG_NE2K_PCI $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu36.config.f.x77 disabled {y}} else {configure_entry .menu36.config.f.x77 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu36.config.f.x77 disabled {m}} else {configure_entry .menu36.config.f.x77 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu36.config.f.x77 normal {m}} else {configure_entry .menu36.config.f.x77 disabled {m}}; configure_entry .menu36.config.f.x77 normal {n l}} else {configure_entry .menu36.config.f.x77 disabled {y n m l}}
	global CONFIG_NE3210
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_PCI == 1) && ($CONFIG_EISA == 1 || $CONFIG_EISA == 2 || $CONFIG_EISA == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_EISA $CONFIG_EXPERIMENTAL]];set CONFIG_NE3210 [sync_tristate $CONFIG_NE3210 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu36.config.f.x78 disabled {y}} else {configure_entry .menu36.config.f.x78 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu36.config.f.x78 disabled {m}} else {configure_entry .menu36.config.f.x78 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu36.config.f.x78 normal {m}} else {configure_entry .menu36.config.f.x78 disabled {m}}; configure_entry .menu36.config.f.x78 normal {n l}} else {configure_entry .menu36.config.f.x78 disabled {y n m l}}
	global CONFIG_ES3210
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_PCI == 1) && ($CONFIG_EISA == 1 || $CONFIG_EISA == 2 || $CONFIG_EISA == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_EISA $CONFIG_EXPERIMENTAL]];set CONFIG_ES3210 [sync_tristate $CONFIG_ES3210 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu36.config.f.x79 disabled {y}} else {configure_entry .menu36.config.f.x79 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu36.config.f.x79 disabled {m}} else {configure_entry .menu36.config.f.x79 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu36.config.f.x79 normal {m}} else {configure_entry .menu36.config.f.x79 disabled {m}}; configure_entry .menu36.config.f.x79 normal {n l}} else {configure_entry .menu36.config.f.x79 disabled {y n m l}}
	global CONFIG_8139CP
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_PCI == 1) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PCI $CONFIG_EXPERIMENTAL]];set CONFIG_8139CP [sync_tristate $CONFIG_8139CP $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu36.config.f.x80 disabled {y}} else {configure_entry .menu36.config.f.x80 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu36.config.f.x80 disabled {m}} else {configure_entry .menu36.config.f.x80 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu36.config.f.x80 normal {m}} else {configure_entry .menu36.config.f.x80 disabled {m}}; configure_entry .menu36.config.f.x80 normal {n l}} else {configure_entry .menu36.config.f.x80 disabled {y n m l}}
	global CONFIG_8139CP_EXTERNAL_PHY
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_PCI == 1) && ($CONFIG_8139CP == 1 || $CONFIG_8139CP == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_8139CP $CONFIG_EXPERIMENTAL]];set CONFIG_8139CP_EXTERNAL_PHY [sync_bool $CONFIG_8139CP_EXTERNAL_PHY $tmpvar_dep 0];if {$tmpvar_dep != 1} then {configure_entry .menu36.config.f.x81 disabled {y};} else {configure_entry .menu36.config.f.x81 normal {y};}; configure_entry .menu36.config.f.x81 normal {n l}} else {configure_entry .menu36.config.f.x81 disabled {y n l}}
	global CONFIG_8139CP_PHY_NUM
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_PCI == 1) && ($CONFIG_8139CP_EXTERNAL_PHY == 1)} then {.menu36.config.f.x82.x configure -state normal -foreground [ cget .ref -foreground ]; .menu36.config.f.x82.l configure -state normal; } else {.menu36.config.f.x82.x configure -state disabled -foreground [ cget .ref -disabledforeground ]; .menu36.config.f.x82.l configure -state disabled}
	global CONFIG_8139TOO
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_PCI == 1) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PCI]];set CONFIG_8139TOO [sync_tristate $CONFIG_8139TOO $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu36.config.f.x83 disabled {y}} else {configure_entry .menu36.config.f.x83 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu36.config.f.x83 disabled {m}} else {configure_entry .menu36.config.f.x83 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu36.config.f.x83 normal {m}} else {configure_entry .menu36.config.f.x83 disabled {m}}; configure_entry .menu36.config.f.x83 normal {n l}} else {configure_entry .menu36.config.f.x83 disabled {y n m l}}
	global CONFIG_8139TOO_PIO
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_PCI == 1) && ($CONFIG_8139TOO == 1 || $CONFIG_8139TOO == 2 || $CONFIG_8139TOO == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_8139TOO]];set CONFIG_8139TOO_PIO [sync_bool $CONFIG_8139TOO_PIO $tmpvar_dep 1];if {$tmpvar_dep != 1 && $tmpvar_dep != 2} then {configure_entry .menu36.config.f.x84 disabled {y};} else {configure_entry .menu36.config.f.x84 normal {y};}; configure_entry .menu36.config.f.x84 normal {n l}} else {configure_entry .menu36.config.f.x84 disabled {y n l}}
	global CONFIG_8139TOO_TUNE_TWISTER
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_PCI == 1) && ($CONFIG_8139TOO == 1 || $CONFIG_8139TOO == 2 || $CONFIG_8139TOO == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_8139TOO]];set CONFIG_8139TOO_TUNE_TWISTER [sync_bool $CONFIG_8139TOO_TUNE_TWISTER $tmpvar_dep 1];if {$tmpvar_dep != 1 && $tmpvar_dep != 2} then {configure_entry .menu36.config.f.x85 disabled {y};} else {configure_entry .menu36.config.f.x85 normal {y};}; configure_entry .menu36.config.f.x85 normal {n l}} else {configure_entry .menu36.config.f.x85 disabled {y n l}}
	global CONFIG_8139TOO_8129
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_PCI == 1) && ($CONFIG_8139TOO == 1 || $CONFIG_8139TOO == 2 || $CONFIG_8139TOO == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_8139TOO]];set CONFIG_8139TOO_8129 [sync_bool $CONFIG_8139TOO_8129 $tmpvar_dep 1];if {$tmpvar_dep != 1 && $tmpvar_dep != 2} then {configure_entry .menu36.config.f.x86 disabled {y};} else {configure_entry .menu36.config.f.x86 normal {y};}; configure_entry .menu36.config.f.x86 normal {n l}} else {configure_entry .menu36.config.f.x86 disabled {y n l}}
	global CONFIG_8139_OLD_RX_RESET
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_PCI == 1) && ($CONFIG_8139TOO == 1 || $CONFIG_8139TOO == 2 || $CONFIG_8139TOO == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_8139TOO]];set CONFIG_8139_OLD_RX_RESET [sync_bool $CONFIG_8139_OLD_RX_RESET $tmpvar_dep 1];if {$tmpvar_dep != 1 && $tmpvar_dep != 2} then {configure_entry .menu36.config.f.x87 disabled {y};} else {configure_entry .menu36.config.f.x87 normal {y};}; configure_entry .menu36.config.f.x87 normal {n l}} else {configure_entry .menu36.config.f.x87 disabled {y n l}}
	global CONFIG_RTL8139
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_PCI == 1) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PCI]];set CONFIG_RTL8139 [sync_tristate $CONFIG_RTL8139 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu36.config.f.x88 disabled {y}} else {configure_entry .menu36.config.f.x88 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu36.config.f.x88 disabled {m}} else {configure_entry .menu36.config.f.x88 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu36.config.f.x88 normal {m}} else {configure_entry .menu36.config.f.x88 disabled {m}}; configure_entry .menu36.config.f.x88 normal {n l}} else {configure_entry .menu36.config.f.x88 disabled {y n m l}}
	global CONFIG_SIS900
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_PCI == 1) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PCI]];set CONFIG_SIS900 [sync_tristate $CONFIG_SIS900 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu36.config.f.x89 disabled {y}} else {configure_entry .menu36.config.f.x89 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu36.config.f.x89 disabled {m}} else {configure_entry .menu36.config.f.x89 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu36.config.f.x89 normal {m}} else {configure_entry .menu36.config.f.x89 disabled {m}}; configure_entry .menu36.config.f.x89 normal {n l}} else {configure_entry .menu36.config.f.x89 disabled {y n m l}}
	global CONFIG_EPIC100
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_PCI == 1) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PCI]];set CONFIG_EPIC100 [sync_tristate $CONFIG_EPIC100 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu36.config.f.x90 disabled {y}} else {configure_entry .menu36.config.f.x90 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu36.config.f.x90 disabled {m}} else {configure_entry .menu36.config.f.x90 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu36.config.f.x90 normal {m}} else {configure_entry .menu36.config.f.x90 disabled {m}}; configure_entry .menu36.config.f.x90 normal {n l}} else {configure_entry .menu36.config.f.x90 disabled {y n m l}}
	global CONFIG_SUNDANCE
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_PCI == 1) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PCI]];set CONFIG_SUNDANCE [sync_tristate $CONFIG_SUNDANCE $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu36.config.f.x91 disabled {y}} else {configure_entry .menu36.config.f.x91 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu36.config.f.x91 disabled {m}} else {configure_entry .menu36.config.f.x91 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu36.config.f.x91 normal {m}} else {configure_entry .menu36.config.f.x91 disabled {m}}; configure_entry .menu36.config.f.x91 normal {n l}} else {configure_entry .menu36.config.f.x91 disabled {y n m l}}
	global CONFIG_SUNDANCE_MMIO
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_PCI == 1) && ($CONFIG_SUNDANCE == 1 || $CONFIG_SUNDANCE == 2 || $CONFIG_SUNDANCE == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SUNDANCE]];set CONFIG_SUNDANCE_MMIO [sync_bool $CONFIG_SUNDANCE_MMIO $tmpvar_dep 1];if {$tmpvar_dep != 1 && $tmpvar_dep != 2} then {configure_entry .menu36.config.f.x92 disabled {y};} else {configure_entry .menu36.config.f.x92 normal {y};}; configure_entry .menu36.config.f.x92 normal {n l}} else {configure_entry .menu36.config.f.x92 disabled {y n l}}
	global CONFIG_TLAN
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_PCI == 1) && ($CONFIG_PCI == 1 || $CONFIG_EISA == 1)} then {
	configure_entry .menu36.config.f.x93 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu36.config.f.x93 normal {m}} else {configure_entry .menu36.config.f.x93 disabled {m}}; configure_entry .menu36.config.f.x93 normal {n l}} else {configure_entry .menu36.config.f.x93 disabled {y n m l}}
	global CONFIG_VIA_RHINE
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_PCI == 1) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PCI]];set CONFIG_VIA_RHINE [sync_tristate $CONFIG_VIA_RHINE $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu36.config.f.x94 disabled {y}} else {configure_entry .menu36.config.f.x94 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu36.config.f.x94 disabled {m}} else {configure_entry .menu36.config.f.x94 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu36.config.f.x94 normal {m}} else {configure_entry .menu36.config.f.x94 disabled {m}}; configure_entry .menu36.config.f.x94 normal {n l}} else {configure_entry .menu36.config.f.x94 disabled {y n m l}}
	global CONFIG_VIA_RHINE_FET
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_PCI == 1) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PCI]];set CONFIG_VIA_RHINE_FET [sync_tristate $CONFIG_VIA_RHINE_FET $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu36.config.f.x95 disabled {y}} else {configure_entry .menu36.config.f.x95 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu36.config.f.x95 disabled {m}} else {configure_entry .menu36.config.f.x95 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu36.config.f.x95 normal {m}} else {configure_entry .menu36.config.f.x95 disabled {m}}; configure_entry .menu36.config.f.x95 normal {n l}} else {configure_entry .menu36.config.f.x95 disabled {y n m l}}
	global CONFIG_VIA_RHINE_MMIO
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_PCI == 1) && ($CONFIG_VIA_RHINE == 1 || $CONFIG_VIA_RHINE == 2 || $CONFIG_VIA_RHINE == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_VIA_RHINE $CONFIG_EXPERIMENTAL]];set CONFIG_VIA_RHINE_MMIO [sync_bool $CONFIG_VIA_RHINE_MMIO $tmpvar_dep 1];if {$tmpvar_dep != 1 && $tmpvar_dep != 2} then {configure_entry .menu36.config.f.x96 disabled {y};} else {configure_entry .menu36.config.f.x96 normal {y};}; configure_entry .menu36.config.f.x96 normal {n l}} else {configure_entry .menu36.config.f.x96 disabled {y n l}}
	global CONFIG_WINBOND_840
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_PCI == 1) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PCI]];set CONFIG_WINBOND_840 [sync_tristate $CONFIG_WINBOND_840 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu36.config.f.x97 disabled {y}} else {configure_entry .menu36.config.f.x97 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu36.config.f.x97 disabled {m}} else {configure_entry .menu36.config.f.x97 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu36.config.f.x97 normal {m}} else {configure_entry .menu36.config.f.x97 disabled {m}}; configure_entry .menu36.config.f.x97 normal {n l}} else {configure_entry .menu36.config.f.x97 disabled {y n m l}}
	global CONFIG_ZNET
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_PCI == 1) && ($CONFIG_OBSOLETE == 1) && ($CONFIG_ISA == 1 || $CONFIG_ISA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ISA]];set CONFIG_ZNET [sync_bool $CONFIG_ZNET $tmpvar_dep 0];if {$tmpvar_dep != 1} then {configure_entry .menu36.config.f.x98 disabled {y};} else {configure_entry .menu36.config.f.x98 normal {y};}; configure_entry .menu36.config.f.x98 normal {n l}} else {configure_entry .menu36.config.f.x98 disabled {y n l}}
	global CONFIG_MIPS
	global CONFIG_LAN_SAA9730
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_PCI == 1) && ($CONFIG_EXPERIMENTAL == 1 && $CONFIG_MIPS == 1)} then {
	configure_entry .menu36.config.f.x99 normal {n l y}} else {configure_entry .menu36.config.f.x99 disabled {y n l}}
	global CONFIG_NET_POCKET
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1)} then {
	configure_entry .menu36.config.f.x100 normal {n l y}} else {configure_entry .menu36.config.f.x100 disabled {y n l}}
	global CONFIG_X86
	global CONFIG_ATP
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_POCKET == 1) && ($CONFIG_ISA == 1 && $CONFIG_X86 == 1)} then {
	configure_entry .menu36.config.f.x101 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu36.config.f.x101 normal {m}} else {configure_entry .menu36.config.f.x101 disabled {m}}; configure_entry .menu36.config.f.x101 normal {n l}} else {configure_entry .menu36.config.f.x101 disabled {y n m l}}
	global CONFIG_DE600
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_POCKET == 1) && ($CONFIG_ISA == 1 || $CONFIG_ISA == 2 || $CONFIG_ISA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ISA]];set CONFIG_DE600 [sync_tristate $CONFIG_DE600 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu36.config.f.x102 disabled {y}} else {configure_entry .menu36.config.f.x102 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu36.config.f.x102 disabled {m}} else {configure_entry .menu36.config.f.x102 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu36.config.f.x102 normal {m}} else {configure_entry .menu36.config.f.x102 disabled {m}}; configure_entry .menu36.config.f.x102 normal {n l}} else {configure_entry .menu36.config.f.x102 disabled {y n m l}}
	global CONFIG_DE620
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_POCKET == 1) && ($CONFIG_ISA == 1 || $CONFIG_ISA == 2 || $CONFIG_ISA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ISA]];set CONFIG_DE620 [sync_tristate $CONFIG_DE620 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu36.config.f.x103 disabled {y}} else {configure_entry .menu36.config.f.x103 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu36.config.f.x103 disabled {m}} else {configure_entry .menu36.config.f.x103 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu36.config.f.x103 normal {m}} else {configure_entry .menu36.config.f.x103 disabled {m}}; configure_entry .menu36.config.f.x103 normal {n l}} else {configure_entry .menu36.config.f.x103 disabled {y n m l}}
	global CONFIG_FEC
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1)} then {
	configure_entry .menu36.config.f.x104 normal {n l y}} else {configure_entry .menu36.config.f.x104 disabled {y n l}}
	global CONFIG_FEC_IOCTL
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_FEC == 1) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_EXPERIMENTAL]];set CONFIG_FEC_IOCTL [sync_bool $CONFIG_FEC_IOCTL $tmpvar_dep 1];if {$tmpvar_dep != 1 && $tmpvar_dep != 2} then {configure_entry .menu36.config.f.x105 disabled {y};} else {configure_entry .menu36.config.f.x105 normal {y};}; configure_entry .menu36.config.f.x105 normal {n l}} else {configure_entry .menu36.config.f.x105 disabled {y n l}}
	global CONFIG_BOARD_UC5272
	global CONFIG_UC5272_PHY_INT
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_FEC == 1) && ($CONFIG_BOARD_UC5272 == 1 || $CONFIG_BOARD_UC5272 == 2 || $CONFIG_BOARD_UC5272 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BOARD_UC5272]];set CONFIG_UC5272_PHY_INT [sync_bool $CONFIG_UC5272_PHY_INT $tmpvar_dep 1];if {$tmpvar_dep != 1 && $tmpvar_dep != 2} then {configure_entry .menu36.config.f.x106 disabled {y};} else {configure_entry .menu36.config.f.x106 normal {y};}; configure_entry .menu36.config.f.x106 normal {n l}} else {configure_entry .menu36.config.f.x106 disabled {y n l}}
	global CONFIG_FEC_KS8995M
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_FEC == 1)} then {
	configure_entry .menu36.config.f.x107 normal {n l y}} else {configure_entry .menu36.config.f.x107 disabled {y n l}}
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_FEC == 1) && ($CONFIG_FEC_KS8995M == 1)} then {configure_entry .menu36.config.f.x108 normal {x l}} else {configure_entry .menu36.config.f.x108 disabled {x l}}
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1)} then {
	configure_entry .menu36.config.f.x109 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu36.config.f.x109 normal {m}} else {configure_entry .menu36.config.f.x109 disabled {m}}; configure_entry .menu36.config.f.x109 normal {n l}} else {configure_entry .menu36.config.f.x109 disabled {y n m l}}
	global CONFIG_UCCS8900
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1)} then {
	configure_entry .menu36.config.f.x110 normal {n l y}} else {configure_entry .menu36.config.f.x110 disabled {y n l}}
	global CONFIG_UCCS89x0_HW_SWAP
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_CS89x0 == 1 || $CONFIG_UCCS8900 == 1)} then {
	configure_entry .menu36.config.f.x111 normal {n l y}} else {configure_entry .menu36.config.f.x111 disabled {y n l}}
	global CONFIG_UCBOOTSTRAP
	global CS8900A_HWADDR
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_UCCS8900 == 1 && $CONFIG_UCBOOTSTRAP != 1)} then {.menu36.config.f.x112.x configure -state normal -foreground [ cget .ref -foreground ]; .menu36.config.f.x112.l configure -state normal; } else {.menu36.config.f.x112.x configure -state disabled -foreground [ cget .ref -disabledforeground ]; .menu36.config.f.x112.l configure -state disabled}
}


proc update_define_menu36 {} {
	update_define_mainmenu
	global CONFIG_MODULES
	global CONFIG_KS8695
	global CONFIG_ARM_CIRRUS
	global CONFIG_ARM_ETHER1
	global CONFIG_ARM_ETHER3
	global CONFIG_ARM_ETHERH
	global CONFIG_ETHER00
	global CONFIG_HAPPYMEAL
	global CONFIG_EL3
	global CONFIG_3C515
	global CONFIG_VORTEX
	global CONFIG_TYPHOON
	global CONFIG_SMC91111
	global CONFIG_DEPCA
	global CONFIG_HP100
	global CONFIG_E2100
	global CONFIG_EWRK3
	global CONFIG_EEXPRESS
	global CONFIG_EEXPRESS_PRO
	global CONFIG_FMV18X
	global CONFIG_HPLAN_PLUS
	global CONFIG_HPLAN
	global CONFIG_LP486E
	global CONFIG_ETH16I
	global CONFIG_NE2000
	global CONFIG_SK_G16
	global CONFIG_SKMC
	global CONFIG_NE2_MCA
	global CONFIG_IBMLANA
	global CONFIG_NET_PCI
	global CONFIG_DE4X5
	global CONFIG_DGRS
	global CONFIG_8139CP_PHY_NUM
	global CONFIG_TLAN
	global CONFIG_ATP
	global CONFIG_CS89x0
	global CONFIG_NET_ETHERNET
set CONFIG_NET_ETHERNET [expr $CONFIG_NET_ETHERNET|16]
set CONFIG_KS8695 [expr $CONFIG_KS8695|16]
	global CONFIG_CSUM_UNNECESSARY
set CONFIG_CSUM_UNNECESSARY [expr $CONFIG_CSUM_UNNECESSARY|16]
set CONFIG_ARM_CIRRUS [expr $CONFIG_ARM_CIRRUS|16]
set CONFIG_ARM_ETHER1 [expr $CONFIG_ARM_ETHER1|16]
set CONFIG_ARM_ETHER3 [expr $CONFIG_ARM_ETHER3|16]
set CONFIG_ARM_ETHERH [expr $CONFIG_ARM_ETHERH|16]
set CONFIG_ETHER00 [expr $CONFIG_ETHER00|16]
set CONFIG_HAPPYMEAL [expr $CONFIG_HAPPYMEAL|16]
	global CONFIG_NET_VENDOR_3COM
set CONFIG_NET_VENDOR_3COM [expr $CONFIG_NET_VENDOR_3COM|16]
set CONFIG_EL3 [expr $CONFIG_EL3|16]
set CONFIG_3C515 [expr $CONFIG_3C515|16]
set CONFIG_VORTEX [expr $CONFIG_VORTEX|16]
set CONFIG_TYPHOON [expr $CONFIG_TYPHOON|16]
	global CONFIG_NET_VENDOR_SMC
set CONFIG_NET_VENDOR_SMC [expr $CONFIG_NET_VENDOR_SMC|16]
set CONFIG_SMC91111 [expr $CONFIG_SMC91111|16]
	global CONFIG_NET_VENDOR_RACAL
set CONFIG_NET_VENDOR_RACAL [expr $CONFIG_NET_VENDOR_RACAL|16]
set CONFIG_DEPCA [expr $CONFIG_DEPCA|16]
set CONFIG_HP100 [expr $CONFIG_HP100|16]
set CONFIG_E2100 [expr $CONFIG_E2100|16]
set CONFIG_EWRK3 [expr $CONFIG_EWRK3|16]
set CONFIG_EEXPRESS [expr $CONFIG_EEXPRESS|16]
set CONFIG_EEXPRESS_PRO [expr $CONFIG_EEXPRESS_PRO|16]
set CONFIG_FMV18X [expr $CONFIG_FMV18X|16]
set CONFIG_HPLAN_PLUS [expr $CONFIG_HPLAN_PLUS|16]
set CONFIG_HPLAN [expr $CONFIG_HPLAN|16]
set CONFIG_LP486E [expr $CONFIG_LP486E|16]
set CONFIG_ETH16I [expr $CONFIG_ETH16I|16]
set CONFIG_NE2000 [expr $CONFIG_NE2000|16]
set CONFIG_SK_G16 [expr $CONFIG_SK_G16|16]
set CONFIG_SKMC [expr $CONFIG_SKMC|16]
set CONFIG_NE2_MCA [expr $CONFIG_NE2_MCA|16]
set CONFIG_IBMLANA [expr $CONFIG_IBMLANA|16]
set CONFIG_NET_PCI [expr $CONFIG_NET_PCI|16]
	global CONFIG_TULIP_MMIO
set CONFIG_TULIP_MMIO [expr $CONFIG_TULIP_MMIO|16]
set CONFIG_DE4X5 [expr $CONFIG_DE4X5|16]
set CONFIG_DGRS [expr $CONFIG_DGRS|16]
set CONFIG_TLAN [expr $CONFIG_TLAN|16]
	global CONFIG_LAN_SAA9730
set CONFIG_LAN_SAA9730 [expr $CONFIG_LAN_SAA9730|16]
	global CONFIG_NET_POCKET
set CONFIG_NET_POCKET [expr $CONFIG_NET_POCKET|16]
set CONFIG_ATP [expr $CONFIG_ATP|16]
	global CONFIG_FEC
set CONFIG_FEC [expr $CONFIG_FEC|16]
	global CONFIG_FEC_KS8995M
set CONFIG_FEC_KS8995M [expr $CONFIG_FEC_KS8995M|16]
set CONFIG_CS89x0 [expr $CONFIG_CS89x0|16]
	global CONFIG_UCCS8900
set CONFIG_UCCS8900 [expr $CONFIG_UCCS8900|16]
	global CONFIG_UCCS89x0_HW_SWAP
set CONFIG_UCCS89x0_HW_SWAP [expr $CONFIG_UCCS89x0_HW_SWAP|16]
	global CONFIG_NET
	global CONFIG_NETDEVICES
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1)} then {
	set CONFIG_NET_ETHERNET [expr $CONFIG_NET_ETHERNET&15]}
	global CONFIG_ARCH_IXP425
	global CONFIG_IXP425_CSR
	global CONFIG_IXP425_ETH
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_ARCH_IXP425 == 1) && ($CONFIG_IXP425_CSR == 1 || $CONFIG_IXP425_CSR == 2 || $CONFIG_IXP425_CSR == 4)} then {
	global CONSTANT_M
	set tmpvar_dep [effective_dep [list $CONFIG_IXP425_CSR $CONSTANT_M]]; set CONFIG_IXP425_ETH [sync_tristate $CONFIG_IXP425_ETH $tmpvar_dep]; set CONFIG_IXP425_ETH [expr $CONFIG_IXP425_ETH&15]}
	global CONFIG_ARM
	global CONFIG_ARCH_KS8695
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_ARM == 1) && ($CONFIG_ARCH_KS8695 == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_KS8695 == 2)} then {set CONFIG_KS8695 1}; set CONFIG_KS8695 [expr $CONFIG_KS8695&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_ARM == 1) && ($CONFIG_ARCH_KS8695 == 1) && ($CONFIG_KS8695 == 1 || $CONFIG_KS8695 == 2)} then {
	set CONFIG_CSUM_UNNECESSARY [expr $CONFIG_CSUM_UNNECESSARY&15]}
	global CONFIG_ARCH_EBSA110
	global CONFIG_ARM_AM79C961A
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_ARM == 1) && ($CONFIG_ARCH_EBSA110 == 1 || $CONFIG_ARCH_EBSA110 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ARCH_EBSA110]];set CONFIG_ARM_AM79C961A [sync_bool $CONFIG_ARM_AM79C961A $tmpvar_dep 0];set CONFIG_ARM_AM79C961A [expr $CONFIG_ARM_AM79C961A&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_ARM == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_ARM_CIRRUS == 2)} then {set CONFIG_ARM_CIRRUS 1}; set CONFIG_ARM_CIRRUS [expr $CONFIG_ARM_CIRRUS&15]}
	global CONFIG_ARCH_ACORN
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_ARM == 1) && ($CONFIG_ARCH_ACORN == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_ARM_ETHER1 == 2)} then {set CONFIG_ARM_ETHER1 1}; set CONFIG_ARM_ETHER1 [expr $CONFIG_ARM_ETHER1&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_ARM == 1) && ($CONFIG_ARCH_ACORN == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_ARM_ETHER3 == 2)} then {set CONFIG_ARM_ETHER3 1}; set CONFIG_ARM_ETHER3 [expr $CONFIG_ARM_ETHER3&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_ARM == 1) && ($CONFIG_ARCH_ACORN == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_ARM_ETHERH == 2)} then {set CONFIG_ARM_ETHERH 1}; set CONFIG_ARM_ETHERH [expr $CONFIG_ARM_ETHERH&15]}
	global CONFIG_ARCH_CAMELOT
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_ARCH_CAMELOT == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_ETHER00 == 2)} then {set CONFIG_ETHER00 1}; set CONFIG_ETHER00 [expr $CONFIG_ETHER00&15]}
	global CONFIG_SBUS
	global CONFIG_SUNLANCE
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_SBUS == 1 || $CONFIG_SBUS == 2 || $CONFIG_SBUS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SBUS]]; set CONFIG_SUNLANCE [sync_tristate $CONFIG_SUNLANCE $tmpvar_dep]; set CONFIG_SUNLANCE [expr $CONFIG_SUNLANCE&15]}
	global CONFIG_PCI
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_SBUS == 1 || $CONFIG_PCI == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_HAPPYMEAL == 2)} then {set CONFIG_HAPPYMEAL 1}; set CONFIG_HAPPYMEAL [expr $CONFIG_HAPPYMEAL&15]}
	global CONFIG_EXPERIMENTAL
	global CONFIG_SUNBMAC
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_SBUS == 1 || $CONFIG_SBUS == 2 || $CONFIG_SBUS == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SBUS $CONFIG_EXPERIMENTAL]]; set CONFIG_SUNBMAC [sync_tristate $CONFIG_SUNBMAC $tmpvar_dep]; set CONFIG_SUNBMAC [expr $CONFIG_SUNBMAC&15]}
	global CONFIG_SUNQE
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_SBUS == 1 || $CONFIG_SBUS == 2 || $CONFIG_SBUS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SBUS]]; set CONFIG_SUNQE [sync_tristate $CONFIG_SUNQE $tmpvar_dep]; set CONFIG_SUNQE [expr $CONFIG_SUNQE&15]}
	global CONFIG_SUNGEM
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PCI]]; set CONFIG_SUNGEM [sync_tristate $CONFIG_SUNGEM $tmpvar_dep]; set CONFIG_SUNGEM [expr $CONFIG_SUNGEM&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1)} then {
	set CONFIG_NET_VENDOR_3COM [expr $CONFIG_NET_VENDOR_3COM&15]}
	global CONFIG_ISA
	global CONFIG_EL1
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_VENDOR_3COM == 1) && ($CONFIG_ISA == 1 || $CONFIG_ISA == 2 || $CONFIG_ISA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ISA]]; set CONFIG_EL1 [sync_tristate $CONFIG_EL1 $tmpvar_dep]; set CONFIG_EL1 [expr $CONFIG_EL1&15]}
	global CONFIG_EL2
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_VENDOR_3COM == 1) && ($CONFIG_ISA == 1 || $CONFIG_ISA == 2 || $CONFIG_ISA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ISA]]; set CONFIG_EL2 [sync_tristate $CONFIG_EL2 $tmpvar_dep]; set CONFIG_EL2 [expr $CONFIG_EL2&15]}
	global CONFIG_ELPLUS
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_VENDOR_3COM == 1) && ($CONFIG_ISA == 1 || $CONFIG_ISA == 2 || $CONFIG_ISA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ISA]]; set CONFIG_ELPLUS [sync_tristate $CONFIG_ELPLUS $tmpvar_dep]; set CONFIG_ELPLUS [expr $CONFIG_ELPLUS&15]}
	global CONFIG_EL16
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_VENDOR_3COM == 1) && ($CONFIG_ISA == 1 || $CONFIG_ISA == 2 || $CONFIG_ISA == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ISA $CONFIG_EXPERIMENTAL]]; set CONFIG_EL16 [sync_tristate $CONFIG_EL16 $tmpvar_dep]; set CONFIG_EL16 [expr $CONFIG_EL16&15]}
	global CONFIG_EISA
	global CONFIG_MCA
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_VENDOR_3COM == 1) && ($CONFIG_ISA == 1 || $CONFIG_EISA == 1 || $CONFIG_MCA == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_EL3 == 2)} then {set CONFIG_EL3 1}; set CONFIG_EL3 [expr $CONFIG_EL3&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_VENDOR_3COM == 1) && ($CONFIG_ISA == 1 || $CONFIG_EISA == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_3C515 == 2)} then {set CONFIG_3C515 1}; set CONFIG_3C515 [expr $CONFIG_3C515&15]}
	global CONFIG_ELMC
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_VENDOR_3COM == 1) && ($CONFIG_MCA == 1 || $CONFIG_MCA == 2 || $CONFIG_MCA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_MCA]]; set CONFIG_ELMC [sync_tristate $CONFIG_ELMC $tmpvar_dep]; set CONFIG_ELMC [expr $CONFIG_ELMC&15]}
	global CONFIG_ELMC_II
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_VENDOR_3COM == 1) && ($CONFIG_MCA == 1 || $CONFIG_MCA == 2 || $CONFIG_MCA == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_MCA $CONFIG_EXPERIMENTAL]]; set CONFIG_ELMC_II [sync_tristate $CONFIG_ELMC_II $tmpvar_dep]; set CONFIG_ELMC_II [expr $CONFIG_ELMC_II&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_VENDOR_3COM == 1) && ($CONFIG_PCI == 1 || $CONFIG_EISA == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_VORTEX == 2)} then {set CONFIG_VORTEX 1}; set CONFIG_VORTEX [expr $CONFIG_VORTEX&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_VENDOR_3COM == 1) && ($CONFIG_PCI == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_TYPHOON == 2)} then {set CONFIG_TYPHOON 1}; set CONFIG_TYPHOON [expr $CONFIG_TYPHOON&15]}
	global CONFIG_LANCE
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_ISA == 1 || $CONFIG_ISA == 2 || $CONFIG_ISA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ISA]]; set CONFIG_LANCE [sync_tristate $CONFIG_LANCE $tmpvar_dep]; set CONFIG_LANCE [expr $CONFIG_LANCE&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1)} then {
	set CONFIG_NET_VENDOR_SMC [expr $CONFIG_NET_VENDOR_SMC&15]}
	global CONFIG_WD80x3
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_VENDOR_SMC == 1) && ($CONFIG_ISA == 1 || $CONFIG_ISA == 2 || $CONFIG_ISA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ISA]]; set CONFIG_WD80x3 [sync_tristate $CONFIG_WD80x3 $tmpvar_dep]; set CONFIG_WD80x3 [expr $CONFIG_WD80x3&15]}
	global CONFIG_ULTRAMCA
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_VENDOR_SMC == 1) && ($CONFIG_MCA == 1 || $CONFIG_MCA == 2 || $CONFIG_MCA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_MCA]]; set CONFIG_ULTRAMCA [sync_tristate $CONFIG_ULTRAMCA $tmpvar_dep]; set CONFIG_ULTRAMCA [expr $CONFIG_ULTRAMCA&15]}
	global CONFIG_ULTRA
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_VENDOR_SMC == 1) && ($CONFIG_ISA == 1 || $CONFIG_ISA == 2 || $CONFIG_ISA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ISA]]; set CONFIG_ULTRA [sync_tristate $CONFIG_ULTRA $tmpvar_dep]; set CONFIG_ULTRA [expr $CONFIG_ULTRA&15]}
	global CONFIG_ULTRA32
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_VENDOR_SMC == 1) && ($CONFIG_EISA == 1 || $CONFIG_EISA == 2 || $CONFIG_EISA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_EISA]]; set CONFIG_ULTRA32 [sync_tristate $CONFIG_ULTRA32 $tmpvar_dep]; set CONFIG_ULTRA32 [expr $CONFIG_ULTRA32&15]}
	global CONFIG_SMC9194
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_VENDOR_SMC == 1) && ($CONFIG_ISA == 1 || $CONFIG_ISA == 2 || $CONFIG_ISA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ISA]]; set CONFIG_SMC9194 [sync_tristate $CONFIG_SMC9194 $tmpvar_dep]; set CONFIG_SMC9194 [expr $CONFIG_SMC9194&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_VENDOR_SMC == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_SMC91111 == 2)} then {set CONFIG_SMC91111 1}; set CONFIG_SMC91111 [expr $CONFIG_SMC91111&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1)} then {
	set CONFIG_NET_VENDOR_RACAL [expr $CONFIG_NET_VENDOR_RACAL&15]}
	global CONFIG_NI5010
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_VENDOR_RACAL == 1) && ($CONFIG_ISA == 1 || $CONFIG_ISA == 2 || $CONFIG_ISA == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ISA $CONFIG_EXPERIMENTAL]]; set CONFIG_NI5010 [sync_tristate $CONFIG_NI5010 $tmpvar_dep]; set CONFIG_NI5010 [expr $CONFIG_NI5010&15]}
	global CONFIG_NI52
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_VENDOR_RACAL == 1) && ($CONFIG_ISA == 1 || $CONFIG_ISA == 2 || $CONFIG_ISA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ISA]]; set CONFIG_NI52 [sync_tristate $CONFIG_NI52 $tmpvar_dep]; set CONFIG_NI52 [expr $CONFIG_NI52&15]}
	global CONFIG_NI65
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_VENDOR_RACAL == 1) && ($CONFIG_ISA == 1 || $CONFIG_ISA == 2 || $CONFIG_ISA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ISA]]; set CONFIG_NI65 [sync_tristate $CONFIG_NI65 $tmpvar_dep]; set CONFIG_NI65 [expr $CONFIG_NI65&15]}
	global CONFIG_AT1700
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_ISA == 1 || $CONFIG_MCA == 1) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_EXPERIMENTAL]]; set CONFIG_AT1700 [sync_tristate $CONFIG_AT1700 $tmpvar_dep]; set CONFIG_AT1700 [expr $CONFIG_AT1700&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_ISA == 1 || $CONFIG_EISA == 1 || $CONFIG_MCA == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_DEPCA == 2)} then {set CONFIG_DEPCA 1}; set CONFIG_DEPCA [expr $CONFIG_DEPCA&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_ISA == 1 || $CONFIG_EISA == 1 || $CONFIG_PCI == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_HP100 == 2)} then {set CONFIG_HP100 1}; set CONFIG_HP100 [expr $CONFIG_HP100&15]}
	global CONFIG_NET_ISA
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_ISA == 1 || $CONFIG_ISA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ISA]];set CONFIG_NET_ISA [sync_bool $CONFIG_NET_ISA $tmpvar_dep 0];set CONFIG_NET_ISA [expr $CONFIG_NET_ISA&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_ISA == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_E2100 == 2)} then {set CONFIG_E2100 1}; set CONFIG_E2100 [expr $CONFIG_E2100&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_ISA == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_EWRK3 == 2)} then {set CONFIG_EWRK3 1}; set CONFIG_EWRK3 [expr $CONFIG_EWRK3&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_ISA == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_EEXPRESS == 2)} then {set CONFIG_EEXPRESS 1}; set CONFIG_EEXPRESS [expr $CONFIG_EEXPRESS&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_ISA == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_EEXPRESS_PRO == 2)} then {set CONFIG_EEXPRESS_PRO 1}; set CONFIG_EEXPRESS_PRO [expr $CONFIG_EEXPRESS_PRO&15]}
	global CONFIG_OBSOLETE
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_ISA == 1) && ($CONFIG_OBSOLETE == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_FMV18X == 2)} then {set CONFIG_FMV18X 1}; set CONFIG_FMV18X [expr $CONFIG_FMV18X&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_ISA == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_HPLAN_PLUS == 2)} then {set CONFIG_HPLAN_PLUS 1}; set CONFIG_HPLAN_PLUS [expr $CONFIG_HPLAN_PLUS&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_ISA == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_HPLAN == 2)} then {set CONFIG_HPLAN 1}; set CONFIG_HPLAN [expr $CONFIG_HPLAN&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_ISA == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_LP486E == 2)} then {set CONFIG_LP486E 1}; set CONFIG_LP486E [expr $CONFIG_LP486E&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_ISA == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_ETH16I == 2)} then {set CONFIG_ETH16I 1}; set CONFIG_ETH16I [expr $CONFIG_ETH16I&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_ISA == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_NE2000 == 2)} then {set CONFIG_NE2000 1}; set CONFIG_NE2000 [expr $CONFIG_NE2000&15]}
	global CONFIG_SEEQ8005
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_ISA == 1) && ($CONFIG_OBSOLETE == 1) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_EXPERIMENTAL]]; set CONFIG_SEEQ8005 [sync_tristate $CONFIG_SEEQ8005 $tmpvar_dep]; set CONFIG_SEEQ8005 [expr $CONFIG_SEEQ8005&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_ISA == 1) && ($CONFIG_OBSOLETE == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_SK_G16 == 2)} then {set CONFIG_SK_G16 1}; set CONFIG_SK_G16 [expr $CONFIG_SK_G16&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_MCA == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_SKMC == 2)} then {set CONFIG_SKMC 1}; set CONFIG_SKMC [expr $CONFIG_SKMC&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_MCA == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_NE2_MCA == 2)} then {set CONFIG_NE2_MCA 1}; set CONFIG_NE2_MCA [expr $CONFIG_NE2_MCA&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_MCA == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_IBMLANA == 2)} then {set CONFIG_IBMLANA 1}; set CONFIG_IBMLANA [expr $CONFIG_IBMLANA&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_ISA == 1 || $CONFIG_EISA == 1 || $CONFIG_PCI == 1)} then {
	set CONFIG_NET_PCI [expr $CONFIG_NET_PCI&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_ISA != 1 && $CONFIG_EISA != 1 && $CONFIG_PCI != 1)} then {	global CONSTANT_N
set CONFIG_NET_PCI $CONSTANT_N }
	global CONFIG_PCNET32
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_PCI == 1) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PCI]]; set CONFIG_PCNET32 [sync_tristate $CONFIG_PCNET32 $tmpvar_dep]; set CONFIG_PCNET32 [expr $CONFIG_PCNET32&15]}
	global CONFIG_AMD8111_ETH
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_PCI == 1) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PCI]]; set CONFIG_AMD8111_ETH [sync_tristate $CONFIG_AMD8111_ETH $tmpvar_dep]; set CONFIG_AMD8111_ETH [expr $CONFIG_AMD8111_ETH&15]}
	global CONFIG_ADAPTEC_STARFIRE
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_PCI == 1) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PCI]]; set CONFIG_ADAPTEC_STARFIRE [sync_tristate $CONFIG_ADAPTEC_STARFIRE $tmpvar_dep]; set CONFIG_ADAPTEC_STARFIRE [expr $CONFIG_ADAPTEC_STARFIRE&15]}
	global CONFIG_AC3200
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_PCI == 1) && ($CONFIG_ISA == 1 || $CONFIG_EISA == 1) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_EXPERIMENTAL]]; set CONFIG_AC3200 [sync_tristate $CONFIG_AC3200 $tmpvar_dep]; set CONFIG_AC3200 [expr $CONFIG_AC3200&15]}
	global CONFIG_APRICOT
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_PCI == 1) && ($CONFIG_ISA == 1 || $CONFIG_ISA == 2 || $CONFIG_ISA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ISA]]; set CONFIG_APRICOT [sync_tristate $CONFIG_APRICOT $tmpvar_dep]; set CONFIG_APRICOT [expr $CONFIG_APRICOT&15]}
	global CONFIG_B44
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_PCI == 1) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PCI $CONFIG_EXPERIMENTAL]]; set CONFIG_B44 [sync_tristate $CONFIG_B44 $tmpvar_dep]; set CONFIG_B44 [expr $CONFIG_B44&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_PCI == 1) && ($CONFIG_ISA == 1 || $CONFIG_ISA == 2 || $CONFIG_ISA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ISA]]; set CONFIG_CS89x0 [sync_tristate $CONFIG_CS89x0 $tmpvar_dep]; set CONFIG_CS89x0 [expr $CONFIG_CS89x0&15]}
	global CONFIG_TULIP
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_PCI == 1) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PCI]]; set CONFIG_TULIP [sync_tristate $CONFIG_TULIP $tmpvar_dep]; set CONFIG_TULIP [expr $CONFIG_TULIP&15]}
	global CONFIG_TULIP_MWI
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_PCI == 1) && ($CONFIG_TULIP == 1 || $CONFIG_TULIP == 2) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_EXPERIMENTAL]];set CONFIG_TULIP_MWI [sync_bool $CONFIG_TULIP_MWI $tmpvar_dep 0];set CONFIG_TULIP_MWI [expr $CONFIG_TULIP_MWI&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_PCI == 1) && ($CONFIG_TULIP == 1 || $CONFIG_TULIP == 2)} then {
	set CONFIG_TULIP_MMIO [expr $CONFIG_TULIP_MMIO&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_PCI == 1) && ($CONFIG_PCI == 1 || $CONFIG_EISA == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_DE4X5 == 2)} then {set CONFIG_DE4X5 1}; set CONFIG_DE4X5 [expr $CONFIG_DE4X5&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_PCI == 1) && ($CONFIG_PCI == 1 || $CONFIG_EISA == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_DGRS == 2)} then {set CONFIG_DGRS 1}; set CONFIG_DGRS [expr $CONFIG_DGRS&15]}
	global CONFIG_DM9102
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_PCI == 1) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PCI]]; set CONFIG_DM9102 [sync_tristate $CONFIG_DM9102 $tmpvar_dep]; set CONFIG_DM9102 [expr $CONFIG_DM9102&15]}
	global CONFIG_EEPRO100
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_PCI == 1) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PCI]]; set CONFIG_EEPRO100 [sync_tristate $CONFIG_EEPRO100 $tmpvar_dep]; set CONFIG_EEPRO100 [expr $CONFIG_EEPRO100&15]}
	global CONFIG_EEPRO100_PIO
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_PCI == 1) && ($CONFIG_EEPRO100 == 1 || $CONFIG_EEPRO100 == 2 || $CONFIG_EEPRO100 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_EEPRO100]];set CONFIG_EEPRO100_PIO [sync_bool $CONFIG_EEPRO100_PIO $tmpvar_dep 1];set CONFIG_EEPRO100_PIO [expr $CONFIG_EEPRO100_PIO&15]}
	global CONFIG_E100
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_PCI == 1) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PCI]]; set CONFIG_E100 [sync_tristate $CONFIG_E100 $tmpvar_dep]; set CONFIG_E100 [expr $CONFIG_E100&15]}
	global CONFIG_LNE390
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_PCI == 1) && ($CONFIG_EISA == 1 || $CONFIG_EISA == 2 || $CONFIG_EISA == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_EISA $CONFIG_EXPERIMENTAL]]; set CONFIG_LNE390 [sync_tristate $CONFIG_LNE390 $tmpvar_dep]; set CONFIG_LNE390 [expr $CONFIG_LNE390&15]}
	global CONFIG_FEALNX
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_PCI == 1) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PCI]]; set CONFIG_FEALNX [sync_tristate $CONFIG_FEALNX $tmpvar_dep]; set CONFIG_FEALNX [expr $CONFIG_FEALNX&15]}
	global CONFIG_NATSEMI
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_PCI == 1) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PCI]]; set CONFIG_NATSEMI [sync_tristate $CONFIG_NATSEMI $tmpvar_dep]; set CONFIG_NATSEMI [expr $CONFIG_NATSEMI&15]}
	global CONFIG_NE2K_PCI
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_PCI == 1) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PCI]]; set CONFIG_NE2K_PCI [sync_tristate $CONFIG_NE2K_PCI $tmpvar_dep]; set CONFIG_NE2K_PCI [expr $CONFIG_NE2K_PCI&15]}
	global CONFIG_NE3210
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_PCI == 1) && ($CONFIG_EISA == 1 || $CONFIG_EISA == 2 || $CONFIG_EISA == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_EISA $CONFIG_EXPERIMENTAL]]; set CONFIG_NE3210 [sync_tristate $CONFIG_NE3210 $tmpvar_dep]; set CONFIG_NE3210 [expr $CONFIG_NE3210&15]}
	global CONFIG_ES3210
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_PCI == 1) && ($CONFIG_EISA == 1 || $CONFIG_EISA == 2 || $CONFIG_EISA == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_EISA $CONFIG_EXPERIMENTAL]]; set CONFIG_ES3210 [sync_tristate $CONFIG_ES3210 $tmpvar_dep]; set CONFIG_ES3210 [expr $CONFIG_ES3210&15]}
	global CONFIG_8139CP
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_PCI == 1) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PCI $CONFIG_EXPERIMENTAL]]; set CONFIG_8139CP [sync_tristate $CONFIG_8139CP $tmpvar_dep]; set CONFIG_8139CP [expr $CONFIG_8139CP&15]}
	global CONFIG_8139CP_EXTERNAL_PHY
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_PCI == 1) && ($CONFIG_8139CP == 1 || $CONFIG_8139CP == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_8139CP $CONFIG_EXPERIMENTAL]];set CONFIG_8139CP_EXTERNAL_PHY [sync_bool $CONFIG_8139CP_EXTERNAL_PHY $tmpvar_dep 0];set CONFIG_8139CP_EXTERNAL_PHY [expr $CONFIG_8139CP_EXTERNAL_PHY&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_PCI == 1) && ($CONFIG_8139CP_EXTERNAL_PHY == 1)} then {validate_int CONFIG_8139CP_PHY_NUM "$CONFIG_8139CP_PHY_NUM" 32}
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_PCI == 1) && ($CONFIG_8139CP_EXTERNAL_PHY != 1)} then {set CONFIG_8139CP_PHY_NUM 32 }
	global CONFIG_8139TOO
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_PCI == 1) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PCI]]; set CONFIG_8139TOO [sync_tristate $CONFIG_8139TOO $tmpvar_dep]; set CONFIG_8139TOO [expr $CONFIG_8139TOO&15]}
	global CONFIG_8139TOO_PIO
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_PCI == 1) && ($CONFIG_8139TOO == 1 || $CONFIG_8139TOO == 2 || $CONFIG_8139TOO == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_8139TOO]];set CONFIG_8139TOO_PIO [sync_bool $CONFIG_8139TOO_PIO $tmpvar_dep 1];set CONFIG_8139TOO_PIO [expr $CONFIG_8139TOO_PIO&15]}
	global CONFIG_8139TOO_TUNE_TWISTER
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_PCI == 1) && ($CONFIG_8139TOO == 1 || $CONFIG_8139TOO == 2 || $CONFIG_8139TOO == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_8139TOO]];set CONFIG_8139TOO_TUNE_TWISTER [sync_bool $CONFIG_8139TOO_TUNE_TWISTER $tmpvar_dep 1];set CONFIG_8139TOO_TUNE_TWISTER [expr $CONFIG_8139TOO_TUNE_TWISTER&15]}
	global CONFIG_8139TOO_8129
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_PCI == 1) && ($CONFIG_8139TOO == 1 || $CONFIG_8139TOO == 2 || $CONFIG_8139TOO == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_8139TOO]];set CONFIG_8139TOO_8129 [sync_bool $CONFIG_8139TOO_8129 $tmpvar_dep 1];set CONFIG_8139TOO_8129 [expr $CONFIG_8139TOO_8129&15]}
	global CONFIG_8139_OLD_RX_RESET
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_PCI == 1) && ($CONFIG_8139TOO == 1 || $CONFIG_8139TOO == 2 || $CONFIG_8139TOO == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_8139TOO]];set CONFIG_8139_OLD_RX_RESET [sync_bool $CONFIG_8139_OLD_RX_RESET $tmpvar_dep 1];set CONFIG_8139_OLD_RX_RESET [expr $CONFIG_8139_OLD_RX_RESET&15]}
	global CONFIG_RTL8139
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_PCI == 1) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PCI]]; set CONFIG_RTL8139 [sync_tristate $CONFIG_RTL8139 $tmpvar_dep]; set CONFIG_RTL8139 [expr $CONFIG_RTL8139&15]}
	global CONFIG_SIS900
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_PCI == 1) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PCI]]; set CONFIG_SIS900 [sync_tristate $CONFIG_SIS900 $tmpvar_dep]; set CONFIG_SIS900 [expr $CONFIG_SIS900&15]}
	global CONFIG_EPIC100
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_PCI == 1) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PCI]]; set CONFIG_EPIC100 [sync_tristate $CONFIG_EPIC100 $tmpvar_dep]; set CONFIG_EPIC100 [expr $CONFIG_EPIC100&15]}
	global CONFIG_SUNDANCE
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_PCI == 1) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PCI]]; set CONFIG_SUNDANCE [sync_tristate $CONFIG_SUNDANCE $tmpvar_dep]; set CONFIG_SUNDANCE [expr $CONFIG_SUNDANCE&15]}
	global CONFIG_SUNDANCE_MMIO
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_PCI == 1) && ($CONFIG_SUNDANCE == 1 || $CONFIG_SUNDANCE == 2 || $CONFIG_SUNDANCE == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SUNDANCE]];set CONFIG_SUNDANCE_MMIO [sync_bool $CONFIG_SUNDANCE_MMIO $tmpvar_dep 1];set CONFIG_SUNDANCE_MMIO [expr $CONFIG_SUNDANCE_MMIO&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_PCI == 1) && ($CONFIG_PCI == 1 || $CONFIG_EISA == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_TLAN == 2)} then {set CONFIG_TLAN 1}; set CONFIG_TLAN [expr $CONFIG_TLAN&15]}
	global CONFIG_VIA_RHINE
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_PCI == 1) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PCI]]; set CONFIG_VIA_RHINE [sync_tristate $CONFIG_VIA_RHINE $tmpvar_dep]; set CONFIG_VIA_RHINE [expr $CONFIG_VIA_RHINE&15]}
	global CONFIG_VIA_RHINE_FET
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_PCI == 1) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PCI]]; set CONFIG_VIA_RHINE_FET [sync_tristate $CONFIG_VIA_RHINE_FET $tmpvar_dep]; set CONFIG_VIA_RHINE_FET [expr $CONFIG_VIA_RHINE_FET&15]}
	global CONFIG_VIA_RHINE_MMIO
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_PCI == 1) && ($CONFIG_VIA_RHINE == 1 || $CONFIG_VIA_RHINE == 2 || $CONFIG_VIA_RHINE == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_VIA_RHINE $CONFIG_EXPERIMENTAL]];set CONFIG_VIA_RHINE_MMIO [sync_bool $CONFIG_VIA_RHINE_MMIO $tmpvar_dep 1];set CONFIG_VIA_RHINE_MMIO [expr $CONFIG_VIA_RHINE_MMIO&15]}
	global CONFIG_WINBOND_840
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_PCI == 1) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PCI]]; set CONFIG_WINBOND_840 [sync_tristate $CONFIG_WINBOND_840 $tmpvar_dep]; set CONFIG_WINBOND_840 [expr $CONFIG_WINBOND_840&15]}
	global CONFIG_ZNET
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_PCI == 1) && ($CONFIG_OBSOLETE == 1) && ($CONFIG_ISA == 1 || $CONFIG_ISA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ISA]];set CONFIG_ZNET [sync_bool $CONFIG_ZNET $tmpvar_dep 0];set CONFIG_ZNET [expr $CONFIG_ZNET&15]}
	global CONFIG_MIPS
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_PCI == 1) && ($CONFIG_EXPERIMENTAL == 1 && $CONFIG_MIPS == 1)} then {
	set CONFIG_LAN_SAA9730 [expr $CONFIG_LAN_SAA9730&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1)} then {
	set CONFIG_NET_POCKET [expr $CONFIG_NET_POCKET&15]}
	global CONFIG_X86
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_POCKET == 1) && ($CONFIG_ISA == 1 && $CONFIG_X86 == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_ATP == 2)} then {set CONFIG_ATP 1}; set CONFIG_ATP [expr $CONFIG_ATP&15]}
	global CONFIG_DE600
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_POCKET == 1) && ($CONFIG_ISA == 1 || $CONFIG_ISA == 2 || $CONFIG_ISA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ISA]]; set CONFIG_DE600 [sync_tristate $CONFIG_DE600 $tmpvar_dep]; set CONFIG_DE600 [expr $CONFIG_DE600&15]}
	global CONFIG_DE620
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_POCKET == 1) && ($CONFIG_ISA == 1 || $CONFIG_ISA == 2 || $CONFIG_ISA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ISA]]; set CONFIG_DE620 [sync_tristate $CONFIG_DE620 $tmpvar_dep]; set CONFIG_DE620 [expr $CONFIG_DE620&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1)} then {
	set CONFIG_FEC [expr $CONFIG_FEC&15]}
	global CONFIG_FEC_IOCTL
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_FEC == 1) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_EXPERIMENTAL]];set CONFIG_FEC_IOCTL [sync_bool $CONFIG_FEC_IOCTL $tmpvar_dep 1];set CONFIG_FEC_IOCTL [expr $CONFIG_FEC_IOCTL&15]}
	global CONFIG_BOARD_UC5272
	global CONFIG_UC5272_PHY_INT
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_FEC == 1) && ($CONFIG_BOARD_UC5272 == 1 || $CONFIG_BOARD_UC5272 == 2 || $CONFIG_BOARD_UC5272 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BOARD_UC5272]];set CONFIG_UC5272_PHY_INT [sync_bool $CONFIG_UC5272_PHY_INT $tmpvar_dep 1];set CONFIG_UC5272_PHY_INT [expr $CONFIG_UC5272_PHY_INT&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_FEC == 1)} then {
	set CONFIG_FEC_KS8995M [expr $CONFIG_FEC_KS8995M&15]}
	global tmpvar_17
	global CONFIG_FEC_KS8995M_P5
	if {$tmpvar_17 == "MII-P5"} then {set CONFIG_FEC_KS8995M_P5 1} else {set CONFIG_FEC_KS8995M_P5 0}
	global CONFIG_FEC_KS8995M_SW
	if {$tmpvar_17 == "MII-SW"} then {set CONFIG_FEC_KS8995M_SW 1} else {set CONFIG_FEC_KS8995M_SW 0}
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_CS89x0 == 2)} then {set CONFIG_CS89x0 1}; set CONFIG_CS89x0 [expr $CONFIG_CS89x0&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1)} then {
	set CONFIG_UCCS8900 [expr $CONFIG_UCCS8900&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_CS89x0 == 1 || $CONFIG_UCCS8900 == 1)} then {
	set CONFIG_UCCS89x0_HW_SWAP [expr $CONFIG_UCCS89x0_HW_SWAP&15]}
}


proc menu37 {w title} {
	set oldFocus [focus]
	catch {focus .menu34}
	catch {destroy $w; unregister_active 37}
	toplevel $w -class Dialog
	wm withdraw $w
	global active_menus
	set active_menus [lsort -integer [linsert $active_menus end 37]]
	message $w.m -width 400 -aspect 300 -text \
		"Ethernet (1000 Mbit)"  -relief raised
	pack $w.m -pady 10 -side top -padx 10
	wm title $w "Ethernet (1000 Mbit)" 

	bind $w <Escape> "catch {focus $oldFocus}; destroy $w; unregister_active 37; break"
	set nextscript "catch {focus $oldFocus}; destroy $w; unregister_active 37; menu38 .menu38 \"$title\""
	frame $w.f
	button $w.f.back -text "OK" \
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 37"
	button $w.f.next -text "Next" -underline 0\
		-width 15 -command $nextscript
	bind all <Alt-n> $nextscript
	button $w.f.prev -text "Prev" -underline 0\
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 37; menu36 .menu36 \"$title\""
	bind $w <Alt-p> "catch {focus $oldFocus}; destroy $w; unregister_active 37; menu36 .menu36 \"$title\";break"
	pack $w.f.back $w.f.next $w.f.prev -side left -expand on
	pack $w.f -pady 10 -side bottom -anchor w -fill x
	frame $w.topline -relief ridge -borderwidth 2 -height 2
	pack $w.topline -side top -fill x

	frame $w.botline -relief ridge -borderwidth 2 -height 2
	pack $w.botline -side bottom -fill x

	frame $w.config
	pack $w.config -fill y -expand on

	scrollbar $w.config.vscroll -command "$w.config.canvas yview"
	pack $w.config.vscroll -side right -fill y

	canvas $w.config.canvas -height 1\
		-relief flat -borderwidth 0 -yscrollcommand "$w.config.vscroll set" \
		-width [expr [winfo screenwidth .] * 1 / 2] 
	frame $w.config.f
	bind $w <Key-Down> "$w.config.canvas yview scroll  1 unit;break;"
	bind $w <Key-Up> "$w.config.canvas yview scroll  -1 unit;break;"
	bind $w <Key-Next> "$w.config.canvas yview scroll  1 page;break;"
	bind $w <Key-Prior> "$w.config.canvas yview scroll  -1 page;break;"
	bind $w <Key-Home> "$w.config.canvas yview moveto 0;break;"
	bind $w <Key-End> "$w.config.canvas yview moveto 1 ;break;"
	pack $w.config.canvas -side right -fill y


	dep_tristate $w.config.f 37 0 "Alteon AceNIC/3Com 3C985/NetGear GA620 Gigabit support" CONFIG_ACENIC
	bool $w.config.f 37 1 "  Omit support for old Tigon I based AceNICs" CONFIG_ACENIC_OMIT_TIGON_I
	dep_tristate $w.config.f 37 2 "D-Link DL2000-based Gigabit Ethernet support" CONFIG_DL2K
	dep_tristate $w.config.f 37 3 "Intel(R) PRO/1000 Gigabit Ethernet support" CONFIG_E1000
	bool $w.config.f 37 4 "  Use Rx Polling (NAPI)" CONFIG_E1000_NAPI
	dep_tristate $w.config.f 37 5 "MyriCOM Gigabit Ethernet support" CONFIG_MYRI_SBUS
	dep_tristate $w.config.f 37 6 "National Semiconductor DP83820 support" CONFIG_NS83820
	dep_tristate $w.config.f 37 7 "Packet Engines Hamachi GNIC-II support" CONFIG_HAMACHI
	dep_tristate $w.config.f 37 8 "Packet Engines Yellowfin Gigabit-NIC support (EXPERIMENTAL)" CONFIG_YELLOWFIN
	dep_tristate $w.config.f 37 9 "Realtek 8169 Gigabit Ethernet support" CONFIG_R8169
	dep_tristate $w.config.f 37 10 "Marvell Yukon Chipset / SysKonnect SK-98xx Support" CONFIG_SK98LIN
	dep_tristate $w.config.f 37 11 "Broadcom Tigon3 support" CONFIG_TIGON3



	focus $w
	update_active
	global winx; global winy
	if {[winfo exists .menu34] == 0} then {menu34 .menu34 "Network device support"}
	set winx [expr [winfo x .menu34]+30]; set winy [expr [winfo y .menu34]+30]
	if {[winfo exists $w]} then {wm geometry $w +$winx+$winy}
	update idletasks
	if {[winfo exists $w]} then  {$w.config.canvas create window 0 0 -anchor nw -window $w.config.f

	$w.config.canvas configure \
		-width [expr [winfo reqwidth $w.config.f] + 1]\
		-scrollregion "-1 -1 [expr [winfo reqwidth $w.config.f] + 1] \
			 [expr [winfo reqheight $w.config.f] + 1]"

	set winy [expr [winfo reqh $w] - [winfo reqh $w.config.canvas]]
	set scry [expr [winfo screenh $w] / 2]
	set maxy [expr [winfo screenh $w] * 3 / 4]
	set canvtotal [expr [winfo reqh $w.config.f] + 2]
	if [expr $winy + $canvtotal < $maxy] {
		$w.config.canvas configure -height $canvtotal
	} else {
		$w.config.canvas configure -height [expr $scry - $winy]
		}
	}
	update idletasks
	if {[winfo exists $w]} then {
	wm maxsize $w [winfo width $w] [winfo screenheight $w]
	wm minsize $w [winfo width $w] 100

	wm deiconify $w
}
}

proc update_menu37 {} {
	global CONFIG_MODULES
	global CONFIG_NET
	global CONFIG_NETDEVICES
	global CONFIG_PCI
	global CONFIG_ACENIC
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PCI]];set CONFIG_ACENIC [sync_tristate $CONFIG_ACENIC $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu37.config.f.x0 disabled {y}} else {configure_entry .menu37.config.f.x0 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu37.config.f.x0 disabled {m}} else {configure_entry .menu37.config.f.x0 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu37.config.f.x0 normal {m}} else {configure_entry .menu37.config.f.x0 disabled {m}}; configure_entry .menu37.config.f.x0 normal {n l}} else {configure_entry .menu37.config.f.x0 disabled {y n m l}}
	global CONFIG_ACENIC_OMIT_TIGON_I
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_ACENIC != 0)} then {
	configure_entry .menu37.config.f.x1 normal {n l y}} else {configure_entry .menu37.config.f.x1 disabled {y n l}}
	global CONFIG_DL2K
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PCI]];set CONFIG_DL2K [sync_tristate $CONFIG_DL2K $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu37.config.f.x2 disabled {y}} else {configure_entry .menu37.config.f.x2 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu37.config.f.x2 disabled {m}} else {configure_entry .menu37.config.f.x2 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu37.config.f.x2 normal {m}} else {configure_entry .menu37.config.f.x2 disabled {m}}; configure_entry .menu37.config.f.x2 normal {n l}} else {configure_entry .menu37.config.f.x2 disabled {y n m l}}
	global CONFIG_E1000
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PCI]];set CONFIG_E1000 [sync_tristate $CONFIG_E1000 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu37.config.f.x3 disabled {y}} else {configure_entry .menu37.config.f.x3 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu37.config.f.x3 disabled {m}} else {configure_entry .menu37.config.f.x3 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu37.config.f.x3 normal {m}} else {configure_entry .menu37.config.f.x3 disabled {m}}; configure_entry .menu37.config.f.x3 normal {n l}} else {configure_entry .menu37.config.f.x3 disabled {y n m l}}
	global CONFIG_E1000_NAPI
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_E1000 != 0)} then {
	configure_entry .menu37.config.f.x4 normal {n l y}} else {configure_entry .menu37.config.f.x4 disabled {y n l}}
	global CONFIG_SBUS
	global CONFIG_MYRI_SBUS
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_SBUS == 1 || $CONFIG_SBUS == 2 || $CONFIG_SBUS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SBUS]];set CONFIG_MYRI_SBUS [sync_tristate $CONFIG_MYRI_SBUS $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu37.config.f.x5 disabled {y}} else {configure_entry .menu37.config.f.x5 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu37.config.f.x5 disabled {m}} else {configure_entry .menu37.config.f.x5 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu37.config.f.x5 normal {m}} else {configure_entry .menu37.config.f.x5 disabled {m}}; configure_entry .menu37.config.f.x5 normal {n l}} else {configure_entry .menu37.config.f.x5 disabled {y n m l}}
	global CONFIG_NS83820
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PCI]];set CONFIG_NS83820 [sync_tristate $CONFIG_NS83820 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu37.config.f.x6 disabled {y}} else {configure_entry .menu37.config.f.x6 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu37.config.f.x6 disabled {m}} else {configure_entry .menu37.config.f.x6 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu37.config.f.x6 normal {m}} else {configure_entry .menu37.config.f.x6 disabled {m}}; configure_entry .menu37.config.f.x6 normal {n l}} else {configure_entry .menu37.config.f.x6 disabled {y n m l}}
	global CONFIG_HAMACHI
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PCI]];set CONFIG_HAMACHI [sync_tristate $CONFIG_HAMACHI $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu37.config.f.x7 disabled {y}} else {configure_entry .menu37.config.f.x7 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu37.config.f.x7 disabled {m}} else {configure_entry .menu37.config.f.x7 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu37.config.f.x7 normal {m}} else {configure_entry .menu37.config.f.x7 disabled {m}}; configure_entry .menu37.config.f.x7 normal {n l}} else {configure_entry .menu37.config.f.x7 disabled {y n m l}}
	global CONFIG_EXPERIMENTAL
	global CONFIG_YELLOWFIN
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PCI $CONFIG_EXPERIMENTAL]];set CONFIG_YELLOWFIN [sync_tristate $CONFIG_YELLOWFIN $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu37.config.f.x8 disabled {y}} else {configure_entry .menu37.config.f.x8 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu37.config.f.x8 disabled {m}} else {configure_entry .menu37.config.f.x8 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu37.config.f.x8 normal {m}} else {configure_entry .menu37.config.f.x8 disabled {m}}; configure_entry .menu37.config.f.x8 normal {n l}} else {configure_entry .menu37.config.f.x8 disabled {y n m l}}
	global CONFIG_R8169
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PCI]];set CONFIG_R8169 [sync_tristate $CONFIG_R8169 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu37.config.f.x9 disabled {y}} else {configure_entry .menu37.config.f.x9 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu37.config.f.x9 disabled {m}} else {configure_entry .menu37.config.f.x9 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu37.config.f.x9 normal {m}} else {configure_entry .menu37.config.f.x9 disabled {m}}; configure_entry .menu37.config.f.x9 normal {n l}} else {configure_entry .menu37.config.f.x9 disabled {y n m l}}
	global CONFIG_SK98LIN
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PCI]];set CONFIG_SK98LIN [sync_tristate $CONFIG_SK98LIN $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu37.config.f.x10 disabled {y}} else {configure_entry .menu37.config.f.x10 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu37.config.f.x10 disabled {m}} else {configure_entry .menu37.config.f.x10 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu37.config.f.x10 normal {m}} else {configure_entry .menu37.config.f.x10 disabled {m}}; configure_entry .menu37.config.f.x10 normal {n l}} else {configure_entry .menu37.config.f.x10 disabled {y n m l}}
	global CONFIG_TIGON3
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PCI]];set CONFIG_TIGON3 [sync_tristate $CONFIG_TIGON3 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu37.config.f.x11 disabled {y}} else {configure_entry .menu37.config.f.x11 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu37.config.f.x11 disabled {m}} else {configure_entry .menu37.config.f.x11 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu37.config.f.x11 normal {m}} else {configure_entry .menu37.config.f.x11 disabled {m}}; configure_entry .menu37.config.f.x11 normal {n l}} else {configure_entry .menu37.config.f.x11 disabled {y n m l}}
}


proc update_define_menu37 {} {
	update_define_mainmenu
	global CONFIG_MODULES
	global CONFIG_ACENIC_OMIT_TIGON_I
set CONFIG_ACENIC_OMIT_TIGON_I [expr $CONFIG_ACENIC_OMIT_TIGON_I|16]
	global CONFIG_E1000_NAPI
set CONFIG_E1000_NAPI [expr $CONFIG_E1000_NAPI|16]
	global CONFIG_NET
	global CONFIG_NETDEVICES
	global CONFIG_PCI
	global CONFIG_ACENIC
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PCI]]; set CONFIG_ACENIC [sync_tristate $CONFIG_ACENIC $tmpvar_dep]; set CONFIG_ACENIC [expr $CONFIG_ACENIC&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_ACENIC != 0)} then {
	set CONFIG_ACENIC_OMIT_TIGON_I [expr $CONFIG_ACENIC_OMIT_TIGON_I&15]}
	global CONFIG_DL2K
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PCI]]; set CONFIG_DL2K [sync_tristate $CONFIG_DL2K $tmpvar_dep]; set CONFIG_DL2K [expr $CONFIG_DL2K&15]}
	global CONFIG_E1000
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PCI]]; set CONFIG_E1000 [sync_tristate $CONFIG_E1000 $tmpvar_dep]; set CONFIG_E1000 [expr $CONFIG_E1000&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_E1000 != 0)} then {
	set CONFIG_E1000_NAPI [expr $CONFIG_E1000_NAPI&15]}
	global CONFIG_SBUS
	global CONFIG_MYRI_SBUS
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_SBUS == 1 || $CONFIG_SBUS == 2 || $CONFIG_SBUS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SBUS]]; set CONFIG_MYRI_SBUS [sync_tristate $CONFIG_MYRI_SBUS $tmpvar_dep]; set CONFIG_MYRI_SBUS [expr $CONFIG_MYRI_SBUS&15]}
	global CONFIG_NS83820
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PCI]]; set CONFIG_NS83820 [sync_tristate $CONFIG_NS83820 $tmpvar_dep]; set CONFIG_NS83820 [expr $CONFIG_NS83820&15]}
	global CONFIG_HAMACHI
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PCI]]; set CONFIG_HAMACHI [sync_tristate $CONFIG_HAMACHI $tmpvar_dep]; set CONFIG_HAMACHI [expr $CONFIG_HAMACHI&15]}
	global CONFIG_EXPERIMENTAL
	global CONFIG_YELLOWFIN
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PCI $CONFIG_EXPERIMENTAL]]; set CONFIG_YELLOWFIN [sync_tristate $CONFIG_YELLOWFIN $tmpvar_dep]; set CONFIG_YELLOWFIN [expr $CONFIG_YELLOWFIN&15]}
	global CONFIG_R8169
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PCI]]; set CONFIG_R8169 [sync_tristate $CONFIG_R8169 $tmpvar_dep]; set CONFIG_R8169 [expr $CONFIG_R8169&15]}
	global CONFIG_SK98LIN
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PCI]]; set CONFIG_SK98LIN [sync_tristate $CONFIG_SK98LIN $tmpvar_dep]; set CONFIG_SK98LIN [expr $CONFIG_SK98LIN&15]}
	global CONFIG_TIGON3
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PCI]]; set CONFIG_TIGON3 [sync_tristate $CONFIG_TIGON3 $tmpvar_dep]; set CONFIG_TIGON3 [expr $CONFIG_TIGON3&15]}
}


proc menu38 {w title} {
	set oldFocus [focus]
	catch {focus .menu34}
	catch {destroy $w; unregister_active 38}
	toplevel $w -class Dialog
	wm withdraw $w
	global active_menus
	set active_menus [lsort -integer [linsert $active_menus end 38]]
	message $w.m -width 400 -aspect 300 -text \
		"Wireless LAN (non-hamradio)"  -relief raised
	pack $w.m -pady 10 -side top -padx 10
	wm title $w "Wireless LAN (non-hamradio)" 

	bind $w <Escape> "catch {focus $oldFocus}; destroy $w; unregister_active 38; break"
	set nextscript "catch {focus $oldFocus}; destroy $w; unregister_active 38; menu39 .menu39 \"$title\""
	frame $w.f
	button $w.f.back -text "OK" \
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 38"
	button $w.f.next -text "Next" -underline 0\
		-width 15 -command $nextscript
	bind all <Alt-n> $nextscript
	button $w.f.prev -text "Prev" -underline 0\
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 38; menu37 .menu37 \"$title\""
	bind $w <Alt-p> "catch {focus $oldFocus}; destroy $w; unregister_active 38; menu37 .menu37 \"$title\";break"
	pack $w.f.back $w.f.next $w.f.prev -side left -expand on
	pack $w.f -pady 10 -side bottom -anchor w -fill x
	frame $w.topline -relief ridge -borderwidth 2 -height 2
	pack $w.topline -side top -fill x

	frame $w.botline -relief ridge -borderwidth 2 -height 2
	pack $w.botline -side bottom -fill x

	frame $w.config
	pack $w.config -fill y -expand on

	scrollbar $w.config.vscroll -command "$w.config.canvas yview"
	pack $w.config.vscroll -side right -fill y

	canvas $w.config.canvas -height 1\
		-relief flat -borderwidth 0 -yscrollcommand "$w.config.vscroll set" \
		-width [expr [winfo screenwidth .] * 1 / 2] 
	frame $w.config.f
	bind $w <Key-Down> "$w.config.canvas yview scroll  1 unit;break;"
	bind $w <Key-Up> "$w.config.canvas yview scroll  -1 unit;break;"
	bind $w <Key-Next> "$w.config.canvas yview scroll  1 page;break;"
	bind $w <Key-Prior> "$w.config.canvas yview scroll  -1 page;break;"
	bind $w <Key-Home> "$w.config.canvas yview moveto 0;break;"
	bind $w <Key-End> "$w.config.canvas yview moveto 1 ;break;"
	pack $w.config.canvas -side right -fill y


	bool $w.config.f 38 0 "Wireless LAN (non-hamradio)" CONFIG_NET_RADIO
	dep_tristate $w.config.f 38 1 "  STRIP (Metricom starmode radio IP)" CONFIG_STRIP
	tristate $w.config.f 38 2 "  AT&T WaveLAN & DEC RoamAbout DS support" CONFIG_WAVELAN
	tristate $w.config.f 38 3 "  Aironet Arlan 655 & IC2200 DS support" CONFIG_ARLAN
	tristate $w.config.f 38 4 "  Aironet 4500/4800 series adapters" CONFIG_AIRONET4500
	dep_tristate $w.config.f 38 5 "   Aironet 4500/4800 ISA/PCI/PNP/365 support " CONFIG_AIRONET4500_NONCS
	bool $w.config.f 38 6 "     Aironet 4500/4800 PNP support " CONFIG_AIRONET4500_PNP
	dep_bool $w.config.f 38 7 "     Aironet 4500/4800 PCI support " CONFIG_AIRONET4500_PCI
	dep_bool $w.config.f 38 8 "     Aironet 4500/4800 ISA broken support (EXPERIMENTAL)" CONFIG_AIRONET4500_ISA
	dep_bool $w.config.f 38 9 "     Aironet 4500/4800 I365 broken support (EXPERIMENTAL)" CONFIG_AIRONET4500_I365
	dep_tristate $w.config.f 38 10 "   Aironet 4500/4800 PROC interface " CONFIG_AIRONET4500_PROC
	tristate $w.config.f 38 11 "  Cisco/Aironet 34X/35X/4500/4800 ISA and PCI cards" CONFIG_AIRO
	tristate $w.config.f 38 12 "  Hermes chipset 802.11b support (Orinoco/Prism2/Symbol)" CONFIG_HERMES
	dep_tristate $w.config.f 38 13 "    Hermes in PLX9052 based PCI adaptor support (Netgear MA301 etc.) (EXPERIMENTAL)" CONFIG_PLX_HERMES
	dep_tristate $w.config.f 38 14 "    Hermes in TMD7160/NCP130 based PCI adaptor support (Pheecom WL-PCI etc.) (EXPERIMENTAL)" CONFIG_TMD_HERMES
	dep_tristate $w.config.f 38 15 "    Prism 2.5 PCI 802.11b adaptor support (EXPERIMENTAL)" CONFIG_PCI_HERMES
	comment $w.config.f 38 16 "Wireless Pcmcia cards support"
	dep_tristate $w.config.f 38 17 "  Hermes PCMCIA card support" CONFIG_PCMCIA_HERMES
	tristate $w.config.f 38 18 "  Cisco/Aironet 34X/35X/4500/4800 PCMCIA cards" CONFIG_AIRO_CS



	focus $w
	update_active
	global winx; global winy
	if {[winfo exists .menu34] == 0} then {menu34 .menu34 "Network device support"}
	set winx [expr [winfo x .menu34]+30]; set winy [expr [winfo y .menu34]+30]
	if {[winfo exists $w]} then {wm geometry $w +$winx+$winy}
	update idletasks
	if {[winfo exists $w]} then  {$w.config.canvas create window 0 0 -anchor nw -window $w.config.f

	$w.config.canvas configure \
		-width [expr [winfo reqwidth $w.config.f] + 1]\
		-scrollregion "-1 -1 [expr [winfo reqwidth $w.config.f] + 1] \
			 [expr [winfo reqheight $w.config.f] + 1]"

	set winy [expr [winfo reqh $w] - [winfo reqh $w.config.canvas]]
	set scry [expr [winfo screenh $w] / 2]
	set maxy [expr [winfo screenh $w] * 3 / 4]
	set canvtotal [expr [winfo reqh $w.config.f] + 2]
	if [expr $winy + $canvtotal < $maxy] {
		$w.config.canvas configure -height $canvtotal
	} else {
		$w.config.canvas configure -height [expr $scry - $winy]
		}
	}
	update idletasks
	if {[winfo exists $w]} then {
	wm maxsize $w [winfo width $w] [winfo screenheight $w]
	wm minsize $w [winfo width $w] 100

	wm deiconify $w
}
}

proc update_menu38 {} {
	global CONFIG_NET
	global CONFIG_NETDEVICES
	global CONFIG_NET_RADIO
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1)} then {
	configure_entry .menu38.config.f.x0 normal {n l y}} else {configure_entry .menu38.config.f.x0 disabled {y n l}}
	global CONFIG_MODULES
	global CONFIG_INET
	global CONFIG_STRIP
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_RADIO == 1) && ($CONFIG_INET == 1 || $CONFIG_INET == 2 || $CONFIG_INET == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_INET]];set CONFIG_STRIP [sync_tristate $CONFIG_STRIP $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu38.config.f.x1 disabled {y}} else {configure_entry .menu38.config.f.x1 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu38.config.f.x1 disabled {m}} else {configure_entry .menu38.config.f.x1 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu38.config.f.x1 normal {m}} else {configure_entry .menu38.config.f.x1 disabled {m}}; configure_entry .menu38.config.f.x1 normal {n l}} else {configure_entry .menu38.config.f.x1 disabled {y n m l}}
	global CONFIG_WAVELAN
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_RADIO == 1)} then {
	configure_entry .menu38.config.f.x2 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu38.config.f.x2 normal {m}} else {configure_entry .menu38.config.f.x2 disabled {m}}; configure_entry .menu38.config.f.x2 normal {n l}} else {configure_entry .menu38.config.f.x2 disabled {y n m l}}
	global CONFIG_X86_64
	global CONFIG_ARLAN
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_RADIO == 1) && ($CONFIG_X86_64 != 1)} then {
	configure_entry .menu38.config.f.x3 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu38.config.f.x3 normal {m}} else {configure_entry .menu38.config.f.x3 disabled {m}}; configure_entry .menu38.config.f.x3 normal {n l}} else {configure_entry .menu38.config.f.x3 disabled {y n m l}}
	global CONFIG_AIRONET4500
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_RADIO == 1)} then {
	configure_entry .menu38.config.f.x4 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu38.config.f.x4 normal {m}} else {configure_entry .menu38.config.f.x4 disabled {m}}; configure_entry .menu38.config.f.x4 normal {n l}} else {configure_entry .menu38.config.f.x4 disabled {y n m l}}
	global CONFIG_AIRONET4500_NONCS
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_RADIO == 1) && ($CONFIG_AIRONET4500 == 1 || $CONFIG_AIRONET4500 == 2 || $CONFIG_AIRONET4500 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_AIRONET4500]];set CONFIG_AIRONET4500_NONCS [sync_tristate $CONFIG_AIRONET4500_NONCS $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu38.config.f.x5 disabled {y}} else {configure_entry .menu38.config.f.x5 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu38.config.f.x5 disabled {m}} else {configure_entry .menu38.config.f.x5 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu38.config.f.x5 normal {m}} else {configure_entry .menu38.config.f.x5 disabled {m}}; configure_entry .menu38.config.f.x5 normal {n l}} else {configure_entry .menu38.config.f.x5 disabled {y n m l}}
	global CONFIG_AIRONET4500_PNP
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_RADIO == 1) && ($CONFIG_AIRONET4500 != 0 && $CONFIG_AIRONET4500_NONCS != 0)} then {
	configure_entry .menu38.config.f.x6 normal {n l y}} else {configure_entry .menu38.config.f.x6 disabled {y n l}}
	global CONFIG_PCI
	global CONFIG_AIRONET4500_PCI
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_RADIO == 1) && ($CONFIG_AIRONET4500 != 0 && $CONFIG_AIRONET4500_NONCS != 0) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PCI]];set CONFIG_AIRONET4500_PCI [sync_bool $CONFIG_AIRONET4500_PCI $tmpvar_dep 0];if {$tmpvar_dep != 1} then {configure_entry .menu38.config.f.x7 disabled {y};} else {configure_entry .menu38.config.f.x7 normal {y};}; configure_entry .menu38.config.f.x7 normal {n l}} else {configure_entry .menu38.config.f.x7 disabled {y n l}}
	global CONFIG_EXPERIMENTAL
	global CONFIG_AIRONET4500_ISA
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_RADIO == 1) && ($CONFIG_AIRONET4500 != 0 && $CONFIG_AIRONET4500_NONCS != 0) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_EXPERIMENTAL]];set CONFIG_AIRONET4500_ISA [sync_bool $CONFIG_AIRONET4500_ISA $tmpvar_dep 0];if {$tmpvar_dep != 1} then {configure_entry .menu38.config.f.x8 disabled {y};} else {configure_entry .menu38.config.f.x8 normal {y};}; configure_entry .menu38.config.f.x8 normal {n l}} else {configure_entry .menu38.config.f.x8 disabled {y n l}}
	global CONFIG_AIRONET4500_I365
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_RADIO == 1) && ($CONFIG_AIRONET4500 != 0 && $CONFIG_AIRONET4500_NONCS != 0) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_EXPERIMENTAL]];set CONFIG_AIRONET4500_I365 [sync_bool $CONFIG_AIRONET4500_I365 $tmpvar_dep 0];if {$tmpvar_dep != 1} then {configure_entry .menu38.config.f.x9 disabled {y};} else {configure_entry .menu38.config.f.x9 normal {y};}; configure_entry .menu38.config.f.x9 normal {n l}} else {configure_entry .menu38.config.f.x9 disabled {y n l}}
	global CONFIG_AIRONET4500_PROC
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_RADIO == 1) && ($CONFIG_AIRONET4500 == 1 || $CONFIG_AIRONET4500 == 2 || $CONFIG_AIRONET4500 == 4)} then {
	global CONSTANT_M
	set tmpvar_dep [effective_dep [list $CONFIG_AIRONET4500 $CONSTANT_M]];set CONFIG_AIRONET4500_PROC [sync_tristate $CONFIG_AIRONET4500_PROC $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu38.config.f.x10 disabled {y}} else {configure_entry .menu38.config.f.x10 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu38.config.f.x10 disabled {m}} else {configure_entry .menu38.config.f.x10 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu38.config.f.x10 normal {m}} else {configure_entry .menu38.config.f.x10 disabled {m}}; configure_entry .menu38.config.f.x10 normal {n l}} else {configure_entry .menu38.config.f.x10 disabled {y n m l}}
	global CONFIG_ISA
	global CONFIG_AIRO
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_RADIO == 1) && ($CONFIG_ISA == 1 || $CONFIG_PCI == 1)} then {
	configure_entry .menu38.config.f.x11 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu38.config.f.x11 normal {m}} else {configure_entry .menu38.config.f.x11 disabled {m}}; configure_entry .menu38.config.f.x11 normal {n l}} else {configure_entry .menu38.config.f.x11 disabled {y n m l}}
	global CONFIG_HERMES
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_RADIO == 1)} then {
	configure_entry .menu38.config.f.x12 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu38.config.f.x12 normal {m}} else {configure_entry .menu38.config.f.x12 disabled {m}}; configure_entry .menu38.config.f.x12 normal {n l}} else {configure_entry .menu38.config.f.x12 disabled {y n m l}}
	global CONFIG_PLX_HERMES
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_RADIO == 1) && ($CONFIG_PCI == 1) && ($CONFIG_HERMES == 1 || $CONFIG_HERMES == 2 || $CONFIG_HERMES == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_HERMES $CONFIG_EXPERIMENTAL]];set CONFIG_PLX_HERMES [sync_tristate $CONFIG_PLX_HERMES $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu38.config.f.x13 disabled {y}} else {configure_entry .menu38.config.f.x13 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu38.config.f.x13 disabled {m}} else {configure_entry .menu38.config.f.x13 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu38.config.f.x13 normal {m}} else {configure_entry .menu38.config.f.x13 disabled {m}}; configure_entry .menu38.config.f.x13 normal {n l}} else {configure_entry .menu38.config.f.x13 disabled {y n m l}}
	global CONFIG_TMD_HERMES
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_RADIO == 1) && ($CONFIG_PCI == 1) && ($CONFIG_HERMES == 1 || $CONFIG_HERMES == 2 || $CONFIG_HERMES == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_HERMES $CONFIG_EXPERIMENTAL]];set CONFIG_TMD_HERMES [sync_tristate $CONFIG_TMD_HERMES $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu38.config.f.x14 disabled {y}} else {configure_entry .menu38.config.f.x14 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu38.config.f.x14 disabled {m}} else {configure_entry .menu38.config.f.x14 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu38.config.f.x14 normal {m}} else {configure_entry .menu38.config.f.x14 disabled {m}}; configure_entry .menu38.config.f.x14 normal {n l}} else {configure_entry .menu38.config.f.x14 disabled {y n m l}}
	global CONFIG_PCI_HERMES
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_RADIO == 1) && ($CONFIG_PCI == 1) && ($CONFIG_HERMES == 1 || $CONFIG_HERMES == 2 || $CONFIG_HERMES == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_HERMES $CONFIG_EXPERIMENTAL]];set CONFIG_PCI_HERMES [sync_tristate $CONFIG_PCI_HERMES $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu38.config.f.x15 disabled {y}} else {configure_entry .menu38.config.f.x15 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu38.config.f.x15 disabled {m}} else {configure_entry .menu38.config.f.x15 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu38.config.f.x15 normal {m}} else {configure_entry .menu38.config.f.x15 disabled {m}}; configure_entry .menu38.config.f.x15 normal {n l}} else {configure_entry .menu38.config.f.x15 disabled {y n m l}}
	global CONFIG_PCMCIA
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_RADIO == 1) && ($CONFIG_PCMCIA != 0)} then {configure_entry .menu38.config.f.x16 normal {m}} else {configure_entry .menu38.config.f.x16 disabled {m}}
	global CONFIG_PCMCIA_HERMES
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_RADIO == 1) && ($CONFIG_PCMCIA != 0) && ($CONFIG_HERMES == 1 || $CONFIG_HERMES == 2 || $CONFIG_HERMES == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_HERMES]];set CONFIG_PCMCIA_HERMES [sync_tristate $CONFIG_PCMCIA_HERMES $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu38.config.f.x17 disabled {y}} else {configure_entry .menu38.config.f.x17 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu38.config.f.x17 disabled {m}} else {configure_entry .menu38.config.f.x17 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu38.config.f.x17 normal {m}} else {configure_entry .menu38.config.f.x17 disabled {m}}; configure_entry .menu38.config.f.x17 normal {n l}} else {configure_entry .menu38.config.f.x17 disabled {y n m l}}
	global CONFIG_AIRO_CS
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_RADIO == 1) && ($CONFIG_PCMCIA != 0)} then {
	configure_entry .menu38.config.f.x18 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu38.config.f.x18 normal {m}} else {configure_entry .menu38.config.f.x18 disabled {m}}; configure_entry .menu38.config.f.x18 normal {n l}} else {configure_entry .menu38.config.f.x18 disabled {y n m l}}
}


proc update_define_menu38 {} {
	update_define_mainmenu
	global CONFIG_MODULES
	global CONFIG_WAVELAN
	global CONFIG_ARLAN
	global CONFIG_AIRONET4500
	global CONFIG_AIRO
	global CONFIG_HERMES
	global CONFIG_AIRO_CS
	global CONFIG_NET_WIRELESS
	global CONFIG_NET_RADIO
set CONFIG_NET_RADIO [expr $CONFIG_NET_RADIO|16]
set CONFIG_WAVELAN [expr $CONFIG_WAVELAN|16]
set CONFIG_ARLAN [expr $CONFIG_ARLAN|16]
set CONFIG_AIRONET4500 [expr $CONFIG_AIRONET4500|16]
	global CONFIG_AIRONET4500_PNP
set CONFIG_AIRONET4500_PNP [expr $CONFIG_AIRONET4500_PNP|16]
set CONFIG_AIRO [expr $CONFIG_AIRO|16]
set CONFIG_HERMES [expr $CONFIG_HERMES|16]
set CONFIG_AIRO_CS [expr $CONFIG_AIRO_CS|16]
	global CONFIG_NET
	global CONFIG_NETDEVICES
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1)} then {
	set CONFIG_NET_RADIO [expr $CONFIG_NET_RADIO&15]}
	global CONFIG_INET
	global CONFIG_STRIP
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_RADIO == 1) && ($CONFIG_INET == 1 || $CONFIG_INET == 2 || $CONFIG_INET == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_INET]]; set CONFIG_STRIP [sync_tristate $CONFIG_STRIP $tmpvar_dep]; set CONFIG_STRIP [expr $CONFIG_STRIP&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_RADIO == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_WAVELAN == 2)} then {set CONFIG_WAVELAN 1}; set CONFIG_WAVELAN [expr $CONFIG_WAVELAN&15]}
	global CONFIG_X86_64
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_RADIO == 1) && ($CONFIG_X86_64 != 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_ARLAN == 2)} then {set CONFIG_ARLAN 1}; set CONFIG_ARLAN [expr $CONFIG_ARLAN&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_RADIO == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_AIRONET4500 == 2)} then {set CONFIG_AIRONET4500 1}; set CONFIG_AIRONET4500 [expr $CONFIG_AIRONET4500&15]}
	global CONFIG_AIRONET4500_NONCS
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_RADIO == 1) && ($CONFIG_AIRONET4500 == 1 || $CONFIG_AIRONET4500 == 2 || $CONFIG_AIRONET4500 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_AIRONET4500]]; set CONFIG_AIRONET4500_NONCS [sync_tristate $CONFIG_AIRONET4500_NONCS $tmpvar_dep]; set CONFIG_AIRONET4500_NONCS [expr $CONFIG_AIRONET4500_NONCS&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_RADIO == 1) && ($CONFIG_AIRONET4500 != 0 && $CONFIG_AIRONET4500_NONCS != 0)} then {
	set CONFIG_AIRONET4500_PNP [expr $CONFIG_AIRONET4500_PNP&15]}
	global CONFIG_PCI
	global CONFIG_AIRONET4500_PCI
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_RADIO == 1) && ($CONFIG_AIRONET4500 != 0 && $CONFIG_AIRONET4500_NONCS != 0) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PCI]];set CONFIG_AIRONET4500_PCI [sync_bool $CONFIG_AIRONET4500_PCI $tmpvar_dep 0];set CONFIG_AIRONET4500_PCI [expr $CONFIG_AIRONET4500_PCI&15]}
	global CONFIG_EXPERIMENTAL
	global CONFIG_AIRONET4500_ISA
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_RADIO == 1) && ($CONFIG_AIRONET4500 != 0 && $CONFIG_AIRONET4500_NONCS != 0) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_EXPERIMENTAL]];set CONFIG_AIRONET4500_ISA [sync_bool $CONFIG_AIRONET4500_ISA $tmpvar_dep 0];set CONFIG_AIRONET4500_ISA [expr $CONFIG_AIRONET4500_ISA&15]}
	global CONFIG_AIRONET4500_I365
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_RADIO == 1) && ($CONFIG_AIRONET4500 != 0 && $CONFIG_AIRONET4500_NONCS != 0) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_EXPERIMENTAL]];set CONFIG_AIRONET4500_I365 [sync_bool $CONFIG_AIRONET4500_I365 $tmpvar_dep 0];set CONFIG_AIRONET4500_I365 [expr $CONFIG_AIRONET4500_I365&15]}
	global CONFIG_AIRONET4500_PROC
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_RADIO == 1) && ($CONFIG_AIRONET4500 == 1 || $CONFIG_AIRONET4500 == 2 || $CONFIG_AIRONET4500 == 4)} then {
	global CONSTANT_M
	set tmpvar_dep [effective_dep [list $CONFIG_AIRONET4500 $CONSTANT_M]]; set CONFIG_AIRONET4500_PROC [sync_tristate $CONFIG_AIRONET4500_PROC $tmpvar_dep]; set CONFIG_AIRONET4500_PROC [expr $CONFIG_AIRONET4500_PROC&15]}
	global CONFIG_ISA
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_RADIO == 1) && ($CONFIG_ISA == 1 || $CONFIG_PCI == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_AIRO == 2)} then {set CONFIG_AIRO 1}; set CONFIG_AIRO [expr $CONFIG_AIRO&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_RADIO == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_HERMES == 2)} then {set CONFIG_HERMES 1}; set CONFIG_HERMES [expr $CONFIG_HERMES&15]}
	global CONFIG_PLX_HERMES
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_RADIO == 1) && ($CONFIG_PCI == 1) && ($CONFIG_HERMES == 1 || $CONFIG_HERMES == 2 || $CONFIG_HERMES == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_HERMES $CONFIG_EXPERIMENTAL]]; set CONFIG_PLX_HERMES [sync_tristate $CONFIG_PLX_HERMES $tmpvar_dep]; set CONFIG_PLX_HERMES [expr $CONFIG_PLX_HERMES&15]}
	global CONFIG_TMD_HERMES
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_RADIO == 1) && ($CONFIG_PCI == 1) && ($CONFIG_HERMES == 1 || $CONFIG_HERMES == 2 || $CONFIG_HERMES == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_HERMES $CONFIG_EXPERIMENTAL]]; set CONFIG_TMD_HERMES [sync_tristate $CONFIG_TMD_HERMES $tmpvar_dep]; set CONFIG_TMD_HERMES [expr $CONFIG_TMD_HERMES&15]}
	global CONFIG_PCI_HERMES
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_RADIO == 1) && ($CONFIG_PCI == 1) && ($CONFIG_HERMES == 1 || $CONFIG_HERMES == 2 || $CONFIG_HERMES == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_HERMES $CONFIG_EXPERIMENTAL]]; set CONFIG_PCI_HERMES [sync_tristate $CONFIG_PCI_HERMES $tmpvar_dep]; set CONFIG_PCI_HERMES [expr $CONFIG_PCI_HERMES&15]}
	global CONFIG_PCMCIA
	global CONFIG_PCMCIA_HERMES
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_RADIO == 1) && ($CONFIG_PCMCIA != 0) && ($CONFIG_HERMES == 1 || $CONFIG_HERMES == 2 || $CONFIG_HERMES == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_HERMES]]; set CONFIG_PCMCIA_HERMES [sync_tristate $CONFIG_PCMCIA_HERMES $tmpvar_dep]; set CONFIG_PCMCIA_HERMES [expr $CONFIG_PCMCIA_HERMES&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_RADIO == 1) && ($CONFIG_PCMCIA != 0)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_AIRO_CS == 2)} then {set CONFIG_AIRO_CS 1}; set CONFIG_AIRO_CS [expr $CONFIG_AIRO_CS&15]}
	global CONFIG_ALL_PPC
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_RADIO == 1) && ($CONFIG_ISA == 1 || $CONFIG_PCI == 1 || $CONFIG_ALL_PPC == 1 || $CONFIG_PCMCIA != 0)} then {	global CONSTANT_Y
set CONFIG_NET_WIRELESS $CONSTANT_Y }
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_RADIO == 1) && ($CONFIG_ISA != 1 && $CONFIG_PCI != 1 && $CONFIG_ALL_PPC != 1 && $CONFIG_PCMCIA == 0)} then {	global CONSTANT_N
set CONFIG_NET_WIRELESS $CONSTANT_N }
}


proc menu39 {w title} {
	set oldFocus [focus]
	catch {focus .menu34}
	catch {destroy $w; unregister_active 39}
	toplevel $w -class Dialog
	wm withdraw $w
	global active_menus
	set active_menus [lsort -integer [linsert $active_menus end 39]]
	message $w.m -width 400 -aspect 300 -text \
		"Token Ring devices"  -relief raised
	pack $w.m -pady 10 -side top -padx 10
	wm title $w "Token Ring devices" 

	bind $w <Escape> "catch {focus $oldFocus}; destroy $w; unregister_active 39; break"
	set nextscript "catch {focus $oldFocus}; destroy $w; unregister_active 39; menu40 .menu40 \"$title\""
	frame $w.f
	button $w.f.back -text "OK" \
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 39"
	button $w.f.next -text "Next" -underline 0\
		-width 15 -command $nextscript
	bind all <Alt-n> $nextscript
	button $w.f.prev -text "Prev" -underline 0\
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 39; menu38 .menu38 \"$title\""
	bind $w <Alt-p> "catch {focus $oldFocus}; destroy $w; unregister_active 39; menu38 .menu38 \"$title\";break"
	pack $w.f.back $w.f.next $w.f.prev -side left -expand on
	pack $w.f -pady 10 -side bottom -anchor w -fill x
	frame $w.topline -relief ridge -borderwidth 2 -height 2
	pack $w.topline -side top -fill x

	frame $w.botline -relief ridge -borderwidth 2 -height 2
	pack $w.botline -side bottom -fill x

	frame $w.config
	pack $w.config -fill y -expand on

	scrollbar $w.config.vscroll -command "$w.config.canvas yview"
	pack $w.config.vscroll -side right -fill y

	canvas $w.config.canvas -height 1\
		-relief flat -borderwidth 0 -yscrollcommand "$w.config.vscroll set" \
		-width [expr [winfo screenwidth .] * 1 / 2] 
	frame $w.config.f
	bind $w <Key-Down> "$w.config.canvas yview scroll  1 unit;break;"
	bind $w <Key-Up> "$w.config.canvas yview scroll  -1 unit;break;"
	bind $w <Key-Next> "$w.config.canvas yview scroll  1 page;break;"
	bind $w <Key-Prior> "$w.config.canvas yview scroll  -1 page;break;"
	bind $w <Key-Home> "$w.config.canvas yview moveto 0;break;"
	bind $w <Key-End> "$w.config.canvas yview moveto 1 ;break;"
	pack $w.config.canvas -side right -fill y


	bool $w.config.f 39 0 "Token Ring driver support" CONFIG_TR
	tristate $w.config.f 39 1 "  IBM Tropic chipset based adapter support" CONFIG_IBMTR
	dep_tristate $w.config.f 39 2 "  IBM Olympic chipset PCI adapter support" CONFIG_IBMOL
	dep_tristate $w.config.f 39 3 "  IBM Lanstreamer chipset PCI adapter support" CONFIG_IBMLS
	dep_tristate $w.config.f 39 4 "  3Com 3C359 Token Link Velocity XL adapter support" CONFIG_3C359
	tristate $w.config.f 39 5 "  Generic TMS380 Token Ring ISA/PCI adapter support" CONFIG_TMS380TR
	dep_tristate $w.config.f 39 6 "    Generic TMS380 PCI support" CONFIG_TMSPCI
	dep_tristate $w.config.f 39 7 "    Generic TMS380 ISA support" CONFIG_TMSISA
	dep_tristate $w.config.f 39 8 "    Madge Smart 16/4 PCI Mk2 support" CONFIG_ABYSS
	dep_tristate $w.config.f 39 9 "    Madge Smart 16/4 Ringnode MicroChannel" CONFIG_MADGEMC
	tristate $w.config.f 39 10 "  SMC ISA/MCA adapter support" CONFIG_SMCTR



	focus $w
	update_active
	global winx; global winy
	if {[winfo exists .menu34] == 0} then {menu34 .menu34 "Network device support"}
	set winx [expr [winfo x .menu34]+30]; set winy [expr [winfo y .menu34]+30]
	if {[winfo exists $w]} then {wm geometry $w +$winx+$winy}
	update idletasks
	if {[winfo exists $w]} then  {$w.config.canvas create window 0 0 -anchor nw -window $w.config.f

	$w.config.canvas configure \
		-width [expr [winfo reqwidth $w.config.f] + 1]\
		-scrollregion "-1 -1 [expr [winfo reqwidth $w.config.f] + 1] \
			 [expr [winfo reqheight $w.config.f] + 1]"

	set winy [expr [winfo reqh $w] - [winfo reqh $w.config.canvas]]
	set scry [expr [winfo screenh $w] / 2]
	set maxy [expr [winfo screenh $w] * 3 / 4]
	set canvtotal [expr [winfo reqh $w.config.f] + 2]
	if [expr $winy + $canvtotal < $maxy] {
		$w.config.canvas configure -height $canvtotal
	} else {
		$w.config.canvas configure -height [expr $scry - $winy]
		}
	}
	update idletasks
	if {[winfo exists $w]} then {
	wm maxsize $w [winfo width $w] [winfo screenheight $w]
	wm minsize $w [winfo width $w] 100

	wm deiconify $w
}
}

proc update_menu39 {} {
	global CONFIG_NET
	global CONFIG_NETDEVICES
	global CONFIG_PCI
	global CONFIG_ISA
	global CONFIG_MCA
	global CONFIG_TR
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_PCI == 1 || $CONFIG_ISA == 1 || $CONFIG_MCA == 1)} then {
	configure_entry .menu39.config.f.x0 normal {n l y}} else {configure_entry .menu39.config.f.x0 disabled {y n l}}
	global CONFIG_MODULES
	global CONFIG_IBMTR
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_TR != 0) && ($CONFIG_ISA == 1 || $CONFIG_MCA == 1)} then {
	configure_entry .menu39.config.f.x1 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu39.config.f.x1 normal {m}} else {configure_entry .menu39.config.f.x1 disabled {m}}; configure_entry .menu39.config.f.x1 normal {n l}} else {configure_entry .menu39.config.f.x1 disabled {y n m l}}
	global CONFIG_IBMOL
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_TR != 0) && ($CONFIG_TR == 1 || $CONFIG_TR == 2 || $CONFIG_TR == 4) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_TR $CONFIG_PCI]];set CONFIG_IBMOL [sync_tristate $CONFIG_IBMOL $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu39.config.f.x2 disabled {y}} else {configure_entry .menu39.config.f.x2 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu39.config.f.x2 disabled {m}} else {configure_entry .menu39.config.f.x2 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu39.config.f.x2 normal {m}} else {configure_entry .menu39.config.f.x2 disabled {m}}; configure_entry .menu39.config.f.x2 normal {n l}} else {configure_entry .menu39.config.f.x2 disabled {y n m l}}
	global CONFIG_IBMLS
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_TR != 0) && ($CONFIG_TR == 1 || $CONFIG_TR == 2 || $CONFIG_TR == 4) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_TR $CONFIG_PCI]];set CONFIG_IBMLS [sync_tristate $CONFIG_IBMLS $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu39.config.f.x3 disabled {y}} else {configure_entry .menu39.config.f.x3 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu39.config.f.x3 disabled {m}} else {configure_entry .menu39.config.f.x3 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu39.config.f.x3 normal {m}} else {configure_entry .menu39.config.f.x3 disabled {m}}; configure_entry .menu39.config.f.x3 normal {n l}} else {configure_entry .menu39.config.f.x3 disabled {y n m l}}
	global CONFIG_3C359
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_TR != 0) && ($CONFIG_TR == 1 || $CONFIG_TR == 2 || $CONFIG_TR == 4) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_TR $CONFIG_PCI]];set CONFIG_3C359 [sync_tristate $CONFIG_3C359 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu39.config.f.x4 disabled {y}} else {configure_entry .menu39.config.f.x4 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu39.config.f.x4 disabled {m}} else {configure_entry .menu39.config.f.x4 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu39.config.f.x4 normal {m}} else {configure_entry .menu39.config.f.x4 disabled {m}}; configure_entry .menu39.config.f.x4 normal {n l}} else {configure_entry .menu39.config.f.x4 disabled {y n m l}}
	global CONFIG_TMS380TR
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_TR != 0)} then {
	configure_entry .menu39.config.f.x5 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu39.config.f.x5 normal {m}} else {configure_entry .menu39.config.f.x5 disabled {m}}; configure_entry .menu39.config.f.x5 normal {n l}} else {configure_entry .menu39.config.f.x5 disabled {y n m l}}
	global CONFIG_TMSPCI
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_TR != 0) && ($CONFIG_TMS380TR != 0) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PCI]];set CONFIG_TMSPCI [sync_tristate $CONFIG_TMSPCI $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu39.config.f.x6 disabled {y}} else {configure_entry .menu39.config.f.x6 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu39.config.f.x6 disabled {m}} else {configure_entry .menu39.config.f.x6 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu39.config.f.x6 normal {m}} else {configure_entry .menu39.config.f.x6 disabled {m}}; configure_entry .menu39.config.f.x6 normal {n l}} else {configure_entry .menu39.config.f.x6 disabled {y n m l}}
	global CONFIG_TMSISA
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_TR != 0) && ($CONFIG_TMS380TR != 0) && ($CONFIG_ISA == 1 || $CONFIG_ISA == 2 || $CONFIG_ISA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ISA]];set CONFIG_TMSISA [sync_tristate $CONFIG_TMSISA $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu39.config.f.x7 disabled {y}} else {configure_entry .menu39.config.f.x7 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu39.config.f.x7 disabled {m}} else {configure_entry .menu39.config.f.x7 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu39.config.f.x7 normal {m}} else {configure_entry .menu39.config.f.x7 disabled {m}}; configure_entry .menu39.config.f.x7 normal {n l}} else {configure_entry .menu39.config.f.x7 disabled {y n m l}}
	global CONFIG_ABYSS
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_TR != 0) && ($CONFIG_TMS380TR != 0) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PCI]];set CONFIG_ABYSS [sync_tristate $CONFIG_ABYSS $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu39.config.f.x8 disabled {y}} else {configure_entry .menu39.config.f.x8 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu39.config.f.x8 disabled {m}} else {configure_entry .menu39.config.f.x8 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu39.config.f.x8 normal {m}} else {configure_entry .menu39.config.f.x8 disabled {m}}; configure_entry .menu39.config.f.x8 normal {n l}} else {configure_entry .menu39.config.f.x8 disabled {y n m l}}
	global CONFIG_MADGEMC
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_TR != 0) && ($CONFIG_TMS380TR != 0) && ($CONFIG_MCA == 1 || $CONFIG_MCA == 2 || $CONFIG_MCA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_MCA]];set CONFIG_MADGEMC [sync_tristate $CONFIG_MADGEMC $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu39.config.f.x9 disabled {y}} else {configure_entry .menu39.config.f.x9 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu39.config.f.x9 disabled {m}} else {configure_entry .menu39.config.f.x9 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu39.config.f.x9 normal {m}} else {configure_entry .menu39.config.f.x9 disabled {m}}; configure_entry .menu39.config.f.x9 normal {n l}} else {configure_entry .menu39.config.f.x9 disabled {y n m l}}
	global CONFIG_SMCTR
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_TR != 0) && ($CONFIG_ISA == 1 || $CONFIG_MCA == 1)} then {
	configure_entry .menu39.config.f.x10 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu39.config.f.x10 normal {m}} else {configure_entry .menu39.config.f.x10 disabled {m}}; configure_entry .menu39.config.f.x10 normal {n l}} else {configure_entry .menu39.config.f.x10 disabled {y n m l}}
}


proc update_define_menu39 {} {
	update_define_mainmenu
	global CONFIG_MODULES
	global CONFIG_TR
	global CONFIG_IBMTR
	global CONFIG_TMS380TR
	global CONFIG_SMCTR
set CONFIG_TR [expr $CONFIG_TR|16]
set CONFIG_IBMTR [expr $CONFIG_IBMTR|16]
set CONFIG_TMS380TR [expr $CONFIG_TMS380TR|16]
set CONFIG_SMCTR [expr $CONFIG_SMCTR|16]
	global CONFIG_NET
	global CONFIG_NETDEVICES
	global CONFIG_PCI
	global CONFIG_ISA
	global CONFIG_MCA
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_PCI == 1 || $CONFIG_ISA == 1 || $CONFIG_MCA == 1)} then {
	set CONFIG_TR [expr $CONFIG_TR&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_PCI != 1 && $CONFIG_ISA != 1 && $CONFIG_MCA != 1)} then {	global CONSTANT_N
set CONFIG_TR $CONSTANT_N }
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_TR != 0) && ($CONFIG_ISA == 1 || $CONFIG_MCA == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_IBMTR == 2)} then {set CONFIG_IBMTR 1}; set CONFIG_IBMTR [expr $CONFIG_IBMTR&15]}
	global CONFIG_IBMOL
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_TR != 0) && ($CONFIG_TR == 1 || $CONFIG_TR == 2 || $CONFIG_TR == 4) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_TR $CONFIG_PCI]]; set CONFIG_IBMOL [sync_tristate $CONFIG_IBMOL $tmpvar_dep]; set CONFIG_IBMOL [expr $CONFIG_IBMOL&15]}
	global CONFIG_IBMLS
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_TR != 0) && ($CONFIG_TR == 1 || $CONFIG_TR == 2 || $CONFIG_TR == 4) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_TR $CONFIG_PCI]]; set CONFIG_IBMLS [sync_tristate $CONFIG_IBMLS $tmpvar_dep]; set CONFIG_IBMLS [expr $CONFIG_IBMLS&15]}
	global CONFIG_3C359
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_TR != 0) && ($CONFIG_TR == 1 || $CONFIG_TR == 2 || $CONFIG_TR == 4) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_TR $CONFIG_PCI]]; set CONFIG_3C359 [sync_tristate $CONFIG_3C359 $tmpvar_dep]; set CONFIG_3C359 [expr $CONFIG_3C359&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_TR != 0)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_TMS380TR == 2)} then {set CONFIG_TMS380TR 1}; set CONFIG_TMS380TR [expr $CONFIG_TMS380TR&15]}
	global CONFIG_TMSPCI
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_TR != 0) && ($CONFIG_TMS380TR != 0) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PCI]]; set CONFIG_TMSPCI [sync_tristate $CONFIG_TMSPCI $tmpvar_dep]; set CONFIG_TMSPCI [expr $CONFIG_TMSPCI&15]}
	global CONFIG_TMSISA
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_TR != 0) && ($CONFIG_TMS380TR != 0) && ($CONFIG_ISA == 1 || $CONFIG_ISA == 2 || $CONFIG_ISA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ISA]]; set CONFIG_TMSISA [sync_tristate $CONFIG_TMSISA $tmpvar_dep]; set CONFIG_TMSISA [expr $CONFIG_TMSISA&15]}
	global CONFIG_ABYSS
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_TR != 0) && ($CONFIG_TMS380TR != 0) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PCI]]; set CONFIG_ABYSS [sync_tristate $CONFIG_ABYSS $tmpvar_dep]; set CONFIG_ABYSS [expr $CONFIG_ABYSS&15]}
	global CONFIG_MADGEMC
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_TR != 0) && ($CONFIG_TMS380TR != 0) && ($CONFIG_MCA == 1 || $CONFIG_MCA == 2 || $CONFIG_MCA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_MCA]]; set CONFIG_MADGEMC [sync_tristate $CONFIG_MADGEMC $tmpvar_dep]; set CONFIG_MADGEMC [expr $CONFIG_MADGEMC&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_TR != 0) && ($CONFIG_ISA == 1 || $CONFIG_MCA == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_SMCTR == 2)} then {set CONFIG_SMCTR 1}; set CONFIG_SMCTR [expr $CONFIG_SMCTR&15]}
}


proc menu40 {w title} {
	set oldFocus [focus]
	catch {focus .menu34}
	catch {destroy $w; unregister_active 40}
	toplevel $w -class Dialog
	wm withdraw $w
	global active_menus
	set active_menus [lsort -integer [linsert $active_menus end 40]]
	message $w.m -width 400 -aspect 300 -text \
		"Wan interfaces"  -relief raised
	pack $w.m -pady 10 -side top -padx 10
	wm title $w "Wan interfaces" 

	bind $w <Escape> "catch {focus $oldFocus}; destroy $w; unregister_active 40; break"
	set nextscript "catch {focus $oldFocus}; destroy $w; unregister_active 40; menu41 .menu41 \"$title\""
	frame $w.f
	button $w.f.back -text "OK" \
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 40"
	button $w.f.next -text "Next" -underline 0\
		-width 15 -command $nextscript
	bind all <Alt-n> $nextscript
	button $w.f.prev -text "Prev" -underline 0\
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 40; menu39 .menu39 \"$title\""
	bind $w <Alt-p> "catch {focus $oldFocus}; destroy $w; unregister_active 40; menu39 .menu39 \"$title\";break"
	pack $w.f.back $w.f.next $w.f.prev -side left -expand on
	pack $w.f -pady 10 -side bottom -anchor w -fill x
	frame $w.topline -relief ridge -borderwidth 2 -height 2
	pack $w.topline -side top -fill x

	frame $w.botline -relief ridge -borderwidth 2 -height 2
	pack $w.botline -side bottom -fill x

	frame $w.config
	pack $w.config -fill y -expand on

	scrollbar $w.config.vscroll -command "$w.config.canvas yview"
	pack $w.config.vscroll -side right -fill y

	canvas $w.config.canvas -height 1\
		-relief flat -borderwidth 0 -yscrollcommand "$w.config.vscroll set" \
		-width [expr [winfo screenwidth .] * 1 / 2] 
	frame $w.config.f
	bind $w <Key-Down> "$w.config.canvas yview scroll  1 unit;break;"
	bind $w <Key-Up> "$w.config.canvas yview scroll  -1 unit;break;"
	bind $w <Key-Next> "$w.config.canvas yview scroll  1 page;break;"
	bind $w <Key-Prior> "$w.config.canvas yview scroll  -1 page;break;"
	bind $w <Key-Home> "$w.config.canvas yview moveto 0;break;"
	bind $w <Key-End> "$w.config.canvas yview moveto 1 ;break;"
	pack $w.config.canvas -side right -fill y


	bool $w.config.f 40 0 "Wan interfaces support" CONFIG_WAN
	dep_tristate $w.config.f 40 1 "  Comtrol Hostess SV-11 support" CONFIG_HOSTESS_SV11
	dep_tristate $w.config.f 40 2 "  COSA/SRP sync serial boards support" CONFIG_COSA
	tristate $w.config.f 40 3 "  MultiGate (COMX) synchronous serial boards support" CONFIG_COMX
	dep_tristate $w.config.f 40 4 "    Support for COMX/CMX/HiCOMX boards" CONFIG_COMX_HW_COMX
	dep_tristate $w.config.f 40 5 "    Support for LoCOMX board" CONFIG_COMX_HW_LOCOMX
	dep_tristate $w.config.f 40 6 "    Support for MixCOM board" CONFIG_COMX_HW_MIXCOM
	dep_tristate $w.config.f 40 7 "    Support for MUNICH based boards: SliceCOM, PCICOM (WelCOM)" CONFIG_COMX_HW_MUNICH
	dep_tristate $w.config.f 40 8 "    Support for HDLC and syncPPP protocols on MultiGate boards" CONFIG_COMX_PROTO_PPP
	dep_tristate $w.config.f 40 9 "    Support for LAPB protocol on MultiGate boards" CONFIG_COMX_PROTO_LAPB
	dep_tristate $w.config.f 40 10 "    Support for LAPB protocol on MultiGate boards" CONFIG_COMX_PROTO_LAPB
	dep_tristate $w.config.f 40 11 "    Support for Frame Relay on MultiGate boards" CONFIG_COMX_PROTO_FR
	dep_tristate $w.config.f 40 12 "  DSCC4 support" CONFIG_DSCC4
	bool $w.config.f 40 13 "    Etinc PCISYNC features" CONFIG_DSCC4_PCISYNC
	bool $w.config.f 40 14 "    GPIO and PCI #RST pins wired together" CONFIG_DSCC4_PCI_RST
	tristate $w.config.f 40 15 "  LanMedia Corp. SSI/V.35, T1/E1, HSSI, T3 boards" CONFIG_LANMEDIA
	tristate $w.config.f 40 16 "  Aurora Technology, Inc. synchronous asynchronous PCI cards V2" CONFIG_ATI_XX20
	dep_tristate $w.config.f 40 17 "  Sealevel Systems 4021 support" CONFIG_SEALEVEL_4021
	tristate $w.config.f 40 18 "  SyncLink HDLC/SYNCPPP support" CONFIG_SYNCLINK_SYNCPPP
	tristate $w.config.f 40 19 "  Generic HDLC layer" CONFIG_HDLC
	bool $w.config.f 40 20 "    Raw HDLC support" CONFIG_HDLC_RAW
	bool $w.config.f 40 21 "    Raw HDLC Ethernet device support" CONFIG_HDLC_RAW_ETH
	bool $w.config.f 40 22 "    Cisco HDLC support" CONFIG_HDLC_CISCO
	bool $w.config.f 40 23 "    Frame Relay support" CONFIG_HDLC_FR
	bool $w.config.f 40 24 "    Synchronous Point-to-Point Protocol (PPP) support" CONFIG_HDLC_PPP
	bool $w.config.f 40 25 "    X.25 protocol support" CONFIG_HDLC_X25
	comment $w.config.f 40 26 "    X.25/LAPB support is disabled"
	dep_tristate $w.config.f 40 27 "    SDL RISCom/N2 support" CONFIG_N2
	dep_tristate $w.config.f 40 28 "    Moxa C101 support" CONFIG_C101
	dep_tristate $w.config.f 40 29 "    6WIND Chinook support" CONFIG_CHINOOK
	dep_tristate $w.config.f 40 30 "    FarSync T-Series support" CONFIG_FARSYNC
	bool $w.config.f 40 31 "    Debug received/transmitted packets" CONFIG_HDLC_DEBUG_PKT
	bool $w.config.f 40 32 "    Debug hard_header routines" CONFIG_HDLC_DEBUG_HARD_HEADER
	bool $w.config.f 40 33 "    Debug FECN/BECN conditions" CONFIG_HDLC_DEBUG_ECN
	bool $w.config.f 40 34 "    Debug RX/TX packet rings" CONFIG_HDLC_DEBUG_RINGS
	tristate $w.config.f 40 35 "  Frame relay DLCI support" CONFIG_DLCI
	int $w.config.f 40 36 "    Max open DLCI" CONFIG_DLCI_COUNT
	int $w.config.f 40 37 "    Max DLCI per device" CONFIG_DLCI_MAX
	dep_tristate $w.config.f 40 38 "    SDLA (Sangoma S502/S508) support" CONFIG_SDLA
	bool $w.config.f 40 39 "  WAN router drivers" CONFIG_WAN_ROUTER_DRIVERS
	dep_tristate $w.config.f 40 40 "    Sangoma WANPIPE(tm) multiprotocol cards" CONFIG_VENDOR_SANGOMA
	bool $w.config.f 40 41 "      WANPIPE Cisco HDLC support" CONFIG_WANPIPE_CHDLC
	bool $w.config.f 40 42 "      WANPIPE Frame Relay support" CONFIG_WANPIPE_FR
	bool $w.config.f 40 43 "      WANPIPE X.25 support" CONFIG_WANPIPE_X25
	bool $w.config.f 40 44 "      WANPIPE PPP support" CONFIG_WANPIPE_PPP
	bool $w.config.f 40 45 "      WANPIPE Multi-Port PPP support" CONFIG_WANPIPE_MULTPPP
	dep_tristate $w.config.f 40 46 "    Cyclom 2X(tm) cards (EXPERIMENTAL)" CONFIG_CYCLADES_SYNC
	bool $w.config.f 40 47 "      Cyclom 2X X.25 support (EXPERIMENTAL)" CONFIG_CYCLOMX_X25
	dep_tristate $w.config.f 40 48 "  LAPB over Ethernet driver (EXPERIMENTAL)" CONFIG_LAPBETHER
	dep_tristate $w.config.f 40 49 "  X.25 async driver (EXPERIMENTAL)" CONFIG_X25_ASY



	focus $w
	update_active
	global winx; global winy
	if {[winfo exists .menu34] == 0} then {menu34 .menu34 "Network device support"}
	set winx [expr [winfo x .menu34]+30]; set winy [expr [winfo y .menu34]+30]
	if {[winfo exists $w]} then {wm geometry $w +$winx+$winy}
	update idletasks
	if {[winfo exists $w]} then  {$w.config.canvas create window 0 0 -anchor nw -window $w.config.f

	$w.config.canvas configure \
		-width [expr [winfo reqwidth $w.config.f] + 1]\
		-scrollregion "-1 -1 [expr [winfo reqwidth $w.config.f] + 1] \
			 [expr [winfo reqheight $w.config.f] + 1]"

	set winy [expr [winfo reqh $w] - [winfo reqh $w.config.canvas]]
	set scry [expr [winfo screenh $w] / 2]
	set maxy [expr [winfo screenh $w] * 3 / 4]
	set canvtotal [expr [winfo reqh $w.config.f] + 2]
	if [expr $winy + $canvtotal < $maxy] {
		$w.config.canvas configure -height $canvtotal
	} else {
		$w.config.canvas configure -height [expr $scry - $winy]
		}
	}
	update idletasks
	if {[winfo exists $w]} then {
	wm maxsize $w [winfo width $w] [winfo screenheight $w]
	wm minsize $w [winfo width $w] 100

	wm deiconify $w
}
}

proc update_menu40 {} {
	global CONFIG_NET
	global CONFIG_NETDEVICES
	global CONFIG_WAN
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1)} then {
	configure_entry .menu40.config.f.x0 normal {n l y}} else {configure_entry .menu40.config.f.x0 disabled {y n l}}
	global CONFIG_MODULES
	global CONFIG_ISA
	global CONFIG_HOSTESS_SV11
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1) && ($CONFIG_ISA == 1)} then {
	global CONSTANT_M
	set tmpvar_dep [effective_dep [list $CONSTANT_M]];set CONFIG_HOSTESS_SV11 [sync_tristate $CONFIG_HOSTESS_SV11 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu40.config.f.x1 disabled {y}} else {configure_entry .menu40.config.f.x1 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu40.config.f.x1 disabled {m}} else {configure_entry .menu40.config.f.x1 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu40.config.f.x1 normal {m}} else {configure_entry .menu40.config.f.x1 disabled {m}}; configure_entry .menu40.config.f.x1 normal {n l}} else {configure_entry .menu40.config.f.x1 disabled {y n m l}}
	global CONFIG_COSA
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1) && ($CONFIG_ISA == 1)} then {
	global CONSTANT_M
	set tmpvar_dep [effective_dep [list $CONSTANT_M]];set CONFIG_COSA [sync_tristate $CONFIG_COSA $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu40.config.f.x2 disabled {y}} else {configure_entry .menu40.config.f.x2 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu40.config.f.x2 disabled {m}} else {configure_entry .menu40.config.f.x2 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu40.config.f.x2 normal {m}} else {configure_entry .menu40.config.f.x2 disabled {m}}; configure_entry .menu40.config.f.x2 normal {n l}} else {configure_entry .menu40.config.f.x2 disabled {y n m l}}
	global CONFIG_COMX
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1)} then {
	configure_entry .menu40.config.f.x3 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu40.config.f.x3 normal {m}} else {configure_entry .menu40.config.f.x3 disabled {m}}; configure_entry .menu40.config.f.x3 normal {n l}} else {configure_entry .menu40.config.f.x3 disabled {y n m l}}
	global CONFIG_COMX_HW_COMX
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1) && ($CONFIG_COMX != 0) && ($CONFIG_COMX == 1 || $CONFIG_COMX == 2 || $CONFIG_COMX == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_COMX]];set CONFIG_COMX_HW_COMX [sync_tristate $CONFIG_COMX_HW_COMX $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu40.config.f.x4 disabled {y}} else {configure_entry .menu40.config.f.x4 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu40.config.f.x4 disabled {m}} else {configure_entry .menu40.config.f.x4 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu40.config.f.x4 normal {m}} else {configure_entry .menu40.config.f.x4 disabled {m}}; configure_entry .menu40.config.f.x4 normal {n l}} else {configure_entry .menu40.config.f.x4 disabled {y n m l}}
	global CONFIG_COMX_HW_LOCOMX
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1) && ($CONFIG_COMX != 0) && ($CONFIG_COMX == 1 || $CONFIG_COMX == 2 || $CONFIG_COMX == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_COMX]];set CONFIG_COMX_HW_LOCOMX [sync_tristate $CONFIG_COMX_HW_LOCOMX $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu40.config.f.x5 disabled {y}} else {configure_entry .menu40.config.f.x5 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu40.config.f.x5 disabled {m}} else {configure_entry .menu40.config.f.x5 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu40.config.f.x5 normal {m}} else {configure_entry .menu40.config.f.x5 disabled {m}}; configure_entry .menu40.config.f.x5 normal {n l}} else {configure_entry .menu40.config.f.x5 disabled {y n m l}}
	global CONFIG_COMX_HW_MIXCOM
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1) && ($CONFIG_COMX != 0) && ($CONFIG_COMX == 1 || $CONFIG_COMX == 2 || $CONFIG_COMX == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_COMX]];set CONFIG_COMX_HW_MIXCOM [sync_tristate $CONFIG_COMX_HW_MIXCOM $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu40.config.f.x6 disabled {y}} else {configure_entry .menu40.config.f.x6 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu40.config.f.x6 disabled {m}} else {configure_entry .menu40.config.f.x6 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu40.config.f.x6 normal {m}} else {configure_entry .menu40.config.f.x6 disabled {m}}; configure_entry .menu40.config.f.x6 normal {n l}} else {configure_entry .menu40.config.f.x6 disabled {y n m l}}
	global CONFIG_COMX_HW_MUNICH
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1) && ($CONFIG_COMX != 0) && ($CONFIG_COMX == 1 || $CONFIG_COMX == 2 || $CONFIG_COMX == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_COMX]];set CONFIG_COMX_HW_MUNICH [sync_tristate $CONFIG_COMX_HW_MUNICH $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu40.config.f.x7 disabled {y}} else {configure_entry .menu40.config.f.x7 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu40.config.f.x7 disabled {m}} else {configure_entry .menu40.config.f.x7 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu40.config.f.x7 normal {m}} else {configure_entry .menu40.config.f.x7 disabled {m}}; configure_entry .menu40.config.f.x7 normal {n l}} else {configure_entry .menu40.config.f.x7 disabled {y n m l}}
	global CONFIG_COMX_PROTO_PPP
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1) && ($CONFIG_COMX != 0) && ($CONFIG_COMX == 1 || $CONFIG_COMX == 2 || $CONFIG_COMX == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_COMX]];set CONFIG_COMX_PROTO_PPP [sync_tristate $CONFIG_COMX_PROTO_PPP $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu40.config.f.x8 disabled {y}} else {configure_entry .menu40.config.f.x8 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu40.config.f.x8 disabled {m}} else {configure_entry .menu40.config.f.x8 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu40.config.f.x8 normal {m}} else {configure_entry .menu40.config.f.x8 disabled {m}}; configure_entry .menu40.config.f.x8 normal {n l}} else {configure_entry .menu40.config.f.x8 disabled {y n m l}}
	global CONFIG_LAPB
	global CONFIG_COMX_PROTO_LAPB
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1) && ($CONFIG_COMX != 0) && ($CONFIG_LAPB == 1) && ($CONFIG_COMX == 1 || $CONFIG_COMX == 2 || $CONFIG_COMX == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_COMX]];set CONFIG_COMX_PROTO_LAPB [sync_tristate $CONFIG_COMX_PROTO_LAPB $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu40.config.f.x9 disabled {y}} else {configure_entry .menu40.config.f.x9 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu40.config.f.x9 disabled {m}} else {configure_entry .menu40.config.f.x9 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu40.config.f.x9 normal {m}} else {configure_entry .menu40.config.f.x9 disabled {m}}; configure_entry .menu40.config.f.x9 normal {n l}} else {configure_entry .menu40.config.f.x9 disabled {y n m l}}
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1) && ($CONFIG_COMX != 0) && ($CONFIG_LAPB == 2) && ($CONFIG_LAPB == 1 || $CONFIG_LAPB == 2 || $CONFIG_LAPB == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_LAPB]];set CONFIG_COMX_PROTO_LAPB [sync_tristate $CONFIG_COMX_PROTO_LAPB $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu40.config.f.x10 disabled {y}} else {configure_entry .menu40.config.f.x10 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu40.config.f.x10 disabled {m}} else {configure_entry .menu40.config.f.x10 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu40.config.f.x10 normal {m}} else {configure_entry .menu40.config.f.x10 disabled {m}}; configure_entry .menu40.config.f.x10 normal {n l}} else {configure_entry .menu40.config.f.x10 disabled {y n m l}}
	global CONFIG_COMX_PROTO_FR
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1) && ($CONFIG_COMX != 0) && ($CONFIG_COMX == 1 || $CONFIG_COMX == 2 || $CONFIG_COMX == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_COMX]];set CONFIG_COMX_PROTO_FR [sync_tristate $CONFIG_COMX_PROTO_FR $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu40.config.f.x11 disabled {y}} else {configure_entry .menu40.config.f.x11 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu40.config.f.x11 disabled {m}} else {configure_entry .menu40.config.f.x11 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu40.config.f.x11 normal {m}} else {configure_entry .menu40.config.f.x11 disabled {m}}; configure_entry .menu40.config.f.x11 normal {n l}} else {configure_entry .menu40.config.f.x11 disabled {y n m l}}
	global CONFIG_DSCC4
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1)} then {
	global CONSTANT_M
	set tmpvar_dep [effective_dep [list $CONSTANT_M]];set CONFIG_DSCC4 [sync_tristate $CONFIG_DSCC4 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu40.config.f.x12 disabled {y}} else {configure_entry .menu40.config.f.x12 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu40.config.f.x12 disabled {m}} else {configure_entry .menu40.config.f.x12 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu40.config.f.x12 normal {m}} else {configure_entry .menu40.config.f.x12 disabled {m}}; configure_entry .menu40.config.f.x12 normal {n l}} else {configure_entry .menu40.config.f.x12 disabled {y n m l}}
	global CONFIG_DSCC4_PCISYNC
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1) && ($CONFIG_DSCC4 == 2)} then {
	configure_entry .menu40.config.f.x13 normal {n l y}} else {configure_entry .menu40.config.f.x13 disabled {y n l}}
	global CONFIG_DSCC4_PCI_RST
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1) && ($CONFIG_DSCC4 == 2)} then {
	configure_entry .menu40.config.f.x14 normal {n l y}} else {configure_entry .menu40.config.f.x14 disabled {y n l}}
	global CONFIG_LANMEDIA
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1)} then {
	configure_entry .menu40.config.f.x15 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu40.config.f.x15 normal {m}} else {configure_entry .menu40.config.f.x15 disabled {m}}; configure_entry .menu40.config.f.x15 normal {n l}} else {configure_entry .menu40.config.f.x15 disabled {y n m l}}
	global CONFIG_ATI_XX20
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1)} then {
	configure_entry .menu40.config.f.x16 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu40.config.f.x16 normal {m}} else {configure_entry .menu40.config.f.x16 disabled {m}}; configure_entry .menu40.config.f.x16 normal {n l}} else {configure_entry .menu40.config.f.x16 disabled {y n m l}}
	global CONFIG_SEALEVEL_4021
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1)} then {
	global CONSTANT_M
	set tmpvar_dep [effective_dep [list $CONSTANT_M]];set CONFIG_SEALEVEL_4021 [sync_tristate $CONFIG_SEALEVEL_4021 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu40.config.f.x17 disabled {y}} else {configure_entry .menu40.config.f.x17 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu40.config.f.x17 disabled {m}} else {configure_entry .menu40.config.f.x17 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu40.config.f.x17 normal {m}} else {configure_entry .menu40.config.f.x17 disabled {m}}; configure_entry .menu40.config.f.x17 normal {n l}} else {configure_entry .menu40.config.f.x17 disabled {y n m l}}
	global CONFIG_SYNCLINK_SYNCPPP
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1)} then {
	configure_entry .menu40.config.f.x18 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu40.config.f.x18 normal {m}} else {configure_entry .menu40.config.f.x18 disabled {m}}; configure_entry .menu40.config.f.x18 normal {n l}} else {configure_entry .menu40.config.f.x18 disabled {y n m l}}
	global CONFIG_HDLC
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1)} then {
	configure_entry .menu40.config.f.x19 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu40.config.f.x19 normal {m}} else {configure_entry .menu40.config.f.x19 disabled {m}}; configure_entry .menu40.config.f.x19 normal {n l}} else {configure_entry .menu40.config.f.x19 disabled {y n m l}}
	global CONFIG_HDLC_RAW
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1) && ($CONFIG_HDLC != 0)} then {
	configure_entry .menu40.config.f.x20 normal {n l y}} else {configure_entry .menu40.config.f.x20 disabled {y n l}}
	global CONFIG_HDLC_RAW_ETH
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1) && ($CONFIG_HDLC != 0)} then {
	configure_entry .menu40.config.f.x21 normal {n l y}} else {configure_entry .menu40.config.f.x21 disabled {y n l}}
	global CONFIG_HDLC_CISCO
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1) && ($CONFIG_HDLC != 0)} then {
	configure_entry .menu40.config.f.x22 normal {n l y}} else {configure_entry .menu40.config.f.x22 disabled {y n l}}
	global CONFIG_HDLC_FR
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1) && ($CONFIG_HDLC != 0)} then {
	configure_entry .menu40.config.f.x23 normal {n l y}} else {configure_entry .menu40.config.f.x23 disabled {y n l}}
	global CONFIG_HDLC_PPP
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1) && ($CONFIG_HDLC != 0)} then {
	configure_entry .menu40.config.f.x24 normal {n l y}} else {configure_entry .menu40.config.f.x24 disabled {y n l}}
	global CONFIG_HDLC_X25
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1) && ($CONFIG_HDLC != 0) && ($CONFIG_LAPB == 2 && $CONFIG_HDLC == 2 || $CONFIG_LAPB == 1)} then {
	configure_entry .menu40.config.f.x25 normal {n l y}} else {configure_entry .menu40.config.f.x25 disabled {y n l}}
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1) && ($CONFIG_HDLC != 0) && ($CONFIG_LAPB != 2 || $CONFIG_HDLC != 2 && $CONFIG_LAPB != 1)} then {configure_entry .menu40.config.f.x26 normal {m}} else {configure_entry .menu40.config.f.x26 disabled {m}}
	global CONFIG_N2
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1) && ($CONFIG_HDLC != 0) && ($CONFIG_HDLC == 1 || $CONFIG_HDLC == 2 || $CONFIG_HDLC == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_HDLC]];set CONFIG_N2 [sync_tristate $CONFIG_N2 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu40.config.f.x27 disabled {y}} else {configure_entry .menu40.config.f.x27 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu40.config.f.x27 disabled {m}} else {configure_entry .menu40.config.f.x27 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu40.config.f.x27 normal {m}} else {configure_entry .menu40.config.f.x27 disabled {m}}; configure_entry .menu40.config.f.x27 normal {n l}} else {configure_entry .menu40.config.f.x27 disabled {y n m l}}
	global CONFIG_C101
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1) && ($CONFIG_HDLC != 0) && ($CONFIG_HDLC == 1 || $CONFIG_HDLC == 2 || $CONFIG_HDLC == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_HDLC]];set CONFIG_C101 [sync_tristate $CONFIG_C101 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu40.config.f.x28 disabled {y}} else {configure_entry .menu40.config.f.x28 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu40.config.f.x28 disabled {m}} else {configure_entry .menu40.config.f.x28 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu40.config.f.x28 normal {m}} else {configure_entry .menu40.config.f.x28 disabled {m}}; configure_entry .menu40.config.f.x28 normal {n l}} else {configure_entry .menu40.config.f.x28 disabled {y n m l}}
	global CONFIG_CHINOOK
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1) && ($CONFIG_HDLC != 0) && ($CONFIG_HDLC == 1 || $CONFIG_HDLC == 2 || $CONFIG_HDLC == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_HDLC]];set CONFIG_CHINOOK [sync_tristate $CONFIG_CHINOOK $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu40.config.f.x29 disabled {y}} else {configure_entry .menu40.config.f.x29 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu40.config.f.x29 disabled {m}} else {configure_entry .menu40.config.f.x29 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu40.config.f.x29 normal {m}} else {configure_entry .menu40.config.f.x29 disabled {m}}; configure_entry .menu40.config.f.x29 normal {n l}} else {configure_entry .menu40.config.f.x29 disabled {y n m l}}
	global CONFIG_FARSYNC
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1) && ($CONFIG_HDLC != 0) && ($CONFIG_HDLC == 1 || $CONFIG_HDLC == 2 || $CONFIG_HDLC == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_HDLC]];set CONFIG_FARSYNC [sync_tristate $CONFIG_FARSYNC $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu40.config.f.x30 disabled {y}} else {configure_entry .menu40.config.f.x30 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu40.config.f.x30 disabled {m}} else {configure_entry .menu40.config.f.x30 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu40.config.f.x30 normal {m}} else {configure_entry .menu40.config.f.x30 disabled {m}}; configure_entry .menu40.config.f.x30 normal {n l}} else {configure_entry .menu40.config.f.x30 disabled {y n m l}}
	global CONFIG_HDLC_DEBUG_PKT
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1) && ($CONFIG_HDLC != 0)} then {
	configure_entry .menu40.config.f.x31 normal {n l y}} else {configure_entry .menu40.config.f.x31 disabled {y n l}}
	global CONFIG_HDLC_DEBUG_HARD_HEADER
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1) && ($CONFIG_HDLC != 0)} then {
	configure_entry .menu40.config.f.x32 normal {n l y}} else {configure_entry .menu40.config.f.x32 disabled {y n l}}
	global CONFIG_HDLC_DEBUG_ECN
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1) && ($CONFIG_HDLC != 0)} then {
	configure_entry .menu40.config.f.x33 normal {n l y}} else {configure_entry .menu40.config.f.x33 disabled {y n l}}
	global CONFIG_HDLC_DEBUG_RINGS
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1) && ($CONFIG_HDLC != 0)} then {
	configure_entry .menu40.config.f.x34 normal {n l y}} else {configure_entry .menu40.config.f.x34 disabled {y n l}}
	global CONFIG_DLCI
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1)} then {
	configure_entry .menu40.config.f.x35 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu40.config.f.x35 normal {m}} else {configure_entry .menu40.config.f.x35 disabled {m}}; configure_entry .menu40.config.f.x35 normal {n l}} else {configure_entry .menu40.config.f.x35 disabled {y n m l}}
	global CONFIG_DLCI_COUNT
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1) && ($CONFIG_DLCI != 0)} then {.menu40.config.f.x36.x configure -state normal -foreground [ cget .ref -foreground ]; .menu40.config.f.x36.l configure -state normal; } else {.menu40.config.f.x36.x configure -state disabled -foreground [ cget .ref -disabledforeground ]; .menu40.config.f.x36.l configure -state disabled}
	global CONFIG_DLCI_MAX
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1) && ($CONFIG_DLCI != 0)} then {.menu40.config.f.x37.x configure -state normal -foreground [ cget .ref -foreground ]; .menu40.config.f.x37.l configure -state normal; } else {.menu40.config.f.x37.x configure -state disabled -foreground [ cget .ref -disabledforeground ]; .menu40.config.f.x37.l configure -state disabled}
	global CONFIG_SDLA
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1) && ($CONFIG_DLCI != 0) && ($CONFIG_DLCI == 1 || $CONFIG_DLCI == 2 || $CONFIG_DLCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_DLCI]];set CONFIG_SDLA [sync_tristate $CONFIG_SDLA $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu40.config.f.x38 disabled {y}} else {configure_entry .menu40.config.f.x38 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu40.config.f.x38 disabled {m}} else {configure_entry .menu40.config.f.x38 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu40.config.f.x38 normal {m}} else {configure_entry .menu40.config.f.x38 disabled {m}}; configure_entry .menu40.config.f.x38 normal {n l}} else {configure_entry .menu40.config.f.x38 disabled {y n m l}}
	global CONFIG_WAN_ROUTER
	global CONFIG_WAN_ROUTER_DRIVERS
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1) && ($CONFIG_WAN_ROUTER != 0)} then {
	configure_entry .menu40.config.f.x39 normal {n l y}} else {configure_entry .menu40.config.f.x39 disabled {y n l}}
	global CONFIG_VENDOR_SANGOMA
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1) && ($CONFIG_WAN_ROUTER != 0) && ($CONFIG_WAN_ROUTER_DRIVERS == 1) && ($CONFIG_WAN_ROUTER == 1 || $CONFIG_WAN_ROUTER == 2 || $CONFIG_WAN_ROUTER == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_WAN_ROUTER]];set CONFIG_VENDOR_SANGOMA [sync_tristate $CONFIG_VENDOR_SANGOMA $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu40.config.f.x40 disabled {y}} else {configure_entry .menu40.config.f.x40 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu40.config.f.x40 disabled {m}} else {configure_entry .menu40.config.f.x40 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu40.config.f.x40 normal {m}} else {configure_entry .menu40.config.f.x40 disabled {m}}; configure_entry .menu40.config.f.x40 normal {n l}} else {configure_entry .menu40.config.f.x40 disabled {y n m l}}
	global CONFIG_WANPIPE_CHDLC
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1) && ($CONFIG_WAN_ROUTER != 0) && ($CONFIG_WAN_ROUTER_DRIVERS == 1) && ($CONFIG_VENDOR_SANGOMA != 0)} then {
	configure_entry .menu40.config.f.x41 normal {n l y}} else {configure_entry .menu40.config.f.x41 disabled {y n l}}
	global CONFIG_WANPIPE_FR
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1) && ($CONFIG_WAN_ROUTER != 0) && ($CONFIG_WAN_ROUTER_DRIVERS == 1) && ($CONFIG_VENDOR_SANGOMA != 0)} then {
	configure_entry .menu40.config.f.x42 normal {n l y}} else {configure_entry .menu40.config.f.x42 disabled {y n l}}
	global CONFIG_WANPIPE_X25
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1) && ($CONFIG_WAN_ROUTER != 0) && ($CONFIG_WAN_ROUTER_DRIVERS == 1) && ($CONFIG_VENDOR_SANGOMA != 0)} then {
	configure_entry .menu40.config.f.x43 normal {n l y}} else {configure_entry .menu40.config.f.x43 disabled {y n l}}
	global CONFIG_WANPIPE_PPP
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1) && ($CONFIG_WAN_ROUTER != 0) && ($CONFIG_WAN_ROUTER_DRIVERS == 1) && ($CONFIG_VENDOR_SANGOMA != 0)} then {
	configure_entry .menu40.config.f.x44 normal {n l y}} else {configure_entry .menu40.config.f.x44 disabled {y n l}}
	global CONFIG_WANPIPE_MULTPPP
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1) && ($CONFIG_WAN_ROUTER != 0) && ($CONFIG_WAN_ROUTER_DRIVERS == 1) && ($CONFIG_VENDOR_SANGOMA != 0)} then {
	configure_entry .menu40.config.f.x45 normal {n l y}} else {configure_entry .menu40.config.f.x45 disabled {y n l}}
	global CONFIG_EXPERIMENTAL
	global CONFIG_CYCLADES_SYNC
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1) && ($CONFIG_WAN_ROUTER != 0) && ($CONFIG_WAN_ROUTER_DRIVERS == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_WAN_ROUTER_DRIVERS == 1 || $CONFIG_WAN_ROUTER_DRIVERS == 2 || $CONFIG_WAN_ROUTER_DRIVERS == 4) && ($CONFIG_ISA == 1 || $CONFIG_ISA == 2 || $CONFIG_ISA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_WAN_ROUTER_DRIVERS $CONFIG_ISA]];set CONFIG_CYCLADES_SYNC [sync_tristate $CONFIG_CYCLADES_SYNC $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu40.config.f.x46 disabled {y}} else {configure_entry .menu40.config.f.x46 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu40.config.f.x46 disabled {m}} else {configure_entry .menu40.config.f.x46 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu40.config.f.x46 normal {m}} else {configure_entry .menu40.config.f.x46 disabled {m}}; configure_entry .menu40.config.f.x46 normal {n l}} else {configure_entry .menu40.config.f.x46 disabled {y n m l}}
	global CONFIG_CYCLOMX_X25
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1) && ($CONFIG_WAN_ROUTER != 0) && ($CONFIG_WAN_ROUTER_DRIVERS == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_CYCLADES_SYNC != 0)} then {
	configure_entry .menu40.config.f.x47 normal {n l y}} else {configure_entry .menu40.config.f.x47 disabled {y n l}}
	global CONFIG_X25
	global CONFIG_LAPBETHER
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_LAPB == 1 || $CONFIG_LAPB == 2 || $CONFIG_LAPB == 4) && ($CONFIG_X25 == 1 || $CONFIG_X25 == 2 || $CONFIG_X25 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_LAPB $CONFIG_X25]];set CONFIG_LAPBETHER [sync_tristate $CONFIG_LAPBETHER $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu40.config.f.x48 disabled {y}} else {configure_entry .menu40.config.f.x48 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu40.config.f.x48 disabled {m}} else {configure_entry .menu40.config.f.x48 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu40.config.f.x48 normal {m}} else {configure_entry .menu40.config.f.x48 disabled {m}}; configure_entry .menu40.config.f.x48 normal {n l}} else {configure_entry .menu40.config.f.x48 disabled {y n m l}}
	global CONFIG_X25_ASY
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_LAPB == 1 || $CONFIG_LAPB == 2 || $CONFIG_LAPB == 4) && ($CONFIG_X25 == 1 || $CONFIG_X25 == 2 || $CONFIG_X25 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_LAPB $CONFIG_X25]];set CONFIG_X25_ASY [sync_tristate $CONFIG_X25_ASY $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu40.config.f.x49 disabled {y}} else {configure_entry .menu40.config.f.x49 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu40.config.f.x49 disabled {m}} else {configure_entry .menu40.config.f.x49 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu40.config.f.x49 normal {m}} else {configure_entry .menu40.config.f.x49 disabled {m}}; configure_entry .menu40.config.f.x49 normal {n l}} else {configure_entry .menu40.config.f.x49 disabled {y n m l}}
}


proc update_define_menu40 {} {
	update_define_mainmenu
	global CONFIG_MODULES
	global CONFIG_COMX
	global CONFIG_LANMEDIA
	global CONFIG_ATI_XX20
	global CONFIG_SYNCLINK_SYNCPPP
	global CONFIG_HDLC
	global CONFIG_DLCI
	global CONFIG_WAN
set CONFIG_WAN [expr $CONFIG_WAN|16]
set CONFIG_COMX [expr $CONFIG_COMX|16]
	global CONFIG_DSCC4_PCISYNC
set CONFIG_DSCC4_PCISYNC [expr $CONFIG_DSCC4_PCISYNC|16]
	global CONFIG_DSCC4_PCI_RST
set CONFIG_DSCC4_PCI_RST [expr $CONFIG_DSCC4_PCI_RST|16]
set CONFIG_LANMEDIA [expr $CONFIG_LANMEDIA|16]
set CONFIG_ATI_XX20 [expr $CONFIG_ATI_XX20|16]
set CONFIG_SYNCLINK_SYNCPPP [expr $CONFIG_SYNCLINK_SYNCPPP|16]
set CONFIG_HDLC [expr $CONFIG_HDLC|16]
	global CONFIG_HDLC_RAW
set CONFIG_HDLC_RAW [expr $CONFIG_HDLC_RAW|16]
	global CONFIG_HDLC_RAW_ETH
set CONFIG_HDLC_RAW_ETH [expr $CONFIG_HDLC_RAW_ETH|16]
	global CONFIG_HDLC_CISCO
set CONFIG_HDLC_CISCO [expr $CONFIG_HDLC_CISCO|16]
	global CONFIG_HDLC_FR
set CONFIG_HDLC_FR [expr $CONFIG_HDLC_FR|16]
	global CONFIG_HDLC_PPP
set CONFIG_HDLC_PPP [expr $CONFIG_HDLC_PPP|16]
	global CONFIG_HDLC_X25
set CONFIG_HDLC_X25 [expr $CONFIG_HDLC_X25|16]
	global CONFIG_HDLC_DEBUG_PKT
set CONFIG_HDLC_DEBUG_PKT [expr $CONFIG_HDLC_DEBUG_PKT|16]
	global CONFIG_HDLC_DEBUG_HARD_HEADER
set CONFIG_HDLC_DEBUG_HARD_HEADER [expr $CONFIG_HDLC_DEBUG_HARD_HEADER|16]
	global CONFIG_HDLC_DEBUG_ECN
set CONFIG_HDLC_DEBUG_ECN [expr $CONFIG_HDLC_DEBUG_ECN|16]
	global CONFIG_HDLC_DEBUG_RINGS
set CONFIG_HDLC_DEBUG_RINGS [expr $CONFIG_HDLC_DEBUG_RINGS|16]
set CONFIG_DLCI [expr $CONFIG_DLCI|16]
	global CONFIG_WAN_ROUTER_DRIVERS
set CONFIG_WAN_ROUTER_DRIVERS [expr $CONFIG_WAN_ROUTER_DRIVERS|16]
	global CONFIG_WANPIPE_CHDLC
set CONFIG_WANPIPE_CHDLC [expr $CONFIG_WANPIPE_CHDLC|16]
	global CONFIG_WANPIPE_FR
set CONFIG_WANPIPE_FR [expr $CONFIG_WANPIPE_FR|16]
	global CONFIG_WANPIPE_X25
set CONFIG_WANPIPE_X25 [expr $CONFIG_WANPIPE_X25|16]
	global CONFIG_WANPIPE_PPP
set CONFIG_WANPIPE_PPP [expr $CONFIG_WANPIPE_PPP|16]
	global CONFIG_WANPIPE_MULTPPP
set CONFIG_WANPIPE_MULTPPP [expr $CONFIG_WANPIPE_MULTPPP|16]
	global CONFIG_CYCLOMX_X25
set CONFIG_CYCLOMX_X25 [expr $CONFIG_CYCLOMX_X25|16]
	global CONFIG_NET
	global CONFIG_NETDEVICES
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1)} then {
	set CONFIG_WAN [expr $CONFIG_WAN&15]}
	global CONFIG_ISA
	global CONFIG_HOSTESS_SV11
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1) && ($CONFIG_ISA == 1)} then {
	global CONSTANT_M
	set tmpvar_dep [effective_dep [list $CONSTANT_M]]; set CONFIG_HOSTESS_SV11 [sync_tristate $CONFIG_HOSTESS_SV11 $tmpvar_dep]; set CONFIG_HOSTESS_SV11 [expr $CONFIG_HOSTESS_SV11&15]}
	global CONFIG_COSA
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1) && ($CONFIG_ISA == 1)} then {
	global CONSTANT_M
	set tmpvar_dep [effective_dep [list $CONSTANT_M]]; set CONFIG_COSA [sync_tristate $CONFIG_COSA $tmpvar_dep]; set CONFIG_COSA [expr $CONFIG_COSA&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_COMX == 2)} then {set CONFIG_COMX 1}; set CONFIG_COMX [expr $CONFIG_COMX&15]}
	global CONFIG_COMX_HW_COMX
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1) && ($CONFIG_COMX != 0) && ($CONFIG_COMX == 1 || $CONFIG_COMX == 2 || $CONFIG_COMX == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_COMX]]; set CONFIG_COMX_HW_COMX [sync_tristate $CONFIG_COMX_HW_COMX $tmpvar_dep]; set CONFIG_COMX_HW_COMX [expr $CONFIG_COMX_HW_COMX&15]}
	global CONFIG_COMX_HW_LOCOMX
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1) && ($CONFIG_COMX != 0) && ($CONFIG_COMX == 1 || $CONFIG_COMX == 2 || $CONFIG_COMX == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_COMX]]; set CONFIG_COMX_HW_LOCOMX [sync_tristate $CONFIG_COMX_HW_LOCOMX $tmpvar_dep]; set CONFIG_COMX_HW_LOCOMX [expr $CONFIG_COMX_HW_LOCOMX&15]}
	global CONFIG_COMX_HW_MIXCOM
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1) && ($CONFIG_COMX != 0) && ($CONFIG_COMX == 1 || $CONFIG_COMX == 2 || $CONFIG_COMX == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_COMX]]; set CONFIG_COMX_HW_MIXCOM [sync_tristate $CONFIG_COMX_HW_MIXCOM $tmpvar_dep]; set CONFIG_COMX_HW_MIXCOM [expr $CONFIG_COMX_HW_MIXCOM&15]}
	global CONFIG_COMX_HW_MUNICH
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1) && ($CONFIG_COMX != 0) && ($CONFIG_COMX == 1 || $CONFIG_COMX == 2 || $CONFIG_COMX == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_COMX]]; set CONFIG_COMX_HW_MUNICH [sync_tristate $CONFIG_COMX_HW_MUNICH $tmpvar_dep]; set CONFIG_COMX_HW_MUNICH [expr $CONFIG_COMX_HW_MUNICH&15]}
	global CONFIG_COMX_PROTO_PPP
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1) && ($CONFIG_COMX != 0) && ($CONFIG_COMX == 1 || $CONFIG_COMX == 2 || $CONFIG_COMX == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_COMX]]; set CONFIG_COMX_PROTO_PPP [sync_tristate $CONFIG_COMX_PROTO_PPP $tmpvar_dep]; set CONFIG_COMX_PROTO_PPP [expr $CONFIG_COMX_PROTO_PPP&15]}
	global CONFIG_LAPB
	global CONFIG_COMX_PROTO_LAPB
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1) && ($CONFIG_COMX != 0) && ($CONFIG_LAPB == 1) && ($CONFIG_COMX == 1 || $CONFIG_COMX == 2 || $CONFIG_COMX == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_COMX]]; set CONFIG_COMX_PROTO_LAPB [sync_tristate $CONFIG_COMX_PROTO_LAPB $tmpvar_dep]; set CONFIG_COMX_PROTO_LAPB [expr $CONFIG_COMX_PROTO_LAPB&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1) && ($CONFIG_COMX != 0) && ($CONFIG_LAPB == 2) && ($CONFIG_LAPB == 1 || $CONFIG_LAPB == 2 || $CONFIG_LAPB == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_LAPB]]; set CONFIG_COMX_PROTO_LAPB [sync_tristate $CONFIG_COMX_PROTO_LAPB $tmpvar_dep]; set CONFIG_COMX_PROTO_LAPB [expr $CONFIG_COMX_PROTO_LAPB&15]}
	global CONFIG_COMX_PROTO_FR
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1) && ($CONFIG_COMX != 0) && ($CONFIG_COMX == 1 || $CONFIG_COMX == 2 || $CONFIG_COMX == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_COMX]]; set CONFIG_COMX_PROTO_FR [sync_tristate $CONFIG_COMX_PROTO_FR $tmpvar_dep]; set CONFIG_COMX_PROTO_FR [expr $CONFIG_COMX_PROTO_FR&15]}
	global CONFIG_DSCC4
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1)} then {
	global CONSTANT_M
	set tmpvar_dep [effective_dep [list $CONSTANT_M]]; set CONFIG_DSCC4 [sync_tristate $CONFIG_DSCC4 $tmpvar_dep]; set CONFIG_DSCC4 [expr $CONFIG_DSCC4&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1) && ($CONFIG_DSCC4 == 2)} then {
	set CONFIG_DSCC4_PCISYNC [expr $CONFIG_DSCC4_PCISYNC&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1) && ($CONFIG_DSCC4 == 2)} then {
	set CONFIG_DSCC4_PCI_RST [expr $CONFIG_DSCC4_PCI_RST&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_LANMEDIA == 2)} then {set CONFIG_LANMEDIA 1}; set CONFIG_LANMEDIA [expr $CONFIG_LANMEDIA&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_ATI_XX20 == 2)} then {set CONFIG_ATI_XX20 1}; set CONFIG_ATI_XX20 [expr $CONFIG_ATI_XX20&15]}
	global CONFIG_SEALEVEL_4021
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1)} then {
	global CONSTANT_M
	set tmpvar_dep [effective_dep [list $CONSTANT_M]]; set CONFIG_SEALEVEL_4021 [sync_tristate $CONFIG_SEALEVEL_4021 $tmpvar_dep]; set CONFIG_SEALEVEL_4021 [expr $CONFIG_SEALEVEL_4021&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_SYNCLINK_SYNCPPP == 2)} then {set CONFIG_SYNCLINK_SYNCPPP 1}; set CONFIG_SYNCLINK_SYNCPPP [expr $CONFIG_SYNCLINK_SYNCPPP&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_HDLC == 2)} then {set CONFIG_HDLC 1}; set CONFIG_HDLC [expr $CONFIG_HDLC&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1) && ($CONFIG_HDLC != 0)} then {
	set CONFIG_HDLC_RAW [expr $CONFIG_HDLC_RAW&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1) && ($CONFIG_HDLC != 0)} then {
	set CONFIG_HDLC_RAW_ETH [expr $CONFIG_HDLC_RAW_ETH&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1) && ($CONFIG_HDLC != 0)} then {
	set CONFIG_HDLC_CISCO [expr $CONFIG_HDLC_CISCO&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1) && ($CONFIG_HDLC != 0)} then {
	set CONFIG_HDLC_FR [expr $CONFIG_HDLC_FR&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1) && ($CONFIG_HDLC != 0)} then {
	set CONFIG_HDLC_PPP [expr $CONFIG_HDLC_PPP&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1) && ($CONFIG_HDLC != 0) && ($CONFIG_LAPB == 2 && $CONFIG_HDLC == 2 || $CONFIG_LAPB == 1)} then {
	set CONFIG_HDLC_X25 [expr $CONFIG_HDLC_X25&15]}
	global CONFIG_N2
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1) && ($CONFIG_HDLC != 0) && ($CONFIG_HDLC == 1 || $CONFIG_HDLC == 2 || $CONFIG_HDLC == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_HDLC]]; set CONFIG_N2 [sync_tristate $CONFIG_N2 $tmpvar_dep]; set CONFIG_N2 [expr $CONFIG_N2&15]}
	global CONFIG_C101
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1) && ($CONFIG_HDLC != 0) && ($CONFIG_HDLC == 1 || $CONFIG_HDLC == 2 || $CONFIG_HDLC == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_HDLC]]; set CONFIG_C101 [sync_tristate $CONFIG_C101 $tmpvar_dep]; set CONFIG_C101 [expr $CONFIG_C101&15]}
	global CONFIG_CHINOOK
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1) && ($CONFIG_HDLC != 0) && ($CONFIG_HDLC == 1 || $CONFIG_HDLC == 2 || $CONFIG_HDLC == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_HDLC]]; set CONFIG_CHINOOK [sync_tristate $CONFIG_CHINOOK $tmpvar_dep]; set CONFIG_CHINOOK [expr $CONFIG_CHINOOK&15]}
	global CONFIG_FARSYNC
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1) && ($CONFIG_HDLC != 0) && ($CONFIG_HDLC == 1 || $CONFIG_HDLC == 2 || $CONFIG_HDLC == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_HDLC]]; set CONFIG_FARSYNC [sync_tristate $CONFIG_FARSYNC $tmpvar_dep]; set CONFIG_FARSYNC [expr $CONFIG_FARSYNC&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1) && ($CONFIG_HDLC != 0)} then {
	set CONFIG_HDLC_DEBUG_PKT [expr $CONFIG_HDLC_DEBUG_PKT&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1) && ($CONFIG_HDLC != 0)} then {
	set CONFIG_HDLC_DEBUG_HARD_HEADER [expr $CONFIG_HDLC_DEBUG_HARD_HEADER&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1) && ($CONFIG_HDLC != 0)} then {
	set CONFIG_HDLC_DEBUG_ECN [expr $CONFIG_HDLC_DEBUG_ECN&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1) && ($CONFIG_HDLC != 0)} then {
	set CONFIG_HDLC_DEBUG_RINGS [expr $CONFIG_HDLC_DEBUG_RINGS&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_DLCI == 2)} then {set CONFIG_DLCI 1}; set CONFIG_DLCI [expr $CONFIG_DLCI&15]}
	global CONFIG_DLCI_COUNT
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1) && ($CONFIG_DLCI != 0)} then {validate_int CONFIG_DLCI_COUNT "$CONFIG_DLCI_COUNT" 24}
	global CONFIG_DLCI_MAX
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1) && ($CONFIG_DLCI != 0)} then {validate_int CONFIG_DLCI_MAX "$CONFIG_DLCI_MAX" 8}
	global CONFIG_SDLA
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1) && ($CONFIG_DLCI != 0) && ($CONFIG_DLCI == 1 || $CONFIG_DLCI == 2 || $CONFIG_DLCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_DLCI]]; set CONFIG_SDLA [sync_tristate $CONFIG_SDLA $tmpvar_dep]; set CONFIG_SDLA [expr $CONFIG_SDLA&15]}
	global CONFIG_WAN_ROUTER
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1) && ($CONFIG_WAN_ROUTER != 0)} then {
	set CONFIG_WAN_ROUTER_DRIVERS [expr $CONFIG_WAN_ROUTER_DRIVERS&15]}
	global CONFIG_VENDOR_SANGOMA
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1) && ($CONFIG_WAN_ROUTER != 0) && ($CONFIG_WAN_ROUTER_DRIVERS == 1) && ($CONFIG_WAN_ROUTER == 1 || $CONFIG_WAN_ROUTER == 2 || $CONFIG_WAN_ROUTER == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_WAN_ROUTER]]; set CONFIG_VENDOR_SANGOMA [sync_tristate $CONFIG_VENDOR_SANGOMA $tmpvar_dep]; set CONFIG_VENDOR_SANGOMA [expr $CONFIG_VENDOR_SANGOMA&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1) && ($CONFIG_WAN_ROUTER != 0) && ($CONFIG_WAN_ROUTER_DRIVERS == 1) && ($CONFIG_VENDOR_SANGOMA != 0)} then {
	set CONFIG_WANPIPE_CHDLC [expr $CONFIG_WANPIPE_CHDLC&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1) && ($CONFIG_WAN_ROUTER != 0) && ($CONFIG_WAN_ROUTER_DRIVERS == 1) && ($CONFIG_VENDOR_SANGOMA != 0)} then {
	set CONFIG_WANPIPE_FR [expr $CONFIG_WANPIPE_FR&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1) && ($CONFIG_WAN_ROUTER != 0) && ($CONFIG_WAN_ROUTER_DRIVERS == 1) && ($CONFIG_VENDOR_SANGOMA != 0)} then {
	set CONFIG_WANPIPE_X25 [expr $CONFIG_WANPIPE_X25&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1) && ($CONFIG_WAN_ROUTER != 0) && ($CONFIG_WAN_ROUTER_DRIVERS == 1) && ($CONFIG_VENDOR_SANGOMA != 0)} then {
	set CONFIG_WANPIPE_PPP [expr $CONFIG_WANPIPE_PPP&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1) && ($CONFIG_WAN_ROUTER != 0) && ($CONFIG_WAN_ROUTER_DRIVERS == 1) && ($CONFIG_VENDOR_SANGOMA != 0)} then {
	set CONFIG_WANPIPE_MULTPPP [expr $CONFIG_WANPIPE_MULTPPP&15]}
	global CONFIG_EXPERIMENTAL
	global CONFIG_CYCLADES_SYNC
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1) && ($CONFIG_WAN_ROUTER != 0) && ($CONFIG_WAN_ROUTER_DRIVERS == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_WAN_ROUTER_DRIVERS == 1 || $CONFIG_WAN_ROUTER_DRIVERS == 2 || $CONFIG_WAN_ROUTER_DRIVERS == 4) && ($CONFIG_ISA == 1 || $CONFIG_ISA == 2 || $CONFIG_ISA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_WAN_ROUTER_DRIVERS $CONFIG_ISA]]; set CONFIG_CYCLADES_SYNC [sync_tristate $CONFIG_CYCLADES_SYNC $tmpvar_dep]; set CONFIG_CYCLADES_SYNC [expr $CONFIG_CYCLADES_SYNC&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1) && ($CONFIG_WAN_ROUTER != 0) && ($CONFIG_WAN_ROUTER_DRIVERS == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_CYCLADES_SYNC != 0)} then {
	set CONFIG_CYCLOMX_X25 [expr $CONFIG_CYCLOMX_X25&15]}
	global CONFIG_X25
	global CONFIG_LAPBETHER
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_LAPB == 1 || $CONFIG_LAPB == 2 || $CONFIG_LAPB == 4) && ($CONFIG_X25 == 1 || $CONFIG_X25 == 2 || $CONFIG_X25 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_LAPB $CONFIG_X25]]; set CONFIG_LAPBETHER [sync_tristate $CONFIG_LAPBETHER $tmpvar_dep]; set CONFIG_LAPBETHER [expr $CONFIG_LAPBETHER&15]}
	global CONFIG_X25_ASY
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_LAPB == 1 || $CONFIG_LAPB == 2 || $CONFIG_LAPB == 4) && ($CONFIG_X25 == 1 || $CONFIG_X25 == 2 || $CONFIG_X25 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_LAPB $CONFIG_X25]]; set CONFIG_X25_ASY [sync_tristate $CONFIG_X25_ASY $tmpvar_dep]; set CONFIG_X25_ASY [expr $CONFIG_X25_ASY&15]}
}


proc menu41 {w title} {
	set oldFocus [focus]
	catch {focus .menu34}
	catch {destroy $w; unregister_active 41}
	toplevel $w -class Dialog
	wm withdraw $w
	global active_menus
	set active_menus [lsort -integer [linsert $active_menus end 41]]
	message $w.m -width 400 -aspect 300 -text \
		"PCMCIA network device support"  -relief raised
	pack $w.m -pady 10 -side top -padx 10
	wm title $w "PCMCIA network device support" 

	bind $w <Escape> "catch {focus $oldFocus}; destroy $w; unregister_active 41; break"
	set nextscript "catch {focus $oldFocus}; destroy $w; unregister_active 41; catch {destroy .menu34}; unregister_active 34; menu42 .menu42 \"$title\""
	frame $w.f
	button $w.f.back -text "OK" \
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 41"
	button $w.f.next -text "Next" -underline 0\
		-width 15 -command $nextscript
	bind all <Alt-n> $nextscript
	button $w.f.prev -text "Prev" -underline 0\
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 41; menu40 .menu40 \"$title\""
	bind $w <Alt-p> "catch {focus $oldFocus}; destroy $w; unregister_active 41; menu40 .menu40 \"$title\";break"
	pack $w.f.back $w.f.next $w.f.prev -side left -expand on
	pack $w.f -pady 10 -side bottom -anchor w -fill x
	frame $w.topline -relief ridge -borderwidth 2 -height 2
	pack $w.topline -side top -fill x

	frame $w.botline -relief ridge -borderwidth 2 -height 2
	pack $w.botline -side bottom -fill x

	frame $w.config
	pack $w.config -fill y -expand on

	scrollbar $w.config.vscroll -command "$w.config.canvas yview"
	pack $w.config.vscroll -side right -fill y

	canvas $w.config.canvas -height 1\
		-relief flat -borderwidth 0 -yscrollcommand "$w.config.vscroll set" \
		-width [expr [winfo screenwidth .] * 1 / 2] 
	frame $w.config.f
	bind $w <Key-Down> "$w.config.canvas yview scroll  1 unit;break;"
	bind $w <Key-Up> "$w.config.canvas yview scroll  -1 unit;break;"
	bind $w <Key-Next> "$w.config.canvas yview scroll  1 page;break;"
	bind $w <Key-Prior> "$w.config.canvas yview scroll  -1 page;break;"
	bind $w <Key-Home> "$w.config.canvas yview moveto 0;break;"
	bind $w <Key-End> "$w.config.canvas yview moveto 1 ;break;"
	pack $w.config.canvas -side right -fill y


	bool $w.config.f 41 0 "PCMCIA network device support" CONFIG_NET_PCMCIA
	dep_tristate $w.config.f 41 1 "  3Com 3c589 PCMCIA support" CONFIG_PCMCIA_3C589
	dep_tristate $w.config.f 41 2 "  3Com 3c574 PCMCIA support" CONFIG_PCMCIA_3C574
	dep_tristate $w.config.f 41 3 "  Fujitsu FMV-J18x PCMCIA support" CONFIG_PCMCIA_FMVJ18X
	dep_tristate $w.config.f 41 4 "  NE2000 compatible PCMCIA support" CONFIG_PCMCIA_PCNET
	dep_tristate $w.config.f 41 5 "  Asix AX88190 PCMCIA support" CONFIG_PCMCIA_AXNET
	dep_tristate $w.config.f 41 6 "  New Media PCMCIA support" CONFIG_PCMCIA_NMCLAN
	dep_tristate $w.config.f 41 7 "  SMC 91Cxx PCMCIA support" CONFIG_PCMCIA_SMC91C92
	dep_tristate $w.config.f 41 8 "  Xircom 16-bit PCMCIA support" CONFIG_PCMCIA_XIRC2PS
	dep_tristate $w.config.f 41 9 "  COM20020 ARCnet PCMCIA support" CONFIG_ARCNET_COM20020_CS
	dep_tristate $w.config.f 41 10 "  IBM PCMCIA tokenring adapter support" CONFIG_PCMCIA_IBMTR
	tristate $w.config.f 41 11 "  Xircom CardBus support (new driver)" CONFIG_PCMCIA_XIRCOM
	tristate $w.config.f 41 12 "  Xircom Tulip-like CardBus support (old driver)" CONFIG_PCMCIA_XIRTULIP
	bool $w.config.f 41 13 "  Pcmcia Wireless LAN" CONFIG_NET_PCMCIA_RADIO
	dep_tristate $w.config.f 41 14 "    Aviator/Raytheon 2.4MHz wireless support" CONFIG_PCMCIA_RAYCS
	dep_tristate $w.config.f 41 15 "    Xircom Netwave AirSurfer wireless support" CONFIG_PCMCIA_NETWAVE
	dep_tristate $w.config.f 41 16 "    AT&T/Lucent Wavelan wireless support" CONFIG_PCMCIA_WAVELAN
	dep_tristate $w.config.f 41 17 "    Aironet 4500/4800 PCMCIA support" CONFIG_AIRONET4500_CS



	focus $w
	update_active
	global winx; global winy
	if {[winfo exists .menu34] == 0} then {menu34 .menu34 "Network device support"}
	set winx [expr [winfo x .menu34]+30]; set winy [expr [winfo y .menu34]+30]
	if {[winfo exists $w]} then {wm geometry $w +$winx+$winy}
	update idletasks
	if {[winfo exists $w]} then  {$w.config.canvas create window 0 0 -anchor nw -window $w.config.f

	$w.config.canvas configure \
		-width [expr [winfo reqwidth $w.config.f] + 1]\
		-scrollregion "-1 -1 [expr [winfo reqwidth $w.config.f] + 1] \
			 [expr [winfo reqheight $w.config.f] + 1]"

	set winy [expr [winfo reqh $w] - [winfo reqh $w.config.canvas]]
	set scry [expr [winfo screenh $w] / 2]
	set maxy [expr [winfo screenh $w] * 3 / 4]
	set canvtotal [expr [winfo reqh $w.config.f] + 2]
	if [expr $winy + $canvtotal < $maxy] {
		$w.config.canvas configure -height $canvtotal
	} else {
		$w.config.canvas configure -height [expr $scry - $winy]
		}
	}
	update idletasks
	if {[winfo exists $w]} then {
	wm maxsize $w [winfo width $w] [winfo screenheight $w]
	wm minsize $w [winfo width $w] 100

	wm deiconify $w
}
}

proc update_menu41 {} {
	global CONFIG_NET
	global CONFIG_NETDEVICES
	global CONFIG_HOTPLUG
	global CONFIG_PCMCIA
	global CONFIG_NET_PCMCIA
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_HOTPLUG == 1 && $CONFIG_PCMCIA != 0)} then {
	configure_entry .menu41.config.f.x0 normal {n l y}} else {configure_entry .menu41.config.f.x0 disabled {y n l}}
	global CONFIG_MODULES
	global CONFIG_PCMCIA_3C589
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_HOTPLUG == 1 && $CONFIG_PCMCIA != 0) && ($CONFIG_NET_PCMCIA == 1) && ($CONFIG_PCMCIA == 1 || $CONFIG_PCMCIA == 2 || $CONFIG_PCMCIA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PCMCIA]];set CONFIG_PCMCIA_3C589 [sync_tristate $CONFIG_PCMCIA_3C589 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu41.config.f.x1 disabled {y}} else {configure_entry .menu41.config.f.x1 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu41.config.f.x1 disabled {m}} else {configure_entry .menu41.config.f.x1 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu41.config.f.x1 normal {m}} else {configure_entry .menu41.config.f.x1 disabled {m}}; configure_entry .menu41.config.f.x1 normal {n l}} else {configure_entry .menu41.config.f.x1 disabled {y n m l}}
	global CONFIG_PCMCIA_3C574
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_HOTPLUG == 1 && $CONFIG_PCMCIA != 0) && ($CONFIG_NET_PCMCIA == 1) && ($CONFIG_PCMCIA == 1 || $CONFIG_PCMCIA == 2 || $CONFIG_PCMCIA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PCMCIA]];set CONFIG_PCMCIA_3C574 [sync_tristate $CONFIG_PCMCIA_3C574 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu41.config.f.x2 disabled {y}} else {configure_entry .menu41.config.f.x2 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu41.config.f.x2 disabled {m}} else {configure_entry .menu41.config.f.x2 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu41.config.f.x2 normal {m}} else {configure_entry .menu41.config.f.x2 disabled {m}}; configure_entry .menu41.config.f.x2 normal {n l}} else {configure_entry .menu41.config.f.x2 disabled {y n m l}}
	global CONFIG_PCMCIA_FMVJ18X
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_HOTPLUG == 1 && $CONFIG_PCMCIA != 0) && ($CONFIG_NET_PCMCIA == 1) && ($CONFIG_PCMCIA == 1 || $CONFIG_PCMCIA == 2 || $CONFIG_PCMCIA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PCMCIA]];set CONFIG_PCMCIA_FMVJ18X [sync_tristate $CONFIG_PCMCIA_FMVJ18X $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu41.config.f.x3 disabled {y}} else {configure_entry .menu41.config.f.x3 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu41.config.f.x3 disabled {m}} else {configure_entry .menu41.config.f.x3 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu41.config.f.x3 normal {m}} else {configure_entry .menu41.config.f.x3 disabled {m}}; configure_entry .menu41.config.f.x3 normal {n l}} else {configure_entry .menu41.config.f.x3 disabled {y n m l}}
	global CONFIG_PCMCIA_PCNET
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_HOTPLUG == 1 && $CONFIG_PCMCIA != 0) && ($CONFIG_NET_PCMCIA == 1) && ($CONFIG_PCMCIA == 1 || $CONFIG_PCMCIA == 2 || $CONFIG_PCMCIA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PCMCIA]];set CONFIG_PCMCIA_PCNET [sync_tristate $CONFIG_PCMCIA_PCNET $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu41.config.f.x4 disabled {y}} else {configure_entry .menu41.config.f.x4 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu41.config.f.x4 disabled {m}} else {configure_entry .menu41.config.f.x4 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu41.config.f.x4 normal {m}} else {configure_entry .menu41.config.f.x4 disabled {m}}; configure_entry .menu41.config.f.x4 normal {n l}} else {configure_entry .menu41.config.f.x4 disabled {y n m l}}
	global CONFIG_PCMCIA_AXNET
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_HOTPLUG == 1 && $CONFIG_PCMCIA != 0) && ($CONFIG_NET_PCMCIA == 1) && ($CONFIG_PCMCIA == 1 || $CONFIG_PCMCIA == 2 || $CONFIG_PCMCIA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PCMCIA]];set CONFIG_PCMCIA_AXNET [sync_tristate $CONFIG_PCMCIA_AXNET $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu41.config.f.x5 disabled {y}} else {configure_entry .menu41.config.f.x5 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu41.config.f.x5 disabled {m}} else {configure_entry .menu41.config.f.x5 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu41.config.f.x5 normal {m}} else {configure_entry .menu41.config.f.x5 disabled {m}}; configure_entry .menu41.config.f.x5 normal {n l}} else {configure_entry .menu41.config.f.x5 disabled {y n m l}}
	global CONFIG_PCMCIA_NMCLAN
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_HOTPLUG == 1 && $CONFIG_PCMCIA != 0) && ($CONFIG_NET_PCMCIA == 1) && ($CONFIG_PCMCIA == 1 || $CONFIG_PCMCIA == 2 || $CONFIG_PCMCIA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PCMCIA]];set CONFIG_PCMCIA_NMCLAN [sync_tristate $CONFIG_PCMCIA_NMCLAN $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu41.config.f.x6 disabled {y}} else {configure_entry .menu41.config.f.x6 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu41.config.f.x6 disabled {m}} else {configure_entry .menu41.config.f.x6 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu41.config.f.x6 normal {m}} else {configure_entry .menu41.config.f.x6 disabled {m}}; configure_entry .menu41.config.f.x6 normal {n l}} else {configure_entry .menu41.config.f.x6 disabled {y n m l}}
	global CONFIG_PCMCIA_SMC91C92
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_HOTPLUG == 1 && $CONFIG_PCMCIA != 0) && ($CONFIG_NET_PCMCIA == 1) && ($CONFIG_PCMCIA == 1 || $CONFIG_PCMCIA == 2 || $CONFIG_PCMCIA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PCMCIA]];set CONFIG_PCMCIA_SMC91C92 [sync_tristate $CONFIG_PCMCIA_SMC91C92 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu41.config.f.x7 disabled {y}} else {configure_entry .menu41.config.f.x7 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu41.config.f.x7 disabled {m}} else {configure_entry .menu41.config.f.x7 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu41.config.f.x7 normal {m}} else {configure_entry .menu41.config.f.x7 disabled {m}}; configure_entry .menu41.config.f.x7 normal {n l}} else {configure_entry .menu41.config.f.x7 disabled {y n m l}}
	global CONFIG_PCMCIA_XIRC2PS
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_HOTPLUG == 1 && $CONFIG_PCMCIA != 0) && ($CONFIG_NET_PCMCIA == 1) && ($CONFIG_PCMCIA == 1 || $CONFIG_PCMCIA == 2 || $CONFIG_PCMCIA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PCMCIA]];set CONFIG_PCMCIA_XIRC2PS [sync_tristate $CONFIG_PCMCIA_XIRC2PS $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu41.config.f.x8 disabled {y}} else {configure_entry .menu41.config.f.x8 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu41.config.f.x8 disabled {m}} else {configure_entry .menu41.config.f.x8 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu41.config.f.x8 normal {m}} else {configure_entry .menu41.config.f.x8 disabled {m}}; configure_entry .menu41.config.f.x8 normal {n l}} else {configure_entry .menu41.config.f.x8 disabled {y n m l}}
	global CONFIG_ARCNET_COM20020
	global CONFIG_ARCNET
	global CONFIG_ARCNET_COM20020_CS
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_HOTPLUG == 1 && $CONFIG_PCMCIA != 0) && ($CONFIG_NET_PCMCIA == 1) && ($CONFIG_ARCNET_COM20020 == 1 || $CONFIG_ARCNET_COM20020 == 2 || $CONFIG_ARCNET_COM20020 == 4) && ($CONFIG_ARCNET == 1 || $CONFIG_ARCNET == 2 || $CONFIG_ARCNET == 4) && ($CONFIG_PCMCIA == 1 || $CONFIG_PCMCIA == 2 || $CONFIG_PCMCIA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ARCNET_COM20020 $CONFIG_ARCNET $CONFIG_PCMCIA]];set CONFIG_ARCNET_COM20020_CS [sync_tristate $CONFIG_ARCNET_COM20020_CS $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu41.config.f.x9 disabled {y}} else {configure_entry .menu41.config.f.x9 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu41.config.f.x9 disabled {m}} else {configure_entry .menu41.config.f.x9 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu41.config.f.x9 normal {m}} else {configure_entry .menu41.config.f.x9 disabled {m}}; configure_entry .menu41.config.f.x9 normal {n l}} else {configure_entry .menu41.config.f.x9 disabled {y n m l}}
	global CONFIG_IBMTR
	global CONFIG_TR
	global CONFIG_PCMCIA_IBMTR
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_HOTPLUG == 1 && $CONFIG_PCMCIA != 0) && ($CONFIG_NET_PCMCIA == 1) && ($CONFIG_IBMTR != 1) && ($CONFIG_TR == 1 || $CONFIG_TR == 2 || $CONFIG_TR == 4) && ($CONFIG_PCMCIA == 1 || $CONFIG_PCMCIA == 2 || $CONFIG_PCMCIA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_TR $CONFIG_PCMCIA]];set CONFIG_PCMCIA_IBMTR [sync_tristate $CONFIG_PCMCIA_IBMTR $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu41.config.f.x10 disabled {y}} else {configure_entry .menu41.config.f.x10 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu41.config.f.x10 disabled {m}} else {configure_entry .menu41.config.f.x10 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu41.config.f.x10 normal {m}} else {configure_entry .menu41.config.f.x10 disabled {m}}; configure_entry .menu41.config.f.x10 normal {n l}} else {configure_entry .menu41.config.f.x10 disabled {y n m l}}
	global CONFIG_CARDBUS
	global CONFIG_PCMCIA_XIRCOM
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_HOTPLUG == 1 && $CONFIG_PCMCIA != 0) && ($CONFIG_NET_PCMCIA == 1) && ($CONFIG_CARDBUS == 1)} then {
	configure_entry .menu41.config.f.x11 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu41.config.f.x11 normal {m}} else {configure_entry .menu41.config.f.x11 disabled {m}}; configure_entry .menu41.config.f.x11 normal {n l}} else {configure_entry .menu41.config.f.x11 disabled {y n m l}}
	global CONFIG_PCMCIA_XIRTULIP
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_HOTPLUG == 1 && $CONFIG_PCMCIA != 0) && ($CONFIG_NET_PCMCIA == 1) && ($CONFIG_CARDBUS == 1)} then {
	configure_entry .menu41.config.f.x12 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu41.config.f.x12 normal {m}} else {configure_entry .menu41.config.f.x12 disabled {m}}; configure_entry .menu41.config.f.x12 normal {n l}} else {configure_entry .menu41.config.f.x12 disabled {y n m l}}
	global CONFIG_NET_PCMCIA_RADIO
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_HOTPLUG == 1 && $CONFIG_PCMCIA != 0) && ($CONFIG_NET_PCMCIA == 1)} then {
	configure_entry .menu41.config.f.x13 normal {n l y}} else {configure_entry .menu41.config.f.x13 disabled {y n l}}
	global CONFIG_PCMCIA_RAYCS
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_HOTPLUG == 1 && $CONFIG_PCMCIA != 0) && ($CONFIG_NET_PCMCIA == 1) && ($CONFIG_NET_PCMCIA_RADIO == 1) && ($CONFIG_PCMCIA == 1 || $CONFIG_PCMCIA == 2 || $CONFIG_PCMCIA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PCMCIA]];set CONFIG_PCMCIA_RAYCS [sync_tristate $CONFIG_PCMCIA_RAYCS $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu41.config.f.x14 disabled {y}} else {configure_entry .menu41.config.f.x14 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu41.config.f.x14 disabled {m}} else {configure_entry .menu41.config.f.x14 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu41.config.f.x14 normal {m}} else {configure_entry .menu41.config.f.x14 disabled {m}}; configure_entry .menu41.config.f.x14 normal {n l}} else {configure_entry .menu41.config.f.x14 disabled {y n m l}}
	global CONFIG_PCMCIA_NETWAVE
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_HOTPLUG == 1 && $CONFIG_PCMCIA != 0) && ($CONFIG_NET_PCMCIA == 1) && ($CONFIG_NET_PCMCIA_RADIO == 1) && ($CONFIG_PCMCIA == 1 || $CONFIG_PCMCIA == 2 || $CONFIG_PCMCIA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PCMCIA]];set CONFIG_PCMCIA_NETWAVE [sync_tristate $CONFIG_PCMCIA_NETWAVE $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu41.config.f.x15 disabled {y}} else {configure_entry .menu41.config.f.x15 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu41.config.f.x15 disabled {m}} else {configure_entry .menu41.config.f.x15 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu41.config.f.x15 normal {m}} else {configure_entry .menu41.config.f.x15 disabled {m}}; configure_entry .menu41.config.f.x15 normal {n l}} else {configure_entry .menu41.config.f.x15 disabled {y n m l}}
	global CONFIG_PCMCIA_WAVELAN
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_HOTPLUG == 1 && $CONFIG_PCMCIA != 0) && ($CONFIG_NET_PCMCIA == 1) && ($CONFIG_NET_PCMCIA_RADIO == 1) && ($CONFIG_PCMCIA == 1 || $CONFIG_PCMCIA == 2 || $CONFIG_PCMCIA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PCMCIA]];set CONFIG_PCMCIA_WAVELAN [sync_tristate $CONFIG_PCMCIA_WAVELAN $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu41.config.f.x16 disabled {y}} else {configure_entry .menu41.config.f.x16 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu41.config.f.x16 disabled {m}} else {configure_entry .menu41.config.f.x16 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu41.config.f.x16 normal {m}} else {configure_entry .menu41.config.f.x16 disabled {m}}; configure_entry .menu41.config.f.x16 normal {n l}} else {configure_entry .menu41.config.f.x16 disabled {y n m l}}
	global CONFIG_AIRONET4500
	global CONFIG_AIRONET4500_CS
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_HOTPLUG == 1 && $CONFIG_PCMCIA != 0) && ($CONFIG_NET_PCMCIA == 1) && ($CONFIG_NET_PCMCIA_RADIO == 1) && ($CONFIG_AIRONET4500 == 1 || $CONFIG_AIRONET4500 == 2 || $CONFIG_AIRONET4500 == 4) && ($CONFIG_PCMCIA == 1 || $CONFIG_PCMCIA == 2 || $CONFIG_PCMCIA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_AIRONET4500 $CONFIG_PCMCIA]];set CONFIG_AIRONET4500_CS [sync_tristate $CONFIG_AIRONET4500_CS $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu41.config.f.x17 disabled {y}} else {configure_entry .menu41.config.f.x17 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu41.config.f.x17 disabled {m}} else {configure_entry .menu41.config.f.x17 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu41.config.f.x17 normal {m}} else {configure_entry .menu41.config.f.x17 disabled {m}}; configure_entry .menu41.config.f.x17 normal {n l}} else {configure_entry .menu41.config.f.x17 disabled {y n m l}}
}


proc update_define_menu41 {} {
	update_define_mainmenu
	global CONFIG_MODULES
	global CONFIG_PCMCIA_XIRCOM
	global CONFIG_PCMCIA_XIRTULIP
	global CONFIG_NET_PCMCIA
set CONFIG_NET_PCMCIA [expr $CONFIG_NET_PCMCIA|16]
set CONFIG_PCMCIA_XIRCOM [expr $CONFIG_PCMCIA_XIRCOM|16]
set CONFIG_PCMCIA_XIRTULIP [expr $CONFIG_PCMCIA_XIRTULIP|16]
	global CONFIG_NET_PCMCIA_RADIO
set CONFIG_NET_PCMCIA_RADIO [expr $CONFIG_NET_PCMCIA_RADIO|16]
	global CONFIG_NET
	global CONFIG_NETDEVICES
	global CONFIG_HOTPLUG
	global CONFIG_PCMCIA
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_HOTPLUG == 1 && $CONFIG_PCMCIA != 0)} then {
	set CONFIG_NET_PCMCIA [expr $CONFIG_NET_PCMCIA&15]}
	global CONFIG_PCMCIA_3C589
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_HOTPLUG == 1 && $CONFIG_PCMCIA != 0) && ($CONFIG_NET_PCMCIA == 1) && ($CONFIG_PCMCIA == 1 || $CONFIG_PCMCIA == 2 || $CONFIG_PCMCIA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PCMCIA]]; set CONFIG_PCMCIA_3C589 [sync_tristate $CONFIG_PCMCIA_3C589 $tmpvar_dep]; set CONFIG_PCMCIA_3C589 [expr $CONFIG_PCMCIA_3C589&15]}
	global CONFIG_PCMCIA_3C574
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_HOTPLUG == 1 && $CONFIG_PCMCIA != 0) && ($CONFIG_NET_PCMCIA == 1) && ($CONFIG_PCMCIA == 1 || $CONFIG_PCMCIA == 2 || $CONFIG_PCMCIA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PCMCIA]]; set CONFIG_PCMCIA_3C574 [sync_tristate $CONFIG_PCMCIA_3C574 $tmpvar_dep]; set CONFIG_PCMCIA_3C574 [expr $CONFIG_PCMCIA_3C574&15]}
	global CONFIG_PCMCIA_FMVJ18X
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_HOTPLUG == 1 && $CONFIG_PCMCIA != 0) && ($CONFIG_NET_PCMCIA == 1) && ($CONFIG_PCMCIA == 1 || $CONFIG_PCMCIA == 2 || $CONFIG_PCMCIA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PCMCIA]]; set CONFIG_PCMCIA_FMVJ18X [sync_tristate $CONFIG_PCMCIA_FMVJ18X $tmpvar_dep]; set CONFIG_PCMCIA_FMVJ18X [expr $CONFIG_PCMCIA_FMVJ18X&15]}
	global CONFIG_PCMCIA_PCNET
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_HOTPLUG == 1 && $CONFIG_PCMCIA != 0) && ($CONFIG_NET_PCMCIA == 1) && ($CONFIG_PCMCIA == 1 || $CONFIG_PCMCIA == 2 || $CONFIG_PCMCIA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PCMCIA]]; set CONFIG_PCMCIA_PCNET [sync_tristate $CONFIG_PCMCIA_PCNET $tmpvar_dep]; set CONFIG_PCMCIA_PCNET [expr $CONFIG_PCMCIA_PCNET&15]}
	global CONFIG_PCMCIA_AXNET
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_HOTPLUG == 1 && $CONFIG_PCMCIA != 0) && ($CONFIG_NET_PCMCIA == 1) && ($CONFIG_PCMCIA == 1 || $CONFIG_PCMCIA == 2 || $CONFIG_PCMCIA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PCMCIA]]; set CONFIG_PCMCIA_AXNET [sync_tristate $CONFIG_PCMCIA_AXNET $tmpvar_dep]; set CONFIG_PCMCIA_AXNET [expr $CONFIG_PCMCIA_AXNET&15]}
	global CONFIG_PCMCIA_NMCLAN
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_HOTPLUG == 1 && $CONFIG_PCMCIA != 0) && ($CONFIG_NET_PCMCIA == 1) && ($CONFIG_PCMCIA == 1 || $CONFIG_PCMCIA == 2 || $CONFIG_PCMCIA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PCMCIA]]; set CONFIG_PCMCIA_NMCLAN [sync_tristate $CONFIG_PCMCIA_NMCLAN $tmpvar_dep]; set CONFIG_PCMCIA_NMCLAN [expr $CONFIG_PCMCIA_NMCLAN&15]}
	global CONFIG_PCMCIA_SMC91C92
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_HOTPLUG == 1 && $CONFIG_PCMCIA != 0) && ($CONFIG_NET_PCMCIA == 1) && ($CONFIG_PCMCIA == 1 || $CONFIG_PCMCIA == 2 || $CONFIG_PCMCIA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PCMCIA]]; set CONFIG_PCMCIA_SMC91C92 [sync_tristate $CONFIG_PCMCIA_SMC91C92 $tmpvar_dep]; set CONFIG_PCMCIA_SMC91C92 [expr $CONFIG_PCMCIA_SMC91C92&15]}
	global CONFIG_PCMCIA_XIRC2PS
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_HOTPLUG == 1 && $CONFIG_PCMCIA != 0) && ($CONFIG_NET_PCMCIA == 1) && ($CONFIG_PCMCIA == 1 || $CONFIG_PCMCIA == 2 || $CONFIG_PCMCIA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PCMCIA]]; set CONFIG_PCMCIA_XIRC2PS [sync_tristate $CONFIG_PCMCIA_XIRC2PS $tmpvar_dep]; set CONFIG_PCMCIA_XIRC2PS [expr $CONFIG_PCMCIA_XIRC2PS&15]}
	global CONFIG_ARCNET_COM20020
	global CONFIG_ARCNET
	global CONFIG_ARCNET_COM20020_CS
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_HOTPLUG == 1 && $CONFIG_PCMCIA != 0) && ($CONFIG_NET_PCMCIA == 1) && ($CONFIG_ARCNET_COM20020 == 1 || $CONFIG_ARCNET_COM20020 == 2 || $CONFIG_ARCNET_COM20020 == 4) && ($CONFIG_ARCNET == 1 || $CONFIG_ARCNET == 2 || $CONFIG_ARCNET == 4) && ($CONFIG_PCMCIA == 1 || $CONFIG_PCMCIA == 2 || $CONFIG_PCMCIA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ARCNET_COM20020 $CONFIG_ARCNET $CONFIG_PCMCIA]]; set CONFIG_ARCNET_COM20020_CS [sync_tristate $CONFIG_ARCNET_COM20020_CS $tmpvar_dep]; set CONFIG_ARCNET_COM20020_CS [expr $CONFIG_ARCNET_COM20020_CS&15]}
	global CONFIG_IBMTR
	global CONFIG_TR
	global CONFIG_PCMCIA_IBMTR
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_HOTPLUG == 1 && $CONFIG_PCMCIA != 0) && ($CONFIG_NET_PCMCIA == 1) && ($CONFIG_IBMTR != 1) && ($CONFIG_TR == 1 || $CONFIG_TR == 2 || $CONFIG_TR == 4) && ($CONFIG_PCMCIA == 1 || $CONFIG_PCMCIA == 2 || $CONFIG_PCMCIA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_TR $CONFIG_PCMCIA]]; set CONFIG_PCMCIA_IBMTR [sync_tristate $CONFIG_PCMCIA_IBMTR $tmpvar_dep]; set CONFIG_PCMCIA_IBMTR [expr $CONFIG_PCMCIA_IBMTR&15]}
	global CONFIG_CARDBUS
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_HOTPLUG == 1 && $CONFIG_PCMCIA != 0) && ($CONFIG_NET_PCMCIA == 1) && ($CONFIG_CARDBUS == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_PCMCIA_XIRCOM == 2)} then {set CONFIG_PCMCIA_XIRCOM 1}; set CONFIG_PCMCIA_XIRCOM [expr $CONFIG_PCMCIA_XIRCOM&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_HOTPLUG == 1 && $CONFIG_PCMCIA != 0) && ($CONFIG_NET_PCMCIA == 1) && ($CONFIG_CARDBUS == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_PCMCIA_XIRTULIP == 2)} then {set CONFIG_PCMCIA_XIRTULIP 1}; set CONFIG_PCMCIA_XIRTULIP [expr $CONFIG_PCMCIA_XIRTULIP&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_HOTPLUG == 1 && $CONFIG_PCMCIA != 0) && ($CONFIG_NET_PCMCIA == 1)} then {
	set CONFIG_NET_PCMCIA_RADIO [expr $CONFIG_NET_PCMCIA_RADIO&15]}
	global CONFIG_PCMCIA_RAYCS
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_HOTPLUG == 1 && $CONFIG_PCMCIA != 0) && ($CONFIG_NET_PCMCIA == 1) && ($CONFIG_NET_PCMCIA_RADIO == 1) && ($CONFIG_PCMCIA == 1 || $CONFIG_PCMCIA == 2 || $CONFIG_PCMCIA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PCMCIA]]; set CONFIG_PCMCIA_RAYCS [sync_tristate $CONFIG_PCMCIA_RAYCS $tmpvar_dep]; set CONFIG_PCMCIA_RAYCS [expr $CONFIG_PCMCIA_RAYCS&15]}
	global CONFIG_PCMCIA_NETWAVE
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_HOTPLUG == 1 && $CONFIG_PCMCIA != 0) && ($CONFIG_NET_PCMCIA == 1) && ($CONFIG_NET_PCMCIA_RADIO == 1) && ($CONFIG_PCMCIA == 1 || $CONFIG_PCMCIA == 2 || $CONFIG_PCMCIA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PCMCIA]]; set CONFIG_PCMCIA_NETWAVE [sync_tristate $CONFIG_PCMCIA_NETWAVE $tmpvar_dep]; set CONFIG_PCMCIA_NETWAVE [expr $CONFIG_PCMCIA_NETWAVE&15]}
	global CONFIG_PCMCIA_WAVELAN
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_HOTPLUG == 1 && $CONFIG_PCMCIA != 0) && ($CONFIG_NET_PCMCIA == 1) && ($CONFIG_NET_PCMCIA_RADIO == 1) && ($CONFIG_PCMCIA == 1 || $CONFIG_PCMCIA == 2 || $CONFIG_PCMCIA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PCMCIA]]; set CONFIG_PCMCIA_WAVELAN [sync_tristate $CONFIG_PCMCIA_WAVELAN $tmpvar_dep]; set CONFIG_PCMCIA_WAVELAN [expr $CONFIG_PCMCIA_WAVELAN&15]}
	global CONFIG_AIRONET4500
	global CONFIG_AIRONET4500_CS
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_HOTPLUG == 1 && $CONFIG_PCMCIA != 0) && ($CONFIG_NET_PCMCIA == 1) && ($CONFIG_NET_PCMCIA_RADIO == 1) && ($CONFIG_AIRONET4500 == 1 || $CONFIG_AIRONET4500 == 2 || $CONFIG_AIRONET4500 == 4) && ($CONFIG_PCMCIA == 1 || $CONFIG_PCMCIA == 2 || $CONFIG_PCMCIA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_AIRONET4500 $CONFIG_PCMCIA]]; set CONFIG_AIRONET4500_CS [sync_tristate $CONFIG_AIRONET4500_CS $tmpvar_dep]; set CONFIG_AIRONET4500_CS [expr $CONFIG_AIRONET4500_CS&15]}
}


menu_option menu42 42 "Amateur Radio support"
proc menu42 {w title} {
	set oldFocus [focus]
	catch {destroy $w; unregister_active 42}
	toplevel $w -class Dialog
	wm withdraw $w
	global active_menus
	set active_menus [lsort -integer [linsert $active_menus end 42]]
	message $w.m -width 400 -aspect 300 -text \
		"Amateur Radio support"  -relief raised
	pack $w.m -pady 10 -side top -padx 10
	wm title $w "Amateur Radio support" 

	bind $w <Escape> "catch {focus $oldFocus}; destroy $w; unregister_active 42; break"
	set nextscript "catch {focus $oldFocus}; menu43 .menu43 \"$title\""
	frame $w.f
	button $w.f.back -text "Main Menu" \
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 42"
	button $w.f.next -text "Next" -underline 0\
		-width 15 -command $nextscript
	bind all <Alt-n> $nextscript
	button $w.f.prev -text "Prev" -underline 0\
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 42; menu41 .menu41 \"$title\""
	bind $w <Alt-p> "catch {focus $oldFocus}; destroy $w; unregister_active 42; menu41 .menu41 \"$title\";break"
	pack $w.f.back $w.f.next $w.f.prev -side left -expand on
	pack $w.f -pady 10 -side bottom -anchor w -fill x
	frame $w.topline -relief ridge -borderwidth 2 -height 2
	pack $w.topline -side top -fill x

	frame $w.botline -relief ridge -borderwidth 2 -height 2
	pack $w.botline -side bottom -fill x

	frame $w.config
	pack $w.config -fill y -expand on

	scrollbar $w.config.vscroll -command "$w.config.canvas yview"
	pack $w.config.vscroll -side right -fill y

	canvas $w.config.canvas -height 1\
		-relief flat -borderwidth 0 -yscrollcommand "$w.config.vscroll set" \
		-width [expr [winfo screenwidth .] * 1 / 2] 
	frame $w.config.f
	bind $w <Key-Down> "$w.config.canvas yview scroll  1 unit;break;"
	bind $w <Key-Up> "$w.config.canvas yview scroll  -1 unit;break;"
	bind $w <Key-Next> "$w.config.canvas yview scroll  1 page;break;"
	bind $w <Key-Prior> "$w.config.canvas yview scroll  -1 page;break;"
	bind $w <Key-Home> "$w.config.canvas yview moveto 0;break;"
	bind $w <Key-End> "$w.config.canvas yview moveto 1 ;break;"
	pack $w.config.canvas -side right -fill y


	bool $w.config.f 42 0 "Amateur Radio support" CONFIG_HAMRADIO
	comment $w.config.f 42 1 "Packet Radio protocols"
	tristate $w.config.f 42 2 "  Amateur Radio AX.25 Level 2 protocol" CONFIG_AX25
	bool $w.config.f 42 3 "    AX.25 DAMA Slave support" CONFIG_AX25_DAMA_SLAVE
	dep_tristate $w.config.f 42 4 "    Amateur Radio NET/ROM protocol" CONFIG_NETROM
	dep_tristate $w.config.f 42 5 "    Amateur Radio X.25 PLP (Rose)" CONFIG_ROSE
	submenu $w.config.f 42 6 "AX.25 network device drivers" 43



	focus $w
	update_active
	global winx; global winy
	set winx [expr [winfo x .]+30]; set winy [expr [winfo y .]+30]
	if {[winfo exists $w]} then {wm geometry $w +$winx+$winy}
	update idletasks
	if {[winfo exists $w]} then  {$w.config.canvas create window 0 0 -anchor nw -window $w.config.f

	$w.config.canvas configure \
		-width [expr [winfo reqwidth $w.config.f] + 1]\
		-scrollregion "-1 -1 [expr [winfo reqwidth $w.config.f] + 1] \
			 [expr [winfo reqheight $w.config.f] + 1]"

	set winy [expr [winfo reqh $w] - [winfo reqh $w.config.canvas]]
	set scry [expr [winfo screenh $w] / 2]
	set maxy [expr [winfo screenh $w] * 3 / 4]
	set canvtotal [expr [winfo reqh $w.config.f] + 2]
	if [expr $winy + $canvtotal < $maxy] {
		$w.config.canvas configure -height $canvtotal
	} else {
		$w.config.canvas configure -height [expr $scry - $winy]
		}
	}
	update idletasks
	if {[winfo exists $w]} then {
	wm maxsize $w [winfo width $w] [winfo screenheight $w]
	wm minsize $w [winfo width $w] 100

	wm deiconify $w
}
}

proc update_menu42 {} {
	global CONFIG_NET
	global CONFIG_HAMRADIO
	if {($CONFIG_NET == 1)} then {
	configure_entry .menu42.config.f.x0 normal {n l y}} else {configure_entry .menu42.config.f.x0 disabled {y n l}}
	if {($CONFIG_NET == 1) && ($CONFIG_HAMRADIO != 0) && ($CONFIG_NET != 0)} then {configure_entry .menu42.config.f.x1 normal {m}} else {configure_entry .menu42.config.f.x1 disabled {m}}
	global CONFIG_MODULES
	global CONFIG_AX25
	if {($CONFIG_NET == 1) && ($CONFIG_HAMRADIO != 0) && ($CONFIG_NET != 0)} then {
	configure_entry .menu42.config.f.x2 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu42.config.f.x2 normal {m}} else {configure_entry .menu42.config.f.x2 disabled {m}}; configure_entry .menu42.config.f.x2 normal {n l}} else {configure_entry .menu42.config.f.x2 disabled {y n m l}}
	global CONFIG_AX25_DAMA_SLAVE
	if {($CONFIG_NET == 1) && ($CONFIG_HAMRADIO != 0) && ($CONFIG_NET != 0) && ($CONFIG_AX25 != 0)} then {
	configure_entry .menu42.config.f.x3 normal {n l y}} else {configure_entry .menu42.config.f.x3 disabled {y n l}}
	global CONFIG_NETROM
	if {($CONFIG_NET == 1) && ($CONFIG_HAMRADIO != 0) && ($CONFIG_NET != 0) && ($CONFIG_AX25 != 0) && ($CONFIG_AX25 == 1 || $CONFIG_AX25 == 2 || $CONFIG_AX25 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_AX25]];set CONFIG_NETROM [sync_tristate $CONFIG_NETROM $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu42.config.f.x4 disabled {y}} else {configure_entry .menu42.config.f.x4 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu42.config.f.x4 disabled {m}} else {configure_entry .menu42.config.f.x4 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu42.config.f.x4 normal {m}} else {configure_entry .menu42.config.f.x4 disabled {m}}; configure_entry .menu42.config.f.x4 normal {n l}} else {configure_entry .menu42.config.f.x4 disabled {y n m l}}
	global CONFIG_ROSE
	if {($CONFIG_NET == 1) && ($CONFIG_HAMRADIO != 0) && ($CONFIG_NET != 0) && ($CONFIG_AX25 != 0) && ($CONFIG_AX25 == 1 || $CONFIG_AX25 == 2 || $CONFIG_AX25 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_AX25]];set CONFIG_ROSE [sync_tristate $CONFIG_ROSE $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu42.config.f.x5 disabled {y}} else {configure_entry .menu42.config.f.x5 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu42.config.f.x5 disabled {m}} else {configure_entry .menu42.config.f.x5 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu42.config.f.x5 normal {m}} else {configure_entry .menu42.config.f.x5 disabled {m}}; configure_entry .menu42.config.f.x5 normal {n l}} else {configure_entry .menu42.config.f.x5 disabled {y n m l}}
	if {($CONFIG_NET == 1) && ($CONFIG_HAMRADIO != 0) && ($CONFIG_NET != 0) && ($CONFIG_AX25 != 0)} then {configure_entry .menu42.config.f.x6 normal {m}} else {configure_entry .menu42.config.f.x6 disabled {m}}
}


proc update_define_menu42 {} {
	update_define_mainmenu
	global CONFIG_MODULES
	global CONFIG_AX25
	global CONFIG_HAMRADIO
set CONFIG_HAMRADIO [expr $CONFIG_HAMRADIO|16]
set CONFIG_AX25 [expr $CONFIG_AX25|16]
	global CONFIG_AX25_DAMA_SLAVE
set CONFIG_AX25_DAMA_SLAVE [expr $CONFIG_AX25_DAMA_SLAVE|16]
	global CONFIG_NET
	if {($CONFIG_NET == 1)} then {
	set CONFIG_HAMRADIO [expr $CONFIG_HAMRADIO&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_HAMRADIO != 0) && ($CONFIG_NET != 0)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_AX25 == 2)} then {set CONFIG_AX25 1}; set CONFIG_AX25 [expr $CONFIG_AX25&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_HAMRADIO != 0) && ($CONFIG_NET != 0) && ($CONFIG_AX25 != 0)} then {
	set CONFIG_AX25_DAMA_SLAVE [expr $CONFIG_AX25_DAMA_SLAVE&15]}
	global CONFIG_NETROM
	if {($CONFIG_NET == 1) && ($CONFIG_HAMRADIO != 0) && ($CONFIG_NET != 0) && ($CONFIG_AX25 != 0) && ($CONFIG_AX25 == 1 || $CONFIG_AX25 == 2 || $CONFIG_AX25 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_AX25]]; set CONFIG_NETROM [sync_tristate $CONFIG_NETROM $tmpvar_dep]; set CONFIG_NETROM [expr $CONFIG_NETROM&15]}
	global CONFIG_ROSE
	if {($CONFIG_NET == 1) && ($CONFIG_HAMRADIO != 0) && ($CONFIG_NET != 0) && ($CONFIG_AX25 != 0) && ($CONFIG_AX25 == 1 || $CONFIG_AX25 == 2 || $CONFIG_AX25 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_AX25]]; set CONFIG_ROSE [sync_tristate $CONFIG_ROSE $tmpvar_dep]; set CONFIG_ROSE [expr $CONFIG_ROSE&15]}
}


proc menu43 {w title} {
	set oldFocus [focus]
	catch {focus .menu42}
	catch {destroy $w; unregister_active 43}
	toplevel $w -class Dialog
	wm withdraw $w
	global active_menus
	set active_menus [lsort -integer [linsert $active_menus end 43]]
	message $w.m -width 400 -aspect 300 -text \
		"AX.25 network device drivers"  -relief raised
	pack $w.m -pady 10 -side top -padx 10
	wm title $w "AX.25 network device drivers" 

	bind $w <Escape> "catch {focus $oldFocus}; destroy $w; unregister_active 43; break"
	set nextscript "catch {focus $oldFocus}; destroy $w; unregister_active 43; catch {destroy .menu42}; unregister_active 42; menu44 .menu44 \"$title\""
	frame $w.f
	button $w.f.back -text "OK" \
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 43"
	button $w.f.next -text "Next" -underline 0\
		-width 15 -command $nextscript
	bind all <Alt-n> $nextscript
	button $w.f.prev -text "Prev" -underline 0\
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 43; menu42 .menu42 \"$title\""
	bind $w <Alt-p> "catch {focus $oldFocus}; destroy $w; unregister_active 43; menu42 .menu42 \"$title\";break"
	pack $w.f.back $w.f.next $w.f.prev -side left -expand on
	pack $w.f -pady 10 -side bottom -anchor w -fill x
	frame $w.topline -relief ridge -borderwidth 2 -height 2
	pack $w.topline -side top -fill x

	frame $w.botline -relief ridge -borderwidth 2 -height 2
	pack $w.botline -side bottom -fill x

	frame $w.config
	pack $w.config -fill y -expand on

	scrollbar $w.config.vscroll -command "$w.config.canvas yview"
	pack $w.config.vscroll -side right -fill y

	canvas $w.config.canvas -height 1\
		-relief flat -borderwidth 0 -yscrollcommand "$w.config.vscroll set" \
		-width [expr [winfo screenwidth .] * 1 / 2] 
	frame $w.config.f
	bind $w <Key-Down> "$w.config.canvas yview scroll  1 unit;break;"
	bind $w <Key-Up> "$w.config.canvas yview scroll  -1 unit;break;"
	bind $w <Key-Next> "$w.config.canvas yview scroll  1 page;break;"
	bind $w <Key-Prior> "$w.config.canvas yview scroll  -1 page;break;"
	bind $w <Key-Home> "$w.config.canvas yview moveto 0;break;"
	bind $w <Key-End> "$w.config.canvas yview moveto 1 ;break;"
	pack $w.config.canvas -side right -fill y


	comment $w.config.f 43 0 "AX.25 network device drivers"
	dep_tristate $w.config.f 43 1 "Serial port KISS driver" CONFIG_MKISS
	dep_tristate $w.config.f 43 2 "Serial port 6PACK driver" CONFIG_6PACK
	dep_tristate $w.config.f 43 3 "BPQ Ethernet driver" CONFIG_BPQETHER
	dep_tristate $w.config.f 43 4 "High-speed (DMA) SCC driver for AX.25" CONFIG_DMASCC
	dep_tristate $w.config.f 43 5 "Z8530 SCC driver" CONFIG_SCC
	bool $w.config.f 43 6 "  additional delay for PA0HZP OptoSCC compatible boards" CONFIG_SCC_DELAY
	bool $w.config.f 43 7 "  support for TRX that feedback the tx signal to rx" CONFIG_SCC_TRXECHO
	dep_tristate $w.config.f 43 8 "BAYCOM ser12 fullduplex driver for AX.25" CONFIG_BAYCOM_SER_FDX
	dep_tristate $w.config.f 43 9 "BAYCOM ser12 halfduplex driver for AX.25" CONFIG_BAYCOM_SER_HDX
	dep_tristate $w.config.f 43 10 "BAYCOM picpar and par96 driver for AX.25" CONFIG_BAYCOM_PAR
	dep_tristate $w.config.f 43 11 "BAYCOM epp driver for AX.25" CONFIG_BAYCOM_EPP
	dep_tristate $w.config.f 43 12 "Soundcard modem driver" CONFIG_SOUNDMODEM
	bool $w.config.f 43 13 "  soundmodem support for Soundblaster and compatible cards" CONFIG_SOUNDMODEM_SBC
	bool $w.config.f 43 14 "  soundmodem support for WSS and Crystal cards" CONFIG_SOUNDMODEM_WSS
	bool $w.config.f 43 15 "  soundmodem support for 1200 baud AFSK modulation" CONFIG_SOUNDMODEM_AFSK1200
	bool $w.config.f 43 16 "  soundmodem support for 2400 baud AFSK modulation (7.3728MHz crystal)" CONFIG_SOUNDMODEM_AFSK2400_7
	bool $w.config.f 43 17 "  soundmodem support for 2400 baud AFSK modulation (8MHz crystal)" CONFIG_SOUNDMODEM_AFSK2400_8
	bool $w.config.f 43 18 "  soundmodem support for 2666 baud AFSK modulation" CONFIG_SOUNDMODEM_AFSK2666
	bool $w.config.f 43 19 "  soundmodem support for 4800 baud HAPN-1 modulation" CONFIG_SOUNDMODEM_HAPN4800
	bool $w.config.f 43 20 "  soundmodem support for 4800 baud PSK modulation" CONFIG_SOUNDMODEM_PSK4800
	bool $w.config.f 43 21 "  soundmodem support for 9600 baud FSK G3RUH modulation" CONFIG_SOUNDMODEM_FSK9600
	dep_tristate $w.config.f 43 22 "YAM driver for AX.25" CONFIG_YAM



	focus $w
	update_active
	global winx; global winy
	if {[winfo exists .menu42] == 0} then {menu42 .menu42 "Amateur Radio support"}
	set winx [expr [winfo x .menu42]+30]; set winy [expr [winfo y .menu42]+30]
	if {[winfo exists $w]} then {wm geometry $w +$winx+$winy}
	update idletasks
	if {[winfo exists $w]} then  {$w.config.canvas create window 0 0 -anchor nw -window $w.config.f

	$w.config.canvas configure \
		-width [expr [winfo reqwidth $w.config.f] + 1]\
		-scrollregion "-1 -1 [expr [winfo reqwidth $w.config.f] + 1] \
			 [expr [winfo reqheight $w.config.f] + 1]"

	set winy [expr [winfo reqh $w] - [winfo reqh $w.config.canvas]]
	set scry [expr [winfo screenh $w] / 2]
	set maxy [expr [winfo screenh $w] * 3 / 4]
	set canvtotal [expr [winfo reqh $w.config.f] + 2]
	if [expr $winy + $canvtotal < $maxy] {
		$w.config.canvas configure -height $canvtotal
	} else {
		$w.config.canvas configure -height [expr $scry - $winy]
		}
	}
	update idletasks
	if {[winfo exists $w]} then {
	wm maxsize $w [winfo width $w] [winfo screenheight $w]
	wm minsize $w [winfo width $w] 100

	wm deiconify $w
}
}

proc update_menu43 {} {
	global CONFIG_NET
	global CONFIG_HAMRADIO
	global CONFIG_AX25
	if {($CONFIG_NET == 1) && ($CONFIG_HAMRADIO != 0) && ($CONFIG_NET != 0) && ($CONFIG_AX25 != 0)} then {configure_entry .menu43.config.f.x0 normal {m}} else {configure_entry .menu43.config.f.x0 disabled {m}}
	global CONFIG_MODULES
	global CONFIG_MKISS
	if {($CONFIG_NET == 1) && ($CONFIG_HAMRADIO != 0) && ($CONFIG_NET != 0) && ($CONFIG_AX25 != 0) && ($CONFIG_AX25 == 1 || $CONFIG_AX25 == 2 || $CONFIG_AX25 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_AX25]];set CONFIG_MKISS [sync_tristate $CONFIG_MKISS $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu43.config.f.x1 disabled {y}} else {configure_entry .menu43.config.f.x1 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu43.config.f.x1 disabled {m}} else {configure_entry .menu43.config.f.x1 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu43.config.f.x1 normal {m}} else {configure_entry .menu43.config.f.x1 disabled {m}}; configure_entry .menu43.config.f.x1 normal {n l}} else {configure_entry .menu43.config.f.x1 disabled {y n m l}}
	global CONFIG_6PACK
	if {($CONFIG_NET == 1) && ($CONFIG_HAMRADIO != 0) && ($CONFIG_NET != 0) && ($CONFIG_AX25 != 0) && ($CONFIG_AX25 == 1 || $CONFIG_AX25 == 2 || $CONFIG_AX25 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_AX25]];set CONFIG_6PACK [sync_tristate $CONFIG_6PACK $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu43.config.f.x2 disabled {y}} else {configure_entry .menu43.config.f.x2 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu43.config.f.x2 disabled {m}} else {configure_entry .menu43.config.f.x2 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu43.config.f.x2 normal {m}} else {configure_entry .menu43.config.f.x2 disabled {m}}; configure_entry .menu43.config.f.x2 normal {n l}} else {configure_entry .menu43.config.f.x2 disabled {y n m l}}
	global CONFIG_BPQETHER
	if {($CONFIG_NET == 1) && ($CONFIG_HAMRADIO != 0) && ($CONFIG_NET != 0) && ($CONFIG_AX25 != 0) && ($CONFIG_AX25 == 1 || $CONFIG_AX25 == 2 || $CONFIG_AX25 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_AX25]];set CONFIG_BPQETHER [sync_tristate $CONFIG_BPQETHER $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu43.config.f.x3 disabled {y}} else {configure_entry .menu43.config.f.x3 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu43.config.f.x3 disabled {m}} else {configure_entry .menu43.config.f.x3 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu43.config.f.x3 normal {m}} else {configure_entry .menu43.config.f.x3 disabled {m}}; configure_entry .menu43.config.f.x3 normal {n l}} else {configure_entry .menu43.config.f.x3 disabled {y n m l}}
	global CONFIG_ISA
	global CONFIG_DMASCC
	if {($CONFIG_NET == 1) && ($CONFIG_HAMRADIO != 0) && ($CONFIG_NET != 0) && ($CONFIG_AX25 != 0) && ($CONFIG_ISA == 1) && ($CONFIG_AX25 == 1 || $CONFIG_AX25 == 2 || $CONFIG_AX25 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_AX25]];set CONFIG_DMASCC [sync_tristate $CONFIG_DMASCC $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu43.config.f.x4 disabled {y}} else {configure_entry .menu43.config.f.x4 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu43.config.f.x4 disabled {m}} else {configure_entry .menu43.config.f.x4 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu43.config.f.x4 normal {m}} else {configure_entry .menu43.config.f.x4 disabled {m}}; configure_entry .menu43.config.f.x4 normal {n l}} else {configure_entry .menu43.config.f.x4 disabled {y n m l}}
	global CONFIG_SCC
	if {($CONFIG_NET == 1) && ($CONFIG_HAMRADIO != 0) && ($CONFIG_NET != 0) && ($CONFIG_AX25 != 0) && ($CONFIG_ISA == 1) && ($CONFIG_AX25 == 1 || $CONFIG_AX25 == 2 || $CONFIG_AX25 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_AX25]];set CONFIG_SCC [sync_tristate $CONFIG_SCC $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu43.config.f.x5 disabled {y}} else {configure_entry .menu43.config.f.x5 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu43.config.f.x5 disabled {m}} else {configure_entry .menu43.config.f.x5 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu43.config.f.x5 normal {m}} else {configure_entry .menu43.config.f.x5 disabled {m}}; configure_entry .menu43.config.f.x5 normal {n l}} else {configure_entry .menu43.config.f.x5 disabled {y n m l}}
	global CONFIG_SCC_DELAY
	if {($CONFIG_NET == 1) && ($CONFIG_HAMRADIO != 0) && ($CONFIG_NET != 0) && ($CONFIG_AX25 != 0) && ($CONFIG_SCC != 0)} then {
	configure_entry .menu43.config.f.x6 normal {n l y}} else {configure_entry .menu43.config.f.x6 disabled {y n l}}
	global CONFIG_SCC_TRXECHO
	if {($CONFIG_NET == 1) && ($CONFIG_HAMRADIO != 0) && ($CONFIG_NET != 0) && ($CONFIG_AX25 != 0) && ($CONFIG_SCC != 0)} then {
	configure_entry .menu43.config.f.x7 normal {n l y}} else {configure_entry .menu43.config.f.x7 disabled {y n l}}
	global CONFIG_BAYCOM_SER_FDX
	if {($CONFIG_NET == 1) && ($CONFIG_HAMRADIO != 0) && ($CONFIG_NET != 0) && ($CONFIG_AX25 != 0) && ($CONFIG_AX25 == 1 || $CONFIG_AX25 == 2 || $CONFIG_AX25 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_AX25]];set CONFIG_BAYCOM_SER_FDX [sync_tristate $CONFIG_BAYCOM_SER_FDX $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu43.config.f.x8 disabled {y}} else {configure_entry .menu43.config.f.x8 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu43.config.f.x8 disabled {m}} else {configure_entry .menu43.config.f.x8 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu43.config.f.x8 normal {m}} else {configure_entry .menu43.config.f.x8 disabled {m}}; configure_entry .menu43.config.f.x8 normal {n l}} else {configure_entry .menu43.config.f.x8 disabled {y n m l}}
	global CONFIG_BAYCOM_SER_HDX
	if {($CONFIG_NET == 1) && ($CONFIG_HAMRADIO != 0) && ($CONFIG_NET != 0) && ($CONFIG_AX25 != 0) && ($CONFIG_AX25 == 1 || $CONFIG_AX25 == 2 || $CONFIG_AX25 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_AX25]];set CONFIG_BAYCOM_SER_HDX [sync_tristate $CONFIG_BAYCOM_SER_HDX $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu43.config.f.x9 disabled {y}} else {configure_entry .menu43.config.f.x9 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu43.config.f.x9 disabled {m}} else {configure_entry .menu43.config.f.x9 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu43.config.f.x9 normal {m}} else {configure_entry .menu43.config.f.x9 disabled {m}}; configure_entry .menu43.config.f.x9 normal {n l}} else {configure_entry .menu43.config.f.x9 disabled {y n m l}}
	global CONFIG_PARPORT
	global CONFIG_BAYCOM_PAR
	if {($CONFIG_NET == 1) && ($CONFIG_HAMRADIO != 0) && ($CONFIG_NET != 0) && ($CONFIG_AX25 != 0) && ($CONFIG_PARPORT == 1 || $CONFIG_PARPORT == 2 || $CONFIG_PARPORT == 4) && ($CONFIG_AX25 == 1 || $CONFIG_AX25 == 2 || $CONFIG_AX25 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PARPORT $CONFIG_AX25]];set CONFIG_BAYCOM_PAR [sync_tristate $CONFIG_BAYCOM_PAR $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu43.config.f.x10 disabled {y}} else {configure_entry .menu43.config.f.x10 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu43.config.f.x10 disabled {m}} else {configure_entry .menu43.config.f.x10 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu43.config.f.x10 normal {m}} else {configure_entry .menu43.config.f.x10 disabled {m}}; configure_entry .menu43.config.f.x10 normal {n l}} else {configure_entry .menu43.config.f.x10 disabled {y n m l}}
	global CONFIG_BAYCOM_EPP
	if {($CONFIG_NET == 1) && ($CONFIG_HAMRADIO != 0) && ($CONFIG_NET != 0) && ($CONFIG_AX25 != 0) && ($CONFIG_PARPORT == 1 || $CONFIG_PARPORT == 2 || $CONFIG_PARPORT == 4) && ($CONFIG_AX25 == 1 || $CONFIG_AX25 == 2 || $CONFIG_AX25 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PARPORT $CONFIG_AX25]];set CONFIG_BAYCOM_EPP [sync_tristate $CONFIG_BAYCOM_EPP $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu43.config.f.x11 disabled {y}} else {configure_entry .menu43.config.f.x11 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu43.config.f.x11 disabled {m}} else {configure_entry .menu43.config.f.x11 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu43.config.f.x11 normal {m}} else {configure_entry .menu43.config.f.x11 disabled {m}}; configure_entry .menu43.config.f.x11 normal {n l}} else {configure_entry .menu43.config.f.x11 disabled {y n m l}}
	global CONFIG_SOUNDMODEM
	if {($CONFIG_NET == 1) && ($CONFIG_HAMRADIO != 0) && ($CONFIG_NET != 0) && ($CONFIG_AX25 != 0) && ($CONFIG_PARPORT == 1 || $CONFIG_PARPORT == 2 || $CONFIG_PARPORT == 4) && ($CONFIG_AX25 == 1 || $CONFIG_AX25 == 2 || $CONFIG_AX25 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PARPORT $CONFIG_AX25]];set CONFIG_SOUNDMODEM [sync_tristate $CONFIG_SOUNDMODEM $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu43.config.f.x12 disabled {y}} else {configure_entry .menu43.config.f.x12 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu43.config.f.x12 disabled {m}} else {configure_entry .menu43.config.f.x12 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu43.config.f.x12 normal {m}} else {configure_entry .menu43.config.f.x12 disabled {m}}; configure_entry .menu43.config.f.x12 normal {n l}} else {configure_entry .menu43.config.f.x12 disabled {y n m l}}
	global CONFIG_SOUNDMODEM_SBC
	if {($CONFIG_NET == 1) && ($CONFIG_HAMRADIO != 0) && ($CONFIG_NET != 0) && ($CONFIG_AX25 != 0) && ($CONFIG_SOUNDMODEM != 0)} then {
	configure_entry .menu43.config.f.x13 normal {n l y}} else {configure_entry .menu43.config.f.x13 disabled {y n l}}
	global CONFIG_SOUNDMODEM_WSS
	if {($CONFIG_NET == 1) && ($CONFIG_HAMRADIO != 0) && ($CONFIG_NET != 0) && ($CONFIG_AX25 != 0) && ($CONFIG_SOUNDMODEM != 0)} then {
	configure_entry .menu43.config.f.x14 normal {n l y}} else {configure_entry .menu43.config.f.x14 disabled {y n l}}
	global CONFIG_SOUNDMODEM_AFSK1200
	if {($CONFIG_NET == 1) && ($CONFIG_HAMRADIO != 0) && ($CONFIG_NET != 0) && ($CONFIG_AX25 != 0) && ($CONFIG_SOUNDMODEM != 0)} then {
	configure_entry .menu43.config.f.x15 normal {n l y}} else {configure_entry .menu43.config.f.x15 disabled {y n l}}
	global CONFIG_SOUNDMODEM_AFSK2400_7
	if {($CONFIG_NET == 1) && ($CONFIG_HAMRADIO != 0) && ($CONFIG_NET != 0) && ($CONFIG_AX25 != 0) && ($CONFIG_SOUNDMODEM != 0)} then {
	configure_entry .menu43.config.f.x16 normal {n l y}} else {configure_entry .menu43.config.f.x16 disabled {y n l}}
	global CONFIG_SOUNDMODEM_AFSK2400_8
	if {($CONFIG_NET == 1) && ($CONFIG_HAMRADIO != 0) && ($CONFIG_NET != 0) && ($CONFIG_AX25 != 0) && ($CONFIG_SOUNDMODEM != 0)} then {
	configure_entry .menu43.config.f.x17 normal {n l y}} else {configure_entry .menu43.config.f.x17 disabled {y n l}}
	global CONFIG_SOUNDMODEM_AFSK2666
	if {($CONFIG_NET == 1) && ($CONFIG_HAMRADIO != 0) && ($CONFIG_NET != 0) && ($CONFIG_AX25 != 0) && ($CONFIG_SOUNDMODEM != 0)} then {
	configure_entry .menu43.config.f.x18 normal {n l y}} else {configure_entry .menu43.config.f.x18 disabled {y n l}}
	global CONFIG_SOUNDMODEM_HAPN4800
	if {($CONFIG_NET == 1) && ($CONFIG_HAMRADIO != 0) && ($CONFIG_NET != 0) && ($CONFIG_AX25 != 0) && ($CONFIG_SOUNDMODEM != 0)} then {
	configure_entry .menu43.config.f.x19 normal {n l y}} else {configure_entry .menu43.config.f.x19 disabled {y n l}}
	global CONFIG_SOUNDMODEM_PSK4800
	if {($CONFIG_NET == 1) && ($CONFIG_HAMRADIO != 0) && ($CONFIG_NET != 0) && ($CONFIG_AX25 != 0) && ($CONFIG_SOUNDMODEM != 0)} then {
	configure_entry .menu43.config.f.x20 normal {n l y}} else {configure_entry .menu43.config.f.x20 disabled {y n l}}
	global CONFIG_SOUNDMODEM_FSK9600
	if {($CONFIG_NET == 1) && ($CONFIG_HAMRADIO != 0) && ($CONFIG_NET != 0) && ($CONFIG_AX25 != 0) && ($CONFIG_SOUNDMODEM != 0)} then {
	configure_entry .menu43.config.f.x21 normal {n l y}} else {configure_entry .menu43.config.f.x21 disabled {y n l}}
	global CONFIG_YAM
	if {($CONFIG_NET == 1) && ($CONFIG_HAMRADIO != 0) && ($CONFIG_NET != 0) && ($CONFIG_AX25 != 0) && ($CONFIG_AX25 == 1 || $CONFIG_AX25 == 2 || $CONFIG_AX25 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_AX25]];set CONFIG_YAM [sync_tristate $CONFIG_YAM $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu43.config.f.x22 disabled {y}} else {configure_entry .menu43.config.f.x22 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu43.config.f.x22 disabled {m}} else {configure_entry .menu43.config.f.x22 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu43.config.f.x22 normal {m}} else {configure_entry .menu43.config.f.x22 disabled {m}}; configure_entry .menu43.config.f.x22 normal {n l}} else {configure_entry .menu43.config.f.x22 disabled {y n m l}}
}


proc update_define_menu43 {} {
	update_define_mainmenu
	global CONFIG_MODULES
	global CONFIG_SCC_DELAY
set CONFIG_SCC_DELAY [expr $CONFIG_SCC_DELAY|16]
	global CONFIG_SCC_TRXECHO
set CONFIG_SCC_TRXECHO [expr $CONFIG_SCC_TRXECHO|16]
	global CONFIG_SOUNDMODEM_SBC
set CONFIG_SOUNDMODEM_SBC [expr $CONFIG_SOUNDMODEM_SBC|16]
	global CONFIG_SOUNDMODEM_WSS
set CONFIG_SOUNDMODEM_WSS [expr $CONFIG_SOUNDMODEM_WSS|16]
	global CONFIG_SOUNDMODEM_AFSK1200
set CONFIG_SOUNDMODEM_AFSK1200 [expr $CONFIG_SOUNDMODEM_AFSK1200|16]
	global CONFIG_SOUNDMODEM_AFSK2400_7
set CONFIG_SOUNDMODEM_AFSK2400_7 [expr $CONFIG_SOUNDMODEM_AFSK2400_7|16]
	global CONFIG_SOUNDMODEM_AFSK2400_8
set CONFIG_SOUNDMODEM_AFSK2400_8 [expr $CONFIG_SOUNDMODEM_AFSK2400_8|16]
	global CONFIG_SOUNDMODEM_AFSK2666
set CONFIG_SOUNDMODEM_AFSK2666 [expr $CONFIG_SOUNDMODEM_AFSK2666|16]
	global CONFIG_SOUNDMODEM_HAPN4800
set CONFIG_SOUNDMODEM_HAPN4800 [expr $CONFIG_SOUNDMODEM_HAPN4800|16]
	global CONFIG_SOUNDMODEM_PSK4800
set CONFIG_SOUNDMODEM_PSK4800 [expr $CONFIG_SOUNDMODEM_PSK4800|16]
	global CONFIG_SOUNDMODEM_FSK9600
set CONFIG_SOUNDMODEM_FSK9600 [expr $CONFIG_SOUNDMODEM_FSK9600|16]
	global CONFIG_NET
	global CONFIG_HAMRADIO
	global CONFIG_AX25
	global CONFIG_MKISS
	if {($CONFIG_NET == 1) && ($CONFIG_HAMRADIO != 0) && ($CONFIG_NET != 0) && ($CONFIG_AX25 != 0) && ($CONFIG_AX25 == 1 || $CONFIG_AX25 == 2 || $CONFIG_AX25 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_AX25]]; set CONFIG_MKISS [sync_tristate $CONFIG_MKISS $tmpvar_dep]; set CONFIG_MKISS [expr $CONFIG_MKISS&15]}
	global CONFIG_6PACK
	if {($CONFIG_NET == 1) && ($CONFIG_HAMRADIO != 0) && ($CONFIG_NET != 0) && ($CONFIG_AX25 != 0) && ($CONFIG_AX25 == 1 || $CONFIG_AX25 == 2 || $CONFIG_AX25 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_AX25]]; set CONFIG_6PACK [sync_tristate $CONFIG_6PACK $tmpvar_dep]; set CONFIG_6PACK [expr $CONFIG_6PACK&15]}
	global CONFIG_BPQETHER
	if {($CONFIG_NET == 1) && ($CONFIG_HAMRADIO != 0) && ($CONFIG_NET != 0) && ($CONFIG_AX25 != 0) && ($CONFIG_AX25 == 1 || $CONFIG_AX25 == 2 || $CONFIG_AX25 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_AX25]]; set CONFIG_BPQETHER [sync_tristate $CONFIG_BPQETHER $tmpvar_dep]; set CONFIG_BPQETHER [expr $CONFIG_BPQETHER&15]}
	global CONFIG_ISA
	global CONFIG_DMASCC
	if {($CONFIG_NET == 1) && ($CONFIG_HAMRADIO != 0) && ($CONFIG_NET != 0) && ($CONFIG_AX25 != 0) && ($CONFIG_ISA == 1) && ($CONFIG_AX25 == 1 || $CONFIG_AX25 == 2 || $CONFIG_AX25 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_AX25]]; set CONFIG_DMASCC [sync_tristate $CONFIG_DMASCC $tmpvar_dep]; set CONFIG_DMASCC [expr $CONFIG_DMASCC&15]}
	global CONFIG_SCC
	if {($CONFIG_NET == 1) && ($CONFIG_HAMRADIO != 0) && ($CONFIG_NET != 0) && ($CONFIG_AX25 != 0) && ($CONFIG_ISA == 1) && ($CONFIG_AX25 == 1 || $CONFIG_AX25 == 2 || $CONFIG_AX25 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_AX25]]; set CONFIG_SCC [sync_tristate $CONFIG_SCC $tmpvar_dep]; set CONFIG_SCC [expr $CONFIG_SCC&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_HAMRADIO != 0) && ($CONFIG_NET != 0) && ($CONFIG_AX25 != 0) && ($CONFIG_SCC != 0)} then {
	set CONFIG_SCC_DELAY [expr $CONFIG_SCC_DELAY&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_HAMRADIO != 0) && ($CONFIG_NET != 0) && ($CONFIG_AX25 != 0) && ($CONFIG_SCC != 0)} then {
	set CONFIG_SCC_TRXECHO [expr $CONFIG_SCC_TRXECHO&15]}
	global CONFIG_BAYCOM_SER_FDX
	if {($CONFIG_NET == 1) && ($CONFIG_HAMRADIO != 0) && ($CONFIG_NET != 0) && ($CONFIG_AX25 != 0) && ($CONFIG_AX25 == 1 || $CONFIG_AX25 == 2 || $CONFIG_AX25 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_AX25]]; set CONFIG_BAYCOM_SER_FDX [sync_tristate $CONFIG_BAYCOM_SER_FDX $tmpvar_dep]; set CONFIG_BAYCOM_SER_FDX [expr $CONFIG_BAYCOM_SER_FDX&15]}
	global CONFIG_BAYCOM_SER_HDX
	if {($CONFIG_NET == 1) && ($CONFIG_HAMRADIO != 0) && ($CONFIG_NET != 0) && ($CONFIG_AX25 != 0) && ($CONFIG_AX25 == 1 || $CONFIG_AX25 == 2 || $CONFIG_AX25 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_AX25]]; set CONFIG_BAYCOM_SER_HDX [sync_tristate $CONFIG_BAYCOM_SER_HDX $tmpvar_dep]; set CONFIG_BAYCOM_SER_HDX [expr $CONFIG_BAYCOM_SER_HDX&15]}
	global CONFIG_PARPORT
	global CONFIG_BAYCOM_PAR
	if {($CONFIG_NET == 1) && ($CONFIG_HAMRADIO != 0) && ($CONFIG_NET != 0) && ($CONFIG_AX25 != 0) && ($CONFIG_PARPORT == 1 || $CONFIG_PARPORT == 2 || $CONFIG_PARPORT == 4) && ($CONFIG_AX25 == 1 || $CONFIG_AX25 == 2 || $CONFIG_AX25 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PARPORT $CONFIG_AX25]]; set CONFIG_BAYCOM_PAR [sync_tristate $CONFIG_BAYCOM_PAR $tmpvar_dep]; set CONFIG_BAYCOM_PAR [expr $CONFIG_BAYCOM_PAR&15]}
	global CONFIG_BAYCOM_EPP
	if {($CONFIG_NET == 1) && ($CONFIG_HAMRADIO != 0) && ($CONFIG_NET != 0) && ($CONFIG_AX25 != 0) && ($CONFIG_PARPORT == 1 || $CONFIG_PARPORT == 2 || $CONFIG_PARPORT == 4) && ($CONFIG_AX25 == 1 || $CONFIG_AX25 == 2 || $CONFIG_AX25 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PARPORT $CONFIG_AX25]]; set CONFIG_BAYCOM_EPP [sync_tristate $CONFIG_BAYCOM_EPP $tmpvar_dep]; set CONFIG_BAYCOM_EPP [expr $CONFIG_BAYCOM_EPP&15]}
	global CONFIG_SOUNDMODEM
	if {($CONFIG_NET == 1) && ($CONFIG_HAMRADIO != 0) && ($CONFIG_NET != 0) && ($CONFIG_AX25 != 0) && ($CONFIG_PARPORT == 1 || $CONFIG_PARPORT == 2 || $CONFIG_PARPORT == 4) && ($CONFIG_AX25 == 1 || $CONFIG_AX25 == 2 || $CONFIG_AX25 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PARPORT $CONFIG_AX25]]; set CONFIG_SOUNDMODEM [sync_tristate $CONFIG_SOUNDMODEM $tmpvar_dep]; set CONFIG_SOUNDMODEM [expr $CONFIG_SOUNDMODEM&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_HAMRADIO != 0) && ($CONFIG_NET != 0) && ($CONFIG_AX25 != 0) && ($CONFIG_SOUNDMODEM != 0)} then {
	set CONFIG_SOUNDMODEM_SBC [expr $CONFIG_SOUNDMODEM_SBC&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_HAMRADIO != 0) && ($CONFIG_NET != 0) && ($CONFIG_AX25 != 0) && ($CONFIG_SOUNDMODEM != 0)} then {
	set CONFIG_SOUNDMODEM_WSS [expr $CONFIG_SOUNDMODEM_WSS&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_HAMRADIO != 0) && ($CONFIG_NET != 0) && ($CONFIG_AX25 != 0) && ($CONFIG_SOUNDMODEM != 0)} then {
	set CONFIG_SOUNDMODEM_AFSK1200 [expr $CONFIG_SOUNDMODEM_AFSK1200&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_HAMRADIO != 0) && ($CONFIG_NET != 0) && ($CONFIG_AX25 != 0) && ($CONFIG_SOUNDMODEM != 0)} then {
	set CONFIG_SOUNDMODEM_AFSK2400_7 [expr $CONFIG_SOUNDMODEM_AFSK2400_7&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_HAMRADIO != 0) && ($CONFIG_NET != 0) && ($CONFIG_AX25 != 0) && ($CONFIG_SOUNDMODEM != 0)} then {
	set CONFIG_SOUNDMODEM_AFSK2400_8 [expr $CONFIG_SOUNDMODEM_AFSK2400_8&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_HAMRADIO != 0) && ($CONFIG_NET != 0) && ($CONFIG_AX25 != 0) && ($CONFIG_SOUNDMODEM != 0)} then {
	set CONFIG_SOUNDMODEM_AFSK2666 [expr $CONFIG_SOUNDMODEM_AFSK2666&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_HAMRADIO != 0) && ($CONFIG_NET != 0) && ($CONFIG_AX25 != 0) && ($CONFIG_SOUNDMODEM != 0)} then {
	set CONFIG_SOUNDMODEM_HAPN4800 [expr $CONFIG_SOUNDMODEM_HAPN4800&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_HAMRADIO != 0) && ($CONFIG_NET != 0) && ($CONFIG_AX25 != 0) && ($CONFIG_SOUNDMODEM != 0)} then {
	set CONFIG_SOUNDMODEM_PSK4800 [expr $CONFIG_SOUNDMODEM_PSK4800&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_HAMRADIO != 0) && ($CONFIG_NET != 0) && ($CONFIG_AX25 != 0) && ($CONFIG_SOUNDMODEM != 0)} then {
	set CONFIG_SOUNDMODEM_FSK9600 [expr $CONFIG_SOUNDMODEM_FSK9600&15]}
	global CONFIG_YAM
	if {($CONFIG_NET == 1) && ($CONFIG_HAMRADIO != 0) && ($CONFIG_NET != 0) && ($CONFIG_AX25 != 0) && ($CONFIG_AX25 == 1 || $CONFIG_AX25 == 2 || $CONFIG_AX25 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_AX25]]; set CONFIG_YAM [sync_tristate $CONFIG_YAM $tmpvar_dep]; set CONFIG_YAM [expr $CONFIG_YAM&15]}
}


menu_option menu44 44 "IrDA (infrared) support"
proc menu44 {w title} {
	set oldFocus [focus]
	catch {destroy $w; unregister_active 44}
	toplevel $w -class Dialog
	wm withdraw $w
	global active_menus
	set active_menus [lsort -integer [linsert $active_menus end 44]]
	message $w.m -width 400 -aspect 300 -text \
		"IrDA (infrared) support"  -relief raised
	pack $w.m -pady 10 -side top -padx 10
	wm title $w "IrDA (infrared) support" 

	bind $w <Escape> "catch {focus $oldFocus}; destroy $w; unregister_active 44; break"
	set nextscript "catch {focus $oldFocus}; menu45 .menu45 \"$title\""
	frame $w.f
	button $w.f.back -text "Main Menu" \
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 44"
	button $w.f.next -text "Next" -underline 0\
		-width 15 -command $nextscript
	bind all <Alt-n> $nextscript
	button $w.f.prev -text "Prev" -underline 0\
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 44; menu43 .menu43 \"$title\""
	bind $w <Alt-p> "catch {focus $oldFocus}; destroy $w; unregister_active 44; menu43 .menu43 \"$title\";break"
	pack $w.f.back $w.f.next $w.f.prev -side left -expand on
	pack $w.f -pady 10 -side bottom -anchor w -fill x
	frame $w.topline -relief ridge -borderwidth 2 -height 2
	pack $w.topline -side top -fill x

	frame $w.botline -relief ridge -borderwidth 2 -height 2
	pack $w.botline -side bottom -fill x

	frame $w.config
	pack $w.config -fill y -expand on

	scrollbar $w.config.vscroll -command "$w.config.canvas yview"
	pack $w.config.vscroll -side right -fill y

	canvas $w.config.canvas -height 1\
		-relief flat -borderwidth 0 -yscrollcommand "$w.config.vscroll set" \
		-width [expr [winfo screenwidth .] * 1 / 2] 
	frame $w.config.f
	bind $w <Key-Down> "$w.config.canvas yview scroll  1 unit;break;"
	bind $w <Key-Up> "$w.config.canvas yview scroll  -1 unit;break;"
	bind $w <Key-Next> "$w.config.canvas yview scroll  1 page;break;"
	bind $w <Key-Prior> "$w.config.canvas yview scroll  -1 page;break;"
	bind $w <Key-Home> "$w.config.canvas yview moveto 0;break;"
	bind $w <Key-End> "$w.config.canvas yview moveto 1 ;break;"
	pack $w.config.canvas -side right -fill y


	dep_tristate $w.config.f 44 0 "IrDA subsystem support" CONFIG_IRDA
	comment $w.config.f 44 1 "IrDA protocols"
	dep_tristate $w.config.f 44 2 "  IrLAN protocol" CONFIG_IRLAN
	dep_tristate $w.config.f 44 3 "  IrNET protocol" CONFIG_IRNET
	dep_tristate $w.config.f 44 4 "  IrCOMM protocol" CONFIG_IRCOMM
	bool $w.config.f 44 5 "  Ultra (connectionless) protocol" CONFIG_IRDA_ULTRA
	comment $w.config.f 44 6 "IrDA options"
	bool $w.config.f 44 7 "  Cache last LSAP" CONFIG_IRDA_CACHE_LAST_LSAP
	bool $w.config.f 44 8 "  Fast RRs (low latency)" CONFIG_IRDA_FAST_RR
	bool $w.config.f 44 9 "  Debug information" CONFIG_IRDA_DEBUG
	submenu $w.config.f 44 10 "Infrared-port device drivers" 45



	focus $w
	update_active
	global winx; global winy
	set winx [expr [winfo x .]+30]; set winy [expr [winfo y .]+30]
	if {[winfo exists $w]} then {wm geometry $w +$winx+$winy}
	update idletasks
	if {[winfo exists $w]} then  {$w.config.canvas create window 0 0 -anchor nw -window $w.config.f

	$w.config.canvas configure \
		-width [expr [winfo reqwidth $w.config.f] + 1]\
		-scrollregion "-1 -1 [expr [winfo reqwidth $w.config.f] + 1] \
			 [expr [winfo reqheight $w.config.f] + 1]"

	set winy [expr [winfo reqh $w] - [winfo reqh $w.config.canvas]]
	set scry [expr [winfo screenh $w] / 2]
	set maxy [expr [winfo screenh $w] * 3 / 4]
	set canvtotal [expr [winfo reqh $w.config.f] + 2]
	if [expr $winy + $canvtotal < $maxy] {
		$w.config.canvas configure -height $canvtotal
	} else {
		$w.config.canvas configure -height [expr $scry - $winy]
		}
	}
	update idletasks
	if {[winfo exists $w]} then {
	wm maxsize $w [winfo width $w] [winfo screenheight $w]
	wm minsize $w [winfo width $w] 100

	wm deiconify $w
}
}

proc update_menu44 {} {
	global CONFIG_MODULES
	global CONFIG_NET
	global CONFIG_IRDA
	if {($CONFIG_NET == 1) && ($CONFIG_NET != 0) && ($CONFIG_NET == 1 || $CONFIG_NET == 2 || $CONFIG_NET == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_NET]];set CONFIG_IRDA [sync_tristate $CONFIG_IRDA $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu44.config.f.x0 disabled {y}} else {configure_entry .menu44.config.f.x0 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu44.config.f.x0 disabled {m}} else {configure_entry .menu44.config.f.x0 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu44.config.f.x0 normal {m}} else {configure_entry .menu44.config.f.x0 disabled {m}}; configure_entry .menu44.config.f.x0 normal {n l}} else {configure_entry .menu44.config.f.x0 disabled {y n m l}}
	if {($CONFIG_NET == 1) && ($CONFIG_NET != 0) && ($CONFIG_IRDA != 0)} then {configure_entry .menu44.config.f.x1 normal {m}} else {configure_entry .menu44.config.f.x1 disabled {m}}
	global CONFIG_IRLAN
	if {($CONFIG_NET == 1) && ($CONFIG_NET != 0) && ($CONFIG_IRDA != 0) && ($CONFIG_IRDA == 1 || $CONFIG_IRDA == 2 || $CONFIG_IRDA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IRDA]];set CONFIG_IRLAN [sync_tristate $CONFIG_IRLAN $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu44.config.f.x2 disabled {y}} else {configure_entry .menu44.config.f.x2 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu44.config.f.x2 disabled {m}} else {configure_entry .menu44.config.f.x2 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu44.config.f.x2 normal {m}} else {configure_entry .menu44.config.f.x2 disabled {m}}; configure_entry .menu44.config.f.x2 normal {n l}} else {configure_entry .menu44.config.f.x2 disabled {y n m l}}
	global CONFIG_NETDEVICES
	global CONFIG_PPP
	global CONFIG_IRNET
	if {($CONFIG_NET == 1) && ($CONFIG_NET != 0) && ($CONFIG_IRDA != 0) && ($CONFIG_NETDEVICES != 0) && ($CONFIG_IRDA == 1 || $CONFIG_IRDA == 2 || $CONFIG_IRDA == 4) && ($CONFIG_PPP == 1 || $CONFIG_PPP == 2 || $CONFIG_PPP == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IRDA $CONFIG_PPP]];set CONFIG_IRNET [sync_tristate $CONFIG_IRNET $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu44.config.f.x3 disabled {y}} else {configure_entry .menu44.config.f.x3 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu44.config.f.x3 disabled {m}} else {configure_entry .menu44.config.f.x3 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu44.config.f.x3 normal {m}} else {configure_entry .menu44.config.f.x3 disabled {m}}; configure_entry .menu44.config.f.x3 normal {n l}} else {configure_entry .menu44.config.f.x3 disabled {y n m l}}
	global CONFIG_IRCOMM
	if {($CONFIG_NET == 1) && ($CONFIG_NET != 0) && ($CONFIG_IRDA != 0) && ($CONFIG_IRDA == 1 || $CONFIG_IRDA == 2 || $CONFIG_IRDA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IRDA]];set CONFIG_IRCOMM [sync_tristate $CONFIG_IRCOMM $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu44.config.f.x4 disabled {y}} else {configure_entry .menu44.config.f.x4 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu44.config.f.x4 disabled {m}} else {configure_entry .menu44.config.f.x4 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu44.config.f.x4 normal {m}} else {configure_entry .menu44.config.f.x4 disabled {m}}; configure_entry .menu44.config.f.x4 normal {n l}} else {configure_entry .menu44.config.f.x4 disabled {y n m l}}
	global CONFIG_IRDA_ULTRA
	if {($CONFIG_NET == 1) && ($CONFIG_NET != 0) && ($CONFIG_IRDA != 0)} then {
	configure_entry .menu44.config.f.x5 normal {n l y}} else {configure_entry .menu44.config.f.x5 disabled {y n l}}
	if {($CONFIG_NET == 1) && ($CONFIG_NET != 0) && ($CONFIG_IRDA != 0)} then {configure_entry .menu44.config.f.x6 normal {m}} else {configure_entry .menu44.config.f.x6 disabled {m}}
	global CONFIG_IRDA_CACHE_LAST_LSAP
	if {($CONFIG_NET == 1) && ($CONFIG_NET != 0) && ($CONFIG_IRDA != 0)} then {
	configure_entry .menu44.config.f.x7 normal {n l y}} else {configure_entry .menu44.config.f.x7 disabled {y n l}}
	global CONFIG_IRDA_FAST_RR
	if {($CONFIG_NET == 1) && ($CONFIG_NET != 0) && ($CONFIG_IRDA != 0)} then {
	configure_entry .menu44.config.f.x8 normal {n l y}} else {configure_entry .menu44.config.f.x8 disabled {y n l}}
	global CONFIG_IRDA_DEBUG
	if {($CONFIG_NET == 1) && ($CONFIG_NET != 0) && ($CONFIG_IRDA != 0)} then {
	configure_entry .menu44.config.f.x9 normal {n l y}} else {configure_entry .menu44.config.f.x9 disabled {y n l}}
	if {($CONFIG_NET == 1) && ($CONFIG_NET != 0) && ($CONFIG_IRDA != 0)} then {configure_entry .menu44.config.f.x10 normal {m}} else {configure_entry .menu44.config.f.x10 disabled {m}}
}


proc update_define_menu44 {} {
	update_define_mainmenu
	global CONFIG_MODULES
	global CONFIG_IRDA_ULTRA
set CONFIG_IRDA_ULTRA [expr $CONFIG_IRDA_ULTRA|16]
	global CONFIG_IRDA_CACHE_LAST_LSAP
set CONFIG_IRDA_CACHE_LAST_LSAP [expr $CONFIG_IRDA_CACHE_LAST_LSAP|16]
	global CONFIG_IRDA_FAST_RR
set CONFIG_IRDA_FAST_RR [expr $CONFIG_IRDA_FAST_RR|16]
	global CONFIG_IRDA_DEBUG
set CONFIG_IRDA_DEBUG [expr $CONFIG_IRDA_DEBUG|16]
	global CONFIG_NET
	global CONFIG_IRDA
	if {($CONFIG_NET == 1) && ($CONFIG_NET != 0) && ($CONFIG_NET == 1 || $CONFIG_NET == 2 || $CONFIG_NET == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_NET]]; set CONFIG_IRDA [sync_tristate $CONFIG_IRDA $tmpvar_dep]; set CONFIG_IRDA [expr $CONFIG_IRDA&15]}
	global CONFIG_IRLAN
	if {($CONFIG_NET == 1) && ($CONFIG_NET != 0) && ($CONFIG_IRDA != 0) && ($CONFIG_IRDA == 1 || $CONFIG_IRDA == 2 || $CONFIG_IRDA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IRDA]]; set CONFIG_IRLAN [sync_tristate $CONFIG_IRLAN $tmpvar_dep]; set CONFIG_IRLAN [expr $CONFIG_IRLAN&15]}
	global CONFIG_NETDEVICES
	global CONFIG_PPP
	global CONFIG_IRNET
	if {($CONFIG_NET == 1) && ($CONFIG_NET != 0) && ($CONFIG_IRDA != 0) && ($CONFIG_NETDEVICES != 0) && ($CONFIG_IRDA == 1 || $CONFIG_IRDA == 2 || $CONFIG_IRDA == 4) && ($CONFIG_PPP == 1 || $CONFIG_PPP == 2 || $CONFIG_PPP == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IRDA $CONFIG_PPP]]; set CONFIG_IRNET [sync_tristate $CONFIG_IRNET $tmpvar_dep]; set CONFIG_IRNET [expr $CONFIG_IRNET&15]}
	global CONFIG_IRCOMM
	if {($CONFIG_NET == 1) && ($CONFIG_NET != 0) && ($CONFIG_IRDA != 0) && ($CONFIG_IRDA == 1 || $CONFIG_IRDA == 2 || $CONFIG_IRDA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IRDA]]; set CONFIG_IRCOMM [sync_tristate $CONFIG_IRCOMM $tmpvar_dep]; set CONFIG_IRCOMM [expr $CONFIG_IRCOMM&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_NET != 0) && ($CONFIG_IRDA != 0)} then {
	set CONFIG_IRDA_ULTRA [expr $CONFIG_IRDA_ULTRA&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_NET != 0) && ($CONFIG_IRDA != 0)} then {
	set CONFIG_IRDA_CACHE_LAST_LSAP [expr $CONFIG_IRDA_CACHE_LAST_LSAP&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_NET != 0) && ($CONFIG_IRDA != 0)} then {
	set CONFIG_IRDA_FAST_RR [expr $CONFIG_IRDA_FAST_RR&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_NET != 0) && ($CONFIG_IRDA != 0)} then {
	set CONFIG_IRDA_DEBUG [expr $CONFIG_IRDA_DEBUG&15]}
}


proc menu45 {w title} {
	set oldFocus [focus]
	catch {focus .menu44}
	catch {destroy $w; unregister_active 45}
	toplevel $w -class Dialog
	wm withdraw $w
	global active_menus
	set active_menus [lsort -integer [linsert $active_menus end 45]]
	message $w.m -width 400 -aspect 300 -text \
		"Infrared-port device drivers"  -relief raised
	pack $w.m -pady 10 -side top -padx 10
	wm title $w "Infrared-port device drivers" 

	bind $w <Escape> "catch {focus $oldFocus}; destroy $w; unregister_active 45; break"
	set nextscript "catch {focus $oldFocus}; destroy $w; unregister_active 45; catch {destroy .menu44}; unregister_active 44; menu46 .menu46 \"$title\""
	frame $w.f
	button $w.f.back -text "OK" \
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 45"
	button $w.f.next -text "Next" -underline 0\
		-width 15 -command $nextscript
	bind all <Alt-n> $nextscript
	button $w.f.prev -text "Prev" -underline 0\
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 45; menu44 .menu44 \"$title\""
	bind $w <Alt-p> "catch {focus $oldFocus}; destroy $w; unregister_active 45; menu44 .menu44 \"$title\";break"
	pack $w.f.back $w.f.next $w.f.prev -side left -expand on
	pack $w.f -pady 10 -side bottom -anchor w -fill x
	frame $w.topline -relief ridge -borderwidth 2 -height 2
	pack $w.topline -side top -fill x

	frame $w.botline -relief ridge -borderwidth 2 -height 2
	pack $w.botline -side bottom -fill x

	frame $w.config
	pack $w.config -fill y -expand on

	scrollbar $w.config.vscroll -command "$w.config.canvas yview"
	pack $w.config.vscroll -side right -fill y

	canvas $w.config.canvas -height 1\
		-relief flat -borderwidth 0 -yscrollcommand "$w.config.vscroll set" \
		-width [expr [winfo screenwidth .] * 1 / 2] 
	frame $w.config.f
	bind $w <Key-Down> "$w.config.canvas yview scroll  1 unit;break;"
	bind $w <Key-Up> "$w.config.canvas yview scroll  -1 unit;break;"
	bind $w <Key-Next> "$w.config.canvas yview scroll  1 page;break;"
	bind $w <Key-Prior> "$w.config.canvas yview scroll  -1 page;break;"
	bind $w <Key-Home> "$w.config.canvas yview moveto 0;break;"
	bind $w <Key-End> "$w.config.canvas yview moveto 1 ;break;"
	pack $w.config.canvas -side right -fill y


	comment $w.config.f 45 0 "SIR device drivers"
	dep_tristate $w.config.f 45 1 "IrTTY (uses Linux serial driver)" CONFIG_IRTTY_SIR
	dep_tristate $w.config.f 45 2 "IrPORT (IrDA serial driver)" CONFIG_IRPORT_SIR
	comment $w.config.f 45 3 "Dongle support"
	bool $w.config.f 45 4 "Serial dongle support" CONFIG_DONGLE
	dep_tristate $w.config.f 45 5 "  ESI JetEye PC dongle" CONFIG_ESI_DONGLE
	dep_tristate $w.config.f 45 6 "  ACTiSYS IR-220L and IR220L+ dongle" CONFIG_ACTISYS_DONGLE
	dep_tristate $w.config.f 45 7 "  Tekram IrMate 210B dongle" CONFIG_TEKRAM_DONGLE
	dep_tristate $w.config.f 45 8 "  Greenwich GIrBIL dongle" CONFIG_GIRBIL_DONGLE
	dep_tristate $w.config.f 45 9 "  Parallax LiteLink dongle" CONFIG_LITELINK_DONGLE
	dep_tristate $w.config.f 45 10 "  Microchip MCP2120" CONFIG_MCP2120_DONGLE
	dep_tristate $w.config.f 45 11 "  Old Belkin dongle" CONFIG_OLD_BELKIN_DONGLE
	dep_tristate $w.config.f 45 12 "  EP7211 I/R support" CONFIG_EP7211_IR
	dep_tristate $w.config.f 45 13 "  ACTiSYS IR-200L dongle (Experimental)" CONFIG_ACT200L_DONGLE
	dep_tristate $w.config.f 45 14 "  Mobile Action MA600 dongle (Experimental)" CONFIG_MA600_DONGLE
	comment $w.config.f 45 15 "FIR device drivers"
	dep_tristate $w.config.f 45 16 "IrDA USB dongles (Experimental)" CONFIG_USB_IRDA
	dep_tristate $w.config.f 45 17 "NSC PC87108/PC87338" CONFIG_NSC_FIR
	dep_tristate $w.config.f 45 18 "Winbond W83977AF (IR)" CONFIG_WINBOND_FIR
	dep_tristate $w.config.f 45 19 "Toshiba Type-O IR Port (old driver)" CONFIG_TOSHIBA_OLD
	dep_tristate $w.config.f 45 20 "Toshiba Type-O IR Port" CONFIG_TOSHIBA_FIR
	dep_tristate $w.config.f 45 21 "SMC IrCC (Experimental)" CONFIG_SMC_IRCC_FIR
	dep_tristate $w.config.f 45 22 "SA1100 Internal IR" CONFIG_SA1100_FIR
	dep_tristate $w.config.f 45 23 "ALi M5123 FIR (Experimental)" CONFIG_ALI_FIR
	dep_tristate $w.config.f 45 24 "VLSI 82C147 SIR/MIR/FIR (Experimental)" CONFIG_VLSI_FIR
	dep_tristate $w.config.f 45 25 "SA1100 Internal IR" CONFIG_SA1100_FIR



	focus $w
	update_active
	global winx; global winy
	if {[winfo exists .menu44] == 0} then {menu44 .menu44 "IrDA (infrared) support"}
	set winx [expr [winfo x .menu44]+30]; set winy [expr [winfo y .menu44]+30]
	if {[winfo exists $w]} then {wm geometry $w +$winx+$winy}
	update idletasks
	if {[winfo exists $w]} then  {$w.config.canvas create window 0 0 -anchor nw -window $w.config.f

	$w.config.canvas configure \
		-width [expr [winfo reqwidth $w.config.f] + 1]\
		-scrollregion "-1 -1 [expr [winfo reqwidth $w.config.f] + 1] \
			 [expr [winfo reqheight $w.config.f] + 1]"

	set winy [expr [winfo reqh $w] - [winfo reqh $w.config.canvas]]
	set scry [expr [winfo screenh $w] / 2]
	set maxy [expr [winfo screenh $w] * 3 / 4]
	set canvtotal [expr [winfo reqh $w.config.f] + 2]
	if [expr $winy + $canvtotal < $maxy] {
		$w.config.canvas configure -height $canvtotal
	} else {
		$w.config.canvas configure -height [expr $scry - $winy]
		}
	}
	update idletasks
	if {[winfo exists $w]} then {
	wm maxsize $w [winfo width $w] [winfo screenheight $w]
	wm minsize $w [winfo width $w] 100

	wm deiconify $w
}
}

proc update_menu45 {} {
	global CONFIG_NET
	global CONFIG_IRDA
	if {($CONFIG_NET == 1) && ($CONFIG_NET != 0) && ($CONFIG_IRDA != 0)} then {configure_entry .menu45.config.f.x0 normal {m}} else {configure_entry .menu45.config.f.x0 disabled {m}}
	global CONFIG_MODULES
	global CONFIG_IRTTY_SIR
	if {($CONFIG_NET == 1) && ($CONFIG_NET != 0) && ($CONFIG_IRDA != 0) && ($CONFIG_IRDA == 1 || $CONFIG_IRDA == 2 || $CONFIG_IRDA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IRDA]];set CONFIG_IRTTY_SIR [sync_tristate $CONFIG_IRTTY_SIR $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu45.config.f.x1 disabled {y}} else {configure_entry .menu45.config.f.x1 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu45.config.f.x1 disabled {m}} else {configure_entry .menu45.config.f.x1 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu45.config.f.x1 normal {m}} else {configure_entry .menu45.config.f.x1 disabled {m}}; configure_entry .menu45.config.f.x1 normal {n l}} else {configure_entry .menu45.config.f.x1 disabled {y n m l}}
	global CONFIG_IRPORT_SIR
	if {($CONFIG_NET == 1) && ($CONFIG_NET != 0) && ($CONFIG_IRDA != 0) && ($CONFIG_IRDA == 1 || $CONFIG_IRDA == 2 || $CONFIG_IRDA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IRDA]];set CONFIG_IRPORT_SIR [sync_tristate $CONFIG_IRPORT_SIR $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu45.config.f.x2 disabled {y}} else {configure_entry .menu45.config.f.x2 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu45.config.f.x2 disabled {m}} else {configure_entry .menu45.config.f.x2 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu45.config.f.x2 normal {m}} else {configure_entry .menu45.config.f.x2 disabled {m}}; configure_entry .menu45.config.f.x2 normal {n l}} else {configure_entry .menu45.config.f.x2 disabled {y n m l}}
	if {($CONFIG_NET == 1) && ($CONFIG_NET != 0) && ($CONFIG_IRDA != 0)} then {configure_entry .menu45.config.f.x3 normal {m}} else {configure_entry .menu45.config.f.x3 disabled {m}}
	global CONFIG_DONGLE
	if {($CONFIG_NET == 1) && ($CONFIG_NET != 0) && ($CONFIG_IRDA != 0)} then {
	configure_entry .menu45.config.f.x4 normal {n l y}} else {configure_entry .menu45.config.f.x4 disabled {y n l}}
	global CONFIG_ESI_DONGLE
	if {($CONFIG_NET == 1) && ($CONFIG_NET != 0) && ($CONFIG_IRDA != 0) && ($CONFIG_DONGLE != 0) && ($CONFIG_IRDA == 1 || $CONFIG_IRDA == 2 || $CONFIG_IRDA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IRDA]];set CONFIG_ESI_DONGLE [sync_tristate $CONFIG_ESI_DONGLE $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu45.config.f.x5 disabled {y}} else {configure_entry .menu45.config.f.x5 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu45.config.f.x5 disabled {m}} else {configure_entry .menu45.config.f.x5 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu45.config.f.x5 normal {m}} else {configure_entry .menu45.config.f.x5 disabled {m}}; configure_entry .menu45.config.f.x5 normal {n l}} else {configure_entry .menu45.config.f.x5 disabled {y n m l}}
	global CONFIG_ACTISYS_DONGLE
	if {($CONFIG_NET == 1) && ($CONFIG_NET != 0) && ($CONFIG_IRDA != 0) && ($CONFIG_DONGLE != 0) && ($CONFIG_IRDA == 1 || $CONFIG_IRDA == 2 || $CONFIG_IRDA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IRDA]];set CONFIG_ACTISYS_DONGLE [sync_tristate $CONFIG_ACTISYS_DONGLE $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu45.config.f.x6 disabled {y}} else {configure_entry .menu45.config.f.x6 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu45.config.f.x6 disabled {m}} else {configure_entry .menu45.config.f.x6 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu45.config.f.x6 normal {m}} else {configure_entry .menu45.config.f.x6 disabled {m}}; configure_entry .menu45.config.f.x6 normal {n l}} else {configure_entry .menu45.config.f.x6 disabled {y n m l}}
	global CONFIG_TEKRAM_DONGLE
	if {($CONFIG_NET == 1) && ($CONFIG_NET != 0) && ($CONFIG_IRDA != 0) && ($CONFIG_DONGLE != 0) && ($CONFIG_IRDA == 1 || $CONFIG_IRDA == 2 || $CONFIG_IRDA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IRDA]];set CONFIG_TEKRAM_DONGLE [sync_tristate $CONFIG_TEKRAM_DONGLE $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu45.config.f.x7 disabled {y}} else {configure_entry .menu45.config.f.x7 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu45.config.f.x7 disabled {m}} else {configure_entry .menu45.config.f.x7 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu45.config.f.x7 normal {m}} else {configure_entry .menu45.config.f.x7 disabled {m}}; configure_entry .menu45.config.f.x7 normal {n l}} else {configure_entry .menu45.config.f.x7 disabled {y n m l}}
	global CONFIG_GIRBIL_DONGLE
	if {($CONFIG_NET == 1) && ($CONFIG_NET != 0) && ($CONFIG_IRDA != 0) && ($CONFIG_DONGLE != 0) && ($CONFIG_IRDA == 1 || $CONFIG_IRDA == 2 || $CONFIG_IRDA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IRDA]];set CONFIG_GIRBIL_DONGLE [sync_tristate $CONFIG_GIRBIL_DONGLE $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu45.config.f.x8 disabled {y}} else {configure_entry .menu45.config.f.x8 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu45.config.f.x8 disabled {m}} else {configure_entry .menu45.config.f.x8 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu45.config.f.x8 normal {m}} else {configure_entry .menu45.config.f.x8 disabled {m}}; configure_entry .menu45.config.f.x8 normal {n l}} else {configure_entry .menu45.config.f.x8 disabled {y n m l}}
	global CONFIG_LITELINK_DONGLE
	if {($CONFIG_NET == 1) && ($CONFIG_NET != 0) && ($CONFIG_IRDA != 0) && ($CONFIG_DONGLE != 0) && ($CONFIG_IRDA == 1 || $CONFIG_IRDA == 2 || $CONFIG_IRDA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IRDA]];set CONFIG_LITELINK_DONGLE [sync_tristate $CONFIG_LITELINK_DONGLE $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu45.config.f.x9 disabled {y}} else {configure_entry .menu45.config.f.x9 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu45.config.f.x9 disabled {m}} else {configure_entry .menu45.config.f.x9 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu45.config.f.x9 normal {m}} else {configure_entry .menu45.config.f.x9 disabled {m}}; configure_entry .menu45.config.f.x9 normal {n l}} else {configure_entry .menu45.config.f.x9 disabled {y n m l}}
	global CONFIG_MCP2120_DONGLE
	if {($CONFIG_NET == 1) && ($CONFIG_NET != 0) && ($CONFIG_IRDA != 0) && ($CONFIG_DONGLE != 0) && ($CONFIG_IRDA == 1 || $CONFIG_IRDA == 2 || $CONFIG_IRDA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IRDA]];set CONFIG_MCP2120_DONGLE [sync_tristate $CONFIG_MCP2120_DONGLE $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu45.config.f.x10 disabled {y}} else {configure_entry .menu45.config.f.x10 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu45.config.f.x10 disabled {m}} else {configure_entry .menu45.config.f.x10 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu45.config.f.x10 normal {m}} else {configure_entry .menu45.config.f.x10 disabled {m}}; configure_entry .menu45.config.f.x10 normal {n l}} else {configure_entry .menu45.config.f.x10 disabled {y n m l}}
	global CONFIG_OLD_BELKIN_DONGLE
	if {($CONFIG_NET == 1) && ($CONFIG_NET != 0) && ($CONFIG_IRDA != 0) && ($CONFIG_DONGLE != 0) && ($CONFIG_IRDA == 1 || $CONFIG_IRDA == 2 || $CONFIG_IRDA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IRDA]];set CONFIG_OLD_BELKIN_DONGLE [sync_tristate $CONFIG_OLD_BELKIN_DONGLE $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu45.config.f.x11 disabled {y}} else {configure_entry .menu45.config.f.x11 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu45.config.f.x11 disabled {m}} else {configure_entry .menu45.config.f.x11 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu45.config.f.x11 normal {m}} else {configure_entry .menu45.config.f.x11 disabled {m}}; configure_entry .menu45.config.f.x11 normal {n l}} else {configure_entry .menu45.config.f.x11 disabled {y n m l}}
	global CONFIG_ARCH_EP7211
	global CONFIG_EP7211_IR
	if {($CONFIG_NET == 1) && ($CONFIG_NET != 0) && ($CONFIG_IRDA != 0) && ($CONFIG_DONGLE != 0) && ($CONFIG_ARCH_EP7211 == 1) && ($CONFIG_IRDA == 1 || $CONFIG_IRDA == 2 || $CONFIG_IRDA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IRDA]];set CONFIG_EP7211_IR [sync_tristate $CONFIG_EP7211_IR $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu45.config.f.x12 disabled {y}} else {configure_entry .menu45.config.f.x12 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu45.config.f.x12 disabled {m}} else {configure_entry .menu45.config.f.x12 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu45.config.f.x12 normal {m}} else {configure_entry .menu45.config.f.x12 disabled {m}}; configure_entry .menu45.config.f.x12 normal {n l}} else {configure_entry .menu45.config.f.x12 disabled {y n m l}}
	global CONFIG_EXPERIMENTAL
	global CONFIG_ACT200L_DONGLE
	if {($CONFIG_NET == 1) && ($CONFIG_NET != 0) && ($CONFIG_IRDA != 0) && ($CONFIG_DONGLE != 0) && ($CONFIG_EXPERIMENTAL != 0) && ($CONFIG_IRDA == 1 || $CONFIG_IRDA == 2 || $CONFIG_IRDA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IRDA]];set CONFIG_ACT200L_DONGLE [sync_tristate $CONFIG_ACT200L_DONGLE $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu45.config.f.x13 disabled {y}} else {configure_entry .menu45.config.f.x13 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu45.config.f.x13 disabled {m}} else {configure_entry .menu45.config.f.x13 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu45.config.f.x13 normal {m}} else {configure_entry .menu45.config.f.x13 disabled {m}}; configure_entry .menu45.config.f.x13 normal {n l}} else {configure_entry .menu45.config.f.x13 disabled {y n m l}}
	global CONFIG_MA600_DONGLE
	if {($CONFIG_NET == 1) && ($CONFIG_NET != 0) && ($CONFIG_IRDA != 0) && ($CONFIG_DONGLE != 0) && ($CONFIG_EXPERIMENTAL != 0) && ($CONFIG_IRDA == 1 || $CONFIG_IRDA == 2 || $CONFIG_IRDA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IRDA]];set CONFIG_MA600_DONGLE [sync_tristate $CONFIG_MA600_DONGLE $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu45.config.f.x14 disabled {y}} else {configure_entry .menu45.config.f.x14 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu45.config.f.x14 disabled {m}} else {configure_entry .menu45.config.f.x14 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu45.config.f.x14 normal {m}} else {configure_entry .menu45.config.f.x14 disabled {m}}; configure_entry .menu45.config.f.x14 normal {n l}} else {configure_entry .menu45.config.f.x14 disabled {y n m l}}
	if {($CONFIG_NET == 1) && ($CONFIG_NET != 0) && ($CONFIG_IRDA != 0)} then {configure_entry .menu45.config.f.x15 normal {m}} else {configure_entry .menu45.config.f.x15 disabled {m}}
	global CONFIG_USB
	global CONFIG_USB_IRDA
	if {($CONFIG_NET == 1) && ($CONFIG_NET != 0) && ($CONFIG_IRDA != 0) && ($CONFIG_IRDA == 1 || $CONFIG_IRDA == 2 || $CONFIG_IRDA == 4) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IRDA $CONFIG_USB $CONFIG_EXPERIMENTAL]];set CONFIG_USB_IRDA [sync_tristate $CONFIG_USB_IRDA $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu45.config.f.x16 disabled {y}} else {configure_entry .menu45.config.f.x16 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu45.config.f.x16 disabled {m}} else {configure_entry .menu45.config.f.x16 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu45.config.f.x16 normal {m}} else {configure_entry .menu45.config.f.x16 disabled {m}}; configure_entry .menu45.config.f.x16 normal {n l}} else {configure_entry .menu45.config.f.x16 disabled {y n m l}}
	global CONFIG_NSC_FIR
	if {($CONFIG_NET == 1) && ($CONFIG_NET != 0) && ($CONFIG_IRDA != 0) && ($CONFIG_IRDA == 1 || $CONFIG_IRDA == 2 || $CONFIG_IRDA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IRDA]];set CONFIG_NSC_FIR [sync_tristate $CONFIG_NSC_FIR $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu45.config.f.x17 disabled {y}} else {configure_entry .menu45.config.f.x17 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu45.config.f.x17 disabled {m}} else {configure_entry .menu45.config.f.x17 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu45.config.f.x17 normal {m}} else {configure_entry .menu45.config.f.x17 disabled {m}}; configure_entry .menu45.config.f.x17 normal {n l}} else {configure_entry .menu45.config.f.x17 disabled {y n m l}}
	global CONFIG_WINBOND_FIR
	if {($CONFIG_NET == 1) && ($CONFIG_NET != 0) && ($CONFIG_IRDA != 0) && ($CONFIG_IRDA == 1 || $CONFIG_IRDA == 2 || $CONFIG_IRDA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IRDA]];set CONFIG_WINBOND_FIR [sync_tristate $CONFIG_WINBOND_FIR $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu45.config.f.x18 disabled {y}} else {configure_entry .menu45.config.f.x18 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu45.config.f.x18 disabled {m}} else {configure_entry .menu45.config.f.x18 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu45.config.f.x18 normal {m}} else {configure_entry .menu45.config.f.x18 disabled {m}}; configure_entry .menu45.config.f.x18 normal {n l}} else {configure_entry .menu45.config.f.x18 disabled {y n m l}}
	global CONFIG_TOSHIBA_OLD
	if {($CONFIG_NET == 1) && ($CONFIG_NET != 0) && ($CONFIG_IRDA != 0) && ($CONFIG_IRDA == 1 || $CONFIG_IRDA == 2 || $CONFIG_IRDA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IRDA]];set CONFIG_TOSHIBA_OLD [sync_tristate $CONFIG_TOSHIBA_OLD $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu45.config.f.x19 disabled {y}} else {configure_entry .menu45.config.f.x19 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu45.config.f.x19 disabled {m}} else {configure_entry .menu45.config.f.x19 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu45.config.f.x19 normal {m}} else {configure_entry .menu45.config.f.x19 disabled {m}}; configure_entry .menu45.config.f.x19 normal {n l}} else {configure_entry .menu45.config.f.x19 disabled {y n m l}}
	global CONFIG_TOSHIBA_FIR
	if {($CONFIG_NET == 1) && ($CONFIG_NET != 0) && ($CONFIG_IRDA != 0) && ($CONFIG_IRDA == 1 || $CONFIG_IRDA == 2 || $CONFIG_IRDA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IRDA]];set CONFIG_TOSHIBA_FIR [sync_tristate $CONFIG_TOSHIBA_FIR $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu45.config.f.x20 disabled {y}} else {configure_entry .menu45.config.f.x20 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu45.config.f.x20 disabled {m}} else {configure_entry .menu45.config.f.x20 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu45.config.f.x20 normal {m}} else {configure_entry .menu45.config.f.x20 disabled {m}}; configure_entry .menu45.config.f.x20 normal {n l}} else {configure_entry .menu45.config.f.x20 disabled {y n m l}}
	global CONFIG_SMC_IRCC_FIR
	if {($CONFIG_NET == 1) && ($CONFIG_NET != 0) && ($CONFIG_IRDA != 0) && ($CONFIG_EXPERIMENTAL != 0) && ($CONFIG_IRDA == 1 || $CONFIG_IRDA == 2 || $CONFIG_IRDA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IRDA]];set CONFIG_SMC_IRCC_FIR [sync_tristate $CONFIG_SMC_IRCC_FIR $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu45.config.f.x21 disabled {y}} else {configure_entry .menu45.config.f.x21 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu45.config.f.x21 disabled {m}} else {configure_entry .menu45.config.f.x21 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu45.config.f.x21 normal {m}} else {configure_entry .menu45.config.f.x21 disabled {m}}; configure_entry .menu45.config.f.x21 normal {n l}} else {configure_entry .menu45.config.f.x21 disabled {y n m l}}
	global CONFIG_ARCH_SA1100
	global CONFIG_SA1100_FIR
	if {($CONFIG_NET == 1) && ($CONFIG_NET != 0) && ($CONFIG_IRDA != 0) && ($CONFIG_EXPERIMENTAL != 0) && ($CONFIG_ARCH_SA1100 == 1) && ($CONFIG_IRDA == 1 || $CONFIG_IRDA == 2 || $CONFIG_IRDA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IRDA]];set CONFIG_SA1100_FIR [sync_tristate $CONFIG_SA1100_FIR $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu45.config.f.x22 disabled {y}} else {configure_entry .menu45.config.f.x22 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu45.config.f.x22 disabled {m}} else {configure_entry .menu45.config.f.x22 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu45.config.f.x22 normal {m}} else {configure_entry .menu45.config.f.x22 disabled {m}}; configure_entry .menu45.config.f.x22 normal {n l}} else {configure_entry .menu45.config.f.x22 disabled {y n m l}}
	global CONFIG_ALI_FIR
	if {($CONFIG_NET == 1) && ($CONFIG_NET != 0) && ($CONFIG_IRDA != 0) && ($CONFIG_EXPERIMENTAL != 0) && ($CONFIG_IRDA == 1 || $CONFIG_IRDA == 2 || $CONFIG_IRDA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IRDA]];set CONFIG_ALI_FIR [sync_tristate $CONFIG_ALI_FIR $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu45.config.f.x23 disabled {y}} else {configure_entry .menu45.config.f.x23 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu45.config.f.x23 disabled {m}} else {configure_entry .menu45.config.f.x23 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu45.config.f.x23 normal {m}} else {configure_entry .menu45.config.f.x23 disabled {m}}; configure_entry .menu45.config.f.x23 normal {n l}} else {configure_entry .menu45.config.f.x23 disabled {y n m l}}
	global CONFIG_VLSI_FIR
	if {($CONFIG_NET == 1) && ($CONFIG_NET != 0) && ($CONFIG_IRDA != 0) && ($CONFIG_EXPERIMENTAL != 0) && ($CONFIG_IRDA == 1 || $CONFIG_IRDA == 2 || $CONFIG_IRDA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IRDA]];set CONFIG_VLSI_FIR [sync_tristate $CONFIG_VLSI_FIR $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu45.config.f.x24 disabled {y}} else {configure_entry .menu45.config.f.x24 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu45.config.f.x24 disabled {m}} else {configure_entry .menu45.config.f.x24 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu45.config.f.x24 normal {m}} else {configure_entry .menu45.config.f.x24 disabled {m}}; configure_entry .menu45.config.f.x24 normal {n l}} else {configure_entry .menu45.config.f.x24 disabled {y n m l}}
	if {($CONFIG_NET == 1) && ($CONFIG_NET != 0) && ($CONFIG_IRDA != 0) && ($CONFIG_ARCH_SA1100 == 1) && ($CONFIG_IRDA == 1 || $CONFIG_IRDA == 2 || $CONFIG_IRDA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IRDA]];set CONFIG_SA1100_FIR [sync_tristate $CONFIG_SA1100_FIR $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu45.config.f.x25 disabled {y}} else {configure_entry .menu45.config.f.x25 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu45.config.f.x25 disabled {m}} else {configure_entry .menu45.config.f.x25 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu45.config.f.x25 normal {m}} else {configure_entry .menu45.config.f.x25 disabled {m}}; configure_entry .menu45.config.f.x25 normal {n l}} else {configure_entry .menu45.config.f.x25 disabled {y n m l}}
}


proc update_define_menu45 {} {
	update_define_mainmenu
	global CONFIG_MODULES
	global CONFIG_DONGLE
set CONFIG_DONGLE [expr $CONFIG_DONGLE|16]
	global CONFIG_NET
	global CONFIG_IRDA
	global CONFIG_IRTTY_SIR
	if {($CONFIG_NET == 1) && ($CONFIG_NET != 0) && ($CONFIG_IRDA != 0) && ($CONFIG_IRDA == 1 || $CONFIG_IRDA == 2 || $CONFIG_IRDA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IRDA]]; set CONFIG_IRTTY_SIR [sync_tristate $CONFIG_IRTTY_SIR $tmpvar_dep]; set CONFIG_IRTTY_SIR [expr $CONFIG_IRTTY_SIR&15]}
	global CONFIG_IRPORT_SIR
	if {($CONFIG_NET == 1) && ($CONFIG_NET != 0) && ($CONFIG_IRDA != 0) && ($CONFIG_IRDA == 1 || $CONFIG_IRDA == 2 || $CONFIG_IRDA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IRDA]]; set CONFIG_IRPORT_SIR [sync_tristate $CONFIG_IRPORT_SIR $tmpvar_dep]; set CONFIG_IRPORT_SIR [expr $CONFIG_IRPORT_SIR&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_NET != 0) && ($CONFIG_IRDA != 0)} then {
	set CONFIG_DONGLE [expr $CONFIG_DONGLE&15]}
	global CONFIG_ESI_DONGLE
	if {($CONFIG_NET == 1) && ($CONFIG_NET != 0) && ($CONFIG_IRDA != 0) && ($CONFIG_DONGLE != 0) && ($CONFIG_IRDA == 1 || $CONFIG_IRDA == 2 || $CONFIG_IRDA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IRDA]]; set CONFIG_ESI_DONGLE [sync_tristate $CONFIG_ESI_DONGLE $tmpvar_dep]; set CONFIG_ESI_DONGLE [expr $CONFIG_ESI_DONGLE&15]}
	global CONFIG_ACTISYS_DONGLE
	if {($CONFIG_NET == 1) && ($CONFIG_NET != 0) && ($CONFIG_IRDA != 0) && ($CONFIG_DONGLE != 0) && ($CONFIG_IRDA == 1 || $CONFIG_IRDA == 2 || $CONFIG_IRDA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IRDA]]; set CONFIG_ACTISYS_DONGLE [sync_tristate $CONFIG_ACTISYS_DONGLE $tmpvar_dep]; set CONFIG_ACTISYS_DONGLE [expr $CONFIG_ACTISYS_DONGLE&15]}
	global CONFIG_TEKRAM_DONGLE
	if {($CONFIG_NET == 1) && ($CONFIG_NET != 0) && ($CONFIG_IRDA != 0) && ($CONFIG_DONGLE != 0) && ($CONFIG_IRDA == 1 || $CONFIG_IRDA == 2 || $CONFIG_IRDA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IRDA]]; set CONFIG_TEKRAM_DONGLE [sync_tristate $CONFIG_TEKRAM_DONGLE $tmpvar_dep]; set CONFIG_TEKRAM_DONGLE [expr $CONFIG_TEKRAM_DONGLE&15]}
	global CONFIG_GIRBIL_DONGLE
	if {($CONFIG_NET == 1) && ($CONFIG_NET != 0) && ($CONFIG_IRDA != 0) && ($CONFIG_DONGLE != 0) && ($CONFIG_IRDA == 1 || $CONFIG_IRDA == 2 || $CONFIG_IRDA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IRDA]]; set CONFIG_GIRBIL_DONGLE [sync_tristate $CONFIG_GIRBIL_DONGLE $tmpvar_dep]; set CONFIG_GIRBIL_DONGLE [expr $CONFIG_GIRBIL_DONGLE&15]}
	global CONFIG_LITELINK_DONGLE
	if {($CONFIG_NET == 1) && ($CONFIG_NET != 0) && ($CONFIG_IRDA != 0) && ($CONFIG_DONGLE != 0) && ($CONFIG_IRDA == 1 || $CONFIG_IRDA == 2 || $CONFIG_IRDA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IRDA]]; set CONFIG_LITELINK_DONGLE [sync_tristate $CONFIG_LITELINK_DONGLE $tmpvar_dep]; set CONFIG_LITELINK_DONGLE [expr $CONFIG_LITELINK_DONGLE&15]}
	global CONFIG_MCP2120_DONGLE
	if {($CONFIG_NET == 1) && ($CONFIG_NET != 0) && ($CONFIG_IRDA != 0) && ($CONFIG_DONGLE != 0) && ($CONFIG_IRDA == 1 || $CONFIG_IRDA == 2 || $CONFIG_IRDA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IRDA]]; set CONFIG_MCP2120_DONGLE [sync_tristate $CONFIG_MCP2120_DONGLE $tmpvar_dep]; set CONFIG_MCP2120_DONGLE [expr $CONFIG_MCP2120_DONGLE&15]}
	global CONFIG_OLD_BELKIN_DONGLE
	if {($CONFIG_NET == 1) && ($CONFIG_NET != 0) && ($CONFIG_IRDA != 0) && ($CONFIG_DONGLE != 0) && ($CONFIG_IRDA == 1 || $CONFIG_IRDA == 2 || $CONFIG_IRDA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IRDA]]; set CONFIG_OLD_BELKIN_DONGLE [sync_tristate $CONFIG_OLD_BELKIN_DONGLE $tmpvar_dep]; set CONFIG_OLD_BELKIN_DONGLE [expr $CONFIG_OLD_BELKIN_DONGLE&15]}
	global CONFIG_ARCH_EP7211
	global CONFIG_EP7211_IR
	if {($CONFIG_NET == 1) && ($CONFIG_NET != 0) && ($CONFIG_IRDA != 0) && ($CONFIG_DONGLE != 0) && ($CONFIG_ARCH_EP7211 == 1) && ($CONFIG_IRDA == 1 || $CONFIG_IRDA == 2 || $CONFIG_IRDA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IRDA]]; set CONFIG_EP7211_IR [sync_tristate $CONFIG_EP7211_IR $tmpvar_dep]; set CONFIG_EP7211_IR [expr $CONFIG_EP7211_IR&15]}
	global CONFIG_EXPERIMENTAL
	global CONFIG_ACT200L_DONGLE
	if {($CONFIG_NET == 1) && ($CONFIG_NET != 0) && ($CONFIG_IRDA != 0) && ($CONFIG_DONGLE != 0) && ($CONFIG_EXPERIMENTAL != 0) && ($CONFIG_IRDA == 1 || $CONFIG_IRDA == 2 || $CONFIG_IRDA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IRDA]]; set CONFIG_ACT200L_DONGLE [sync_tristate $CONFIG_ACT200L_DONGLE $tmpvar_dep]; set CONFIG_ACT200L_DONGLE [expr $CONFIG_ACT200L_DONGLE&15]}
	global CONFIG_MA600_DONGLE
	if {($CONFIG_NET == 1) && ($CONFIG_NET != 0) && ($CONFIG_IRDA != 0) && ($CONFIG_DONGLE != 0) && ($CONFIG_EXPERIMENTAL != 0) && ($CONFIG_IRDA == 1 || $CONFIG_IRDA == 2 || $CONFIG_IRDA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IRDA]]; set CONFIG_MA600_DONGLE [sync_tristate $CONFIG_MA600_DONGLE $tmpvar_dep]; set CONFIG_MA600_DONGLE [expr $CONFIG_MA600_DONGLE&15]}
	global CONFIG_USB
	global CONFIG_USB_IRDA
	if {($CONFIG_NET == 1) && ($CONFIG_NET != 0) && ($CONFIG_IRDA != 0) && ($CONFIG_IRDA == 1 || $CONFIG_IRDA == 2 || $CONFIG_IRDA == 4) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IRDA $CONFIG_USB $CONFIG_EXPERIMENTAL]]; set CONFIG_USB_IRDA [sync_tristate $CONFIG_USB_IRDA $tmpvar_dep]; set CONFIG_USB_IRDA [expr $CONFIG_USB_IRDA&15]}
	global CONFIG_NSC_FIR
	if {($CONFIG_NET == 1) && ($CONFIG_NET != 0) && ($CONFIG_IRDA != 0) && ($CONFIG_IRDA == 1 || $CONFIG_IRDA == 2 || $CONFIG_IRDA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IRDA]]; set CONFIG_NSC_FIR [sync_tristate $CONFIG_NSC_FIR $tmpvar_dep]; set CONFIG_NSC_FIR [expr $CONFIG_NSC_FIR&15]}
	global CONFIG_WINBOND_FIR
	if {($CONFIG_NET == 1) && ($CONFIG_NET != 0) && ($CONFIG_IRDA != 0) && ($CONFIG_IRDA == 1 || $CONFIG_IRDA == 2 || $CONFIG_IRDA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IRDA]]; set CONFIG_WINBOND_FIR [sync_tristate $CONFIG_WINBOND_FIR $tmpvar_dep]; set CONFIG_WINBOND_FIR [expr $CONFIG_WINBOND_FIR&15]}
	global CONFIG_TOSHIBA_OLD
	if {($CONFIG_NET == 1) && ($CONFIG_NET != 0) && ($CONFIG_IRDA != 0) && ($CONFIG_IRDA == 1 || $CONFIG_IRDA == 2 || $CONFIG_IRDA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IRDA]]; set CONFIG_TOSHIBA_OLD [sync_tristate $CONFIG_TOSHIBA_OLD $tmpvar_dep]; set CONFIG_TOSHIBA_OLD [expr $CONFIG_TOSHIBA_OLD&15]}
	global CONFIG_TOSHIBA_FIR
	if {($CONFIG_NET == 1) && ($CONFIG_NET != 0) && ($CONFIG_IRDA != 0) && ($CONFIG_IRDA == 1 || $CONFIG_IRDA == 2 || $CONFIG_IRDA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IRDA]]; set CONFIG_TOSHIBA_FIR [sync_tristate $CONFIG_TOSHIBA_FIR $tmpvar_dep]; set CONFIG_TOSHIBA_FIR [expr $CONFIG_TOSHIBA_FIR&15]}
	global CONFIG_SMC_IRCC_FIR
	if {($CONFIG_NET == 1) && ($CONFIG_NET != 0) && ($CONFIG_IRDA != 0) && ($CONFIG_EXPERIMENTAL != 0) && ($CONFIG_IRDA == 1 || $CONFIG_IRDA == 2 || $CONFIG_IRDA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IRDA]]; set CONFIG_SMC_IRCC_FIR [sync_tristate $CONFIG_SMC_IRCC_FIR $tmpvar_dep]; set CONFIG_SMC_IRCC_FIR [expr $CONFIG_SMC_IRCC_FIR&15]}
	global CONFIG_ARCH_SA1100
	global CONFIG_SA1100_FIR
	if {($CONFIG_NET == 1) && ($CONFIG_NET != 0) && ($CONFIG_IRDA != 0) && ($CONFIG_EXPERIMENTAL != 0) && ($CONFIG_ARCH_SA1100 == 1) && ($CONFIG_IRDA == 1 || $CONFIG_IRDA == 2 || $CONFIG_IRDA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IRDA]]; set CONFIG_SA1100_FIR [sync_tristate $CONFIG_SA1100_FIR $tmpvar_dep]; set CONFIG_SA1100_FIR [expr $CONFIG_SA1100_FIR&15]}
	global CONFIG_ALI_FIR
	if {($CONFIG_NET == 1) && ($CONFIG_NET != 0) && ($CONFIG_IRDA != 0) && ($CONFIG_EXPERIMENTAL != 0) && ($CONFIG_IRDA == 1 || $CONFIG_IRDA == 2 || $CONFIG_IRDA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IRDA]]; set CONFIG_ALI_FIR [sync_tristate $CONFIG_ALI_FIR $tmpvar_dep]; set CONFIG_ALI_FIR [expr $CONFIG_ALI_FIR&15]}
	global CONFIG_VLSI_FIR
	if {($CONFIG_NET == 1) && ($CONFIG_NET != 0) && ($CONFIG_IRDA != 0) && ($CONFIG_EXPERIMENTAL != 0) && ($CONFIG_IRDA == 1 || $CONFIG_IRDA == 2 || $CONFIG_IRDA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IRDA]]; set CONFIG_VLSI_FIR [sync_tristate $CONFIG_VLSI_FIR $tmpvar_dep]; set CONFIG_VLSI_FIR [expr $CONFIG_VLSI_FIR&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_NET != 0) && ($CONFIG_IRDA != 0) && ($CONFIG_ARCH_SA1100 == 1) && ($CONFIG_IRDA == 1 || $CONFIG_IRDA == 2 || $CONFIG_IRDA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IRDA]]; set CONFIG_SA1100_FIR [sync_tristate $CONFIG_SA1100_FIR $tmpvar_dep]; set CONFIG_SA1100_FIR [expr $CONFIG_SA1100_FIR&15]}
}


menu_option menu46 46 "ATA/ATAPI/MFM/RLL support"
proc menu46 {w title} {
	set oldFocus [focus]
	catch {destroy $w; unregister_active 46}
	toplevel $w -class Dialog
	wm withdraw $w
	global active_menus
	set active_menus [lsort -integer [linsert $active_menus end 46]]
	message $w.m -width 400 -aspect 300 -text \
		"ATA/ATAPI/MFM/RLL support"  -relief raised
	pack $w.m -pady 10 -side top -padx 10
	wm title $w "ATA/ATAPI/MFM/RLL support" 

	bind $w <Escape> "catch {focus $oldFocus}; destroy $w; unregister_active 46; break"
	set nextscript "catch {focus $oldFocus}; menu47 .menu47 \"$title\""
	frame $w.f
	button $w.f.back -text "Main Menu" \
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 46"
	button $w.f.next -text "Next" -underline 0\
		-width 15 -command $nextscript
	bind all <Alt-n> $nextscript
	button $w.f.prev -text "Prev" -underline 0\
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 46; menu45 .menu45 \"$title\""
	bind $w <Alt-p> "catch {focus $oldFocus}; destroy $w; unregister_active 46; menu45 .menu45 \"$title\";break"
	pack $w.f.back $w.f.next $w.f.prev -side left -expand on
	pack $w.f -pady 10 -side bottom -anchor w -fill x
	frame $w.topline -relief ridge -borderwidth 2 -height 2
	pack $w.topline -side top -fill x

	frame $w.botline -relief ridge -borderwidth 2 -height 2
	pack $w.botline -side bottom -fill x

	frame $w.config
	pack $w.config -fill y -expand on

	scrollbar $w.config.vscroll -command "$w.config.canvas yview"
	pack $w.config.vscroll -side right -fill y

	canvas $w.config.canvas -height 1\
		-relief flat -borderwidth 0 -yscrollcommand "$w.config.vscroll set" \
		-width [expr [winfo screenwidth .] * 1 / 2] 
	frame $w.config.f
	bind $w <Key-Down> "$w.config.canvas yview scroll  1 unit;break;"
	bind $w <Key-Up> "$w.config.canvas yview scroll  -1 unit;break;"
	bind $w <Key-Next> "$w.config.canvas yview scroll  1 page;break;"
	bind $w <Key-Prior> "$w.config.canvas yview scroll  -1 page;break;"
	bind $w <Key-Home> "$w.config.canvas yview moveto 0;break;"
	bind $w <Key-End> "$w.config.canvas yview moveto 1 ;break;"
	pack $w.config.canvas -side right -fill y


	tristate $w.config.f 46 0 "ATA/ATAPI/MFM/RLL support" CONFIG_IDE
	submenu $w.config.f 46 1 "IDE, ATA and ATAPI Block devices" 47



	focus $w
	update_active
	global winx; global winy
	set winx [expr [winfo x .]+30]; set winy [expr [winfo y .]+30]
	if {[winfo exists $w]} then {wm geometry $w +$winx+$winy}
	update idletasks
	if {[winfo exists $w]} then  {$w.config.canvas create window 0 0 -anchor nw -window $w.config.f

	$w.config.canvas configure \
		-width [expr [winfo reqwidth $w.config.f] + 1]\
		-scrollregion "-1 -1 [expr [winfo reqwidth $w.config.f] + 1] \
			 [expr [winfo reqheight $w.config.f] + 1]"

	set winy [expr [winfo reqh $w] - [winfo reqh $w.config.canvas]]
	set scry [expr [winfo screenh $w] / 2]
	set maxy [expr [winfo screenh $w] * 3 / 4]
	set canvtotal [expr [winfo reqh $w.config.f] + 2]
	if [expr $winy + $canvtotal < $maxy] {
		$w.config.canvas configure -height $canvtotal
	} else {
		$w.config.canvas configure -height [expr $scry - $winy]
		}
	}
	update idletasks
	if {[winfo exists $w]} then {
	wm maxsize $w [winfo width $w] [winfo screenheight $w]
	wm minsize $w [winfo width $w] 100

	wm deiconify $w
}
}

proc update_menu46 {} {
	global CONFIG_IDE
	global CONFIG_MODULES

	if {($CONFIG_MODULES == 1)} then {configure_entry .menu46.config.f.x0 normal {m}} else {configure_entry .menu46.config.f.x0 disabled {m}}
	if {($CONFIG_IDE != 0)} then {configure_entry .menu46.config.f.x1 normal {m}} else {configure_entry .menu46.config.f.x1 disabled {m}}
}


proc update_define_menu46 {} {
	update_define_mainmenu
	global CONFIG_MODULES
	global CONFIG_IDE
	global CONFIG_BLK_DEV_IDE_MODES
	global CONFIG_BLK_DEV_HD

	if {($CONFIG_MODULES == 0)} then {if {($CONFIG_IDE == 2)} then {set CONFIG_IDE 1}}
	if {($CONFIG_IDE == 0)} then {	global CONSTANT_N
set CONFIG_BLK_DEV_IDE_MODES $CONSTANT_N }
	if {($CONFIG_IDE == 0)} then {	global CONSTANT_N
set CONFIG_BLK_DEV_HD $CONSTANT_N }
}


proc menu47 {w title} {
	set oldFocus [focus]
	catch {focus .menu46}
	catch {destroy $w; unregister_active 47}
	toplevel $w -class Dialog
	wm withdraw $w
	global active_menus
	set active_menus [lsort -integer [linsert $active_menus end 47]]
	message $w.m -width 400 -aspect 300 -text \
		"IDE, ATA and ATAPI Block devices"  -relief raised
	pack $w.m -pady 10 -side top -padx 10
	wm title $w "IDE, ATA and ATAPI Block devices" 

	bind $w <Escape> "catch {focus $oldFocus}; destroy $w; unregister_active 47; break"
	set nextscript "catch {focus $oldFocus}; destroy $w; unregister_active 47; catch {destroy .menu46}; unregister_active 46; menu48 .menu48 \"$title\""
	frame $w.f
	button $w.f.back -text "OK" \
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 47"
	button $w.f.next -text "Next" -underline 0\
		-width 15 -command $nextscript
	bind all <Alt-n> $nextscript
	button $w.f.prev -text "Prev" -underline 0\
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 47; menu46 .menu46 \"$title\""
	bind $w <Alt-p> "catch {focus $oldFocus}; destroy $w; unregister_active 47; menu46 .menu46 \"$title\";break"
	pack $w.f.back $w.f.next $w.f.prev -side left -expand on
	pack $w.f -pady 10 -side bottom -anchor w -fill x
	frame $w.topline -relief ridge -borderwidth 2 -height 2
	pack $w.topline -side top -fill x

	frame $w.botline -relief ridge -borderwidth 2 -height 2
	pack $w.botline -side bottom -fill x

	frame $w.config
	pack $w.config -fill y -expand on

	scrollbar $w.config.vscroll -command "$w.config.canvas yview"
	pack $w.config.vscroll -side right -fill y

	canvas $w.config.canvas -height 1\
		-relief flat -borderwidth 0 -yscrollcommand "$w.config.vscroll set" \
		-width [expr [winfo screenwidth .] * 1 / 2] 
	frame $w.config.f
	bind $w <Key-Down> "$w.config.canvas yview scroll  1 unit;break;"
	bind $w <Key-Up> "$w.config.canvas yview scroll  -1 unit;break;"
	bind $w <Key-Next> "$w.config.canvas yview scroll  1 page;break;"
	bind $w <Key-Prior> "$w.config.canvas yview scroll  -1 page;break;"
	bind $w <Key-Home> "$w.config.canvas yview moveto 0;break;"
	bind $w <Key-End> "$w.config.canvas yview moveto 1 ;break;"
	pack $w.config.canvas -side right -fill y


	dep_tristate $w.config.f 47 0 "Enhanced IDE/MFM/RLL disk/cdrom/tape/floppy support" CONFIG_BLK_DEV_IDE
	comment $w.config.f 47 1 "Please see Documentation/ide.txt for help/info on IDE drives"
	dep_bool $w.config.f 47 2 "  Use old disk-only driver on primary interface" CONFIG_BLK_DEV_HD_IDE
	dep_tristate $w.config.f 47 3 "  Include IDE/ATA-2 DISK support" CONFIG_BLK_DEV_IDEDISK
	dep_bool $w.config.f 47 4 "    Use multi-mode by default" CONFIG_IDEDISK_MULTI_MODE
	dep_bool $w.config.f 47 5 "    Auto-Geometry Resizing support" CONFIG_IDEDISK_STROKE
	dep_tristate $w.config.f 47 6 "  PCMCIA IDE support" CONFIG_BLK_DEV_IDECS
	dep_tristate $w.config.f 47 7 "  Include IDE/ATAPI CDROM support" CONFIG_BLK_DEV_IDECD
	dep_tristate $w.config.f 47 8 "  Include IDE/ATAPI TAPE support" CONFIG_BLK_DEV_IDETAPE
	dep_tristate $w.config.f 47 9 "  Include IDE/ATAPI FLOPPY support" CONFIG_BLK_DEV_IDEFLOPPY
	dep_tristate $w.config.f 47 10 "  SCSI emulation support" CONFIG_BLK_DEV_IDESCSI
	bool $w.config.f 47 11 "  IDE Taskfile Access" CONFIG_IDE_TASK_IOCTL
	comment $w.config.f 47 12 "IDE chipset support/bugfixes"
	dep_bool $w.config.f 47 13 "  CMD640 chipset bugfix/support" CONFIG_BLK_DEV_CMD640
	dep_bool $w.config.f 47 14 "    CMD640 enhanced support" CONFIG_BLK_DEV_CMD640_ENHANCED
	dep_bool $w.config.f 47 15 "  ISA-PNP EIDE support" CONFIG_BLK_DEV_ISAPNP
	bool $w.config.f 47 16 "  PCI IDE chipset support" CONFIG_BLK_DEV_IDEPCI
	dep_bool $w.config.f 47 17 "    Generic PCI IDE Chipset Support" CONFIG_BLK_DEV_GENERIC
	bool $w.config.f 47 18 "    Sharing PCI IDE interrupts support" CONFIG_IDEPCI_SHARE_IRQ
	bool $w.config.f 47 19 "    Generic PCI bus-master DMA support" CONFIG_BLK_DEV_IDEDMA_PCI
	bool $w.config.f 47 20 "    Boot off-board chipsets first support" CONFIG_BLK_DEV_OFFBOARD
	dep_bool $w.config.f 47 21 "      Force enable legacy 2.0.X HOSTS to use DMA" CONFIG_BLK_DEV_IDEDMA_FORCED
	dep_bool $w.config.f 47 22 "      Use PCI DMA by default when available" CONFIG_IDEDMA_PCI_AUTO
	dep_bool $w.config.f 47 23 "    Enable DMA only for disks " CONFIG_IDEDMA_ONLYDISK
	dep_bool $w.config.f 47 24 "      ATA Work(s) In Progress (EXPERIMENTAL)" CONFIG_IDEDMA_PCI_WIP
	dep_tristate $w.config.f 47 25 "    Pacific Digital ADMA-100 basic support" CONFIG_BLK_DEV_ADMA100
	dep_tristate $w.config.f 47 26 "    AEC62XX chipset support" CONFIG_BLK_DEV_AEC62XX
	dep_tristate $w.config.f 47 27 "    ALI M15x3 chipset support" CONFIG_BLK_DEV_ALI15X3
	dep_bool $w.config.f 47 28 "      ALI M15x3 WDC support (DANGEROUS)" CONFIG_WDC_ALI15X3
	dep_tristate $w.config.f 47 29 "    AMD and nVidia IDE support" CONFIG_BLK_DEV_AMD74XX
	dep_bool $w.config.f 47 30 "      AMD Viper ATA-66 Override" CONFIG_AMD74XX_OVERRIDE
	dep_tristate $w.config.f 47 31 "    CMD64{3|6|8|9} chipset support" CONFIG_BLK_DEV_CMD64X
	dep_tristate $w.config.f 47 32 "    Compaq Triflex IDE support" CONFIG_BLK_DEV_TRIFLEX
	dep_tristate $w.config.f 47 33 "    CY82C693 chipset support" CONFIG_BLK_DEV_CY82C693
	dep_tristate $w.config.f 47 34 "    Cyrix CS5530 MediaGX chipset support" CONFIG_BLK_DEV_CS5530
	dep_tristate $w.config.f 47 35 "    HPT34X chipset support" CONFIG_BLK_DEV_HPT34X
	dep_bool $w.config.f 47 36 "      HPT34X AUTODMA support (WIP)" CONFIG_HPT34X_AUTODMA
	dep_tristate $w.config.f 47 37 "    HPT36X/37X chipset support" CONFIG_BLK_DEV_HPT366
	dep_tristate $w.config.f 47 38 "    Intel PIIXn chipsets support" CONFIG_BLK_DEV_PIIX
	dep_tristate $w.config.f 47 39 "    NS87415 chipset support" CONFIG_BLK_DEV_NS87415
	dep_tristate $w.config.f 47 40 "    OPTi 82C621 chipset enhanced support (EXPERIMENTAL)" CONFIG_BLK_DEV_OPTI621
	dep_tristate $w.config.f 47 41 "    PROMISE PDC202{46|62|65|67} support" CONFIG_BLK_DEV_PDC202XX_OLD
	dep_bool $w.config.f 47 42 "      Special UDMA Feature" CONFIG_PDC202XX_BURST
	dep_tristate $w.config.f 47 43 "    PROMISE PDC202{68|69|70|71|75|76|77} support" CONFIG_BLK_DEV_PDC202XX_NEW
	bool $w.config.f 47 44 "    Special FastTrak Feature" CONFIG_PDC202XX_FORCE
	dep_tristate $w.config.f 47 45 "    RZ1000 chipset bugfix/support" CONFIG_BLK_DEV_RZ1000
	dep_tristate $w.config.f 47 46 "    SCx200 chipset support" CONFIG_BLK_DEV_SC1200
	dep_tristate $w.config.f 47 47 "    ServerWorks OSB4/CSB5/CSB6 chipsets support" CONFIG_BLK_DEV_SVWKS
	dep_tristate $w.config.f 47 48 "    Silicon Image chipset support" CONFIG_BLK_DEV_SIIMAGE
	dep_tristate $w.config.f 47 49 "    SiS5513 chipset support" CONFIG_BLK_DEV_SIS5513
	dep_tristate $w.config.f 47 50 "    SLC90E66 chipset support" CONFIG_BLK_DEV_SLC90E66
	dep_tristate $w.config.f 47 51 "    Tekram TRM290 chipset support" CONFIG_BLK_DEV_TRM290
	dep_tristate $w.config.f 47 52 "    VIA82CXXX chipset support" CONFIG_BLK_DEV_VIA82CXXX
	dep_tristate $w.config.f 47 53 "    Winbond SL82c105 support" CONFIG_BLK_DEV_SL82C105
	dep_bool $w.config.f 47 54 "    ICS IDE interface support" CONFIG_BLK_DEV_IDE_ICSIDE
	dep_bool $w.config.f 47 55 "      ICS DMA support" CONFIG_BLK_DEV_IDEDMA_ICS
	dep_bool $w.config.f 47 56 "        Use ICS DMA by default" CONFIG_IDEDMA_ICS_AUTO
	dep_bool $w.config.f 47 57 "    RapIDE interface support" CONFIG_BLK_DEV_IDE_RAPIDE
	dep_bool $w.config.f 47 58 "  uClinux IDE interface support" CONFIG_BLK_DEV_UCLINUX_IDE
	global tmpvar_18
	minimenu $w.config.f 47 59 "Type of MPC8xx IDE interface" tmpvar_18 CONFIG_IDE_8xx_PCCARD
	menu $w.config.f.x59.x.menu -tearoffcommand "menutitle \"Type of MPC8xx IDE interface\""
	$w.config.f.x59.x.menu add radiobutton -label "8xx_PCCARD" -variable tmpvar_18 -value "8xx_PCCARD" -command "update_active"
	$w.config.f.x59.x.menu add radiobutton -label "8xx_DIRECT" -variable tmpvar_18 -value "8xx_DIRECT" -command "update_active"
	$w.config.f.x59.x.menu add radiobutton -label "EXT_DIRECT" -variable tmpvar_18 -value "EXT_DIRECT" -command "update_active"
	menusplit $w $w.config.f.x59.x.menu 3
	dep_bool $w.config.f 47 60 "  Other IDE chipset support" CONFIG_IDE_CHIPSETS
	comment $w.config.f 47 61 "Note: most of these also require special kernel boot parameters"
	bool $w.config.f 47 62 "    Generic 4 drives/port support" CONFIG_BLK_DEV_4DRIVES
	dep_tristate $w.config.f 47 63 "    ALI M14xx support" CONFIG_BLK_DEV_ALI14XX
	dep_tristate $w.config.f 47 64 "    DTC-2278 support" CONFIG_BLK_DEV_DTC2278
	dep_tristate $w.config.f 47 65 "    Holtek HT6560B support" CONFIG_BLK_DEV_HT6560B
	dep_bool $w.config.f 47 66 "    OCIDEC-3 support" CONFIG_BLK_DEV_OCIDEC
	dep_tristate $w.config.f 47 67 "    PROMISE DC4030 support (EXPERIMENTAL)" CONFIG_BLK_DEV_PDC4030
	dep_tristate $w.config.f 47 68 "    QDI QD65xx support" CONFIG_BLK_DEV_QD65XX
	dep_tristate $w.config.f 47 69 "    UMC-8672 support" CONFIG_BLK_DEV_UMC8672
	bool $w.config.f 47 70 "Old hard disk (MFM/RLL/IDE) driver" CONFIG_BLK_DEV_HD_ONLY
	bool $w.config.f 47 71 "  IGNORE word93 Validation BITS" CONFIG_IDEDMA_IVB
	dep_tristate $w.config.f 47 72 "Support for IDE Raid controllers (EXPERIMENTAL)" CONFIG_BLK_DEV_ATARAID
	dep_tristate $w.config.f 47 73 "   Support Promise software RAID (Fasttrak(tm)) (EXPERIMENTAL)" CONFIG_BLK_DEV_ATARAID_PDC
	dep_tristate $w.config.f 47 74 "   Highpoint 370 software RAID (EXPERIMENTAL)" CONFIG_BLK_DEV_ATARAID_HPT
	dep_tristate $w.config.f 47 75 "   Silicon Image Medley software RAID (EXPERIMENTAL)" CONFIG_BLK_DEV_ATARAID_SII



	focus $w
	update_active
	global winx; global winy
	if {[winfo exists .menu46] == 0} then {menu46 .menu46 "ATA/ATAPI/MFM/RLL support"}
	set winx [expr [winfo x .menu46]+30]; set winy [expr [winfo y .menu46]+30]
	if {[winfo exists $w]} then {wm geometry $w +$winx+$winy}
	update idletasks
	if {[winfo exists $w]} then  {$w.config.canvas create window 0 0 -anchor nw -window $w.config.f

	$w.config.canvas configure \
		-width [expr [winfo reqwidth $w.config.f] + 1]\
		-scrollregion "-1 -1 [expr [winfo reqwidth $w.config.f] + 1] \
			 [expr [winfo reqheight $w.config.f] + 1]"

	set winy [expr [winfo reqh $w] - [winfo reqh $w.config.canvas]]
	set scry [expr [winfo screenh $w] / 2]
	set maxy [expr [winfo screenh $w] * 3 / 4]
	set canvtotal [expr [winfo reqh $w.config.f] + 2]
	if [expr $winy + $canvtotal < $maxy] {
		$w.config.canvas configure -height $canvtotal
	} else {
		$w.config.canvas configure -height [expr $scry - $winy]
		}
	}
	update idletasks
	if {[winfo exists $w]} then {
	wm maxsize $w [winfo width $w] [winfo screenheight $w]
	wm minsize $w [winfo width $w] 100

	wm deiconify $w
}
}

proc update_menu47 {} {
	global CONFIG_MODULES
	global CONFIG_IDE
	global CONFIG_BLK_DEV_IDE
	if {($CONFIG_IDE != 0) && ($CONFIG_IDE == 1 || $CONFIG_IDE == 2 || $CONFIG_IDE == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IDE]];set CONFIG_BLK_DEV_IDE [sync_tristate $CONFIG_BLK_DEV_IDE $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu47.config.f.x0 disabled {y}} else {configure_entry .menu47.config.f.x0 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu47.config.f.x0 disabled {m}} else {configure_entry .menu47.config.f.x0 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu47.config.f.x0 normal {m}} else {configure_entry .menu47.config.f.x0 disabled {m}}; configure_entry .menu47.config.f.x0 normal {n l}} else {configure_entry .menu47.config.f.x0 disabled {y n m l}}
	if {($CONFIG_IDE != 0)} then {configure_entry .menu47.config.f.x1 normal {m}} else {configure_entry .menu47.config.f.x1 disabled {m}}
	global CONFIG_X86
	global CONFIG_BLK_DEV_HD_IDE
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_X86 == 1 || $CONFIG_X86 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_X86]];set CONFIG_BLK_DEV_HD_IDE [sync_bool $CONFIG_BLK_DEV_HD_IDE $tmpvar_dep 0];if {$tmpvar_dep != 1} then {configure_entry .menu47.config.f.x2 disabled {y};} else {configure_entry .menu47.config.f.x2 normal {y};}; configure_entry .menu47.config.f.x2 normal {n l}} else {configure_entry .menu47.config.f.x2 disabled {y n l}}
	global CONFIG_BLK_DEV_IDEDISK
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_BLK_DEV_IDE == 1 || $CONFIG_BLK_DEV_IDE == 2 || $CONFIG_BLK_DEV_IDE == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BLK_DEV_IDE]];set CONFIG_BLK_DEV_IDEDISK [sync_tristate $CONFIG_BLK_DEV_IDEDISK $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu47.config.f.x3 disabled {y}} else {configure_entry .menu47.config.f.x3 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu47.config.f.x3 disabled {m}} else {configure_entry .menu47.config.f.x3 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu47.config.f.x3 normal {m}} else {configure_entry .menu47.config.f.x3 disabled {m}}; configure_entry .menu47.config.f.x3 normal {n l}} else {configure_entry .menu47.config.f.x3 disabled {y n m l}}
	global CONFIG_IDEDISK_MULTI_MODE
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_BLK_DEV_IDEDISK == 1 || $CONFIG_BLK_DEV_IDEDISK == 2 || $CONFIG_BLK_DEV_IDEDISK == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BLK_DEV_IDEDISK]];set CONFIG_IDEDISK_MULTI_MODE [sync_bool $CONFIG_IDEDISK_MULTI_MODE $tmpvar_dep 1];if {$tmpvar_dep != 1 && $tmpvar_dep != 2} then {configure_entry .menu47.config.f.x4 disabled {y};} else {configure_entry .menu47.config.f.x4 normal {y};}; configure_entry .menu47.config.f.x4 normal {n l}} else {configure_entry .menu47.config.f.x4 disabled {y n l}}
	global CONFIG_IDEDISK_STROKE
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_BLK_DEV_IDEDISK == 1 || $CONFIG_BLK_DEV_IDEDISK == 2 || $CONFIG_BLK_DEV_IDEDISK == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BLK_DEV_IDEDISK]];set CONFIG_IDEDISK_STROKE [sync_bool $CONFIG_IDEDISK_STROKE $tmpvar_dep 1];if {$tmpvar_dep != 1 && $tmpvar_dep != 2} then {configure_entry .menu47.config.f.x5 disabled {y};} else {configure_entry .menu47.config.f.x5 normal {y};}; configure_entry .menu47.config.f.x5 normal {n l}} else {configure_entry .menu47.config.f.x5 disabled {y n l}}
	global CONFIG_PCMCIA
	global CONFIG_BLK_DEV_IDECS
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_BLK_DEV_IDE == 1 || $CONFIG_BLK_DEV_IDE == 2 || $CONFIG_BLK_DEV_IDE == 4) && ($CONFIG_PCMCIA == 1 || $CONFIG_PCMCIA == 2 || $CONFIG_PCMCIA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BLK_DEV_IDE $CONFIG_PCMCIA]];set CONFIG_BLK_DEV_IDECS [sync_tristate $CONFIG_BLK_DEV_IDECS $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu47.config.f.x6 disabled {y}} else {configure_entry .menu47.config.f.x6 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu47.config.f.x6 disabled {m}} else {configure_entry .menu47.config.f.x6 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu47.config.f.x6 normal {m}} else {configure_entry .menu47.config.f.x6 disabled {m}}; configure_entry .menu47.config.f.x6 normal {n l}} else {configure_entry .menu47.config.f.x6 disabled {y n m l}}
	global CONFIG_BLK_DEV_IDECD
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_BLK_DEV_IDE == 1 || $CONFIG_BLK_DEV_IDE == 2 || $CONFIG_BLK_DEV_IDE == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BLK_DEV_IDE]];set CONFIG_BLK_DEV_IDECD [sync_tristate $CONFIG_BLK_DEV_IDECD $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu47.config.f.x7 disabled {y}} else {configure_entry .menu47.config.f.x7 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu47.config.f.x7 disabled {m}} else {configure_entry .menu47.config.f.x7 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu47.config.f.x7 normal {m}} else {configure_entry .menu47.config.f.x7 disabled {m}}; configure_entry .menu47.config.f.x7 normal {n l}} else {configure_entry .menu47.config.f.x7 disabled {y n m l}}
	global CONFIG_BLK_DEV_IDETAPE
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_BLK_DEV_IDE == 1 || $CONFIG_BLK_DEV_IDE == 2 || $CONFIG_BLK_DEV_IDE == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BLK_DEV_IDE]];set CONFIG_BLK_DEV_IDETAPE [sync_tristate $CONFIG_BLK_DEV_IDETAPE $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu47.config.f.x8 disabled {y}} else {configure_entry .menu47.config.f.x8 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu47.config.f.x8 disabled {m}} else {configure_entry .menu47.config.f.x8 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu47.config.f.x8 normal {m}} else {configure_entry .menu47.config.f.x8 disabled {m}}; configure_entry .menu47.config.f.x8 normal {n l}} else {configure_entry .menu47.config.f.x8 disabled {y n m l}}
	global CONFIG_BLK_DEV_IDEFLOPPY
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_BLK_DEV_IDE == 1 || $CONFIG_BLK_DEV_IDE == 2 || $CONFIG_BLK_DEV_IDE == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BLK_DEV_IDE]];set CONFIG_BLK_DEV_IDEFLOPPY [sync_tristate $CONFIG_BLK_DEV_IDEFLOPPY $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu47.config.f.x9 disabled {y}} else {configure_entry .menu47.config.f.x9 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu47.config.f.x9 disabled {m}} else {configure_entry .menu47.config.f.x9 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu47.config.f.x9 normal {m}} else {configure_entry .menu47.config.f.x9 disabled {m}}; configure_entry .menu47.config.f.x9 normal {n l}} else {configure_entry .menu47.config.f.x9 disabled {y n m l}}
	global CONFIG_SCSI
	global CONFIG_BLK_DEV_IDESCSI
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_BLK_DEV_IDE == 1 || $CONFIG_BLK_DEV_IDE == 2 || $CONFIG_BLK_DEV_IDE == 4) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BLK_DEV_IDE $CONFIG_SCSI]];set CONFIG_BLK_DEV_IDESCSI [sync_tristate $CONFIG_BLK_DEV_IDESCSI $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu47.config.f.x10 disabled {y}} else {configure_entry .menu47.config.f.x10 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu47.config.f.x10 disabled {m}} else {configure_entry .menu47.config.f.x10 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu47.config.f.x10 normal {m}} else {configure_entry .menu47.config.f.x10 disabled {m}}; configure_entry .menu47.config.f.x10 normal {n l}} else {configure_entry .menu47.config.f.x10 disabled {y n m l}}
	global CONFIG_IDE_TASK_IOCTL
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0)} then {
	configure_entry .menu47.config.f.x11 normal {n l y}} else {configure_entry .menu47.config.f.x11 disabled {y n l}}
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0)} then {configure_entry .menu47.config.f.x12 normal {m}} else {configure_entry .menu47.config.f.x12 disabled {m}}
	global CONFIG_BLK_DEV_CMD640
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_X86 == 1 || $CONFIG_X86 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_X86]];set CONFIG_BLK_DEV_CMD640 [sync_bool $CONFIG_BLK_DEV_CMD640 $tmpvar_dep 0];if {$tmpvar_dep != 1} then {configure_entry .menu47.config.f.x13 disabled {y};} else {configure_entry .menu47.config.f.x13 normal {y};}; configure_entry .menu47.config.f.x13 normal {n l}} else {configure_entry .menu47.config.f.x13 disabled {y n l}}
	global CONFIG_BLK_DEV_CMD640_ENHANCED
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_BLK_DEV_CMD640 == 1 || $CONFIG_BLK_DEV_CMD640 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BLK_DEV_CMD640]];set CONFIG_BLK_DEV_CMD640_ENHANCED [sync_bool $CONFIG_BLK_DEV_CMD640_ENHANCED $tmpvar_dep 0];if {$tmpvar_dep != 1} then {configure_entry .menu47.config.f.x14 disabled {y};} else {configure_entry .menu47.config.f.x14 normal {y};}; configure_entry .menu47.config.f.x14 normal {n l}} else {configure_entry .menu47.config.f.x14 disabled {y n l}}
	global CONFIG_ISAPNP
	global CONFIG_BLK_DEV_ISAPNP
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_ISAPNP == 1 || $CONFIG_ISAPNP == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ISAPNP]];set CONFIG_BLK_DEV_ISAPNP [sync_bool $CONFIG_BLK_DEV_ISAPNP $tmpvar_dep 0];if {$tmpvar_dep != 1} then {configure_entry .menu47.config.f.x15 disabled {y};} else {configure_entry .menu47.config.f.x15 normal {y};}; configure_entry .menu47.config.f.x15 normal {n l}} else {configure_entry .menu47.config.f.x15 disabled {y n l}}
	global CONFIG_PCI
	global CONFIG_BLK_DEV_IDEPCI
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_PCI == 1)} then {
	configure_entry .menu47.config.f.x16 normal {n l y}} else {configure_entry .menu47.config.f.x16 disabled {y n l}}
	global CONFIG_BLK_DEV_GENERIC
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_PCI == 1) && ($CONFIG_BLK_DEV_IDEPCI == 1) && ($CONFIG_BLK_DEV_IDEPCI == 1 || $CONFIG_BLK_DEV_IDEPCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BLK_DEV_IDEPCI]];set CONFIG_BLK_DEV_GENERIC [sync_bool $CONFIG_BLK_DEV_GENERIC $tmpvar_dep 0];if {$tmpvar_dep != 1} then {configure_entry .menu47.config.f.x17 disabled {y};} else {configure_entry .menu47.config.f.x17 normal {y};}; configure_entry .menu47.config.f.x17 normal {n l}} else {configure_entry .menu47.config.f.x17 disabled {y n l}}
	global CONFIG_IDEPCI_SHARE_IRQ
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_PCI == 1) && ($CONFIG_BLK_DEV_IDEPCI == 1)} then {
	configure_entry .menu47.config.f.x18 normal {n l y}} else {configure_entry .menu47.config.f.x18 disabled {y n l}}
	global CONFIG_BLK_DEV_IDEDMA_PCI
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_PCI == 1) && ($CONFIG_BLK_DEV_IDEPCI == 1)} then {
	configure_entry .menu47.config.f.x19 normal {n l y}} else {configure_entry .menu47.config.f.x19 disabled {y n l}}
	global CONFIG_BLK_DEV_OFFBOARD
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_PCI == 1) && ($CONFIG_BLK_DEV_IDEPCI == 1)} then {
	configure_entry .menu47.config.f.x20 normal {n l y}} else {configure_entry .menu47.config.f.x20 disabled {y n l}}
	global CONFIG_BLK_DEV_IDEDMA_FORCED
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_PCI == 1) && ($CONFIG_BLK_DEV_IDEPCI == 1) && ($CONFIG_BLK_DEV_IDEDMA_PCI == 1 || $CONFIG_BLK_DEV_IDEDMA_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BLK_DEV_IDEDMA_PCI]];set CONFIG_BLK_DEV_IDEDMA_FORCED [sync_bool $CONFIG_BLK_DEV_IDEDMA_FORCED $tmpvar_dep 0];if {$tmpvar_dep != 1} then {configure_entry .menu47.config.f.x21 disabled {y};} else {configure_entry .menu47.config.f.x21 normal {y};}; configure_entry .menu47.config.f.x21 normal {n l}} else {configure_entry .menu47.config.f.x21 disabled {y n l}}
	global CONFIG_IDEDMA_PCI_AUTO
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_PCI == 1) && ($CONFIG_BLK_DEV_IDEPCI == 1) && ($CONFIG_BLK_DEV_IDEDMA_PCI == 1 || $CONFIG_BLK_DEV_IDEDMA_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BLK_DEV_IDEDMA_PCI]];set CONFIG_IDEDMA_PCI_AUTO [sync_bool $CONFIG_IDEDMA_PCI_AUTO $tmpvar_dep 0];if {$tmpvar_dep != 1} then {configure_entry .menu47.config.f.x22 disabled {y};} else {configure_entry .menu47.config.f.x22 normal {y};}; configure_entry .menu47.config.f.x22 normal {n l}} else {configure_entry .menu47.config.f.x22 disabled {y n l}}
	global CONFIG_IDEDMA_ONLYDISK
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_PCI == 1) && ($CONFIG_BLK_DEV_IDEPCI == 1) && ($CONFIG_IDEDMA_PCI_AUTO == 1 || $CONFIG_IDEDMA_PCI_AUTO == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IDEDMA_PCI_AUTO]];set CONFIG_IDEDMA_ONLYDISK [sync_bool $CONFIG_IDEDMA_ONLYDISK $tmpvar_dep 0];if {$tmpvar_dep != 1} then {configure_entry .menu47.config.f.x23 disabled {y};} else {configure_entry .menu47.config.f.x23 normal {y};}; configure_entry .menu47.config.f.x23 normal {n l}} else {configure_entry .menu47.config.f.x23 disabled {y n l}}
	global CONFIG_EXPERIMENTAL
	global CONFIG_IDEDMA_PCI_WIP
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_PCI == 1) && ($CONFIG_BLK_DEV_IDEPCI == 1) && ($CONFIG_BLK_DEV_IDEDMA_PCI == 1 || $CONFIG_BLK_DEV_IDEDMA_PCI == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BLK_DEV_IDEDMA_PCI $CONFIG_EXPERIMENTAL]];set CONFIG_IDEDMA_PCI_WIP [sync_bool $CONFIG_IDEDMA_PCI_WIP $tmpvar_dep 0];if {$tmpvar_dep != 1} then {configure_entry .menu47.config.f.x24 disabled {y};} else {configure_entry .menu47.config.f.x24 normal {y};}; configure_entry .menu47.config.f.x24 normal {n l}} else {configure_entry .menu47.config.f.x24 disabled {y n l}}
	global CONFIG_BLK_DEV_ADMA100
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_PCI == 1) && ($CONFIG_BLK_DEV_IDEPCI == 1) && ($CONFIG_BLK_DEV_IDEDMA_PCI == 1 || $CONFIG_BLK_DEV_IDEDMA_PCI == 2 || $CONFIG_BLK_DEV_IDEDMA_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BLK_DEV_IDEDMA_PCI]];set CONFIG_BLK_DEV_ADMA100 [sync_tristate $CONFIG_BLK_DEV_ADMA100 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu47.config.f.x25 disabled {y}} else {configure_entry .menu47.config.f.x25 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu47.config.f.x25 disabled {m}} else {configure_entry .menu47.config.f.x25 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu47.config.f.x25 normal {m}} else {configure_entry .menu47.config.f.x25 disabled {m}}; configure_entry .menu47.config.f.x25 normal {n l}} else {configure_entry .menu47.config.f.x25 disabled {y n m l}}
	global CONFIG_BLK_DEV_AEC62XX
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_PCI == 1) && ($CONFIG_BLK_DEV_IDEPCI == 1) && ($CONFIG_BLK_DEV_IDEDMA_PCI == 1 || $CONFIG_BLK_DEV_IDEDMA_PCI == 2 || $CONFIG_BLK_DEV_IDEDMA_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BLK_DEV_IDEDMA_PCI]];set CONFIG_BLK_DEV_AEC62XX [sync_tristate $CONFIG_BLK_DEV_AEC62XX $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu47.config.f.x26 disabled {y}} else {configure_entry .menu47.config.f.x26 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu47.config.f.x26 disabled {m}} else {configure_entry .menu47.config.f.x26 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu47.config.f.x26 normal {m}} else {configure_entry .menu47.config.f.x26 disabled {m}}; configure_entry .menu47.config.f.x26 normal {n l}} else {configure_entry .menu47.config.f.x26 disabled {y n m l}}
	global CONFIG_BLK_DEV_ALI15X3
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_PCI == 1) && ($CONFIG_BLK_DEV_IDEPCI == 1) && ($CONFIG_BLK_DEV_IDEDMA_PCI == 1 || $CONFIG_BLK_DEV_IDEDMA_PCI == 2 || $CONFIG_BLK_DEV_IDEDMA_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BLK_DEV_IDEDMA_PCI]];set CONFIG_BLK_DEV_ALI15X3 [sync_tristate $CONFIG_BLK_DEV_ALI15X3 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu47.config.f.x27 disabled {y}} else {configure_entry .menu47.config.f.x27 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu47.config.f.x27 disabled {m}} else {configure_entry .menu47.config.f.x27 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu47.config.f.x27 normal {m}} else {configure_entry .menu47.config.f.x27 disabled {m}}; configure_entry .menu47.config.f.x27 normal {n l}} else {configure_entry .menu47.config.f.x27 disabled {y n m l}}
	global CONFIG_WDC_ALI15X3
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_PCI == 1) && ($CONFIG_BLK_DEV_IDEPCI == 1) && ($CONFIG_BLK_DEV_ALI15X3 == 1 || $CONFIG_BLK_DEV_ALI15X3 == 2 || $CONFIG_BLK_DEV_ALI15X3 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BLK_DEV_ALI15X3]];set CONFIG_WDC_ALI15X3 [sync_bool $CONFIG_WDC_ALI15X3 $tmpvar_dep 1];if {$tmpvar_dep != 1 && $tmpvar_dep != 2} then {configure_entry .menu47.config.f.x28 disabled {y};} else {configure_entry .menu47.config.f.x28 normal {y};}; configure_entry .menu47.config.f.x28 normal {n l}} else {configure_entry .menu47.config.f.x28 disabled {y n l}}
	global CONFIG_BLK_DEV_AMD74XX
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_PCI == 1) && ($CONFIG_BLK_DEV_IDEPCI == 1) && ($CONFIG_BLK_DEV_IDEDMA_PCI == 1 || $CONFIG_BLK_DEV_IDEDMA_PCI == 2 || $CONFIG_BLK_DEV_IDEDMA_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BLK_DEV_IDEDMA_PCI]];set CONFIG_BLK_DEV_AMD74XX [sync_tristate $CONFIG_BLK_DEV_AMD74XX $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu47.config.f.x29 disabled {y}} else {configure_entry .menu47.config.f.x29 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu47.config.f.x29 disabled {m}} else {configure_entry .menu47.config.f.x29 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu47.config.f.x29 normal {m}} else {configure_entry .menu47.config.f.x29 disabled {m}}; configure_entry .menu47.config.f.x29 normal {n l}} else {configure_entry .menu47.config.f.x29 disabled {y n m l}}
	global CONFIG_AMD74XX_OVERRIDE
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_PCI == 1) && ($CONFIG_BLK_DEV_IDEPCI == 1) && ($CONFIG_BLK_DEV_AMD74XX == 1 || $CONFIG_BLK_DEV_AMD74XX == 2 || $CONFIG_BLK_DEV_AMD74XX == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BLK_DEV_AMD74XX]];set CONFIG_AMD74XX_OVERRIDE [sync_bool $CONFIG_AMD74XX_OVERRIDE $tmpvar_dep 1];if {$tmpvar_dep != 1 && $tmpvar_dep != 2} then {configure_entry .menu47.config.f.x30 disabled {y};} else {configure_entry .menu47.config.f.x30 normal {y};}; configure_entry .menu47.config.f.x30 normal {n l}} else {configure_entry .menu47.config.f.x30 disabled {y n l}}
	global CONFIG_BLK_DEV_CMD64X
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_PCI == 1) && ($CONFIG_BLK_DEV_IDEPCI == 1) && ($CONFIG_BLK_DEV_IDEDMA_PCI == 1 || $CONFIG_BLK_DEV_IDEDMA_PCI == 2 || $CONFIG_BLK_DEV_IDEDMA_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BLK_DEV_IDEDMA_PCI]];set CONFIG_BLK_DEV_CMD64X [sync_tristate $CONFIG_BLK_DEV_CMD64X $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu47.config.f.x31 disabled {y}} else {configure_entry .menu47.config.f.x31 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu47.config.f.x31 disabled {m}} else {configure_entry .menu47.config.f.x31 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu47.config.f.x31 normal {m}} else {configure_entry .menu47.config.f.x31 disabled {m}}; configure_entry .menu47.config.f.x31 normal {n l}} else {configure_entry .menu47.config.f.x31 disabled {y n m l}}
	global CONFIG_BLK_DEV_TRIFLEX
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_PCI == 1) && ($CONFIG_BLK_DEV_IDEPCI == 1) && ($CONFIG_BLK_DEV_IDEDMA_PCI == 1 || $CONFIG_BLK_DEV_IDEDMA_PCI == 2 || $CONFIG_BLK_DEV_IDEDMA_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BLK_DEV_IDEDMA_PCI]];set CONFIG_BLK_DEV_TRIFLEX [sync_tristate $CONFIG_BLK_DEV_TRIFLEX $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu47.config.f.x32 disabled {y}} else {configure_entry .menu47.config.f.x32 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu47.config.f.x32 disabled {m}} else {configure_entry .menu47.config.f.x32 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu47.config.f.x32 normal {m}} else {configure_entry .menu47.config.f.x32 disabled {m}}; configure_entry .menu47.config.f.x32 normal {n l}} else {configure_entry .menu47.config.f.x32 disabled {y n m l}}
	global CONFIG_BLK_DEV_CY82C693
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_PCI == 1) && ($CONFIG_BLK_DEV_IDEPCI == 1) && ($CONFIG_BLK_DEV_IDEDMA_PCI == 1 || $CONFIG_BLK_DEV_IDEDMA_PCI == 2 || $CONFIG_BLK_DEV_IDEDMA_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BLK_DEV_IDEDMA_PCI]];set CONFIG_BLK_DEV_CY82C693 [sync_tristate $CONFIG_BLK_DEV_CY82C693 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu47.config.f.x33 disabled {y}} else {configure_entry .menu47.config.f.x33 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu47.config.f.x33 disabled {m}} else {configure_entry .menu47.config.f.x33 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu47.config.f.x33 normal {m}} else {configure_entry .menu47.config.f.x33 disabled {m}}; configure_entry .menu47.config.f.x33 normal {n l}} else {configure_entry .menu47.config.f.x33 disabled {y n m l}}
	global CONFIG_BLK_DEV_CS5530
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_PCI == 1) && ($CONFIG_BLK_DEV_IDEPCI == 1) && ($CONFIG_BLK_DEV_IDEDMA_PCI == 1 || $CONFIG_BLK_DEV_IDEDMA_PCI == 2 || $CONFIG_BLK_DEV_IDEDMA_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BLK_DEV_IDEDMA_PCI]];set CONFIG_BLK_DEV_CS5530 [sync_tristate $CONFIG_BLK_DEV_CS5530 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu47.config.f.x34 disabled {y}} else {configure_entry .menu47.config.f.x34 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu47.config.f.x34 disabled {m}} else {configure_entry .menu47.config.f.x34 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu47.config.f.x34 normal {m}} else {configure_entry .menu47.config.f.x34 disabled {m}}; configure_entry .menu47.config.f.x34 normal {n l}} else {configure_entry .menu47.config.f.x34 disabled {y n m l}}
	global CONFIG_BLK_DEV_HPT34X
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_PCI == 1) && ($CONFIG_BLK_DEV_IDEPCI == 1) && ($CONFIG_BLK_DEV_IDEDMA_PCI == 1 || $CONFIG_BLK_DEV_IDEDMA_PCI == 2 || $CONFIG_BLK_DEV_IDEDMA_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BLK_DEV_IDEDMA_PCI]];set CONFIG_BLK_DEV_HPT34X [sync_tristate $CONFIG_BLK_DEV_HPT34X $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu47.config.f.x35 disabled {y}} else {configure_entry .menu47.config.f.x35 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu47.config.f.x35 disabled {m}} else {configure_entry .menu47.config.f.x35 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu47.config.f.x35 normal {m}} else {configure_entry .menu47.config.f.x35 disabled {m}}; configure_entry .menu47.config.f.x35 normal {n l}} else {configure_entry .menu47.config.f.x35 disabled {y n m l}}
	global CONFIG_HPT34X_AUTODMA
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_PCI == 1) && ($CONFIG_BLK_DEV_IDEPCI == 1) && ($CONFIG_BLK_DEV_HPT34X == 1 || $CONFIG_BLK_DEV_HPT34X == 2 || $CONFIG_BLK_DEV_HPT34X == 4) && ($CONFIG_IDEDMA_PCI_WIP == 1 || $CONFIG_IDEDMA_PCI_WIP == 2 || $CONFIG_IDEDMA_PCI_WIP == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BLK_DEV_HPT34X $CONFIG_IDEDMA_PCI_WIP]];set CONFIG_HPT34X_AUTODMA [sync_bool $CONFIG_HPT34X_AUTODMA $tmpvar_dep 1];if {$tmpvar_dep != 1 && $tmpvar_dep != 2} then {configure_entry .menu47.config.f.x36 disabled {y};} else {configure_entry .menu47.config.f.x36 normal {y};}; configure_entry .menu47.config.f.x36 normal {n l}} else {configure_entry .menu47.config.f.x36 disabled {y n l}}
	global CONFIG_BLK_DEV_HPT366
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_PCI == 1) && ($CONFIG_BLK_DEV_IDEPCI == 1) && ($CONFIG_BLK_DEV_IDEDMA_PCI == 1 || $CONFIG_BLK_DEV_IDEDMA_PCI == 2 || $CONFIG_BLK_DEV_IDEDMA_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BLK_DEV_IDEDMA_PCI]];set CONFIG_BLK_DEV_HPT366 [sync_tristate $CONFIG_BLK_DEV_HPT366 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu47.config.f.x37 disabled {y}} else {configure_entry .menu47.config.f.x37 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu47.config.f.x37 disabled {m}} else {configure_entry .menu47.config.f.x37 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu47.config.f.x37 normal {m}} else {configure_entry .menu47.config.f.x37 disabled {m}}; configure_entry .menu47.config.f.x37 normal {n l}} else {configure_entry .menu47.config.f.x37 disabled {y n m l}}
	global CONFIG_BLK_DEV_PIIX
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_PCI == 1) && ($CONFIG_BLK_DEV_IDEPCI == 1) && ($CONFIG_BLK_DEV_IDEDMA_PCI == 1 || $CONFIG_BLK_DEV_IDEDMA_PCI == 2 || $CONFIG_BLK_DEV_IDEDMA_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BLK_DEV_IDEDMA_PCI]];set CONFIG_BLK_DEV_PIIX [sync_tristate $CONFIG_BLK_DEV_PIIX $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu47.config.f.x38 disabled {y}} else {configure_entry .menu47.config.f.x38 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu47.config.f.x38 disabled {m}} else {configure_entry .menu47.config.f.x38 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu47.config.f.x38 normal {m}} else {configure_entry .menu47.config.f.x38 disabled {m}}; configure_entry .menu47.config.f.x38 normal {n l}} else {configure_entry .menu47.config.f.x38 disabled {y n m l}}
	global CONFIG_BLK_DEV_NS87415
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_PCI == 1) && ($CONFIG_BLK_DEV_IDEPCI == 1) && ($CONFIG_BLK_DEV_IDEDMA_PCI == 1 || $CONFIG_BLK_DEV_IDEDMA_PCI == 2 || $CONFIG_BLK_DEV_IDEDMA_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BLK_DEV_IDEDMA_PCI]];set CONFIG_BLK_DEV_NS87415 [sync_tristate $CONFIG_BLK_DEV_NS87415 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu47.config.f.x39 disabled {y}} else {configure_entry .menu47.config.f.x39 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu47.config.f.x39 disabled {m}} else {configure_entry .menu47.config.f.x39 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu47.config.f.x39 normal {m}} else {configure_entry .menu47.config.f.x39 disabled {m}}; configure_entry .menu47.config.f.x39 normal {n l}} else {configure_entry .menu47.config.f.x39 disabled {y n m l}}
	global CONFIG_BLK_DEV_OPTI621
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_PCI == 1) && ($CONFIG_BLK_DEV_IDEPCI == 1) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_EXPERIMENTAL]];set CONFIG_BLK_DEV_OPTI621 [sync_tristate $CONFIG_BLK_DEV_OPTI621 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu47.config.f.x40 disabled {y}} else {configure_entry .menu47.config.f.x40 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu47.config.f.x40 disabled {m}} else {configure_entry .menu47.config.f.x40 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu47.config.f.x40 normal {m}} else {configure_entry .menu47.config.f.x40 disabled {m}}; configure_entry .menu47.config.f.x40 normal {n l}} else {configure_entry .menu47.config.f.x40 disabled {y n m l}}
	global CONFIG_BLK_DEV_PDC202XX_OLD
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_PCI == 1) && ($CONFIG_BLK_DEV_IDEPCI == 1) && ($CONFIG_BLK_DEV_IDEDMA_PCI == 1 || $CONFIG_BLK_DEV_IDEDMA_PCI == 2 || $CONFIG_BLK_DEV_IDEDMA_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BLK_DEV_IDEDMA_PCI]];set CONFIG_BLK_DEV_PDC202XX_OLD [sync_tristate $CONFIG_BLK_DEV_PDC202XX_OLD $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu47.config.f.x41 disabled {y}} else {configure_entry .menu47.config.f.x41 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu47.config.f.x41 disabled {m}} else {configure_entry .menu47.config.f.x41 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu47.config.f.x41 normal {m}} else {configure_entry .menu47.config.f.x41 disabled {m}}; configure_entry .menu47.config.f.x41 normal {n l}} else {configure_entry .menu47.config.f.x41 disabled {y n m l}}
	global CONFIG_PDC202XX_BURST
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_PCI == 1) && ($CONFIG_BLK_DEV_IDEPCI == 1) && ($CONFIG_BLK_DEV_PDC202XX_OLD == 1 || $CONFIG_BLK_DEV_PDC202XX_OLD == 2 || $CONFIG_BLK_DEV_PDC202XX_OLD == 4) && ($CONFIG_BLK_DEV_IDEDMA_PCI == 1 || $CONFIG_BLK_DEV_IDEDMA_PCI == 2 || $CONFIG_BLK_DEV_IDEDMA_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BLK_DEV_PDC202XX_OLD $CONFIG_BLK_DEV_IDEDMA_PCI]];set CONFIG_PDC202XX_BURST [sync_bool $CONFIG_PDC202XX_BURST $tmpvar_dep 1];if {$tmpvar_dep != 1 && $tmpvar_dep != 2} then {configure_entry .menu47.config.f.x42 disabled {y};} else {configure_entry .menu47.config.f.x42 normal {y};}; configure_entry .menu47.config.f.x42 normal {n l}} else {configure_entry .menu47.config.f.x42 disabled {y n l}}
	global CONFIG_BLK_DEV_PDC202XX_NEW
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_PCI == 1) && ($CONFIG_BLK_DEV_IDEPCI == 1) && ($CONFIG_BLK_DEV_IDEDMA_PCI == 1 || $CONFIG_BLK_DEV_IDEDMA_PCI == 2 || $CONFIG_BLK_DEV_IDEDMA_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BLK_DEV_IDEDMA_PCI]];set CONFIG_BLK_DEV_PDC202XX_NEW [sync_tristate $CONFIG_BLK_DEV_PDC202XX_NEW $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu47.config.f.x43 disabled {y}} else {configure_entry .menu47.config.f.x43 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu47.config.f.x43 disabled {m}} else {configure_entry .menu47.config.f.x43 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu47.config.f.x43 normal {m}} else {configure_entry .menu47.config.f.x43 disabled {m}}; configure_entry .menu47.config.f.x43 normal {n l}} else {configure_entry .menu47.config.f.x43 disabled {y n m l}}
	global CONFIG_PDC202XX_FORCE
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_PCI == 1) && ($CONFIG_BLK_DEV_IDEPCI == 1) && ($CONFIG_BLK_DEV_PDC202XX_OLD == 1 || $CONFIG_BLK_DEV_PDC202XX_OLD == 2 || $CONFIG_BLK_DEV_PDC202XX_NEW == 1 || $CONFIG_BLK_DEV_PDC202XX_NEW == 2)} then {
	configure_entry .menu47.config.f.x44 normal {n l y}} else {configure_entry .menu47.config.f.x44 disabled {y n l}}
	global CONFIG_BLK_DEV_RZ1000
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_PCI == 1) && ($CONFIG_BLK_DEV_IDEPCI == 1) && ($CONFIG_X86 == 1 || $CONFIG_X86 == 2 || $CONFIG_X86 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_X86]];set CONFIG_BLK_DEV_RZ1000 [sync_tristate $CONFIG_BLK_DEV_RZ1000 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu47.config.f.x45 disabled {y}} else {configure_entry .menu47.config.f.x45 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu47.config.f.x45 disabled {m}} else {configure_entry .menu47.config.f.x45 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu47.config.f.x45 normal {m}} else {configure_entry .menu47.config.f.x45 disabled {m}}; configure_entry .menu47.config.f.x45 normal {n l}} else {configure_entry .menu47.config.f.x45 disabled {y n m l}}
	global CONFIG_BLK_DEV_SC1200
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_PCI == 1) && ($CONFIG_BLK_DEV_IDEPCI == 1) && ($CONFIG_BLK_DEV_IDEDMA_PCI == 1 || $CONFIG_BLK_DEV_IDEDMA_PCI == 2 || $CONFIG_BLK_DEV_IDEDMA_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BLK_DEV_IDEDMA_PCI]];set CONFIG_BLK_DEV_SC1200 [sync_tristate $CONFIG_BLK_DEV_SC1200 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu47.config.f.x46 disabled {y}} else {configure_entry .menu47.config.f.x46 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu47.config.f.x46 disabled {m}} else {configure_entry .menu47.config.f.x46 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu47.config.f.x46 normal {m}} else {configure_entry .menu47.config.f.x46 disabled {m}}; configure_entry .menu47.config.f.x46 normal {n l}} else {configure_entry .menu47.config.f.x46 disabled {y n m l}}
	global CONFIG_BLK_DEV_SVWKS
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_PCI == 1) && ($CONFIG_BLK_DEV_IDEPCI == 1) && ($CONFIG_BLK_DEV_IDEDMA_PCI == 1 || $CONFIG_BLK_DEV_IDEDMA_PCI == 2 || $CONFIG_BLK_DEV_IDEDMA_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BLK_DEV_IDEDMA_PCI]];set CONFIG_BLK_DEV_SVWKS [sync_tristate $CONFIG_BLK_DEV_SVWKS $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu47.config.f.x47 disabled {y}} else {configure_entry .menu47.config.f.x47 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu47.config.f.x47 disabled {m}} else {configure_entry .menu47.config.f.x47 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu47.config.f.x47 normal {m}} else {configure_entry .menu47.config.f.x47 disabled {m}}; configure_entry .menu47.config.f.x47 normal {n l}} else {configure_entry .menu47.config.f.x47 disabled {y n m l}}
	global CONFIG_BLK_DEV_SIIMAGE
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_PCI == 1) && ($CONFIG_BLK_DEV_IDEPCI == 1) && ($CONFIG_BLK_DEV_IDEDMA_PCI == 1 || $CONFIG_BLK_DEV_IDEDMA_PCI == 2 || $CONFIG_BLK_DEV_IDEDMA_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BLK_DEV_IDEDMA_PCI]];set CONFIG_BLK_DEV_SIIMAGE [sync_tristate $CONFIG_BLK_DEV_SIIMAGE $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu47.config.f.x48 disabled {y}} else {configure_entry .menu47.config.f.x48 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu47.config.f.x48 disabled {m}} else {configure_entry .menu47.config.f.x48 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu47.config.f.x48 normal {m}} else {configure_entry .menu47.config.f.x48 disabled {m}}; configure_entry .menu47.config.f.x48 normal {n l}} else {configure_entry .menu47.config.f.x48 disabled {y n m l}}
	global CONFIG_BLK_DEV_SIS5513
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_PCI == 1) && ($CONFIG_BLK_DEV_IDEPCI == 1) && ($CONFIG_BLK_DEV_IDEDMA_PCI == 1 || $CONFIG_BLK_DEV_IDEDMA_PCI == 2 || $CONFIG_BLK_DEV_IDEDMA_PCI == 4) && ($CONFIG_X86 == 1 || $CONFIG_X86 == 2 || $CONFIG_X86 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BLK_DEV_IDEDMA_PCI $CONFIG_X86]];set CONFIG_BLK_DEV_SIS5513 [sync_tristate $CONFIG_BLK_DEV_SIS5513 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu47.config.f.x49 disabled {y}} else {configure_entry .menu47.config.f.x49 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu47.config.f.x49 disabled {m}} else {configure_entry .menu47.config.f.x49 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu47.config.f.x49 normal {m}} else {configure_entry .menu47.config.f.x49 disabled {m}}; configure_entry .menu47.config.f.x49 normal {n l}} else {configure_entry .menu47.config.f.x49 disabled {y n m l}}
	global CONFIG_BLK_DEV_SLC90E66
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_PCI == 1) && ($CONFIG_BLK_DEV_IDEPCI == 1) && ($CONFIG_BLK_DEV_IDEDMA_PCI == 1 || $CONFIG_BLK_DEV_IDEDMA_PCI == 2 || $CONFIG_BLK_DEV_IDEDMA_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BLK_DEV_IDEDMA_PCI]];set CONFIG_BLK_DEV_SLC90E66 [sync_tristate $CONFIG_BLK_DEV_SLC90E66 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu47.config.f.x50 disabled {y}} else {configure_entry .menu47.config.f.x50 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu47.config.f.x50 disabled {m}} else {configure_entry .menu47.config.f.x50 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu47.config.f.x50 normal {m}} else {configure_entry .menu47.config.f.x50 disabled {m}}; configure_entry .menu47.config.f.x50 normal {n l}} else {configure_entry .menu47.config.f.x50 disabled {y n m l}}
	global CONFIG_BLK_DEV_TRM290
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_PCI == 1) && ($CONFIG_BLK_DEV_IDEPCI == 1) && ($CONFIG_BLK_DEV_IDEDMA_PCI == 1 || $CONFIG_BLK_DEV_IDEDMA_PCI == 2 || $CONFIG_BLK_DEV_IDEDMA_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BLK_DEV_IDEDMA_PCI]];set CONFIG_BLK_DEV_TRM290 [sync_tristate $CONFIG_BLK_DEV_TRM290 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu47.config.f.x51 disabled {y}} else {configure_entry .menu47.config.f.x51 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu47.config.f.x51 disabled {m}} else {configure_entry .menu47.config.f.x51 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu47.config.f.x51 normal {m}} else {configure_entry .menu47.config.f.x51 disabled {m}}; configure_entry .menu47.config.f.x51 normal {n l}} else {configure_entry .menu47.config.f.x51 disabled {y n m l}}
	global CONFIG_BLK_DEV_VIA82CXXX
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_PCI == 1) && ($CONFIG_BLK_DEV_IDEPCI == 1) && ($CONFIG_BLK_DEV_IDEDMA_PCI == 1 || $CONFIG_BLK_DEV_IDEDMA_PCI == 2 || $CONFIG_BLK_DEV_IDEDMA_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BLK_DEV_IDEDMA_PCI]];set CONFIG_BLK_DEV_VIA82CXXX [sync_tristate $CONFIG_BLK_DEV_VIA82CXXX $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu47.config.f.x52 disabled {y}} else {configure_entry .menu47.config.f.x52 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu47.config.f.x52 disabled {m}} else {configure_entry .menu47.config.f.x52 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu47.config.f.x52 normal {m}} else {configure_entry .menu47.config.f.x52 disabled {m}}; configure_entry .menu47.config.f.x52 normal {n l}} else {configure_entry .menu47.config.f.x52 disabled {y n m l}}
	global CONFIG_ARM
	global CONFIG_BLK_DEV_SL82C105
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_PCI == 1) && ($CONFIG_BLK_DEV_IDEPCI == 1) && ($CONFIG_ARM == 1) && ($CONFIG_BLK_DEV_IDEPCI == 1 || $CONFIG_BLK_DEV_IDEPCI == 2 || $CONFIG_BLK_DEV_IDEPCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BLK_DEV_IDEPCI]];set CONFIG_BLK_DEV_SL82C105 [sync_tristate $CONFIG_BLK_DEV_SL82C105 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu47.config.f.x53 disabled {y}} else {configure_entry .menu47.config.f.x53 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu47.config.f.x53 disabled {m}} else {configure_entry .menu47.config.f.x53 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu47.config.f.x53 normal {m}} else {configure_entry .menu47.config.f.x53 disabled {m}}; configure_entry .menu47.config.f.x53 normal {n l}} else {configure_entry .menu47.config.f.x53 disabled {y n m l}}
	global CONFIG_ARCH_ACORN
	global CONFIG_BLK_DEV_IDE_ICSIDE
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_ARCH_ACORN == 1) && ($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_ACORN == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ARCH_ACORN]];set CONFIG_BLK_DEV_IDE_ICSIDE [sync_bool $CONFIG_BLK_DEV_IDE_ICSIDE $tmpvar_dep 0];if {$tmpvar_dep != 1} then {configure_entry .menu47.config.f.x54 disabled {y};} else {configure_entry .menu47.config.f.x54 normal {y};}; configure_entry .menu47.config.f.x54 normal {n l}} else {configure_entry .menu47.config.f.x54 disabled {y n l}}
	global CONFIG_BLK_DEV_IDEDMA_ICS
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_ARCH_ACORN == 1) && ($CONFIG_BLK_DEV_IDE_ICSIDE == 1 || $CONFIG_BLK_DEV_IDE_ICSIDE == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BLK_DEV_IDE_ICSIDE]];set CONFIG_BLK_DEV_IDEDMA_ICS [sync_bool $CONFIG_BLK_DEV_IDEDMA_ICS $tmpvar_dep 0];if {$tmpvar_dep != 1} then {configure_entry .menu47.config.f.x55 disabled {y};} else {configure_entry .menu47.config.f.x55 normal {y};}; configure_entry .menu47.config.f.x55 normal {n l}} else {configure_entry .menu47.config.f.x55 disabled {y n l}}
	global CONFIG_IDEDMA_ICS_AUTO
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_ARCH_ACORN == 1) && ($CONFIG_BLK_DEV_IDEDMA_ICS == 1 || $CONFIG_BLK_DEV_IDEDMA_ICS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BLK_DEV_IDEDMA_ICS]];set CONFIG_IDEDMA_ICS_AUTO [sync_bool $CONFIG_IDEDMA_ICS_AUTO $tmpvar_dep 0];if {$tmpvar_dep != 1} then {configure_entry .menu47.config.f.x56 disabled {y};} else {configure_entry .menu47.config.f.x56 normal {y};}; configure_entry .menu47.config.f.x56 normal {n l}} else {configure_entry .menu47.config.f.x56 disabled {y n l}}
	global CONFIG_BLK_DEV_IDE_RAPIDE
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_ARCH_ACORN == 1) && ($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_ACORN == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ARCH_ACORN]];set CONFIG_BLK_DEV_IDE_RAPIDE [sync_bool $CONFIG_BLK_DEV_IDE_RAPIDE $tmpvar_dep 0];if {$tmpvar_dep != 1} then {configure_entry .menu47.config.f.x57 disabled {y};} else {configure_entry .menu47.config.f.x57 normal {y};}; configure_entry .menu47.config.f.x57 normal {n l}} else {configure_entry .menu47.config.f.x57 disabled {y n l}}
	global CONFIG_UCLINUX
	global CONFIG_BLK_DEV_UCLINUX_IDE
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_UCLINUX == 1 || $CONFIG_UCLINUX == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_UCLINUX]];set CONFIG_BLK_DEV_UCLINUX_IDE [sync_bool $CONFIG_BLK_DEV_UCLINUX_IDE $tmpvar_dep 0];if {$tmpvar_dep != 1} then {configure_entry .menu47.config.f.x58 disabled {y};} else {configure_entry .menu47.config.f.x58 normal {y};}; configure_entry .menu47.config.f.x58 normal {n l}} else {configure_entry .menu47.config.f.x58 disabled {y n l}}
	global CONFIG_BLK_DEV_MPC8xx_IDE
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_BLK_DEV_MPC8xx_IDE == 1)} then {configure_entry .menu47.config.f.x59 normal {x l}} else {configure_entry .menu47.config.f.x59 disabled {x l}}
	global CONFIG_ISA
	global CONFIG_IDE_CHIPSETS
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_ISA == 1 || $CONFIG_ISA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ISA]];set CONFIG_IDE_CHIPSETS [sync_bool $CONFIG_IDE_CHIPSETS $tmpvar_dep 0];if {$tmpvar_dep != 1} then {configure_entry .menu47.config.f.x60 disabled {y};} else {configure_entry .menu47.config.f.x60 normal {y};}; configure_entry .menu47.config.f.x60 normal {n l}} else {configure_entry .menu47.config.f.x60 disabled {y n l}}
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_IDE_CHIPSETS == 1)} then {configure_entry .menu47.config.f.x61 normal {m}} else {configure_entry .menu47.config.f.x61 disabled {m}}
	global CONFIG_BLK_DEV_4DRIVES
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_IDE_CHIPSETS == 1)} then {
	configure_entry .menu47.config.f.x62 normal {n l y}} else {configure_entry .menu47.config.f.x62 disabled {y n l}}
	global CONFIG_BLK_DEV_ALI14XX
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_IDE_CHIPSETS == 1) && ($CONFIG_BLK_DEV_IDE == 1 || $CONFIG_BLK_DEV_IDE == 2 || $CONFIG_BLK_DEV_IDE == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BLK_DEV_IDE]];set CONFIG_BLK_DEV_ALI14XX [sync_tristate $CONFIG_BLK_DEV_ALI14XX $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu47.config.f.x63 disabled {y}} else {configure_entry .menu47.config.f.x63 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu47.config.f.x63 disabled {m}} else {configure_entry .menu47.config.f.x63 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu47.config.f.x63 normal {m}} else {configure_entry .menu47.config.f.x63 disabled {m}}; configure_entry .menu47.config.f.x63 normal {n l}} else {configure_entry .menu47.config.f.x63 disabled {y n m l}}
	global CONFIG_BLK_DEV_DTC2278
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_IDE_CHIPSETS == 1) && ($CONFIG_BLK_DEV_IDE == 1 || $CONFIG_BLK_DEV_IDE == 2 || $CONFIG_BLK_DEV_IDE == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BLK_DEV_IDE]];set CONFIG_BLK_DEV_DTC2278 [sync_tristate $CONFIG_BLK_DEV_DTC2278 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu47.config.f.x64 disabled {y}} else {configure_entry .menu47.config.f.x64 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu47.config.f.x64 disabled {m}} else {configure_entry .menu47.config.f.x64 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu47.config.f.x64 normal {m}} else {configure_entry .menu47.config.f.x64 disabled {m}}; configure_entry .menu47.config.f.x64 normal {n l}} else {configure_entry .menu47.config.f.x64 disabled {y n m l}}
	global CONFIG_BLK_DEV_HT6560B
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_IDE_CHIPSETS == 1) && ($CONFIG_BLK_DEV_IDE == 1 || $CONFIG_BLK_DEV_IDE == 2 || $CONFIG_BLK_DEV_IDE == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BLK_DEV_IDE]];set CONFIG_BLK_DEV_HT6560B [sync_tristate $CONFIG_BLK_DEV_HT6560B $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu47.config.f.x65 disabled {y}} else {configure_entry .menu47.config.f.x65 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu47.config.f.x65 disabled {m}} else {configure_entry .menu47.config.f.x65 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu47.config.f.x65 normal {m}} else {configure_entry .menu47.config.f.x65 disabled {m}}; configure_entry .menu47.config.f.x65 normal {n l}} else {configure_entry .menu47.config.f.x65 disabled {y n m l}}
	global CONFIG_EXCALIBUR
	global CONFIG_BLK_DEV_OCIDEC
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_IDE_CHIPSETS == 1) && ($CONFIG_BLK_DEV_IDE == 1 || $CONFIG_BLK_DEV_IDE == 4) && ($CONFIG_EXCALIBUR == 1 || $CONFIG_EXCALIBUR == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BLK_DEV_IDE $CONFIG_EXCALIBUR]];set CONFIG_BLK_DEV_OCIDEC [sync_bool $CONFIG_BLK_DEV_OCIDEC $tmpvar_dep 0];if {$tmpvar_dep != 1} then {configure_entry .menu47.config.f.x66 disabled {y};} else {configure_entry .menu47.config.f.x66 normal {y};}; configure_entry .menu47.config.f.x66 normal {n l}} else {configure_entry .menu47.config.f.x66 disabled {y n l}}
	global CONFIG_BLK_DEV_PDC4030
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_IDE_CHIPSETS == 1) && ($CONFIG_BLK_DEV_IDEDISK == 1 || $CONFIG_BLK_DEV_IDEDISK == 2 || $CONFIG_BLK_DEV_IDEDISK == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BLK_DEV_IDEDISK $CONFIG_EXPERIMENTAL]];set CONFIG_BLK_DEV_PDC4030 [sync_tristate $CONFIG_BLK_DEV_PDC4030 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu47.config.f.x67 disabled {y}} else {configure_entry .menu47.config.f.x67 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu47.config.f.x67 disabled {m}} else {configure_entry .menu47.config.f.x67 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu47.config.f.x67 normal {m}} else {configure_entry .menu47.config.f.x67 disabled {m}}; configure_entry .menu47.config.f.x67 normal {n l}} else {configure_entry .menu47.config.f.x67 disabled {y n m l}}
	global CONFIG_BLK_DEV_QD65XX
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_IDE_CHIPSETS == 1) && ($CONFIG_BLK_DEV_IDE == 1 || $CONFIG_BLK_DEV_IDE == 2 || $CONFIG_BLK_DEV_IDE == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BLK_DEV_IDE]];set CONFIG_BLK_DEV_QD65XX [sync_tristate $CONFIG_BLK_DEV_QD65XX $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu47.config.f.x68 disabled {y}} else {configure_entry .menu47.config.f.x68 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu47.config.f.x68 disabled {m}} else {configure_entry .menu47.config.f.x68 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu47.config.f.x68 normal {m}} else {configure_entry .menu47.config.f.x68 disabled {m}}; configure_entry .menu47.config.f.x68 normal {n l}} else {configure_entry .menu47.config.f.x68 disabled {y n m l}}
	global CONFIG_BLK_DEV_UMC8672
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_IDE_CHIPSETS == 1) && ($CONFIG_BLK_DEV_IDE == 1 || $CONFIG_BLK_DEV_IDE == 2 || $CONFIG_BLK_DEV_IDE == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BLK_DEV_IDE]];set CONFIG_BLK_DEV_UMC8672 [sync_tristate $CONFIG_BLK_DEV_UMC8672 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu47.config.f.x69 disabled {y}} else {configure_entry .menu47.config.f.x69 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu47.config.f.x69 disabled {m}} else {configure_entry .menu47.config.f.x69 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu47.config.f.x69 normal {m}} else {configure_entry .menu47.config.f.x69 disabled {m}}; configure_entry .menu47.config.f.x69 normal {n l}} else {configure_entry .menu47.config.f.x69 disabled {y n m l}}
	global CONFIG_BLK_DEV_HD_ONLY
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE == 0)} then {
	configure_entry .menu47.config.f.x70 normal {n l y}} else {configure_entry .menu47.config.f.x70 disabled {y n l}}
	global CONFIG_BLK_DEV_IDEDMA_PMAC
	global CONFIG_IDEDMA_IVB
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDEDMA_PCI == 1 || $CONFIG_BLK_DEV_IDEDMA_PMAC == 1 || $CONFIG_BLK_DEV_IDEDMA_ICS == 1)} then {
	configure_entry .menu47.config.f.x71 normal {n l y}} else {configure_entry .menu47.config.f.x71 disabled {y n l}}
	global CONFIG_BLK_DEV_ATARAID
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE == 1 || $CONFIG_BLK_DEV_IDE == 2 || $CONFIG_BLK_DEV_IDE == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BLK_DEV_IDE $CONFIG_EXPERIMENTAL]];set CONFIG_BLK_DEV_ATARAID [sync_tristate $CONFIG_BLK_DEV_ATARAID $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu47.config.f.x72 disabled {y}} else {configure_entry .menu47.config.f.x72 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu47.config.f.x72 disabled {m}} else {configure_entry .menu47.config.f.x72 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu47.config.f.x72 normal {m}} else {configure_entry .menu47.config.f.x72 disabled {m}}; configure_entry .menu47.config.f.x72 normal {n l}} else {configure_entry .menu47.config.f.x72 disabled {y n m l}}
	global CONFIG_BLK_DEV_ATARAID_PDC
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE == 1 || $CONFIG_BLK_DEV_IDE == 2 || $CONFIG_BLK_DEV_IDE == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4) && ($CONFIG_BLK_DEV_ATARAID == 1 || $CONFIG_BLK_DEV_ATARAID == 2 || $CONFIG_BLK_DEV_ATARAID == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BLK_DEV_IDE $CONFIG_EXPERIMENTAL $CONFIG_BLK_DEV_ATARAID]];set CONFIG_BLK_DEV_ATARAID_PDC [sync_tristate $CONFIG_BLK_DEV_ATARAID_PDC $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu47.config.f.x73 disabled {y}} else {configure_entry .menu47.config.f.x73 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu47.config.f.x73 disabled {m}} else {configure_entry .menu47.config.f.x73 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu47.config.f.x73 normal {m}} else {configure_entry .menu47.config.f.x73 disabled {m}}; configure_entry .menu47.config.f.x73 normal {n l}} else {configure_entry .menu47.config.f.x73 disabled {y n m l}}
	global CONFIG_BLK_DEV_ATARAID_HPT
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE == 1 || $CONFIG_BLK_DEV_IDE == 2 || $CONFIG_BLK_DEV_IDE == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4) && ($CONFIG_BLK_DEV_ATARAID == 1 || $CONFIG_BLK_DEV_ATARAID == 2 || $CONFIG_BLK_DEV_ATARAID == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BLK_DEV_IDE $CONFIG_EXPERIMENTAL $CONFIG_BLK_DEV_ATARAID]];set CONFIG_BLK_DEV_ATARAID_HPT [sync_tristate $CONFIG_BLK_DEV_ATARAID_HPT $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu47.config.f.x74 disabled {y}} else {configure_entry .menu47.config.f.x74 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu47.config.f.x74 disabled {m}} else {configure_entry .menu47.config.f.x74 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu47.config.f.x74 normal {m}} else {configure_entry .menu47.config.f.x74 disabled {m}}; configure_entry .menu47.config.f.x74 normal {n l}} else {configure_entry .menu47.config.f.x74 disabled {y n m l}}
	global CONFIG_BLK_DEV_ATARAID_SII
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE == 1 || $CONFIG_BLK_DEV_IDE == 2 || $CONFIG_BLK_DEV_IDE == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4) && ($CONFIG_BLK_DEV_ATARAID == 1 || $CONFIG_BLK_DEV_ATARAID == 2 || $CONFIG_BLK_DEV_ATARAID == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BLK_DEV_IDE $CONFIG_EXPERIMENTAL $CONFIG_BLK_DEV_ATARAID]];set CONFIG_BLK_DEV_ATARAID_SII [sync_tristate $CONFIG_BLK_DEV_ATARAID_SII $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu47.config.f.x75 disabled {y}} else {configure_entry .menu47.config.f.x75 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu47.config.f.x75 disabled {m}} else {configure_entry .menu47.config.f.x75 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu47.config.f.x75 normal {m}} else {configure_entry .menu47.config.f.x75 disabled {m}}; configure_entry .menu47.config.f.x75 normal {n l}} else {configure_entry .menu47.config.f.x75 disabled {y n m l}}
}


proc update_define_menu47 {} {
	update_define_mainmenu
	global CONFIG_MODULES
	global CONFIG_BLK_DEV_HD
	global CONFIG_BLK_DEV_IDEDMA
	global CONFIG_IDEDMA_AUTO
	global CONFIG_DMA_NONPCI
	global CONFIG_BLK_DEV_PDC202XX
	global CONFIG_BLK_DEV_IDE_MODES
	global CONFIG_IDE_TASK_IOCTL
set CONFIG_IDE_TASK_IOCTL [expr $CONFIG_IDE_TASK_IOCTL|16]
	global CONFIG_BLK_DEV_IDEPCI
set CONFIG_BLK_DEV_IDEPCI [expr $CONFIG_BLK_DEV_IDEPCI|16]
	global CONFIG_IDEPCI_SHARE_IRQ
set CONFIG_IDEPCI_SHARE_IRQ [expr $CONFIG_IDEPCI_SHARE_IRQ|16]
	global CONFIG_BLK_DEV_IDEDMA_PCI
set CONFIG_BLK_DEV_IDEDMA_PCI [expr $CONFIG_BLK_DEV_IDEDMA_PCI|16]
	global CONFIG_BLK_DEV_OFFBOARD
set CONFIG_BLK_DEV_OFFBOARD [expr $CONFIG_BLK_DEV_OFFBOARD|16]
	global CONFIG_PDC202XX_FORCE
set CONFIG_PDC202XX_FORCE [expr $CONFIG_PDC202XX_FORCE|16]
	global CONFIG_BLK_DEV_4DRIVES
set CONFIG_BLK_DEV_4DRIVES [expr $CONFIG_BLK_DEV_4DRIVES|16]
	global CONFIG_BLK_DEV_HD_ONLY
set CONFIG_BLK_DEV_HD_ONLY [expr $CONFIG_BLK_DEV_HD_ONLY|16]
	global CONFIG_IDEDMA_IVB
set CONFIG_IDEDMA_IVB [expr $CONFIG_IDEDMA_IVB|16]
	global CONFIG_IDE
	global CONFIG_BLK_DEV_IDE
	if {($CONFIG_IDE != 0) && ($CONFIG_IDE == 1 || $CONFIG_IDE == 2 || $CONFIG_IDE == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IDE]]; set CONFIG_BLK_DEV_IDE [sync_tristate $CONFIG_BLK_DEV_IDE $tmpvar_dep]; set CONFIG_BLK_DEV_IDE [expr $CONFIG_BLK_DEV_IDE&15]}
	global CONFIG_X86
	global CONFIG_BLK_DEV_HD_IDE
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_X86 == 1 || $CONFIG_X86 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_X86]];set CONFIG_BLK_DEV_HD_IDE [sync_bool $CONFIG_BLK_DEV_HD_IDE $tmpvar_dep 0];set CONFIG_BLK_DEV_HD_IDE [expr $CONFIG_BLK_DEV_HD_IDE&15]}
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0)} then {set CONFIG_BLK_DEV_HD $CONFIG_BLK_DEV_HD_IDE }
	global CONFIG_BLK_DEV_IDEDISK
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_BLK_DEV_IDE == 1 || $CONFIG_BLK_DEV_IDE == 2 || $CONFIG_BLK_DEV_IDE == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BLK_DEV_IDE]]; set CONFIG_BLK_DEV_IDEDISK [sync_tristate $CONFIG_BLK_DEV_IDEDISK $tmpvar_dep]; set CONFIG_BLK_DEV_IDEDISK [expr $CONFIG_BLK_DEV_IDEDISK&15]}
	global CONFIG_IDEDISK_MULTI_MODE
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_BLK_DEV_IDEDISK == 1 || $CONFIG_BLK_DEV_IDEDISK == 2 || $CONFIG_BLK_DEV_IDEDISK == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BLK_DEV_IDEDISK]];set CONFIG_IDEDISK_MULTI_MODE [sync_bool $CONFIG_IDEDISK_MULTI_MODE $tmpvar_dep 1];set CONFIG_IDEDISK_MULTI_MODE [expr $CONFIG_IDEDISK_MULTI_MODE&15]}
	global CONFIG_IDEDISK_STROKE
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_BLK_DEV_IDEDISK == 1 || $CONFIG_BLK_DEV_IDEDISK == 2 || $CONFIG_BLK_DEV_IDEDISK == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BLK_DEV_IDEDISK]];set CONFIG_IDEDISK_STROKE [sync_bool $CONFIG_IDEDISK_STROKE $tmpvar_dep 1];set CONFIG_IDEDISK_STROKE [expr $CONFIG_IDEDISK_STROKE&15]}
	global CONFIG_PCMCIA
	global CONFIG_BLK_DEV_IDECS
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_BLK_DEV_IDE == 1 || $CONFIG_BLK_DEV_IDE == 2 || $CONFIG_BLK_DEV_IDE == 4) && ($CONFIG_PCMCIA == 1 || $CONFIG_PCMCIA == 2 || $CONFIG_PCMCIA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BLK_DEV_IDE $CONFIG_PCMCIA]]; set CONFIG_BLK_DEV_IDECS [sync_tristate $CONFIG_BLK_DEV_IDECS $tmpvar_dep]; set CONFIG_BLK_DEV_IDECS [expr $CONFIG_BLK_DEV_IDECS&15]}
	global CONFIG_BLK_DEV_IDECD
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_BLK_DEV_IDE == 1 || $CONFIG_BLK_DEV_IDE == 2 || $CONFIG_BLK_DEV_IDE == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BLK_DEV_IDE]]; set CONFIG_BLK_DEV_IDECD [sync_tristate $CONFIG_BLK_DEV_IDECD $tmpvar_dep]; set CONFIG_BLK_DEV_IDECD [expr $CONFIG_BLK_DEV_IDECD&15]}
	global CONFIG_BLK_DEV_IDETAPE
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_BLK_DEV_IDE == 1 || $CONFIG_BLK_DEV_IDE == 2 || $CONFIG_BLK_DEV_IDE == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BLK_DEV_IDE]]; set CONFIG_BLK_DEV_IDETAPE [sync_tristate $CONFIG_BLK_DEV_IDETAPE $tmpvar_dep]; set CONFIG_BLK_DEV_IDETAPE [expr $CONFIG_BLK_DEV_IDETAPE&15]}
	global CONFIG_BLK_DEV_IDEFLOPPY
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_BLK_DEV_IDE == 1 || $CONFIG_BLK_DEV_IDE == 2 || $CONFIG_BLK_DEV_IDE == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BLK_DEV_IDE]]; set CONFIG_BLK_DEV_IDEFLOPPY [sync_tristate $CONFIG_BLK_DEV_IDEFLOPPY $tmpvar_dep]; set CONFIG_BLK_DEV_IDEFLOPPY [expr $CONFIG_BLK_DEV_IDEFLOPPY&15]}
	global CONFIG_SCSI
	global CONFIG_BLK_DEV_IDESCSI
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_BLK_DEV_IDE == 1 || $CONFIG_BLK_DEV_IDE == 2 || $CONFIG_BLK_DEV_IDE == 4) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BLK_DEV_IDE $CONFIG_SCSI]]; set CONFIG_BLK_DEV_IDESCSI [sync_tristate $CONFIG_BLK_DEV_IDESCSI $tmpvar_dep]; set CONFIG_BLK_DEV_IDESCSI [expr $CONFIG_BLK_DEV_IDESCSI&15]}
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0)} then {
	set CONFIG_IDE_TASK_IOCTL [expr $CONFIG_IDE_TASK_IOCTL&15]}
	global CONFIG_BLK_DEV_CMD640
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_X86 == 1 || $CONFIG_X86 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_X86]];set CONFIG_BLK_DEV_CMD640 [sync_bool $CONFIG_BLK_DEV_CMD640 $tmpvar_dep 0];set CONFIG_BLK_DEV_CMD640 [expr $CONFIG_BLK_DEV_CMD640&15]}
	global CONFIG_BLK_DEV_CMD640_ENHANCED
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_BLK_DEV_CMD640 == 1 || $CONFIG_BLK_DEV_CMD640 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BLK_DEV_CMD640]];set CONFIG_BLK_DEV_CMD640_ENHANCED [sync_bool $CONFIG_BLK_DEV_CMD640_ENHANCED $tmpvar_dep 0];set CONFIG_BLK_DEV_CMD640_ENHANCED [expr $CONFIG_BLK_DEV_CMD640_ENHANCED&15]}
	global CONFIG_ISAPNP
	global CONFIG_BLK_DEV_ISAPNP
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_ISAPNP == 1 || $CONFIG_ISAPNP == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ISAPNP]];set CONFIG_BLK_DEV_ISAPNP [sync_bool $CONFIG_BLK_DEV_ISAPNP $tmpvar_dep 0];set CONFIG_BLK_DEV_ISAPNP [expr $CONFIG_BLK_DEV_ISAPNP&15]}
	global CONFIG_PCI
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_PCI == 1)} then {
	set CONFIG_BLK_DEV_IDEPCI [expr $CONFIG_BLK_DEV_IDEPCI&15]}
	global CONFIG_BLK_DEV_GENERIC
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_PCI == 1) && ($CONFIG_BLK_DEV_IDEPCI == 1) && ($CONFIG_BLK_DEV_IDEPCI == 1 || $CONFIG_BLK_DEV_IDEPCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BLK_DEV_IDEPCI]];set CONFIG_BLK_DEV_GENERIC [sync_bool $CONFIG_BLK_DEV_GENERIC $tmpvar_dep 0];set CONFIG_BLK_DEV_GENERIC [expr $CONFIG_BLK_DEV_GENERIC&15]}
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_PCI == 1) && ($CONFIG_BLK_DEV_IDEPCI == 1)} then {
	set CONFIG_IDEPCI_SHARE_IRQ [expr $CONFIG_IDEPCI_SHARE_IRQ&15]}
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_PCI == 1) && ($CONFIG_BLK_DEV_IDEPCI == 1)} then {
	set CONFIG_BLK_DEV_IDEDMA_PCI [expr $CONFIG_BLK_DEV_IDEDMA_PCI&15]}
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_PCI == 1) && ($CONFIG_BLK_DEV_IDEPCI == 1)} then {
	set CONFIG_BLK_DEV_OFFBOARD [expr $CONFIG_BLK_DEV_OFFBOARD&15]}
	global CONFIG_BLK_DEV_IDEDMA_FORCED
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_PCI == 1) && ($CONFIG_BLK_DEV_IDEPCI == 1) && ($CONFIG_BLK_DEV_IDEDMA_PCI == 1 || $CONFIG_BLK_DEV_IDEDMA_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BLK_DEV_IDEDMA_PCI]];set CONFIG_BLK_DEV_IDEDMA_FORCED [sync_bool $CONFIG_BLK_DEV_IDEDMA_FORCED $tmpvar_dep 0];set CONFIG_BLK_DEV_IDEDMA_FORCED [expr $CONFIG_BLK_DEV_IDEDMA_FORCED&15]}
	global CONFIG_IDEDMA_PCI_AUTO
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_PCI == 1) && ($CONFIG_BLK_DEV_IDEPCI == 1) && ($CONFIG_BLK_DEV_IDEDMA_PCI == 1 || $CONFIG_BLK_DEV_IDEDMA_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BLK_DEV_IDEDMA_PCI]];set CONFIG_IDEDMA_PCI_AUTO [sync_bool $CONFIG_IDEDMA_PCI_AUTO $tmpvar_dep 0];set CONFIG_IDEDMA_PCI_AUTO [expr $CONFIG_IDEDMA_PCI_AUTO&15]}
	global CONFIG_IDEDMA_ONLYDISK
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_PCI == 1) && ($CONFIG_BLK_DEV_IDEPCI == 1) && ($CONFIG_IDEDMA_PCI_AUTO == 1 || $CONFIG_IDEDMA_PCI_AUTO == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IDEDMA_PCI_AUTO]];set CONFIG_IDEDMA_ONLYDISK [sync_bool $CONFIG_IDEDMA_ONLYDISK $tmpvar_dep 0];set CONFIG_IDEDMA_ONLYDISK [expr $CONFIG_IDEDMA_ONLYDISK&15]}
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_PCI == 1) && ($CONFIG_BLK_DEV_IDEPCI == 1)} then {set CONFIG_BLK_DEV_IDEDMA $CONFIG_BLK_DEV_IDEDMA_PCI }
	global CONFIG_EXPERIMENTAL
	global CONFIG_IDEDMA_PCI_WIP
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_PCI == 1) && ($CONFIG_BLK_DEV_IDEPCI == 1) && ($CONFIG_BLK_DEV_IDEDMA_PCI == 1 || $CONFIG_BLK_DEV_IDEDMA_PCI == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BLK_DEV_IDEDMA_PCI $CONFIG_EXPERIMENTAL]];set CONFIG_IDEDMA_PCI_WIP [sync_bool $CONFIG_IDEDMA_PCI_WIP $tmpvar_dep 0];set CONFIG_IDEDMA_PCI_WIP [expr $CONFIG_IDEDMA_PCI_WIP&15]}
	global CONFIG_BLK_DEV_ADMA100
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_PCI == 1) && ($CONFIG_BLK_DEV_IDEPCI == 1) && ($CONFIG_BLK_DEV_IDEDMA_PCI == 1 || $CONFIG_BLK_DEV_IDEDMA_PCI == 2 || $CONFIG_BLK_DEV_IDEDMA_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BLK_DEV_IDEDMA_PCI]]; set CONFIG_BLK_DEV_ADMA100 [sync_tristate $CONFIG_BLK_DEV_ADMA100 $tmpvar_dep]; set CONFIG_BLK_DEV_ADMA100 [expr $CONFIG_BLK_DEV_ADMA100&15]}
	global CONFIG_BLK_DEV_AEC62XX
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_PCI == 1) && ($CONFIG_BLK_DEV_IDEPCI == 1) && ($CONFIG_BLK_DEV_IDEDMA_PCI == 1 || $CONFIG_BLK_DEV_IDEDMA_PCI == 2 || $CONFIG_BLK_DEV_IDEDMA_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BLK_DEV_IDEDMA_PCI]]; set CONFIG_BLK_DEV_AEC62XX [sync_tristate $CONFIG_BLK_DEV_AEC62XX $tmpvar_dep]; set CONFIG_BLK_DEV_AEC62XX [expr $CONFIG_BLK_DEV_AEC62XX&15]}
	global CONFIG_BLK_DEV_ALI15X3
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_PCI == 1) && ($CONFIG_BLK_DEV_IDEPCI == 1) && ($CONFIG_BLK_DEV_IDEDMA_PCI == 1 || $CONFIG_BLK_DEV_IDEDMA_PCI == 2 || $CONFIG_BLK_DEV_IDEDMA_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BLK_DEV_IDEDMA_PCI]]; set CONFIG_BLK_DEV_ALI15X3 [sync_tristate $CONFIG_BLK_DEV_ALI15X3 $tmpvar_dep]; set CONFIG_BLK_DEV_ALI15X3 [expr $CONFIG_BLK_DEV_ALI15X3&15]}
	global CONFIG_WDC_ALI15X3
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_PCI == 1) && ($CONFIG_BLK_DEV_IDEPCI == 1) && ($CONFIG_BLK_DEV_ALI15X3 == 1 || $CONFIG_BLK_DEV_ALI15X3 == 2 || $CONFIG_BLK_DEV_ALI15X3 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BLK_DEV_ALI15X3]];set CONFIG_WDC_ALI15X3 [sync_bool $CONFIG_WDC_ALI15X3 $tmpvar_dep 1];set CONFIG_WDC_ALI15X3 [expr $CONFIG_WDC_ALI15X3&15]}
	global CONFIG_BLK_DEV_AMD74XX
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_PCI == 1) && ($CONFIG_BLK_DEV_IDEPCI == 1) && ($CONFIG_BLK_DEV_IDEDMA_PCI == 1 || $CONFIG_BLK_DEV_IDEDMA_PCI == 2 || $CONFIG_BLK_DEV_IDEDMA_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BLK_DEV_IDEDMA_PCI]]; set CONFIG_BLK_DEV_AMD74XX [sync_tristate $CONFIG_BLK_DEV_AMD74XX $tmpvar_dep]; set CONFIG_BLK_DEV_AMD74XX [expr $CONFIG_BLK_DEV_AMD74XX&15]}
	global CONFIG_AMD74XX_OVERRIDE
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_PCI == 1) && ($CONFIG_BLK_DEV_IDEPCI == 1) && ($CONFIG_BLK_DEV_AMD74XX == 1 || $CONFIG_BLK_DEV_AMD74XX == 2 || $CONFIG_BLK_DEV_AMD74XX == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BLK_DEV_AMD74XX]];set CONFIG_AMD74XX_OVERRIDE [sync_bool $CONFIG_AMD74XX_OVERRIDE $tmpvar_dep 1];set CONFIG_AMD74XX_OVERRIDE [expr $CONFIG_AMD74XX_OVERRIDE&15]}
	global CONFIG_BLK_DEV_CMD64X
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_PCI == 1) && ($CONFIG_BLK_DEV_IDEPCI == 1) && ($CONFIG_BLK_DEV_IDEDMA_PCI == 1 || $CONFIG_BLK_DEV_IDEDMA_PCI == 2 || $CONFIG_BLK_DEV_IDEDMA_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BLK_DEV_IDEDMA_PCI]]; set CONFIG_BLK_DEV_CMD64X [sync_tristate $CONFIG_BLK_DEV_CMD64X $tmpvar_dep]; set CONFIG_BLK_DEV_CMD64X [expr $CONFIG_BLK_DEV_CMD64X&15]}
	global CONFIG_BLK_DEV_TRIFLEX
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_PCI == 1) && ($CONFIG_BLK_DEV_IDEPCI == 1) && ($CONFIG_BLK_DEV_IDEDMA_PCI == 1 || $CONFIG_BLK_DEV_IDEDMA_PCI == 2 || $CONFIG_BLK_DEV_IDEDMA_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BLK_DEV_IDEDMA_PCI]]; set CONFIG_BLK_DEV_TRIFLEX [sync_tristate $CONFIG_BLK_DEV_TRIFLEX $tmpvar_dep]; set CONFIG_BLK_DEV_TRIFLEX [expr $CONFIG_BLK_DEV_TRIFLEX&15]}
	global CONFIG_BLK_DEV_CY82C693
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_PCI == 1) && ($CONFIG_BLK_DEV_IDEPCI == 1) && ($CONFIG_BLK_DEV_IDEDMA_PCI == 1 || $CONFIG_BLK_DEV_IDEDMA_PCI == 2 || $CONFIG_BLK_DEV_IDEDMA_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BLK_DEV_IDEDMA_PCI]]; set CONFIG_BLK_DEV_CY82C693 [sync_tristate $CONFIG_BLK_DEV_CY82C693 $tmpvar_dep]; set CONFIG_BLK_DEV_CY82C693 [expr $CONFIG_BLK_DEV_CY82C693&15]}
	global CONFIG_BLK_DEV_CS5530
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_PCI == 1) && ($CONFIG_BLK_DEV_IDEPCI == 1) && ($CONFIG_BLK_DEV_IDEDMA_PCI == 1 || $CONFIG_BLK_DEV_IDEDMA_PCI == 2 || $CONFIG_BLK_DEV_IDEDMA_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BLK_DEV_IDEDMA_PCI]]; set CONFIG_BLK_DEV_CS5530 [sync_tristate $CONFIG_BLK_DEV_CS5530 $tmpvar_dep]; set CONFIG_BLK_DEV_CS5530 [expr $CONFIG_BLK_DEV_CS5530&15]}
	global CONFIG_BLK_DEV_HPT34X
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_PCI == 1) && ($CONFIG_BLK_DEV_IDEPCI == 1) && ($CONFIG_BLK_DEV_IDEDMA_PCI == 1 || $CONFIG_BLK_DEV_IDEDMA_PCI == 2 || $CONFIG_BLK_DEV_IDEDMA_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BLK_DEV_IDEDMA_PCI]]; set CONFIG_BLK_DEV_HPT34X [sync_tristate $CONFIG_BLK_DEV_HPT34X $tmpvar_dep]; set CONFIG_BLK_DEV_HPT34X [expr $CONFIG_BLK_DEV_HPT34X&15]}
	global CONFIG_HPT34X_AUTODMA
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_PCI == 1) && ($CONFIG_BLK_DEV_IDEPCI == 1) && ($CONFIG_BLK_DEV_HPT34X == 1 || $CONFIG_BLK_DEV_HPT34X == 2 || $CONFIG_BLK_DEV_HPT34X == 4) && ($CONFIG_IDEDMA_PCI_WIP == 1 || $CONFIG_IDEDMA_PCI_WIP == 2 || $CONFIG_IDEDMA_PCI_WIP == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BLK_DEV_HPT34X $CONFIG_IDEDMA_PCI_WIP]];set CONFIG_HPT34X_AUTODMA [sync_bool $CONFIG_HPT34X_AUTODMA $tmpvar_dep 1];set CONFIG_HPT34X_AUTODMA [expr $CONFIG_HPT34X_AUTODMA&15]}
	global CONFIG_BLK_DEV_HPT366
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_PCI == 1) && ($CONFIG_BLK_DEV_IDEPCI == 1) && ($CONFIG_BLK_DEV_IDEDMA_PCI == 1 || $CONFIG_BLK_DEV_IDEDMA_PCI == 2 || $CONFIG_BLK_DEV_IDEDMA_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BLK_DEV_IDEDMA_PCI]]; set CONFIG_BLK_DEV_HPT366 [sync_tristate $CONFIG_BLK_DEV_HPT366 $tmpvar_dep]; set CONFIG_BLK_DEV_HPT366 [expr $CONFIG_BLK_DEV_HPT366&15]}
	global CONFIG_BLK_DEV_PIIX
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_PCI == 1) && ($CONFIG_BLK_DEV_IDEPCI == 1) && ($CONFIG_BLK_DEV_IDEDMA_PCI == 1 || $CONFIG_BLK_DEV_IDEDMA_PCI == 2 || $CONFIG_BLK_DEV_IDEDMA_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BLK_DEV_IDEDMA_PCI]]; set CONFIG_BLK_DEV_PIIX [sync_tristate $CONFIG_BLK_DEV_PIIX $tmpvar_dep]; set CONFIG_BLK_DEV_PIIX [expr $CONFIG_BLK_DEV_PIIX&15]}
	global CONFIG_BLK_DEV_NS87415
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_PCI == 1) && ($CONFIG_BLK_DEV_IDEPCI == 1) && ($CONFIG_BLK_DEV_IDEDMA_PCI == 1 || $CONFIG_BLK_DEV_IDEDMA_PCI == 2 || $CONFIG_BLK_DEV_IDEDMA_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BLK_DEV_IDEDMA_PCI]]; set CONFIG_BLK_DEV_NS87415 [sync_tristate $CONFIG_BLK_DEV_NS87415 $tmpvar_dep]; set CONFIG_BLK_DEV_NS87415 [expr $CONFIG_BLK_DEV_NS87415&15]}
	global CONFIG_BLK_DEV_OPTI621
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_PCI == 1) && ($CONFIG_BLK_DEV_IDEPCI == 1) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_EXPERIMENTAL]]; set CONFIG_BLK_DEV_OPTI621 [sync_tristate $CONFIG_BLK_DEV_OPTI621 $tmpvar_dep]; set CONFIG_BLK_DEV_OPTI621 [expr $CONFIG_BLK_DEV_OPTI621&15]}
	global CONFIG_BLK_DEV_PDC202XX_OLD
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_PCI == 1) && ($CONFIG_BLK_DEV_IDEPCI == 1) && ($CONFIG_BLK_DEV_IDEDMA_PCI == 1 || $CONFIG_BLK_DEV_IDEDMA_PCI == 2 || $CONFIG_BLK_DEV_IDEDMA_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BLK_DEV_IDEDMA_PCI]]; set CONFIG_BLK_DEV_PDC202XX_OLD [sync_tristate $CONFIG_BLK_DEV_PDC202XX_OLD $tmpvar_dep]; set CONFIG_BLK_DEV_PDC202XX_OLD [expr $CONFIG_BLK_DEV_PDC202XX_OLD&15]}
	global CONFIG_PDC202XX_BURST
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_PCI == 1) && ($CONFIG_BLK_DEV_IDEPCI == 1) && ($CONFIG_BLK_DEV_PDC202XX_OLD == 1 || $CONFIG_BLK_DEV_PDC202XX_OLD == 2 || $CONFIG_BLK_DEV_PDC202XX_OLD == 4) && ($CONFIG_BLK_DEV_IDEDMA_PCI == 1 || $CONFIG_BLK_DEV_IDEDMA_PCI == 2 || $CONFIG_BLK_DEV_IDEDMA_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BLK_DEV_PDC202XX_OLD $CONFIG_BLK_DEV_IDEDMA_PCI]];set CONFIG_PDC202XX_BURST [sync_bool $CONFIG_PDC202XX_BURST $tmpvar_dep 1];set CONFIG_PDC202XX_BURST [expr $CONFIG_PDC202XX_BURST&15]}
	global CONFIG_BLK_DEV_PDC202XX_NEW
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_PCI == 1) && ($CONFIG_BLK_DEV_IDEPCI == 1) && ($CONFIG_BLK_DEV_IDEDMA_PCI == 1 || $CONFIG_BLK_DEV_IDEDMA_PCI == 2 || $CONFIG_BLK_DEV_IDEDMA_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BLK_DEV_IDEDMA_PCI]]; set CONFIG_BLK_DEV_PDC202XX_NEW [sync_tristate $CONFIG_BLK_DEV_PDC202XX_NEW $tmpvar_dep]; set CONFIG_BLK_DEV_PDC202XX_NEW [expr $CONFIG_BLK_DEV_PDC202XX_NEW&15]}
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_PCI == 1) && ($CONFIG_BLK_DEV_IDEPCI == 1) && ($CONFIG_BLK_DEV_PDC202XX_OLD == 1 || $CONFIG_BLK_DEV_PDC202XX_OLD == 2 || $CONFIG_BLK_DEV_PDC202XX_NEW == 1 || $CONFIG_BLK_DEV_PDC202XX_NEW == 2)} then {
	set CONFIG_PDC202XX_FORCE [expr $CONFIG_PDC202XX_FORCE&15]}
	global CONFIG_BLK_DEV_RZ1000
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_PCI == 1) && ($CONFIG_BLK_DEV_IDEPCI == 1) && ($CONFIG_X86 == 1 || $CONFIG_X86 == 2 || $CONFIG_X86 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_X86]]; set CONFIG_BLK_DEV_RZ1000 [sync_tristate $CONFIG_BLK_DEV_RZ1000 $tmpvar_dep]; set CONFIG_BLK_DEV_RZ1000 [expr $CONFIG_BLK_DEV_RZ1000&15]}
	global CONFIG_BLK_DEV_SC1200
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_PCI == 1) && ($CONFIG_BLK_DEV_IDEPCI == 1) && ($CONFIG_BLK_DEV_IDEDMA_PCI == 1 || $CONFIG_BLK_DEV_IDEDMA_PCI == 2 || $CONFIG_BLK_DEV_IDEDMA_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BLK_DEV_IDEDMA_PCI]]; set CONFIG_BLK_DEV_SC1200 [sync_tristate $CONFIG_BLK_DEV_SC1200 $tmpvar_dep]; set CONFIG_BLK_DEV_SC1200 [expr $CONFIG_BLK_DEV_SC1200&15]}
	global CONFIG_BLK_DEV_SVWKS
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_PCI == 1) && ($CONFIG_BLK_DEV_IDEPCI == 1) && ($CONFIG_BLK_DEV_IDEDMA_PCI == 1 || $CONFIG_BLK_DEV_IDEDMA_PCI == 2 || $CONFIG_BLK_DEV_IDEDMA_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BLK_DEV_IDEDMA_PCI]]; set CONFIG_BLK_DEV_SVWKS [sync_tristate $CONFIG_BLK_DEV_SVWKS $tmpvar_dep]; set CONFIG_BLK_DEV_SVWKS [expr $CONFIG_BLK_DEV_SVWKS&15]}
	global CONFIG_BLK_DEV_SIIMAGE
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_PCI == 1) && ($CONFIG_BLK_DEV_IDEPCI == 1) && ($CONFIG_BLK_DEV_IDEDMA_PCI == 1 || $CONFIG_BLK_DEV_IDEDMA_PCI == 2 || $CONFIG_BLK_DEV_IDEDMA_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BLK_DEV_IDEDMA_PCI]]; set CONFIG_BLK_DEV_SIIMAGE [sync_tristate $CONFIG_BLK_DEV_SIIMAGE $tmpvar_dep]; set CONFIG_BLK_DEV_SIIMAGE [expr $CONFIG_BLK_DEV_SIIMAGE&15]}
	global CONFIG_BLK_DEV_SIS5513
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_PCI == 1) && ($CONFIG_BLK_DEV_IDEPCI == 1) && ($CONFIG_BLK_DEV_IDEDMA_PCI == 1 || $CONFIG_BLK_DEV_IDEDMA_PCI == 2 || $CONFIG_BLK_DEV_IDEDMA_PCI == 4) && ($CONFIG_X86 == 1 || $CONFIG_X86 == 2 || $CONFIG_X86 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BLK_DEV_IDEDMA_PCI $CONFIG_X86]]; set CONFIG_BLK_DEV_SIS5513 [sync_tristate $CONFIG_BLK_DEV_SIS5513 $tmpvar_dep]; set CONFIG_BLK_DEV_SIS5513 [expr $CONFIG_BLK_DEV_SIS5513&15]}
	global CONFIG_BLK_DEV_SLC90E66
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_PCI == 1) && ($CONFIG_BLK_DEV_IDEPCI == 1) && ($CONFIG_BLK_DEV_IDEDMA_PCI == 1 || $CONFIG_BLK_DEV_IDEDMA_PCI == 2 || $CONFIG_BLK_DEV_IDEDMA_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BLK_DEV_IDEDMA_PCI]]; set CONFIG_BLK_DEV_SLC90E66 [sync_tristate $CONFIG_BLK_DEV_SLC90E66 $tmpvar_dep]; set CONFIG_BLK_DEV_SLC90E66 [expr $CONFIG_BLK_DEV_SLC90E66&15]}
	global CONFIG_BLK_DEV_TRM290
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_PCI == 1) && ($CONFIG_BLK_DEV_IDEPCI == 1) && ($CONFIG_BLK_DEV_IDEDMA_PCI == 1 || $CONFIG_BLK_DEV_IDEDMA_PCI == 2 || $CONFIG_BLK_DEV_IDEDMA_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BLK_DEV_IDEDMA_PCI]]; set CONFIG_BLK_DEV_TRM290 [sync_tristate $CONFIG_BLK_DEV_TRM290 $tmpvar_dep]; set CONFIG_BLK_DEV_TRM290 [expr $CONFIG_BLK_DEV_TRM290&15]}
	global CONFIG_BLK_DEV_VIA82CXXX
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_PCI == 1) && ($CONFIG_BLK_DEV_IDEPCI == 1) && ($CONFIG_BLK_DEV_IDEDMA_PCI == 1 || $CONFIG_BLK_DEV_IDEDMA_PCI == 2 || $CONFIG_BLK_DEV_IDEDMA_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BLK_DEV_IDEDMA_PCI]]; set CONFIG_BLK_DEV_VIA82CXXX [sync_tristate $CONFIG_BLK_DEV_VIA82CXXX $tmpvar_dep]; set CONFIG_BLK_DEV_VIA82CXXX [expr $CONFIG_BLK_DEV_VIA82CXXX&15]}
	global CONFIG_ARM
	global CONFIG_BLK_DEV_SL82C105
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_PCI == 1) && ($CONFIG_BLK_DEV_IDEPCI == 1) && ($CONFIG_ARM == 1) && ($CONFIG_BLK_DEV_IDEPCI == 1 || $CONFIG_BLK_DEV_IDEPCI == 2 || $CONFIG_BLK_DEV_IDEPCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BLK_DEV_IDEPCI]]; set CONFIG_BLK_DEV_SL82C105 [sync_tristate $CONFIG_BLK_DEV_SL82C105 $tmpvar_dep]; set CONFIG_BLK_DEV_SL82C105 [expr $CONFIG_BLK_DEV_SL82C105&15]}
	global CONFIG_ARCH_ACORN
	global CONFIG_BLK_DEV_IDE_ICSIDE
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_ARCH_ACORN == 1) && ($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_ACORN == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ARCH_ACORN]];set CONFIG_BLK_DEV_IDE_ICSIDE [sync_bool $CONFIG_BLK_DEV_IDE_ICSIDE $tmpvar_dep 0];set CONFIG_BLK_DEV_IDE_ICSIDE [expr $CONFIG_BLK_DEV_IDE_ICSIDE&15]}
	global CONFIG_BLK_DEV_IDEDMA_ICS
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_ARCH_ACORN == 1) && ($CONFIG_BLK_DEV_IDE_ICSIDE == 1 || $CONFIG_BLK_DEV_IDE_ICSIDE == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BLK_DEV_IDE_ICSIDE]];set CONFIG_BLK_DEV_IDEDMA_ICS [sync_bool $CONFIG_BLK_DEV_IDEDMA_ICS $tmpvar_dep 0];set CONFIG_BLK_DEV_IDEDMA_ICS [expr $CONFIG_BLK_DEV_IDEDMA_ICS&15]}
	global CONFIG_IDEDMA_ICS_AUTO
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_ARCH_ACORN == 1) && ($CONFIG_BLK_DEV_IDEDMA_ICS == 1 || $CONFIG_BLK_DEV_IDEDMA_ICS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BLK_DEV_IDEDMA_ICS]];set CONFIG_IDEDMA_ICS_AUTO [sync_bool $CONFIG_IDEDMA_ICS_AUTO $tmpvar_dep 0];set CONFIG_IDEDMA_ICS_AUTO [expr $CONFIG_IDEDMA_ICS_AUTO&15]}
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_ARCH_ACORN == 1)} then {set CONFIG_BLK_DEV_IDEDMA $CONFIG_BLK_DEV_IDEDMA_ICS }
	global CONFIG_BLK_DEV_IDE_RAPIDE
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_ARCH_ACORN == 1) && ($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_ACORN == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ARCH_ACORN]];set CONFIG_BLK_DEV_IDE_RAPIDE [sync_bool $CONFIG_BLK_DEV_IDE_RAPIDE $tmpvar_dep 0];set CONFIG_BLK_DEV_IDE_RAPIDE [expr $CONFIG_BLK_DEV_IDE_RAPIDE&15]}
	global CONFIG_UCLINUX
	global CONFIG_BLK_DEV_UCLINUX_IDE
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_UCLINUX == 1 || $CONFIG_UCLINUX == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_UCLINUX]];set CONFIG_BLK_DEV_UCLINUX_IDE [sync_bool $CONFIG_BLK_DEV_UCLINUX_IDE $tmpvar_dep 0];set CONFIG_BLK_DEV_UCLINUX_IDE [expr $CONFIG_BLK_DEV_UCLINUX_IDE&15]}
	global tmpvar_18
	global CONFIG_IDE_8xx_PCCARD
	if {$tmpvar_18 == "8xx_PCCARD"} then {set CONFIG_IDE_8xx_PCCARD 1} else {set CONFIG_IDE_8xx_PCCARD 0}
	global CONFIG_IDE_8xx_DIRECT
	if {$tmpvar_18 == "8xx_DIRECT"} then {set CONFIG_IDE_8xx_DIRECT 1} else {set CONFIG_IDE_8xx_DIRECT 0}
	global CONFIG_IDE_EXT_DIRECT
	if {$tmpvar_18 == "EXT_DIRECT"} then {set CONFIG_IDE_EXT_DIRECT 1} else {set CONFIG_IDE_EXT_DIRECT 0}
	global CONFIG_ISA
	global CONFIG_IDE_CHIPSETS
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_ISA == 1 || $CONFIG_ISA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ISA]];set CONFIG_IDE_CHIPSETS [sync_bool $CONFIG_IDE_CHIPSETS $tmpvar_dep 0];set CONFIG_IDE_CHIPSETS [expr $CONFIG_IDE_CHIPSETS&15]}
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_IDE_CHIPSETS == 1)} then {
	set CONFIG_BLK_DEV_4DRIVES [expr $CONFIG_BLK_DEV_4DRIVES&15]}
	global CONFIG_BLK_DEV_ALI14XX
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_IDE_CHIPSETS == 1) && ($CONFIG_BLK_DEV_IDE == 1 || $CONFIG_BLK_DEV_IDE == 2 || $CONFIG_BLK_DEV_IDE == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BLK_DEV_IDE]]; set CONFIG_BLK_DEV_ALI14XX [sync_tristate $CONFIG_BLK_DEV_ALI14XX $tmpvar_dep]; set CONFIG_BLK_DEV_ALI14XX [expr $CONFIG_BLK_DEV_ALI14XX&15]}
	global CONFIG_BLK_DEV_DTC2278
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_IDE_CHIPSETS == 1) && ($CONFIG_BLK_DEV_IDE == 1 || $CONFIG_BLK_DEV_IDE == 2 || $CONFIG_BLK_DEV_IDE == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BLK_DEV_IDE]]; set CONFIG_BLK_DEV_DTC2278 [sync_tristate $CONFIG_BLK_DEV_DTC2278 $tmpvar_dep]; set CONFIG_BLK_DEV_DTC2278 [expr $CONFIG_BLK_DEV_DTC2278&15]}
	global CONFIG_BLK_DEV_HT6560B
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_IDE_CHIPSETS == 1) && ($CONFIG_BLK_DEV_IDE == 1 || $CONFIG_BLK_DEV_IDE == 2 || $CONFIG_BLK_DEV_IDE == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BLK_DEV_IDE]]; set CONFIG_BLK_DEV_HT6560B [sync_tristate $CONFIG_BLK_DEV_HT6560B $tmpvar_dep]; set CONFIG_BLK_DEV_HT6560B [expr $CONFIG_BLK_DEV_HT6560B&15]}
	global CONFIG_EXCALIBUR
	global CONFIG_BLK_DEV_OCIDEC
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_IDE_CHIPSETS == 1) && ($CONFIG_BLK_DEV_IDE == 1 || $CONFIG_BLK_DEV_IDE == 4) && ($CONFIG_EXCALIBUR == 1 || $CONFIG_EXCALIBUR == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BLK_DEV_IDE $CONFIG_EXCALIBUR]];set CONFIG_BLK_DEV_OCIDEC [sync_bool $CONFIG_BLK_DEV_OCIDEC $tmpvar_dep 0];set CONFIG_BLK_DEV_OCIDEC [expr $CONFIG_BLK_DEV_OCIDEC&15]}
	global CONFIG_BLK_DEV_PDC4030
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_IDE_CHIPSETS == 1) && ($CONFIG_BLK_DEV_IDEDISK == 1 || $CONFIG_BLK_DEV_IDEDISK == 2 || $CONFIG_BLK_DEV_IDEDISK == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BLK_DEV_IDEDISK $CONFIG_EXPERIMENTAL]]; set CONFIG_BLK_DEV_PDC4030 [sync_tristate $CONFIG_BLK_DEV_PDC4030 $tmpvar_dep]; set CONFIG_BLK_DEV_PDC4030 [expr $CONFIG_BLK_DEV_PDC4030&15]}
	global CONFIG_BLK_DEV_QD65XX
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_IDE_CHIPSETS == 1) && ($CONFIG_BLK_DEV_IDE == 1 || $CONFIG_BLK_DEV_IDE == 2 || $CONFIG_BLK_DEV_IDE == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BLK_DEV_IDE]]; set CONFIG_BLK_DEV_QD65XX [sync_tristate $CONFIG_BLK_DEV_QD65XX $tmpvar_dep]; set CONFIG_BLK_DEV_QD65XX [expr $CONFIG_BLK_DEV_QD65XX&15]}
	global CONFIG_BLK_DEV_UMC8672
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_IDE_CHIPSETS == 1) && ($CONFIG_BLK_DEV_IDE == 1 || $CONFIG_BLK_DEV_IDE == 2 || $CONFIG_BLK_DEV_IDE == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BLK_DEV_IDE]]; set CONFIG_BLK_DEV_UMC8672 [sync_tristate $CONFIG_BLK_DEV_UMC8672 $tmpvar_dep]; set CONFIG_BLK_DEV_UMC8672 [expr $CONFIG_BLK_DEV_UMC8672&15]}
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE == 0)} then {
	set CONFIG_BLK_DEV_HD_ONLY [expr $CONFIG_BLK_DEV_HD_ONLY&15]}
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE == 0)} then {set CONFIG_BLK_DEV_HD $CONFIG_BLK_DEV_HD_ONLY }
	global CONFIG_BLK_DEV_IDEDMA_PMAC_AUTO
	if {($CONFIG_IDE != 0) && ($CONFIG_IDEDMA_PCI_AUTO == 1 || $CONFIG_BLK_DEV_IDEDMA_PMAC_AUTO == 1 || $CONFIG_IDEDMA_ICS_AUTO == 1)} then {	global CONSTANT_Y
set CONFIG_IDEDMA_AUTO $CONSTANT_Y }
	if {($CONFIG_IDE != 0) && ($CONFIG_IDEDMA_PCI_AUTO != 1 && $CONFIG_BLK_DEV_IDEDMA_PMAC_AUTO != 1 && $CONFIG_IDEDMA_ICS_AUTO != 1)} then {	global CONSTANT_N
set CONFIG_IDEDMA_AUTO $CONSTANT_N }
	global CONFIG_BLK_DEV_IDEDMA_PMAC
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDEDMA_PCI == 1 || $CONFIG_BLK_DEV_IDEDMA_PMAC == 1 || $CONFIG_BLK_DEV_IDEDMA_ICS == 1)} then {
	set CONFIG_IDEDMA_IVB [expr $CONFIG_IDEDMA_IVB&15]}
	if {($CONFIG_IDE != 0)} then {	global CONSTANT_N
set CONFIG_DMA_NONPCI $CONSTANT_N }
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDEDMA_PCI == 1) && ($CONFIG_BLK_DEV_PDC202XX_OLD != 0 || $CONFIG_BLK_DEV_PDC202XX_NEW != 0)} then {	global CONSTANT_Y
set CONFIG_BLK_DEV_PDC202XX $CONSTANT_Y }
	global CONFIG_BLK_DEV_IDE_PMAC
	global CONFIG_BLK_DEV_IT8172
	global CONFIG_BLK_DEV_MPC8xx_IDE
	global CONFIG_BLK_DEV_NFORCE
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_4DRIVES == 1 || $CONFIG_BLK_DEV_ALI14XX != 0 || $CONFIG_BLK_DEV_DTC2278 != 0 || $CONFIG_BLK_DEV_HT6560B != 0 || $CONFIG_BLK_DEV_PDC4030 != 0 || $CONFIG_BLK_DEV_QD65XX != 0 || $CONFIG_BLK_DEV_UMC8672 != 0 || $CONFIG_BLK_DEV_AEC62XX == 1 || $CONFIG_BLK_DEV_ALI15X3 == 1 || $CONFIG_BLK_DEV_AMD74XX == 1 || $CONFIG_BLK_DEV_CMD640 == 1 || $CONFIG_BLK_DEV_CMD64X == 1 || $CONFIG_BLK_DEV_CS5530 == 1 || $CONFIG_BLK_DEV_CY82C693 == 1 || $CONFIG_BLK_DEV_HPT34X == 1 || $CONFIG_BLK_DEV_HPT366 == 1 || $CONFIG_BLK_DEV_IDE_PMAC == 1 || $CONFIG_BLK_DEV_OCIDEC == 1 || $CONFIG_BLK_DEV_IT8172 == 1 || $CONFIG_BLK_DEV_MPC8xx_IDE == 1 || $CONFIG_BLK_DEV_NFORCE == 1 || $CONFIG_BLK_DEV_OPTI621 == 1 || $CONFIG_BLK_DEV_SVWKS == 1 || $CONFIG_BLK_DEV_PDC202XX == 1 || $CONFIG_BLK_DEV_PIIX == 1 || $CONFIG_BLK_DEV_SVWKS == 1 || $CONFIG_BLK_DEV_SIIMAGE == 1 || $CONFIG_BLK_DEV_SIS5513 == 1 || $CONFIG_BLK_DEV_SL82C105 == 1 || $CONFIG_BLK_DEV_SLC90E66 == 1 || $CONFIG_BLK_DEV_VIA82CXXX == 1)} then {	global CONSTANT_Y
set CONFIG_BLK_DEV_IDE_MODES $CONSTANT_Y }
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_4DRIVES != 1 && $CONFIG_BLK_DEV_ALI14XX == 0 && $CONFIG_BLK_DEV_DTC2278 == 0 && $CONFIG_BLK_DEV_HT6560B == 0 && $CONFIG_BLK_DEV_PDC4030 == 0 && $CONFIG_BLK_DEV_QD65XX == 0 && $CONFIG_BLK_DEV_UMC8672 == 0 && $CONFIG_BLK_DEV_AEC62XX != 1 && $CONFIG_BLK_DEV_ALI15X3 != 1 && $CONFIG_BLK_DEV_AMD74XX != 1 && $CONFIG_BLK_DEV_CMD640 != 1 && $CONFIG_BLK_DEV_CMD64X != 1 && $CONFIG_BLK_DEV_CS5530 != 1 && $CONFIG_BLK_DEV_CY82C693 != 1 && $CONFIG_BLK_DEV_HPT34X != 1 && $CONFIG_BLK_DEV_HPT366 != 1 && $CONFIG_BLK_DEV_IDE_PMAC != 1 && $CONFIG_BLK_DEV_OCIDEC != 1 && $CONFIG_BLK_DEV_IT8172 != 1 && $CONFIG_BLK_DEV_MPC8xx_IDE != 1 && $CONFIG_BLK_DEV_NFORCE != 1 && $CONFIG_BLK_DEV_OPTI621 != 1 && $CONFIG_BLK_DEV_SVWKS != 1 && $CONFIG_BLK_DEV_PDC202XX != 1 && $CONFIG_BLK_DEV_PIIX != 1 && $CONFIG_BLK_DEV_SVWKS != 1 && $CONFIG_BLK_DEV_SIIMAGE != 1 && $CONFIG_BLK_DEV_SIS5513 != 1 && $CONFIG_BLK_DEV_SL82C105 != 1 && $CONFIG_BLK_DEV_SLC90E66 != 1 && $CONFIG_BLK_DEV_VIA82CXXX != 1)} then {	global CONSTANT_N
set CONFIG_BLK_DEV_IDE_MODES $CONSTANT_N }
	global CONFIG_BLK_DEV_ATARAID
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE == 1 || $CONFIG_BLK_DEV_IDE == 2 || $CONFIG_BLK_DEV_IDE == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BLK_DEV_IDE $CONFIG_EXPERIMENTAL]]; set CONFIG_BLK_DEV_ATARAID [sync_tristate $CONFIG_BLK_DEV_ATARAID $tmpvar_dep]; set CONFIG_BLK_DEV_ATARAID [expr $CONFIG_BLK_DEV_ATARAID&15]}
	global CONFIG_BLK_DEV_ATARAID_PDC
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE == 1 || $CONFIG_BLK_DEV_IDE == 2 || $CONFIG_BLK_DEV_IDE == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4) && ($CONFIG_BLK_DEV_ATARAID == 1 || $CONFIG_BLK_DEV_ATARAID == 2 || $CONFIG_BLK_DEV_ATARAID == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BLK_DEV_IDE $CONFIG_EXPERIMENTAL $CONFIG_BLK_DEV_ATARAID]]; set CONFIG_BLK_DEV_ATARAID_PDC [sync_tristate $CONFIG_BLK_DEV_ATARAID_PDC $tmpvar_dep]; set CONFIG_BLK_DEV_ATARAID_PDC [expr $CONFIG_BLK_DEV_ATARAID_PDC&15]}
	global CONFIG_BLK_DEV_ATARAID_HPT
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE == 1 || $CONFIG_BLK_DEV_IDE == 2 || $CONFIG_BLK_DEV_IDE == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4) && ($CONFIG_BLK_DEV_ATARAID == 1 || $CONFIG_BLK_DEV_ATARAID == 2 || $CONFIG_BLK_DEV_ATARAID == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BLK_DEV_IDE $CONFIG_EXPERIMENTAL $CONFIG_BLK_DEV_ATARAID]]; set CONFIG_BLK_DEV_ATARAID_HPT [sync_tristate $CONFIG_BLK_DEV_ATARAID_HPT $tmpvar_dep]; set CONFIG_BLK_DEV_ATARAID_HPT [expr $CONFIG_BLK_DEV_ATARAID_HPT&15]}
	global CONFIG_BLK_DEV_ATARAID_SII
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE == 1 || $CONFIG_BLK_DEV_IDE == 2 || $CONFIG_BLK_DEV_IDE == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4) && ($CONFIG_BLK_DEV_ATARAID == 1 || $CONFIG_BLK_DEV_ATARAID == 2 || $CONFIG_BLK_DEV_ATARAID == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BLK_DEV_IDE $CONFIG_EXPERIMENTAL $CONFIG_BLK_DEV_ATARAID]]; set CONFIG_BLK_DEV_ATARAID_SII [sync_tristate $CONFIG_BLK_DEV_ATARAID_SII $tmpvar_dep]; set CONFIG_BLK_DEV_ATARAID_SII [expr $CONFIG_BLK_DEV_ATARAID_SII&15]}
}


menu_option menu48 48 "SCSI support"
proc menu48 {w title} {
	set oldFocus [focus]
	catch {destroy $w; unregister_active 48}
	toplevel $w -class Dialog
	wm withdraw $w
	global active_menus
	set active_menus [lsort -integer [linsert $active_menus end 48]]
	message $w.m -width 400 -aspect 300 -text \
		"SCSI support"  -relief raised
	pack $w.m -pady 10 -side top -padx 10
	wm title $w "SCSI support" 

	bind $w <Escape> "catch {focus $oldFocus}; destroy $w; unregister_active 48; break"
	set nextscript "catch {focus $oldFocus}; menu49 .menu49 \"$title\""
	frame $w.f
	button $w.f.back -text "Main Menu" \
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 48"
	button $w.f.next -text "Next" -underline 0\
		-width 15 -command $nextscript
	bind all <Alt-n> $nextscript
	button $w.f.prev -text "Prev" -underline 0\
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 48; menu47 .menu47 \"$title\""
	bind $w <Alt-p> "catch {focus $oldFocus}; destroy $w; unregister_active 48; menu47 .menu47 \"$title\";break"
	pack $w.f.back $w.f.next $w.f.prev -side left -expand on
	pack $w.f -pady 10 -side bottom -anchor w -fill x
	frame $w.topline -relief ridge -borderwidth 2 -height 2
	pack $w.topline -side top -fill x

	frame $w.botline -relief ridge -borderwidth 2 -height 2
	pack $w.botline -side bottom -fill x

	frame $w.config
	pack $w.config -fill y -expand on

	scrollbar $w.config.vscroll -command "$w.config.canvas yview"
	pack $w.config.vscroll -side right -fill y

	canvas $w.config.canvas -height 1\
		-relief flat -borderwidth 0 -yscrollcommand "$w.config.vscroll set" \
		-width [expr [winfo screenwidth .] * 1 / 2] 
	frame $w.config.f
	bind $w <Key-Down> "$w.config.canvas yview scroll  1 unit;break;"
	bind $w <Key-Up> "$w.config.canvas yview scroll  -1 unit;break;"
	bind $w <Key-Next> "$w.config.canvas yview scroll  1 page;break;"
	bind $w <Key-Prior> "$w.config.canvas yview scroll  -1 page;break;"
	bind $w <Key-Home> "$w.config.canvas yview moveto 0;break;"
	bind $w <Key-End> "$w.config.canvas yview moveto 1 ;break;"
	pack $w.config.canvas -side right -fill y


	tristate $w.config.f 48 0 "SCSI support" CONFIG_SCSI
	comment $w.config.f 48 1 "SCSI support type (disk, tape, CD-ROM)"
	dep_tristate $w.config.f 48 2 "  SCSI disk support" CONFIG_BLK_DEV_SD
	int $w.config.f 48 3 "Maximum number of SCSI disks that can be loaded as modules" CONFIG_SD_EXTRA_DEVS
	dep_tristate $w.config.f 48 4 "  SCSI tape support" CONFIG_CHR_DEV_ST
	dep_tristate $w.config.f 48 5 "  SCSI OnStream SC-x0 tape support" CONFIG_CHR_DEV_OSST
	dep_tristate $w.config.f 48 6 "  SCSI CD-ROM support" CONFIG_BLK_DEV_SR
	bool $w.config.f 48 7 "    Enable vendor-specific extensions (for SCSI CDROM)" CONFIG_BLK_DEV_SR_VENDOR
	int $w.config.f 48 8 "Maximum number of CDROM devices that can be loaded as modules" CONFIG_SR_EXTRA_DEVS
	dep_tristate $w.config.f 48 9 "  SCSI generic support" CONFIG_CHR_DEV_SG
	comment $w.config.f 48 10 "Some SCSI devices (e.g. CD jukebox) support multiple LUNs"
	bool $w.config.f 48 11 "  Enable extra checks in new queueing code" CONFIG_SCSI_DEBUG_QUEUES
	bool $w.config.f 48 12 "  Probe all LUNs on each SCSI device" CONFIG_SCSI_MULTI_LUN
	bool $w.config.f 48 13 "  Verbose SCSI error reporting (kernel size +=12K)" CONFIG_SCSI_CONSTANTS
	bool $w.config.f 48 14 "  SCSI logging facility" CONFIG_SCSI_LOGGING
	submenu $w.config.f 48 15 "SCSI low-level drivers" 49
	submenu $w.config.f 48 16 "PCMCIA SCSI adapter support" 50



	focus $w
	update_active
	global winx; global winy
	set winx [expr [winfo x .]+30]; set winy [expr [winfo y .]+30]
	if {[winfo exists $w]} then {wm geometry $w +$winx+$winy}
	update idletasks
	if {[winfo exists $w]} then  {$w.config.canvas create window 0 0 -anchor nw -window $w.config.f

	$w.config.canvas configure \
		-width [expr [winfo reqwidth $w.config.f] + 1]\
		-scrollregion "-1 -1 [expr [winfo reqwidth $w.config.f] + 1] \
			 [expr [winfo reqheight $w.config.f] + 1]"

	set winy [expr [winfo reqh $w] - [winfo reqh $w.config.canvas]]
	set scry [expr [winfo screenh $w] / 2]
	set maxy [expr [winfo screenh $w] * 3 / 4]
	set canvtotal [expr [winfo reqh $w.config.f] + 2]
	if [expr $winy + $canvtotal < $maxy] {
		$w.config.canvas configure -height $canvtotal
	} else {
		$w.config.canvas configure -height [expr $scry - $winy]
		}
	}
	update idletasks
	if {[winfo exists $w]} then {
	wm maxsize $w [winfo width $w] [winfo screenheight $w]
	wm minsize $w [winfo width $w] 100

	wm deiconify $w
}
}

proc update_menu48 {} {
	global CONFIG_SCSI
	global CONFIG_MODULES

	if {($CONFIG_MODULES == 1)} then {configure_entry .menu48.config.f.x0 normal {m}} else {configure_entry .menu48.config.f.x0 disabled {m}}
	if {($CONFIG_SCSI != 0)} then {configure_entry .menu48.config.f.x1 normal {m}} else {configure_entry .menu48.config.f.x1 disabled {m}}
	global CONFIG_BLK_DEV_SD
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCSI]];set CONFIG_BLK_DEV_SD [sync_tristate $CONFIG_BLK_DEV_SD $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu48.config.f.x2 disabled {y}} else {configure_entry .menu48.config.f.x2 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu48.config.f.x2 disabled {m}} else {configure_entry .menu48.config.f.x2 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu48.config.f.x2 normal {m}} else {configure_entry .menu48.config.f.x2 disabled {m}}; configure_entry .menu48.config.f.x2 normal {n l}} else {configure_entry .menu48.config.f.x2 disabled {y n m l}}
	global CONFIG_SD_EXTRA_DEVS
	if {($CONFIG_SCSI != 0) && ($CONFIG_BLK_DEV_SD != 0)} then {.menu48.config.f.x3.x configure -state normal -foreground [ cget .ref -foreground ]; .menu48.config.f.x3.l configure -state normal; } else {.menu48.config.f.x3.x configure -state disabled -foreground [ cget .ref -disabledforeground ]; .menu48.config.f.x3.l configure -state disabled}
	global CONFIG_CHR_DEV_ST
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCSI]];set CONFIG_CHR_DEV_ST [sync_tristate $CONFIG_CHR_DEV_ST $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu48.config.f.x4 disabled {y}} else {configure_entry .menu48.config.f.x4 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu48.config.f.x4 disabled {m}} else {configure_entry .menu48.config.f.x4 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu48.config.f.x4 normal {m}} else {configure_entry .menu48.config.f.x4 disabled {m}}; configure_entry .menu48.config.f.x4 normal {n l}} else {configure_entry .menu48.config.f.x4 disabled {y n m l}}
	global CONFIG_CHR_DEV_OSST
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCSI]];set CONFIG_CHR_DEV_OSST [sync_tristate $CONFIG_CHR_DEV_OSST $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu48.config.f.x5 disabled {y}} else {configure_entry .menu48.config.f.x5 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu48.config.f.x5 disabled {m}} else {configure_entry .menu48.config.f.x5 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu48.config.f.x5 normal {m}} else {configure_entry .menu48.config.f.x5 disabled {m}}; configure_entry .menu48.config.f.x5 normal {n l}} else {configure_entry .menu48.config.f.x5 disabled {y n m l}}
	global CONFIG_BLK_DEV_SR
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCSI]];set CONFIG_BLK_DEV_SR [sync_tristate $CONFIG_BLK_DEV_SR $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu48.config.f.x6 disabled {y}} else {configure_entry .menu48.config.f.x6 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu48.config.f.x6 disabled {m}} else {configure_entry .menu48.config.f.x6 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu48.config.f.x6 normal {m}} else {configure_entry .menu48.config.f.x6 disabled {m}}; configure_entry .menu48.config.f.x6 normal {n l}} else {configure_entry .menu48.config.f.x6 disabled {y n m l}}
	global CONFIG_BLK_DEV_SR_VENDOR
	if {($CONFIG_SCSI != 0) && ($CONFIG_BLK_DEV_SR != 0)} then {
	configure_entry .menu48.config.f.x7 normal {n l y}} else {configure_entry .menu48.config.f.x7 disabled {y n l}}
	global CONFIG_SR_EXTRA_DEVS
	if {($CONFIG_SCSI != 0) && ($CONFIG_BLK_DEV_SR != 0)} then {.menu48.config.f.x8.x configure -state normal -foreground [ cget .ref -foreground ]; .menu48.config.f.x8.l configure -state normal; } else {.menu48.config.f.x8.x configure -state disabled -foreground [ cget .ref -disabledforeground ]; .menu48.config.f.x8.l configure -state disabled}
	global CONFIG_CHR_DEV_SG
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCSI]];set CONFIG_CHR_DEV_SG [sync_tristate $CONFIG_CHR_DEV_SG $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu48.config.f.x9 disabled {y}} else {configure_entry .menu48.config.f.x9 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu48.config.f.x9 disabled {m}} else {configure_entry .menu48.config.f.x9 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu48.config.f.x9 normal {m}} else {configure_entry .menu48.config.f.x9 disabled {m}}; configure_entry .menu48.config.f.x9 normal {n l}} else {configure_entry .menu48.config.f.x9 disabled {y n m l}}
	if {($CONFIG_SCSI != 0)} then {configure_entry .menu48.config.f.x10 normal {m}} else {configure_entry .menu48.config.f.x10 disabled {m}}
	global CONFIG_SCSI_DEBUG_QUEUES
	if {($CONFIG_SCSI != 0)} then {
	configure_entry .menu48.config.f.x11 normal {n l y}} else {configure_entry .menu48.config.f.x11 disabled {y n l}}
	global CONFIG_SCSI_MULTI_LUN
	if {($CONFIG_SCSI != 0)} then {
	configure_entry .menu48.config.f.x12 normal {n l y}} else {configure_entry .menu48.config.f.x12 disabled {y n l}}
	global CONFIG_SCSI_CONSTANTS
	if {($CONFIG_SCSI != 0)} then {
	configure_entry .menu48.config.f.x13 normal {n l y}} else {configure_entry .menu48.config.f.x13 disabled {y n l}}
	global CONFIG_SCSI_LOGGING
	if {($CONFIG_SCSI != 0)} then {
	configure_entry .menu48.config.f.x14 normal {n l y}} else {configure_entry .menu48.config.f.x14 disabled {y n l}}
	if {($CONFIG_SCSI != 0)} then {configure_entry .menu48.config.f.x15 normal {m}} else {configure_entry .menu48.config.f.x15 disabled {m}}
	global CONFIG_HOTPLUG
	global CONFIG_PCMCIA
	if {($CONFIG_SCSI != 0) && ($CONFIG_HOTPLUG == 1 && $CONFIG_PCMCIA != 0)} then {configure_entry .menu48.config.f.x16 normal {m}} else {configure_entry .menu48.config.f.x16 disabled {m}}
}


proc update_define_menu48 {} {
	update_define_mainmenu
	global CONFIG_MODULES
	global CONFIG_SCSI
	global CONFIG_BLK_DEV_SR_VENDOR
set CONFIG_BLK_DEV_SR_VENDOR [expr $CONFIG_BLK_DEV_SR_VENDOR|16]
	global CONFIG_SCSI_DEBUG_QUEUES
set CONFIG_SCSI_DEBUG_QUEUES [expr $CONFIG_SCSI_DEBUG_QUEUES|16]
	global CONFIG_SCSI_MULTI_LUN
set CONFIG_SCSI_MULTI_LUN [expr $CONFIG_SCSI_MULTI_LUN|16]
	global CONFIG_SCSI_CONSTANTS
set CONFIG_SCSI_CONSTANTS [expr $CONFIG_SCSI_CONSTANTS|16]
	global CONFIG_SCSI_LOGGING
set CONFIG_SCSI_LOGGING [expr $CONFIG_SCSI_LOGGING|16]

	if {($CONFIG_MODULES == 0)} then {if {($CONFIG_SCSI == 2)} then {set CONFIG_SCSI 1}}
	global CONFIG_BLK_DEV_SD
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCSI]]; set CONFIG_BLK_DEV_SD [sync_tristate $CONFIG_BLK_DEV_SD $tmpvar_dep]; set CONFIG_BLK_DEV_SD [expr $CONFIG_BLK_DEV_SD&15]}
	global CONFIG_SD_EXTRA_DEVS
	if {($CONFIG_SCSI != 0) && ($CONFIG_BLK_DEV_SD != 0)} then {validate_int CONFIG_SD_EXTRA_DEVS "$CONFIG_SD_EXTRA_DEVS" 40}
	global CONFIG_CHR_DEV_ST
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCSI]]; set CONFIG_CHR_DEV_ST [sync_tristate $CONFIG_CHR_DEV_ST $tmpvar_dep]; set CONFIG_CHR_DEV_ST [expr $CONFIG_CHR_DEV_ST&15]}
	global CONFIG_CHR_DEV_OSST
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCSI]]; set CONFIG_CHR_DEV_OSST [sync_tristate $CONFIG_CHR_DEV_OSST $tmpvar_dep]; set CONFIG_CHR_DEV_OSST [expr $CONFIG_CHR_DEV_OSST&15]}
	global CONFIG_BLK_DEV_SR
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCSI]]; set CONFIG_BLK_DEV_SR [sync_tristate $CONFIG_BLK_DEV_SR $tmpvar_dep]; set CONFIG_BLK_DEV_SR [expr $CONFIG_BLK_DEV_SR&15]}
	if {($CONFIG_SCSI != 0) && ($CONFIG_BLK_DEV_SR != 0)} then {
	set CONFIG_BLK_DEV_SR_VENDOR [expr $CONFIG_BLK_DEV_SR_VENDOR&15]}
	global CONFIG_SR_EXTRA_DEVS
	if {($CONFIG_SCSI != 0) && ($CONFIG_BLK_DEV_SR != 0)} then {validate_int CONFIG_SR_EXTRA_DEVS "$CONFIG_SR_EXTRA_DEVS" 2}
	global CONFIG_CHR_DEV_SG
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCSI]]; set CONFIG_CHR_DEV_SG [sync_tristate $CONFIG_CHR_DEV_SG $tmpvar_dep]; set CONFIG_CHR_DEV_SG [expr $CONFIG_CHR_DEV_SG&15]}
	if {($CONFIG_SCSI != 0)} then {
	set CONFIG_SCSI_DEBUG_QUEUES [expr $CONFIG_SCSI_DEBUG_QUEUES&15]}
	if {($CONFIG_SCSI != 0)} then {
	set CONFIG_SCSI_MULTI_LUN [expr $CONFIG_SCSI_MULTI_LUN&15]}
	if {($CONFIG_SCSI != 0)} then {
	set CONFIG_SCSI_CONSTANTS [expr $CONFIG_SCSI_CONSTANTS&15]}
	if {($CONFIG_SCSI != 0)} then {
	set CONFIG_SCSI_LOGGING [expr $CONFIG_SCSI_LOGGING&15]}
}


proc menu49 {w title} {
	set oldFocus [focus]
	catch {focus .menu48}
	catch {destroy $w; unregister_active 49}
	toplevel $w -class Dialog
	wm withdraw $w
	global active_menus
	set active_menus [lsort -integer [linsert $active_menus end 49]]
	message $w.m -width 400 -aspect 300 -text \
		"SCSI low-level drivers"  -relief raised
	pack $w.m -pady 10 -side top -padx 10
	wm title $w "SCSI low-level drivers" 

	bind $w <Escape> "catch {focus $oldFocus}; destroy $w; unregister_active 49; break"
	set nextscript "catch {focus $oldFocus}; destroy $w; unregister_active 49; menu50 .menu50 \"$title\""
	frame $w.f
	button $w.f.back -text "OK" \
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 49"
	button $w.f.next -text "Next" -underline 0\
		-width 15 -command $nextscript
	bind all <Alt-n> $nextscript
	button $w.f.prev -text "Prev" -underline 0\
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 49; menu48 .menu48 \"$title\""
	bind $w <Alt-p> "catch {focus $oldFocus}; destroy $w; unregister_active 49; menu48 .menu48 \"$title\";break"
	pack $w.f.back $w.f.next $w.f.prev -side left -expand on
	pack $w.f -pady 10 -side bottom -anchor w -fill x
	frame $w.topline -relief ridge -borderwidth 2 -height 2
	pack $w.topline -side top -fill x

	frame $w.botline -relief ridge -borderwidth 2 -height 2
	pack $w.botline -side bottom -fill x

	frame $w.config
	pack $w.config -fill y -expand on

	scrollbar $w.config.vscroll -command "$w.config.canvas yview"
	pack $w.config.vscroll -side right -fill y

	canvas $w.config.canvas -height 1\
		-relief flat -borderwidth 0 -yscrollcommand "$w.config.vscroll set" \
		-width [expr [winfo screenwidth .] * 1 / 2] 
	frame $w.config.f
	bind $w <Key-Down> "$w.config.canvas yview scroll  1 unit;break;"
	bind $w <Key-Up> "$w.config.canvas yview scroll  -1 unit;break;"
	bind $w <Key-Next> "$w.config.canvas yview scroll  1 page;break;"
	bind $w <Key-Prior> "$w.config.canvas yview scroll  -1 page;break;"
	bind $w <Key-Home> "$w.config.canvas yview moveto 0;break;"
	bind $w <Key-End> "$w.config.canvas yview moveto 1 ;break;"
	pack $w.config.canvas -side right -fill y


	dep_tristate $w.config.f 49 0 "3ware Hardware ATA-RAID support" CONFIG_BLK_DEV_3W_XXXX_RAID
	dep_tristate $w.config.f 49 1 "7000FASST SCSI support" CONFIG_SCSI_7000FASST
	dep_tristate $w.config.f 49 2 "ACARD SCSI support" CONFIG_SCSI_ACARD
	dep_tristate $w.config.f 49 3 "Adaptec AHA152X/2825 support" CONFIG_SCSI_AHA152X
	dep_tristate $w.config.f 49 4 "Adaptec AHA1542 support" CONFIG_SCSI_AHA1542
	dep_tristate $w.config.f 49 5 "Adaptec AHA1740 support" CONFIG_SCSI_AHA1740
	dep_tristate $w.config.f 49 6 "Adaptec AACRAID support (EXPERIMENTAL)" CONFIG_SCSI_AACRAID
	dep_tristate $w.config.f 49 7 "Adaptec AIC7xxx support" CONFIG_SCSI_AIC7XXX
	int $w.config.f 49 8 "  Maximum number of TCQ commands per device" CONFIG_AIC7XXX_CMDS_PER_DEVICE
	int $w.config.f 49 9 "  Initial bus reset delay in milli-seconds" CONFIG_AIC7XXX_RESET_DELAY_MS
	bool $w.config.f 49 10 "  Probe for EISA and VL AIC7XXX Adapters" CONFIG_AIC7XXX_PROBE_EISA_VL
	bool $w.config.f 49 11 "  Build Adapter Firmware with Kernel Build" CONFIG_AIC7XXX_BUILD_FIRMWARE
	bool $w.config.f 49 12 "  Compile in Debugging Code" CONFIG_AIC7XXX_DEBUG_ENABLE
	int $w.config.f 49 13 "  Debug code enable mask (2048 for all debugging)" CONFIG_AIC7XXX_DEBUG_MASK
	bool $w.config.f 49 14 "  Decode registers during diagnostics" CONFIG_AIC7XXX_REG_PRETTY_PRINT
	dep_tristate $w.config.f 49 15 "Adaptec AIC79xx support" CONFIG_SCSI_AIC79XX
	int $w.config.f 49 16 "  Maximum number of TCQ commands per device" CONFIG_AIC79XX_CMDS_PER_DEVICE
	int $w.config.f 49 17 "  Initial bus reset delay in milli-seconds" CONFIG_AIC79XX_RESET_DELAY_MS
	bool $w.config.f 49 18 "  Build Adapter Firmware with Kernel Build" CONFIG_AIC79XX_BUILD_FIRMWARE
	bool $w.config.f 49 19 "  Enable Read Streaming for All Targets" CONFIG_AIC79XX_ENABLE_RD_STRM
	bool $w.config.f 49 20 "  Compile in Debugging Code" CONFIG_AIC79XX_DEBUG_ENABLE
	int $w.config.f 49 21 "  Debug code enable mask (16384 for all debugging)" CONFIG_AIC79XX_DEBUG_MASK
	bool $w.config.f 49 22 "  Decode registers during diagnostics" CONFIG_AIC79XX_REG_PRETTY_PRINT
	dep_tristate $w.config.f 49 23 "Old Adaptec AIC7xxx support" CONFIG_SCSI_AIC7XXX_OLD
	bool $w.config.f 49 24 "  Enable Tagged Command Queueing (TCQ) by default" CONFIG_AIC7XXX_OLD_TCQ_ON_BY_DEFAULT
	int $w.config.f 49 25 "  Maximum number of TCQ commands per device" CONFIG_AIC7XXX_OLD_CMDS_PER_DEVICE
	bool $w.config.f 49 26 "  Collect statistics to report in /proc" CONFIG_AIC7XXX_OLD_PROC_STATS
	dep_tristate $w.config.f 49 27 "Adaptec I2O RAID support " CONFIG_SCSI_DPT_I2O
	dep_tristate $w.config.f 49 28 "AdvanSys SCSI support" CONFIG_SCSI_ADVANSYS
	dep_tristate $w.config.f 49 29 "Always IN2000 SCSI support" CONFIG_SCSI_IN2000
	dep_tristate $w.config.f 49 30 "AM53/79C974 PCI SCSI support" CONFIG_SCSI_AM53C974
	dep_tristate $w.config.f 49 31 "AMI MegaRAID support" CONFIG_SCSI_MEGARAID
	dep_tristate $w.config.f 49 32 "AMI MegaRAID2 support" CONFIG_SCSI_MEGARAID2
	dep_tristate $w.config.f 49 33 "BusLogic SCSI support" CONFIG_SCSI_BUSLOGIC
	bool $w.config.f 49 34 "  Omit FlashPoint support" CONFIG_SCSI_OMIT_FLASHPOINT
	dep_tristate $w.config.f 49 35 "Compaq Fibre Channel 64-bit/66Mhz HBA support" CONFIG_SCSI_CPQFCTS
	dep_tristate $w.config.f 49 36 "DMX3191D SCSI support" CONFIG_SCSI_DMX3191D
	dep_tristate $w.config.f 49 37 "DTC3180/3280 SCSI support" CONFIG_SCSI_DTC3280
	dep_tristate $w.config.f 49 38 "EATA ISA/EISA/PCI (DPT and generic EATA/DMA-compliant boards) support" CONFIG_SCSI_EATA
	bool $w.config.f 49 39 "  enable tagged command queueing" CONFIG_SCSI_EATA_TAGGED_QUEUE
	bool $w.config.f 49 40 "  enable elevator sorting" CONFIG_SCSI_EATA_LINKED_COMMANDS
	int $w.config.f 49 41 "  maximum number of queued commands" CONFIG_SCSI_EATA_MAX_TAGS
	dep_tristate $w.config.f 49 42 "EATA-DMA \[Obsolete\] (DPT, NEC, AT&T, SNI, AST, Olivetti, Alphatronix) support" CONFIG_SCSI_EATA_DMA
	dep_tristate $w.config.f 49 43 "EATA-PIO (old DPT PM2001, PM2012A) support" CONFIG_SCSI_EATA_PIO
	dep_tristate $w.config.f 49 44 "Future Domain 16xx SCSI/AHA-2920A support" CONFIG_SCSI_FUTURE_DOMAIN
	dep_tristate $w.config.f 49 45 "Future Domain MCS-600/700 SCSI support" CONFIG_SCSI_FD_MCS
	dep_tristate $w.config.f 49 46 "Intel/ICP (former GDT SCSI Disk Array) RAID Controller support" CONFIG_SCSI_GDTH
	dep_tristate $w.config.f 49 47 "Generic NCR5380/53c400 SCSI support" CONFIG_SCSI_GENERIC_NCR5380
	bool $w.config.f 49 48 "  Enable NCR53c400 extensions" CONFIG_SCSI_GENERIC_NCR53C400
	global tmpvar_19
	minimenu $w.config.f 49 49 "NCR5380/53c400 mapping method (use Port for T130B)" tmpvar_19 CONFIG_SCSI_G_NCR5380_PORT
	menu $w.config.f.x49.x.menu -tearoffcommand "menutitle \"NCR5380/53c400 mapping method (use Port for T130B)\""
	$w.config.f.x49.x.menu add radiobutton -label "Port" -variable tmpvar_19 -value "Port" -command "update_active"
	$w.config.f.x49.x.menu add radiobutton -label "Memory" -variable tmpvar_19 -value "Memory" -command "update_active"
	menusplit $w $w.config.f.x49.x.menu 2
	dep_tristate $w.config.f 49 50 "IBMMCA SCSI support" CONFIG_SCSI_IBMMCA
	bool $w.config.f 49 51 "  Standard SCSI-order" CONFIG_IBMMCA_SCSI_ORDER_STANDARD
	bool $w.config.f 49 52 "  Reset SCSI-devices at boottime" CONFIG_IBMMCA_SCSI_DEV_RESET
	dep_tristate $w.config.f 49 53 "Initio 9100U(W) support" CONFIG_SCSI_INITIO
	dep_tristate $w.config.f 49 54 "Initio INI-A100U2W support" CONFIG_SCSI_INIA100
	dep_tristate $w.config.f 49 55 "IOMEGA parallel port (ppa - older drives)" CONFIG_SCSI_PPA
	dep_tristate $w.config.f 49 56 "IOMEGA parallel port (imm - newer drives)" CONFIG_SCSI_IMM
	bool $w.config.f 49 57 "  ppa/imm option - Use slow (but safe) EPP-16" CONFIG_SCSI_IZIP_EPP16
	bool $w.config.f 49 58 "  ppa/imm option - Assume slow parport control register" CONFIG_SCSI_IZIP_SLOW_CTR
	dep_tristate $w.config.f 49 59 "NCR53c406a SCSI support" CONFIG_SCSI_NCR53C406A
	dep_tristate $w.config.f 49 60 "NCR Dual 700 MCA SCSI support" CONFIG_SCSI_NCR_D700
	dep_tristate $w.config.f 49 61 "NCR53c7,8xx SCSI support" CONFIG_SCSI_NCR53C7xx
	bool $w.config.f 49 62 "  always negotiate synchronous transfers" CONFIG_SCSI_NCR53C7xx_sync
	bool $w.config.f 49 63 "  allow FAST-SCSI \[10MHz\]" CONFIG_SCSI_NCR53C7xx_FAST
	bool $w.config.f 49 64 "  allow DISCONNECT" CONFIG_SCSI_NCR53C7xx_DISCONNECT
	dep_tristate $w.config.f 49 65 "SYM53C8XX Version 2 SCSI support" CONFIG_SCSI_SYM53C8XX_2
	int $w.config.f 49 66 "  DMA addressing mode" CONFIG_SCSI_SYM53C8XX_DMA_ADDRESSING_MODE
	int $w.config.f 49 67 "  default tagged command queue depth" CONFIG_SCSI_SYM53C8XX_DEFAULT_TAGS
	int $w.config.f 49 68 "  maximum number of queued commands" CONFIG_SCSI_SYM53C8XX_MAX_TAGS
	bool $w.config.f 49 69 "  use normal IO" CONFIG_SCSI_SYM53C8XX_IOMAPPED
	dep_tristate $w.config.f 49 70 "NCR53C8XX SCSI support" CONFIG_SCSI_NCR53C8XX
	dep_tristate $w.config.f 49 71 "SYM53C8XX SCSI support" CONFIG_SCSI_SYM53C8XX
	int $w.config.f 49 72 "  default tagged command queue depth" CONFIG_SCSI_NCR53C8XX_DEFAULT_TAGS
	int $w.config.f 49 73 "  maximum number of queued commands" CONFIG_SCSI_NCR53C8XX_MAX_TAGS
	int $w.config.f 49 74 "  synchronous transfers frequency in MHz" CONFIG_SCSI_NCR53C8XX_SYNC
	bool $w.config.f 49 75 "  enable profiling" CONFIG_SCSI_NCR53C8XX_PROFILE
	bool $w.config.f 49 76 "  use normal IO" CONFIG_SCSI_NCR53C8XX_IOMAPPED
	bool $w.config.f 49 77 "  include support for the NCR PQS/PDS SCSI card" CONFIG_SCSI_NCR53C8XX_PQS_PDS
	bool $w.config.f 49 78 "  not allow targets to disconnect" CONFIG_SCSI_NCR53C8XX_NO_DISCONNECT
	bool $w.config.f 49 79 "  assume boards are SYMBIOS compatible (EXPERIMENTAL)" CONFIG_SCSI_NCR53C8XX_SYMBIOS_COMPAT
	dep_tristate $w.config.f 49 80 "NCR MCA 53C9x SCSI support" CONFIG_SCSI_MCA_53C9X
	dep_tristate $w.config.f 49 81 "PAS16 SCSI support" CONFIG_SCSI_PAS16
	dep_tristate $w.config.f 49 82 "PCI2000 support" CONFIG_SCSI_PCI2000
	dep_tristate $w.config.f 49 83 "PCI2220i support" CONFIG_SCSI_PCI2220I
	dep_tristate $w.config.f 49 84 "PSI240i support" CONFIG_SCSI_PSI240I
	dep_tristate $w.config.f 49 85 "Qlogic FAS SCSI support" CONFIG_SCSI_QLOGIC_FAS
	dep_tristate $w.config.f 49 86 "Qlogic ISP SCSI support" CONFIG_SCSI_QLOGIC_ISP
	dep_tristate $w.config.f 49 87 "Qlogic ISP FC SCSI support" CONFIG_SCSI_QLOGIC_FC
	bool $w.config.f 49 88 "   Include loadable firmware in driver" CONFIG_SCSI_QLOGIC_FC_FIRMWARE
	dep_tristate $w.config.f 49 89 "Qlogic QLA 1280 SCSI support" CONFIG_SCSI_QLOGIC_1280
	dep_tristate $w.config.f 49 90 "Simple 53c710 SCSI support (Compaq, NCR machines)" CONFIG_SCSI_SIM710
	dep_tristate $w.config.f 49 91 "Symbios 53c416 SCSI support" CONFIG_SCSI_SYM53C416
	dep_tristate $w.config.f 49 92 "Tekram DC390(T) and Am53/79C974 SCSI support" CONFIG_SCSI_DC390T
	bool $w.config.f 49 93 "  _omit_ support for non-DC390 adapters" CONFIG_SCSI_DC390T_NOGENSUPP
	dep_tristate $w.config.f 49 94 "Trantor T128/T128F/T228 SCSI support" CONFIG_SCSI_T128
	dep_tristate $w.config.f 49 95 "UltraStor 14F/34F support" CONFIG_SCSI_U14_34F
	bool $w.config.f 49 96 "  enable elevator sorting" CONFIG_SCSI_U14_34F_LINKED_COMMANDS
	int $w.config.f 49 97 "  maximum number of queued commands" CONFIG_SCSI_U14_34F_MAX_TAGS
	dep_tristate $w.config.f 49 98 "Workbit NinjaSCSI-32Bi/UDE support" CONFIG_SCSI_NSP32
	dep_tristate $w.config.f 49 99 "SCSI debugging host simulator (EXPERIMENTAL)" CONFIG_SCSI_DEBUG
	dep_tristate $w.config.f 49 100 "Acorn SCSI card (aka30) support" CONFIG_SCSI_ACORNSCSI_3
	bool $w.config.f 49 101 "  Support SCSI 2 Tagged queueing" CONFIG_SCSI_ACORNSCSI_TAGGED_QUEUE
	bool $w.config.f 49 102 "  Support SCSI 2 Synchronous Transfers" CONFIG_SCSI_ACORNSCSI_SYNC
	dep_tristate $w.config.f 49 103 "ARXE SCSI support" CONFIG_SCSI_ARXESCSI
	dep_tristate $w.config.f 49 104 "CumanaSCSI II support" CONFIG_SCSI_CUMANA_2
	dep_tristate $w.config.f 49 105 "EESOX support" CONFIG_SCSI_EESOXSCSI
	dep_tristate $w.config.f 49 106 "PowerTec support" CONFIG_SCSI_POWERTECSCSI
	comment $w.config.f 49 107 "The following drivers are not fully supported"
	dep_tristate $w.config.f 49 108 "CumanaSCSI I support (EXPERIMENTAL)" CONFIG_SCSI_CUMANA_1
	dep_tristate $w.config.f 49 109 "EcoScsi support (EXPERIMENTAL)" CONFIG_SCSI_ECOSCSI
	dep_tristate $w.config.f 49 110 "Oak SCSI support (EXPERIMENTAL)" CONFIG_SCSI_OAK1



	focus $w
	update_active
	global winx; global winy
	if {[winfo exists .menu48] == 0} then {menu48 .menu48 "SCSI support"}
	set winx [expr [winfo x .menu48]+30]; set winy [expr [winfo y .menu48]+30]
	if {[winfo exists $w]} then {wm geometry $w +$winx+$winy}
	update idletasks
	if {[winfo exists $w]} then  {$w.config.canvas create window 0 0 -anchor nw -window $w.config.f

	$w.config.canvas configure \
		-width [expr [winfo reqwidth $w.config.f] + 1]\
		-scrollregion "-1 -1 [expr [winfo reqwidth $w.config.f] + 1] \
			 [expr [winfo reqheight $w.config.f] + 1]"

	set winy [expr [winfo reqh $w] - [winfo reqh $w.config.canvas]]
	set scry [expr [winfo screenh $w] / 2]
	set maxy [expr [winfo screenh $w] * 3 / 4]
	set canvtotal [expr [winfo reqh $w.config.f] + 2]
	if [expr $winy + $canvtotal < $maxy] {
		$w.config.canvas configure -height $canvtotal
	} else {
		$w.config.canvas configure -height [expr $scry - $winy]
		}
	}
	update idletasks
	if {[winfo exists $w]} then {
	wm maxsize $w [winfo width $w] [winfo screenheight $w]
	wm minsize $w [winfo width $w] 100

	wm deiconify $w
}
}

proc update_menu49 {} {
	global CONFIG_MODULES
	global CONFIG_SCSI
	global CONFIG_PCI
	global CONFIG_BLK_DEV_3W_XXXX_RAID
	if {($CONFIG_SCSI != 0) && ($CONFIG_PCI == 1) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCSI]];set CONFIG_BLK_DEV_3W_XXXX_RAID [sync_tristate $CONFIG_BLK_DEV_3W_XXXX_RAID $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu49.config.f.x0 disabled {y}} else {configure_entry .menu49.config.f.x0 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu49.config.f.x0 disabled {m}} else {configure_entry .menu49.config.f.x0 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu49.config.f.x0 normal {m}} else {configure_entry .menu49.config.f.x0 disabled {m}}; configure_entry .menu49.config.f.x0 normal {n l}} else {configure_entry .menu49.config.f.x0 disabled {y n m l}}
	global CONFIG_SCSI_7000FASST
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCSI]];set CONFIG_SCSI_7000FASST [sync_tristate $CONFIG_SCSI_7000FASST $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu49.config.f.x1 disabled {y}} else {configure_entry .menu49.config.f.x1 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu49.config.f.x1 disabled {m}} else {configure_entry .menu49.config.f.x1 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu49.config.f.x1 normal {m}} else {configure_entry .menu49.config.f.x1 disabled {m}}; configure_entry .menu49.config.f.x1 normal {n l}} else {configure_entry .menu49.config.f.x1 disabled {y n m l}}
	global CONFIG_SCSI_ACARD
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCSI]];set CONFIG_SCSI_ACARD [sync_tristate $CONFIG_SCSI_ACARD $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu49.config.f.x2 disabled {y}} else {configure_entry .menu49.config.f.x2 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu49.config.f.x2 disabled {m}} else {configure_entry .menu49.config.f.x2 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu49.config.f.x2 normal {m}} else {configure_entry .menu49.config.f.x2 disabled {m}}; configure_entry .menu49.config.f.x2 normal {n l}} else {configure_entry .menu49.config.f.x2 disabled {y n m l}}
	global CONFIG_SCSI_AHA152X
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCSI]];set CONFIG_SCSI_AHA152X [sync_tristate $CONFIG_SCSI_AHA152X $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu49.config.f.x3 disabled {y}} else {configure_entry .menu49.config.f.x3 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu49.config.f.x3 disabled {m}} else {configure_entry .menu49.config.f.x3 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu49.config.f.x3 normal {m}} else {configure_entry .menu49.config.f.x3 disabled {m}}; configure_entry .menu49.config.f.x3 normal {n l}} else {configure_entry .menu49.config.f.x3 disabled {y n m l}}
	global CONFIG_SCSI_AHA1542
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCSI]];set CONFIG_SCSI_AHA1542 [sync_tristate $CONFIG_SCSI_AHA1542 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu49.config.f.x4 disabled {y}} else {configure_entry .menu49.config.f.x4 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu49.config.f.x4 disabled {m}} else {configure_entry .menu49.config.f.x4 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu49.config.f.x4 normal {m}} else {configure_entry .menu49.config.f.x4 disabled {m}}; configure_entry .menu49.config.f.x4 normal {n l}} else {configure_entry .menu49.config.f.x4 disabled {y n m l}}
	global CONFIG_SCSI_AHA1740
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCSI]];set CONFIG_SCSI_AHA1740 [sync_tristate $CONFIG_SCSI_AHA1740 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu49.config.f.x5 disabled {y}} else {configure_entry .menu49.config.f.x5 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu49.config.f.x5 disabled {m}} else {configure_entry .menu49.config.f.x5 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu49.config.f.x5 normal {m}} else {configure_entry .menu49.config.f.x5 disabled {m}}; configure_entry .menu49.config.f.x5 normal {n l}} else {configure_entry .menu49.config.f.x5 disabled {y n m l}}
	global CONFIG_EXPERIMENTAL
	global CONFIG_SCSI_AACRAID
	if {($CONFIG_SCSI != 0) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCSI $CONFIG_PCI]];set CONFIG_SCSI_AACRAID [sync_tristate $CONFIG_SCSI_AACRAID $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu49.config.f.x6 disabled {y}} else {configure_entry .menu49.config.f.x6 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu49.config.f.x6 disabled {m}} else {configure_entry .menu49.config.f.x6 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu49.config.f.x6 normal {m}} else {configure_entry .menu49.config.f.x6 disabled {m}}; configure_entry .menu49.config.f.x6 normal {n l}} else {configure_entry .menu49.config.f.x6 disabled {y n m l}}
	global CONFIG_SCSI_AIC7XXX_OLD
	global CONFIG_SCSI_AIC7XXX
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI_AIC7XXX_OLD != 1) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCSI]];set CONFIG_SCSI_AIC7XXX [sync_tristate $CONFIG_SCSI_AIC7XXX $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu49.config.f.x7 disabled {y}} else {configure_entry .menu49.config.f.x7 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu49.config.f.x7 disabled {m}} else {configure_entry .menu49.config.f.x7 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu49.config.f.x7 normal {m}} else {configure_entry .menu49.config.f.x7 disabled {m}}; configure_entry .menu49.config.f.x7 normal {n l}} else {configure_entry .menu49.config.f.x7 disabled {y n m l}}
	global CONFIG_AIC7XXX_CMDS_PER_DEVICE
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI_AIC7XXX_OLD != 1) && ($CONFIG_SCSI_AIC7XXX != 0)} then {.menu49.config.f.x8.x configure -state normal -foreground [ cget .ref -foreground ]; .menu49.config.f.x8.l configure -state normal; } else {.menu49.config.f.x8.x configure -state disabled -foreground [ cget .ref -disabledforeground ]; .menu49.config.f.x8.l configure -state disabled}
	global CONFIG_AIC7XXX_RESET_DELAY_MS
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI_AIC7XXX_OLD != 1) && ($CONFIG_SCSI_AIC7XXX != 0)} then {.menu49.config.f.x9.x configure -state normal -foreground [ cget .ref -foreground ]; .menu49.config.f.x9.l configure -state normal; } else {.menu49.config.f.x9.x configure -state disabled -foreground [ cget .ref -disabledforeground ]; .menu49.config.f.x9.l configure -state disabled}
	global CONFIG_AIC7XXX_PROBE_EISA_VL
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI_AIC7XXX_OLD != 1) && ($CONFIG_SCSI_AIC7XXX != 0)} then {
	configure_entry .menu49.config.f.x10 normal {n l y}} else {configure_entry .menu49.config.f.x10 disabled {y n l}}
	global CONFIG_AIC7XXX_BUILD_FIRMWARE
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI_AIC7XXX_OLD != 1) && ($CONFIG_SCSI_AIC7XXX != 0)} then {
	configure_entry .menu49.config.f.x11 normal {n l y}} else {configure_entry .menu49.config.f.x11 disabled {y n l}}
	global CONFIG_AIC7XXX_DEBUG_ENABLE
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI_AIC7XXX_OLD != 1) && ($CONFIG_SCSI_AIC7XXX != 0)} then {
	configure_entry .menu49.config.f.x12 normal {n l y}} else {configure_entry .menu49.config.f.x12 disabled {y n l}}
	global CONFIG_AIC7XXX_DEBUG_MASK
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI_AIC7XXX_OLD != 1) && ($CONFIG_SCSI_AIC7XXX != 0)} then {.menu49.config.f.x13.x configure -state normal -foreground [ cget .ref -foreground ]; .menu49.config.f.x13.l configure -state normal; } else {.menu49.config.f.x13.x configure -state disabled -foreground [ cget .ref -disabledforeground ]; .menu49.config.f.x13.l configure -state disabled}
	global CONFIG_AIC7XXX_REG_PRETTY_PRINT
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI_AIC7XXX_OLD != 1) && ($CONFIG_SCSI_AIC7XXX != 0)} then {
	configure_entry .menu49.config.f.x14 normal {n l y}} else {configure_entry .menu49.config.f.x14 disabled {y n l}}
	global CONFIG_SCSI_AIC79XX
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCSI]];set CONFIG_SCSI_AIC79XX [sync_tristate $CONFIG_SCSI_AIC79XX $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu49.config.f.x15 disabled {y}} else {configure_entry .menu49.config.f.x15 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu49.config.f.x15 disabled {m}} else {configure_entry .menu49.config.f.x15 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu49.config.f.x15 normal {m}} else {configure_entry .menu49.config.f.x15 disabled {m}}; configure_entry .menu49.config.f.x15 normal {n l}} else {configure_entry .menu49.config.f.x15 disabled {y n m l}}
	global CONFIG_AIC79XX_CMDS_PER_DEVICE
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI_AIC79XX != 0)} then {.menu49.config.f.x16.x configure -state normal -foreground [ cget .ref -foreground ]; .menu49.config.f.x16.l configure -state normal; } else {.menu49.config.f.x16.x configure -state disabled -foreground [ cget .ref -disabledforeground ]; .menu49.config.f.x16.l configure -state disabled}
	global CONFIG_AIC79XX_RESET_DELAY_MS
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI_AIC79XX != 0)} then {.menu49.config.f.x17.x configure -state normal -foreground [ cget .ref -foreground ]; .menu49.config.f.x17.l configure -state normal; } else {.menu49.config.f.x17.x configure -state disabled -foreground [ cget .ref -disabledforeground ]; .menu49.config.f.x17.l configure -state disabled}
	global CONFIG_AIC79XX_BUILD_FIRMWARE
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI_AIC79XX != 0)} then {
	configure_entry .menu49.config.f.x18 normal {n l y}} else {configure_entry .menu49.config.f.x18 disabled {y n l}}
	global CONFIG_AIC79XX_ENABLE_RD_STRM
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI_AIC79XX != 0)} then {
	configure_entry .menu49.config.f.x19 normal {n l y}} else {configure_entry .menu49.config.f.x19 disabled {y n l}}
	global CONFIG_AIC79XX_DEBUG_ENABLE
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI_AIC79XX != 0)} then {
	configure_entry .menu49.config.f.x20 normal {n l y}} else {configure_entry .menu49.config.f.x20 disabled {y n l}}
	global CONFIG_AIC79XX_DEBUG_MASK
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI_AIC79XX != 0)} then {.menu49.config.f.x21.x configure -state normal -foreground [ cget .ref -foreground ]; .menu49.config.f.x21.l configure -state normal; } else {.menu49.config.f.x21.x configure -state disabled -foreground [ cget .ref -disabledforeground ]; .menu49.config.f.x21.l configure -state disabled}
	global CONFIG_AIC79XX_REG_PRETTY_PRINT
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI_AIC79XX != 0)} then {
	configure_entry .menu49.config.f.x22 normal {n l y}} else {configure_entry .menu49.config.f.x22 disabled {y n l}}
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI_AIC7XXX != 1) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCSI]];set CONFIG_SCSI_AIC7XXX_OLD [sync_tristate $CONFIG_SCSI_AIC7XXX_OLD $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu49.config.f.x23 disabled {y}} else {configure_entry .menu49.config.f.x23 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu49.config.f.x23 disabled {m}} else {configure_entry .menu49.config.f.x23 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu49.config.f.x23 normal {m}} else {configure_entry .menu49.config.f.x23 disabled {m}}; configure_entry .menu49.config.f.x23 normal {n l}} else {configure_entry .menu49.config.f.x23 disabled {y n m l}}
	global CONFIG_AIC7XXX_OLD_TCQ_ON_BY_DEFAULT
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI_AIC7XXX != 1) && ($CONFIG_SCSI_AIC7XXX_OLD != 0)} then {
	configure_entry .menu49.config.f.x24 normal {n l y}} else {configure_entry .menu49.config.f.x24 disabled {y n l}}
	global CONFIG_AIC7XXX_OLD_CMDS_PER_DEVICE
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI_AIC7XXX != 1) && ($CONFIG_SCSI_AIC7XXX_OLD != 0)} then {.menu49.config.f.x25.x configure -state normal -foreground [ cget .ref -foreground ]; .menu49.config.f.x25.l configure -state normal; } else {.menu49.config.f.x25.x configure -state disabled -foreground [ cget .ref -disabledforeground ]; .menu49.config.f.x25.l configure -state disabled}
	global CONFIG_AIC7XXX_OLD_PROC_STATS
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI_AIC7XXX != 1) && ($CONFIG_SCSI_AIC7XXX_OLD != 0)} then {
	configure_entry .menu49.config.f.x26 normal {n l y}} else {configure_entry .menu49.config.f.x26 disabled {y n l}}
	global CONFIG_X86_64
	global CONFIG_SCSI_DPT_I2O
	if {($CONFIG_SCSI != 0) && ($CONFIG_X86_64 != 1) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCSI]];set CONFIG_SCSI_DPT_I2O [sync_tristate $CONFIG_SCSI_DPT_I2O $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu49.config.f.x27 disabled {y}} else {configure_entry .menu49.config.f.x27 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu49.config.f.x27 disabled {m}} else {configure_entry .menu49.config.f.x27 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu49.config.f.x27 normal {m}} else {configure_entry .menu49.config.f.x27 disabled {m}}; configure_entry .menu49.config.f.x27 normal {n l}} else {configure_entry .menu49.config.f.x27 disabled {y n m l}}
	global CONFIG_SCSI_ADVANSYS
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCSI]];set CONFIG_SCSI_ADVANSYS [sync_tristate $CONFIG_SCSI_ADVANSYS $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu49.config.f.x28 disabled {y}} else {configure_entry .menu49.config.f.x28 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu49.config.f.x28 disabled {m}} else {configure_entry .menu49.config.f.x28 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu49.config.f.x28 normal {m}} else {configure_entry .menu49.config.f.x28 disabled {m}}; configure_entry .menu49.config.f.x28 normal {n l}} else {configure_entry .menu49.config.f.x28 disabled {y n m l}}
	global CONFIG_SCSI_IN2000
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCSI]];set CONFIG_SCSI_IN2000 [sync_tristate $CONFIG_SCSI_IN2000 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu49.config.f.x29 disabled {y}} else {configure_entry .menu49.config.f.x29 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu49.config.f.x29 disabled {m}} else {configure_entry .menu49.config.f.x29 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu49.config.f.x29 normal {m}} else {configure_entry .menu49.config.f.x29 disabled {m}}; configure_entry .menu49.config.f.x29 normal {n l}} else {configure_entry .menu49.config.f.x29 disabled {y n m l}}
	global CONFIG_SCSI_AM53C974
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCSI $CONFIG_PCI]];set CONFIG_SCSI_AM53C974 [sync_tristate $CONFIG_SCSI_AM53C974 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu49.config.f.x30 disabled {y}} else {configure_entry .menu49.config.f.x30 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu49.config.f.x30 disabled {m}} else {configure_entry .menu49.config.f.x30 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu49.config.f.x30 normal {m}} else {configure_entry .menu49.config.f.x30 disabled {m}}; configure_entry .menu49.config.f.x30 normal {n l}} else {configure_entry .menu49.config.f.x30 disabled {y n m l}}
	global CONFIG_SCSI_MEGARAID
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCSI]];set CONFIG_SCSI_MEGARAID [sync_tristate $CONFIG_SCSI_MEGARAID $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu49.config.f.x31 disabled {y}} else {configure_entry .menu49.config.f.x31 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu49.config.f.x31 disabled {m}} else {configure_entry .menu49.config.f.x31 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu49.config.f.x31 normal {m}} else {configure_entry .menu49.config.f.x31 disabled {m}}; configure_entry .menu49.config.f.x31 normal {n l}} else {configure_entry .menu49.config.f.x31 disabled {y n m l}}
	global CONFIG_SCSI_MEGARAID2
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCSI]];set CONFIG_SCSI_MEGARAID2 [sync_tristate $CONFIG_SCSI_MEGARAID2 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu49.config.f.x32 disabled {y}} else {configure_entry .menu49.config.f.x32 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu49.config.f.x32 disabled {m}} else {configure_entry .menu49.config.f.x32 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu49.config.f.x32 normal {m}} else {configure_entry .menu49.config.f.x32 disabled {m}}; configure_entry .menu49.config.f.x32 normal {n l}} else {configure_entry .menu49.config.f.x32 disabled {y n m l}}
	global CONFIG_SCSI_BUSLOGIC
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCSI]];set CONFIG_SCSI_BUSLOGIC [sync_tristate $CONFIG_SCSI_BUSLOGIC $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu49.config.f.x33 disabled {y}} else {configure_entry .menu49.config.f.x33 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu49.config.f.x33 disabled {m}} else {configure_entry .menu49.config.f.x33 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu49.config.f.x33 normal {m}} else {configure_entry .menu49.config.f.x33 disabled {m}}; configure_entry .menu49.config.f.x33 normal {n l}} else {configure_entry .menu49.config.f.x33 disabled {y n m l}}
	global CONFIG_SCSI_OMIT_FLASHPOINT
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI_BUSLOGIC != 0)} then {
	configure_entry .menu49.config.f.x34 normal {n l y}} else {configure_entry .menu49.config.f.x34 disabled {y n l}}
	global CONFIG_SCSI_CPQFCTS
	if {($CONFIG_SCSI != 0) && ($CONFIG_PCI == 1) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCSI]];set CONFIG_SCSI_CPQFCTS [sync_tristate $CONFIG_SCSI_CPQFCTS $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu49.config.f.x35 disabled {y}} else {configure_entry .menu49.config.f.x35 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu49.config.f.x35 disabled {m}} else {configure_entry .menu49.config.f.x35 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu49.config.f.x35 normal {m}} else {configure_entry .menu49.config.f.x35 disabled {m}}; configure_entry .menu49.config.f.x35 normal {n l}} else {configure_entry .menu49.config.f.x35 disabled {y n m l}}
	global CONFIG_SCSI_DMX3191D
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCSI $CONFIG_PCI]];set CONFIG_SCSI_DMX3191D [sync_tristate $CONFIG_SCSI_DMX3191D $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu49.config.f.x36 disabled {y}} else {configure_entry .menu49.config.f.x36 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu49.config.f.x36 disabled {m}} else {configure_entry .menu49.config.f.x36 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu49.config.f.x36 normal {m}} else {configure_entry .menu49.config.f.x36 disabled {m}}; configure_entry .menu49.config.f.x36 normal {n l}} else {configure_entry .menu49.config.f.x36 disabled {y n m l}}
	global CONFIG_SCSI_DTC3280
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCSI]];set CONFIG_SCSI_DTC3280 [sync_tristate $CONFIG_SCSI_DTC3280 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu49.config.f.x37 disabled {y}} else {configure_entry .menu49.config.f.x37 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu49.config.f.x37 disabled {m}} else {configure_entry .menu49.config.f.x37 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu49.config.f.x37 normal {m}} else {configure_entry .menu49.config.f.x37 disabled {m}}; configure_entry .menu49.config.f.x37 normal {n l}} else {configure_entry .menu49.config.f.x37 disabled {y n m l}}
	global CONFIG_SCSI_EATA
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCSI]];set CONFIG_SCSI_EATA [sync_tristate $CONFIG_SCSI_EATA $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu49.config.f.x38 disabled {y}} else {configure_entry .menu49.config.f.x38 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu49.config.f.x38 disabled {m}} else {configure_entry .menu49.config.f.x38 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu49.config.f.x38 normal {m}} else {configure_entry .menu49.config.f.x38 disabled {m}}; configure_entry .menu49.config.f.x38 normal {n l}} else {configure_entry .menu49.config.f.x38 disabled {y n m l}}
	global CONFIG_SCSI_EATA_TAGGED_QUEUE
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI_EATA != 0)} then {
	configure_entry .menu49.config.f.x39 normal {n l y}} else {configure_entry .menu49.config.f.x39 disabled {y n l}}
	global CONFIG_SCSI_EATA_LINKED_COMMANDS
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI_EATA != 0)} then {
	configure_entry .menu49.config.f.x40 normal {n l y}} else {configure_entry .menu49.config.f.x40 disabled {y n l}}
	global CONFIG_SCSI_EATA_MAX_TAGS
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI_EATA != 0)} then {.menu49.config.f.x41.x configure -state normal -foreground [ cget .ref -foreground ]; .menu49.config.f.x41.l configure -state normal; } else {.menu49.config.f.x41.x configure -state disabled -foreground [ cget .ref -disabledforeground ]; .menu49.config.f.x41.l configure -state disabled}
	global CONFIG_SCSI_EATA_DMA
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCSI]];set CONFIG_SCSI_EATA_DMA [sync_tristate $CONFIG_SCSI_EATA_DMA $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu49.config.f.x42 disabled {y}} else {configure_entry .menu49.config.f.x42 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu49.config.f.x42 disabled {m}} else {configure_entry .menu49.config.f.x42 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu49.config.f.x42 normal {m}} else {configure_entry .menu49.config.f.x42 disabled {m}}; configure_entry .menu49.config.f.x42 normal {n l}} else {configure_entry .menu49.config.f.x42 disabled {y n m l}}
	global CONFIG_SCSI_EATA_PIO
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCSI]];set CONFIG_SCSI_EATA_PIO [sync_tristate $CONFIG_SCSI_EATA_PIO $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu49.config.f.x43 disabled {y}} else {configure_entry .menu49.config.f.x43 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu49.config.f.x43 disabled {m}} else {configure_entry .menu49.config.f.x43 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu49.config.f.x43 normal {m}} else {configure_entry .menu49.config.f.x43 disabled {m}}; configure_entry .menu49.config.f.x43 normal {n l}} else {configure_entry .menu49.config.f.x43 disabled {y n m l}}
	global CONFIG_SCSI_FUTURE_DOMAIN
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCSI]];set CONFIG_SCSI_FUTURE_DOMAIN [sync_tristate $CONFIG_SCSI_FUTURE_DOMAIN $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu49.config.f.x44 disabled {y}} else {configure_entry .menu49.config.f.x44 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu49.config.f.x44 disabled {m}} else {configure_entry .menu49.config.f.x44 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu49.config.f.x44 normal {m}} else {configure_entry .menu49.config.f.x44 disabled {m}}; configure_entry .menu49.config.f.x44 normal {n l}} else {configure_entry .menu49.config.f.x44 disabled {y n m l}}
	global CONFIG_MCA
	global CONFIG_SCSI_FD_MCS
	if {($CONFIG_SCSI != 0) && ($CONFIG_MCA == 1) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCSI]];set CONFIG_SCSI_FD_MCS [sync_tristate $CONFIG_SCSI_FD_MCS $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu49.config.f.x45 disabled {y}} else {configure_entry .menu49.config.f.x45 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu49.config.f.x45 disabled {m}} else {configure_entry .menu49.config.f.x45 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu49.config.f.x45 normal {m}} else {configure_entry .menu49.config.f.x45 disabled {m}}; configure_entry .menu49.config.f.x45 normal {n l}} else {configure_entry .menu49.config.f.x45 disabled {y n m l}}
	global CONFIG_SCSI_GDTH
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCSI]];set CONFIG_SCSI_GDTH [sync_tristate $CONFIG_SCSI_GDTH $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu49.config.f.x46 disabled {y}} else {configure_entry .menu49.config.f.x46 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu49.config.f.x46 disabled {m}} else {configure_entry .menu49.config.f.x46 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu49.config.f.x46 normal {m}} else {configure_entry .menu49.config.f.x46 disabled {m}}; configure_entry .menu49.config.f.x46 normal {n l}} else {configure_entry .menu49.config.f.x46 disabled {y n m l}}
	global CONFIG_SCSI_GENERIC_NCR5380
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCSI]];set CONFIG_SCSI_GENERIC_NCR5380 [sync_tristate $CONFIG_SCSI_GENERIC_NCR5380 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu49.config.f.x47 disabled {y}} else {configure_entry .menu49.config.f.x47 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu49.config.f.x47 disabled {m}} else {configure_entry .menu49.config.f.x47 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu49.config.f.x47 normal {m}} else {configure_entry .menu49.config.f.x47 disabled {m}}; configure_entry .menu49.config.f.x47 normal {n l}} else {configure_entry .menu49.config.f.x47 disabled {y n m l}}
	global CONFIG_SCSI_GENERIC_NCR53C400
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI_GENERIC_NCR5380 != 0)} then {
	configure_entry .menu49.config.f.x48 normal {n l y}} else {configure_entry .menu49.config.f.x48 disabled {y n l}}
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI_GENERIC_NCR5380 != 0)} then {configure_entry .menu49.config.f.x49 normal {x l}} else {configure_entry .menu49.config.f.x49 disabled {x l}}
	global CONFIG_SCSI_IBMMCA
	if {($CONFIG_SCSI != 0) && ($CONFIG_MCA == 1) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCSI]];set CONFIG_SCSI_IBMMCA [sync_tristate $CONFIG_SCSI_IBMMCA $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu49.config.f.x50 disabled {y}} else {configure_entry .menu49.config.f.x50 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu49.config.f.x50 disabled {m}} else {configure_entry .menu49.config.f.x50 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu49.config.f.x50 normal {m}} else {configure_entry .menu49.config.f.x50 disabled {m}}; configure_entry .menu49.config.f.x50 normal {n l}} else {configure_entry .menu49.config.f.x50 disabled {y n m l}}
	global CONFIG_IBMMCA_SCSI_ORDER_STANDARD
	if {($CONFIG_SCSI != 0) && ($CONFIG_MCA == 1) && ($CONFIG_SCSI_IBMMCA != 0)} then {
	configure_entry .menu49.config.f.x51 normal {n l y}} else {configure_entry .menu49.config.f.x51 disabled {y n l}}
	global CONFIG_IBMMCA_SCSI_DEV_RESET
	if {($CONFIG_SCSI != 0) && ($CONFIG_MCA == 1) && ($CONFIG_SCSI_IBMMCA != 0)} then {
	configure_entry .menu49.config.f.x52 normal {n l y}} else {configure_entry .menu49.config.f.x52 disabled {y n l}}
	global CONFIG_SCSI_INITIO
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCSI $CONFIG_PCI]];set CONFIG_SCSI_INITIO [sync_tristate $CONFIG_SCSI_INITIO $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu49.config.f.x53 disabled {y}} else {configure_entry .menu49.config.f.x53 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu49.config.f.x53 disabled {m}} else {configure_entry .menu49.config.f.x53 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu49.config.f.x53 normal {m}} else {configure_entry .menu49.config.f.x53 disabled {m}}; configure_entry .menu49.config.f.x53 normal {n l}} else {configure_entry .menu49.config.f.x53 disabled {y n m l}}
	global CONFIG_SCSI_INIA100
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCSI $CONFIG_PCI]];set CONFIG_SCSI_INIA100 [sync_tristate $CONFIG_SCSI_INIA100 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu49.config.f.x54 disabled {y}} else {configure_entry .menu49.config.f.x54 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu49.config.f.x54 disabled {m}} else {configure_entry .menu49.config.f.x54 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu49.config.f.x54 normal {m}} else {configure_entry .menu49.config.f.x54 disabled {m}}; configure_entry .menu49.config.f.x54 normal {n l}} else {configure_entry .menu49.config.f.x54 disabled {y n m l}}
	global CONFIG_PARPORT
	global CONFIG_SCSI_PPA
	if {($CONFIG_SCSI != 0) && ($CONFIG_PARPORT != 0) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4) && ($CONFIG_PARPORT == 1 || $CONFIG_PARPORT == 2 || $CONFIG_PARPORT == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCSI $CONFIG_PARPORT]];set CONFIG_SCSI_PPA [sync_tristate $CONFIG_SCSI_PPA $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu49.config.f.x55 disabled {y}} else {configure_entry .menu49.config.f.x55 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu49.config.f.x55 disabled {m}} else {configure_entry .menu49.config.f.x55 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu49.config.f.x55 normal {m}} else {configure_entry .menu49.config.f.x55 disabled {m}}; configure_entry .menu49.config.f.x55 normal {n l}} else {configure_entry .menu49.config.f.x55 disabled {y n m l}}
	global CONFIG_SCSI_IMM
	if {($CONFIG_SCSI != 0) && ($CONFIG_PARPORT != 0) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4) && ($CONFIG_PARPORT == 1 || $CONFIG_PARPORT == 2 || $CONFIG_PARPORT == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCSI $CONFIG_PARPORT]];set CONFIG_SCSI_IMM [sync_tristate $CONFIG_SCSI_IMM $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu49.config.f.x56 disabled {y}} else {configure_entry .menu49.config.f.x56 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu49.config.f.x56 disabled {m}} else {configure_entry .menu49.config.f.x56 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu49.config.f.x56 normal {m}} else {configure_entry .menu49.config.f.x56 disabled {m}}; configure_entry .menu49.config.f.x56 normal {n l}} else {configure_entry .menu49.config.f.x56 disabled {y n m l}}
	global CONFIG_SCSI_IZIP_EPP16
	if {($CONFIG_SCSI != 0) && ($CONFIG_PARPORT != 0) && ($CONFIG_SCSI_PPA != 0 || $CONFIG_SCSI_IMM != 0)} then {
	configure_entry .menu49.config.f.x57 normal {n l y}} else {configure_entry .menu49.config.f.x57 disabled {y n l}}
	global CONFIG_SCSI_IZIP_SLOW_CTR
	if {($CONFIG_SCSI != 0) && ($CONFIG_PARPORT != 0) && ($CONFIG_SCSI_PPA != 0 || $CONFIG_SCSI_IMM != 0)} then {
	configure_entry .menu49.config.f.x58 normal {n l y}} else {configure_entry .menu49.config.f.x58 disabled {y n l}}
	global CONFIG_SCSI_NCR53C406A
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCSI]];set CONFIG_SCSI_NCR53C406A [sync_tristate $CONFIG_SCSI_NCR53C406A $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu49.config.f.x59 disabled {y}} else {configure_entry .menu49.config.f.x59 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu49.config.f.x59 disabled {m}} else {configure_entry .menu49.config.f.x59 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu49.config.f.x59 normal {m}} else {configure_entry .menu49.config.f.x59 disabled {m}}; configure_entry .menu49.config.f.x59 normal {n l}} else {configure_entry .menu49.config.f.x59 disabled {y n m l}}
	global CONFIG_SCSI_NCR_D700
	if {($CONFIG_SCSI != 0) && ($CONFIG_MCA == 1) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCSI]];set CONFIG_SCSI_NCR_D700 [sync_tristate $CONFIG_SCSI_NCR_D700 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu49.config.f.x60 disabled {y}} else {configure_entry .menu49.config.f.x60 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu49.config.f.x60 disabled {m}} else {configure_entry .menu49.config.f.x60 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu49.config.f.x60 normal {m}} else {configure_entry .menu49.config.f.x60 disabled {m}}; configure_entry .menu49.config.f.x60 normal {n l}} else {configure_entry .menu49.config.f.x60 disabled {y n m l}}
	global CONFIG_SCSI_NCR53C7xx
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCSI $CONFIG_PCI]];set CONFIG_SCSI_NCR53C7xx [sync_tristate $CONFIG_SCSI_NCR53C7xx $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu49.config.f.x61 disabled {y}} else {configure_entry .menu49.config.f.x61 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu49.config.f.x61 disabled {m}} else {configure_entry .menu49.config.f.x61 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu49.config.f.x61 normal {m}} else {configure_entry .menu49.config.f.x61 disabled {m}}; configure_entry .menu49.config.f.x61 normal {n l}} else {configure_entry .menu49.config.f.x61 disabled {y n m l}}
	global CONFIG_SCSI_NCR53C7xx_sync
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI_NCR53C7xx != 0)} then {
	configure_entry .menu49.config.f.x62 normal {n l y}} else {configure_entry .menu49.config.f.x62 disabled {y n l}}
	global CONFIG_SCSI_NCR53C7xx_FAST
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI_NCR53C7xx != 0)} then {
	configure_entry .menu49.config.f.x63 normal {n l y}} else {configure_entry .menu49.config.f.x63 disabled {y n l}}
	global CONFIG_SCSI_NCR53C7xx_DISCONNECT
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI_NCR53C7xx != 0)} then {
	configure_entry .menu49.config.f.x64 normal {n l y}} else {configure_entry .menu49.config.f.x64 disabled {y n l}}
	global CONFIG_SCSI_SYM53C8XX_2
	if {($CONFIG_SCSI != 0) && ($CONFIG_PCI == 1) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCSI]];set CONFIG_SCSI_SYM53C8XX_2 [sync_tristate $CONFIG_SCSI_SYM53C8XX_2 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu49.config.f.x65 disabled {y}} else {configure_entry .menu49.config.f.x65 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu49.config.f.x65 disabled {m}} else {configure_entry .menu49.config.f.x65 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu49.config.f.x65 normal {m}} else {configure_entry .menu49.config.f.x65 disabled {m}}; configure_entry .menu49.config.f.x65 normal {n l}} else {configure_entry .menu49.config.f.x65 disabled {y n m l}}
	global CONFIG_SCSI_SYM53C8XX_DMA_ADDRESSING_MODE
	if {($CONFIG_SCSI != 0) && ($CONFIG_PCI == 1) && ($CONFIG_SCSI_SYM53C8XX_2 != 0)} then {.menu49.config.f.x66.x configure -state normal -foreground [ cget .ref -foreground ]; .menu49.config.f.x66.l configure -state normal; } else {.menu49.config.f.x66.x configure -state disabled -foreground [ cget .ref -disabledforeground ]; .menu49.config.f.x66.l configure -state disabled}
	global CONFIG_SCSI_SYM53C8XX_DEFAULT_TAGS
	if {($CONFIG_SCSI != 0) && ($CONFIG_PCI == 1) && ($CONFIG_SCSI_SYM53C8XX_2 != 0)} then {.menu49.config.f.x67.x configure -state normal -foreground [ cget .ref -foreground ]; .menu49.config.f.x67.l configure -state normal; } else {.menu49.config.f.x67.x configure -state disabled -foreground [ cget .ref -disabledforeground ]; .menu49.config.f.x67.l configure -state disabled}
	global CONFIG_SCSI_SYM53C8XX_MAX_TAGS
	if {($CONFIG_SCSI != 0) && ($CONFIG_PCI == 1) && ($CONFIG_SCSI_SYM53C8XX_2 != 0)} then {.menu49.config.f.x68.x configure -state normal -foreground [ cget .ref -foreground ]; .menu49.config.f.x68.l configure -state normal; } else {.menu49.config.f.x68.x configure -state disabled -foreground [ cget .ref -disabledforeground ]; .menu49.config.f.x68.l configure -state disabled}
	global CONFIG_SCSI_SYM53C8XX_IOMAPPED
	if {($CONFIG_SCSI != 0) && ($CONFIG_PCI == 1) && ($CONFIG_SCSI_SYM53C8XX_2 != 0)} then {
	configure_entry .menu49.config.f.x69 normal {n l y}} else {configure_entry .menu49.config.f.x69 disabled {y n l}}
	global CONFIG_SCSI_NCR53C8XX
	if {($CONFIG_SCSI != 0) && ($CONFIG_PCI == 1 && $CONFIG_SCSI_SYM53C8XX_2 != 1) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCSI]];set CONFIG_SCSI_NCR53C8XX [sync_tristate $CONFIG_SCSI_NCR53C8XX $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu49.config.f.x70 disabled {y}} else {configure_entry .menu49.config.f.x70 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu49.config.f.x70 disabled {m}} else {configure_entry .menu49.config.f.x70 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu49.config.f.x70 normal {m}} else {configure_entry .menu49.config.f.x70 disabled {m}}; configure_entry .menu49.config.f.x70 normal {n l}} else {configure_entry .menu49.config.f.x70 disabled {y n m l}}
	global CONFIG_SCSI_SYM53C8XX
	if {($CONFIG_SCSI != 0) && ($CONFIG_PCI == 1 && $CONFIG_SCSI_SYM53C8XX_2 != 1) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCSI]];set CONFIG_SCSI_SYM53C8XX [sync_tristate $CONFIG_SCSI_SYM53C8XX $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu49.config.f.x71 disabled {y}} else {configure_entry .menu49.config.f.x71 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu49.config.f.x71 disabled {m}} else {configure_entry .menu49.config.f.x71 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu49.config.f.x71 normal {m}} else {configure_entry .menu49.config.f.x71 disabled {m}}; configure_entry .menu49.config.f.x71 normal {n l}} else {configure_entry .menu49.config.f.x71 disabled {y n m l}}
	global CONFIG_SCSI_ZALON
	global CONFIG_SCSI_NCR53C8XX_DEFAULT_TAGS
	if {($CONFIG_SCSI != 0) && ($CONFIG_PCI == 1 && $CONFIG_SCSI_SYM53C8XX_2 != 1) && ($CONFIG_SCSI_NCR53C8XX != 0 || $CONFIG_SCSI_ZALON == 1 || $CONFIG_SCSI_ZALON == 2 || $CONFIG_SCSI_SYM53C8XX != 0)} then {.menu49.config.f.x72.x configure -state normal -foreground [ cget .ref -foreground ]; .menu49.config.f.x72.l configure -state normal; } else {.menu49.config.f.x72.x configure -state disabled -foreground [ cget .ref -disabledforeground ]; .menu49.config.f.x72.l configure -state disabled}
	global CONFIG_SCSI_NCR53C8XX_MAX_TAGS
	if {($CONFIG_SCSI != 0) && ($CONFIG_PCI == 1 && $CONFIG_SCSI_SYM53C8XX_2 != 1) && ($CONFIG_SCSI_NCR53C8XX != 0 || $CONFIG_SCSI_ZALON == 1 || $CONFIG_SCSI_ZALON == 2 || $CONFIG_SCSI_SYM53C8XX != 0)} then {.menu49.config.f.x73.x configure -state normal -foreground [ cget .ref -foreground ]; .menu49.config.f.x73.l configure -state normal; } else {.menu49.config.f.x73.x configure -state disabled -foreground [ cget .ref -disabledforeground ]; .menu49.config.f.x73.l configure -state disabled}
	global CONFIG_SCSI_NCR53C8XX_SYNC
	if {($CONFIG_SCSI != 0) && ($CONFIG_PCI == 1 && $CONFIG_SCSI_SYM53C8XX_2 != 1) && ($CONFIG_SCSI_NCR53C8XX != 0 || $CONFIG_SCSI_ZALON == 1 || $CONFIG_SCSI_ZALON == 2 || $CONFIG_SCSI_SYM53C8XX != 0)} then {.menu49.config.f.x74.x configure -state normal -foreground [ cget .ref -foreground ]; .menu49.config.f.x74.l configure -state normal; } else {.menu49.config.f.x74.x configure -state disabled -foreground [ cget .ref -disabledforeground ]; .menu49.config.f.x74.l configure -state disabled}
	global CONFIG_SCSI_NCR53C8XX_PROFILE
	if {($CONFIG_SCSI != 0) && ($CONFIG_PCI == 1 && $CONFIG_SCSI_SYM53C8XX_2 != 1) && ($CONFIG_SCSI_NCR53C8XX != 0 || $CONFIG_SCSI_ZALON == 1 || $CONFIG_SCSI_ZALON == 2 || $CONFIG_SCSI_SYM53C8XX != 0)} then {
	configure_entry .menu49.config.f.x75 normal {n l y}} else {configure_entry .menu49.config.f.x75 disabled {y n l}}
	global CONFIG_SCSI_NCR53C8XX_IOMAPPED
	if {($CONFIG_SCSI != 0) && ($CONFIG_PCI == 1 && $CONFIG_SCSI_SYM53C8XX_2 != 1) && ($CONFIG_SCSI_NCR53C8XX != 0 || $CONFIG_SCSI_ZALON == 1 || $CONFIG_SCSI_ZALON == 2 || $CONFIG_SCSI_SYM53C8XX != 0)} then {
	configure_entry .menu49.config.f.x76 normal {n l y}} else {configure_entry .menu49.config.f.x76 disabled {y n l}}
	global CONFIG_SCSI_NCR53C8XX_PQS_PDS
	if {($CONFIG_SCSI != 0) && ($CONFIG_PCI == 1 && $CONFIG_SCSI_SYM53C8XX_2 != 1) && ($CONFIG_SCSI_NCR53C8XX != 0 || $CONFIG_SCSI_ZALON == 1 || $CONFIG_SCSI_ZALON == 2 || $CONFIG_SCSI_SYM53C8XX != 0) && ($CONFIG_SCSI_SYM53C8XX != 0)} then {
	configure_entry .menu49.config.f.x77 normal {n l y}} else {configure_entry .menu49.config.f.x77 disabled {y n l}}
	global CONFIG_SCSI_NCR53C8XX_NO_DISCONNECT
	if {($CONFIG_SCSI != 0) && ($CONFIG_PCI == 1 && $CONFIG_SCSI_SYM53C8XX_2 != 1) && ($CONFIG_SCSI_NCR53C8XX != 0 || $CONFIG_SCSI_ZALON == 1 || $CONFIG_SCSI_ZALON == 2 || $CONFIG_SCSI_SYM53C8XX != 0) && ($CONFIG_SCSI_NCR53C8XX_DEFAULT_TAGS == "0")} then {
	configure_entry .menu49.config.f.x78 normal {n l y}} else {configure_entry .menu49.config.f.x78 disabled {y n l}}
	global CONFIG_SCSI_NCR53C8XX_SYMBIOS_COMPAT
	if {($CONFIG_SCSI != 0) && ($CONFIG_PCI == 1 && $CONFIG_SCSI_SYM53C8XX_2 != 1) && ($CONFIG_SCSI_NCR53C8XX != 0 || $CONFIG_SCSI_ZALON == 1 || $CONFIG_SCSI_ZALON == 2 || $CONFIG_SCSI_SYM53C8XX != 0) && ($CONFIG_EXPERIMENTAL == 1)} then {
	configure_entry .menu49.config.f.x79 normal {n l y}} else {configure_entry .menu49.config.f.x79 disabled {y n l}}
	global CONFIG_SCSI_MCA_53C9X
	if {($CONFIG_SCSI != 0) && ($CONFIG_MCA == 1) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCSI]];set CONFIG_SCSI_MCA_53C9X [sync_tristate $CONFIG_SCSI_MCA_53C9X $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu49.config.f.x80 disabled {y}} else {configure_entry .menu49.config.f.x80 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu49.config.f.x80 disabled {m}} else {configure_entry .menu49.config.f.x80 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu49.config.f.x80 normal {m}} else {configure_entry .menu49.config.f.x80 disabled {m}}; configure_entry .menu49.config.f.x80 normal {n l}} else {configure_entry .menu49.config.f.x80 disabled {y n m l}}
	global CONFIG_SCSI_PAS16
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCSI]];set CONFIG_SCSI_PAS16 [sync_tristate $CONFIG_SCSI_PAS16 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu49.config.f.x81 disabled {y}} else {configure_entry .menu49.config.f.x81 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu49.config.f.x81 disabled {m}} else {configure_entry .menu49.config.f.x81 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu49.config.f.x81 normal {m}} else {configure_entry .menu49.config.f.x81 disabled {m}}; configure_entry .menu49.config.f.x81 normal {n l}} else {configure_entry .menu49.config.f.x81 disabled {y n m l}}
	global CONFIG_SCSI_PCI2000
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCSI]];set CONFIG_SCSI_PCI2000 [sync_tristate $CONFIG_SCSI_PCI2000 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu49.config.f.x82 disabled {y}} else {configure_entry .menu49.config.f.x82 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu49.config.f.x82 disabled {m}} else {configure_entry .menu49.config.f.x82 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu49.config.f.x82 normal {m}} else {configure_entry .menu49.config.f.x82 disabled {m}}; configure_entry .menu49.config.f.x82 normal {n l}} else {configure_entry .menu49.config.f.x82 disabled {y n m l}}
	global CONFIG_SCSI_PCI2220I
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCSI]];set CONFIG_SCSI_PCI2220I [sync_tristate $CONFIG_SCSI_PCI2220I $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu49.config.f.x83 disabled {y}} else {configure_entry .menu49.config.f.x83 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu49.config.f.x83 disabled {m}} else {configure_entry .menu49.config.f.x83 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu49.config.f.x83 normal {m}} else {configure_entry .menu49.config.f.x83 disabled {m}}; configure_entry .menu49.config.f.x83 normal {n l}} else {configure_entry .menu49.config.f.x83 disabled {y n m l}}
	global CONFIG_SCSI_PSI240I
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCSI]];set CONFIG_SCSI_PSI240I [sync_tristate $CONFIG_SCSI_PSI240I $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu49.config.f.x84 disabled {y}} else {configure_entry .menu49.config.f.x84 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu49.config.f.x84 disabled {m}} else {configure_entry .menu49.config.f.x84 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu49.config.f.x84 normal {m}} else {configure_entry .menu49.config.f.x84 disabled {m}}; configure_entry .menu49.config.f.x84 normal {n l}} else {configure_entry .menu49.config.f.x84 disabled {y n m l}}
	global CONFIG_SCSI_QLOGIC_FAS
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCSI]];set CONFIG_SCSI_QLOGIC_FAS [sync_tristate $CONFIG_SCSI_QLOGIC_FAS $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu49.config.f.x85 disabled {y}} else {configure_entry .menu49.config.f.x85 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu49.config.f.x85 disabled {m}} else {configure_entry .menu49.config.f.x85 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu49.config.f.x85 normal {m}} else {configure_entry .menu49.config.f.x85 disabled {m}}; configure_entry .menu49.config.f.x85 normal {n l}} else {configure_entry .menu49.config.f.x85 disabled {y n m l}}
	global CONFIG_SCSI_QLOGIC_ISP
	if {($CONFIG_SCSI != 0) && ($CONFIG_PCI == 1) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCSI]];set CONFIG_SCSI_QLOGIC_ISP [sync_tristate $CONFIG_SCSI_QLOGIC_ISP $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu49.config.f.x86 disabled {y}} else {configure_entry .menu49.config.f.x86 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu49.config.f.x86 disabled {m}} else {configure_entry .menu49.config.f.x86 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu49.config.f.x86 normal {m}} else {configure_entry .menu49.config.f.x86 disabled {m}}; configure_entry .menu49.config.f.x86 normal {n l}} else {configure_entry .menu49.config.f.x86 disabled {y n m l}}
	global CONFIG_SCSI_QLOGIC_FC
	if {($CONFIG_SCSI != 0) && ($CONFIG_PCI == 1) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCSI]];set CONFIG_SCSI_QLOGIC_FC [sync_tristate $CONFIG_SCSI_QLOGIC_FC $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu49.config.f.x87 disabled {y}} else {configure_entry .menu49.config.f.x87 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu49.config.f.x87 disabled {m}} else {configure_entry .menu49.config.f.x87 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu49.config.f.x87 normal {m}} else {configure_entry .menu49.config.f.x87 disabled {m}}; configure_entry .menu49.config.f.x87 normal {n l}} else {configure_entry .menu49.config.f.x87 disabled {y n m l}}
	global CONFIG_SCSI_QLOGIC_FC_FIRMWARE
	if {($CONFIG_SCSI != 0) && ($CONFIG_PCI == 1) && ($CONFIG_SCSI_QLOGIC_FC != 0)} then {
	configure_entry .menu49.config.f.x88 normal {n l y}} else {configure_entry .menu49.config.f.x88 disabled {y n l}}
	global CONFIG_SCSI_QLOGIC_1280
	if {($CONFIG_SCSI != 0) && ($CONFIG_PCI == 1) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCSI]];set CONFIG_SCSI_QLOGIC_1280 [sync_tristate $CONFIG_SCSI_QLOGIC_1280 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu49.config.f.x89 disabled {y}} else {configure_entry .menu49.config.f.x89 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu49.config.f.x89 disabled {m}} else {configure_entry .menu49.config.f.x89 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu49.config.f.x89 normal {m}} else {configure_entry .menu49.config.f.x89 disabled {m}}; configure_entry .menu49.config.f.x89 normal {n l}} else {configure_entry .menu49.config.f.x89 disabled {y n m l}}
	global CONFIG_SCSI_SIM710
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCSI]];set CONFIG_SCSI_SIM710 [sync_tristate $CONFIG_SCSI_SIM710 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu49.config.f.x90 disabled {y}} else {configure_entry .menu49.config.f.x90 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu49.config.f.x90 disabled {m}} else {configure_entry .menu49.config.f.x90 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu49.config.f.x90 normal {m}} else {configure_entry .menu49.config.f.x90 disabled {m}}; configure_entry .menu49.config.f.x90 normal {n l}} else {configure_entry .menu49.config.f.x90 disabled {y n m l}}
	global CONFIG_SCSI_SYM53C416
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCSI]];set CONFIG_SCSI_SYM53C416 [sync_tristate $CONFIG_SCSI_SYM53C416 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu49.config.f.x91 disabled {y}} else {configure_entry .menu49.config.f.x91 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu49.config.f.x91 disabled {m}} else {configure_entry .menu49.config.f.x91 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu49.config.f.x91 normal {m}} else {configure_entry .menu49.config.f.x91 disabled {m}}; configure_entry .menu49.config.f.x91 normal {n l}} else {configure_entry .menu49.config.f.x91 disabled {y n m l}}
	global CONFIG_SCSI_DC390T
	if {($CONFIG_SCSI != 0) && ($CONFIG_PCI == 1) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCSI]];set CONFIG_SCSI_DC390T [sync_tristate $CONFIG_SCSI_DC390T $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu49.config.f.x92 disabled {y}} else {configure_entry .menu49.config.f.x92 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu49.config.f.x92 disabled {m}} else {configure_entry .menu49.config.f.x92 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu49.config.f.x92 normal {m}} else {configure_entry .menu49.config.f.x92 disabled {m}}; configure_entry .menu49.config.f.x92 normal {n l}} else {configure_entry .menu49.config.f.x92 disabled {y n m l}}
	global CONFIG_SCSI_DC390T_NOGENSUPP
	if {($CONFIG_SCSI != 0) && ($CONFIG_PCI == 1) && ($CONFIG_SCSI_DC390T != 0)} then {
	configure_entry .menu49.config.f.x93 normal {n l y}} else {configure_entry .menu49.config.f.x93 disabled {y n l}}
	global CONFIG_SCSI_T128
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCSI]];set CONFIG_SCSI_T128 [sync_tristate $CONFIG_SCSI_T128 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu49.config.f.x94 disabled {y}} else {configure_entry .menu49.config.f.x94 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu49.config.f.x94 disabled {m}} else {configure_entry .menu49.config.f.x94 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu49.config.f.x94 normal {m}} else {configure_entry .menu49.config.f.x94 disabled {m}}; configure_entry .menu49.config.f.x94 normal {n l}} else {configure_entry .menu49.config.f.x94 disabled {y n m l}}
	global CONFIG_SCSI_U14_34F
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCSI]];set CONFIG_SCSI_U14_34F [sync_tristate $CONFIG_SCSI_U14_34F $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu49.config.f.x95 disabled {y}} else {configure_entry .menu49.config.f.x95 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu49.config.f.x95 disabled {m}} else {configure_entry .menu49.config.f.x95 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu49.config.f.x95 normal {m}} else {configure_entry .menu49.config.f.x95 disabled {m}}; configure_entry .menu49.config.f.x95 normal {n l}} else {configure_entry .menu49.config.f.x95 disabled {y n m l}}
	global CONFIG_SCSI_U14_34F_LINKED_COMMANDS
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI_U14_34F != 0)} then {
	configure_entry .menu49.config.f.x96 normal {n l y}} else {configure_entry .menu49.config.f.x96 disabled {y n l}}
	global CONFIG_SCSI_U14_34F_MAX_TAGS
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI_U14_34F != 0)} then {.menu49.config.f.x97.x configure -state normal -foreground [ cget .ref -foreground ]; .menu49.config.f.x97.l configure -state normal; } else {.menu49.config.f.x97.x configure -state disabled -foreground [ cget .ref -disabledforeground ]; .menu49.config.f.x97.l configure -state disabled}
	global CONFIG_SCSI_NSP32
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCSI]];set CONFIG_SCSI_NSP32 [sync_tristate $CONFIG_SCSI_NSP32 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu49.config.f.x98 disabled {y}} else {configure_entry .menu49.config.f.x98 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu49.config.f.x98 disabled {m}} else {configure_entry .menu49.config.f.x98 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu49.config.f.x98 normal {m}} else {configure_entry .menu49.config.f.x98 disabled {m}}; configure_entry .menu49.config.f.x98 normal {n l}} else {configure_entry .menu49.config.f.x98 disabled {y n m l}}
	global CONFIG_SCSI_DEBUG
	if {($CONFIG_SCSI != 0) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCSI]];set CONFIG_SCSI_DEBUG [sync_tristate $CONFIG_SCSI_DEBUG $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu49.config.f.x99 disabled {y}} else {configure_entry .menu49.config.f.x99 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu49.config.f.x99 disabled {m}} else {configure_entry .menu49.config.f.x99 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu49.config.f.x99 normal {m}} else {configure_entry .menu49.config.f.x99 disabled {m}}; configure_entry .menu49.config.f.x99 normal {n l}} else {configure_entry .menu49.config.f.x99 disabled {y n m l}}
	global CONFIG_ARCH_ACORN
	global CONFIG_SCSI_ACORNSCSI_3
	if {($CONFIG_SCSI != 0) && ($CONFIG_ARCH_ACORN == 1) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCSI]];set CONFIG_SCSI_ACORNSCSI_3 [sync_tristate $CONFIG_SCSI_ACORNSCSI_3 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu49.config.f.x100 disabled {y}} else {configure_entry .menu49.config.f.x100 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu49.config.f.x100 disabled {m}} else {configure_entry .menu49.config.f.x100 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu49.config.f.x100 normal {m}} else {configure_entry .menu49.config.f.x100 disabled {m}}; configure_entry .menu49.config.f.x100 normal {n l}} else {configure_entry .menu49.config.f.x100 disabled {y n m l}}
	global CONFIG_SCSI_ACORNSCSI_TAGGED_QUEUE
	if {($CONFIG_SCSI != 0) && ($CONFIG_ARCH_ACORN == 1) && ($CONFIG_SCSI_ACORNSCSI_3 != 0)} then {
	configure_entry .menu49.config.f.x101 normal {n l y}} else {configure_entry .menu49.config.f.x101 disabled {y n l}}
	global CONFIG_SCSI_ACORNSCSI_SYNC
	if {($CONFIG_SCSI != 0) && ($CONFIG_ARCH_ACORN == 1) && ($CONFIG_SCSI_ACORNSCSI_3 != 0)} then {
	configure_entry .menu49.config.f.x102 normal {n l y}} else {configure_entry .menu49.config.f.x102 disabled {y n l}}
	global CONFIG_SCSI_ARXESCSI
	if {($CONFIG_SCSI != 0) && ($CONFIG_ARCH_ACORN == 1) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCSI]];set CONFIG_SCSI_ARXESCSI [sync_tristate $CONFIG_SCSI_ARXESCSI $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu49.config.f.x103 disabled {y}} else {configure_entry .menu49.config.f.x103 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu49.config.f.x103 disabled {m}} else {configure_entry .menu49.config.f.x103 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu49.config.f.x103 normal {m}} else {configure_entry .menu49.config.f.x103 disabled {m}}; configure_entry .menu49.config.f.x103 normal {n l}} else {configure_entry .menu49.config.f.x103 disabled {y n m l}}
	global CONFIG_SCSI_CUMANA_2
	if {($CONFIG_SCSI != 0) && ($CONFIG_ARCH_ACORN == 1) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCSI]];set CONFIG_SCSI_CUMANA_2 [sync_tristate $CONFIG_SCSI_CUMANA_2 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu49.config.f.x104 disabled {y}} else {configure_entry .menu49.config.f.x104 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu49.config.f.x104 disabled {m}} else {configure_entry .menu49.config.f.x104 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu49.config.f.x104 normal {m}} else {configure_entry .menu49.config.f.x104 disabled {m}}; configure_entry .menu49.config.f.x104 normal {n l}} else {configure_entry .menu49.config.f.x104 disabled {y n m l}}
	global CONFIG_SCSI_EESOXSCSI
	if {($CONFIG_SCSI != 0) && ($CONFIG_ARCH_ACORN == 1) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCSI]];set CONFIG_SCSI_EESOXSCSI [sync_tristate $CONFIG_SCSI_EESOXSCSI $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu49.config.f.x105 disabled {y}} else {configure_entry .menu49.config.f.x105 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu49.config.f.x105 disabled {m}} else {configure_entry .menu49.config.f.x105 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu49.config.f.x105 normal {m}} else {configure_entry .menu49.config.f.x105 disabled {m}}; configure_entry .menu49.config.f.x105 normal {n l}} else {configure_entry .menu49.config.f.x105 disabled {y n m l}}
	global CONFIG_SCSI_POWERTECSCSI
	if {($CONFIG_SCSI != 0) && ($CONFIG_ARCH_ACORN == 1) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCSI]];set CONFIG_SCSI_POWERTECSCSI [sync_tristate $CONFIG_SCSI_POWERTECSCSI $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu49.config.f.x106 disabled {y}} else {configure_entry .menu49.config.f.x106 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu49.config.f.x106 disabled {m}} else {configure_entry .menu49.config.f.x106 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu49.config.f.x106 normal {m}} else {configure_entry .menu49.config.f.x106 disabled {m}}; configure_entry .menu49.config.f.x106 normal {n l}} else {configure_entry .menu49.config.f.x106 disabled {y n m l}}
	if {($CONFIG_SCSI != 0) && ($CONFIG_ARCH_ACORN == 1) && ($CONFIG_EXPERIMENTAL == 1)} then {configure_entry .menu49.config.f.x107 normal {m}} else {configure_entry .menu49.config.f.x107 disabled {m}}
	global CONFIG_SCSI_CUMANA_1
	if {($CONFIG_SCSI != 0) && ($CONFIG_ARCH_ACORN == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCSI]];set CONFIG_SCSI_CUMANA_1 [sync_tristate $CONFIG_SCSI_CUMANA_1 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu49.config.f.x108 disabled {y}} else {configure_entry .menu49.config.f.x108 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu49.config.f.x108 disabled {m}} else {configure_entry .menu49.config.f.x108 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu49.config.f.x108 normal {m}} else {configure_entry .menu49.config.f.x108 disabled {m}}; configure_entry .menu49.config.f.x108 normal {n l}} else {configure_entry .menu49.config.f.x108 disabled {y n m l}}
	global CONFIG_ARCH_ARC
	global CONFIG_ARCH_A5K
	global CONFIG_SCSI_ECOSCSI
	if {($CONFIG_SCSI != 0) && ($CONFIG_ARCH_ACORN == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_ARCH_ARC == 1 || $CONFIG_ARCH_A5K == 1) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCSI]];set CONFIG_SCSI_ECOSCSI [sync_tristate $CONFIG_SCSI_ECOSCSI $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu49.config.f.x109 disabled {y}} else {configure_entry .menu49.config.f.x109 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu49.config.f.x109 disabled {m}} else {configure_entry .menu49.config.f.x109 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu49.config.f.x109 normal {m}} else {configure_entry .menu49.config.f.x109 disabled {m}}; configure_entry .menu49.config.f.x109 normal {n l}} else {configure_entry .menu49.config.f.x109 disabled {y n m l}}
	global CONFIG_SCSI_OAK1
	if {($CONFIG_SCSI != 0) && ($CONFIG_ARCH_ACORN == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCSI]];set CONFIG_SCSI_OAK1 [sync_tristate $CONFIG_SCSI_OAK1 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu49.config.f.x110 disabled {y}} else {configure_entry .menu49.config.f.x110 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu49.config.f.x110 disabled {m}} else {configure_entry .menu49.config.f.x110 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu49.config.f.x110 normal {m}} else {configure_entry .menu49.config.f.x110 disabled {m}}; configure_entry .menu49.config.f.x110 normal {n l}} else {configure_entry .menu49.config.f.x110 disabled {y n m l}}
}


proc update_define_menu49 {} {
	update_define_mainmenu
	global CONFIG_MODULES
	global CONFIG_53C700_IO_MAPPED
	global CONFIG_AIC7XXX_PROBE_EISA_VL
set CONFIG_AIC7XXX_PROBE_EISA_VL [expr $CONFIG_AIC7XXX_PROBE_EISA_VL|16]
	global CONFIG_AIC7XXX_BUILD_FIRMWARE
set CONFIG_AIC7XXX_BUILD_FIRMWARE [expr $CONFIG_AIC7XXX_BUILD_FIRMWARE|16]
	global CONFIG_AIC7XXX_DEBUG_ENABLE
set CONFIG_AIC7XXX_DEBUG_ENABLE [expr $CONFIG_AIC7XXX_DEBUG_ENABLE|16]
	global CONFIG_AIC7XXX_REG_PRETTY_PRINT
set CONFIG_AIC7XXX_REG_PRETTY_PRINT [expr $CONFIG_AIC7XXX_REG_PRETTY_PRINT|16]
	global CONFIG_AIC79XX_BUILD_FIRMWARE
set CONFIG_AIC79XX_BUILD_FIRMWARE [expr $CONFIG_AIC79XX_BUILD_FIRMWARE|16]
	global CONFIG_AIC79XX_ENABLE_RD_STRM
set CONFIG_AIC79XX_ENABLE_RD_STRM [expr $CONFIG_AIC79XX_ENABLE_RD_STRM|16]
	global CONFIG_AIC79XX_DEBUG_ENABLE
set CONFIG_AIC79XX_DEBUG_ENABLE [expr $CONFIG_AIC79XX_DEBUG_ENABLE|16]
	global CONFIG_AIC79XX_REG_PRETTY_PRINT
set CONFIG_AIC79XX_REG_PRETTY_PRINT [expr $CONFIG_AIC79XX_REG_PRETTY_PRINT|16]
	global CONFIG_AIC7XXX_OLD_TCQ_ON_BY_DEFAULT
set CONFIG_AIC7XXX_OLD_TCQ_ON_BY_DEFAULT [expr $CONFIG_AIC7XXX_OLD_TCQ_ON_BY_DEFAULT|16]
	global CONFIG_AIC7XXX_OLD_PROC_STATS
set CONFIG_AIC7XXX_OLD_PROC_STATS [expr $CONFIG_AIC7XXX_OLD_PROC_STATS|16]
	global CONFIG_SCSI_OMIT_FLASHPOINT
set CONFIG_SCSI_OMIT_FLASHPOINT [expr $CONFIG_SCSI_OMIT_FLASHPOINT|16]
	global CONFIG_SCSI_EATA_TAGGED_QUEUE
set CONFIG_SCSI_EATA_TAGGED_QUEUE [expr $CONFIG_SCSI_EATA_TAGGED_QUEUE|16]
	global CONFIG_SCSI_EATA_LINKED_COMMANDS
set CONFIG_SCSI_EATA_LINKED_COMMANDS [expr $CONFIG_SCSI_EATA_LINKED_COMMANDS|16]
	global CONFIG_SCSI_GENERIC_NCR53C400
set CONFIG_SCSI_GENERIC_NCR53C400 [expr $CONFIG_SCSI_GENERIC_NCR53C400|16]
	global CONFIG_IBMMCA_SCSI_ORDER_STANDARD
set CONFIG_IBMMCA_SCSI_ORDER_STANDARD [expr $CONFIG_IBMMCA_SCSI_ORDER_STANDARD|16]
	global CONFIG_IBMMCA_SCSI_DEV_RESET
set CONFIG_IBMMCA_SCSI_DEV_RESET [expr $CONFIG_IBMMCA_SCSI_DEV_RESET|16]
	global CONFIG_SCSI_IZIP_EPP16
set CONFIG_SCSI_IZIP_EPP16 [expr $CONFIG_SCSI_IZIP_EPP16|16]
	global CONFIG_SCSI_IZIP_SLOW_CTR
set CONFIG_SCSI_IZIP_SLOW_CTR [expr $CONFIG_SCSI_IZIP_SLOW_CTR|16]
	global CONFIG_SCSI_NCR53C7xx_sync
set CONFIG_SCSI_NCR53C7xx_sync [expr $CONFIG_SCSI_NCR53C7xx_sync|16]
	global CONFIG_SCSI_NCR53C7xx_FAST
set CONFIG_SCSI_NCR53C7xx_FAST [expr $CONFIG_SCSI_NCR53C7xx_FAST|16]
	global CONFIG_SCSI_NCR53C7xx_DISCONNECT
set CONFIG_SCSI_NCR53C7xx_DISCONNECT [expr $CONFIG_SCSI_NCR53C7xx_DISCONNECT|16]
	global CONFIG_SCSI_SYM53C8XX_IOMAPPED
set CONFIG_SCSI_SYM53C8XX_IOMAPPED [expr $CONFIG_SCSI_SYM53C8XX_IOMAPPED|16]
	global CONFIG_SCSI_NCR53C8XX_PROFILE
set CONFIG_SCSI_NCR53C8XX_PROFILE [expr $CONFIG_SCSI_NCR53C8XX_PROFILE|16]
	global CONFIG_SCSI_NCR53C8XX_IOMAPPED
set CONFIG_SCSI_NCR53C8XX_IOMAPPED [expr $CONFIG_SCSI_NCR53C8XX_IOMAPPED|16]
	global CONFIG_SCSI_NCR53C8XX_PQS_PDS
set CONFIG_SCSI_NCR53C8XX_PQS_PDS [expr $CONFIG_SCSI_NCR53C8XX_PQS_PDS|16]
	global CONFIG_SCSI_NCR53C8XX_NO_DISCONNECT
set CONFIG_SCSI_NCR53C8XX_NO_DISCONNECT [expr $CONFIG_SCSI_NCR53C8XX_NO_DISCONNECT|16]
	global CONFIG_SCSI_NCR53C8XX_SYMBIOS_COMPAT
set CONFIG_SCSI_NCR53C8XX_SYMBIOS_COMPAT [expr $CONFIG_SCSI_NCR53C8XX_SYMBIOS_COMPAT|16]
	global CONFIG_SCSI_QLOGIC_FC_FIRMWARE
set CONFIG_SCSI_QLOGIC_FC_FIRMWARE [expr $CONFIG_SCSI_QLOGIC_FC_FIRMWARE|16]
	global CONFIG_SCSI_DC390T_NOGENSUPP
set CONFIG_SCSI_DC390T_NOGENSUPP [expr $CONFIG_SCSI_DC390T_NOGENSUPP|16]
	global CONFIG_SCSI_U14_34F_LINKED_COMMANDS
set CONFIG_SCSI_U14_34F_LINKED_COMMANDS [expr $CONFIG_SCSI_U14_34F_LINKED_COMMANDS|16]
	global CONFIG_SCSI_ACORNSCSI_TAGGED_QUEUE
set CONFIG_SCSI_ACORNSCSI_TAGGED_QUEUE [expr $CONFIG_SCSI_ACORNSCSI_TAGGED_QUEUE|16]
	global CONFIG_SCSI_ACORNSCSI_SYNC
set CONFIG_SCSI_ACORNSCSI_SYNC [expr $CONFIG_SCSI_ACORNSCSI_SYNC|16]
	global CONFIG_SCSI
	global CONFIG_PCI
	global CONFIG_BLK_DEV_3W_XXXX_RAID
	if {($CONFIG_SCSI != 0) && ($CONFIG_PCI == 1) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCSI]]; set CONFIG_BLK_DEV_3W_XXXX_RAID [sync_tristate $CONFIG_BLK_DEV_3W_XXXX_RAID $tmpvar_dep]; set CONFIG_BLK_DEV_3W_XXXX_RAID [expr $CONFIG_BLK_DEV_3W_XXXX_RAID&15]}
	global CONFIG_SCSI_7000FASST
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCSI]]; set CONFIG_SCSI_7000FASST [sync_tristate $CONFIG_SCSI_7000FASST $tmpvar_dep]; set CONFIG_SCSI_7000FASST [expr $CONFIG_SCSI_7000FASST&15]}
	global CONFIG_SCSI_ACARD
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCSI]]; set CONFIG_SCSI_ACARD [sync_tristate $CONFIG_SCSI_ACARD $tmpvar_dep]; set CONFIG_SCSI_ACARD [expr $CONFIG_SCSI_ACARD&15]}
	global CONFIG_SCSI_AHA152X
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCSI]]; set CONFIG_SCSI_AHA152X [sync_tristate $CONFIG_SCSI_AHA152X $tmpvar_dep]; set CONFIG_SCSI_AHA152X [expr $CONFIG_SCSI_AHA152X&15]}
	global CONFIG_SCSI_AHA1542
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCSI]]; set CONFIG_SCSI_AHA1542 [sync_tristate $CONFIG_SCSI_AHA1542 $tmpvar_dep]; set CONFIG_SCSI_AHA1542 [expr $CONFIG_SCSI_AHA1542&15]}
	global CONFIG_SCSI_AHA1740
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCSI]]; set CONFIG_SCSI_AHA1740 [sync_tristate $CONFIG_SCSI_AHA1740 $tmpvar_dep]; set CONFIG_SCSI_AHA1740 [expr $CONFIG_SCSI_AHA1740&15]}
	global CONFIG_EXPERIMENTAL
	global CONFIG_SCSI_AACRAID
	if {($CONFIG_SCSI != 0) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCSI $CONFIG_PCI]]; set CONFIG_SCSI_AACRAID [sync_tristate $CONFIG_SCSI_AACRAID $tmpvar_dep]; set CONFIG_SCSI_AACRAID [expr $CONFIG_SCSI_AACRAID&15]}
	global CONFIG_SCSI_AIC7XXX_OLD
	global CONFIG_SCSI_AIC7XXX
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI_AIC7XXX_OLD != 1) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCSI]]; set CONFIG_SCSI_AIC7XXX [sync_tristate $CONFIG_SCSI_AIC7XXX $tmpvar_dep]; set CONFIG_SCSI_AIC7XXX [expr $CONFIG_SCSI_AIC7XXX&15]}
	global CONFIG_AIC7XXX_CMDS_PER_DEVICE
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI_AIC7XXX_OLD != 1) && ($CONFIG_SCSI_AIC7XXX != 0)} then {validate_int CONFIG_AIC7XXX_CMDS_PER_DEVICE "$CONFIG_AIC7XXX_CMDS_PER_DEVICE" 32}
	global CONFIG_AIC7XXX_RESET_DELAY_MS
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI_AIC7XXX_OLD != 1) && ($CONFIG_SCSI_AIC7XXX != 0)} then {validate_int CONFIG_AIC7XXX_RESET_DELAY_MS "$CONFIG_AIC7XXX_RESET_DELAY_MS" 15000}
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI_AIC7XXX_OLD != 1) && ($CONFIG_SCSI_AIC7XXX != 0)} then {
	set CONFIG_AIC7XXX_PROBE_EISA_VL [expr $CONFIG_AIC7XXX_PROBE_EISA_VL&15]}
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI_AIC7XXX_OLD != 1) && ($CONFIG_SCSI_AIC7XXX != 0)} then {
	set CONFIG_AIC7XXX_BUILD_FIRMWARE [expr $CONFIG_AIC7XXX_BUILD_FIRMWARE&15]}
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI_AIC7XXX_OLD != 1) && ($CONFIG_SCSI_AIC7XXX != 0)} then {
	set CONFIG_AIC7XXX_DEBUG_ENABLE [expr $CONFIG_AIC7XXX_DEBUG_ENABLE&15]}
	global CONFIG_AIC7XXX_DEBUG_MASK
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI_AIC7XXX_OLD != 1) && ($CONFIG_SCSI_AIC7XXX != 0)} then {validate_int CONFIG_AIC7XXX_DEBUG_MASK "$CONFIG_AIC7XXX_DEBUG_MASK" 0}
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI_AIC7XXX_OLD != 1) && ($CONFIG_SCSI_AIC7XXX != 0)} then {
	set CONFIG_AIC7XXX_REG_PRETTY_PRINT [expr $CONFIG_AIC7XXX_REG_PRETTY_PRINT&15]}
	global CONFIG_SCSI_AIC79XX
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCSI]]; set CONFIG_SCSI_AIC79XX [sync_tristate $CONFIG_SCSI_AIC79XX $tmpvar_dep]; set CONFIG_SCSI_AIC79XX [expr $CONFIG_SCSI_AIC79XX&15]}
	global CONFIG_AIC79XX_CMDS_PER_DEVICE
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI_AIC79XX != 0)} then {validate_int CONFIG_AIC79XX_CMDS_PER_DEVICE "$CONFIG_AIC79XX_CMDS_PER_DEVICE" 32}
	global CONFIG_AIC79XX_RESET_DELAY_MS
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI_AIC79XX != 0)} then {validate_int CONFIG_AIC79XX_RESET_DELAY_MS "$CONFIG_AIC79XX_RESET_DELAY_MS" 15000}
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI_AIC79XX != 0)} then {
	set CONFIG_AIC79XX_BUILD_FIRMWARE [expr $CONFIG_AIC79XX_BUILD_FIRMWARE&15]}
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI_AIC79XX != 0)} then {
	set CONFIG_AIC79XX_ENABLE_RD_STRM [expr $CONFIG_AIC79XX_ENABLE_RD_STRM&15]}
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI_AIC79XX != 0)} then {
	set CONFIG_AIC79XX_DEBUG_ENABLE [expr $CONFIG_AIC79XX_DEBUG_ENABLE&15]}
	global CONFIG_AIC79XX_DEBUG_MASK
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI_AIC79XX != 0)} then {validate_int CONFIG_AIC79XX_DEBUG_MASK "$CONFIG_AIC79XX_DEBUG_MASK" 0}
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI_AIC79XX != 0)} then {
	set CONFIG_AIC79XX_REG_PRETTY_PRINT [expr $CONFIG_AIC79XX_REG_PRETTY_PRINT&15]}
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI_AIC7XXX != 1) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCSI]]; set CONFIG_SCSI_AIC7XXX_OLD [sync_tristate $CONFIG_SCSI_AIC7XXX_OLD $tmpvar_dep]; set CONFIG_SCSI_AIC7XXX_OLD [expr $CONFIG_SCSI_AIC7XXX_OLD&15]}
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI_AIC7XXX != 1) && ($CONFIG_SCSI_AIC7XXX_OLD != 0)} then {
	set CONFIG_AIC7XXX_OLD_TCQ_ON_BY_DEFAULT [expr $CONFIG_AIC7XXX_OLD_TCQ_ON_BY_DEFAULT&15]}
	global CONFIG_AIC7XXX_OLD_CMDS_PER_DEVICE
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI_AIC7XXX != 1) && ($CONFIG_SCSI_AIC7XXX_OLD != 0)} then {validate_int CONFIG_AIC7XXX_OLD_CMDS_PER_DEVICE "$CONFIG_AIC7XXX_OLD_CMDS_PER_DEVICE" 8}
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI_AIC7XXX != 1) && ($CONFIG_SCSI_AIC7XXX_OLD != 0)} then {
	set CONFIG_AIC7XXX_OLD_PROC_STATS [expr $CONFIG_AIC7XXX_OLD_PROC_STATS&15]}
	global CONFIG_X86_64
	global CONFIG_SCSI_DPT_I2O
	if {($CONFIG_SCSI != 0) && ($CONFIG_X86_64 != 1) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCSI]]; set CONFIG_SCSI_DPT_I2O [sync_tristate $CONFIG_SCSI_DPT_I2O $tmpvar_dep]; set CONFIG_SCSI_DPT_I2O [expr $CONFIG_SCSI_DPT_I2O&15]}
	global CONFIG_SCSI_ADVANSYS
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCSI]]; set CONFIG_SCSI_ADVANSYS [sync_tristate $CONFIG_SCSI_ADVANSYS $tmpvar_dep]; set CONFIG_SCSI_ADVANSYS [expr $CONFIG_SCSI_ADVANSYS&15]}
	global CONFIG_SCSI_IN2000
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCSI]]; set CONFIG_SCSI_IN2000 [sync_tristate $CONFIG_SCSI_IN2000 $tmpvar_dep]; set CONFIG_SCSI_IN2000 [expr $CONFIG_SCSI_IN2000&15]}
	global CONFIG_SCSI_AM53C974
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCSI $CONFIG_PCI]]; set CONFIG_SCSI_AM53C974 [sync_tristate $CONFIG_SCSI_AM53C974 $tmpvar_dep]; set CONFIG_SCSI_AM53C974 [expr $CONFIG_SCSI_AM53C974&15]}
	global CONFIG_SCSI_MEGARAID
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCSI]]; set CONFIG_SCSI_MEGARAID [sync_tristate $CONFIG_SCSI_MEGARAID $tmpvar_dep]; set CONFIG_SCSI_MEGARAID [expr $CONFIG_SCSI_MEGARAID&15]}
	global CONFIG_SCSI_MEGARAID2
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCSI]]; set CONFIG_SCSI_MEGARAID2 [sync_tristate $CONFIG_SCSI_MEGARAID2 $tmpvar_dep]; set CONFIG_SCSI_MEGARAID2 [expr $CONFIG_SCSI_MEGARAID2&15]}
	global CONFIG_SCSI_BUSLOGIC
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCSI]]; set CONFIG_SCSI_BUSLOGIC [sync_tristate $CONFIG_SCSI_BUSLOGIC $tmpvar_dep]; set CONFIG_SCSI_BUSLOGIC [expr $CONFIG_SCSI_BUSLOGIC&15]}
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI_BUSLOGIC != 0)} then {
	set CONFIG_SCSI_OMIT_FLASHPOINT [expr $CONFIG_SCSI_OMIT_FLASHPOINT&15]}
	global CONFIG_SCSI_CPQFCTS
	if {($CONFIG_SCSI != 0) && ($CONFIG_PCI == 1) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCSI]]; set CONFIG_SCSI_CPQFCTS [sync_tristate $CONFIG_SCSI_CPQFCTS $tmpvar_dep]; set CONFIG_SCSI_CPQFCTS [expr $CONFIG_SCSI_CPQFCTS&15]}
	global CONFIG_SCSI_DMX3191D
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCSI $CONFIG_PCI]]; set CONFIG_SCSI_DMX3191D [sync_tristate $CONFIG_SCSI_DMX3191D $tmpvar_dep]; set CONFIG_SCSI_DMX3191D [expr $CONFIG_SCSI_DMX3191D&15]}
	global CONFIG_SCSI_DTC3280
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCSI]]; set CONFIG_SCSI_DTC3280 [sync_tristate $CONFIG_SCSI_DTC3280 $tmpvar_dep]; set CONFIG_SCSI_DTC3280 [expr $CONFIG_SCSI_DTC3280&15]}
	global CONFIG_SCSI_EATA
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCSI]]; set CONFIG_SCSI_EATA [sync_tristate $CONFIG_SCSI_EATA $tmpvar_dep]; set CONFIG_SCSI_EATA [expr $CONFIG_SCSI_EATA&15]}
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI_EATA != 0)} then {
	set CONFIG_SCSI_EATA_TAGGED_QUEUE [expr $CONFIG_SCSI_EATA_TAGGED_QUEUE&15]}
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI_EATA != 0)} then {
	set CONFIG_SCSI_EATA_LINKED_COMMANDS [expr $CONFIG_SCSI_EATA_LINKED_COMMANDS&15]}
	global CONFIG_SCSI_EATA_MAX_TAGS
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI_EATA != 0)} then {validate_int CONFIG_SCSI_EATA_MAX_TAGS "$CONFIG_SCSI_EATA_MAX_TAGS" 16}
	global CONFIG_SCSI_EATA_DMA
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCSI]]; set CONFIG_SCSI_EATA_DMA [sync_tristate $CONFIG_SCSI_EATA_DMA $tmpvar_dep]; set CONFIG_SCSI_EATA_DMA [expr $CONFIG_SCSI_EATA_DMA&15]}
	global CONFIG_SCSI_EATA_PIO
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCSI]]; set CONFIG_SCSI_EATA_PIO [sync_tristate $CONFIG_SCSI_EATA_PIO $tmpvar_dep]; set CONFIG_SCSI_EATA_PIO [expr $CONFIG_SCSI_EATA_PIO&15]}
	global CONFIG_SCSI_FUTURE_DOMAIN
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCSI]]; set CONFIG_SCSI_FUTURE_DOMAIN [sync_tristate $CONFIG_SCSI_FUTURE_DOMAIN $tmpvar_dep]; set CONFIG_SCSI_FUTURE_DOMAIN [expr $CONFIG_SCSI_FUTURE_DOMAIN&15]}
	global CONFIG_MCA
	global CONFIG_SCSI_FD_MCS
	if {($CONFIG_SCSI != 0) && ($CONFIG_MCA == 1) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCSI]]; set CONFIG_SCSI_FD_MCS [sync_tristate $CONFIG_SCSI_FD_MCS $tmpvar_dep]; set CONFIG_SCSI_FD_MCS [expr $CONFIG_SCSI_FD_MCS&15]}
	global CONFIG_SCSI_GDTH
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCSI]]; set CONFIG_SCSI_GDTH [sync_tristate $CONFIG_SCSI_GDTH $tmpvar_dep]; set CONFIG_SCSI_GDTH [expr $CONFIG_SCSI_GDTH&15]}
	global CONFIG_SCSI_GENERIC_NCR5380
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCSI]]; set CONFIG_SCSI_GENERIC_NCR5380 [sync_tristate $CONFIG_SCSI_GENERIC_NCR5380 $tmpvar_dep]; set CONFIG_SCSI_GENERIC_NCR5380 [expr $CONFIG_SCSI_GENERIC_NCR5380&15]}
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI_GENERIC_NCR5380 != 0)} then {
	set CONFIG_SCSI_GENERIC_NCR53C400 [expr $CONFIG_SCSI_GENERIC_NCR53C400&15]}
	global tmpvar_19
	global CONFIG_SCSI_G_NCR5380_PORT
	if {$tmpvar_19 == "Port"} then {set CONFIG_SCSI_G_NCR5380_PORT 1} else {set CONFIG_SCSI_G_NCR5380_PORT 0}
	global CONFIG_SCSI_G_NCR5380_MEM
	if {$tmpvar_19 == "Memory"} then {set CONFIG_SCSI_G_NCR5380_MEM 1} else {set CONFIG_SCSI_G_NCR5380_MEM 0}
	global CONFIG_SCSI_IBMMCA
	if {($CONFIG_SCSI != 0) && ($CONFIG_MCA == 1) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCSI]]; set CONFIG_SCSI_IBMMCA [sync_tristate $CONFIG_SCSI_IBMMCA $tmpvar_dep]; set CONFIG_SCSI_IBMMCA [expr $CONFIG_SCSI_IBMMCA&15]}
	if {($CONFIG_SCSI != 0) && ($CONFIG_MCA == 1) && ($CONFIG_SCSI_IBMMCA != 0)} then {
	set CONFIG_IBMMCA_SCSI_ORDER_STANDARD [expr $CONFIG_IBMMCA_SCSI_ORDER_STANDARD&15]}
	if {($CONFIG_SCSI != 0) && ($CONFIG_MCA == 1) && ($CONFIG_SCSI_IBMMCA != 0)} then {
	set CONFIG_IBMMCA_SCSI_DEV_RESET [expr $CONFIG_IBMMCA_SCSI_DEV_RESET&15]}
	global CONFIG_SCSI_INITIO
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCSI $CONFIG_PCI]]; set CONFIG_SCSI_INITIO [sync_tristate $CONFIG_SCSI_INITIO $tmpvar_dep]; set CONFIG_SCSI_INITIO [expr $CONFIG_SCSI_INITIO&15]}
	global CONFIG_SCSI_INIA100
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCSI $CONFIG_PCI]]; set CONFIG_SCSI_INIA100 [sync_tristate $CONFIG_SCSI_INIA100 $tmpvar_dep]; set CONFIG_SCSI_INIA100 [expr $CONFIG_SCSI_INIA100&15]}
	global CONFIG_PARPORT
	global CONFIG_SCSI_PPA
	if {($CONFIG_SCSI != 0) && ($CONFIG_PARPORT != 0) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4) && ($CONFIG_PARPORT == 1 || $CONFIG_PARPORT == 2 || $CONFIG_PARPORT == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCSI $CONFIG_PARPORT]]; set CONFIG_SCSI_PPA [sync_tristate $CONFIG_SCSI_PPA $tmpvar_dep]; set CONFIG_SCSI_PPA [expr $CONFIG_SCSI_PPA&15]}
	global CONFIG_SCSI_IMM
	if {($CONFIG_SCSI != 0) && ($CONFIG_PARPORT != 0) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4) && ($CONFIG_PARPORT == 1 || $CONFIG_PARPORT == 2 || $CONFIG_PARPORT == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCSI $CONFIG_PARPORT]]; set CONFIG_SCSI_IMM [sync_tristate $CONFIG_SCSI_IMM $tmpvar_dep]; set CONFIG_SCSI_IMM [expr $CONFIG_SCSI_IMM&15]}
	if {($CONFIG_SCSI != 0) && ($CONFIG_PARPORT != 0) && ($CONFIG_SCSI_PPA != 0 || $CONFIG_SCSI_IMM != 0)} then {
	set CONFIG_SCSI_IZIP_EPP16 [expr $CONFIG_SCSI_IZIP_EPP16&15]}
	if {($CONFIG_SCSI != 0) && ($CONFIG_PARPORT != 0) && ($CONFIG_SCSI_PPA != 0 || $CONFIG_SCSI_IMM != 0)} then {
	set CONFIG_SCSI_IZIP_SLOW_CTR [expr $CONFIG_SCSI_IZIP_SLOW_CTR&15]}
	global CONFIG_SCSI_NCR53C406A
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCSI]]; set CONFIG_SCSI_NCR53C406A [sync_tristate $CONFIG_SCSI_NCR53C406A $tmpvar_dep]; set CONFIG_SCSI_NCR53C406A [expr $CONFIG_SCSI_NCR53C406A&15]}
	global CONFIG_SCSI_NCR_D700
	if {($CONFIG_SCSI != 0) && ($CONFIG_MCA == 1) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCSI]]; set CONFIG_SCSI_NCR_D700 [sync_tristate $CONFIG_SCSI_NCR_D700 $tmpvar_dep]; set CONFIG_SCSI_NCR_D700 [expr $CONFIG_SCSI_NCR_D700&15]}
	if {($CONFIG_SCSI != 0) && ($CONFIG_MCA == 1) && ($CONFIG_SCSI_NCR_D700 != 0)} then {	global CONSTANT_Y
set CONFIG_53C700_IO_MAPPED $CONSTANT_Y }
	global CONFIG_SCSI_NCR53C7xx
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCSI $CONFIG_PCI]]; set CONFIG_SCSI_NCR53C7xx [sync_tristate $CONFIG_SCSI_NCR53C7xx $tmpvar_dep]; set CONFIG_SCSI_NCR53C7xx [expr $CONFIG_SCSI_NCR53C7xx&15]}
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI_NCR53C7xx != 0)} then {
	set CONFIG_SCSI_NCR53C7xx_sync [expr $CONFIG_SCSI_NCR53C7xx_sync&15]}
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI_NCR53C7xx != 0)} then {
	set CONFIG_SCSI_NCR53C7xx_FAST [expr $CONFIG_SCSI_NCR53C7xx_FAST&15]}
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI_NCR53C7xx != 0)} then {
	set CONFIG_SCSI_NCR53C7xx_DISCONNECT [expr $CONFIG_SCSI_NCR53C7xx_DISCONNECT&15]}
	global CONFIG_SCSI_SYM53C8XX_2
	if {($CONFIG_SCSI != 0) && ($CONFIG_PCI == 1) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCSI]]; set CONFIG_SCSI_SYM53C8XX_2 [sync_tristate $CONFIG_SCSI_SYM53C8XX_2 $tmpvar_dep]; set CONFIG_SCSI_SYM53C8XX_2 [expr $CONFIG_SCSI_SYM53C8XX_2&15]}
	global CONFIG_SCSI_SYM53C8XX_DMA_ADDRESSING_MODE
	if {($CONFIG_SCSI != 0) && ($CONFIG_PCI == 1) && ($CONFIG_SCSI_SYM53C8XX_2 != 0)} then {validate_int CONFIG_SCSI_SYM53C8XX_DMA_ADDRESSING_MODE "$CONFIG_SCSI_SYM53C8XX_DMA_ADDRESSING_MODE" 1}
	global CONFIG_SCSI_SYM53C8XX_DEFAULT_TAGS
	if {($CONFIG_SCSI != 0) && ($CONFIG_PCI == 1) && ($CONFIG_SCSI_SYM53C8XX_2 != 0)} then {validate_int CONFIG_SCSI_SYM53C8XX_DEFAULT_TAGS "$CONFIG_SCSI_SYM53C8XX_DEFAULT_TAGS" 16}
	global CONFIG_SCSI_SYM53C8XX_MAX_TAGS
	if {($CONFIG_SCSI != 0) && ($CONFIG_PCI == 1) && ($CONFIG_SCSI_SYM53C8XX_2 != 0)} then {validate_int CONFIG_SCSI_SYM53C8XX_MAX_TAGS "$CONFIG_SCSI_SYM53C8XX_MAX_TAGS" 64}
	if {($CONFIG_SCSI != 0) && ($CONFIG_PCI == 1) && ($CONFIG_SCSI_SYM53C8XX_2 != 0)} then {
	set CONFIG_SCSI_SYM53C8XX_IOMAPPED [expr $CONFIG_SCSI_SYM53C8XX_IOMAPPED&15]}
	global CONFIG_SCSI_NCR53C8XX
	if {($CONFIG_SCSI != 0) && ($CONFIG_PCI == 1 && $CONFIG_SCSI_SYM53C8XX_2 != 1) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCSI]]; set CONFIG_SCSI_NCR53C8XX [sync_tristate $CONFIG_SCSI_NCR53C8XX $tmpvar_dep]; set CONFIG_SCSI_NCR53C8XX [expr $CONFIG_SCSI_NCR53C8XX&15]}
	global CONFIG_SCSI_SYM53C8XX
	if {($CONFIG_SCSI != 0) && ($CONFIG_PCI == 1 && $CONFIG_SCSI_SYM53C8XX_2 != 1) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCSI]]; set CONFIG_SCSI_SYM53C8XX [sync_tristate $CONFIG_SCSI_SYM53C8XX $tmpvar_dep]; set CONFIG_SCSI_SYM53C8XX [expr $CONFIG_SCSI_SYM53C8XX&15]}
	global CONFIG_SCSI_ZALON
	global CONFIG_SCSI_NCR53C8XX_DEFAULT_TAGS
	if {($CONFIG_SCSI != 0) && ($CONFIG_PCI == 1 && $CONFIG_SCSI_SYM53C8XX_2 != 1) && ($CONFIG_SCSI_NCR53C8XX != 0 || $CONFIG_SCSI_ZALON == 1 || $CONFIG_SCSI_ZALON == 2 || $CONFIG_SCSI_SYM53C8XX != 0)} then {validate_int CONFIG_SCSI_NCR53C8XX_DEFAULT_TAGS "$CONFIG_SCSI_NCR53C8XX_DEFAULT_TAGS" 8}
	global CONFIG_SCSI_NCR53C8XX_MAX_TAGS
	if {($CONFIG_SCSI != 0) && ($CONFIG_PCI == 1 && $CONFIG_SCSI_SYM53C8XX_2 != 1) && ($CONFIG_SCSI_NCR53C8XX != 0 || $CONFIG_SCSI_ZALON == 1 || $CONFIG_SCSI_ZALON == 2 || $CONFIG_SCSI_SYM53C8XX != 0)} then {validate_int CONFIG_SCSI_NCR53C8XX_MAX_TAGS "$CONFIG_SCSI_NCR53C8XX_MAX_TAGS" 32}
	global CONFIG_SCSI_NCR53C8XX_SYNC
	if {($CONFIG_SCSI != 0) && ($CONFIG_PCI == 1 && $CONFIG_SCSI_SYM53C8XX_2 != 1) && ($CONFIG_SCSI_NCR53C8XX != 0 || $CONFIG_SCSI_ZALON == 1 || $CONFIG_SCSI_ZALON == 2 || $CONFIG_SCSI_SYM53C8XX != 0)} then {validate_int CONFIG_SCSI_NCR53C8XX_SYNC "$CONFIG_SCSI_NCR53C8XX_SYNC" 20}
	if {($CONFIG_SCSI != 0) && ($CONFIG_PCI == 1 && $CONFIG_SCSI_SYM53C8XX_2 != 1) && ($CONFIG_SCSI_NCR53C8XX != 0 || $CONFIG_SCSI_ZALON == 1 || $CONFIG_SCSI_ZALON == 2 || $CONFIG_SCSI_SYM53C8XX != 0)} then {
	set CONFIG_SCSI_NCR53C8XX_PROFILE [expr $CONFIG_SCSI_NCR53C8XX_PROFILE&15]}
	if {($CONFIG_SCSI != 0) && ($CONFIG_PCI == 1 && $CONFIG_SCSI_SYM53C8XX_2 != 1) && ($CONFIG_SCSI_NCR53C8XX != 0 || $CONFIG_SCSI_ZALON == 1 || $CONFIG_SCSI_ZALON == 2 || $CONFIG_SCSI_SYM53C8XX != 0)} then {
	set CONFIG_SCSI_NCR53C8XX_IOMAPPED [expr $CONFIG_SCSI_NCR53C8XX_IOMAPPED&15]}
	if {($CONFIG_SCSI != 0) && ($CONFIG_PCI == 1 && $CONFIG_SCSI_SYM53C8XX_2 != 1) && ($CONFIG_SCSI_NCR53C8XX != 0 || $CONFIG_SCSI_ZALON == 1 || $CONFIG_SCSI_ZALON == 2 || $CONFIG_SCSI_SYM53C8XX != 0) && ($CONFIG_SCSI_SYM53C8XX != 0)} then {
	set CONFIG_SCSI_NCR53C8XX_PQS_PDS [expr $CONFIG_SCSI_NCR53C8XX_PQS_PDS&15]}
	if {($CONFIG_SCSI != 0) && ($CONFIG_PCI == 1 && $CONFIG_SCSI_SYM53C8XX_2 != 1) && ($CONFIG_SCSI_NCR53C8XX != 0 || $CONFIG_SCSI_ZALON == 1 || $CONFIG_SCSI_ZALON == 2 || $CONFIG_SCSI_SYM53C8XX != 0) && ($CONFIG_SCSI_NCR53C8XX_DEFAULT_TAGS == "0")} then {
	set CONFIG_SCSI_NCR53C8XX_NO_DISCONNECT [expr $CONFIG_SCSI_NCR53C8XX_NO_DISCONNECT&15]}
	if {($CONFIG_SCSI != 0) && ($CONFIG_PCI == 1 && $CONFIG_SCSI_SYM53C8XX_2 != 1) && ($CONFIG_SCSI_NCR53C8XX != 0 || $CONFIG_SCSI_ZALON == 1 || $CONFIG_SCSI_ZALON == 2 || $CONFIG_SCSI_SYM53C8XX != 0) && ($CONFIG_EXPERIMENTAL == 1)} then {
	set CONFIG_SCSI_NCR53C8XX_SYMBIOS_COMPAT [expr $CONFIG_SCSI_NCR53C8XX_SYMBIOS_COMPAT&15]}
	global CONFIG_SCSI_MCA_53C9X
	if {($CONFIG_SCSI != 0) && ($CONFIG_MCA == 1) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCSI]]; set CONFIG_SCSI_MCA_53C9X [sync_tristate $CONFIG_SCSI_MCA_53C9X $tmpvar_dep]; set CONFIG_SCSI_MCA_53C9X [expr $CONFIG_SCSI_MCA_53C9X&15]}
	global CONFIG_SCSI_PAS16
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCSI]]; set CONFIG_SCSI_PAS16 [sync_tristate $CONFIG_SCSI_PAS16 $tmpvar_dep]; set CONFIG_SCSI_PAS16 [expr $CONFIG_SCSI_PAS16&15]}
	global CONFIG_SCSI_PCI2000
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCSI]]; set CONFIG_SCSI_PCI2000 [sync_tristate $CONFIG_SCSI_PCI2000 $tmpvar_dep]; set CONFIG_SCSI_PCI2000 [expr $CONFIG_SCSI_PCI2000&15]}
	global CONFIG_SCSI_PCI2220I
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCSI]]; set CONFIG_SCSI_PCI2220I [sync_tristate $CONFIG_SCSI_PCI2220I $tmpvar_dep]; set CONFIG_SCSI_PCI2220I [expr $CONFIG_SCSI_PCI2220I&15]}
	global CONFIG_SCSI_PSI240I
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCSI]]; set CONFIG_SCSI_PSI240I [sync_tristate $CONFIG_SCSI_PSI240I $tmpvar_dep]; set CONFIG_SCSI_PSI240I [expr $CONFIG_SCSI_PSI240I&15]}
	global CONFIG_SCSI_QLOGIC_FAS
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCSI]]; set CONFIG_SCSI_QLOGIC_FAS [sync_tristate $CONFIG_SCSI_QLOGIC_FAS $tmpvar_dep]; set CONFIG_SCSI_QLOGIC_FAS [expr $CONFIG_SCSI_QLOGIC_FAS&15]}
	global CONFIG_SCSI_QLOGIC_ISP
	if {($CONFIG_SCSI != 0) && ($CONFIG_PCI == 1) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCSI]]; set CONFIG_SCSI_QLOGIC_ISP [sync_tristate $CONFIG_SCSI_QLOGIC_ISP $tmpvar_dep]; set CONFIG_SCSI_QLOGIC_ISP [expr $CONFIG_SCSI_QLOGIC_ISP&15]}
	global CONFIG_SCSI_QLOGIC_FC
	if {($CONFIG_SCSI != 0) && ($CONFIG_PCI == 1) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCSI]]; set CONFIG_SCSI_QLOGIC_FC [sync_tristate $CONFIG_SCSI_QLOGIC_FC $tmpvar_dep]; set CONFIG_SCSI_QLOGIC_FC [expr $CONFIG_SCSI_QLOGIC_FC&15]}
	if {($CONFIG_SCSI != 0) && ($CONFIG_PCI == 1) && ($CONFIG_SCSI_QLOGIC_FC != 0)} then {
	set CONFIG_SCSI_QLOGIC_FC_FIRMWARE [expr $CONFIG_SCSI_QLOGIC_FC_FIRMWARE&15]}
	global CONFIG_SCSI_QLOGIC_1280
	if {($CONFIG_SCSI != 0) && ($CONFIG_PCI == 1) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCSI]]; set CONFIG_SCSI_QLOGIC_1280 [sync_tristate $CONFIG_SCSI_QLOGIC_1280 $tmpvar_dep]; set CONFIG_SCSI_QLOGIC_1280 [expr $CONFIG_SCSI_QLOGIC_1280&15]}
	global CONFIG_SCSI_SIM710
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCSI]]; set CONFIG_SCSI_SIM710 [sync_tristate $CONFIG_SCSI_SIM710 $tmpvar_dep]; set CONFIG_SCSI_SIM710 [expr $CONFIG_SCSI_SIM710&15]}
	global CONFIG_SCSI_SYM53C416
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCSI]]; set CONFIG_SCSI_SYM53C416 [sync_tristate $CONFIG_SCSI_SYM53C416 $tmpvar_dep]; set CONFIG_SCSI_SYM53C416 [expr $CONFIG_SCSI_SYM53C416&15]}
	global CONFIG_SCSI_DC390T
	if {($CONFIG_SCSI != 0) && ($CONFIG_PCI == 1) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCSI]]; set CONFIG_SCSI_DC390T [sync_tristate $CONFIG_SCSI_DC390T $tmpvar_dep]; set CONFIG_SCSI_DC390T [expr $CONFIG_SCSI_DC390T&15]}
	if {($CONFIG_SCSI != 0) && ($CONFIG_PCI == 1) && ($CONFIG_SCSI_DC390T != 0)} then {
	set CONFIG_SCSI_DC390T_NOGENSUPP [expr $CONFIG_SCSI_DC390T_NOGENSUPP&15]}
	global CONFIG_SCSI_T128
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCSI]]; set CONFIG_SCSI_T128 [sync_tristate $CONFIG_SCSI_T128 $tmpvar_dep]; set CONFIG_SCSI_T128 [expr $CONFIG_SCSI_T128&15]}
	global CONFIG_SCSI_U14_34F
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCSI]]; set CONFIG_SCSI_U14_34F [sync_tristate $CONFIG_SCSI_U14_34F $tmpvar_dep]; set CONFIG_SCSI_U14_34F [expr $CONFIG_SCSI_U14_34F&15]}
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI_U14_34F != 0)} then {
	set CONFIG_SCSI_U14_34F_LINKED_COMMANDS [expr $CONFIG_SCSI_U14_34F_LINKED_COMMANDS&15]}
	global CONFIG_SCSI_U14_34F_MAX_TAGS
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI_U14_34F != 0)} then {validate_int CONFIG_SCSI_U14_34F_MAX_TAGS "$CONFIG_SCSI_U14_34F_MAX_TAGS" 8}
	global CONFIG_SCSI_NSP32
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCSI]]; set CONFIG_SCSI_NSP32 [sync_tristate $CONFIG_SCSI_NSP32 $tmpvar_dep]; set CONFIG_SCSI_NSP32 [expr $CONFIG_SCSI_NSP32&15]}
	global CONFIG_SCSI_DEBUG
	if {($CONFIG_SCSI != 0) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCSI]]; set CONFIG_SCSI_DEBUG [sync_tristate $CONFIG_SCSI_DEBUG $tmpvar_dep]; set CONFIG_SCSI_DEBUG [expr $CONFIG_SCSI_DEBUG&15]}
	global CONFIG_ARCH_ACORN
	global CONFIG_SCSI_ACORNSCSI_3
	if {($CONFIG_SCSI != 0) && ($CONFIG_ARCH_ACORN == 1) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCSI]]; set CONFIG_SCSI_ACORNSCSI_3 [sync_tristate $CONFIG_SCSI_ACORNSCSI_3 $tmpvar_dep]; set CONFIG_SCSI_ACORNSCSI_3 [expr $CONFIG_SCSI_ACORNSCSI_3&15]}
	if {($CONFIG_SCSI != 0) && ($CONFIG_ARCH_ACORN == 1) && ($CONFIG_SCSI_ACORNSCSI_3 != 0)} then {
	set CONFIG_SCSI_ACORNSCSI_TAGGED_QUEUE [expr $CONFIG_SCSI_ACORNSCSI_TAGGED_QUEUE&15]}
	if {($CONFIG_SCSI != 0) && ($CONFIG_ARCH_ACORN == 1) && ($CONFIG_SCSI_ACORNSCSI_3 != 0)} then {
	set CONFIG_SCSI_ACORNSCSI_SYNC [expr $CONFIG_SCSI_ACORNSCSI_SYNC&15]}
	global CONFIG_SCSI_ARXESCSI
	if {($CONFIG_SCSI != 0) && ($CONFIG_ARCH_ACORN == 1) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCSI]]; set CONFIG_SCSI_ARXESCSI [sync_tristate $CONFIG_SCSI_ARXESCSI $tmpvar_dep]; set CONFIG_SCSI_ARXESCSI [expr $CONFIG_SCSI_ARXESCSI&15]}
	global CONFIG_SCSI_CUMANA_2
	if {($CONFIG_SCSI != 0) && ($CONFIG_ARCH_ACORN == 1) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCSI]]; set CONFIG_SCSI_CUMANA_2 [sync_tristate $CONFIG_SCSI_CUMANA_2 $tmpvar_dep]; set CONFIG_SCSI_CUMANA_2 [expr $CONFIG_SCSI_CUMANA_2&15]}
	global CONFIG_SCSI_EESOXSCSI
	if {($CONFIG_SCSI != 0) && ($CONFIG_ARCH_ACORN == 1) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCSI]]; set CONFIG_SCSI_EESOXSCSI [sync_tristate $CONFIG_SCSI_EESOXSCSI $tmpvar_dep]; set CONFIG_SCSI_EESOXSCSI [expr $CONFIG_SCSI_EESOXSCSI&15]}
	global CONFIG_SCSI_POWERTECSCSI
	if {($CONFIG_SCSI != 0) && ($CONFIG_ARCH_ACORN == 1) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCSI]]; set CONFIG_SCSI_POWERTECSCSI [sync_tristate $CONFIG_SCSI_POWERTECSCSI $tmpvar_dep]; set CONFIG_SCSI_POWERTECSCSI [expr $CONFIG_SCSI_POWERTECSCSI&15]}
	global CONFIG_SCSI_CUMANA_1
	if {($CONFIG_SCSI != 0) && ($CONFIG_ARCH_ACORN == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCSI]]; set CONFIG_SCSI_CUMANA_1 [sync_tristate $CONFIG_SCSI_CUMANA_1 $tmpvar_dep]; set CONFIG_SCSI_CUMANA_1 [expr $CONFIG_SCSI_CUMANA_1&15]}
	global CONFIG_ARCH_ARC
	global CONFIG_ARCH_A5K
	global CONFIG_SCSI_ECOSCSI
	if {($CONFIG_SCSI != 0) && ($CONFIG_ARCH_ACORN == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_ARCH_ARC == 1 || $CONFIG_ARCH_A5K == 1) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCSI]]; set CONFIG_SCSI_ECOSCSI [sync_tristate $CONFIG_SCSI_ECOSCSI $tmpvar_dep]; set CONFIG_SCSI_ECOSCSI [expr $CONFIG_SCSI_ECOSCSI&15]}
	global CONFIG_SCSI_OAK1
	if {($CONFIG_SCSI != 0) && ($CONFIG_ARCH_ACORN == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCSI]]; set CONFIG_SCSI_OAK1 [sync_tristate $CONFIG_SCSI_OAK1 $tmpvar_dep]; set CONFIG_SCSI_OAK1 [expr $CONFIG_SCSI_OAK1&15]}
}


proc menu50 {w title} {
	set oldFocus [focus]
	catch {focus .menu48}
	catch {destroy $w; unregister_active 50}
	toplevel $w -class Dialog
	wm withdraw $w
	global active_menus
	set active_menus [lsort -integer [linsert $active_menus end 50]]
	message $w.m -width 400 -aspect 300 -text \
		"PCMCIA SCSI adapter support"  -relief raised
	pack $w.m -pady 10 -side top -padx 10
	wm title $w "PCMCIA SCSI adapter support" 

	bind $w <Escape> "catch {focus $oldFocus}; destroy $w; unregister_active 50; break"
	set nextscript "catch {focus $oldFocus}; destroy $w; unregister_active 50; catch {destroy .menu48}; unregister_active 48; menu51 .menu51 \"$title\""
	frame $w.f
	button $w.f.back -text "OK" \
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 50"
	button $w.f.next -text "Next" -underline 0\
		-width 15 -command $nextscript
	bind all <Alt-n> $nextscript
	button $w.f.prev -text "Prev" -underline 0\
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 50; menu49 .menu49 \"$title\""
	bind $w <Alt-p> "catch {focus $oldFocus}; destroy $w; unregister_active 50; menu49 .menu49 \"$title\";break"
	pack $w.f.back $w.f.next $w.f.prev -side left -expand on
	pack $w.f -pady 10 -side bottom -anchor w -fill x
	frame $w.topline -relief ridge -borderwidth 2 -height 2
	pack $w.topline -side top -fill x

	frame $w.botline -relief ridge -borderwidth 2 -height 2
	pack $w.botline -side bottom -fill x

	frame $w.config
	pack $w.config -fill y -expand on

	scrollbar $w.config.vscroll -command "$w.config.canvas yview"
	pack $w.config.vscroll -side right -fill y

	canvas $w.config.canvas -height 1\
		-relief flat -borderwidth 0 -yscrollcommand "$w.config.vscroll set" \
		-width [expr [winfo screenwidth .] * 1 / 2] 
	frame $w.config.f
	bind $w <Key-Down> "$w.config.canvas yview scroll  1 unit;break;"
	bind $w <Key-Up> "$w.config.canvas yview scroll  -1 unit;break;"
	bind $w <Key-Next> "$w.config.canvas yview scroll  1 page;break;"
	bind $w <Key-Prior> "$w.config.canvas yview scroll  -1 page;break;"
	bind $w <Key-Home> "$w.config.canvas yview moveto 0;break;"
	bind $w <Key-End> "$w.config.canvas yview moveto 1 ;break;"
	pack $w.config.canvas -side right -fill y


	bool $w.config.f 50 0 "PCMCIA SCSI adapter support" CONFIG_SCSI_PCMCIA
	dep_tristate $w.config.f 50 1 "  Adaptec AHA152X PCMCIA support" CONFIG_PCMCIA_AHA152X
	dep_tristate $w.config.f 50 2 "  Future Domain PCMCIA support" CONFIG_PCMCIA_FDOMAIN
	dep_tristate $w.config.f 50 3 "  NinjaSCSI-3 / NinjaSCSI-32Bi (16bit) PCMCIA support" CONFIG_PCMCIA_NINJA_SCSI
	dep_tristate $w.config.f 50 4 "  Qlogic PCMCIA support" CONFIG_PCMCIA_QLOGIC



	focus $w
	update_active
	global winx; global winy
	if {[winfo exists .menu48] == 0} then {menu48 .menu48 "SCSI support"}
	set winx [expr [winfo x .menu48]+30]; set winy [expr [winfo y .menu48]+30]
	if {[winfo exists $w]} then {wm geometry $w +$winx+$winy}
	update idletasks
	if {[winfo exists $w]} then  {$w.config.canvas create window 0 0 -anchor nw -window $w.config.f

	$w.config.canvas configure \
		-width [expr [winfo reqwidth $w.config.f] + 1]\
		-scrollregion "-1 -1 [expr [winfo reqwidth $w.config.f] + 1] \
			 [expr [winfo reqheight $w.config.f] + 1]"

	set winy [expr [winfo reqh $w] - [winfo reqh $w.config.canvas]]
	set scry [expr [winfo screenh $w] / 2]
	set maxy [expr [winfo screenh $w] * 3 / 4]
	set canvtotal [expr [winfo reqh $w.config.f] + 2]
	if [expr $winy + $canvtotal < $maxy] {
		$w.config.canvas configure -height $canvtotal
	} else {
		$w.config.canvas configure -height [expr $scry - $winy]
		}
	}
	update idletasks
	if {[winfo exists $w]} then {
	wm maxsize $w [winfo width $w] [winfo screenheight $w]
	wm minsize $w [winfo width $w] 100

	wm deiconify $w
}
}

proc update_menu50 {} {
	global CONFIG_SCSI
	global CONFIG_HOTPLUG
	global CONFIG_PCMCIA
	global CONFIG_SCSI_PCMCIA
	if {($CONFIG_SCSI != 0) && ($CONFIG_HOTPLUG == 1 && $CONFIG_PCMCIA != 0)} then {
	configure_entry .menu50.config.f.x0 normal {n l y}} else {configure_entry .menu50.config.f.x0 disabled {y n l}}
	global CONFIG_MODULES
	global CONFIG_PCMCIA_AHA152X
	if {($CONFIG_SCSI != 0) && ($CONFIG_HOTPLUG == 1 && $CONFIG_PCMCIA != 0) && ($CONFIG_SCSI_PCMCIA == 1)} then {
	global CONSTANT_M
	set tmpvar_dep [effective_dep [list $CONSTANT_M]];set CONFIG_PCMCIA_AHA152X [sync_tristate $CONFIG_PCMCIA_AHA152X $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu50.config.f.x1 disabled {y}} else {configure_entry .menu50.config.f.x1 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu50.config.f.x1 disabled {m}} else {configure_entry .menu50.config.f.x1 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu50.config.f.x1 normal {m}} else {configure_entry .menu50.config.f.x1 disabled {m}}; configure_entry .menu50.config.f.x1 normal {n l}} else {configure_entry .menu50.config.f.x1 disabled {y n m l}}
	global CONFIG_PCMCIA_FDOMAIN
	if {($CONFIG_SCSI != 0) && ($CONFIG_HOTPLUG == 1 && $CONFIG_PCMCIA != 0) && ($CONFIG_SCSI_PCMCIA == 1)} then {
	global CONSTANT_M
	set tmpvar_dep [effective_dep [list $CONSTANT_M]];set CONFIG_PCMCIA_FDOMAIN [sync_tristate $CONFIG_PCMCIA_FDOMAIN $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu50.config.f.x2 disabled {y}} else {configure_entry .menu50.config.f.x2 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu50.config.f.x2 disabled {m}} else {configure_entry .menu50.config.f.x2 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu50.config.f.x2 normal {m}} else {configure_entry .menu50.config.f.x2 disabled {m}}; configure_entry .menu50.config.f.x2 normal {n l}} else {configure_entry .menu50.config.f.x2 disabled {y n m l}}
	global CONFIG_PCMCIA_NINJA_SCSI
	if {($CONFIG_SCSI != 0) && ($CONFIG_HOTPLUG == 1 && $CONFIG_PCMCIA != 0) && ($CONFIG_SCSI_PCMCIA == 1)} then {
	global CONSTANT_M
	set tmpvar_dep [effective_dep [list $CONSTANT_M]];set CONFIG_PCMCIA_NINJA_SCSI [sync_tristate $CONFIG_PCMCIA_NINJA_SCSI $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu50.config.f.x3 disabled {y}} else {configure_entry .menu50.config.f.x3 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu50.config.f.x3 disabled {m}} else {configure_entry .menu50.config.f.x3 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu50.config.f.x3 normal {m}} else {configure_entry .menu50.config.f.x3 disabled {m}}; configure_entry .menu50.config.f.x3 normal {n l}} else {configure_entry .menu50.config.f.x3 disabled {y n m l}}
	global CONFIG_PCMCIA_QLOGIC
	if {($CONFIG_SCSI != 0) && ($CONFIG_HOTPLUG == 1 && $CONFIG_PCMCIA != 0) && ($CONFIG_SCSI_PCMCIA == 1)} then {
	global CONSTANT_M
	set tmpvar_dep [effective_dep [list $CONSTANT_M]];set CONFIG_PCMCIA_QLOGIC [sync_tristate $CONFIG_PCMCIA_QLOGIC $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu50.config.f.x4 disabled {y}} else {configure_entry .menu50.config.f.x4 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu50.config.f.x4 disabled {m}} else {configure_entry .menu50.config.f.x4 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu50.config.f.x4 normal {m}} else {configure_entry .menu50.config.f.x4 disabled {m}}; configure_entry .menu50.config.f.x4 normal {n l}} else {configure_entry .menu50.config.f.x4 disabled {y n m l}}
}


proc update_define_menu50 {} {
	update_define_mainmenu
	global CONFIG_MODULES
	global CONFIG_PCMCIA_SCSICARD
	global CONFIG_SCSI_PCMCIA
set CONFIG_SCSI_PCMCIA [expr $CONFIG_SCSI_PCMCIA|16]
	global CONFIG_SCSI
	global CONFIG_HOTPLUG
	global CONFIG_PCMCIA
	if {($CONFIG_SCSI != 0) && ($CONFIG_HOTPLUG == 1 && $CONFIG_PCMCIA != 0)} then {
	set CONFIG_SCSI_PCMCIA [expr $CONFIG_SCSI_PCMCIA&15]}
	global CONFIG_PCMCIA_AHA152X
	if {($CONFIG_SCSI != 0) && ($CONFIG_HOTPLUG == 1 && $CONFIG_PCMCIA != 0) && ($CONFIG_SCSI_PCMCIA == 1)} then {
	global CONSTANT_M
	set tmpvar_dep [effective_dep [list $CONSTANT_M]]; set CONFIG_PCMCIA_AHA152X [sync_tristate $CONFIG_PCMCIA_AHA152X $tmpvar_dep]; set CONFIG_PCMCIA_AHA152X [expr $CONFIG_PCMCIA_AHA152X&15]}
	global CONFIG_PCMCIA_FDOMAIN
	if {($CONFIG_SCSI != 0) && ($CONFIG_HOTPLUG == 1 && $CONFIG_PCMCIA != 0) && ($CONFIG_SCSI_PCMCIA == 1)} then {
	global CONSTANT_M
	set tmpvar_dep [effective_dep [list $CONSTANT_M]]; set CONFIG_PCMCIA_FDOMAIN [sync_tristate $CONFIG_PCMCIA_FDOMAIN $tmpvar_dep]; set CONFIG_PCMCIA_FDOMAIN [expr $CONFIG_PCMCIA_FDOMAIN&15]}
	global CONFIG_PCMCIA_NINJA_SCSI
	if {($CONFIG_SCSI != 0) && ($CONFIG_HOTPLUG == 1 && $CONFIG_PCMCIA != 0) && ($CONFIG_SCSI_PCMCIA == 1)} then {
	global CONSTANT_M
	set tmpvar_dep [effective_dep [list $CONSTANT_M]]; set CONFIG_PCMCIA_NINJA_SCSI [sync_tristate $CONFIG_PCMCIA_NINJA_SCSI $tmpvar_dep]; set CONFIG_PCMCIA_NINJA_SCSI [expr $CONFIG_PCMCIA_NINJA_SCSI&15]}
	global CONFIG_PCMCIA_QLOGIC
	if {($CONFIG_SCSI != 0) && ($CONFIG_HOTPLUG == 1 && $CONFIG_PCMCIA != 0) && ($CONFIG_SCSI_PCMCIA == 1)} then {
	global CONSTANT_M
	set tmpvar_dep [effective_dep [list $CONSTANT_M]]; set CONFIG_PCMCIA_QLOGIC [sync_tristate $CONFIG_PCMCIA_QLOGIC $tmpvar_dep]; set CONFIG_PCMCIA_QLOGIC [expr $CONFIG_PCMCIA_QLOGIC&15]}
	if {($CONFIG_SCSI != 0) && ($CONFIG_HOTPLUG == 1 && $CONFIG_PCMCIA != 0) && ($CONFIG_PCMCIA_QLOGIC == 1 || $CONFIG_PCMCIA_AHA152X == 1 || $CONFIG_PCMCIA_FDOMAIN == 1 || $CONFIG_PCMCIA_NINJA_SCSI == 1)} then {	global CONSTANT_Y
set CONFIG_PCMCIA_SCSICARD $CONSTANT_Y }
}


menu_option menu51 51 "IEEE 1394 (FireWire) support (EXPERIMENTAL)"
proc menu51 {w title} {
	set oldFocus [focus]
	catch {destroy $w; unregister_active 51}
	toplevel $w -class Dialog
	wm withdraw $w
	global active_menus
	set active_menus [lsort -integer [linsert $active_menus end 51]]
	message $w.m -width 400 -aspect 300 -text \
		"IEEE 1394 (FireWire) support (EXPERIMENTAL)"  -relief raised
	pack $w.m -pady 10 -side top -padx 10
	wm title $w "IEEE 1394 (FireWire) support (EXPERIMENTAL)" 

	bind $w <Escape> "catch {focus $oldFocus}; destroy $w; unregister_active 51; break"
	set nextscript "catch {focus $oldFocus}; destroy $w; unregister_active 51; menu52 .menu52 \"$title\""
	frame $w.f
	button $w.f.back -text "Main Menu" \
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 51"
	button $w.f.next -text "Next" -underline 0\
		-width 15 -command $nextscript
	bind all <Alt-n> $nextscript
	button $w.f.prev -text "Prev" -underline 0\
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 51; menu50 .menu50 \"$title\""
	bind $w <Alt-p> "catch {focus $oldFocus}; destroy $w; unregister_active 51; menu50 .menu50 \"$title\";break"
	pack $w.f.back $w.f.next $w.f.prev -side left -expand on
	pack $w.f -pady 10 -side bottom -anchor w -fill x
	frame $w.topline -relief ridge -borderwidth 2 -height 2
	pack $w.topline -side top -fill x

	frame $w.botline -relief ridge -borderwidth 2 -height 2
	pack $w.botline -side bottom -fill x

	frame $w.config
	pack $w.config -fill y -expand on

	scrollbar $w.config.vscroll -command "$w.config.canvas yview"
	pack $w.config.vscroll -side right -fill y

	canvas $w.config.canvas -height 1\
		-relief flat -borderwidth 0 -yscrollcommand "$w.config.vscroll set" \
		-width [expr [winfo screenwidth .] * 1 / 2] 
	frame $w.config.f
	bind $w <Key-Down> "$w.config.canvas yview scroll  1 unit;break;"
	bind $w <Key-Up> "$w.config.canvas yview scroll  -1 unit;break;"
	bind $w <Key-Next> "$w.config.canvas yview scroll  1 page;break;"
	bind $w <Key-Prior> "$w.config.canvas yview scroll  -1 page;break;"
	bind $w <Key-Home> "$w.config.canvas yview moveto 0;break;"
	bind $w <Key-End> "$w.config.canvas yview moveto 1 ;break;"
	pack $w.config.canvas -side right -fill y


	dep_tristate $w.config.f 51 0 "IEEE 1394 (FireWire) support (EXPERIMENTAL)" CONFIG_IEEE1394
	comment $w.config.f 51 1 "Device Drivers"
	comment $w.config.f 51 2 "  Texas Instruments PCILynx requires I2C bit-banging"
	dep_tristate $w.config.f 51 3 "  Texas Instruments PCILynx support" CONFIG_IEEE1394_PCILYNX
	dep_tristate $w.config.f 51 4 "  OHCI-1394 support" CONFIG_IEEE1394_OHCI1394
	comment $w.config.f 51 5 "Protocol Drivers"
	dep_tristate $w.config.f 51 6 "  OHCI-1394 Video support" CONFIG_IEEE1394_VIDEO1394
	dep_tristate $w.config.f 51 7 "  SBP-2 support (Harddisks etc.)" CONFIG_IEEE1394_SBP2
	bool $w.config.f 51 8 "    Enable Phys DMA support for SBP2 (Debug)" CONFIG_IEEE1394_SBP2_PHYS_DMA
	dep_tristate $w.config.f 51 9 "  Ethernet over 1394" CONFIG_IEEE1394_ETH1394
	dep_tristate $w.config.f 51 10 "  OHCI-DV I/O support" CONFIG_IEEE1394_DV1394
	dep_tristate $w.config.f 51 11 "  Raw IEEE1394 I/O support" CONFIG_IEEE1394_RAWIO
	dep_tristate $w.config.f 51 12 "  IEC61883-1 Plug support" CONFIG_IEEE1394_CMP
	dep_tristate $w.config.f 51 13 "    IEC61883-6 (Audio transmission) support" CONFIG_IEEE1394_AMDTP
	bool $w.config.f 51 14 "Excessive debugging output" CONFIG_IEEE1394_VERBOSEDEBUG
	bool $w.config.f 51 15 "OUI Database built-in" CONFIG_IEEE1394_OUI_DB



	focus $w
	update_active
	global winx; global winy
	set winx [expr [winfo x .]+30]; set winy [expr [winfo y .]+30]
	if {[winfo exists $w]} then {wm geometry $w +$winx+$winy}
	update idletasks
	if {[winfo exists $w]} then  {$w.config.canvas create window 0 0 -anchor nw -window $w.config.f

	$w.config.canvas configure \
		-width [expr [winfo reqwidth $w.config.f] + 1]\
		-scrollregion "-1 -1 [expr [winfo reqwidth $w.config.f] + 1] \
			 [expr [winfo reqheight $w.config.f] + 1]"

	set winy [expr [winfo reqh $w] - [winfo reqh $w.config.canvas]]
	set scry [expr [winfo screenh $w] / 2]
	set maxy [expr [winfo screenh $w] * 3 / 4]
	set canvtotal [expr [winfo reqh $w.config.f] + 2]
	if [expr $winy + $canvtotal < $maxy] {
		$w.config.canvas configure -height $canvtotal
	} else {
		$w.config.canvas configure -height [expr $scry - $winy]
		}
	}
	update idletasks
	if {[winfo exists $w]} then {
	wm maxsize $w [winfo width $w] [winfo screenheight $w]
	wm minsize $w [winfo width $w] 100

	wm deiconify $w
}
}

proc update_menu51 {} {
	global CONFIG_MODULES
	global CONFIG_PCI
	global CONFIG_EXPERIMENTAL
	global CONFIG_IEEE1394
	if {($CONFIG_PCI == 1 && $CONFIG_EXPERIMENTAL == 1) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PCI]];set CONFIG_IEEE1394 [sync_tristate $CONFIG_IEEE1394 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu51.config.f.x0 disabled {y}} else {configure_entry .menu51.config.f.x0 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu51.config.f.x0 disabled {m}} else {configure_entry .menu51.config.f.x0 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu51.config.f.x0 normal {m}} else {configure_entry .menu51.config.f.x0 disabled {m}}; configure_entry .menu51.config.f.x0 normal {n l}} else {configure_entry .menu51.config.f.x0 disabled {y n m l}}
	if {($CONFIG_PCI == 1 && $CONFIG_EXPERIMENTAL == 1) && ($CONFIG_IEEE1394 != 0)} then {configure_entry .menu51.config.f.x1 normal {m}} else {configure_entry .menu51.config.f.x1 disabled {m}}
	global CONFIG_I2C
	global CONFIG_I2C_ALGOBIT
	if {($CONFIG_PCI == 1 && $CONFIG_EXPERIMENTAL == 1) && ($CONFIG_IEEE1394 != 0) && ($CONFIG_I2C == 0 || $CONFIG_I2C_ALGOBIT == 0)} then {configure_entry .menu51.config.f.x2 normal {m}} else {configure_entry .menu51.config.f.x2 disabled {m}}
	global CONFIG_IEEE1394_PCILYNX
	if {($CONFIG_PCI == 1 && $CONFIG_EXPERIMENTAL == 1) && ($CONFIG_IEEE1394 != 0) && ($CONFIG_I2C != 0 && $CONFIG_I2C_ALGOBIT != 0) && ($CONFIG_IEEE1394 == 1 || $CONFIG_IEEE1394 == 2 || $CONFIG_IEEE1394 == 4) && ($CONFIG_I2C == 1 || $CONFIG_I2C == 2 || $CONFIG_I2C == 4) && ($CONFIG_I2C_ALGOBIT == 1 || $CONFIG_I2C_ALGOBIT == 2 || $CONFIG_I2C_ALGOBIT == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IEEE1394 $CONFIG_I2C $CONFIG_I2C_ALGOBIT]];set CONFIG_IEEE1394_PCILYNX [sync_tristate $CONFIG_IEEE1394_PCILYNX $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu51.config.f.x3 disabled {y}} else {configure_entry .menu51.config.f.x3 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu51.config.f.x3 disabled {m}} else {configure_entry .menu51.config.f.x3 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu51.config.f.x3 normal {m}} else {configure_entry .menu51.config.f.x3 disabled {m}}; configure_entry .menu51.config.f.x3 normal {n l}} else {configure_entry .menu51.config.f.x3 disabled {y n m l}}
	global CONFIG_IEEE1394_OHCI1394
	if {($CONFIG_PCI == 1 && $CONFIG_EXPERIMENTAL == 1) && ($CONFIG_IEEE1394 != 0) && ($CONFIG_IEEE1394 == 1 || $CONFIG_IEEE1394 == 2 || $CONFIG_IEEE1394 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IEEE1394]];set CONFIG_IEEE1394_OHCI1394 [sync_tristate $CONFIG_IEEE1394_OHCI1394 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu51.config.f.x4 disabled {y}} else {configure_entry .menu51.config.f.x4 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu51.config.f.x4 disabled {m}} else {configure_entry .menu51.config.f.x4 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu51.config.f.x4 normal {m}} else {configure_entry .menu51.config.f.x4 disabled {m}}; configure_entry .menu51.config.f.x4 normal {n l}} else {configure_entry .menu51.config.f.x4 disabled {y n m l}}
	if {($CONFIG_PCI == 1 && $CONFIG_EXPERIMENTAL == 1) && ($CONFIG_IEEE1394 != 0)} then {configure_entry .menu51.config.f.x5 normal {m}} else {configure_entry .menu51.config.f.x5 disabled {m}}
	global CONFIG_IEEE1394_VIDEO1394
	if {($CONFIG_PCI == 1 && $CONFIG_EXPERIMENTAL == 1) && ($CONFIG_IEEE1394 != 0) && ($CONFIG_IEEE1394_OHCI1394 == 1 || $CONFIG_IEEE1394_OHCI1394 == 2 || $CONFIG_IEEE1394_OHCI1394 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IEEE1394_OHCI1394]];set CONFIG_IEEE1394_VIDEO1394 [sync_tristate $CONFIG_IEEE1394_VIDEO1394 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu51.config.f.x6 disabled {y}} else {configure_entry .menu51.config.f.x6 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu51.config.f.x6 disabled {m}} else {configure_entry .menu51.config.f.x6 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu51.config.f.x6 normal {m}} else {configure_entry .menu51.config.f.x6 disabled {m}}; configure_entry .menu51.config.f.x6 normal {n l}} else {configure_entry .menu51.config.f.x6 disabled {y n m l}}
	global CONFIG_SCSI
	global CONFIG_IEEE1394_SBP2
	if {($CONFIG_PCI == 1 && $CONFIG_EXPERIMENTAL == 1) && ($CONFIG_IEEE1394 != 0) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4) && ($CONFIG_IEEE1394 == 1 || $CONFIG_IEEE1394 == 2 || $CONFIG_IEEE1394 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCSI $CONFIG_IEEE1394]];set CONFIG_IEEE1394_SBP2 [sync_tristate $CONFIG_IEEE1394_SBP2 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu51.config.f.x7 disabled {y}} else {configure_entry .menu51.config.f.x7 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu51.config.f.x7 disabled {m}} else {configure_entry .menu51.config.f.x7 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu51.config.f.x7 normal {m}} else {configure_entry .menu51.config.f.x7 disabled {m}}; configure_entry .menu51.config.f.x7 normal {n l}} else {configure_entry .menu51.config.f.x7 disabled {y n m l}}
	global CONFIG_IEEE1394_SBP2_PHYS_DMA
	if {($CONFIG_PCI == 1 && $CONFIG_EXPERIMENTAL == 1) && ($CONFIG_IEEE1394 != 0) && ($CONFIG_IEEE1394_SBP2 != 0)} then {
	configure_entry .menu51.config.f.x8 normal {n l y}} else {configure_entry .menu51.config.f.x8 disabled {y n l}}
	global CONFIG_IEEE1394_ETH1394
	if {($CONFIG_PCI == 1 && $CONFIG_EXPERIMENTAL == 1) && ($CONFIG_IEEE1394 != 0) && ($CONFIG_IEEE1394 == 1 || $CONFIG_IEEE1394 == 2 || $CONFIG_IEEE1394 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IEEE1394]];set CONFIG_IEEE1394_ETH1394 [sync_tristate $CONFIG_IEEE1394_ETH1394 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu51.config.f.x9 disabled {y}} else {configure_entry .menu51.config.f.x9 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu51.config.f.x9 disabled {m}} else {configure_entry .menu51.config.f.x9 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu51.config.f.x9 normal {m}} else {configure_entry .menu51.config.f.x9 disabled {m}}; configure_entry .menu51.config.f.x9 normal {n l}} else {configure_entry .menu51.config.f.x9 disabled {y n m l}}
	global CONFIG_IEEE1394_DV1394
	if {($CONFIG_PCI == 1 && $CONFIG_EXPERIMENTAL == 1) && ($CONFIG_IEEE1394 != 0) && ($CONFIG_IEEE1394_OHCI1394 == 1 || $CONFIG_IEEE1394_OHCI1394 == 2 || $CONFIG_IEEE1394_OHCI1394 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IEEE1394_OHCI1394]];set CONFIG_IEEE1394_DV1394 [sync_tristate $CONFIG_IEEE1394_DV1394 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu51.config.f.x10 disabled {y}} else {configure_entry .menu51.config.f.x10 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu51.config.f.x10 disabled {m}} else {configure_entry .menu51.config.f.x10 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu51.config.f.x10 normal {m}} else {configure_entry .menu51.config.f.x10 disabled {m}}; configure_entry .menu51.config.f.x10 normal {n l}} else {configure_entry .menu51.config.f.x10 disabled {y n m l}}
	global CONFIG_IEEE1394_RAWIO
	if {($CONFIG_PCI == 1 && $CONFIG_EXPERIMENTAL == 1) && ($CONFIG_IEEE1394 != 0) && ($CONFIG_IEEE1394 == 1 || $CONFIG_IEEE1394 == 2 || $CONFIG_IEEE1394 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IEEE1394]];set CONFIG_IEEE1394_RAWIO [sync_tristate $CONFIG_IEEE1394_RAWIO $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu51.config.f.x11 disabled {y}} else {configure_entry .menu51.config.f.x11 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu51.config.f.x11 disabled {m}} else {configure_entry .menu51.config.f.x11 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu51.config.f.x11 normal {m}} else {configure_entry .menu51.config.f.x11 disabled {m}}; configure_entry .menu51.config.f.x11 normal {n l}} else {configure_entry .menu51.config.f.x11 disabled {y n m l}}
	global CONFIG_IEEE1394_CMP
	if {($CONFIG_PCI == 1 && $CONFIG_EXPERIMENTAL == 1) && ($CONFIG_IEEE1394 != 0) && ($CONFIG_IEEE1394 == 1 || $CONFIG_IEEE1394 == 2 || $CONFIG_IEEE1394 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IEEE1394]];set CONFIG_IEEE1394_CMP [sync_tristate $CONFIG_IEEE1394_CMP $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu51.config.f.x12 disabled {y}} else {configure_entry .menu51.config.f.x12 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu51.config.f.x12 disabled {m}} else {configure_entry .menu51.config.f.x12 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu51.config.f.x12 normal {m}} else {configure_entry .menu51.config.f.x12 disabled {m}}; configure_entry .menu51.config.f.x12 normal {n l}} else {configure_entry .menu51.config.f.x12 disabled {y n m l}}
	global CONFIG_IEEE1394_AMDTP
	if {($CONFIG_PCI == 1 && $CONFIG_EXPERIMENTAL == 1) && ($CONFIG_IEEE1394 != 0) && ($CONFIG_IEEE1394_CMP != 0) && ($CONFIG_IEEE1394_OHCI1394 == 1 || $CONFIG_IEEE1394_OHCI1394 == 2 || $CONFIG_IEEE1394_OHCI1394 == 4) && ($CONFIG_IEEE1394_CMP == 1 || $CONFIG_IEEE1394_CMP == 2 || $CONFIG_IEEE1394_CMP == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IEEE1394_OHCI1394 $CONFIG_IEEE1394_CMP]];set CONFIG_IEEE1394_AMDTP [sync_tristate $CONFIG_IEEE1394_AMDTP $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu51.config.f.x13 disabled {y}} else {configure_entry .menu51.config.f.x13 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu51.config.f.x13 disabled {m}} else {configure_entry .menu51.config.f.x13 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu51.config.f.x13 normal {m}} else {configure_entry .menu51.config.f.x13 disabled {m}}; configure_entry .menu51.config.f.x13 normal {n l}} else {configure_entry .menu51.config.f.x13 disabled {y n m l}}
	global CONFIG_IEEE1394_VERBOSEDEBUG
	if {($CONFIG_PCI == 1 && $CONFIG_EXPERIMENTAL == 1) && ($CONFIG_IEEE1394 != 0)} then {
	configure_entry .menu51.config.f.x14 normal {n l y}} else {configure_entry .menu51.config.f.x14 disabled {y n l}}
	global CONFIG_IEEE1394_OUI_DB
	if {($CONFIG_PCI == 1 && $CONFIG_EXPERIMENTAL == 1) && ($CONFIG_IEEE1394 != 0)} then {
	configure_entry .menu51.config.f.x15 normal {n l y}} else {configure_entry .menu51.config.f.x15 disabled {y n l}}
}


proc update_define_menu51 {} {
	update_define_mainmenu
	global CONFIG_MODULES
	global CONFIG_IEEE1394_SBP2_PHYS_DMA
set CONFIG_IEEE1394_SBP2_PHYS_DMA [expr $CONFIG_IEEE1394_SBP2_PHYS_DMA|16]
	global CONFIG_IEEE1394_VERBOSEDEBUG
set CONFIG_IEEE1394_VERBOSEDEBUG [expr $CONFIG_IEEE1394_VERBOSEDEBUG|16]
	global CONFIG_IEEE1394_OUI_DB
set CONFIG_IEEE1394_OUI_DB [expr $CONFIG_IEEE1394_OUI_DB|16]
	global CONFIG_PCI
	global CONFIG_EXPERIMENTAL
	global CONFIG_IEEE1394
	if {($CONFIG_PCI == 1 && $CONFIG_EXPERIMENTAL == 1) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PCI]]; set CONFIG_IEEE1394 [sync_tristate $CONFIG_IEEE1394 $tmpvar_dep]; set CONFIG_IEEE1394 [expr $CONFIG_IEEE1394&15]}
	global CONFIG_I2C
	global CONFIG_I2C_ALGOBIT
	global CONFIG_IEEE1394_PCILYNX
	if {($CONFIG_PCI == 1 && $CONFIG_EXPERIMENTAL == 1) && ($CONFIG_IEEE1394 != 0) && ($CONFIG_I2C != 0 && $CONFIG_I2C_ALGOBIT != 0) && ($CONFIG_IEEE1394 == 1 || $CONFIG_IEEE1394 == 2 || $CONFIG_IEEE1394 == 4) && ($CONFIG_I2C == 1 || $CONFIG_I2C == 2 || $CONFIG_I2C == 4) && ($CONFIG_I2C_ALGOBIT == 1 || $CONFIG_I2C_ALGOBIT == 2 || $CONFIG_I2C_ALGOBIT == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IEEE1394 $CONFIG_I2C $CONFIG_I2C_ALGOBIT]]; set CONFIG_IEEE1394_PCILYNX [sync_tristate $CONFIG_IEEE1394_PCILYNX $tmpvar_dep]; set CONFIG_IEEE1394_PCILYNX [expr $CONFIG_IEEE1394_PCILYNX&15]}
	global CONFIG_IEEE1394_OHCI1394
	if {($CONFIG_PCI == 1 && $CONFIG_EXPERIMENTAL == 1) && ($CONFIG_IEEE1394 != 0) && ($CONFIG_IEEE1394 == 1 || $CONFIG_IEEE1394 == 2 || $CONFIG_IEEE1394 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IEEE1394]]; set CONFIG_IEEE1394_OHCI1394 [sync_tristate $CONFIG_IEEE1394_OHCI1394 $tmpvar_dep]; set CONFIG_IEEE1394_OHCI1394 [expr $CONFIG_IEEE1394_OHCI1394&15]}
	global CONFIG_IEEE1394_VIDEO1394
	if {($CONFIG_PCI == 1 && $CONFIG_EXPERIMENTAL == 1) && ($CONFIG_IEEE1394 != 0) && ($CONFIG_IEEE1394_OHCI1394 == 1 || $CONFIG_IEEE1394_OHCI1394 == 2 || $CONFIG_IEEE1394_OHCI1394 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IEEE1394_OHCI1394]]; set CONFIG_IEEE1394_VIDEO1394 [sync_tristate $CONFIG_IEEE1394_VIDEO1394 $tmpvar_dep]; set CONFIG_IEEE1394_VIDEO1394 [expr $CONFIG_IEEE1394_VIDEO1394&15]}
	global CONFIG_SCSI
	global CONFIG_IEEE1394_SBP2
	if {($CONFIG_PCI == 1 && $CONFIG_EXPERIMENTAL == 1) && ($CONFIG_IEEE1394 != 0) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4) && ($CONFIG_IEEE1394 == 1 || $CONFIG_IEEE1394 == 2 || $CONFIG_IEEE1394 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCSI $CONFIG_IEEE1394]]; set CONFIG_IEEE1394_SBP2 [sync_tristate $CONFIG_IEEE1394_SBP2 $tmpvar_dep]; set CONFIG_IEEE1394_SBP2 [expr $CONFIG_IEEE1394_SBP2&15]}
	if {($CONFIG_PCI == 1 && $CONFIG_EXPERIMENTAL == 1) && ($CONFIG_IEEE1394 != 0) && ($CONFIG_IEEE1394_SBP2 != 0)} then {
	set CONFIG_IEEE1394_SBP2_PHYS_DMA [expr $CONFIG_IEEE1394_SBP2_PHYS_DMA&15]}
	global CONFIG_IEEE1394_ETH1394
	if {($CONFIG_PCI == 1 && $CONFIG_EXPERIMENTAL == 1) && ($CONFIG_IEEE1394 != 0) && ($CONFIG_IEEE1394 == 1 || $CONFIG_IEEE1394 == 2 || $CONFIG_IEEE1394 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IEEE1394]]; set CONFIG_IEEE1394_ETH1394 [sync_tristate $CONFIG_IEEE1394_ETH1394 $tmpvar_dep]; set CONFIG_IEEE1394_ETH1394 [expr $CONFIG_IEEE1394_ETH1394&15]}
	global CONFIG_IEEE1394_DV1394
	if {($CONFIG_PCI == 1 && $CONFIG_EXPERIMENTAL == 1) && ($CONFIG_IEEE1394 != 0) && ($CONFIG_IEEE1394_OHCI1394 == 1 || $CONFIG_IEEE1394_OHCI1394 == 2 || $CONFIG_IEEE1394_OHCI1394 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IEEE1394_OHCI1394]]; set CONFIG_IEEE1394_DV1394 [sync_tristate $CONFIG_IEEE1394_DV1394 $tmpvar_dep]; set CONFIG_IEEE1394_DV1394 [expr $CONFIG_IEEE1394_DV1394&15]}
	global CONFIG_IEEE1394_RAWIO
	if {($CONFIG_PCI == 1 && $CONFIG_EXPERIMENTAL == 1) && ($CONFIG_IEEE1394 != 0) && ($CONFIG_IEEE1394 == 1 || $CONFIG_IEEE1394 == 2 || $CONFIG_IEEE1394 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IEEE1394]]; set CONFIG_IEEE1394_RAWIO [sync_tristate $CONFIG_IEEE1394_RAWIO $tmpvar_dep]; set CONFIG_IEEE1394_RAWIO [expr $CONFIG_IEEE1394_RAWIO&15]}
	global CONFIG_IEEE1394_CMP
	if {($CONFIG_PCI == 1 && $CONFIG_EXPERIMENTAL == 1) && ($CONFIG_IEEE1394 != 0) && ($CONFIG_IEEE1394 == 1 || $CONFIG_IEEE1394 == 2 || $CONFIG_IEEE1394 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IEEE1394]]; set CONFIG_IEEE1394_CMP [sync_tristate $CONFIG_IEEE1394_CMP $tmpvar_dep]; set CONFIG_IEEE1394_CMP [expr $CONFIG_IEEE1394_CMP&15]}
	global CONFIG_IEEE1394_AMDTP
	if {($CONFIG_PCI == 1 && $CONFIG_EXPERIMENTAL == 1) && ($CONFIG_IEEE1394 != 0) && ($CONFIG_IEEE1394_CMP != 0) && ($CONFIG_IEEE1394_OHCI1394 == 1 || $CONFIG_IEEE1394_OHCI1394 == 2 || $CONFIG_IEEE1394_OHCI1394 == 4) && ($CONFIG_IEEE1394_CMP == 1 || $CONFIG_IEEE1394_CMP == 2 || $CONFIG_IEEE1394_CMP == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IEEE1394_OHCI1394 $CONFIG_IEEE1394_CMP]]; set CONFIG_IEEE1394_AMDTP [sync_tristate $CONFIG_IEEE1394_AMDTP $tmpvar_dep]; set CONFIG_IEEE1394_AMDTP [expr $CONFIG_IEEE1394_AMDTP&15]}
	if {($CONFIG_PCI == 1 && $CONFIG_EXPERIMENTAL == 1) && ($CONFIG_IEEE1394 != 0)} then {
	set CONFIG_IEEE1394_VERBOSEDEBUG [expr $CONFIG_IEEE1394_VERBOSEDEBUG&15]}
	if {($CONFIG_PCI == 1 && $CONFIG_EXPERIMENTAL == 1) && ($CONFIG_IEEE1394 != 0)} then {
	set CONFIG_IEEE1394_OUI_DB [expr $CONFIG_IEEE1394_OUI_DB&15]}
}


menu_option menu52 52 "I2O device support"
proc menu52 {w title} {
	set oldFocus [focus]
	catch {destroy $w; unregister_active 52}
	toplevel $w -class Dialog
	wm withdraw $w
	global active_menus
	set active_menus [lsort -integer [linsert $active_menus end 52]]
	message $w.m -width 400 -aspect 300 -text \
		"I2O device support"  -relief raised
	pack $w.m -pady 10 -side top -padx 10
	wm title $w "I2O device support" 

	bind $w <Escape> "catch {focus $oldFocus}; destroy $w; unregister_active 52; break"
	set nextscript "catch {focus $oldFocus}; destroy $w; unregister_active 52; menu53 .menu53 \"$title\""
	frame $w.f
	button $w.f.back -text "Main Menu" \
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 52"
	button $w.f.next -text "Next" -underline 0\
		-width 15 -command $nextscript
	bind all <Alt-n> $nextscript
	button $w.f.prev -text "Prev" -underline 0\
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 52; menu51 .menu51 \"$title\""
	bind $w <Alt-p> "catch {focus $oldFocus}; destroy $w; unregister_active 52; menu51 .menu51 \"$title\";break"
	pack $w.f.back $w.f.next $w.f.prev -side left -expand on
	pack $w.f -pady 10 -side bottom -anchor w -fill x
	frame $w.topline -relief ridge -borderwidth 2 -height 2
	pack $w.topline -side top -fill x

	frame $w.botline -relief ridge -borderwidth 2 -height 2
	pack $w.botline -side bottom -fill x

	frame $w.config
	pack $w.config -fill y -expand on

	scrollbar $w.config.vscroll -command "$w.config.canvas yview"
	pack $w.config.vscroll -side right -fill y

	canvas $w.config.canvas -height 1\
		-relief flat -borderwidth 0 -yscrollcommand "$w.config.vscroll set" \
		-width [expr [winfo screenwidth .] * 1 / 2] 
	frame $w.config.f
	bind $w <Key-Down> "$w.config.canvas yview scroll  1 unit;break;"
	bind $w <Key-Up> "$w.config.canvas yview scroll  -1 unit;break;"
	bind $w <Key-Next> "$w.config.canvas yview scroll  1 page;break;"
	bind $w <Key-Prior> "$w.config.canvas yview scroll  -1 page;break;"
	bind $w <Key-Home> "$w.config.canvas yview moveto 0;break;"
	bind $w <Key-End> "$w.config.canvas yview moveto 1 ;break;"
	pack $w.config.canvas -side right -fill y


	tristate $w.config.f 52 0 "I2O support" CONFIG_I2O
	dep_tristate $w.config.f 52 1 "  I2O PCI support" CONFIG_I2O_PCI
	dep_tristate $w.config.f 52 2 "  I2O Block OSM" CONFIG_I2O_BLOCK
	dep_tristate $w.config.f 52 3 "  I2O LAN OSM" CONFIG_I2O_LAN
	dep_tristate $w.config.f 52 4 "  I2O SCSI OSM" CONFIG_I2O_SCSI
	dep_tristate $w.config.f 52 5 "  I2O /proc support" CONFIG_I2O_PROC



	focus $w
	update_active
	global winx; global winy
	set winx [expr [winfo x .]+30]; set winy [expr [winfo y .]+30]
	if {[winfo exists $w]} then {wm geometry $w +$winx+$winy}
	update idletasks
	if {[winfo exists $w]} then  {$w.config.canvas create window 0 0 -anchor nw -window $w.config.f

	$w.config.canvas configure \
		-width [expr [winfo reqwidth $w.config.f] + 1]\
		-scrollregion "-1 -1 [expr [winfo reqwidth $w.config.f] + 1] \
			 [expr [winfo reqheight $w.config.f] + 1]"

	set winy [expr [winfo reqh $w] - [winfo reqh $w.config.canvas]]
	set scry [expr [winfo screenh $w] / 2]
	set maxy [expr [winfo screenh $w] * 3 / 4]
	set canvtotal [expr [winfo reqh $w.config.f] + 2]
	if [expr $winy + $canvtotal < $maxy] {
		$w.config.canvas configure -height $canvtotal
	} else {
		$w.config.canvas configure -height [expr $scry - $winy]
		}
	}
	update idletasks
	if {[winfo exists $w]} then {
	wm maxsize $w [winfo width $w] [winfo screenheight $w]
	wm minsize $w [winfo width $w] 100

	wm deiconify $w
}
}

proc update_menu52 {} {
	global CONFIG_I2O
	global CONFIG_MODULES

	if {($CONFIG_MODULES == 1)} then {configure_entry .menu52.config.f.x0 normal {m}} else {configure_entry .menu52.config.f.x0 disabled {m}}
	global CONFIG_PCI
	global CONFIG_I2O_PCI
	if {($CONFIG_PCI == 1) && ($CONFIG_I2O == 1 || $CONFIG_I2O == 2 || $CONFIG_I2O == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_I2O]];set CONFIG_I2O_PCI [sync_tristate $CONFIG_I2O_PCI $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu52.config.f.x1 disabled {y}} else {configure_entry .menu52.config.f.x1 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu52.config.f.x1 disabled {m}} else {configure_entry .menu52.config.f.x1 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu52.config.f.x1 normal {m}} else {configure_entry .menu52.config.f.x1 disabled {m}}; configure_entry .menu52.config.f.x1 normal {n l}} else {configure_entry .menu52.config.f.x1 disabled {y n m l}}
	global CONFIG_I2O_BLOCK
	if {($CONFIG_I2O == 1 || $CONFIG_I2O == 2 || $CONFIG_I2O == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_I2O]];set CONFIG_I2O_BLOCK [sync_tristate $CONFIG_I2O_BLOCK $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu52.config.f.x2 disabled {y}} else {configure_entry .menu52.config.f.x2 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu52.config.f.x2 disabled {m}} else {configure_entry .menu52.config.f.x2 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu52.config.f.x2 normal {m}} else {configure_entry .menu52.config.f.x2 disabled {m}}; configure_entry .menu52.config.f.x2 normal {n l}} else {configure_entry .menu52.config.f.x2 disabled {y n m l}}
	global CONFIG_NET
	global CONFIG_I2O_LAN
	if {($CONFIG_NET == 1) && ($CONFIG_I2O == 1 || $CONFIG_I2O == 2 || $CONFIG_I2O == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_I2O]];set CONFIG_I2O_LAN [sync_tristate $CONFIG_I2O_LAN $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu52.config.f.x3 disabled {y}} else {configure_entry .menu52.config.f.x3 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu52.config.f.x3 disabled {m}} else {configure_entry .menu52.config.f.x3 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu52.config.f.x3 normal {m}} else {configure_entry .menu52.config.f.x3 disabled {m}}; configure_entry .menu52.config.f.x3 normal {n l}} else {configure_entry .menu52.config.f.x3 disabled {y n m l}}
	global CONFIG_SCSI
	global CONFIG_I2O_SCSI
	if {($CONFIG_I2O == 1 || $CONFIG_I2O == 2 || $CONFIG_I2O == 4) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_I2O $CONFIG_SCSI]];set CONFIG_I2O_SCSI [sync_tristate $CONFIG_I2O_SCSI $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu52.config.f.x4 disabled {y}} else {configure_entry .menu52.config.f.x4 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu52.config.f.x4 disabled {m}} else {configure_entry .menu52.config.f.x4 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu52.config.f.x4 normal {m}} else {configure_entry .menu52.config.f.x4 disabled {m}}; configure_entry .menu52.config.f.x4 normal {n l}} else {configure_entry .menu52.config.f.x4 disabled {y n m l}}
	global CONFIG_I2O_PROC
	if {($CONFIG_I2O == 1 || $CONFIG_I2O == 2 || $CONFIG_I2O == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_I2O]];set CONFIG_I2O_PROC [sync_tristate $CONFIG_I2O_PROC $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu52.config.f.x5 disabled {y}} else {configure_entry .menu52.config.f.x5 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu52.config.f.x5 disabled {m}} else {configure_entry .menu52.config.f.x5 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu52.config.f.x5 normal {m}} else {configure_entry .menu52.config.f.x5 disabled {m}}; configure_entry .menu52.config.f.x5 normal {n l}} else {configure_entry .menu52.config.f.x5 disabled {y n m l}}
}


proc update_define_menu52 {} {
	update_define_mainmenu
	global CONFIG_MODULES
	global CONFIG_I2O

	if {($CONFIG_MODULES == 0)} then {if {($CONFIG_I2O == 2)} then {set CONFIG_I2O 1}}
	global CONFIG_PCI
	global CONFIG_I2O_PCI
	if {($CONFIG_PCI == 1) && ($CONFIG_I2O == 1 || $CONFIG_I2O == 2 || $CONFIG_I2O == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_I2O]]; set CONFIG_I2O_PCI [sync_tristate $CONFIG_I2O_PCI $tmpvar_dep]; set CONFIG_I2O_PCI [expr $CONFIG_I2O_PCI&15]}
	global CONFIG_I2O_BLOCK
	if {($CONFIG_I2O == 1 || $CONFIG_I2O == 2 || $CONFIG_I2O == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_I2O]]; set CONFIG_I2O_BLOCK [sync_tristate $CONFIG_I2O_BLOCK $tmpvar_dep]; set CONFIG_I2O_BLOCK [expr $CONFIG_I2O_BLOCK&15]}
	global CONFIG_NET
	global CONFIG_I2O_LAN
	if {($CONFIG_NET == 1) && ($CONFIG_I2O == 1 || $CONFIG_I2O == 2 || $CONFIG_I2O == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_I2O]]; set CONFIG_I2O_LAN [sync_tristate $CONFIG_I2O_LAN $tmpvar_dep]; set CONFIG_I2O_LAN [expr $CONFIG_I2O_LAN&15]}
	global CONFIG_SCSI
	global CONFIG_I2O_SCSI
	if {($CONFIG_I2O == 1 || $CONFIG_I2O == 2 || $CONFIG_I2O == 4) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_I2O $CONFIG_SCSI]]; set CONFIG_I2O_SCSI [sync_tristate $CONFIG_I2O_SCSI $tmpvar_dep]; set CONFIG_I2O_SCSI [expr $CONFIG_I2O_SCSI&15]}
	global CONFIG_I2O_PROC
	if {($CONFIG_I2O == 1 || $CONFIG_I2O == 2 || $CONFIG_I2O == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_I2O]]; set CONFIG_I2O_PROC [sync_tristate $CONFIG_I2O_PROC $tmpvar_dep]; set CONFIG_I2O_PROC [expr $CONFIG_I2O_PROC&15]}
}


menu_option menu53 53 "ISDN subsystem"
proc menu53 {w title} {
	set oldFocus [focus]
	catch {destroy $w; unregister_active 53}
	toplevel $w -class Dialog
	wm withdraw $w
	global active_menus
	set active_menus [lsort -integer [linsert $active_menus end 53]]
	message $w.m -width 400 -aspect 300 -text \
		"ISDN subsystem"  -relief raised
	pack $w.m -pady 10 -side top -padx 10
	wm title $w "ISDN subsystem" 

	bind $w <Escape> "catch {focus $oldFocus}; destroy $w; unregister_active 53; break"
	set nextscript "catch {focus $oldFocus}; menu54 .menu54 \"$title\""
	frame $w.f
	button $w.f.back -text "Main Menu" \
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 53"
	button $w.f.next -text "Next" -underline 0\
		-width 15 -command $nextscript
	bind all <Alt-n> $nextscript
	button $w.f.prev -text "Prev" -underline 0\
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 53; menu52 .menu52 \"$title\""
	bind $w <Alt-p> "catch {focus $oldFocus}; destroy $w; unregister_active 53; menu52 .menu52 \"$title\";break"
	pack $w.f.back $w.f.next $w.f.prev -side left -expand on
	pack $w.f -pady 10 -side bottom -anchor w -fill x
	frame $w.topline -relief ridge -borderwidth 2 -height 2
	pack $w.topline -side top -fill x

	frame $w.botline -relief ridge -borderwidth 2 -height 2
	pack $w.botline -side bottom -fill x

	frame $w.config
	pack $w.config -fill y -expand on

	scrollbar $w.config.vscroll -command "$w.config.canvas yview"
	pack $w.config.vscroll -side right -fill y

	canvas $w.config.canvas -height 1\
		-relief flat -borderwidth 0 -yscrollcommand "$w.config.vscroll set" \
		-width [expr [winfo screenwidth .] * 1 / 2] 
	frame $w.config.f
	bind $w <Key-Down> "$w.config.canvas yview scroll  1 unit;break;"
	bind $w <Key-Up> "$w.config.canvas yview scroll  -1 unit;break;"
	bind $w <Key-Next> "$w.config.canvas yview scroll  1 page;break;"
	bind $w <Key-Prior> "$w.config.canvas yview scroll  -1 page;break;"
	bind $w <Key-Home> "$w.config.canvas yview moveto 0;break;"
	bind $w <Key-End> "$w.config.canvas yview moveto 1 ;break;"
	pack $w.config.canvas -side right -fill y


	tristate $w.config.f 53 0 "ISDN support" CONFIG_ISDN
	bool $w.config.f 53 1 "  Support synchronous PPP" CONFIG_ISDN_PPP
	dep_bool $w.config.f 53 2 "    PPP filtering for ISDN" CONFIG_IPPP_FILTER
	bool $w.config.f 53 3 "    Use VJ-compression with synchronous PPP" CONFIG_ISDN_PPP_VJ
	bool $w.config.f 53 4 "    Support generic MP (RFC 1717)" CONFIG_ISDN_MPP
	dep_tristate $w.config.f 53 5 "    Support BSD compression" CONFIG_ISDN_PPP_BSDCOMP
	bool $w.config.f 53 6 "  Support audio via ISDN" CONFIG_ISDN_AUDIO
	bool $w.config.f 53 7 "    Support AT-Fax Class 1 and 2 commands" CONFIG_ISDN_TTY_FAX
	bool $w.config.f 53 8 "  X.25 PLP on top of ISDN" CONFIG_ISDN_X25
	submenu $w.config.f 53 9 "ISDN feature submodules" 54
	comment $w.config.f 53 10 "low-level hardware drivers"
	submenu $w.config.f 53 11 "Passive ISDN cards" 55
	submenu $w.config.f 53 12 "Active ISDN cards" 56



	focus $w
	update_active
	global winx; global winy
	set winx [expr [winfo x .]+30]; set winy [expr [winfo y .]+30]
	if {[winfo exists $w]} then {wm geometry $w +$winx+$winy}
	update idletasks
	if {[winfo exists $w]} then  {$w.config.canvas create window 0 0 -anchor nw -window $w.config.f

	$w.config.canvas configure \
		-width [expr [winfo reqwidth $w.config.f] + 1]\
		-scrollregion "-1 -1 [expr [winfo reqwidth $w.config.f] + 1] \
			 [expr [winfo reqheight $w.config.f] + 1]"

	set winy [expr [winfo reqh $w] - [winfo reqh $w.config.canvas]]
	set scry [expr [winfo screenh $w] / 2]
	set maxy [expr [winfo screenh $w] * 3 / 4]
	set canvtotal [expr [winfo reqh $w.config.f] + 2]
	if [expr $winy + $canvtotal < $maxy] {
		$w.config.canvas configure -height $canvtotal
	} else {
		$w.config.canvas configure -height [expr $scry - $winy]
		}
	}
	update idletasks
	if {[winfo exists $w]} then {
	wm maxsize $w [winfo width $w] [winfo screenheight $w]
	wm minsize $w [winfo width $w] 100

	wm deiconify $w
}
}

proc update_menu53 {} {
	global CONFIG_ISDN
	global CONFIG_MODULES

	if {($CONFIG_MODULES == 1)} then {configure_entry .menu53.config.f.x0 normal {m}} else {configure_entry .menu53.config.f.x0 disabled {m}}
	global CONFIG_INET
	global CONFIG_ISDN_PPP
	if {($CONFIG_ISDN != 0) && ($CONFIG_INET != 0)} then {
	configure_entry .menu53.config.f.x1 normal {n l y}} else {configure_entry .menu53.config.f.x1 disabled {y n l}}
	global CONFIG_FILTER
	global CONFIG_IPPP_FILTER
	if {($CONFIG_ISDN != 0) && ($CONFIG_INET != 0) && ($CONFIG_ISDN_PPP != 0) && ($CONFIG_FILTER == 1 || $CONFIG_FILTER == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_FILTER]];set CONFIG_IPPP_FILTER [sync_bool $CONFIG_IPPP_FILTER $tmpvar_dep 0];if {$tmpvar_dep != 1} then {configure_entry .menu53.config.f.x2 disabled {y};} else {configure_entry .menu53.config.f.x2 normal {y};}; configure_entry .menu53.config.f.x2 normal {n l}} else {configure_entry .menu53.config.f.x2 disabled {y n l}}
	global CONFIG_ISDN_PPP_VJ
	if {($CONFIG_ISDN != 0) && ($CONFIG_INET != 0) && ($CONFIG_ISDN_PPP != 0)} then {
	configure_entry .menu53.config.f.x3 normal {n l y}} else {configure_entry .menu53.config.f.x3 disabled {y n l}}
	global CONFIG_ISDN_MPP
	if {($CONFIG_ISDN != 0) && ($CONFIG_INET != 0) && ($CONFIG_ISDN_PPP != 0)} then {
	configure_entry .menu53.config.f.x4 normal {n l y}} else {configure_entry .menu53.config.f.x4 disabled {y n l}}
	global CONFIG_ISDN_PPP_BSDCOMP
	if {($CONFIG_ISDN != 0) && ($CONFIG_INET != 0) && ($CONFIG_ISDN_PPP != 0) && ($CONFIG_ISDN == 1 || $CONFIG_ISDN == 2 || $CONFIG_ISDN == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ISDN]];set CONFIG_ISDN_PPP_BSDCOMP [sync_tristate $CONFIG_ISDN_PPP_BSDCOMP $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu53.config.f.x5 disabled {y}} else {configure_entry .menu53.config.f.x5 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu53.config.f.x5 disabled {m}} else {configure_entry .menu53.config.f.x5 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu53.config.f.x5 normal {m}} else {configure_entry .menu53.config.f.x5 disabled {m}}; configure_entry .menu53.config.f.x5 normal {n l}} else {configure_entry .menu53.config.f.x5 disabled {y n m l}}
	global CONFIG_ISDN_AUDIO
	if {($CONFIG_ISDN != 0)} then {
	configure_entry .menu53.config.f.x6 normal {n l y}} else {configure_entry .menu53.config.f.x6 disabled {y n l}}
	global CONFIG_ISDN_TTY_FAX
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_AUDIO != 0)} then {
	configure_entry .menu53.config.f.x7 normal {n l y}} else {configure_entry .menu53.config.f.x7 disabled {y n l}}
	global CONFIG_X25
	global CONFIG_ISDN_X25
	if {($CONFIG_ISDN != 0) && ($CONFIG_X25 != 0)} then {
	configure_entry .menu53.config.f.x8 normal {n l y}} else {configure_entry .menu53.config.f.x8 disabled {y n l}}
	if {($CONFIG_ISDN != 0)} then {configure_entry .menu53.config.f.x9 normal {m}} else {configure_entry .menu53.config.f.x9 disabled {m}}
	if {($CONFIG_ISDN != 0)} then {configure_entry .menu53.config.f.x10 normal {m}} else {configure_entry .menu53.config.f.x10 disabled {m}}
	if {($CONFIG_ISDN != 0)} then {configure_entry .menu53.config.f.x11 normal {m}} else {configure_entry .menu53.config.f.x11 disabled {m}}
	if {($CONFIG_ISDN != 0)} then {configure_entry .menu53.config.f.x12 normal {m}} else {configure_entry .menu53.config.f.x12 disabled {m}}
}


proc update_define_menu53 {} {
	update_define_mainmenu
	global CONFIG_MODULES
	global CONFIG_ISDN
	global CONFIG_ISDN_BOOL
	global CONFIG_ISDN_PPP
set CONFIG_ISDN_PPP [expr $CONFIG_ISDN_PPP|16]
	global CONFIG_ISDN_PPP_VJ
set CONFIG_ISDN_PPP_VJ [expr $CONFIG_ISDN_PPP_VJ|16]
	global CONFIG_ISDN_MPP
set CONFIG_ISDN_MPP [expr $CONFIG_ISDN_MPP|16]
	global CONFIG_ISDN_AUDIO
set CONFIG_ISDN_AUDIO [expr $CONFIG_ISDN_AUDIO|16]
	global CONFIG_ISDN_TTY_FAX
set CONFIG_ISDN_TTY_FAX [expr $CONFIG_ISDN_TTY_FAX|16]
	global CONFIG_ISDN_X25
set CONFIG_ISDN_X25 [expr $CONFIG_ISDN_X25|16]

	if {($CONFIG_MODULES == 0)} then {if {($CONFIG_ISDN == 2)} then {set CONFIG_ISDN 1}}
	if {($CONFIG_ISDN != 0)} then {	global CONSTANT_Y
set CONFIG_ISDN_BOOL $CONSTANT_Y }
	global CONFIG_INET
	if {($CONFIG_ISDN != 0) && ($CONFIG_INET != 0)} then {
	set CONFIG_ISDN_PPP [expr $CONFIG_ISDN_PPP&15]}
	global CONFIG_FILTER
	global CONFIG_IPPP_FILTER
	if {($CONFIG_ISDN != 0) && ($CONFIG_INET != 0) && ($CONFIG_ISDN_PPP != 0) && ($CONFIG_FILTER == 1 || $CONFIG_FILTER == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_FILTER]];set CONFIG_IPPP_FILTER [sync_bool $CONFIG_IPPP_FILTER $tmpvar_dep 0];set CONFIG_IPPP_FILTER [expr $CONFIG_IPPP_FILTER&15]}
	if {($CONFIG_ISDN != 0) && ($CONFIG_INET != 0) && ($CONFIG_ISDN_PPP != 0)} then {
	set CONFIG_ISDN_PPP_VJ [expr $CONFIG_ISDN_PPP_VJ&15]}
	if {($CONFIG_ISDN != 0) && ($CONFIG_INET != 0) && ($CONFIG_ISDN_PPP != 0)} then {
	set CONFIG_ISDN_MPP [expr $CONFIG_ISDN_MPP&15]}
	global CONFIG_ISDN_PPP_BSDCOMP
	if {($CONFIG_ISDN != 0) && ($CONFIG_INET != 0) && ($CONFIG_ISDN_PPP != 0) && ($CONFIG_ISDN == 1 || $CONFIG_ISDN == 2 || $CONFIG_ISDN == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ISDN]]; set CONFIG_ISDN_PPP_BSDCOMP [sync_tristate $CONFIG_ISDN_PPP_BSDCOMP $tmpvar_dep]; set CONFIG_ISDN_PPP_BSDCOMP [expr $CONFIG_ISDN_PPP_BSDCOMP&15]}
	if {($CONFIG_ISDN != 0)} then {
	set CONFIG_ISDN_AUDIO [expr $CONFIG_ISDN_AUDIO&15]}
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_AUDIO != 0)} then {
	set CONFIG_ISDN_TTY_FAX [expr $CONFIG_ISDN_TTY_FAX&15]}
	global CONFIG_X25
	if {($CONFIG_ISDN != 0) && ($CONFIG_X25 != 0)} then {
	set CONFIG_ISDN_X25 [expr $CONFIG_ISDN_X25&15]}
}


proc menu54 {w title} {
	set oldFocus [focus]
	catch {focus .menu53}
	catch {destroy $w; unregister_active 54}
	toplevel $w -class Dialog
	wm withdraw $w
	global active_menus
	set active_menus [lsort -integer [linsert $active_menus end 54]]
	message $w.m -width 400 -aspect 300 -text \
		"ISDN feature submodules"  -relief raised
	pack $w.m -pady 10 -side top -padx 10
	wm title $w "ISDN feature submodules" 

	bind $w <Escape> "catch {focus $oldFocus}; destroy $w; unregister_active 54; break"
	set nextscript "catch {focus $oldFocus}; destroy $w; unregister_active 54; menu55 .menu55 \"$title\""
	frame $w.f
	button $w.f.back -text "OK" \
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 54"
	button $w.f.next -text "Next" -underline 0\
		-width 15 -command $nextscript
	bind all <Alt-n> $nextscript
	button $w.f.prev -text "Prev" -underline 0\
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 54; menu53 .menu53 \"$title\""
	bind $w <Alt-p> "catch {focus $oldFocus}; destroy $w; unregister_active 54; menu53 .menu53 \"$title\";break"
	pack $w.f.back $w.f.next $w.f.prev -side left -expand on
	pack $w.f -pady 10 -side bottom -anchor w -fill x
	frame $w.topline -relief ridge -borderwidth 2 -height 2
	pack $w.topline -side top -fill x

	frame $w.botline -relief ridge -borderwidth 2 -height 2
	pack $w.botline -side bottom -fill x

	frame $w.config
	pack $w.config -fill y -expand on

	scrollbar $w.config.vscroll -command "$w.config.canvas yview"
	pack $w.config.vscroll -side right -fill y

	canvas $w.config.canvas -height 1\
		-relief flat -borderwidth 0 -yscrollcommand "$w.config.vscroll set" \
		-width [expr [winfo screenwidth .] * 1 / 2] 
	frame $w.config.f
	bind $w <Key-Down> "$w.config.canvas yview scroll  1 unit;break;"
	bind $w <Key-Up> "$w.config.canvas yview scroll  -1 unit;break;"
	bind $w <Key-Next> "$w.config.canvas yview scroll  1 page;break;"
	bind $w <Key-Prior> "$w.config.canvas yview scroll  -1 page;break;"
	bind $w <Key-Home> "$w.config.canvas yview moveto 0;break;"
	bind $w <Key-End> "$w.config.canvas yview moveto 1 ;break;"
	pack $w.config.canvas -side right -fill y


	dep_tristate $w.config.f 54 0 "isdnloop support" CONFIG_ISDN_DRV_LOOP
	dep_tristate $w.config.f 54 1 "Support isdn diversion services" CONFIG_ISDN_DIVERSION



	focus $w
	update_active
	global winx; global winy
	if {[winfo exists .menu53] == 0} then {menu53 .menu53 "ISDN subsystem"}
	set winx [expr [winfo x .menu53]+30]; set winy [expr [winfo y .menu53]+30]
	if {[winfo exists $w]} then {wm geometry $w +$winx+$winy}
	update idletasks
	if {[winfo exists $w]} then  {$w.config.canvas create window 0 0 -anchor nw -window $w.config.f

	$w.config.canvas configure \
		-width [expr [winfo reqwidth $w.config.f] + 1]\
		-scrollregion "-1 -1 [expr [winfo reqwidth $w.config.f] + 1] \
			 [expr [winfo reqheight $w.config.f] + 1]"

	set winy [expr [winfo reqh $w] - [winfo reqh $w.config.canvas]]
	set scry [expr [winfo screenh $w] / 2]
	set maxy [expr [winfo screenh $w] * 3 / 4]
	set canvtotal [expr [winfo reqh $w.config.f] + 2]
	if [expr $winy + $canvtotal < $maxy] {
		$w.config.canvas configure -height $canvtotal
	} else {
		$w.config.canvas configure -height [expr $scry - $winy]
		}
	}
	update idletasks
	if {[winfo exists $w]} then {
	wm maxsize $w [winfo width $w] [winfo screenheight $w]
	wm minsize $w [winfo width $w] 100

	wm deiconify $w
}
}

proc update_menu54 {} {
	global CONFIG_MODULES
	global CONFIG_ISDN
	global CONFIG_ISDN_DRV_LOOP
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN == 1 || $CONFIG_ISDN == 2 || $CONFIG_ISDN == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ISDN]];set CONFIG_ISDN_DRV_LOOP [sync_tristate $CONFIG_ISDN_DRV_LOOP $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu54.config.f.x0 disabled {y}} else {configure_entry .menu54.config.f.x0 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu54.config.f.x0 disabled {m}} else {configure_entry .menu54.config.f.x0 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu54.config.f.x0 normal {m}} else {configure_entry .menu54.config.f.x0 disabled {m}}; configure_entry .menu54.config.f.x0 normal {n l}} else {configure_entry .menu54.config.f.x0 disabled {y n m l}}
	global CONFIG_ISDN_DIVERSION
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN == 1 || $CONFIG_ISDN == 2 || $CONFIG_ISDN == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ISDN]];set CONFIG_ISDN_DIVERSION [sync_tristate $CONFIG_ISDN_DIVERSION $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu54.config.f.x1 disabled {y}} else {configure_entry .menu54.config.f.x1 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu54.config.f.x1 disabled {m}} else {configure_entry .menu54.config.f.x1 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu54.config.f.x1 normal {m}} else {configure_entry .menu54.config.f.x1 disabled {m}}; configure_entry .menu54.config.f.x1 normal {n l}} else {configure_entry .menu54.config.f.x1 disabled {y n m l}}
}


proc update_define_menu54 {} {
	update_define_mainmenu
	global CONFIG_MODULES
	global CONFIG_ISDN
	global CONFIG_ISDN_DRV_LOOP
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN == 1 || $CONFIG_ISDN == 2 || $CONFIG_ISDN == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ISDN]]; set CONFIG_ISDN_DRV_LOOP [sync_tristate $CONFIG_ISDN_DRV_LOOP $tmpvar_dep]; set CONFIG_ISDN_DRV_LOOP [expr $CONFIG_ISDN_DRV_LOOP&15]}
	global CONFIG_ISDN_DIVERSION
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN == 1 || $CONFIG_ISDN == 2 || $CONFIG_ISDN == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ISDN]]; set CONFIG_ISDN_DIVERSION [sync_tristate $CONFIG_ISDN_DIVERSION $tmpvar_dep]; set CONFIG_ISDN_DIVERSION [expr $CONFIG_ISDN_DIVERSION&15]}
}


proc menu55 {w title} {
	set oldFocus [focus]
	catch {focus .menu53}
	catch {destroy $w; unregister_active 55}
	toplevel $w -class Dialog
	wm withdraw $w
	global active_menus
	set active_menus [lsort -integer [linsert $active_menus end 55]]
	message $w.m -width 400 -aspect 300 -text \
		"Passive ISDN cards"  -relief raised
	pack $w.m -pady 10 -side top -padx 10
	wm title $w "Passive ISDN cards" 

	bind $w <Escape> "catch {focus $oldFocus}; destroy $w; unregister_active 55; break"
	set nextscript "catch {focus $oldFocus}; destroy $w; unregister_active 55; menu56 .menu56 \"$title\""
	frame $w.f
	button $w.f.back -text "OK" \
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 55"
	button $w.f.next -text "Next" -underline 0\
		-width 15 -command $nextscript
	bind all <Alt-n> $nextscript
	button $w.f.prev -text "Prev" -underline 0\
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 55; menu54 .menu54 \"$title\""
	bind $w <Alt-p> "catch {focus $oldFocus}; destroy $w; unregister_active 55; menu54 .menu54 \"$title\";break"
	pack $w.f.back $w.f.next $w.f.prev -side left -expand on
	pack $w.f -pady 10 -side bottom -anchor w -fill x
	frame $w.topline -relief ridge -borderwidth 2 -height 2
	pack $w.topline -side top -fill x

	frame $w.botline -relief ridge -borderwidth 2 -height 2
	pack $w.botline -side bottom -fill x

	frame $w.config
	pack $w.config -fill y -expand on

	scrollbar $w.config.vscroll -command "$w.config.canvas yview"
	pack $w.config.vscroll -side right -fill y

	canvas $w.config.canvas -height 1\
		-relief flat -borderwidth 0 -yscrollcommand "$w.config.vscroll set" \
		-width [expr [winfo screenwidth .] * 1 / 2] 
	frame $w.config.f
	bind $w <Key-Down> "$w.config.canvas yview scroll  1 unit;break;"
	bind $w <Key-Up> "$w.config.canvas yview scroll  -1 unit;break;"
	bind $w <Key-Next> "$w.config.canvas yview scroll  1 page;break;"
	bind $w <Key-Prior> "$w.config.canvas yview scroll  -1 page;break;"
	bind $w <Key-Home> "$w.config.canvas yview moveto 0;break;"
	bind $w <Key-End> "$w.config.canvas yview moveto 1 ;break;"
	pack $w.config.canvas -side right -fill y


	dep_tristate $w.config.f 55 0 "HiSax SiemensChipSet driver support" CONFIG_ISDN_DRV_HISAX
	comment $w.config.f 55 1 "  D-channel protocol features"
	bool $w.config.f 55 2 "  HiSax Support for EURO/DSS1" CONFIG_HISAX_EURO
	bool $w.config.f 55 3 "    Support for german chargeinfo" CONFIG_DE_AOC
	bool $w.config.f 55 4 "    Disable sending complete" CONFIG_HISAX_NO_SENDCOMPLETE
	bool $w.config.f 55 5 "    Disable sending low layer compatibility" CONFIG_HISAX_NO_LLC
	bool $w.config.f 55 6 "    Disable keypad protocol option" CONFIG_HISAX_NO_KEYPAD
	bool $w.config.f 55 7 "  HiSax Support for german 1TR6" CONFIG_HISAX_1TR6
	bool $w.config.f 55 8 "  HiSax Support for US NI1" CONFIG_HISAX_NI1
	int $w.config.f 55 9 "  Maximum number of cards supported by HiSax" CONFIG_HISAX_MAX_CARDS
	comment $w.config.f 55 10 "  HiSax supported cards"
	bool $w.config.f 55 11 "  Teles 16.0/8.0" CONFIG_HISAX_16_0
	bool $w.config.f 55 12 "  Teles 16.3 or PNP or PCMCIA" CONFIG_HISAX_16_3
	bool $w.config.f 55 13 "  AVM A1 (Fritz)" CONFIG_HISAX_AVM_A1
	bool $w.config.f 55 14 "  ITK ix1-micro Revision 2" CONFIG_HISAX_IX1MICROR2
	bool $w.config.f 55 15 "  ASUSCOM ISA cards" CONFIG_HISAX_ASUSCOM
	bool $w.config.f 55 16 "  TELEINT cards" CONFIG_HISAX_TELEINT
	bool $w.config.f 55 17 "  HFC-S based cards" CONFIG_HISAX_HFCS
	bool $w.config.f 55 18 "  USR Sportster internal TA" CONFIG_HISAX_SPORTSTER
	bool $w.config.f 55 19 "  MIC card" CONFIG_HISAX_MIC
	bool $w.config.f 55 20 "  Siemens I-Surf card" CONFIG_HISAX_ISURF
	bool $w.config.f 55 21 "  HST Saphir card" CONFIG_HISAX_HSTSAPHIR
	bool $w.config.f 55 22 "  Teles PCI" CONFIG_HISAX_TELESPCI
	bool $w.config.f 55 23 "  Teles S0Box" CONFIG_HISAX_S0BOX
	bool $w.config.f 55 24 "  AVM PnP/PCI (Fritz!PnP/PCI)" CONFIG_HISAX_FRITZPCI
	bool $w.config.f 55 25 "  AVM A1 PCMCIA (Fritz)" CONFIG_HISAX_AVM_A1_PCMCIA
	bool $w.config.f 55 26 "  Elsa cards" CONFIG_HISAX_ELSA
	bool $w.config.f 55 27 "  Eicon.Diehl Diva cards" CONFIG_HISAX_DIEHLDIVA
	bool $w.config.f 55 28 "  Sedlbauer cards" CONFIG_HISAX_SEDLBAUER
	bool $w.config.f 55 29 "  NETjet card" CONFIG_HISAX_NETJET
	bool $w.config.f 55 30 "  NETspider U card" CONFIG_HISAX_NETJET_U
	bool $w.config.f 55 31 "  Niccy PnP/PCI card" CONFIG_HISAX_NICCY
	bool $w.config.f 55 32 "  Telekom A4T card" CONFIG_HISAX_BKM_A4T
	bool $w.config.f 55 33 "  Scitel Quadro card" CONFIG_HISAX_SCT_QUADRO
	bool $w.config.f 55 34 "  Gazel cards" CONFIG_HISAX_GAZEL
	bool $w.config.f 55 35 "  HFC PCI-Bus cards" CONFIG_HISAX_HFC_PCI
	bool $w.config.f 55 36 "  Winbond W6692 based cards" CONFIG_HISAX_W6692
	bool $w.config.f 55 37 "  HFC-S+, HFC-SP, HFC-PCMCIA cards" CONFIG_HISAX_HFC_SX
	bool $w.config.f 55 38 "  Formula-n enter:now PCI card" CONFIG_HISAX_ENTERNOW_PCI
	bool $w.config.f 55 39 "  HiSax debugging" CONFIG_HISAX_DEBUG
	dep_tristate $w.config.f 55 40 "Sedlbauer PCMCIA cards" CONFIG_HISAX_SEDLBAUER_CS
	dep_tristate $w.config.f 55 41 "ELSA PCMCIA MicroLink cards" CONFIG_HISAX_ELSA_CS
	dep_tristate $w.config.f 55 42 "AVM A1 PCMCIA cards" CONFIG_HISAX_AVM_A1_CS
	dep_tristate $w.config.f 55 43 "ST5481 USB ISDN modem (EXPERIMENTAL)" CONFIG_HISAX_ST5481
	dep_tristate $w.config.f 55 44 "AVM Fritz!Card PCI/PCIv2/PnP support (EXPERIMENTAL)" CONFIG_HISAX_FRITZ_PCIPNP
	dep_tristate $w.config.f 55 45 "Auerswald devices ISDN support" CONFIG_USB_AUERISDN



	focus $w
	update_active
	global winx; global winy
	if {[winfo exists .menu53] == 0} then {menu53 .menu53 "ISDN subsystem"}
	set winx [expr [winfo x .menu53]+30]; set winy [expr [winfo y .menu53]+30]
	if {[winfo exists $w]} then {wm geometry $w +$winx+$winy}
	update idletasks
	if {[winfo exists $w]} then  {$w.config.canvas create window 0 0 -anchor nw -window $w.config.f

	$w.config.canvas configure \
		-width [expr [winfo reqwidth $w.config.f] + 1]\
		-scrollregion "-1 -1 [expr [winfo reqwidth $w.config.f] + 1] \
			 [expr [winfo reqheight $w.config.f] + 1]"

	set winy [expr [winfo reqh $w] - [winfo reqh $w.config.canvas]]
	set scry [expr [winfo screenh $w] / 2]
	set maxy [expr [winfo screenh $w] * 3 / 4]
	set canvtotal [expr [winfo reqh $w.config.f] + 2]
	if [expr $winy + $canvtotal < $maxy] {
		$w.config.canvas configure -height $canvtotal
	} else {
		$w.config.canvas configure -height [expr $scry - $winy]
		}
	}
	update idletasks
	if {[winfo exists $w]} then {
	wm maxsize $w [winfo width $w] [winfo screenheight $w]
	wm minsize $w [winfo width $w] 100

	wm deiconify $w
}
}

proc update_menu55 {} {
	global CONFIG_MODULES
	global CONFIG_ISDN
	global CONFIG_ISDN_DRV_HISAX
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN == 1 || $CONFIG_ISDN == 2 || $CONFIG_ISDN == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ISDN]];set CONFIG_ISDN_DRV_HISAX [sync_tristate $CONFIG_ISDN_DRV_HISAX $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu55.config.f.x0 disabled {y}} else {configure_entry .menu55.config.f.x0 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu55.config.f.x0 disabled {m}} else {configure_entry .menu55.config.f.x0 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu55.config.f.x0 normal {m}} else {configure_entry .menu55.config.f.x0 disabled {m}}; configure_entry .menu55.config.f.x0 normal {n l}} else {configure_entry .menu55.config.f.x0 disabled {y n m l}}
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_HISAX != 0)} then {configure_entry .menu55.config.f.x1 normal {m}} else {configure_entry .menu55.config.f.x1 disabled {m}}
	global CONFIG_HISAX_EURO
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_HISAX != 0)} then {
	configure_entry .menu55.config.f.x2 normal {n l y}} else {configure_entry .menu55.config.f.x2 disabled {y n l}}
	global CONFIG_DE_AOC
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_HISAX != 0) && ($CONFIG_HISAX_EURO != 0)} then {
	configure_entry .menu55.config.f.x3 normal {n l y}} else {configure_entry .menu55.config.f.x3 disabled {y n l}}
	global CONFIG_HISAX_NO_SENDCOMPLETE
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_HISAX != 0) && ($CONFIG_HISAX_EURO != 0)} then {
	configure_entry .menu55.config.f.x4 normal {n l y}} else {configure_entry .menu55.config.f.x4 disabled {y n l}}
	global CONFIG_HISAX_NO_LLC
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_HISAX != 0) && ($CONFIG_HISAX_EURO != 0)} then {
	configure_entry .menu55.config.f.x5 normal {n l y}} else {configure_entry .menu55.config.f.x5 disabled {y n l}}
	global CONFIG_HISAX_NO_KEYPAD
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_HISAX != 0) && ($CONFIG_HISAX_EURO != 0)} then {
	configure_entry .menu55.config.f.x6 normal {n l y}} else {configure_entry .menu55.config.f.x6 disabled {y n l}}
	global CONFIG_HISAX_1TR6
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_HISAX != 0)} then {
	configure_entry .menu55.config.f.x7 normal {n l y}} else {configure_entry .menu55.config.f.x7 disabled {y n l}}
	global CONFIG_HISAX_NI1
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_HISAX != 0)} then {
	configure_entry .menu55.config.f.x8 normal {n l y}} else {configure_entry .menu55.config.f.x8 disabled {y n l}}
	global CONFIG_HISAX_MAX_CARDS
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_HISAX != 0)} then {.menu55.config.f.x9.x configure -state normal -foreground [ cget .ref -foreground ]; .menu55.config.f.x9.l configure -state normal; } else {.menu55.config.f.x9.x configure -state disabled -foreground [ cget .ref -disabledforeground ]; .menu55.config.f.x9.l configure -state disabled}
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_HISAX != 0)} then {configure_entry .menu55.config.f.x10 normal {m}} else {configure_entry .menu55.config.f.x10 disabled {m}}
	global CONFIG_ISA
	global CONFIG_HISAX_16_0
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_HISAX != 0) && ($CONFIG_ISA != 0)} then {
	configure_entry .menu55.config.f.x11 normal {n l y}} else {configure_entry .menu55.config.f.x11 disabled {y n l}}
	global CONFIG_HISAX_16_3
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_HISAX != 0) && ($CONFIG_ISA != 0)} then {
	configure_entry .menu55.config.f.x12 normal {n l y}} else {configure_entry .menu55.config.f.x12 disabled {y n l}}
	global CONFIG_HISAX_AVM_A1
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_HISAX != 0) && ($CONFIG_ISA != 0)} then {
	configure_entry .menu55.config.f.x13 normal {n l y}} else {configure_entry .menu55.config.f.x13 disabled {y n l}}
	global CONFIG_HISAX_IX1MICROR2
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_HISAX != 0) && ($CONFIG_ISA != 0)} then {
	configure_entry .menu55.config.f.x14 normal {n l y}} else {configure_entry .menu55.config.f.x14 disabled {y n l}}
	global CONFIG_HISAX_ASUSCOM
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_HISAX != 0) && ($CONFIG_ISA != 0)} then {
	configure_entry .menu55.config.f.x15 normal {n l y}} else {configure_entry .menu55.config.f.x15 disabled {y n l}}
	global CONFIG_HISAX_TELEINT
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_HISAX != 0) && ($CONFIG_ISA != 0)} then {
	configure_entry .menu55.config.f.x16 normal {n l y}} else {configure_entry .menu55.config.f.x16 disabled {y n l}}
	global CONFIG_HISAX_HFCS
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_HISAX != 0) && ($CONFIG_ISA != 0)} then {
	configure_entry .menu55.config.f.x17 normal {n l y}} else {configure_entry .menu55.config.f.x17 disabled {y n l}}
	global CONFIG_HISAX_SPORTSTER
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_HISAX != 0) && ($CONFIG_ISA != 0)} then {
	configure_entry .menu55.config.f.x18 normal {n l y}} else {configure_entry .menu55.config.f.x18 disabled {y n l}}
	global CONFIG_HISAX_MIC
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_HISAX != 0) && ($CONFIG_ISA != 0)} then {
	configure_entry .menu55.config.f.x19 normal {n l y}} else {configure_entry .menu55.config.f.x19 disabled {y n l}}
	global CONFIG_HISAX_ISURF
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_HISAX != 0) && ($CONFIG_ISA != 0)} then {
	configure_entry .menu55.config.f.x20 normal {n l y}} else {configure_entry .menu55.config.f.x20 disabled {y n l}}
	global CONFIG_HISAX_HSTSAPHIR
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_HISAX != 0) && ($CONFIG_ISA != 0)} then {
	configure_entry .menu55.config.f.x21 normal {n l y}} else {configure_entry .menu55.config.f.x21 disabled {y n l}}
	global CONFIG_HISAX_TELESPCI
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_HISAX != 0)} then {
	configure_entry .menu55.config.f.x22 normal {n l y}} else {configure_entry .menu55.config.f.x22 disabled {y n l}}
	global CONFIG_HISAX_S0BOX
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_HISAX != 0)} then {
	configure_entry .menu55.config.f.x23 normal {n l y}} else {configure_entry .menu55.config.f.x23 disabled {y n l}}
	global CONFIG_HISAX_FRITZPCI
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_HISAX != 0)} then {
	configure_entry .menu55.config.f.x24 normal {n l y}} else {configure_entry .menu55.config.f.x24 disabled {y n l}}
	global CONFIG_HISAX_AVM_A1_PCMCIA
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_HISAX != 0)} then {
	configure_entry .menu55.config.f.x25 normal {n l y}} else {configure_entry .menu55.config.f.x25 disabled {y n l}}
	global CONFIG_HISAX_ELSA
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_HISAX != 0)} then {
	configure_entry .menu55.config.f.x26 normal {n l y}} else {configure_entry .menu55.config.f.x26 disabled {y n l}}
	global CONFIG_HISAX_DIEHLDIVA
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_HISAX != 0)} then {
	configure_entry .menu55.config.f.x27 normal {n l y}} else {configure_entry .menu55.config.f.x27 disabled {y n l}}
	global CONFIG_HISAX_SEDLBAUER
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_HISAX != 0)} then {
	configure_entry .menu55.config.f.x28 normal {n l y}} else {configure_entry .menu55.config.f.x28 disabled {y n l}}
	global CONFIG_HISAX_NETJET
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_HISAX != 0)} then {
	configure_entry .menu55.config.f.x29 normal {n l y}} else {configure_entry .menu55.config.f.x29 disabled {y n l}}
	global CONFIG_HISAX_NETJET_U
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_HISAX != 0)} then {
	configure_entry .menu55.config.f.x30 normal {n l y}} else {configure_entry .menu55.config.f.x30 disabled {y n l}}
	global CONFIG_HISAX_NICCY
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_HISAX != 0)} then {
	configure_entry .menu55.config.f.x31 normal {n l y}} else {configure_entry .menu55.config.f.x31 disabled {y n l}}
	global CONFIG_HISAX_BKM_A4T
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_HISAX != 0)} then {
	configure_entry .menu55.config.f.x32 normal {n l y}} else {configure_entry .menu55.config.f.x32 disabled {y n l}}
	global CONFIG_HISAX_SCT_QUADRO
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_HISAX != 0)} then {
	configure_entry .menu55.config.f.x33 normal {n l y}} else {configure_entry .menu55.config.f.x33 disabled {y n l}}
	global CONFIG_HISAX_GAZEL
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_HISAX != 0)} then {
	configure_entry .menu55.config.f.x34 normal {n l y}} else {configure_entry .menu55.config.f.x34 disabled {y n l}}
	global CONFIG_HISAX_HFC_PCI
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_HISAX != 0)} then {
	configure_entry .menu55.config.f.x35 normal {n l y}} else {configure_entry .menu55.config.f.x35 disabled {y n l}}
	global CONFIG_HISAX_W6692
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_HISAX != 0)} then {
	configure_entry .menu55.config.f.x36 normal {n l y}} else {configure_entry .menu55.config.f.x36 disabled {y n l}}
	global CONFIG_HISAX_HFC_SX
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_HISAX != 0)} then {
	configure_entry .menu55.config.f.x37 normal {n l y}} else {configure_entry .menu55.config.f.x37 disabled {y n l}}
	global CONFIG_EXPERIMENTAL
	global CONFIG_HISAX_ENTERNOW_PCI
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_HISAX != 0) && ($CONFIG_EXPERIMENTAL != 0)} then {
	configure_entry .menu55.config.f.x38 normal {n l y}} else {configure_entry .menu55.config.f.x38 disabled {y n l}}
	global CONFIG_HISAX_DEBUG
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_HISAX != 0)} then {
	configure_entry .menu55.config.f.x39 normal {n l y}} else {configure_entry .menu55.config.f.x39 disabled {y n l}}
	global CONFIG_PCMCIA
	global CONFIG_HISAX_SEDLBAUER_CS
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_HISAX != 0) && ($CONFIG_ISDN_DRV_HISAX == 1 || $CONFIG_ISDN_DRV_HISAX == 2 || $CONFIG_ISDN_DRV_HISAX == 4) && ($CONFIG_PCMCIA == 1 || $CONFIG_PCMCIA == 2 || $CONFIG_PCMCIA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ISDN_DRV_HISAX $CONFIG_PCMCIA]];set CONFIG_HISAX_SEDLBAUER_CS [sync_tristate $CONFIG_HISAX_SEDLBAUER_CS $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu55.config.f.x40 disabled {y}} else {configure_entry .menu55.config.f.x40 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu55.config.f.x40 disabled {m}} else {configure_entry .menu55.config.f.x40 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu55.config.f.x40 normal {m}} else {configure_entry .menu55.config.f.x40 disabled {m}}; configure_entry .menu55.config.f.x40 normal {n l}} else {configure_entry .menu55.config.f.x40 disabled {y n m l}}
	global CONFIG_HISAX_ELSA_CS
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_HISAX != 0) && ($CONFIG_ISDN_DRV_HISAX == 1 || $CONFIG_ISDN_DRV_HISAX == 2 || $CONFIG_ISDN_DRV_HISAX == 4) && ($CONFIG_PCMCIA == 1 || $CONFIG_PCMCIA == 2 || $CONFIG_PCMCIA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ISDN_DRV_HISAX $CONFIG_PCMCIA]];set CONFIG_HISAX_ELSA_CS [sync_tristate $CONFIG_HISAX_ELSA_CS $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu55.config.f.x41 disabled {y}} else {configure_entry .menu55.config.f.x41 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu55.config.f.x41 disabled {m}} else {configure_entry .menu55.config.f.x41 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu55.config.f.x41 normal {m}} else {configure_entry .menu55.config.f.x41 disabled {m}}; configure_entry .menu55.config.f.x41 normal {n l}} else {configure_entry .menu55.config.f.x41 disabled {y n m l}}
	global CONFIG_HISAX_AVM_A1_CS
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_HISAX != 0) && ($CONFIG_ISDN_DRV_HISAX == 1 || $CONFIG_ISDN_DRV_HISAX == 2 || $CONFIG_ISDN_DRV_HISAX == 4) && ($CONFIG_PCMCIA == 1 || $CONFIG_PCMCIA == 2 || $CONFIG_PCMCIA == 4) && ($CONFIG_HISAX_AVM_A1_PCMCIA == 1 || $CONFIG_HISAX_AVM_A1_PCMCIA == 2 || $CONFIG_HISAX_AVM_A1_PCMCIA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ISDN_DRV_HISAX $CONFIG_PCMCIA $CONFIG_HISAX_AVM_A1_PCMCIA]];set CONFIG_HISAX_AVM_A1_CS [sync_tristate $CONFIG_HISAX_AVM_A1_CS $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu55.config.f.x42 disabled {y}} else {configure_entry .menu55.config.f.x42 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu55.config.f.x42 disabled {m}} else {configure_entry .menu55.config.f.x42 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu55.config.f.x42 normal {m}} else {configure_entry .menu55.config.f.x42 disabled {m}}; configure_entry .menu55.config.f.x42 normal {n l}} else {configure_entry .menu55.config.f.x42 disabled {y n m l}}
	global CONFIG_HISAX_ST5481
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_HISAX != 0) && ($CONFIG_ISDN_DRV_HISAX == 1 || $CONFIG_ISDN_DRV_HISAX == 2 || $CONFIG_ISDN_DRV_HISAX == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ISDN_DRV_HISAX $CONFIG_EXPERIMENTAL]];set CONFIG_HISAX_ST5481 [sync_tristate $CONFIG_HISAX_ST5481 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu55.config.f.x43 disabled {y}} else {configure_entry .menu55.config.f.x43 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu55.config.f.x43 disabled {m}} else {configure_entry .menu55.config.f.x43 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu55.config.f.x43 normal {m}} else {configure_entry .menu55.config.f.x43 disabled {m}}; configure_entry .menu55.config.f.x43 normal {n l}} else {configure_entry .menu55.config.f.x43 disabled {y n m l}}
	global CONFIG_HISAX_FRITZ_PCIPNP
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_HISAX != 0) && ($CONFIG_ISDN_DRV_HISAX == 1 || $CONFIG_ISDN_DRV_HISAX == 2 || $CONFIG_ISDN_DRV_HISAX == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ISDN_DRV_HISAX $CONFIG_EXPERIMENTAL]];set CONFIG_HISAX_FRITZ_PCIPNP [sync_tristate $CONFIG_HISAX_FRITZ_PCIPNP $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu55.config.f.x44 disabled {y}} else {configure_entry .menu55.config.f.x44 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu55.config.f.x44 disabled {m}} else {configure_entry .menu55.config.f.x44 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu55.config.f.x44 normal {m}} else {configure_entry .menu55.config.f.x44 disabled {m}}; configure_entry .menu55.config.f.x44 normal {n l}} else {configure_entry .menu55.config.f.x44 disabled {y n m l}}
	global CONFIG_USB_AUERISDN
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_HISAX != 0) && ($CONFIG_ISDN_DRV_HISAX == 1 || $CONFIG_ISDN_DRV_HISAX == 2 || $CONFIG_ISDN_DRV_HISAX == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ISDN_DRV_HISAX]];set CONFIG_USB_AUERISDN [sync_tristate $CONFIG_USB_AUERISDN $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu55.config.f.x45 disabled {y}} else {configure_entry .menu55.config.f.x45 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu55.config.f.x45 disabled {m}} else {configure_entry .menu55.config.f.x45 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu55.config.f.x45 normal {m}} else {configure_entry .menu55.config.f.x45 disabled {m}}; configure_entry .menu55.config.f.x45 normal {n l}} else {configure_entry .menu55.config.f.x45 disabled {y n m l}}
}


proc update_define_menu55 {} {
	update_define_mainmenu
	global CONFIG_MODULES
	global CONFIG_ISDN_HISAX
	global CONFIG_HISAX_EURO
set CONFIG_HISAX_EURO [expr $CONFIG_HISAX_EURO|16]
	global CONFIG_DE_AOC
set CONFIG_DE_AOC [expr $CONFIG_DE_AOC|16]
	global CONFIG_HISAX_NO_SENDCOMPLETE
set CONFIG_HISAX_NO_SENDCOMPLETE [expr $CONFIG_HISAX_NO_SENDCOMPLETE|16]
	global CONFIG_HISAX_NO_LLC
set CONFIG_HISAX_NO_LLC [expr $CONFIG_HISAX_NO_LLC|16]
	global CONFIG_HISAX_NO_KEYPAD
set CONFIG_HISAX_NO_KEYPAD [expr $CONFIG_HISAX_NO_KEYPAD|16]
	global CONFIG_HISAX_1TR6
set CONFIG_HISAX_1TR6 [expr $CONFIG_HISAX_1TR6|16]
	global CONFIG_HISAX_NI1
set CONFIG_HISAX_NI1 [expr $CONFIG_HISAX_NI1|16]
	global CONFIG_HISAX_16_0
set CONFIG_HISAX_16_0 [expr $CONFIG_HISAX_16_0|16]
	global CONFIG_HISAX_16_3
set CONFIG_HISAX_16_3 [expr $CONFIG_HISAX_16_3|16]
	global CONFIG_HISAX_AVM_A1
set CONFIG_HISAX_AVM_A1 [expr $CONFIG_HISAX_AVM_A1|16]
	global CONFIG_HISAX_IX1MICROR2
set CONFIG_HISAX_IX1MICROR2 [expr $CONFIG_HISAX_IX1MICROR2|16]
	global CONFIG_HISAX_ASUSCOM
set CONFIG_HISAX_ASUSCOM [expr $CONFIG_HISAX_ASUSCOM|16]
	global CONFIG_HISAX_TELEINT
set CONFIG_HISAX_TELEINT [expr $CONFIG_HISAX_TELEINT|16]
	global CONFIG_HISAX_HFCS
set CONFIG_HISAX_HFCS [expr $CONFIG_HISAX_HFCS|16]
	global CONFIG_HISAX_SPORTSTER
set CONFIG_HISAX_SPORTSTER [expr $CONFIG_HISAX_SPORTSTER|16]
	global CONFIG_HISAX_MIC
set CONFIG_HISAX_MIC [expr $CONFIG_HISAX_MIC|16]
	global CONFIG_HISAX_ISURF
set CONFIG_HISAX_ISURF [expr $CONFIG_HISAX_ISURF|16]
	global CONFIG_HISAX_HSTSAPHIR
set CONFIG_HISAX_HSTSAPHIR [expr $CONFIG_HISAX_HSTSAPHIR|16]
	global CONFIG_HISAX_TELESPCI
set CONFIG_HISAX_TELESPCI [expr $CONFIG_HISAX_TELESPCI|16]
	global CONFIG_HISAX_S0BOX
set CONFIG_HISAX_S0BOX [expr $CONFIG_HISAX_S0BOX|16]
	global CONFIG_HISAX_FRITZPCI
set CONFIG_HISAX_FRITZPCI [expr $CONFIG_HISAX_FRITZPCI|16]
	global CONFIG_HISAX_AVM_A1_PCMCIA
set CONFIG_HISAX_AVM_A1_PCMCIA [expr $CONFIG_HISAX_AVM_A1_PCMCIA|16]
	global CONFIG_HISAX_ELSA
set CONFIG_HISAX_ELSA [expr $CONFIG_HISAX_ELSA|16]
	global CONFIG_HISAX_DIEHLDIVA
set CONFIG_HISAX_DIEHLDIVA [expr $CONFIG_HISAX_DIEHLDIVA|16]
	global CONFIG_HISAX_SEDLBAUER
set CONFIG_HISAX_SEDLBAUER [expr $CONFIG_HISAX_SEDLBAUER|16]
	global CONFIG_HISAX_NETJET
set CONFIG_HISAX_NETJET [expr $CONFIG_HISAX_NETJET|16]
	global CONFIG_HISAX_NETJET_U
set CONFIG_HISAX_NETJET_U [expr $CONFIG_HISAX_NETJET_U|16]
	global CONFIG_HISAX_NICCY
set CONFIG_HISAX_NICCY [expr $CONFIG_HISAX_NICCY|16]
	global CONFIG_HISAX_BKM_A4T
set CONFIG_HISAX_BKM_A4T [expr $CONFIG_HISAX_BKM_A4T|16]
	global CONFIG_HISAX_SCT_QUADRO
set CONFIG_HISAX_SCT_QUADRO [expr $CONFIG_HISAX_SCT_QUADRO|16]
	global CONFIG_HISAX_GAZEL
set CONFIG_HISAX_GAZEL [expr $CONFIG_HISAX_GAZEL|16]
	global CONFIG_HISAX_HFC_PCI
set CONFIG_HISAX_HFC_PCI [expr $CONFIG_HISAX_HFC_PCI|16]
	global CONFIG_HISAX_W6692
set CONFIG_HISAX_W6692 [expr $CONFIG_HISAX_W6692|16]
	global CONFIG_HISAX_HFC_SX
set CONFIG_HISAX_HFC_SX [expr $CONFIG_HISAX_HFC_SX|16]
	global CONFIG_HISAX_ENTERNOW_PCI
set CONFIG_HISAX_ENTERNOW_PCI [expr $CONFIG_HISAX_ENTERNOW_PCI|16]
	global CONFIG_HISAX_DEBUG
set CONFIG_HISAX_DEBUG [expr $CONFIG_HISAX_DEBUG|16]
	global CONFIG_ISDN
	global CONFIG_ISDN_DRV_HISAX
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN == 1 || $CONFIG_ISDN == 2 || $CONFIG_ISDN == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ISDN]]; set CONFIG_ISDN_DRV_HISAX [sync_tristate $CONFIG_ISDN_DRV_HISAX $tmpvar_dep]; set CONFIG_ISDN_DRV_HISAX [expr $CONFIG_ISDN_DRV_HISAX&15]}
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_HISAX != 0)} then {	global CONSTANT_Y
set CONFIG_ISDN_HISAX $CONSTANT_Y }
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_HISAX != 0)} then {
	set CONFIG_HISAX_EURO [expr $CONFIG_HISAX_EURO&15]}
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_HISAX != 0) && ($CONFIG_HISAX_EURO != 0)} then {
	set CONFIG_DE_AOC [expr $CONFIG_DE_AOC&15]}
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_HISAX != 0) && ($CONFIG_HISAX_EURO != 0)} then {
	set CONFIG_HISAX_NO_SENDCOMPLETE [expr $CONFIG_HISAX_NO_SENDCOMPLETE&15]}
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_HISAX != 0) && ($CONFIG_HISAX_EURO != 0)} then {
	set CONFIG_HISAX_NO_LLC [expr $CONFIG_HISAX_NO_LLC&15]}
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_HISAX != 0) && ($CONFIG_HISAX_EURO != 0)} then {
	set CONFIG_HISAX_NO_KEYPAD [expr $CONFIG_HISAX_NO_KEYPAD&15]}
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_HISAX != 0)} then {
	set CONFIG_HISAX_1TR6 [expr $CONFIG_HISAX_1TR6&15]}
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_HISAX != 0)} then {
	set CONFIG_HISAX_NI1 [expr $CONFIG_HISAX_NI1&15]}
	global CONFIG_HISAX_MAX_CARDS
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_HISAX != 0)} then {validate_int CONFIG_HISAX_MAX_CARDS "$CONFIG_HISAX_MAX_CARDS" 8}
	global CONFIG_ISA
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_HISAX != 0) && ($CONFIG_ISA != 0)} then {
	set CONFIG_HISAX_16_0 [expr $CONFIG_HISAX_16_0&15]}
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_HISAX != 0) && ($CONFIG_ISA != 0)} then {
	set CONFIG_HISAX_16_3 [expr $CONFIG_HISAX_16_3&15]}
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_HISAX != 0) && ($CONFIG_ISA != 0)} then {
	set CONFIG_HISAX_AVM_A1 [expr $CONFIG_HISAX_AVM_A1&15]}
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_HISAX != 0) && ($CONFIG_ISA != 0)} then {
	set CONFIG_HISAX_IX1MICROR2 [expr $CONFIG_HISAX_IX1MICROR2&15]}
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_HISAX != 0) && ($CONFIG_ISA != 0)} then {
	set CONFIG_HISAX_ASUSCOM [expr $CONFIG_HISAX_ASUSCOM&15]}
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_HISAX != 0) && ($CONFIG_ISA != 0)} then {
	set CONFIG_HISAX_TELEINT [expr $CONFIG_HISAX_TELEINT&15]}
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_HISAX != 0) && ($CONFIG_ISA != 0)} then {
	set CONFIG_HISAX_HFCS [expr $CONFIG_HISAX_HFCS&15]}
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_HISAX != 0) && ($CONFIG_ISA != 0)} then {
	set CONFIG_HISAX_SPORTSTER [expr $CONFIG_HISAX_SPORTSTER&15]}
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_HISAX != 0) && ($CONFIG_ISA != 0)} then {
	set CONFIG_HISAX_MIC [expr $CONFIG_HISAX_MIC&15]}
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_HISAX != 0) && ($CONFIG_ISA != 0)} then {
	set CONFIG_HISAX_ISURF [expr $CONFIG_HISAX_ISURF&15]}
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_HISAX != 0) && ($CONFIG_ISA != 0)} then {
	set CONFIG_HISAX_HSTSAPHIR [expr $CONFIG_HISAX_HSTSAPHIR&15]}
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_HISAX != 0)} then {
	set CONFIG_HISAX_TELESPCI [expr $CONFIG_HISAX_TELESPCI&15]}
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_HISAX != 0)} then {
	set CONFIG_HISAX_S0BOX [expr $CONFIG_HISAX_S0BOX&15]}
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_HISAX != 0)} then {
	set CONFIG_HISAX_FRITZPCI [expr $CONFIG_HISAX_FRITZPCI&15]}
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_HISAX != 0)} then {
	set CONFIG_HISAX_AVM_A1_PCMCIA [expr $CONFIG_HISAX_AVM_A1_PCMCIA&15]}
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_HISAX != 0)} then {
	set CONFIG_HISAX_ELSA [expr $CONFIG_HISAX_ELSA&15]}
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_HISAX != 0)} then {
	set CONFIG_HISAX_DIEHLDIVA [expr $CONFIG_HISAX_DIEHLDIVA&15]}
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_HISAX != 0)} then {
	set CONFIG_HISAX_SEDLBAUER [expr $CONFIG_HISAX_SEDLBAUER&15]}
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_HISAX != 0)} then {
	set CONFIG_HISAX_NETJET [expr $CONFIG_HISAX_NETJET&15]}
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_HISAX != 0)} then {
	set CONFIG_HISAX_NETJET_U [expr $CONFIG_HISAX_NETJET_U&15]}
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_HISAX != 0)} then {
	set CONFIG_HISAX_NICCY [expr $CONFIG_HISAX_NICCY&15]}
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_HISAX != 0)} then {
	set CONFIG_HISAX_BKM_A4T [expr $CONFIG_HISAX_BKM_A4T&15]}
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_HISAX != 0)} then {
	set CONFIG_HISAX_SCT_QUADRO [expr $CONFIG_HISAX_SCT_QUADRO&15]}
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_HISAX != 0)} then {
	set CONFIG_HISAX_GAZEL [expr $CONFIG_HISAX_GAZEL&15]}
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_HISAX != 0)} then {
	set CONFIG_HISAX_HFC_PCI [expr $CONFIG_HISAX_HFC_PCI&15]}
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_HISAX != 0)} then {
	set CONFIG_HISAX_W6692 [expr $CONFIG_HISAX_W6692&15]}
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_HISAX != 0)} then {
	set CONFIG_HISAX_HFC_SX [expr $CONFIG_HISAX_HFC_SX&15]}
	global CONFIG_EXPERIMENTAL
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_HISAX != 0) && ($CONFIG_EXPERIMENTAL != 0)} then {
	set CONFIG_HISAX_ENTERNOW_PCI [expr $CONFIG_HISAX_ENTERNOW_PCI&15]}
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_HISAX != 0)} then {
	set CONFIG_HISAX_DEBUG [expr $CONFIG_HISAX_DEBUG&15]}
	global CONFIG_PCMCIA
	global CONFIG_HISAX_SEDLBAUER_CS
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_HISAX != 0) && ($CONFIG_ISDN_DRV_HISAX == 1 || $CONFIG_ISDN_DRV_HISAX == 2 || $CONFIG_ISDN_DRV_HISAX == 4) && ($CONFIG_PCMCIA == 1 || $CONFIG_PCMCIA == 2 || $CONFIG_PCMCIA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ISDN_DRV_HISAX $CONFIG_PCMCIA]]; set CONFIG_HISAX_SEDLBAUER_CS [sync_tristate $CONFIG_HISAX_SEDLBAUER_CS $tmpvar_dep]; set CONFIG_HISAX_SEDLBAUER_CS [expr $CONFIG_HISAX_SEDLBAUER_CS&15]}
	global CONFIG_HISAX_ELSA_CS
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_HISAX != 0) && ($CONFIG_ISDN_DRV_HISAX == 1 || $CONFIG_ISDN_DRV_HISAX == 2 || $CONFIG_ISDN_DRV_HISAX == 4) && ($CONFIG_PCMCIA == 1 || $CONFIG_PCMCIA == 2 || $CONFIG_PCMCIA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ISDN_DRV_HISAX $CONFIG_PCMCIA]]; set CONFIG_HISAX_ELSA_CS [sync_tristate $CONFIG_HISAX_ELSA_CS $tmpvar_dep]; set CONFIG_HISAX_ELSA_CS [expr $CONFIG_HISAX_ELSA_CS&15]}
	global CONFIG_HISAX_AVM_A1_CS
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_HISAX != 0) && ($CONFIG_ISDN_DRV_HISAX == 1 || $CONFIG_ISDN_DRV_HISAX == 2 || $CONFIG_ISDN_DRV_HISAX == 4) && ($CONFIG_PCMCIA == 1 || $CONFIG_PCMCIA == 2 || $CONFIG_PCMCIA == 4) && ($CONFIG_HISAX_AVM_A1_PCMCIA == 1 || $CONFIG_HISAX_AVM_A1_PCMCIA == 2 || $CONFIG_HISAX_AVM_A1_PCMCIA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ISDN_DRV_HISAX $CONFIG_PCMCIA $CONFIG_HISAX_AVM_A1_PCMCIA]]; set CONFIG_HISAX_AVM_A1_CS [sync_tristate $CONFIG_HISAX_AVM_A1_CS $tmpvar_dep]; set CONFIG_HISAX_AVM_A1_CS [expr $CONFIG_HISAX_AVM_A1_CS&15]}
	global CONFIG_HISAX_ST5481
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_HISAX != 0) && ($CONFIG_ISDN_DRV_HISAX == 1 || $CONFIG_ISDN_DRV_HISAX == 2 || $CONFIG_ISDN_DRV_HISAX == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ISDN_DRV_HISAX $CONFIG_EXPERIMENTAL]]; set CONFIG_HISAX_ST5481 [sync_tristate $CONFIG_HISAX_ST5481 $tmpvar_dep]; set CONFIG_HISAX_ST5481 [expr $CONFIG_HISAX_ST5481&15]}
	global CONFIG_HISAX_FRITZ_PCIPNP
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_HISAX != 0) && ($CONFIG_ISDN_DRV_HISAX == 1 || $CONFIG_ISDN_DRV_HISAX == 2 || $CONFIG_ISDN_DRV_HISAX == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ISDN_DRV_HISAX $CONFIG_EXPERIMENTAL]]; set CONFIG_HISAX_FRITZ_PCIPNP [sync_tristate $CONFIG_HISAX_FRITZ_PCIPNP $tmpvar_dep]; set CONFIG_HISAX_FRITZ_PCIPNP [expr $CONFIG_HISAX_FRITZ_PCIPNP&15]}
	global CONFIG_USB_AUERISDN
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_HISAX != 0) && ($CONFIG_ISDN_DRV_HISAX == 1 || $CONFIG_ISDN_DRV_HISAX == 2 || $CONFIG_ISDN_DRV_HISAX == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ISDN_DRV_HISAX]]; set CONFIG_USB_AUERISDN [sync_tristate $CONFIG_USB_AUERISDN $tmpvar_dep]; set CONFIG_USB_AUERISDN [expr $CONFIG_USB_AUERISDN&15]}
}


proc menu56 {w title} {
	set oldFocus [focus]
	catch {focus .menu53}
	catch {destroy $w; unregister_active 56}
	toplevel $w -class Dialog
	wm withdraw $w
	global active_menus
	set active_menus [lsort -integer [linsert $active_menus end 56]]
	message $w.m -width 400 -aspect 300 -text \
		"Active ISDN cards"  -relief raised
	pack $w.m -pady 10 -side top -padx 10
	wm title $w "Active ISDN cards" 

	bind $w <Escape> "catch {focus $oldFocus}; destroy $w; unregister_active 56; break"
	set nextscript "catch {focus $oldFocus}; destroy $w; unregister_active 56; catch {destroy .menu53}; unregister_active 53; menu57 .menu57 \"$title\""
	frame $w.f
	button $w.f.back -text "OK" \
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 56"
	button $w.f.next -text "Next" -underline 0\
		-width 15 -command $nextscript
	bind all <Alt-n> $nextscript
	button $w.f.prev -text "Prev" -underline 0\
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 56; menu55 .menu55 \"$title\""
	bind $w <Alt-p> "catch {focus $oldFocus}; destroy $w; unregister_active 56; menu55 .menu55 \"$title\";break"
	pack $w.f.back $w.f.next $w.f.prev -side left -expand on
	pack $w.f -pady 10 -side bottom -anchor w -fill x
	frame $w.topline -relief ridge -borderwidth 2 -height 2
	pack $w.topline -side top -fill x

	frame $w.botline -relief ridge -borderwidth 2 -height 2
	pack $w.botline -side bottom -fill x

	frame $w.config
	pack $w.config -fill y -expand on

	scrollbar $w.config.vscroll -command "$w.config.canvas yview"
	pack $w.config.vscroll -side right -fill y

	canvas $w.config.canvas -height 1\
		-relief flat -borderwidth 0 -yscrollcommand "$w.config.vscroll set" \
		-width [expr [winfo screenwidth .] * 1 / 2] 
	frame $w.config.f
	bind $w <Key-Down> "$w.config.canvas yview scroll  1 unit;break;"
	bind $w <Key-Up> "$w.config.canvas yview scroll  -1 unit;break;"
	bind $w <Key-Next> "$w.config.canvas yview scroll  1 page;break;"
	bind $w <Key-Prior> "$w.config.canvas yview scroll  -1 page;break;"
	bind $w <Key-Home> "$w.config.canvas yview moveto 0;break;"
	bind $w <Key-End> "$w.config.canvas yview moveto 1 ;break;"
	pack $w.config.canvas -side right -fill y


	dep_tristate $w.config.f 56 0 "ICN 2B and 4B support" CONFIG_ISDN_DRV_ICN
	dep_tristate $w.config.f 56 1 "PCBIT-D support" CONFIG_ISDN_DRV_PCBIT
	dep_tristate $w.config.f 56 2 "Spellcaster support" CONFIG_ISDN_DRV_SC
	dep_tristate $w.config.f 56 3 "IBM Active 2000 support" CONFIG_ISDN_DRV_ACT2000
	bool $w.config.f 56 4 "Eicon active card support" CONFIG_ISDN_DRV_EICON
	dep_tristate $w.config.f 56 5 "  Build Eicon driver type standalone" CONFIG_ISDN_DRV_EICON_DIVAS
	dep_tristate $w.config.f 56 6 "  Legacy Eicon driver" CONFIG_ISDN_DRV_EICON_OLD
	dep_bool $w.config.f 56 7 "    Eicon PCI DIVA Server BRI/PRI/4BRI support" CONFIG_ISDN_DRV_EICON_PCI
	bool $w.config.f 56 8 "    Eicon S,SX,SCOM,Quadro,S2M support" CONFIG_ISDN_DRV_EICON_ISA
	dep_tristate $w.config.f 56 9 "Auvertech TurboPAM support" CONFIG_ISDN_DRV_TPAM
	tristate $w.config.f 56 10 "CAPI2.0 support" CONFIG_ISDN_CAPI
	bool $w.config.f 56 11 "  Verbose reason code reporting (kernel size +=7K)" CONFIG_ISDN_DRV_AVMB1_VERBOSE_REASON
	dep_bool $w.config.f 56 12 "  CAPI2.0 Middleware support (EXPERIMENTAL)" CONFIG_ISDN_CAPI_MIDDLEWARE
	dep_tristate $w.config.f 56 13 "  CAPI2.0 /dev/capi support" CONFIG_ISDN_CAPI_CAPI20
	dep_bool $w.config.f 56 14 "    CAPI2.0 filesystem support" CONFIG_ISDN_CAPI_CAPIFS_BOOL
	dep_tristate $w.config.f 56 15 "  CAPI2.0 capidrv interface support" CONFIG_ISDN_CAPI_CAPIDRV
	dep_tristate $w.config.f 56 16 "  AVM B1 ISA support" CONFIG_ISDN_DRV_AVMB1_B1ISA
	dep_tristate $w.config.f 56 17 "  AVM B1 PCI support" CONFIG_ISDN_DRV_AVMB1_B1PCI
	dep_bool $w.config.f 56 18 "    AVM B1 PCI V4 support" CONFIG_ISDN_DRV_AVMB1_B1PCIV4
	dep_tristate $w.config.f 56 19 "  AVM T1/T1-B ISA support" CONFIG_ISDN_DRV_AVMB1_T1ISA
	dep_tristate $w.config.f 56 20 "  AVM B1/M1/M2 PCMCIA support" CONFIG_ISDN_DRV_AVMB1_B1PCMCIA
	dep_tristate $w.config.f 56 21 "  AVM B1/M1/M2 PCMCIA cs module" CONFIG_ISDN_DRV_AVMB1_AVM_CS
	dep_tristate $w.config.f 56 22 "  AVM T1/T1-B PCI support" CONFIG_ISDN_DRV_AVMB1_T1PCI
	dep_tristate $w.config.f 56 23 "  AVM C4/C2 support" CONFIG_ISDN_DRV_AVMB1_C4
	dep_tristate $w.config.f 56 24 "  Hypercope HYSDN cards (Champ, Ergo, Metro) support (module only)" CONFIG_HYSDN
	dep_bool $w.config.f 56 25 "    HYSDN CAPI 2.0 support" CONFIG_HYSDN_CAPI



	focus $w
	update_active
	global winx; global winy
	if {[winfo exists .menu53] == 0} then {menu53 .menu53 "ISDN subsystem"}
	set winx [expr [winfo x .menu53]+30]; set winy [expr [winfo y .menu53]+30]
	if {[winfo exists $w]} then {wm geometry $w +$winx+$winy}
	update idletasks
	if {[winfo exists $w]} then  {$w.config.canvas create window 0 0 -anchor nw -window $w.config.f

	$w.config.canvas configure \
		-width [expr [winfo reqwidth $w.config.f] + 1]\
		-scrollregion "-1 -1 [expr [winfo reqwidth $w.config.f] + 1] \
			 [expr [winfo reqheight $w.config.f] + 1]"

	set winy [expr [winfo reqh $w] - [winfo reqh $w.config.canvas]]
	set scry [expr [winfo screenh $w] / 2]
	set maxy [expr [winfo screenh $w] * 3 / 4]
	set canvtotal [expr [winfo reqh $w.config.f] + 2]
	if [expr $winy + $canvtotal < $maxy] {
		$w.config.canvas configure -height $canvtotal
	} else {
		$w.config.canvas configure -height [expr $scry - $winy]
		}
	}
	update idletasks
	if {[winfo exists $w]} then {
	wm maxsize $w [winfo width $w] [winfo screenheight $w]
	wm minsize $w [winfo width $w] 100

	wm deiconify $w
}
}

proc update_menu56 {} {
	global CONFIG_MODULES
	global CONFIG_ISDN
	global CONFIG_ISDN_DRV_ICN
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN == 1 || $CONFIG_ISDN == 2 || $CONFIG_ISDN == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ISDN]];set CONFIG_ISDN_DRV_ICN [sync_tristate $CONFIG_ISDN_DRV_ICN $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu56.config.f.x0 disabled {y}} else {configure_entry .menu56.config.f.x0 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu56.config.f.x0 disabled {m}} else {configure_entry .menu56.config.f.x0 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu56.config.f.x0 normal {m}} else {configure_entry .menu56.config.f.x0 disabled {m}}; configure_entry .menu56.config.f.x0 normal {n l}} else {configure_entry .menu56.config.f.x0 disabled {y n m l}}
	global CONFIG_ISDN_DRV_PCBIT
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN == 1 || $CONFIG_ISDN == 2 || $CONFIG_ISDN == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ISDN]];set CONFIG_ISDN_DRV_PCBIT [sync_tristate $CONFIG_ISDN_DRV_PCBIT $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu56.config.f.x1 disabled {y}} else {configure_entry .menu56.config.f.x1 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu56.config.f.x1 disabled {m}} else {configure_entry .menu56.config.f.x1 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu56.config.f.x1 normal {m}} else {configure_entry .menu56.config.f.x1 disabled {m}}; configure_entry .menu56.config.f.x1 normal {n l}} else {configure_entry .menu56.config.f.x1 disabled {y n m l}}
	global CONFIG_ISDN_DRV_SC
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN == 1 || $CONFIG_ISDN == 2 || $CONFIG_ISDN == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ISDN]];set CONFIG_ISDN_DRV_SC [sync_tristate $CONFIG_ISDN_DRV_SC $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu56.config.f.x2 disabled {y}} else {configure_entry .menu56.config.f.x2 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu56.config.f.x2 disabled {m}} else {configure_entry .menu56.config.f.x2 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu56.config.f.x2 normal {m}} else {configure_entry .menu56.config.f.x2 disabled {m}}; configure_entry .menu56.config.f.x2 normal {n l}} else {configure_entry .menu56.config.f.x2 disabled {y n m l}}
	global CONFIG_ISDN_DRV_ACT2000
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN == 1 || $CONFIG_ISDN == 2 || $CONFIG_ISDN == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ISDN]];set CONFIG_ISDN_DRV_ACT2000 [sync_tristate $CONFIG_ISDN_DRV_ACT2000 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu56.config.f.x3 disabled {y}} else {configure_entry .menu56.config.f.x3 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu56.config.f.x3 disabled {m}} else {configure_entry .menu56.config.f.x3 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu56.config.f.x3 normal {m}} else {configure_entry .menu56.config.f.x3 disabled {m}}; configure_entry .menu56.config.f.x3 normal {n l}} else {configure_entry .menu56.config.f.x3 disabled {y n m l}}
	global CONFIG_ISDN_DRV_EICON
	if {($CONFIG_ISDN != 0)} then {
	configure_entry .menu56.config.f.x4 normal {n l y}} else {configure_entry .menu56.config.f.x4 disabled {y n l}}
	global CONFIG_ISDN_DRV_EICON_OLD
	global CONFIG_PCI
	global CONFIG_ISDN_DRV_EICON_DIVAS
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_EICON != 0) && ($CONFIG_ISDN_DRV_EICON_OLD != 1) && ($CONFIG_ISDN == 1 || $CONFIG_ISDN == 2 || $CONFIG_ISDN == 4) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ISDN $CONFIG_PCI]];set CONFIG_ISDN_DRV_EICON_DIVAS [sync_tristate $CONFIG_ISDN_DRV_EICON_DIVAS $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu56.config.f.x5 disabled {y}} else {configure_entry .menu56.config.f.x5 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu56.config.f.x5 disabled {m}} else {configure_entry .menu56.config.f.x5 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu56.config.f.x5 normal {m}} else {configure_entry .menu56.config.f.x5 disabled {m}}; configure_entry .menu56.config.f.x5 normal {n l}} else {configure_entry .menu56.config.f.x5 disabled {y n m l}}
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_EICON != 0) && ($CONFIG_ISDN_DRV_EICON_DIVAS != 1) && ($CONFIG_ISDN == 1 || $CONFIG_ISDN == 2 || $CONFIG_ISDN == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ISDN]];set CONFIG_ISDN_DRV_EICON_OLD [sync_tristate $CONFIG_ISDN_DRV_EICON_OLD $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu56.config.f.x6 disabled {y}} else {configure_entry .menu56.config.f.x6 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu56.config.f.x6 disabled {m}} else {configure_entry .menu56.config.f.x6 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu56.config.f.x6 normal {m}} else {configure_entry .menu56.config.f.x6 disabled {m}}; configure_entry .menu56.config.f.x6 normal {n l}} else {configure_entry .menu56.config.f.x6 disabled {y n m l}}
	global CONFIG_ISDN_DRV_EICON_PCI
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_EICON != 0) && ($CONFIG_ISDN_DRV_EICON_DIVAS != 1) && ($CONFIG_ISDN_DRV_EICON_OLD != 0) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PCI]];set CONFIG_ISDN_DRV_EICON_PCI [sync_bool $CONFIG_ISDN_DRV_EICON_PCI $tmpvar_dep 0];if {$tmpvar_dep != 1} then {configure_entry .menu56.config.f.x7 disabled {y};} else {configure_entry .menu56.config.f.x7 normal {y};}; configure_entry .menu56.config.f.x7 normal {n l}} else {configure_entry .menu56.config.f.x7 disabled {y n l}}
	global CONFIG_ISDN_DRV_EICON_ISA
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_EICON != 0) && ($CONFIG_ISDN_DRV_EICON_DIVAS != 1) && ($CONFIG_ISDN_DRV_EICON_OLD != 0)} then {
	configure_entry .menu56.config.f.x8 normal {n l y}} else {configure_entry .menu56.config.f.x8 disabled {y n l}}
	global CONFIG_EXPERIMENTAL
	global CONFIG_ISDN_DRV_TPAM
	if {($CONFIG_ISDN != 0) && ($CONFIG_EXPERIMENTAL != 0) && ($CONFIG_ISDN == 1 || $CONFIG_ISDN == 2 || $CONFIG_ISDN == 4) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ISDN $CONFIG_PCI]];set CONFIG_ISDN_DRV_TPAM [sync_tristate $CONFIG_ISDN_DRV_TPAM $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu56.config.f.x9 disabled {y}} else {configure_entry .menu56.config.f.x9 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu56.config.f.x9 disabled {m}} else {configure_entry .menu56.config.f.x9 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu56.config.f.x9 normal {m}} else {configure_entry .menu56.config.f.x9 disabled {m}}; configure_entry .menu56.config.f.x9 normal {n l}} else {configure_entry .menu56.config.f.x9 disabled {y n m l}}
	global CONFIG_ISDN_CAPI
	if {($CONFIG_ISDN != 0)} then {
	configure_entry .menu56.config.f.x10 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu56.config.f.x10 normal {m}} else {configure_entry .menu56.config.f.x10 disabled {m}}; configure_entry .menu56.config.f.x10 normal {n l}} else {configure_entry .menu56.config.f.x10 disabled {y n m l}}
	global CONFIG_ISDN_DRV_AVMB1_VERBOSE_REASON
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_CAPI != 0)} then {
	configure_entry .menu56.config.f.x11 normal {n l y}} else {configure_entry .menu56.config.f.x11 disabled {y n l}}
	global CONFIG_ISDN_CAPI_MIDDLEWARE
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_CAPI != 0) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_EXPERIMENTAL]];set CONFIG_ISDN_CAPI_MIDDLEWARE [sync_bool $CONFIG_ISDN_CAPI_MIDDLEWARE $tmpvar_dep 0];if {$tmpvar_dep != 1} then {configure_entry .menu56.config.f.x12 disabled {y};} else {configure_entry .menu56.config.f.x12 normal {y};}; configure_entry .menu56.config.f.x12 normal {n l}} else {configure_entry .menu56.config.f.x12 disabled {y n l}}
	global CONFIG_ISDN_CAPI_CAPI20
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_CAPI != 0) && ($CONFIG_ISDN_CAPI == 1 || $CONFIG_ISDN_CAPI == 2 || $CONFIG_ISDN_CAPI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ISDN_CAPI]];set CONFIG_ISDN_CAPI_CAPI20 [sync_tristate $CONFIG_ISDN_CAPI_CAPI20 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu56.config.f.x13 disabled {y}} else {configure_entry .menu56.config.f.x13 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu56.config.f.x13 disabled {m}} else {configure_entry .menu56.config.f.x13 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu56.config.f.x13 normal {m}} else {configure_entry .menu56.config.f.x13 disabled {m}}; configure_entry .menu56.config.f.x13 normal {n l}} else {configure_entry .menu56.config.f.x13 disabled {y n m l}}
	global CONFIG_ISDN_CAPI_CAPIFS_BOOL
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_CAPI != 0) && ($CONFIG_ISDN_CAPI_MIDDLEWARE == 1) && ($CONFIG_ISDN_CAPI_CAPI20 == 1 || $CONFIG_ISDN_CAPI_CAPI20 == 2 || $CONFIG_ISDN_CAPI_CAPI20 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ISDN_CAPI_CAPI20]];set CONFIG_ISDN_CAPI_CAPIFS_BOOL [sync_bool $CONFIG_ISDN_CAPI_CAPIFS_BOOL $tmpvar_dep 1];if {$tmpvar_dep != 1 && $tmpvar_dep != 2} then {configure_entry .menu56.config.f.x14 disabled {y};} else {configure_entry .menu56.config.f.x14 normal {y};}; configure_entry .menu56.config.f.x14 normal {n l}} else {configure_entry .menu56.config.f.x14 disabled {y n l}}
	global CONFIG_ISDN_CAPI_CAPIDRV
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_CAPI != 0) && ($CONFIG_ISDN_CAPI == 1 || $CONFIG_ISDN_CAPI == 2 || $CONFIG_ISDN_CAPI == 4) && ($CONFIG_ISDN == 1 || $CONFIG_ISDN == 2 || $CONFIG_ISDN == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ISDN_CAPI $CONFIG_ISDN]];set CONFIG_ISDN_CAPI_CAPIDRV [sync_tristate $CONFIG_ISDN_CAPI_CAPIDRV $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu56.config.f.x15 disabled {y}} else {configure_entry .menu56.config.f.x15 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu56.config.f.x15 disabled {m}} else {configure_entry .menu56.config.f.x15 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu56.config.f.x15 normal {m}} else {configure_entry .menu56.config.f.x15 disabled {m}}; configure_entry .menu56.config.f.x15 normal {n l}} else {configure_entry .menu56.config.f.x15 disabled {y n m l}}
	global CONFIG_ISDN_DRV_AVMB1_B1ISA
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_CAPI != 0) && ($CONFIG_ISDN_CAPI == 1 || $CONFIG_ISDN_CAPI == 2 || $CONFIG_ISDN_CAPI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ISDN_CAPI]];set CONFIG_ISDN_DRV_AVMB1_B1ISA [sync_tristate $CONFIG_ISDN_DRV_AVMB1_B1ISA $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu56.config.f.x16 disabled {y}} else {configure_entry .menu56.config.f.x16 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu56.config.f.x16 disabled {m}} else {configure_entry .menu56.config.f.x16 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu56.config.f.x16 normal {m}} else {configure_entry .menu56.config.f.x16 disabled {m}}; configure_entry .menu56.config.f.x16 normal {n l}} else {configure_entry .menu56.config.f.x16 disabled {y n m l}}
	global CONFIG_ISDN_DRV_AVMB1_B1PCI
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_CAPI != 0) && ($CONFIG_ISDN_CAPI == 1 || $CONFIG_ISDN_CAPI == 2 || $CONFIG_ISDN_CAPI == 4) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ISDN_CAPI $CONFIG_PCI]];set CONFIG_ISDN_DRV_AVMB1_B1PCI [sync_tristate $CONFIG_ISDN_DRV_AVMB1_B1PCI $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu56.config.f.x17 disabled {y}} else {configure_entry .menu56.config.f.x17 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu56.config.f.x17 disabled {m}} else {configure_entry .menu56.config.f.x17 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu56.config.f.x17 normal {m}} else {configure_entry .menu56.config.f.x17 disabled {m}}; configure_entry .menu56.config.f.x17 normal {n l}} else {configure_entry .menu56.config.f.x17 disabled {y n m l}}
	global CONFIG_ISDN_DRV_AVMB1_B1PCIV4
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_CAPI != 0) && ($CONFIG_ISDN_DRV_AVMB1_B1PCI == 1 || $CONFIG_ISDN_DRV_AVMB1_B1PCI == 2 || $CONFIG_ISDN_DRV_AVMB1_B1PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ISDN_DRV_AVMB1_B1PCI]];set CONFIG_ISDN_DRV_AVMB1_B1PCIV4 [sync_bool $CONFIG_ISDN_DRV_AVMB1_B1PCIV4 $tmpvar_dep 1];if {$tmpvar_dep != 1 && $tmpvar_dep != 2} then {configure_entry .menu56.config.f.x18 disabled {y};} else {configure_entry .menu56.config.f.x18 normal {y};}; configure_entry .menu56.config.f.x18 normal {n l}} else {configure_entry .menu56.config.f.x18 disabled {y n l}}
	global CONFIG_ISDN_DRV_AVMB1_T1ISA
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_CAPI != 0) && ($CONFIG_ISDN_CAPI == 1 || $CONFIG_ISDN_CAPI == 2 || $CONFIG_ISDN_CAPI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ISDN_CAPI]];set CONFIG_ISDN_DRV_AVMB1_T1ISA [sync_tristate $CONFIG_ISDN_DRV_AVMB1_T1ISA $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu56.config.f.x19 disabled {y}} else {configure_entry .menu56.config.f.x19 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu56.config.f.x19 disabled {m}} else {configure_entry .menu56.config.f.x19 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu56.config.f.x19 normal {m}} else {configure_entry .menu56.config.f.x19 disabled {m}}; configure_entry .menu56.config.f.x19 normal {n l}} else {configure_entry .menu56.config.f.x19 disabled {y n m l}}
	global CONFIG_ISDN_DRV_AVMB1_B1PCMCIA
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_CAPI != 0) && ($CONFIG_ISDN_CAPI == 1 || $CONFIG_ISDN_CAPI == 2 || $CONFIG_ISDN_CAPI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ISDN_CAPI]];set CONFIG_ISDN_DRV_AVMB1_B1PCMCIA [sync_tristate $CONFIG_ISDN_DRV_AVMB1_B1PCMCIA $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu56.config.f.x20 disabled {y}} else {configure_entry .menu56.config.f.x20 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu56.config.f.x20 disabled {m}} else {configure_entry .menu56.config.f.x20 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu56.config.f.x20 normal {m}} else {configure_entry .menu56.config.f.x20 disabled {m}}; configure_entry .menu56.config.f.x20 normal {n l}} else {configure_entry .menu56.config.f.x20 disabled {y n m l}}
	global CONFIG_PCMCIA
	global CONFIG_ISDN_DRV_AVMB1_AVM_CS
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_CAPI != 0) && ($CONFIG_ISDN_DRV_AVMB1_B1PCMCIA == 1 || $CONFIG_ISDN_DRV_AVMB1_B1PCMCIA == 2 || $CONFIG_ISDN_DRV_AVMB1_B1PCMCIA == 4) && ($CONFIG_PCMCIA == 1 || $CONFIG_PCMCIA == 2 || $CONFIG_PCMCIA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ISDN_DRV_AVMB1_B1PCMCIA $CONFIG_PCMCIA]];set CONFIG_ISDN_DRV_AVMB1_AVM_CS [sync_tristate $CONFIG_ISDN_DRV_AVMB1_AVM_CS $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu56.config.f.x21 disabled {y}} else {configure_entry .menu56.config.f.x21 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu56.config.f.x21 disabled {m}} else {configure_entry .menu56.config.f.x21 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu56.config.f.x21 normal {m}} else {configure_entry .menu56.config.f.x21 disabled {m}}; configure_entry .menu56.config.f.x21 normal {n l}} else {configure_entry .menu56.config.f.x21 disabled {y n m l}}
	global CONFIG_ISDN_DRV_AVMB1_T1PCI
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_CAPI != 0) && ($CONFIG_ISDN_CAPI == 1 || $CONFIG_ISDN_CAPI == 2 || $CONFIG_ISDN_CAPI == 4) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ISDN_CAPI $CONFIG_PCI]];set CONFIG_ISDN_DRV_AVMB1_T1PCI [sync_tristate $CONFIG_ISDN_DRV_AVMB1_T1PCI $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu56.config.f.x22 disabled {y}} else {configure_entry .menu56.config.f.x22 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu56.config.f.x22 disabled {m}} else {configure_entry .menu56.config.f.x22 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu56.config.f.x22 normal {m}} else {configure_entry .menu56.config.f.x22 disabled {m}}; configure_entry .menu56.config.f.x22 normal {n l}} else {configure_entry .menu56.config.f.x22 disabled {y n m l}}
	global CONFIG_ISDN_DRV_AVMB1_C4
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_CAPI != 0) && ($CONFIG_ISDN_CAPI == 1 || $CONFIG_ISDN_CAPI == 2 || $CONFIG_ISDN_CAPI == 4) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ISDN_CAPI $CONFIG_PCI]];set CONFIG_ISDN_DRV_AVMB1_C4 [sync_tristate $CONFIG_ISDN_DRV_AVMB1_C4 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu56.config.f.x23 disabled {y}} else {configure_entry .menu56.config.f.x23 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu56.config.f.x23 disabled {m}} else {configure_entry .menu56.config.f.x23 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu56.config.f.x23 normal {m}} else {configure_entry .menu56.config.f.x23 disabled {m}}; configure_entry .menu56.config.f.x23 normal {n l}} else {configure_entry .menu56.config.f.x23 disabled {y n m l}}
	global CONFIG_PROC_FS
	global CONFIG_HYSDN
	if {($CONFIG_ISDN != 0) && ($CONFIG_PROC_FS == 1 || $CONFIG_PROC_FS == 2 || $CONFIG_PROC_FS == 4)} then {
	global CONSTANT_M
	set tmpvar_dep [effective_dep [list $CONSTANT_M $CONFIG_PROC_FS]];set CONFIG_HYSDN [sync_tristate $CONFIG_HYSDN $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu56.config.f.x24 disabled {y}} else {configure_entry .menu56.config.f.x24 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu56.config.f.x24 disabled {m}} else {configure_entry .menu56.config.f.x24 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu56.config.f.x24 normal {m}} else {configure_entry .menu56.config.f.x24 disabled {m}}; configure_entry .menu56.config.f.x24 normal {n l}} else {configure_entry .menu56.config.f.x24 disabled {y n m l}}
	global CONFIG_HYSDN_CAPI
	if {($CONFIG_ISDN != 0) && ($CONFIG_HYSDN == 1 || $CONFIG_HYSDN == 2 || $CONFIG_HYSDN == 4) && ($CONFIG_ISDN_CAPI == 1 || $CONFIG_ISDN_CAPI == 2 || $CONFIG_ISDN_CAPI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_HYSDN $CONFIG_ISDN_CAPI]];set CONFIG_HYSDN_CAPI [sync_bool $CONFIG_HYSDN_CAPI $tmpvar_dep 1];if {$tmpvar_dep != 1 && $tmpvar_dep != 2} then {configure_entry .menu56.config.f.x25 disabled {y};} else {configure_entry .menu56.config.f.x25 normal {y};}; configure_entry .menu56.config.f.x25 normal {n l}} else {configure_entry .menu56.config.f.x25 disabled {y n l}}
}


proc update_define_menu56 {} {
	update_define_mainmenu
	global CONFIG_MODULES
	global CONFIG_ISDN_CAPI
	global CONFIG_ISDN_CAPI_CAPIFS
	global CONFIG_ISDN_DRV_EICON
set CONFIG_ISDN_DRV_EICON [expr $CONFIG_ISDN_DRV_EICON|16]
	global CONFIG_ISDN_DRV_EICON_ISA
set CONFIG_ISDN_DRV_EICON_ISA [expr $CONFIG_ISDN_DRV_EICON_ISA|16]
set CONFIG_ISDN_CAPI [expr $CONFIG_ISDN_CAPI|16]
	global CONFIG_ISDN_DRV_AVMB1_VERBOSE_REASON
set CONFIG_ISDN_DRV_AVMB1_VERBOSE_REASON [expr $CONFIG_ISDN_DRV_AVMB1_VERBOSE_REASON|16]
	global CONFIG_ISDN
	global CONFIG_ISDN_DRV_ICN
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN == 1 || $CONFIG_ISDN == 2 || $CONFIG_ISDN == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ISDN]]; set CONFIG_ISDN_DRV_ICN [sync_tristate $CONFIG_ISDN_DRV_ICN $tmpvar_dep]; set CONFIG_ISDN_DRV_ICN [expr $CONFIG_ISDN_DRV_ICN&15]}
	global CONFIG_ISDN_DRV_PCBIT
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN == 1 || $CONFIG_ISDN == 2 || $CONFIG_ISDN == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ISDN]]; set CONFIG_ISDN_DRV_PCBIT [sync_tristate $CONFIG_ISDN_DRV_PCBIT $tmpvar_dep]; set CONFIG_ISDN_DRV_PCBIT [expr $CONFIG_ISDN_DRV_PCBIT&15]}
	global CONFIG_ISDN_DRV_SC
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN == 1 || $CONFIG_ISDN == 2 || $CONFIG_ISDN == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ISDN]]; set CONFIG_ISDN_DRV_SC [sync_tristate $CONFIG_ISDN_DRV_SC $tmpvar_dep]; set CONFIG_ISDN_DRV_SC [expr $CONFIG_ISDN_DRV_SC&15]}
	global CONFIG_ISDN_DRV_ACT2000
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN == 1 || $CONFIG_ISDN == 2 || $CONFIG_ISDN == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ISDN]]; set CONFIG_ISDN_DRV_ACT2000 [sync_tristate $CONFIG_ISDN_DRV_ACT2000 $tmpvar_dep]; set CONFIG_ISDN_DRV_ACT2000 [expr $CONFIG_ISDN_DRV_ACT2000&15]}
	if {($CONFIG_ISDN != 0)} then {
	set CONFIG_ISDN_DRV_EICON [expr $CONFIG_ISDN_DRV_EICON&15]}
	global CONFIG_ISDN_DRV_EICON_OLD
	global CONFIG_PCI
	global CONFIG_ISDN_DRV_EICON_DIVAS
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_EICON != 0) && ($CONFIG_ISDN_DRV_EICON_OLD != 1) && ($CONFIG_ISDN == 1 || $CONFIG_ISDN == 2 || $CONFIG_ISDN == 4) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ISDN $CONFIG_PCI]]; set CONFIG_ISDN_DRV_EICON_DIVAS [sync_tristate $CONFIG_ISDN_DRV_EICON_DIVAS $tmpvar_dep]; set CONFIG_ISDN_DRV_EICON_DIVAS [expr $CONFIG_ISDN_DRV_EICON_DIVAS&15]}
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_EICON != 0) && ($CONFIG_ISDN_DRV_EICON_DIVAS != 1) && ($CONFIG_ISDN == 1 || $CONFIG_ISDN == 2 || $CONFIG_ISDN == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ISDN]]; set CONFIG_ISDN_DRV_EICON_OLD [sync_tristate $CONFIG_ISDN_DRV_EICON_OLD $tmpvar_dep]; set CONFIG_ISDN_DRV_EICON_OLD [expr $CONFIG_ISDN_DRV_EICON_OLD&15]}
	global CONFIG_ISDN_DRV_EICON_PCI
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_EICON != 0) && ($CONFIG_ISDN_DRV_EICON_DIVAS != 1) && ($CONFIG_ISDN_DRV_EICON_OLD != 0) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PCI]];set CONFIG_ISDN_DRV_EICON_PCI [sync_bool $CONFIG_ISDN_DRV_EICON_PCI $tmpvar_dep 0];set CONFIG_ISDN_DRV_EICON_PCI [expr $CONFIG_ISDN_DRV_EICON_PCI&15]}
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_EICON != 0) && ($CONFIG_ISDN_DRV_EICON_DIVAS != 1) && ($CONFIG_ISDN_DRV_EICON_OLD != 0)} then {
	set CONFIG_ISDN_DRV_EICON_ISA [expr $CONFIG_ISDN_DRV_EICON_ISA&15]}
	global CONFIG_EXPERIMENTAL
	global CONFIG_ISDN_DRV_TPAM
	if {($CONFIG_ISDN != 0) && ($CONFIG_EXPERIMENTAL != 0) && ($CONFIG_ISDN == 1 || $CONFIG_ISDN == 2 || $CONFIG_ISDN == 4) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ISDN $CONFIG_PCI]]; set CONFIG_ISDN_DRV_TPAM [sync_tristate $CONFIG_ISDN_DRV_TPAM $tmpvar_dep]; set CONFIG_ISDN_DRV_TPAM [expr $CONFIG_ISDN_DRV_TPAM&15]}
	if {($CONFIG_ISDN != 0)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_ISDN_CAPI == 2)} then {set CONFIG_ISDN_CAPI 1}; set CONFIG_ISDN_CAPI [expr $CONFIG_ISDN_CAPI&15]}
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_CAPI != 0)} then {
	set CONFIG_ISDN_DRV_AVMB1_VERBOSE_REASON [expr $CONFIG_ISDN_DRV_AVMB1_VERBOSE_REASON&15]}
	global CONFIG_ISDN_CAPI_MIDDLEWARE
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_CAPI != 0) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_EXPERIMENTAL]];set CONFIG_ISDN_CAPI_MIDDLEWARE [sync_bool $CONFIG_ISDN_CAPI_MIDDLEWARE $tmpvar_dep 0];set CONFIG_ISDN_CAPI_MIDDLEWARE [expr $CONFIG_ISDN_CAPI_MIDDLEWARE&15]}
	global CONFIG_ISDN_CAPI_CAPI20
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_CAPI != 0) && ($CONFIG_ISDN_CAPI == 1 || $CONFIG_ISDN_CAPI == 2 || $CONFIG_ISDN_CAPI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ISDN_CAPI]]; set CONFIG_ISDN_CAPI_CAPI20 [sync_tristate $CONFIG_ISDN_CAPI_CAPI20 $tmpvar_dep]; set CONFIG_ISDN_CAPI_CAPI20 [expr $CONFIG_ISDN_CAPI_CAPI20&15]}
	global CONFIG_ISDN_CAPI_CAPIFS_BOOL
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_CAPI != 0) && ($CONFIG_ISDN_CAPI_MIDDLEWARE == 1) && ($CONFIG_ISDN_CAPI_CAPI20 == 1 || $CONFIG_ISDN_CAPI_CAPI20 == 2 || $CONFIG_ISDN_CAPI_CAPI20 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ISDN_CAPI_CAPI20]];set CONFIG_ISDN_CAPI_CAPIFS_BOOL [sync_bool $CONFIG_ISDN_CAPI_CAPIFS_BOOL $tmpvar_dep 1];set CONFIG_ISDN_CAPI_CAPIFS_BOOL [expr $CONFIG_ISDN_CAPI_CAPIFS_BOOL&15]}
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_CAPI != 0) && ($CONFIG_ISDN_CAPI_MIDDLEWARE == 1) && ($CONFIG_ISDN_CAPI_CAPIFS_BOOL == 1)} then {set CONFIG_ISDN_CAPI_CAPIFS $CONFIG_ISDN_CAPI_CAPI20 }
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_CAPI != 0) && ($CONFIG_ISDN_CAPI_MIDDLEWARE == 1) && ($CONFIG_ISDN_CAPI_CAPIFS_BOOL != 1)} then {	global CONSTANT_N
set CONFIG_ISDN_CAPI_CAPIFS $CONSTANT_N }
	global CONFIG_ISDN_CAPI_CAPIDRV
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_CAPI != 0) && ($CONFIG_ISDN_CAPI == 1 || $CONFIG_ISDN_CAPI == 2 || $CONFIG_ISDN_CAPI == 4) && ($CONFIG_ISDN == 1 || $CONFIG_ISDN == 2 || $CONFIG_ISDN == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ISDN_CAPI $CONFIG_ISDN]]; set CONFIG_ISDN_CAPI_CAPIDRV [sync_tristate $CONFIG_ISDN_CAPI_CAPIDRV $tmpvar_dep]; set CONFIG_ISDN_CAPI_CAPIDRV [expr $CONFIG_ISDN_CAPI_CAPIDRV&15]}
	global CONFIG_ISDN_DRV_AVMB1_B1ISA
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_CAPI != 0) && ($CONFIG_ISDN_CAPI == 1 || $CONFIG_ISDN_CAPI == 2 || $CONFIG_ISDN_CAPI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ISDN_CAPI]]; set CONFIG_ISDN_DRV_AVMB1_B1ISA [sync_tristate $CONFIG_ISDN_DRV_AVMB1_B1ISA $tmpvar_dep]; set CONFIG_ISDN_DRV_AVMB1_B1ISA [expr $CONFIG_ISDN_DRV_AVMB1_B1ISA&15]}
	global CONFIG_ISDN_DRV_AVMB1_B1PCI
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_CAPI != 0) && ($CONFIG_ISDN_CAPI == 1 || $CONFIG_ISDN_CAPI == 2 || $CONFIG_ISDN_CAPI == 4) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ISDN_CAPI $CONFIG_PCI]]; set CONFIG_ISDN_DRV_AVMB1_B1PCI [sync_tristate $CONFIG_ISDN_DRV_AVMB1_B1PCI $tmpvar_dep]; set CONFIG_ISDN_DRV_AVMB1_B1PCI [expr $CONFIG_ISDN_DRV_AVMB1_B1PCI&15]}
	global CONFIG_ISDN_DRV_AVMB1_B1PCIV4
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_CAPI != 0) && ($CONFIG_ISDN_DRV_AVMB1_B1PCI == 1 || $CONFIG_ISDN_DRV_AVMB1_B1PCI == 2 || $CONFIG_ISDN_DRV_AVMB1_B1PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ISDN_DRV_AVMB1_B1PCI]];set CONFIG_ISDN_DRV_AVMB1_B1PCIV4 [sync_bool $CONFIG_ISDN_DRV_AVMB1_B1PCIV4 $tmpvar_dep 1];set CONFIG_ISDN_DRV_AVMB1_B1PCIV4 [expr $CONFIG_ISDN_DRV_AVMB1_B1PCIV4&15]}
	global CONFIG_ISDN_DRV_AVMB1_T1ISA
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_CAPI != 0) && ($CONFIG_ISDN_CAPI == 1 || $CONFIG_ISDN_CAPI == 2 || $CONFIG_ISDN_CAPI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ISDN_CAPI]]; set CONFIG_ISDN_DRV_AVMB1_T1ISA [sync_tristate $CONFIG_ISDN_DRV_AVMB1_T1ISA $tmpvar_dep]; set CONFIG_ISDN_DRV_AVMB1_T1ISA [expr $CONFIG_ISDN_DRV_AVMB1_T1ISA&15]}
	global CONFIG_ISDN_DRV_AVMB1_B1PCMCIA
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_CAPI != 0) && ($CONFIG_ISDN_CAPI == 1 || $CONFIG_ISDN_CAPI == 2 || $CONFIG_ISDN_CAPI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ISDN_CAPI]]; set CONFIG_ISDN_DRV_AVMB1_B1PCMCIA [sync_tristate $CONFIG_ISDN_DRV_AVMB1_B1PCMCIA $tmpvar_dep]; set CONFIG_ISDN_DRV_AVMB1_B1PCMCIA [expr $CONFIG_ISDN_DRV_AVMB1_B1PCMCIA&15]}
	global CONFIG_PCMCIA
	global CONFIG_ISDN_DRV_AVMB1_AVM_CS
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_CAPI != 0) && ($CONFIG_ISDN_DRV_AVMB1_B1PCMCIA == 1 || $CONFIG_ISDN_DRV_AVMB1_B1PCMCIA == 2 || $CONFIG_ISDN_DRV_AVMB1_B1PCMCIA == 4) && ($CONFIG_PCMCIA == 1 || $CONFIG_PCMCIA == 2 || $CONFIG_PCMCIA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ISDN_DRV_AVMB1_B1PCMCIA $CONFIG_PCMCIA]]; set CONFIG_ISDN_DRV_AVMB1_AVM_CS [sync_tristate $CONFIG_ISDN_DRV_AVMB1_AVM_CS $tmpvar_dep]; set CONFIG_ISDN_DRV_AVMB1_AVM_CS [expr $CONFIG_ISDN_DRV_AVMB1_AVM_CS&15]}
	global CONFIG_ISDN_DRV_AVMB1_T1PCI
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_CAPI != 0) && ($CONFIG_ISDN_CAPI == 1 || $CONFIG_ISDN_CAPI == 2 || $CONFIG_ISDN_CAPI == 4) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ISDN_CAPI $CONFIG_PCI]]; set CONFIG_ISDN_DRV_AVMB1_T1PCI [sync_tristate $CONFIG_ISDN_DRV_AVMB1_T1PCI $tmpvar_dep]; set CONFIG_ISDN_DRV_AVMB1_T1PCI [expr $CONFIG_ISDN_DRV_AVMB1_T1PCI&15]}
	global CONFIG_ISDN_DRV_AVMB1_C4
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_CAPI != 0) && ($CONFIG_ISDN_CAPI == 1 || $CONFIG_ISDN_CAPI == 2 || $CONFIG_ISDN_CAPI == 4) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ISDN_CAPI $CONFIG_PCI]]; set CONFIG_ISDN_DRV_AVMB1_C4 [sync_tristate $CONFIG_ISDN_DRV_AVMB1_C4 $tmpvar_dep]; set CONFIG_ISDN_DRV_AVMB1_C4 [expr $CONFIG_ISDN_DRV_AVMB1_C4&15]}
	global CONFIG_PROC_FS
	global CONFIG_HYSDN
	if {($CONFIG_ISDN != 0) && ($CONFIG_PROC_FS == 1 || $CONFIG_PROC_FS == 2 || $CONFIG_PROC_FS == 4)} then {
	global CONSTANT_M
	set tmpvar_dep [effective_dep [list $CONSTANT_M $CONFIG_PROC_FS]]; set CONFIG_HYSDN [sync_tristate $CONFIG_HYSDN $tmpvar_dep]; set CONFIG_HYSDN [expr $CONFIG_HYSDN&15]}
	global CONFIG_HYSDN_CAPI
	if {($CONFIG_ISDN != 0) && ($CONFIG_HYSDN == 1 || $CONFIG_HYSDN == 2 || $CONFIG_HYSDN == 4) && ($CONFIG_ISDN_CAPI == 1 || $CONFIG_ISDN_CAPI == 2 || $CONFIG_ISDN_CAPI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_HYSDN $CONFIG_ISDN_CAPI]];set CONFIG_HYSDN_CAPI [sync_bool $CONFIG_HYSDN_CAPI $tmpvar_dep 1];set CONFIG_HYSDN_CAPI [expr $CONFIG_HYSDN_CAPI&15]}
}


menu_option menu57 57 "Input core support"
proc menu57 {w title} {
	set oldFocus [focus]
	catch {destroy $w; unregister_active 57}
	toplevel $w -class Dialog
	wm withdraw $w
	global active_menus
	set active_menus [lsort -integer [linsert $active_menus end 57]]
	message $w.m -width 400 -aspect 300 -text \
		"Input core support"  -relief raised
	pack $w.m -pady 10 -side top -padx 10
	wm title $w "Input core support" 

	bind $w <Escape> "catch {focus $oldFocus}; destroy $w; unregister_active 57; break"
	set nextscript "catch {focus $oldFocus}; destroy $w; unregister_active 57; menu58 .menu58 \"$title\""
	frame $w.f
	button $w.f.back -text "Main Menu" \
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 57"
	button $w.f.next -text "Next" -underline 0\
		-width 15 -command $nextscript
	bind all <Alt-n> $nextscript
	button $w.f.prev -text "Prev" -underline 0\
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 57; menu56 .menu56 \"$title\""
	bind $w <Alt-p> "catch {focus $oldFocus}; destroy $w; unregister_active 57; menu56 .menu56 \"$title\";break"
	pack $w.f.back $w.f.next $w.f.prev -side left -expand on
	pack $w.f -pady 10 -side bottom -anchor w -fill x
	frame $w.topline -relief ridge -borderwidth 2 -height 2
	pack $w.topline -side top -fill x

	frame $w.botline -relief ridge -borderwidth 2 -height 2
	pack $w.botline -side bottom -fill x

	frame $w.config
	pack $w.config -fill y -expand on

	scrollbar $w.config.vscroll -command "$w.config.canvas yview"
	pack $w.config.vscroll -side right -fill y

	canvas $w.config.canvas -height 1\
		-relief flat -borderwidth 0 -yscrollcommand "$w.config.vscroll set" \
		-width [expr [winfo screenwidth .] * 1 / 2] 
	frame $w.config.f
	bind $w <Key-Down> "$w.config.canvas yview scroll  1 unit;break;"
	bind $w <Key-Up> "$w.config.canvas yview scroll  -1 unit;break;"
	bind $w <Key-Next> "$w.config.canvas yview scroll  1 page;break;"
	bind $w <Key-Prior> "$w.config.canvas yview scroll  -1 page;break;"
	bind $w <Key-Home> "$w.config.canvas yview moveto 0;break;"
	bind $w <Key-End> "$w.config.canvas yview moveto 1 ;break;"
	pack $w.config.canvas -side right -fill y


	tristate $w.config.f 57 0 "Input core support" CONFIG_INPUT
	dep_tristate $w.config.f 57 1 "  Keyboard support" CONFIG_INPUT_KEYBDEV
	dep_tristate $w.config.f 57 2 "  Mouse support" CONFIG_INPUT_MOUSEDEV
	int $w.config.f 57 3 "   Horizontal screen resolution" CONFIG_INPUT_MOUSEDEV_SCREEN_X
	int $w.config.f 57 4 "   Vertical screen resolution" CONFIG_INPUT_MOUSEDEV_SCREEN_Y
	dep_tristate $w.config.f 57 5 "  Joystick support" CONFIG_INPUT_JOYDEV
	dep_tristate $w.config.f 57 6 "  Event interface support" CONFIG_INPUT_EVDEV



	focus $w
	update_active
	global winx; global winy
	set winx [expr [winfo x .]+30]; set winy [expr [winfo y .]+30]
	if {[winfo exists $w]} then {wm geometry $w +$winx+$winy}
	update idletasks
	if {[winfo exists $w]} then  {$w.config.canvas create window 0 0 -anchor nw -window $w.config.f

	$w.config.canvas configure \
		-width [expr [winfo reqwidth $w.config.f] + 1]\
		-scrollregion "-1 -1 [expr [winfo reqwidth $w.config.f] + 1] \
			 [expr [winfo reqheight $w.config.f] + 1]"

	set winy [expr [winfo reqh $w] - [winfo reqh $w.config.canvas]]
	set scry [expr [winfo screenh $w] / 2]
	set maxy [expr [winfo screenh $w] * 3 / 4]
	set canvtotal [expr [winfo reqh $w.config.f] + 2]
	if [expr $winy + $canvtotal < $maxy] {
		$w.config.canvas configure -height $canvtotal
	} else {
		$w.config.canvas configure -height [expr $scry - $winy]
		}
	}
	update idletasks
	if {[winfo exists $w]} then {
	wm maxsize $w [winfo width $w] [winfo screenheight $w]
	wm minsize $w [winfo width $w] 100

	wm deiconify $w
}
}

proc update_menu57 {} {
	global CONFIG_INPUT
	global CONFIG_MODULES

	if {($CONFIG_MODULES == 1)} then {configure_entry .menu57.config.f.x0 normal {m}} else {configure_entry .menu57.config.f.x0 disabled {m}}
	global CONFIG_INPUT_KEYBDEV
	if {($CONFIG_INPUT == 1 || $CONFIG_INPUT == 2 || $CONFIG_INPUT == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_INPUT]];set CONFIG_INPUT_KEYBDEV [sync_tristate $CONFIG_INPUT_KEYBDEV $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu57.config.f.x1 disabled {y}} else {configure_entry .menu57.config.f.x1 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu57.config.f.x1 disabled {m}} else {configure_entry .menu57.config.f.x1 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu57.config.f.x1 normal {m}} else {configure_entry .menu57.config.f.x1 disabled {m}}; configure_entry .menu57.config.f.x1 normal {n l}} else {configure_entry .menu57.config.f.x1 disabled {y n m l}}
	global CONFIG_INPUT_MOUSEDEV
	if {($CONFIG_INPUT == 1 || $CONFIG_INPUT == 2 || $CONFIG_INPUT == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_INPUT]];set CONFIG_INPUT_MOUSEDEV [sync_tristate $CONFIG_INPUT_MOUSEDEV $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu57.config.f.x2 disabled {y}} else {configure_entry .menu57.config.f.x2 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu57.config.f.x2 disabled {m}} else {configure_entry .menu57.config.f.x2 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu57.config.f.x2 normal {m}} else {configure_entry .menu57.config.f.x2 disabled {m}}; configure_entry .menu57.config.f.x2 normal {n l}} else {configure_entry .menu57.config.f.x2 disabled {y n m l}}
	global CONFIG_INPUT_MOUSEDEV_SCREEN_X
	if {($CONFIG_INPUT_MOUSEDEV != 0)} then {.menu57.config.f.x3.x configure -state normal -foreground [ cget .ref -foreground ]; .menu57.config.f.x3.l configure -state normal; } else {.menu57.config.f.x3.x configure -state disabled -foreground [ cget .ref -disabledforeground ]; .menu57.config.f.x3.l configure -state disabled}
	global CONFIG_INPUT_MOUSEDEV_SCREEN_Y
	if {($CONFIG_INPUT_MOUSEDEV != 0)} then {.menu57.config.f.x4.x configure -state normal -foreground [ cget .ref -foreground ]; .menu57.config.f.x4.l configure -state normal; } else {.menu57.config.f.x4.x configure -state disabled -foreground [ cget .ref -disabledforeground ]; .menu57.config.f.x4.l configure -state disabled}
	global CONFIG_INPUT_JOYDEV
	if {($CONFIG_INPUT == 1 || $CONFIG_INPUT == 2 || $CONFIG_INPUT == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_INPUT]];set CONFIG_INPUT_JOYDEV [sync_tristate $CONFIG_INPUT_JOYDEV $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu57.config.f.x5 disabled {y}} else {configure_entry .menu57.config.f.x5 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu57.config.f.x5 disabled {m}} else {configure_entry .menu57.config.f.x5 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu57.config.f.x5 normal {m}} else {configure_entry .menu57.config.f.x5 disabled {m}}; configure_entry .menu57.config.f.x5 normal {n l}} else {configure_entry .menu57.config.f.x5 disabled {y n m l}}
	global CONFIG_INPUT_EVDEV
	if {($CONFIG_INPUT == 1 || $CONFIG_INPUT == 2 || $CONFIG_INPUT == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_INPUT]];set CONFIG_INPUT_EVDEV [sync_tristate $CONFIG_INPUT_EVDEV $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu57.config.f.x6 disabled {y}} else {configure_entry .menu57.config.f.x6 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu57.config.f.x6 disabled {m}} else {configure_entry .menu57.config.f.x6 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu57.config.f.x6 normal {m}} else {configure_entry .menu57.config.f.x6 disabled {m}}; configure_entry .menu57.config.f.x6 normal {n l}} else {configure_entry .menu57.config.f.x6 disabled {y n m l}}
}


proc update_define_menu57 {} {
	update_define_mainmenu
	global CONFIG_MODULES
	global CONFIG_INPUT

	if {($CONFIG_MODULES == 0)} then {if {($CONFIG_INPUT == 2)} then {set CONFIG_INPUT 1}}
	global CONFIG_INPUT_KEYBDEV
	if {($CONFIG_INPUT == 1 || $CONFIG_INPUT == 2 || $CONFIG_INPUT == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_INPUT]]; set CONFIG_INPUT_KEYBDEV [sync_tristate $CONFIG_INPUT_KEYBDEV $tmpvar_dep]; set CONFIG_INPUT_KEYBDEV [expr $CONFIG_INPUT_KEYBDEV&15]}
	global CONFIG_INPUT_MOUSEDEV
	if {($CONFIG_INPUT == 1 || $CONFIG_INPUT == 2 || $CONFIG_INPUT == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_INPUT]]; set CONFIG_INPUT_MOUSEDEV [sync_tristate $CONFIG_INPUT_MOUSEDEV $tmpvar_dep]; set CONFIG_INPUT_MOUSEDEV [expr $CONFIG_INPUT_MOUSEDEV&15]}
	global CONFIG_INPUT_MOUSEDEV_SCREEN_X
	if {($CONFIG_INPUT_MOUSEDEV != 0)} then {validate_int CONFIG_INPUT_MOUSEDEV_SCREEN_X "$CONFIG_INPUT_MOUSEDEV_SCREEN_X" 1024}
	global CONFIG_INPUT_MOUSEDEV_SCREEN_Y
	if {($CONFIG_INPUT_MOUSEDEV != 0)} then {validate_int CONFIG_INPUT_MOUSEDEV_SCREEN_Y "$CONFIG_INPUT_MOUSEDEV_SCREEN_Y" 768}
	global CONFIG_INPUT_JOYDEV
	if {($CONFIG_INPUT == 1 || $CONFIG_INPUT == 2 || $CONFIG_INPUT == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_INPUT]]; set CONFIG_INPUT_JOYDEV [sync_tristate $CONFIG_INPUT_JOYDEV $tmpvar_dep]; set CONFIG_INPUT_JOYDEV [expr $CONFIG_INPUT_JOYDEV&15]}
	global CONFIG_INPUT_EVDEV
	if {($CONFIG_INPUT == 1 || $CONFIG_INPUT == 2 || $CONFIG_INPUT == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_INPUT]]; set CONFIG_INPUT_EVDEV [sync_tristate $CONFIG_INPUT_EVDEV $tmpvar_dep]; set CONFIG_INPUT_EVDEV [expr $CONFIG_INPUT_EVDEV&15]}
}


menu_option menu58 58 "Character devices"
proc menu58 {w title} {
	set oldFocus [focus]
	catch {destroy $w; unregister_active 58}
	toplevel $w -class Dialog
	wm withdraw $w
	global active_menus
	set active_menus [lsort -integer [linsert $active_menus end 58]]
	message $w.m -width 400 -aspect 300 -text \
		"Character devices"  -relief raised
	pack $w.m -pady 10 -side top -padx 10
	wm title $w "Character devices" 

	bind $w <Escape> "catch {focus $oldFocus}; destroy $w; unregister_active 58; break"
	set nextscript "catch {focus $oldFocus}; menu59 .menu59 \"$title\""
	frame $w.f
	button $w.f.back -text "Main Menu" \
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 58"
	button $w.f.next -text "Next" -underline 0\
		-width 15 -command $nextscript
	bind all <Alt-n> $nextscript
	button $w.f.prev -text "Prev" -underline 0\
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 58; menu57 .menu57 \"$title\""
	bind $w <Alt-p> "catch {focus $oldFocus}; destroy $w; unregister_active 58; menu57 .menu57 \"$title\";break"
	pack $w.f.back $w.f.next $w.f.prev -side left -expand on
	pack $w.f -pady 10 -side bottom -anchor w -fill x
	frame $w.topline -relief ridge -borderwidth 2 -height 2
	pack $w.topline -side top -fill x

	frame $w.botline -relief ridge -borderwidth 2 -height 2
	pack $w.botline -side bottom -fill x

	frame $w.config
	pack $w.config -fill y -expand on

	scrollbar $w.config.vscroll -command "$w.config.canvas yview"
	pack $w.config.vscroll -side right -fill y

	canvas $w.config.canvas -height 1\
		-relief flat -borderwidth 0 -yscrollcommand "$w.config.vscroll set" \
		-width [expr [winfo screenwidth .] * 1 / 2] 
	frame $w.config.f
	bind $w <Key-Down> "$w.config.canvas yview scroll  1 unit;break;"
	bind $w <Key-Up> "$w.config.canvas yview scroll  -1 unit;break;"
	bind $w <Key-Next> "$w.config.canvas yview scroll  1 page;break;"
	bind $w <Key-Prior> "$w.config.canvas yview scroll  -1 page;break;"
	bind $w <Key-Home> "$w.config.canvas yview moveto 0;break;"
	bind $w <Key-End> "$w.config.canvas yview moveto 1 ;break;"
	pack $w.config.canvas -side right -fill y


	bool $w.config.f 58 0 "ARM AMBA serial port support" CONFIG_SERIAL_AMBA
	bool $w.config.f 58 1 "  Support for console on Integrator serial port" CONFIG_SERIAL_AMBA_CONSOLE
	bool $w.config.f 58 2 "Kendin/Micrel KS8695 serial port support" CONFIG_SERIAL_KS8695
	bool $w.config.f 58 3 "Console on KS8695 serial port" CONFIG_SERIAL_CONSOLE
	bool $w.config.f 58 4 "LED Manager support" CONFIG_LEDMAN
	bool $w.config.f 58 5 "DS1302 Real Time Clock support" CONFIG_DS1302
	bool $w.config.f 58 6 "Virtual terminal" CONFIG_VT
	bool $w.config.f 58 7 "  Support for console on virtual terminal" CONFIG_VT_CONSOLE
	tristate $w.config.f 58 8 "Standard/generic (8250/16550 and compatible UARTs) serial support" CONFIG_SERIAL
	bool $w.config.f 58 9 "  Support for console on serial port" CONFIG_SERIAL_CONSOLE
	tristate $w.config.f 58 10 "   Atomwide serial port support" CONFIG_ATOMWIDE_SERIAL
	tristate $w.config.f 58 11 "   Dual serial port support" CONFIG_DUALSP_SERIAL
	dep_bool $w.config.f 58 12 "Extended dumb serial driver options" CONFIG_SERIAL_EXTENDED
	bool $w.config.f 58 13 "  Support more than 4 serial ports" CONFIG_SERIAL_MANY_PORTS
	bool $w.config.f 58 14 "  Support for sharing serial interrupts" CONFIG_SERIAL_SHARE_IRQ
	bool $w.config.f 58 15 "  Autodetect IRQ on standard ports (unsafe)" CONFIG_SERIAL_DETECT_IRQ
	bool $w.config.f 58 16 "  Support special multiport boards" CONFIG_SERIAL_MULTIPORT
	bool $w.config.f 58 17 "  Support the Bell Technologies HUB6 card" CONFIG_HUB6
	bool $w.config.f 58 18 "Non-standard serial port support" CONFIG_SERIAL_NONSTANDARD
	tristate $w.config.f 58 19 "  Computone IntelliPort Plus serial support" CONFIG_COMPUTONE
	tristate $w.config.f 58 20 "  Comtrol Rocketport support" CONFIG_ROCKETPORT
	tristate $w.config.f 58 21 "  Cyclades async mux support" CONFIG_CYCLADES
	bool $w.config.f 58 22 "    Cyclades-Z interrupt mode operation (EXPERIMENTAL)" CONFIG_CYZ_INTR
	tristate $w.config.f 58 23 "  Digiboard Intelligent Async Support" CONFIG_DIGIEPCA
	tristate $w.config.f 58 24 "  Digiboard PC/Xx Support" CONFIG_DIGI
	dep_tristate $w.config.f 58 25 "  Hayes ESP serial port support" CONFIG_ESPSERIAL
	tristate $w.config.f 58 26 "  Moxa Intellio support" CONFIG_MOXA_INTELLIO
	tristate $w.config.f 58 27 "  Moxa SmartIO support" CONFIG_MOXA_SMARTIO
	dep_tristate $w.config.f 58 28 "  Multi-Tech multiport card support (EXPERIMENTAL)" CONFIG_ISI
	tristate $w.config.f 58 29 "  Microgate SyncLink card support" CONFIG_SYNCLINK
	tristate $w.config.f 58 30 "  SyncLink Multiport support" CONFIG_SYNCLINKMP
	tristate $w.config.f 58 31 "  HDLC line discipline support" CONFIG_N_HDLC
	tristate $w.config.f 58 32 "  SDL RISCom/8 card support" CONFIG_RISCOM8
	tristate $w.config.f 58 33 "  Specialix IO8+ card support" CONFIG_SPECIALIX
	bool $w.config.f 58 34 "  Specialix DTR/RTS pin is RTS" CONFIG_SPECIALIX_RTSCTS
	tristate $w.config.f 58 35 "  Specialix SX (and SI) card support" CONFIG_SX
	tristate $w.config.f 58 36 "  Specialix RIO system support" CONFIG_RIO
	bool $w.config.f 58 37 "    Support really old RIO/PCI cards" CONFIG_RIO_OLDPCI
	bool $w.config.f 58 38 "  Stallion multiport serial support" CONFIG_STALDRV
	tristate $w.config.f 58 39 "    Stallion EasyIO or EC8/32 support" CONFIG_STALLION
	tristate $w.config.f 58 40 "    Stallion EC8/64, ONboard, Brumby support" CONFIG_ISTALLION
	tristate $w.config.f 58 41 "Commodore A2232 serial support (EXPERIMENTAL)" CONFIG_A2232
	bool $w.config.f 58 42 "DC21285 serial port support" CONFIG_SERIAL_21285
	bool $w.config.f 58 43 "  Use /dev/ttyS0 device (OBSOLETE)" CONFIG_SERIAL_21285_OLD
	bool $w.config.f 58 44 "  Console on DC21285 serial port" CONFIG_SERIAL_21285_CONSOLE
	bool $w.config.f 58 45 "Unix98 PTY support" CONFIG_UNIX98_PTYS
	int $w.config.f 58 46 "Maximum number of Unix98 PTYs in use (0-2048)" CONFIG_UNIX98_PTY_COUNT
	dep_tristate $w.config.f 58 47 "Parallel printer support" CONFIG_PRINTER
	bool $w.config.f 58 48 "  Support for console on line printer" CONFIG_LP_CONSOLE
	dep_tristate $w.config.f 58 49 "Support for user-space parallel port device drivers" CONFIG_PPDEV
	dep_tristate $w.config.f 58 50 "Texas Instruments parallel link cable support" CONFIG_TIPAR
	submenu $w.config.f 58 51 "I2C support" 59
	submenu $w.config.f 58 52 "Mice" 60
	submenu $w.config.f 58 53 "Joysticks" 61
	tristate $w.config.f 58 54 "QIC-02 tape support" CONFIG_QIC02_TAPE
	bool $w.config.f 58 55 "  Do you want runtime configuration for QIC-02" CONFIG_QIC02_DYNCONF
	comment $w.config.f 58 56 "  Edit configuration parameters in ./include/linux/tpqic02.h!"
	comment $w.config.f 58 57 "  Setting runtime QIC-02 configuration is done with qic02conf"
	comment $w.config.f 58 58 "  from the tpqic02-support package.  It is available at"
	comment $w.config.f 58 59 "  metalab.unc.edu or ftp://titus.cfw.com/pub/Linux/util/"
	tristate $w.config.f 58 60 "IPMI top-level message handler" CONFIG_IPMI_HANDLER
	dep_bool $w.config.f 58 61 "  Generate a panic event to all BMCs on a panic" CONFIG_IPMI_PANIC_EVENT
	dep_tristate $w.config.f 58 62 "  Device interface for IPMI" CONFIG_IPMI_DEVICE_INTERFACE
	dep_tristate $w.config.f 58 63 "  IPMI KCS handler" CONFIG_IPMI_KCS
	dep_tristate $w.config.f 58 64 "  IPMI Watchdog Timer" CONFIG_IPMI_WATCHDOG
	submenu $w.config.f 58 65 "Controller Area Network Cards/Chips" 62
	submenu $w.config.f 58 66 "Watchdog Cards" 63
	tristate $w.config.f 58 67 "NetWinder thermometer support" CONFIG_DS1620
	tristate $w.config.f 58 68 "NetWinder Button" CONFIG_NWBUTTON
	bool $w.config.f 58 69 "  Reboot Using Button" CONFIG_NWBUTTON_REBOOT
	tristate $w.config.f 58 70 "NetWinder flash support" CONFIG_NWFLASH
	dep_tristate $w.config.f 58 71 "NatSemi SCx200 GPIO Support" CONFIG_SCx200_GPIO
	dep_tristate $w.config.f 58 72 "AMD 76x native power management (Experimental)" CONFIG_AMD_PM768
	tristate $w.config.f 58 73 "/dev/nvram support" CONFIG_NVRAM
	tristate $w.config.f 58 74 "Enhanced Real Time Clock Support" CONFIG_RTC
	bool $w.config.f 58 75 "Tadpole ANA H8 Support (OBSOLETE)" CONFIG_H8
	tristate $w.config.f 58 76 "Double Talk PC internal speech card support" CONFIG_DTLK
	tristate $w.config.f 58 77 "Siemens R3964 line discipline" CONFIG_R3964
	tristate $w.config.f 58 78 "Applicom intelligent fieldbus card support" CONFIG_APPLICOM
	dep_tristate $w.config.f 58 79 "Sony Vaio Programmable I/O Control Device support (EXPERIMENTAL)" CONFIG_SONYPI
	submenu $w.config.f 58 80 "Ftape, the floppy tape device driver" 64
	tristate $w.config.f 58 81 "/dev/agpgart (AGP Support)" CONFIG_AGP
	bool $w.config.f 58 82 "  Intel 440LX/BX/GX and I815/I820/I830M/I830MP/I840/I845/I850/I860 support" CONFIG_AGP_INTEL
	bool $w.config.f 58 83 "  Intel I810/I815/I830M (on-board) support" CONFIG_AGP_I810
	bool $w.config.f 58 84 "  VIA chipset support" CONFIG_AGP_VIA
	bool $w.config.f 58 85 "  AMD Irongate, 761, and 762 support" CONFIG_AGP_AMD
	bool $w.config.f 58 86 "  AMD Opteron/Athlon64 on-CPU GART support" CONFIG_AGP_AMD_K8
	bool $w.config.f 58 87 "  Generic SiS support" CONFIG_AGP_SIS
	bool $w.config.f 58 88 "  ALI chipset support" CONFIG_AGP_ALI
	bool $w.config.f 58 89 "  Serverworks LE/HE support" CONFIG_AGP_SWORKS
	bool $w.config.f 58 90 "  ATI IGP chipset support" CONFIG_AGP_ATI
	submenu $w.config.f 58 91 "Direct Rendering Manager (XFree86 DRI support)" 65
	submenu $w.config.f 58 92 "PCMCIA character devices" 66



	focus $w
	update_active
	global winx; global winy
	set winx [expr [winfo x .]+30]; set winy [expr [winfo y .]+30]
	if {[winfo exists $w]} then {wm geometry $w +$winx+$winy}
	update idletasks
	if {[winfo exists $w]} then  {$w.config.canvas create window 0 0 -anchor nw -window $w.config.f

	$w.config.canvas configure \
		-width [expr [winfo reqwidth $w.config.f] + 1]\
		-scrollregion "-1 -1 [expr [winfo reqwidth $w.config.f] + 1] \
			 [expr [winfo reqheight $w.config.f] + 1]"

	set winy [expr [winfo reqh $w] - [winfo reqh $w.config.canvas]]
	set scry [expr [winfo screenh $w] / 2]
	set maxy [expr [winfo screenh $w] * 3 / 4]
	set canvtotal [expr [winfo reqh $w.config.f] + 2]
	if [expr $winy + $canvtotal < $maxy] {
		$w.config.canvas configure -height $canvtotal
	} else {
		$w.config.canvas configure -height [expr $scry - $winy]
		}
	}
	update idletasks
	if {[winfo exists $w]} then {
	wm maxsize $w [winfo width $w] [winfo screenheight $w]
	wm minsize $w [winfo width $w] 100

	wm deiconify $w
}
}

proc update_menu58 {} {
	global CONFIG_ARCH_INTEGRATOR
	global CONFIG_SERIAL_AMBA
	if {($CONFIG_ARCH_INTEGRATOR == 1)} then {
	configure_entry .menu58.config.f.x0 normal {n l y}} else {configure_entry .menu58.config.f.x0 disabled {y n l}}
	global CONFIG_SERIAL_AMBA_CONSOLE
	if {($CONFIG_ARCH_INTEGRATOR == 1) && ($CONFIG_SERIAL_AMBA == 1)} then {
	configure_entry .menu58.config.f.x1 normal {n l y}} else {configure_entry .menu58.config.f.x1 disabled {y n l}}
	global CONFIG_ARCH_KS8695
	global CONFIG_SERIAL_KS8695
	if {($CONFIG_ARCH_KS8695 == 1)} then {
	configure_entry .menu58.config.f.x2 normal {n l y}} else {configure_entry .menu58.config.f.x2 disabled {y n l}}
	global CONFIG_SERIAL_CONSOLE
	if {($CONFIG_ARCH_KS8695 == 1) && ($CONFIG_SERIAL_KS8695 == 1)} then {
	configure_entry .menu58.config.f.x3 normal {n l y}} else {configure_entry .menu58.config.f.x3 disabled {y n l}}
	global CONFIG_VT
	global CONFIG_VT_CONSOLE
	if {($CONFIG_VT == 1)} then {
	configure_entry .menu58.config.f.x7 normal {n l y}} else {configure_entry .menu58.config.f.x7 disabled {y n l}}
	global CONFIG_SERIAL
	global CONFIG_MODULES

	if {($CONFIG_MODULES == 1)} then {configure_entry .menu58.config.f.x8 normal {m}} else {configure_entry .menu58.config.f.x8 disabled {m}}
	if {($CONFIG_SERIAL == 1)} then {
	configure_entry .menu58.config.f.x9 normal {n l y}} else {configure_entry .menu58.config.f.x9 disabled {y n l}}
	global CONFIG_ARCH_ACORN
	global CONFIG_ATOMWIDE_SERIAL
	if {($CONFIG_SERIAL == 1) && ($CONFIG_ARCH_ACORN == 1)} then {
	configure_entry .menu58.config.f.x10 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu58.config.f.x10 normal {m}} else {configure_entry .menu58.config.f.x10 disabled {m}}; configure_entry .menu58.config.f.x10 normal {n l}} else {configure_entry .menu58.config.f.x10 disabled {y n m l}}
	global CONFIG_DUALSP_SERIAL
	if {($CONFIG_SERIAL == 1) && ($CONFIG_ARCH_ACORN == 1)} then {
	configure_entry .menu58.config.f.x11 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu58.config.f.x11 normal {m}} else {configure_entry .menu58.config.f.x11 disabled {m}}; configure_entry .menu58.config.f.x11 normal {n l}} else {configure_entry .menu58.config.f.x11 disabled {y n m l}}
	global CONFIG_SERIAL_EXTENDED
	if {($CONFIG_SERIAL == 1 || $CONFIG_SERIAL == 2 || $CONFIG_SERIAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SERIAL]];set CONFIG_SERIAL_EXTENDED [sync_bool $CONFIG_SERIAL_EXTENDED $tmpvar_dep 1];if {$tmpvar_dep != 1 && $tmpvar_dep != 2} then {configure_entry .menu58.config.f.x12 disabled {y};} else {configure_entry .menu58.config.f.x12 normal {y};}; configure_entry .menu58.config.f.x12 normal {n l}} else {configure_entry .menu58.config.f.x12 disabled {y n l}}
	global CONFIG_SERIAL_MANY_PORTS
	if {($CONFIG_SERIAL_EXTENDED == 1)} then {
	configure_entry .menu58.config.f.x13 normal {n l y}} else {configure_entry .menu58.config.f.x13 disabled {y n l}}
	global CONFIG_SERIAL_SHARE_IRQ
	if {($CONFIG_SERIAL_EXTENDED == 1)} then {
	configure_entry .menu58.config.f.x14 normal {n l y}} else {configure_entry .menu58.config.f.x14 disabled {y n l}}
	global CONFIG_SERIAL_DETECT_IRQ
	if {($CONFIG_SERIAL_EXTENDED == 1)} then {
	configure_entry .menu58.config.f.x15 normal {n l y}} else {configure_entry .menu58.config.f.x15 disabled {y n l}}
	global CONFIG_SERIAL_MULTIPORT
	if {($CONFIG_SERIAL_EXTENDED == 1)} then {
	configure_entry .menu58.config.f.x16 normal {n l y}} else {configure_entry .menu58.config.f.x16 disabled {y n l}}
	global CONFIG_HUB6
	if {($CONFIG_SERIAL_EXTENDED == 1)} then {
	configure_entry .menu58.config.f.x17 normal {n l y}} else {configure_entry .menu58.config.f.x17 disabled {y n l}}
	global CONFIG_SERIAL_NONSTANDARD
	global CONFIG_COMPUTONE
	if {($CONFIG_SERIAL_NONSTANDARD == 1)} then {
	configure_entry .menu58.config.f.x19 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu58.config.f.x19 normal {m}} else {configure_entry .menu58.config.f.x19 disabled {m}}; configure_entry .menu58.config.f.x19 normal {n l}} else {configure_entry .menu58.config.f.x19 disabled {y n m l}}
	global CONFIG_ROCKETPORT
	if {($CONFIG_SERIAL_NONSTANDARD == 1)} then {
	configure_entry .menu58.config.f.x20 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu58.config.f.x20 normal {m}} else {configure_entry .menu58.config.f.x20 disabled {m}}; configure_entry .menu58.config.f.x20 normal {n l}} else {configure_entry .menu58.config.f.x20 disabled {y n m l}}
	global CONFIG_CYCLADES
	if {($CONFIG_SERIAL_NONSTANDARD == 1)} then {
	configure_entry .menu58.config.f.x21 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu58.config.f.x21 normal {m}} else {configure_entry .menu58.config.f.x21 disabled {m}}; configure_entry .menu58.config.f.x21 normal {n l}} else {configure_entry .menu58.config.f.x21 disabled {y n m l}}
	global CONFIG_EXPERIMENTAL
	global CONFIG_CYZ_INTR
	if {($CONFIG_SERIAL_NONSTANDARD == 1) && ($CONFIG_EXPERIMENTAL == 1 && $CONFIG_CYCLADES != 0)} then {
	configure_entry .menu58.config.f.x22 normal {n l y}} else {configure_entry .menu58.config.f.x22 disabled {y n l}}
	global CONFIG_X86_64
	global CONFIG_DIGIEPCA
	if {($CONFIG_SERIAL_NONSTANDARD == 1) && ($CONFIG_X86_64 != 1)} then {
	configure_entry .menu58.config.f.x23 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu58.config.f.x23 normal {m}} else {configure_entry .menu58.config.f.x23 disabled {m}}; configure_entry .menu58.config.f.x23 normal {n l}} else {configure_entry .menu58.config.f.x23 disabled {y n m l}}
	global CONFIG_DIGI
	if {($CONFIG_SERIAL_NONSTANDARD == 1) && ($CONFIG_X86_64 != 1) && ($CONFIG_DIGIEPCA == 0)} then {
	configure_entry .menu58.config.f.x24 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu58.config.f.x24 normal {m}} else {configure_entry .menu58.config.f.x24 disabled {m}}; configure_entry .menu58.config.f.x24 normal {n l}} else {configure_entry .menu58.config.f.x24 disabled {y n m l}}
	global CONFIG_ISA
	global CONFIG_ESPSERIAL
	if {($CONFIG_SERIAL_NONSTANDARD == 1) && ($CONFIG_ISA == 1 || $CONFIG_ISA == 2 || $CONFIG_ISA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ISA]];set CONFIG_ESPSERIAL [sync_tristate $CONFIG_ESPSERIAL $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu58.config.f.x25 disabled {y}} else {configure_entry .menu58.config.f.x25 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu58.config.f.x25 disabled {m}} else {configure_entry .menu58.config.f.x25 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu58.config.f.x25 normal {m}} else {configure_entry .menu58.config.f.x25 disabled {m}}; configure_entry .menu58.config.f.x25 normal {n l}} else {configure_entry .menu58.config.f.x25 disabled {y n m l}}
	global CONFIG_MOXA_INTELLIO
	if {($CONFIG_SERIAL_NONSTANDARD == 1)} then {
	configure_entry .menu58.config.f.x26 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu58.config.f.x26 normal {m}} else {configure_entry .menu58.config.f.x26 disabled {m}}; configure_entry .menu58.config.f.x26 normal {n l}} else {configure_entry .menu58.config.f.x26 disabled {y n m l}}
	global CONFIG_MOXA_SMARTIO
	if {($CONFIG_SERIAL_NONSTANDARD == 1)} then {
	configure_entry .menu58.config.f.x27 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu58.config.f.x27 normal {m}} else {configure_entry .menu58.config.f.x27 disabled {m}}; configure_entry .menu58.config.f.x27 normal {n l}} else {configure_entry .menu58.config.f.x27 disabled {y n m l}}
	global CONFIG_ISI
	if {($CONFIG_SERIAL_NONSTANDARD == 1) && ($CONFIG_EXPERIMENTAL == 1)} then {
	global CONSTANT_M
	set tmpvar_dep [effective_dep [list $CONSTANT_M]];set CONFIG_ISI [sync_tristate $CONFIG_ISI $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu58.config.f.x28 disabled {y}} else {configure_entry .menu58.config.f.x28 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu58.config.f.x28 disabled {m}} else {configure_entry .menu58.config.f.x28 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu58.config.f.x28 normal {m}} else {configure_entry .menu58.config.f.x28 disabled {m}}; configure_entry .menu58.config.f.x28 normal {n l}} else {configure_entry .menu58.config.f.x28 disabled {y n m l}}
	global CONFIG_SYNCLINK
	if {($CONFIG_SERIAL_NONSTANDARD == 1)} then {
	configure_entry .menu58.config.f.x29 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu58.config.f.x29 normal {m}} else {configure_entry .menu58.config.f.x29 disabled {m}}; configure_entry .menu58.config.f.x29 normal {n l}} else {configure_entry .menu58.config.f.x29 disabled {y n m l}}
	global CONFIG_SYNCLINKMP
	if {($CONFIG_SERIAL_NONSTANDARD == 1)} then {
	configure_entry .menu58.config.f.x30 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu58.config.f.x30 normal {m}} else {configure_entry .menu58.config.f.x30 disabled {m}}; configure_entry .menu58.config.f.x30 normal {n l}} else {configure_entry .menu58.config.f.x30 disabled {y n m l}}
	global CONFIG_N_HDLC
	if {($CONFIG_SERIAL_NONSTANDARD == 1)} then {
	configure_entry .menu58.config.f.x31 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu58.config.f.x31 normal {m}} else {configure_entry .menu58.config.f.x31 disabled {m}}; configure_entry .menu58.config.f.x31 normal {n l}} else {configure_entry .menu58.config.f.x31 disabled {y n m l}}
	global CONFIG_RISCOM8
	if {($CONFIG_SERIAL_NONSTANDARD == 1)} then {
	configure_entry .menu58.config.f.x32 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu58.config.f.x32 normal {m}} else {configure_entry .menu58.config.f.x32 disabled {m}}; configure_entry .menu58.config.f.x32 normal {n l}} else {configure_entry .menu58.config.f.x32 disabled {y n m l}}
	global CONFIG_SPECIALIX
	if {($CONFIG_SERIAL_NONSTANDARD == 1) && ($CONFIG_X86_64 != 1)} then {
	configure_entry .menu58.config.f.x33 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu58.config.f.x33 normal {m}} else {configure_entry .menu58.config.f.x33 disabled {m}}; configure_entry .menu58.config.f.x33 normal {n l}} else {configure_entry .menu58.config.f.x33 disabled {y n m l}}
	global CONFIG_SPECIALIX_RTSCTS
	if {($CONFIG_SERIAL_NONSTANDARD == 1) && ($CONFIG_X86_64 != 1) && ($CONFIG_SPECIALIX != 0)} then {
	configure_entry .menu58.config.f.x34 normal {n l y}} else {configure_entry .menu58.config.f.x34 disabled {y n l}}
	global CONFIG_SX
	if {($CONFIG_SERIAL_NONSTANDARD == 1) && ($CONFIG_X86_64 != 1)} then {
	configure_entry .menu58.config.f.x35 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu58.config.f.x35 normal {m}} else {configure_entry .menu58.config.f.x35 disabled {m}}; configure_entry .menu58.config.f.x35 normal {n l}} else {configure_entry .menu58.config.f.x35 disabled {y n m l}}
	global CONFIG_RIO
	if {($CONFIG_SERIAL_NONSTANDARD == 1) && ($CONFIG_X86_64 != 1)} then {
	configure_entry .menu58.config.f.x36 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu58.config.f.x36 normal {m}} else {configure_entry .menu58.config.f.x36 disabled {m}}; configure_entry .menu58.config.f.x36 normal {n l}} else {configure_entry .menu58.config.f.x36 disabled {y n m l}}
	global CONFIG_RIO_OLDPCI
	if {($CONFIG_SERIAL_NONSTANDARD == 1) && ($CONFIG_X86_64 != 1) && ($CONFIG_RIO != 0)} then {
	configure_entry .menu58.config.f.x37 normal {n l y}} else {configure_entry .menu58.config.f.x37 disabled {y n l}}
	global CONFIG_STALDRV
	if {($CONFIG_SERIAL_NONSTANDARD == 1)} then {
	configure_entry .menu58.config.f.x38 normal {n l y}} else {configure_entry .menu58.config.f.x38 disabled {y n l}}
	global CONFIG_STALLION
	if {($CONFIG_SERIAL_NONSTANDARD == 1) && ($CONFIG_STALDRV == 1)} then {
	configure_entry .menu58.config.f.x39 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu58.config.f.x39 normal {m}} else {configure_entry .menu58.config.f.x39 disabled {m}}; configure_entry .menu58.config.f.x39 normal {n l}} else {configure_entry .menu58.config.f.x39 disabled {y n m l}}
	global CONFIG_ISTALLION
	if {($CONFIG_SERIAL_NONSTANDARD == 1) && ($CONFIG_STALDRV == 1)} then {
	configure_entry .menu58.config.f.x40 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu58.config.f.x40 normal {m}} else {configure_entry .menu58.config.f.x40 disabled {m}}; configure_entry .menu58.config.f.x40 normal {n l}} else {configure_entry .menu58.config.f.x40 disabled {y n m l}}
	global CONFIG_ZORRO
	global CONFIG_A2232
	if {($CONFIG_EXPERIMENTAL == 1 && $CONFIG_ZORRO == 1)} then {
	configure_entry .menu58.config.f.x41 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu58.config.f.x41 normal {m}} else {configure_entry .menu58.config.f.x41 disabled {m}}; configure_entry .menu58.config.f.x41 normal {n l}} else {configure_entry .menu58.config.f.x41 disabled {y n m l}}
	global CONFIG_FOOTBRIDGE
	global CONFIG_SERIAL_21285
	if {($CONFIG_FOOTBRIDGE == 1)} then {
	configure_entry .menu58.config.f.x42 normal {n l y}} else {configure_entry .menu58.config.f.x42 disabled {y n l}}
	global CONFIG_OBSOLETE
	global CONFIG_SERIAL_21285_OLD
	if {($CONFIG_FOOTBRIDGE == 1) && ($CONFIG_SERIAL_21285 == 1) && ($CONFIG_OBSOLETE == 1)} then {
	configure_entry .menu58.config.f.x43 normal {n l y}} else {configure_entry .menu58.config.f.x43 disabled {y n l}}
	global CONFIG_SERIAL_21285_CONSOLE
	if {($CONFIG_FOOTBRIDGE == 1) && ($CONFIG_SERIAL_21285 == 1)} then {
	configure_entry .menu58.config.f.x44 normal {n l y}} else {configure_entry .menu58.config.f.x44 disabled {y n l}}
	global CONFIG_UNIX98_PTYS
	global CONFIG_UNIX98_PTY_COUNT
	if {($CONFIG_UNIX98_PTYS == 1)} then {.menu58.config.f.x46.x configure -state normal -foreground [ cget .ref -foreground ]; .menu58.config.f.x46.l configure -state normal; } else {.menu58.config.f.x46.x configure -state disabled -foreground [ cget .ref -disabledforeground ]; .menu58.config.f.x46.l configure -state disabled}
	global CONFIG_PARPORT
	global CONFIG_PRINTER
	if {($CONFIG_PARPORT != 0) && ($CONFIG_PARPORT == 1 || $CONFIG_PARPORT == 2 || $CONFIG_PARPORT == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PARPORT]];set CONFIG_PRINTER [sync_tristate $CONFIG_PRINTER $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu58.config.f.x47 disabled {y}} else {configure_entry .menu58.config.f.x47 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu58.config.f.x47 disabled {m}} else {configure_entry .menu58.config.f.x47 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu58.config.f.x47 normal {m}} else {configure_entry .menu58.config.f.x47 disabled {m}}; configure_entry .menu58.config.f.x47 normal {n l}} else {configure_entry .menu58.config.f.x47 disabled {y n m l}}
	global CONFIG_LP_CONSOLE
	if {($CONFIG_PARPORT != 0) && ($CONFIG_PRINTER != 0)} then {
	configure_entry .menu58.config.f.x48 normal {n l y}} else {configure_entry .menu58.config.f.x48 disabled {y n l}}
	global CONFIG_PPDEV
	if {($CONFIG_PARPORT != 0) && ($CONFIG_PARPORT == 1 || $CONFIG_PARPORT == 2 || $CONFIG_PARPORT == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PARPORT]];set CONFIG_PPDEV [sync_tristate $CONFIG_PPDEV $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu58.config.f.x49 disabled {y}} else {configure_entry .menu58.config.f.x49 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu58.config.f.x49 disabled {m}} else {configure_entry .menu58.config.f.x49 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu58.config.f.x49 normal {m}} else {configure_entry .menu58.config.f.x49 disabled {m}}; configure_entry .menu58.config.f.x49 normal {n l}} else {configure_entry .menu58.config.f.x49 disabled {y n m l}}
	global CONFIG_TIPAR
	if {($CONFIG_PARPORT != 0) && ($CONFIG_PARPORT == 1 || $CONFIG_PARPORT == 2 || $CONFIG_PARPORT == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PARPORT]];set CONFIG_TIPAR [sync_tristate $CONFIG_TIPAR $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu58.config.f.x50 disabled {y}} else {configure_entry .menu58.config.f.x50 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu58.config.f.x50 disabled {m}} else {configure_entry .menu58.config.f.x50 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu58.config.f.x50 normal {m}} else {configure_entry .menu58.config.f.x50 disabled {m}}; configure_entry .menu58.config.f.x50 normal {n l}} else {configure_entry .menu58.config.f.x50 disabled {y n m l}}
	global CONFIG_QIC02_TAPE

	if {($CONFIG_MODULES == 1)} then {configure_entry .menu58.config.f.x54 normal {m}} else {configure_entry .menu58.config.f.x54 disabled {m}}
	global CONFIG_QIC02_DYNCONF
	if {($CONFIG_QIC02_TAPE != 0)} then {
	configure_entry .menu58.config.f.x55 normal {n l y}} else {configure_entry .menu58.config.f.x55 disabled {y n l}}
	if {($CONFIG_QIC02_TAPE != 0) && ($CONFIG_QIC02_DYNCONF != 1)} then {configure_entry .menu58.config.f.x56 normal {m}} else {configure_entry .menu58.config.f.x56 disabled {m}}
	if {($CONFIG_QIC02_TAPE != 0) && ($CONFIG_QIC02_DYNCONF == 1)} then {configure_entry .menu58.config.f.x57 normal {m}} else {configure_entry .menu58.config.f.x57 disabled {m}}
	if {($CONFIG_QIC02_TAPE != 0) && ($CONFIG_QIC02_DYNCONF == 1)} then {configure_entry .menu58.config.f.x58 normal {m}} else {configure_entry .menu58.config.f.x58 disabled {m}}
	if {($CONFIG_QIC02_TAPE != 0) && ($CONFIG_QIC02_DYNCONF == 1)} then {configure_entry .menu58.config.f.x59 normal {m}} else {configure_entry .menu58.config.f.x59 disabled {m}}
	global CONFIG_IPMI_HANDLER

	if {($CONFIG_MODULES == 1)} then {configure_entry .menu58.config.f.x60 normal {m}} else {configure_entry .menu58.config.f.x60 disabled {m}}
	global CONFIG_IPMI_PANIC_EVENT
	if {($CONFIG_IPMI_HANDLER == 1 || $CONFIG_IPMI_HANDLER == 2 || $CONFIG_IPMI_HANDLER == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IPMI_HANDLER]];set CONFIG_IPMI_PANIC_EVENT [sync_bool $CONFIG_IPMI_PANIC_EVENT $tmpvar_dep 1];if {$tmpvar_dep != 1 && $tmpvar_dep != 2} then {configure_entry .menu58.config.f.x61 disabled {y};} else {configure_entry .menu58.config.f.x61 normal {y};}; configure_entry .menu58.config.f.x61 normal {n l}} else {configure_entry .menu58.config.f.x61 disabled {y n l}}
	global CONFIG_IPMI_DEVICE_INTERFACE
	if {($CONFIG_IPMI_HANDLER == 1 || $CONFIG_IPMI_HANDLER == 2 || $CONFIG_IPMI_HANDLER == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IPMI_HANDLER]];set CONFIG_IPMI_DEVICE_INTERFACE [sync_tristate $CONFIG_IPMI_DEVICE_INTERFACE $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu58.config.f.x62 disabled {y}} else {configure_entry .menu58.config.f.x62 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu58.config.f.x62 disabled {m}} else {configure_entry .menu58.config.f.x62 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu58.config.f.x62 normal {m}} else {configure_entry .menu58.config.f.x62 disabled {m}}; configure_entry .menu58.config.f.x62 normal {n l}} else {configure_entry .menu58.config.f.x62 disabled {y n m l}}
	global CONFIG_IPMI_KCS
	if {($CONFIG_IPMI_HANDLER == 1 || $CONFIG_IPMI_HANDLER == 2 || $CONFIG_IPMI_HANDLER == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IPMI_HANDLER]];set CONFIG_IPMI_KCS [sync_tristate $CONFIG_IPMI_KCS $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu58.config.f.x63 disabled {y}} else {configure_entry .menu58.config.f.x63 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu58.config.f.x63 disabled {m}} else {configure_entry .menu58.config.f.x63 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu58.config.f.x63 normal {m}} else {configure_entry .menu58.config.f.x63 disabled {m}}; configure_entry .menu58.config.f.x63 normal {n l}} else {configure_entry .menu58.config.f.x63 disabled {y n m l}}
	global CONFIG_IPMI_WATCHDOG
	if {($CONFIG_IPMI_HANDLER == 1 || $CONFIG_IPMI_HANDLER == 2 || $CONFIG_IPMI_HANDLER == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IPMI_HANDLER]];set CONFIG_IPMI_WATCHDOG [sync_tristate $CONFIG_IPMI_WATCHDOG $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu58.config.f.x64 disabled {y}} else {configure_entry .menu58.config.f.x64 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu58.config.f.x64 disabled {m}} else {configure_entry .menu58.config.f.x64 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu58.config.f.x64 normal {m}} else {configure_entry .menu58.config.f.x64 disabled {m}}; configure_entry .menu58.config.f.x64 normal {n l}} else {configure_entry .menu58.config.f.x64 disabled {y n m l}}
	global CONFIG_ARCH_NETWINDER
	global CONFIG_DS1620
	if {($CONFIG_ARCH_NETWINDER == 1)} then {
	configure_entry .menu58.config.f.x67 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu58.config.f.x67 normal {m}} else {configure_entry .menu58.config.f.x67 disabled {m}}; configure_entry .menu58.config.f.x67 normal {n l}} else {configure_entry .menu58.config.f.x67 disabled {y n m l}}
	global CONFIG_NWBUTTON
	if {($CONFIG_ARCH_NETWINDER == 1)} then {
	configure_entry .menu58.config.f.x68 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu58.config.f.x68 normal {m}} else {configure_entry .menu58.config.f.x68 disabled {m}}; configure_entry .menu58.config.f.x68 normal {n l}} else {configure_entry .menu58.config.f.x68 disabled {y n m l}}
	global CONFIG_NWBUTTON_REBOOT
	if {($CONFIG_ARCH_NETWINDER == 1) && ($CONFIG_NWBUTTON != 0)} then {
	configure_entry .menu58.config.f.x69 normal {n l y}} else {configure_entry .menu58.config.f.x69 disabled {y n l}}
	global CONFIG_NWFLASH
	if {($CONFIG_ARCH_NETWINDER == 1)} then {
	configure_entry .menu58.config.f.x70 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu58.config.f.x70 normal {m}} else {configure_entry .menu58.config.f.x70 disabled {m}}; configure_entry .menu58.config.f.x70 normal {n l}} else {configure_entry .menu58.config.f.x70 disabled {y n m l}}
	global CONFIG_SCx200
	global CONFIG_SCx200_GPIO
	if {($CONFIG_SCx200 == 1 || $CONFIG_SCx200 == 2 || $CONFIG_SCx200 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCx200]];set CONFIG_SCx200_GPIO [sync_tristate $CONFIG_SCx200_GPIO $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu58.config.f.x71 disabled {y}} else {configure_entry .menu58.config.f.x71 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu58.config.f.x71 disabled {m}} else {configure_entry .menu58.config.f.x71 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu58.config.f.x71 normal {m}} else {configure_entry .menu58.config.f.x71 disabled {m}}; configure_entry .menu58.config.f.x71 normal {n l}} else {configure_entry .menu58.config.f.x71 disabled {y n m l}}
	global CONFIG_PCI
	global CONFIG_AMD_PM768
	if {($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PCI]];set CONFIG_AMD_PM768 [sync_tristate $CONFIG_AMD_PM768 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu58.config.f.x72 disabled {y}} else {configure_entry .menu58.config.f.x72 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu58.config.f.x72 disabled {m}} else {configure_entry .menu58.config.f.x72 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu58.config.f.x72 normal {m}} else {configure_entry .menu58.config.f.x72 disabled {m}}; configure_entry .menu58.config.f.x72 normal {n l}} else {configure_entry .menu58.config.f.x72 disabled {y n m l}}
	global CONFIG_NVRAM

	if {($CONFIG_MODULES == 1)} then {configure_entry .menu58.config.f.x73 normal {m}} else {configure_entry .menu58.config.f.x73 disabled {m}}
	global CONFIG_RTC

	if {($CONFIG_MODULES == 1)} then {configure_entry .menu58.config.f.x74 normal {m}} else {configure_entry .menu58.config.f.x74 disabled {m}}
	global CONFIG_ALPHA_BOOK1
	global CONFIG_H8
	if {($CONFIG_OBSOLETE == 1 && $CONFIG_ALPHA_BOOK1 == 1)} then {
	configure_entry .menu58.config.f.x75 normal {n l y}} else {configure_entry .menu58.config.f.x75 disabled {y n l}}
	global CONFIG_DTLK

	if {($CONFIG_MODULES == 1)} then {configure_entry .menu58.config.f.x76 normal {m}} else {configure_entry .menu58.config.f.x76 disabled {m}}
	global CONFIG_R3964

	if {($CONFIG_MODULES == 1)} then {configure_entry .menu58.config.f.x77 normal {m}} else {configure_entry .menu58.config.f.x77 disabled {m}}
	global CONFIG_APPLICOM

	if {($CONFIG_MODULES == 1)} then {configure_entry .menu58.config.f.x78 normal {m}} else {configure_entry .menu58.config.f.x78 disabled {m}}
	global CONFIG_X86
	global CONFIG_SONYPI
	if {($CONFIG_EXPERIMENTAL == 1 && $CONFIG_X86 == 1 && $CONFIG_X86_64 != 1) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PCI]];set CONFIG_SONYPI [sync_tristate $CONFIG_SONYPI $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu58.config.f.x79 disabled {y}} else {configure_entry .menu58.config.f.x79 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu58.config.f.x79 disabled {m}} else {configure_entry .menu58.config.f.x79 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu58.config.f.x79 normal {m}} else {configure_entry .menu58.config.f.x79 disabled {m}}; configure_entry .menu58.config.f.x79 normal {n l}} else {configure_entry .menu58.config.f.x79 disabled {y n m l}}
	global CONFIG_AGP

	if {($CONFIG_MODULES == 1)} then {configure_entry .menu58.config.f.x81 normal {m}} else {configure_entry .menu58.config.f.x81 disabled {m}}
	global CONFIG_AGP_INTEL
	if {($CONFIG_AGP != 0)} then {
	configure_entry .menu58.config.f.x82 normal {n l y}} else {configure_entry .menu58.config.f.x82 disabled {y n l}}
	global CONFIG_AGP_I810
	if {($CONFIG_AGP != 0)} then {
	configure_entry .menu58.config.f.x83 normal {n l y}} else {configure_entry .menu58.config.f.x83 disabled {y n l}}
	global CONFIG_AGP_VIA
	if {($CONFIG_AGP != 0)} then {
	configure_entry .menu58.config.f.x84 normal {n l y}} else {configure_entry .menu58.config.f.x84 disabled {y n l}}
	global CONFIG_AGP_AMD
	if {($CONFIG_AGP != 0)} then {
	configure_entry .menu58.config.f.x85 normal {n l y}} else {configure_entry .menu58.config.f.x85 disabled {y n l}}
	global CONFIG_GART_IOMMU
	global CONFIG_AGP_AMD_K8
	if {($CONFIG_AGP != 0) && ($CONFIG_GART_IOMMU != 1)} then {
	configure_entry .menu58.config.f.x86 normal {n l y}} else {configure_entry .menu58.config.f.x86 disabled {y n l}}
	global CONFIG_AGP_SIS
	if {($CONFIG_AGP != 0)} then {
	configure_entry .menu58.config.f.x87 normal {n l y}} else {configure_entry .menu58.config.f.x87 disabled {y n l}}
	global CONFIG_AGP_ALI
	if {($CONFIG_AGP != 0)} then {
	configure_entry .menu58.config.f.x88 normal {n l y}} else {configure_entry .menu58.config.f.x88 disabled {y n l}}
	global CONFIG_AGP_SWORKS
	if {($CONFIG_AGP != 0)} then {
	configure_entry .menu58.config.f.x89 normal {n l y}} else {configure_entry .menu58.config.f.x89 disabled {y n l}}
	global CONFIG_AGP_ATI
	if {($CONFIG_AGP != 0)} then {
	configure_entry .menu58.config.f.x90 normal {n l y}} else {configure_entry .menu58.config.f.x90 disabled {y n l}}
	global CONFIG_HOTPLUG
	global CONFIG_PCMCIA
	if {($CONFIG_HOTPLUG == 1 && $CONFIG_PCMCIA != 0)} then {configure_entry .menu58.config.f.x92 normal {m}} else {configure_entry .menu58.config.f.x92 disabled {m}}
}


proc update_define_menu58 {} {
	update_define_mainmenu
	global CONFIG_MODULES
	global CONFIG_SERIAL_INTEGRATOR
	global CONFIG_SERIAL
	global CONFIG_ATOMWIDE_SERIAL
	global CONFIG_DUALSP_SERIAL
	global CONFIG_COMPUTONE
	global CONFIG_ROCKETPORT
	global CONFIG_CYCLADES
	global CONFIG_DIGIEPCA
	global CONFIG_DIGI
	global CONFIG_MOXA_INTELLIO
	global CONFIG_MOXA_SMARTIO
	global CONFIG_SYNCLINK
	global CONFIG_SYNCLINKMP
	global CONFIG_N_HDLC
	global CONFIG_RISCOM8
	global CONFIG_SPECIALIX
	global CONFIG_SX
	global CONFIG_RIO
	global CONFIG_STALLION
	global CONFIG_ISTALLION
	global CONFIG_A2232
	global CONFIG_QIC02_TAPE
	global CONFIG_IPMI_HANDLER
	global CONFIG_DS1620
	global CONFIG_NWBUTTON
	global CONFIG_NWFLASH
	global CONFIG_NVRAM
	global CONFIG_RTC
	global CONFIG_DTLK
	global CONFIG_R3964
	global CONFIG_APPLICOM
	global CONFIG_AGP
	global CONFIG_SERIAL_AMBA
set CONFIG_SERIAL_AMBA [expr $CONFIG_SERIAL_AMBA|16]
	global CONFIG_SERIAL_AMBA_CONSOLE
set CONFIG_SERIAL_AMBA_CONSOLE [expr $CONFIG_SERIAL_AMBA_CONSOLE|16]
	global CONFIG_SERIAL_KS8695
set CONFIG_SERIAL_KS8695 [expr $CONFIG_SERIAL_KS8695|16]
	global CONFIG_SERIAL_CONSOLE
set CONFIG_SERIAL_CONSOLE [expr $CONFIG_SERIAL_CONSOLE|16]
	global CONFIG_VT_CONSOLE
set CONFIG_VT_CONSOLE [expr $CONFIG_VT_CONSOLE|16]
set CONFIG_SERIAL_CONSOLE [expr $CONFIG_SERIAL_CONSOLE|16]
set CONFIG_ATOMWIDE_SERIAL [expr $CONFIG_ATOMWIDE_SERIAL|16]
set CONFIG_DUALSP_SERIAL [expr $CONFIG_DUALSP_SERIAL|16]
	global CONFIG_SERIAL_MANY_PORTS
set CONFIG_SERIAL_MANY_PORTS [expr $CONFIG_SERIAL_MANY_PORTS|16]
	global CONFIG_SERIAL_SHARE_IRQ
set CONFIG_SERIAL_SHARE_IRQ [expr $CONFIG_SERIAL_SHARE_IRQ|16]
	global CONFIG_SERIAL_DETECT_IRQ
set CONFIG_SERIAL_DETECT_IRQ [expr $CONFIG_SERIAL_DETECT_IRQ|16]
	global CONFIG_SERIAL_MULTIPORT
set CONFIG_SERIAL_MULTIPORT [expr $CONFIG_SERIAL_MULTIPORT|16]
	global CONFIG_HUB6
set CONFIG_HUB6 [expr $CONFIG_HUB6|16]
set CONFIG_COMPUTONE [expr $CONFIG_COMPUTONE|16]
set CONFIG_ROCKETPORT [expr $CONFIG_ROCKETPORT|16]
set CONFIG_CYCLADES [expr $CONFIG_CYCLADES|16]
	global CONFIG_CYZ_INTR
set CONFIG_CYZ_INTR [expr $CONFIG_CYZ_INTR|16]
set CONFIG_DIGIEPCA [expr $CONFIG_DIGIEPCA|16]
set CONFIG_DIGI [expr $CONFIG_DIGI|16]
set CONFIG_MOXA_INTELLIO [expr $CONFIG_MOXA_INTELLIO|16]
set CONFIG_MOXA_SMARTIO [expr $CONFIG_MOXA_SMARTIO|16]
set CONFIG_SYNCLINK [expr $CONFIG_SYNCLINK|16]
set CONFIG_SYNCLINKMP [expr $CONFIG_SYNCLINKMP|16]
set CONFIG_N_HDLC [expr $CONFIG_N_HDLC|16]
set CONFIG_RISCOM8 [expr $CONFIG_RISCOM8|16]
set CONFIG_SPECIALIX [expr $CONFIG_SPECIALIX|16]
	global CONFIG_SPECIALIX_RTSCTS
set CONFIG_SPECIALIX_RTSCTS [expr $CONFIG_SPECIALIX_RTSCTS|16]
set CONFIG_SX [expr $CONFIG_SX|16]
set CONFIG_RIO [expr $CONFIG_RIO|16]
	global CONFIG_RIO_OLDPCI
set CONFIG_RIO_OLDPCI [expr $CONFIG_RIO_OLDPCI|16]
	global CONFIG_STALDRV
set CONFIG_STALDRV [expr $CONFIG_STALDRV|16]
set CONFIG_STALLION [expr $CONFIG_STALLION|16]
set CONFIG_ISTALLION [expr $CONFIG_ISTALLION|16]
set CONFIG_A2232 [expr $CONFIG_A2232|16]
	global CONFIG_SERIAL_21285
set CONFIG_SERIAL_21285 [expr $CONFIG_SERIAL_21285|16]
	global CONFIG_SERIAL_21285_OLD
set CONFIG_SERIAL_21285_OLD [expr $CONFIG_SERIAL_21285_OLD|16]
	global CONFIG_SERIAL_21285_CONSOLE
set CONFIG_SERIAL_21285_CONSOLE [expr $CONFIG_SERIAL_21285_CONSOLE|16]
	global CONFIG_LP_CONSOLE
set CONFIG_LP_CONSOLE [expr $CONFIG_LP_CONSOLE|16]
	global CONFIG_QIC02_DYNCONF
set CONFIG_QIC02_DYNCONF [expr $CONFIG_QIC02_DYNCONF|16]
set CONFIG_DS1620 [expr $CONFIG_DS1620|16]
set CONFIG_NWBUTTON [expr $CONFIG_NWBUTTON|16]
	global CONFIG_NWBUTTON_REBOOT
set CONFIG_NWBUTTON_REBOOT [expr $CONFIG_NWBUTTON_REBOOT|16]
set CONFIG_NWFLASH [expr $CONFIG_NWFLASH|16]
	global CONFIG_H8
set CONFIG_H8 [expr $CONFIG_H8|16]
	global CONFIG_AGP_INTEL
set CONFIG_AGP_INTEL [expr $CONFIG_AGP_INTEL|16]
	global CONFIG_AGP_I810
set CONFIG_AGP_I810 [expr $CONFIG_AGP_I810|16]
	global CONFIG_AGP_VIA
set CONFIG_AGP_VIA [expr $CONFIG_AGP_VIA|16]
	global CONFIG_AGP_AMD
set CONFIG_AGP_AMD [expr $CONFIG_AGP_AMD|16]
	global CONFIG_AGP_AMD_K8
set CONFIG_AGP_AMD_K8 [expr $CONFIG_AGP_AMD_K8|16]
	global CONFIG_AGP_SIS
set CONFIG_AGP_SIS [expr $CONFIG_AGP_SIS|16]
	global CONFIG_AGP_ALI
set CONFIG_AGP_ALI [expr $CONFIG_AGP_ALI|16]
	global CONFIG_AGP_SWORKS
set CONFIG_AGP_SWORKS [expr $CONFIG_AGP_SWORKS|16]
	global CONFIG_AGP_ATI
set CONFIG_AGP_ATI [expr $CONFIG_AGP_ATI|16]
	global CONFIG_ARCH_INTEGRATOR
	if {($CONFIG_ARCH_INTEGRATOR == 1)} then {
	set CONFIG_SERIAL_AMBA [expr $CONFIG_SERIAL_AMBA&15]}
	if {($CONFIG_ARCH_INTEGRATOR == 1) && ($CONFIG_SERIAL_AMBA == 1)} then {	global CONSTANT_Y
set CONFIG_SERIAL_INTEGRATOR $CONSTANT_Y }
	if {($CONFIG_ARCH_INTEGRATOR == 1) && ($CONFIG_SERIAL_AMBA == 1)} then {
	set CONFIG_SERIAL_AMBA_CONSOLE [expr $CONFIG_SERIAL_AMBA_CONSOLE&15]}
	global CONFIG_ARCH_KS8695
	if {($CONFIG_ARCH_KS8695 == 1)} then {
	set CONFIG_SERIAL_KS8695 [expr $CONFIG_SERIAL_KS8695&15]}
	if {($CONFIG_ARCH_KS8695 == 1) && ($CONFIG_SERIAL_KS8695 == 1)} then {
	set CONFIG_SERIAL_CONSOLE [expr $CONFIG_SERIAL_CONSOLE&15]}
	global CONFIG_VT
	if {($CONFIG_VT == 1)} then {
	set CONFIG_VT_CONSOLE [expr $CONFIG_VT_CONSOLE&15]}

	if {($CONFIG_MODULES == 0)} then {if {($CONFIG_SERIAL == 2)} then {set CONFIG_SERIAL 1}}
	if {($CONFIG_SERIAL == 1)} then {
	set CONFIG_SERIAL_CONSOLE [expr $CONFIG_SERIAL_CONSOLE&15]}
	global CONFIG_ARCH_ACORN
	if {($CONFIG_SERIAL == 1) && ($CONFIG_ARCH_ACORN == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_ATOMWIDE_SERIAL == 2)} then {set CONFIG_ATOMWIDE_SERIAL 1}; set CONFIG_ATOMWIDE_SERIAL [expr $CONFIG_ATOMWIDE_SERIAL&15]}
	if {($CONFIG_SERIAL == 1) && ($CONFIG_ARCH_ACORN == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_DUALSP_SERIAL == 2)} then {set CONFIG_DUALSP_SERIAL 1}; set CONFIG_DUALSP_SERIAL [expr $CONFIG_DUALSP_SERIAL&15]}
	global CONFIG_SERIAL_EXTENDED
	if {($CONFIG_SERIAL == 1 || $CONFIG_SERIAL == 2 || $CONFIG_SERIAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SERIAL]];set CONFIG_SERIAL_EXTENDED [sync_bool $CONFIG_SERIAL_EXTENDED $tmpvar_dep 1];set CONFIG_SERIAL_EXTENDED [expr $CONFIG_SERIAL_EXTENDED&15]}
	if {($CONFIG_SERIAL_EXTENDED == 1)} then {
	set CONFIG_SERIAL_MANY_PORTS [expr $CONFIG_SERIAL_MANY_PORTS&15]}
	if {($CONFIG_SERIAL_EXTENDED == 1)} then {
	set CONFIG_SERIAL_SHARE_IRQ [expr $CONFIG_SERIAL_SHARE_IRQ&15]}
	if {($CONFIG_SERIAL_EXTENDED == 1)} then {
	set CONFIG_SERIAL_DETECT_IRQ [expr $CONFIG_SERIAL_DETECT_IRQ&15]}
	if {($CONFIG_SERIAL_EXTENDED == 1)} then {
	set CONFIG_SERIAL_MULTIPORT [expr $CONFIG_SERIAL_MULTIPORT&15]}
	if {($CONFIG_SERIAL_EXTENDED == 1)} then {
	set CONFIG_HUB6 [expr $CONFIG_HUB6&15]}
	global CONFIG_SERIAL_NONSTANDARD
	if {($CONFIG_SERIAL_NONSTANDARD == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_COMPUTONE == 2)} then {set CONFIG_COMPUTONE 1}; set CONFIG_COMPUTONE [expr $CONFIG_COMPUTONE&15]}
	if {($CONFIG_SERIAL_NONSTANDARD == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_ROCKETPORT == 2)} then {set CONFIG_ROCKETPORT 1}; set CONFIG_ROCKETPORT [expr $CONFIG_ROCKETPORT&15]}
	if {($CONFIG_SERIAL_NONSTANDARD == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_CYCLADES == 2)} then {set CONFIG_CYCLADES 1}; set CONFIG_CYCLADES [expr $CONFIG_CYCLADES&15]}
	global CONFIG_EXPERIMENTAL
	if {($CONFIG_SERIAL_NONSTANDARD == 1) && ($CONFIG_EXPERIMENTAL == 1 && $CONFIG_CYCLADES != 0)} then {
	set CONFIG_CYZ_INTR [expr $CONFIG_CYZ_INTR&15]}
	global CONFIG_X86_64
	if {($CONFIG_SERIAL_NONSTANDARD == 1) && ($CONFIG_X86_64 != 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_DIGIEPCA == 2)} then {set CONFIG_DIGIEPCA 1}; set CONFIG_DIGIEPCA [expr $CONFIG_DIGIEPCA&15]}
	if {($CONFIG_SERIAL_NONSTANDARD == 1) && ($CONFIG_X86_64 != 1) && ($CONFIG_DIGIEPCA == 0)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_DIGI == 2)} then {set CONFIG_DIGI 1}; set CONFIG_DIGI [expr $CONFIG_DIGI&15]}
	global CONFIG_ISA
	global CONFIG_ESPSERIAL
	if {($CONFIG_SERIAL_NONSTANDARD == 1) && ($CONFIG_ISA == 1 || $CONFIG_ISA == 2 || $CONFIG_ISA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ISA]]; set CONFIG_ESPSERIAL [sync_tristate $CONFIG_ESPSERIAL $tmpvar_dep]; set CONFIG_ESPSERIAL [expr $CONFIG_ESPSERIAL&15]}
	if {($CONFIG_SERIAL_NONSTANDARD == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_MOXA_INTELLIO == 2)} then {set CONFIG_MOXA_INTELLIO 1}; set CONFIG_MOXA_INTELLIO [expr $CONFIG_MOXA_INTELLIO&15]}
	if {($CONFIG_SERIAL_NONSTANDARD == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_MOXA_SMARTIO == 2)} then {set CONFIG_MOXA_SMARTIO 1}; set CONFIG_MOXA_SMARTIO [expr $CONFIG_MOXA_SMARTIO&15]}
	global CONFIG_ISI
	if {($CONFIG_SERIAL_NONSTANDARD == 1) && ($CONFIG_EXPERIMENTAL == 1)} then {
	global CONSTANT_M
	set tmpvar_dep [effective_dep [list $CONSTANT_M]]; set CONFIG_ISI [sync_tristate $CONFIG_ISI $tmpvar_dep]; set CONFIG_ISI [expr $CONFIG_ISI&15]}
	if {($CONFIG_SERIAL_NONSTANDARD == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_SYNCLINK == 2)} then {set CONFIG_SYNCLINK 1}; set CONFIG_SYNCLINK [expr $CONFIG_SYNCLINK&15]}
	if {($CONFIG_SERIAL_NONSTANDARD == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_SYNCLINKMP == 2)} then {set CONFIG_SYNCLINKMP 1}; set CONFIG_SYNCLINKMP [expr $CONFIG_SYNCLINKMP&15]}
	if {($CONFIG_SERIAL_NONSTANDARD == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_N_HDLC == 2)} then {set CONFIG_N_HDLC 1}; set CONFIG_N_HDLC [expr $CONFIG_N_HDLC&15]}
	if {($CONFIG_SERIAL_NONSTANDARD == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_RISCOM8 == 2)} then {set CONFIG_RISCOM8 1}; set CONFIG_RISCOM8 [expr $CONFIG_RISCOM8&15]}
	if {($CONFIG_SERIAL_NONSTANDARD == 1) && ($CONFIG_X86_64 != 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_SPECIALIX == 2)} then {set CONFIG_SPECIALIX 1}; set CONFIG_SPECIALIX [expr $CONFIG_SPECIALIX&15]}
	if {($CONFIG_SERIAL_NONSTANDARD == 1) && ($CONFIG_X86_64 != 1) && ($CONFIG_SPECIALIX != 0)} then {
	set CONFIG_SPECIALIX_RTSCTS [expr $CONFIG_SPECIALIX_RTSCTS&15]}
	if {($CONFIG_SERIAL_NONSTANDARD == 1) && ($CONFIG_X86_64 != 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_SX == 2)} then {set CONFIG_SX 1}; set CONFIG_SX [expr $CONFIG_SX&15]}
	if {($CONFIG_SERIAL_NONSTANDARD == 1) && ($CONFIG_X86_64 != 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_RIO == 2)} then {set CONFIG_RIO 1}; set CONFIG_RIO [expr $CONFIG_RIO&15]}
	if {($CONFIG_SERIAL_NONSTANDARD == 1) && ($CONFIG_X86_64 != 1) && ($CONFIG_RIO != 0)} then {
	set CONFIG_RIO_OLDPCI [expr $CONFIG_RIO_OLDPCI&15]}
	if {($CONFIG_SERIAL_NONSTANDARD == 1)} then {
	set CONFIG_STALDRV [expr $CONFIG_STALDRV&15]}
	if {($CONFIG_SERIAL_NONSTANDARD == 1) && ($CONFIG_STALDRV == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_STALLION == 2)} then {set CONFIG_STALLION 1}; set CONFIG_STALLION [expr $CONFIG_STALLION&15]}
	if {($CONFIG_SERIAL_NONSTANDARD == 1) && ($CONFIG_STALDRV == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_ISTALLION == 2)} then {set CONFIG_ISTALLION 1}; set CONFIG_ISTALLION [expr $CONFIG_ISTALLION&15]}
	global CONFIG_ZORRO
	if {($CONFIG_EXPERIMENTAL == 1 && $CONFIG_ZORRO == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_A2232 == 2)} then {set CONFIG_A2232 1}; set CONFIG_A2232 [expr $CONFIG_A2232&15]}
	global CONFIG_FOOTBRIDGE
	if {($CONFIG_FOOTBRIDGE == 1)} then {
	set CONFIG_SERIAL_21285 [expr $CONFIG_SERIAL_21285&15]}
	global CONFIG_OBSOLETE
	if {($CONFIG_FOOTBRIDGE == 1) && ($CONFIG_SERIAL_21285 == 1) && ($CONFIG_OBSOLETE == 1)} then {
	set CONFIG_SERIAL_21285_OLD [expr $CONFIG_SERIAL_21285_OLD&15]}
	if {($CONFIG_FOOTBRIDGE == 1) && ($CONFIG_SERIAL_21285 == 1)} then {
	set CONFIG_SERIAL_21285_CONSOLE [expr $CONFIG_SERIAL_21285_CONSOLE&15]}
	global CONFIG_UNIX98_PTYS
	global CONFIG_UNIX98_PTY_COUNT
	if {($CONFIG_UNIX98_PTYS == 1)} then {validate_int CONFIG_UNIX98_PTY_COUNT "$CONFIG_UNIX98_PTY_COUNT" 256}
	global CONFIG_PARPORT
	global CONFIG_PRINTER
	if {($CONFIG_PARPORT != 0) && ($CONFIG_PARPORT == 1 || $CONFIG_PARPORT == 2 || $CONFIG_PARPORT == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PARPORT]]; set CONFIG_PRINTER [sync_tristate $CONFIG_PRINTER $tmpvar_dep]; set CONFIG_PRINTER [expr $CONFIG_PRINTER&15]}
	if {($CONFIG_PARPORT != 0) && ($CONFIG_PRINTER != 0)} then {
	set CONFIG_LP_CONSOLE [expr $CONFIG_LP_CONSOLE&15]}
	global CONFIG_PPDEV
	if {($CONFIG_PARPORT != 0) && ($CONFIG_PARPORT == 1 || $CONFIG_PARPORT == 2 || $CONFIG_PARPORT == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PARPORT]]; set CONFIG_PPDEV [sync_tristate $CONFIG_PPDEV $tmpvar_dep]; set CONFIG_PPDEV [expr $CONFIG_PPDEV&15]}
	global CONFIG_TIPAR
	if {($CONFIG_PARPORT != 0) && ($CONFIG_PARPORT == 1 || $CONFIG_PARPORT == 2 || $CONFIG_PARPORT == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PARPORT]]; set CONFIG_TIPAR [sync_tristate $CONFIG_TIPAR $tmpvar_dep]; set CONFIG_TIPAR [expr $CONFIG_TIPAR&15]}

	if {($CONFIG_MODULES == 0)} then {if {($CONFIG_QIC02_TAPE == 2)} then {set CONFIG_QIC02_TAPE 1}}
	if {($CONFIG_QIC02_TAPE != 0)} then {
	set CONFIG_QIC02_DYNCONF [expr $CONFIG_QIC02_DYNCONF&15]}

	if {($CONFIG_MODULES == 0)} then {if {($CONFIG_IPMI_HANDLER == 2)} then {set CONFIG_IPMI_HANDLER 1}}
	global CONFIG_IPMI_PANIC_EVENT
	if {($CONFIG_IPMI_HANDLER == 1 || $CONFIG_IPMI_HANDLER == 2 || $CONFIG_IPMI_HANDLER == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IPMI_HANDLER]];set CONFIG_IPMI_PANIC_EVENT [sync_bool $CONFIG_IPMI_PANIC_EVENT $tmpvar_dep 1];set CONFIG_IPMI_PANIC_EVENT [expr $CONFIG_IPMI_PANIC_EVENT&15]}
	global CONFIG_IPMI_DEVICE_INTERFACE
	if {($CONFIG_IPMI_HANDLER == 1 || $CONFIG_IPMI_HANDLER == 2 || $CONFIG_IPMI_HANDLER == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IPMI_HANDLER]]; set CONFIG_IPMI_DEVICE_INTERFACE [sync_tristate $CONFIG_IPMI_DEVICE_INTERFACE $tmpvar_dep]; set CONFIG_IPMI_DEVICE_INTERFACE [expr $CONFIG_IPMI_DEVICE_INTERFACE&15]}
	global CONFIG_IPMI_KCS
	if {($CONFIG_IPMI_HANDLER == 1 || $CONFIG_IPMI_HANDLER == 2 || $CONFIG_IPMI_HANDLER == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IPMI_HANDLER]]; set CONFIG_IPMI_KCS [sync_tristate $CONFIG_IPMI_KCS $tmpvar_dep]; set CONFIG_IPMI_KCS [expr $CONFIG_IPMI_KCS&15]}
	global CONFIG_IPMI_WATCHDOG
	if {($CONFIG_IPMI_HANDLER == 1 || $CONFIG_IPMI_HANDLER == 2 || $CONFIG_IPMI_HANDLER == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_IPMI_HANDLER]]; set CONFIG_IPMI_WATCHDOG [sync_tristate $CONFIG_IPMI_WATCHDOG $tmpvar_dep]; set CONFIG_IPMI_WATCHDOG [expr $CONFIG_IPMI_WATCHDOG&15]}
	global CONFIG_ARCH_NETWINDER
	if {($CONFIG_ARCH_NETWINDER == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_DS1620 == 2)} then {set CONFIG_DS1620 1}; set CONFIG_DS1620 [expr $CONFIG_DS1620&15]}
	if {($CONFIG_ARCH_NETWINDER == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_NWBUTTON == 2)} then {set CONFIG_NWBUTTON 1}; set CONFIG_NWBUTTON [expr $CONFIG_NWBUTTON&15]}
	if {($CONFIG_ARCH_NETWINDER == 1) && ($CONFIG_NWBUTTON != 0)} then {
	set CONFIG_NWBUTTON_REBOOT [expr $CONFIG_NWBUTTON_REBOOT&15]}
	if {($CONFIG_ARCH_NETWINDER == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_NWFLASH == 2)} then {set CONFIG_NWFLASH 1}; set CONFIG_NWFLASH [expr $CONFIG_NWFLASH&15]}
	global CONFIG_SCx200
	global CONFIG_SCx200_GPIO
	if {($CONFIG_SCx200 == 1 || $CONFIG_SCx200 == 2 || $CONFIG_SCx200 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCx200]]; set CONFIG_SCx200_GPIO [sync_tristate $CONFIG_SCx200_GPIO $tmpvar_dep]; set CONFIG_SCx200_GPIO [expr $CONFIG_SCx200_GPIO&15]}
	global CONFIG_PCI
	global CONFIG_AMD_PM768
	if {($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PCI]]; set CONFIG_AMD_PM768 [sync_tristate $CONFIG_AMD_PM768 $tmpvar_dep]; set CONFIG_AMD_PM768 [expr $CONFIG_AMD_PM768&15]}

	if {($CONFIG_MODULES == 0)} then {if {($CONFIG_NVRAM == 2)} then {set CONFIG_NVRAM 1}}

	if {($CONFIG_MODULES == 0)} then {if {($CONFIG_RTC == 2)} then {set CONFIG_RTC 1}}
	global CONFIG_ALPHA_BOOK1
	if {($CONFIG_OBSOLETE == 1 && $CONFIG_ALPHA_BOOK1 == 1)} then {
	set CONFIG_H8 [expr $CONFIG_H8&15]}

	if {($CONFIG_MODULES == 0)} then {if {($CONFIG_DTLK == 2)} then {set CONFIG_DTLK 1}}

	if {($CONFIG_MODULES == 0)} then {if {($CONFIG_R3964 == 2)} then {set CONFIG_R3964 1}}

	if {($CONFIG_MODULES == 0)} then {if {($CONFIG_APPLICOM == 2)} then {set CONFIG_APPLICOM 1}}
	global CONFIG_X86
	global CONFIG_SONYPI
	if {($CONFIG_EXPERIMENTAL == 1 && $CONFIG_X86 == 1 && $CONFIG_X86_64 != 1) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PCI]]; set CONFIG_SONYPI [sync_tristate $CONFIG_SONYPI $tmpvar_dep]; set CONFIG_SONYPI [expr $CONFIG_SONYPI&15]}

	if {($CONFIG_MODULES == 0)} then {if {($CONFIG_AGP == 2)} then {set CONFIG_AGP 1}}
	if {($CONFIG_AGP != 0)} then {
	set CONFIG_AGP_INTEL [expr $CONFIG_AGP_INTEL&15]}
	if {($CONFIG_AGP != 0)} then {
	set CONFIG_AGP_I810 [expr $CONFIG_AGP_I810&15]}
	if {($CONFIG_AGP != 0)} then {
	set CONFIG_AGP_VIA [expr $CONFIG_AGP_VIA&15]}
	if {($CONFIG_AGP != 0)} then {
	set CONFIG_AGP_AMD [expr $CONFIG_AGP_AMD&15]}
	global CONFIG_GART_IOMMU
	if {($CONFIG_AGP != 0) && ($CONFIG_GART_IOMMU != 1)} then {
	set CONFIG_AGP_AMD_K8 [expr $CONFIG_AGP_AMD_K8&15]}
	if {($CONFIG_AGP != 0)} then {
	set CONFIG_AGP_SIS [expr $CONFIG_AGP_SIS&15]}
	if {($CONFIG_AGP != 0)} then {
	set CONFIG_AGP_ALI [expr $CONFIG_AGP_ALI&15]}
	if {($CONFIG_AGP != 0)} then {
	set CONFIG_AGP_SWORKS [expr $CONFIG_AGP_SWORKS&15]}
	if {($CONFIG_AGP != 0)} then {
	set CONFIG_AGP_ATI [expr $CONFIG_AGP_ATI&15]}
}


proc menu59 {w title} {
	set oldFocus [focus]
	catch {focus .menu58}
	catch {destroy $w; unregister_active 59}
	toplevel $w -class Dialog
	wm withdraw $w
	global active_menus
	set active_menus [lsort -integer [linsert $active_menus end 59]]
	message $w.m -width 400 -aspect 300 -text \
		"I2C support"  -relief raised
	pack $w.m -pady 10 -side top -padx 10
	wm title $w "I2C support" 

	bind $w <Escape> "catch {focus $oldFocus}; destroy $w; unregister_active 59; break"
	set nextscript "catch {focus $oldFocus}; destroy $w; unregister_active 59; menu60 .menu60 \"$title\""
	frame $w.f
	button $w.f.back -text "OK" \
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 59"
	button $w.f.next -text "Next" -underline 0\
		-width 15 -command $nextscript
	bind all <Alt-n> $nextscript
	button $w.f.prev -text "Prev" -underline 0\
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 59; menu58 .menu58 \"$title\""
	bind $w <Alt-p> "catch {focus $oldFocus}; destroy $w; unregister_active 59; menu58 .menu58 \"$title\";break"
	pack $w.f.back $w.f.next $w.f.prev -side left -expand on
	pack $w.f -pady 10 -side bottom -anchor w -fill x
	frame $w.topline -relief ridge -borderwidth 2 -height 2
	pack $w.topline -side top -fill x

	frame $w.botline -relief ridge -borderwidth 2 -height 2
	pack $w.botline -side bottom -fill x

	frame $w.config
	pack $w.config -fill y -expand on

	scrollbar $w.config.vscroll -command "$w.config.canvas yview"
	pack $w.config.vscroll -side right -fill y

	canvas $w.config.canvas -height 1\
		-relief flat -borderwidth 0 -yscrollcommand "$w.config.vscroll set" \
		-width [expr [winfo screenwidth .] * 1 / 2] 
	frame $w.config.f
	bind $w <Key-Down> "$w.config.canvas yview scroll  1 unit;break;"
	bind $w <Key-Up> "$w.config.canvas yview scroll  -1 unit;break;"
	bind $w <Key-Next> "$w.config.canvas yview scroll  1 page;break;"
	bind $w <Key-Prior> "$w.config.canvas yview scroll  -1 page;break;"
	bind $w <Key-Home> "$w.config.canvas yview moveto 0;break;"
	bind $w <Key-End> "$w.config.canvas yview moveto 1 ;break;"
	pack $w.config.canvas -side right -fill y


	tristate $w.config.f 59 0 "I2C support" CONFIG_I2C
	dep_tristate $w.config.f 59 1 "I2C bit-banging interfaces" CONFIG_I2C_ALGOBIT
	dep_tristate $w.config.f 59 2 "  Philips style parallel port adapter" CONFIG_I2C_PHILIPSPAR
	dep_tristate $w.config.f 59 3 "  ELV adapter" CONFIG_I2C_ELV
	dep_tristate $w.config.f 59 4 "  Velleman K9000 adapter" CONFIG_I2C_VELLEMAN
	dep_tristate $w.config.f 59 5 "  Motorola Coldfire GPIO adapter (EXPERIMENTAL)" CONFIG_I2C_MCF_GPIO
	dep_tristate $w.config.f 59 6 "  NatSemi SCx200 I2C using GPIO pins" CONFIG_SCx200_I2C
	int $w.config.f 59 7 "    GPIO pin used for SCL" CONFIG_SCx200_I2C_SCL
	int $w.config.f 59 8 "    GPIO pin used for SDA" CONFIG_SCx200_I2C_SDA
	dep_tristate $w.config.f 59 9 "  NatSemi SCx200 ACCESS.bus" CONFIG_SCx200_ACB
	dep_tristate $w.config.f 59 10 "I2C PCF 8584 interfaces" CONFIG_I2C_ALGOPCF
	dep_tristate $w.config.f 59 11 "  Elektor ISA card" CONFIG_I2C_ELEKTOR
	dep_tristate $w.config.f 59 12 "I2C device interface" CONFIG_I2C_CHARDEV
	dep_tristate $w.config.f 59 13 "I2C /proc interface (required for hardware sensors)" CONFIG_I2C_PROC



	focus $w
	update_active
	global winx; global winy
	if {[winfo exists .menu58] == 0} then {menu58 .menu58 "Character devices"}
	set winx [expr [winfo x .menu58]+30]; set winy [expr [winfo y .menu58]+30]
	if {[winfo exists $w]} then {wm geometry $w +$winx+$winy}
	update idletasks
	if {[winfo exists $w]} then  {$w.config.canvas create window 0 0 -anchor nw -window $w.config.f

	$w.config.canvas configure \
		-width [expr [winfo reqwidth $w.config.f] + 1]\
		-scrollregion "-1 -1 [expr [winfo reqwidth $w.config.f] + 1] \
			 [expr [winfo reqheight $w.config.f] + 1]"

	set winy [expr [winfo reqh $w] - [winfo reqh $w.config.canvas]]
	set scry [expr [winfo screenh $w] / 2]
	set maxy [expr [winfo screenh $w] * 3 / 4]
	set canvtotal [expr [winfo reqh $w.config.f] + 2]
	if [expr $winy + $canvtotal < $maxy] {
		$w.config.canvas configure -height $canvtotal
	} else {
		$w.config.canvas configure -height [expr $scry - $winy]
		}
	}
	update idletasks
	if {[winfo exists $w]} then {
	wm maxsize $w [winfo width $w] [winfo screenheight $w]
	wm minsize $w [winfo width $w] 100

	wm deiconify $w
}
}

proc update_menu59 {} {
	global CONFIG_I2C
	global CONFIG_MODULES

	if {($CONFIG_MODULES == 1)} then {configure_entry .menu59.config.f.x0 normal {m}} else {configure_entry .menu59.config.f.x0 disabled {m}}
	global CONFIG_I2C_ALGOBIT
	if {($CONFIG_I2C != 0) && ($CONFIG_I2C == 1 || $CONFIG_I2C == 2 || $CONFIG_I2C == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_I2C]];set CONFIG_I2C_ALGOBIT [sync_tristate $CONFIG_I2C_ALGOBIT $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu59.config.f.x1 disabled {y}} else {configure_entry .menu59.config.f.x1 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu59.config.f.x1 disabled {m}} else {configure_entry .menu59.config.f.x1 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu59.config.f.x1 normal {m}} else {configure_entry .menu59.config.f.x1 disabled {m}}; configure_entry .menu59.config.f.x1 normal {n l}} else {configure_entry .menu59.config.f.x1 disabled {y n m l}}
	global CONFIG_PARPORT
	global CONFIG_I2C_PHILIPSPAR
	if {($CONFIG_I2C != 0) && ($CONFIG_I2C_ALGOBIT != 0) && ($CONFIG_I2C_ALGOBIT == 1 || $CONFIG_I2C_ALGOBIT == 2 || $CONFIG_I2C_ALGOBIT == 4) && ($CONFIG_PARPORT == 1 || $CONFIG_PARPORT == 2 || $CONFIG_PARPORT == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_I2C_ALGOBIT $CONFIG_PARPORT]];set CONFIG_I2C_PHILIPSPAR [sync_tristate $CONFIG_I2C_PHILIPSPAR $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu59.config.f.x2 disabled {y}} else {configure_entry .menu59.config.f.x2 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu59.config.f.x2 disabled {m}} else {configure_entry .menu59.config.f.x2 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu59.config.f.x2 normal {m}} else {configure_entry .menu59.config.f.x2 disabled {m}}; configure_entry .menu59.config.f.x2 normal {n l}} else {configure_entry .menu59.config.f.x2 disabled {y n m l}}
	global CONFIG_I2C_ELV
	if {($CONFIG_I2C != 0) && ($CONFIG_I2C_ALGOBIT != 0) && ($CONFIG_I2C_ALGOBIT == 1 || $CONFIG_I2C_ALGOBIT == 2 || $CONFIG_I2C_ALGOBIT == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_I2C_ALGOBIT]];set CONFIG_I2C_ELV [sync_tristate $CONFIG_I2C_ELV $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu59.config.f.x3 disabled {y}} else {configure_entry .menu59.config.f.x3 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu59.config.f.x3 disabled {m}} else {configure_entry .menu59.config.f.x3 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu59.config.f.x3 normal {m}} else {configure_entry .menu59.config.f.x3 disabled {m}}; configure_entry .menu59.config.f.x3 normal {n l}} else {configure_entry .menu59.config.f.x3 disabled {y n m l}}
	global CONFIG_I2C_VELLEMAN
	if {($CONFIG_I2C != 0) && ($CONFIG_I2C_ALGOBIT != 0) && ($CONFIG_I2C_ALGOBIT == 1 || $CONFIG_I2C_ALGOBIT == 2 || $CONFIG_I2C_ALGOBIT == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_I2C_ALGOBIT]];set CONFIG_I2C_VELLEMAN [sync_tristate $CONFIG_I2C_VELLEMAN $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu59.config.f.x4 disabled {y}} else {configure_entry .menu59.config.f.x4 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu59.config.f.x4 disabled {m}} else {configure_entry .menu59.config.f.x4 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu59.config.f.x4 normal {m}} else {configure_entry .menu59.config.f.x4 disabled {m}}; configure_entry .menu59.config.f.x4 normal {n l}} else {configure_entry .menu59.config.f.x4 disabled {y n m l}}
	global CONFIG_COLDFIRE
	global CONFIG_EXPERIMENTAL
	global CONFIG_I2C_MCF_GPIO
	if {($CONFIG_I2C != 0) && ($CONFIG_I2C_ALGOBIT != 0) && ($CONFIG_I2C_ALGOBIT == 1 || $CONFIG_I2C_ALGOBIT == 2 || $CONFIG_I2C_ALGOBIT == 4) && ($CONFIG_COLDFIRE == 1 || $CONFIG_COLDFIRE == 2 || $CONFIG_COLDFIRE == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_I2C_ALGOBIT $CONFIG_COLDFIRE $CONFIG_EXPERIMENTAL]];set CONFIG_I2C_MCF_GPIO [sync_tristate $CONFIG_I2C_MCF_GPIO $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu59.config.f.x5 disabled {y}} else {configure_entry .menu59.config.f.x5 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu59.config.f.x5 disabled {m}} else {configure_entry .menu59.config.f.x5 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu59.config.f.x5 normal {m}} else {configure_entry .menu59.config.f.x5 disabled {m}}; configure_entry .menu59.config.f.x5 normal {n l}} else {configure_entry .menu59.config.f.x5 disabled {y n m l}}
	global CONFIG_SCx200
	global CONFIG_SCx200_I2C
	if {($CONFIG_I2C != 0) && ($CONFIG_I2C_ALGOBIT != 0) && ($CONFIG_SCx200 == 1 || $CONFIG_SCx200 == 2 || $CONFIG_SCx200 == 4) && ($CONFIG_I2C_ALGOBIT == 1 || $CONFIG_I2C_ALGOBIT == 2 || $CONFIG_I2C_ALGOBIT == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCx200 $CONFIG_I2C_ALGOBIT]];set CONFIG_SCx200_I2C [sync_tristate $CONFIG_SCx200_I2C $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu59.config.f.x6 disabled {y}} else {configure_entry .menu59.config.f.x6 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu59.config.f.x6 disabled {m}} else {configure_entry .menu59.config.f.x6 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu59.config.f.x6 normal {m}} else {configure_entry .menu59.config.f.x6 disabled {m}}; configure_entry .menu59.config.f.x6 normal {n l}} else {configure_entry .menu59.config.f.x6 disabled {y n m l}}
	global CONFIG_SCx200_I2C_SCL
	if {($CONFIG_I2C != 0) && ($CONFIG_I2C_ALGOBIT != 0) && ($CONFIG_SCx200_I2C != 0)} then {.menu59.config.f.x7.x configure -state normal -foreground [ cget .ref -foreground ]; .menu59.config.f.x7.l configure -state normal; } else {.menu59.config.f.x7.x configure -state disabled -foreground [ cget .ref -disabledforeground ]; .menu59.config.f.x7.l configure -state disabled}
	global CONFIG_SCx200_I2C_SDA
	if {($CONFIG_I2C != 0) && ($CONFIG_I2C_ALGOBIT != 0) && ($CONFIG_SCx200_I2C != 0)} then {.menu59.config.f.x8.x configure -state normal -foreground [ cget .ref -foreground ]; .menu59.config.f.x8.l configure -state normal; } else {.menu59.config.f.x8.x configure -state disabled -foreground [ cget .ref -disabledforeground ]; .menu59.config.f.x8.l configure -state disabled}
	global CONFIG_SCx200_ACB
	if {($CONFIG_I2C != 0) && ($CONFIG_I2C_ALGOBIT != 0) && ($CONFIG_I2C == 1 || $CONFIG_I2C == 2 || $CONFIG_I2C == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_I2C]];set CONFIG_SCx200_ACB [sync_tristate $CONFIG_SCx200_ACB $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu59.config.f.x9 disabled {y}} else {configure_entry .menu59.config.f.x9 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu59.config.f.x9 disabled {m}} else {configure_entry .menu59.config.f.x9 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu59.config.f.x9 normal {m}} else {configure_entry .menu59.config.f.x9 disabled {m}}; configure_entry .menu59.config.f.x9 normal {n l}} else {configure_entry .menu59.config.f.x9 disabled {y n m l}}
	global CONFIG_I2C_ALGOPCF
	if {($CONFIG_I2C != 0) && ($CONFIG_I2C == 1 || $CONFIG_I2C == 2 || $CONFIG_I2C == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_I2C]];set CONFIG_I2C_ALGOPCF [sync_tristate $CONFIG_I2C_ALGOPCF $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu59.config.f.x10 disabled {y}} else {configure_entry .menu59.config.f.x10 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu59.config.f.x10 disabled {m}} else {configure_entry .menu59.config.f.x10 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu59.config.f.x10 normal {m}} else {configure_entry .menu59.config.f.x10 disabled {m}}; configure_entry .menu59.config.f.x10 normal {n l}} else {configure_entry .menu59.config.f.x10 disabled {y n m l}}
	global CONFIG_I2C_ELEKTOR
	if {($CONFIG_I2C != 0) && ($CONFIG_I2C_ALGOPCF != 0) && ($CONFIG_I2C_ALGOPCF == 1 || $CONFIG_I2C_ALGOPCF == 2 || $CONFIG_I2C_ALGOPCF == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_I2C_ALGOPCF]];set CONFIG_I2C_ELEKTOR [sync_tristate $CONFIG_I2C_ELEKTOR $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu59.config.f.x11 disabled {y}} else {configure_entry .menu59.config.f.x11 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu59.config.f.x11 disabled {m}} else {configure_entry .menu59.config.f.x11 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu59.config.f.x11 normal {m}} else {configure_entry .menu59.config.f.x11 disabled {m}}; configure_entry .menu59.config.f.x11 normal {n l}} else {configure_entry .menu59.config.f.x11 disabled {y n m l}}
	global CONFIG_I2C_CHARDEV
	if {($CONFIG_I2C != 0) && ($CONFIG_I2C == 1 || $CONFIG_I2C == 2 || $CONFIG_I2C == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_I2C]];set CONFIG_I2C_CHARDEV [sync_tristate $CONFIG_I2C_CHARDEV $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu59.config.f.x12 disabled {y}} else {configure_entry .menu59.config.f.x12 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu59.config.f.x12 disabled {m}} else {configure_entry .menu59.config.f.x12 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu59.config.f.x12 normal {m}} else {configure_entry .menu59.config.f.x12 disabled {m}}; configure_entry .menu59.config.f.x12 normal {n l}} else {configure_entry .menu59.config.f.x12 disabled {y n m l}}
	global CONFIG_I2C_PROC
	if {($CONFIG_I2C != 0) && ($CONFIG_I2C == 1 || $CONFIG_I2C == 2 || $CONFIG_I2C == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_I2C]];set CONFIG_I2C_PROC [sync_tristate $CONFIG_I2C_PROC $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu59.config.f.x13 disabled {y}} else {configure_entry .menu59.config.f.x13 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu59.config.f.x13 disabled {m}} else {configure_entry .menu59.config.f.x13 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu59.config.f.x13 normal {m}} else {configure_entry .menu59.config.f.x13 disabled {m}}; configure_entry .menu59.config.f.x13 normal {n l}} else {configure_entry .menu59.config.f.x13 disabled {y n m l}}
}


proc update_define_menu59 {} {
	update_define_mainmenu
	global CONFIG_MODULES
	global CONFIG_I2C

	if {($CONFIG_MODULES == 0)} then {if {($CONFIG_I2C == 2)} then {set CONFIG_I2C 1}}
	global CONFIG_I2C_ALGOBIT
	if {($CONFIG_I2C != 0) && ($CONFIG_I2C == 1 || $CONFIG_I2C == 2 || $CONFIG_I2C == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_I2C]]; set CONFIG_I2C_ALGOBIT [sync_tristate $CONFIG_I2C_ALGOBIT $tmpvar_dep]; set CONFIG_I2C_ALGOBIT [expr $CONFIG_I2C_ALGOBIT&15]}
	global CONFIG_PARPORT
	global CONFIG_I2C_PHILIPSPAR
	if {($CONFIG_I2C != 0) && ($CONFIG_I2C_ALGOBIT != 0) && ($CONFIG_I2C_ALGOBIT == 1 || $CONFIG_I2C_ALGOBIT == 2 || $CONFIG_I2C_ALGOBIT == 4) && ($CONFIG_PARPORT == 1 || $CONFIG_PARPORT == 2 || $CONFIG_PARPORT == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_I2C_ALGOBIT $CONFIG_PARPORT]]; set CONFIG_I2C_PHILIPSPAR [sync_tristate $CONFIG_I2C_PHILIPSPAR $tmpvar_dep]; set CONFIG_I2C_PHILIPSPAR [expr $CONFIG_I2C_PHILIPSPAR&15]}
	global CONFIG_I2C_ELV
	if {($CONFIG_I2C != 0) && ($CONFIG_I2C_ALGOBIT != 0) && ($CONFIG_I2C_ALGOBIT == 1 || $CONFIG_I2C_ALGOBIT == 2 || $CONFIG_I2C_ALGOBIT == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_I2C_ALGOBIT]]; set CONFIG_I2C_ELV [sync_tristate $CONFIG_I2C_ELV $tmpvar_dep]; set CONFIG_I2C_ELV [expr $CONFIG_I2C_ELV&15]}
	global CONFIG_I2C_VELLEMAN
	if {($CONFIG_I2C != 0) && ($CONFIG_I2C_ALGOBIT != 0) && ($CONFIG_I2C_ALGOBIT == 1 || $CONFIG_I2C_ALGOBIT == 2 || $CONFIG_I2C_ALGOBIT == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_I2C_ALGOBIT]]; set CONFIG_I2C_VELLEMAN [sync_tristate $CONFIG_I2C_VELLEMAN $tmpvar_dep]; set CONFIG_I2C_VELLEMAN [expr $CONFIG_I2C_VELLEMAN&15]}
	global CONFIG_COLDFIRE
	global CONFIG_EXPERIMENTAL
	global CONFIG_I2C_MCF_GPIO
	if {($CONFIG_I2C != 0) && ($CONFIG_I2C_ALGOBIT != 0) && ($CONFIG_I2C_ALGOBIT == 1 || $CONFIG_I2C_ALGOBIT == 2 || $CONFIG_I2C_ALGOBIT == 4) && ($CONFIG_COLDFIRE == 1 || $CONFIG_COLDFIRE == 2 || $CONFIG_COLDFIRE == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_I2C_ALGOBIT $CONFIG_COLDFIRE $CONFIG_EXPERIMENTAL]]; set CONFIG_I2C_MCF_GPIO [sync_tristate $CONFIG_I2C_MCF_GPIO $tmpvar_dep]; set CONFIG_I2C_MCF_GPIO [expr $CONFIG_I2C_MCF_GPIO&15]}
	global CONFIG_SCx200
	global CONFIG_SCx200_I2C
	if {($CONFIG_I2C != 0) && ($CONFIG_I2C_ALGOBIT != 0) && ($CONFIG_SCx200 == 1 || $CONFIG_SCx200 == 2 || $CONFIG_SCx200 == 4) && ($CONFIG_I2C_ALGOBIT == 1 || $CONFIG_I2C_ALGOBIT == 2 || $CONFIG_I2C_ALGOBIT == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SCx200 $CONFIG_I2C_ALGOBIT]]; set CONFIG_SCx200_I2C [sync_tristate $CONFIG_SCx200_I2C $tmpvar_dep]; set CONFIG_SCx200_I2C [expr $CONFIG_SCx200_I2C&15]}
	global CONFIG_SCx200_I2C_SCL
	if {($CONFIG_I2C != 0) && ($CONFIG_I2C_ALGOBIT != 0) && ($CONFIG_SCx200_I2C != 0)} then {validate_int CONFIG_SCx200_I2C_SCL "$CONFIG_SCx200_I2C_SCL" 12}
	global CONFIG_SCx200_I2C_SDA
	if {($CONFIG_I2C != 0) && ($CONFIG_I2C_ALGOBIT != 0) && ($CONFIG_SCx200_I2C != 0)} then {validate_int CONFIG_SCx200_I2C_SDA "$CONFIG_SCx200_I2C_SDA" 13}
	global CONFIG_SCx200_ACB
	if {($CONFIG_I2C != 0) && ($CONFIG_I2C_ALGOBIT != 0) && ($CONFIG_I2C == 1 || $CONFIG_I2C == 2 || $CONFIG_I2C == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_I2C]]; set CONFIG_SCx200_ACB [sync_tristate $CONFIG_SCx200_ACB $tmpvar_dep]; set CONFIG_SCx200_ACB [expr $CONFIG_SCx200_ACB&15]}
	global CONFIG_I2C_ALGOPCF
	if {($CONFIG_I2C != 0) && ($CONFIG_I2C == 1 || $CONFIG_I2C == 2 || $CONFIG_I2C == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_I2C]]; set CONFIG_I2C_ALGOPCF [sync_tristate $CONFIG_I2C_ALGOPCF $tmpvar_dep]; set CONFIG_I2C_ALGOPCF [expr $CONFIG_I2C_ALGOPCF&15]}
	global CONFIG_I2C_ELEKTOR
	if {($CONFIG_I2C != 0) && ($CONFIG_I2C_ALGOPCF != 0) && ($CONFIG_I2C_ALGOPCF == 1 || $CONFIG_I2C_ALGOPCF == 2 || $CONFIG_I2C_ALGOPCF == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_I2C_ALGOPCF]]; set CONFIG_I2C_ELEKTOR [sync_tristate $CONFIG_I2C_ELEKTOR $tmpvar_dep]; set CONFIG_I2C_ELEKTOR [expr $CONFIG_I2C_ELEKTOR&15]}
	global CONFIG_I2C_CHARDEV
	if {($CONFIG_I2C != 0) && ($CONFIG_I2C == 1 || $CONFIG_I2C == 2 || $CONFIG_I2C == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_I2C]]; set CONFIG_I2C_CHARDEV [sync_tristate $CONFIG_I2C_CHARDEV $tmpvar_dep]; set CONFIG_I2C_CHARDEV [expr $CONFIG_I2C_CHARDEV&15]}
	global CONFIG_I2C_PROC
	if {($CONFIG_I2C != 0) && ($CONFIG_I2C == 1 || $CONFIG_I2C == 2 || $CONFIG_I2C == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_I2C]]; set CONFIG_I2C_PROC [sync_tristate $CONFIG_I2C_PROC $tmpvar_dep]; set CONFIG_I2C_PROC [expr $CONFIG_I2C_PROC&15]}
}


proc menu60 {w title} {
	set oldFocus [focus]
	catch {focus .menu58}
	catch {destroy $w; unregister_active 60}
	toplevel $w -class Dialog
	wm withdraw $w
	global active_menus
	set active_menus [lsort -integer [linsert $active_menus end 60]]
	message $w.m -width 400 -aspect 300 -text \
		"Mice"  -relief raised
	pack $w.m -pady 10 -side top -padx 10
	wm title $w "Mice" 

	bind $w <Escape> "catch {focus $oldFocus}; destroy $w; unregister_active 60; break"
	set nextscript "catch {focus $oldFocus}; destroy $w; unregister_active 60; menu61 .menu61 \"$title\""
	frame $w.f
	button $w.f.back -text "OK" \
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 60"
	button $w.f.next -text "Next" -underline 0\
		-width 15 -command $nextscript
	bind all <Alt-n> $nextscript
	button $w.f.prev -text "Prev" -underline 0\
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 60; menu59 .menu59 \"$title\""
	bind $w <Alt-p> "catch {focus $oldFocus}; destroy $w; unregister_active 60; menu59 .menu59 \"$title\";break"
	pack $w.f.back $w.f.next $w.f.prev -side left -expand on
	pack $w.f -pady 10 -side bottom -anchor w -fill x
	frame $w.topline -relief ridge -borderwidth 2 -height 2
	pack $w.topline -side top -fill x

	frame $w.botline -relief ridge -borderwidth 2 -height 2
	pack $w.botline -side bottom -fill x

	frame $w.config
	pack $w.config -fill y -expand on

	scrollbar $w.config.vscroll -command "$w.config.canvas yview"
	pack $w.config.vscroll -side right -fill y

	canvas $w.config.canvas -height 1\
		-relief flat -borderwidth 0 -yscrollcommand "$w.config.vscroll set" \
		-width [expr [winfo screenwidth .] * 1 / 2] 
	frame $w.config.f
	bind $w <Key-Down> "$w.config.canvas yview scroll  1 unit;break;"
	bind $w <Key-Up> "$w.config.canvas yview scroll  -1 unit;break;"
	bind $w <Key-Next> "$w.config.canvas yview scroll  1 page;break;"
	bind $w <Key-Prior> "$w.config.canvas yview scroll  -1 page;break;"
	bind $w <Key-Home> "$w.config.canvas yview moveto 0;break;"
	bind $w <Key-End> "$w.config.canvas yview moveto 1 ;break;"
	pack $w.config.canvas -side right -fill y


	tristate $w.config.f 60 0 "Bus Mouse Support" CONFIG_BUSMOUSE
	dep_tristate $w.config.f 60 1 "  ATIXL busmouse support" CONFIG_ATIXL_BUSMOUSE
	dep_tristate $w.config.f 60 2 "  Logitech busmouse support" CONFIG_LOGIBUSMOUSE
	dep_tristate $w.config.f 60 3 "  Microsoft busmouse support" CONFIG_MS_BUSMOUSE
	tristate $w.config.f 60 4 "Mouse Support (not serial and bus mice)" CONFIG_MOUSE
	bool $w.config.f 60 5 "  PS/2 mouse (aka \"auxiliary device\") support" CONFIG_PSMOUSE
	tristate $w.config.f 60 6 "  C&T 82C710 mouse port support (as on TI Travelmate)" CONFIG_82C710_MOUSE
	tristate $w.config.f 60 7 "  PC110 digitizer pad support" CONFIG_PC110_PAD
	tristate $w.config.f 60 8 "  MK712 touch screen support" CONFIG_MK712_MOUSE



	focus $w
	update_active
	global winx; global winy
	if {[winfo exists .menu58] == 0} then {menu58 .menu58 "Character devices"}
	set winx [expr [winfo x .menu58]+30]; set winy [expr [winfo y .menu58]+30]
	if {[winfo exists $w]} then {wm geometry $w +$winx+$winy}
	update idletasks
	if {[winfo exists $w]} then  {$w.config.canvas create window 0 0 -anchor nw -window $w.config.f

	$w.config.canvas configure \
		-width [expr [winfo reqwidth $w.config.f] + 1]\
		-scrollregion "-1 -1 [expr [winfo reqwidth $w.config.f] + 1] \
			 [expr [winfo reqheight $w.config.f] + 1]"

	set winy [expr [winfo reqh $w] - [winfo reqh $w.config.canvas]]
	set scry [expr [winfo screenh $w] / 2]
	set maxy [expr [winfo screenh $w] * 3 / 4]
	set canvtotal [expr [winfo reqh $w.config.f] + 2]
	if [expr $winy + $canvtotal < $maxy] {
		$w.config.canvas configure -height $canvtotal
	} else {
		$w.config.canvas configure -height [expr $scry - $winy]
		}
	}
	update idletasks
	if {[winfo exists $w]} then {
	wm maxsize $w [winfo width $w] [winfo screenheight $w]
	wm minsize $w [winfo width $w] 100

	wm deiconify $w
}
}

proc update_menu60 {} {
	global CONFIG_BUSMOUSE
	global CONFIG_MODULES

	if {($CONFIG_MODULES == 1)} then {configure_entry .menu60.config.f.x0 normal {m}} else {configure_entry .menu60.config.f.x0 disabled {m}}
	global CONFIG_ATIXL_BUSMOUSE
	if {($CONFIG_BUSMOUSE != 0) && ($CONFIG_BUSMOUSE == 1 || $CONFIG_BUSMOUSE == 2 || $CONFIG_BUSMOUSE == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BUSMOUSE]];set CONFIG_ATIXL_BUSMOUSE [sync_tristate $CONFIG_ATIXL_BUSMOUSE $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu60.config.f.x1 disabled {y}} else {configure_entry .menu60.config.f.x1 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu60.config.f.x1 disabled {m}} else {configure_entry .menu60.config.f.x1 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu60.config.f.x1 normal {m}} else {configure_entry .menu60.config.f.x1 disabled {m}}; configure_entry .menu60.config.f.x1 normal {n l}} else {configure_entry .menu60.config.f.x1 disabled {y n m l}}
	global CONFIG_LOGIBUSMOUSE
	if {($CONFIG_BUSMOUSE != 0) && ($CONFIG_BUSMOUSE == 1 || $CONFIG_BUSMOUSE == 2 || $CONFIG_BUSMOUSE == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BUSMOUSE]];set CONFIG_LOGIBUSMOUSE [sync_tristate $CONFIG_LOGIBUSMOUSE $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu60.config.f.x2 disabled {y}} else {configure_entry .menu60.config.f.x2 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu60.config.f.x2 disabled {m}} else {configure_entry .menu60.config.f.x2 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu60.config.f.x2 normal {m}} else {configure_entry .menu60.config.f.x2 disabled {m}}; configure_entry .menu60.config.f.x2 normal {n l}} else {configure_entry .menu60.config.f.x2 disabled {y n m l}}
	global CONFIG_MS_BUSMOUSE
	if {($CONFIG_BUSMOUSE != 0) && ($CONFIG_BUSMOUSE == 1 || $CONFIG_BUSMOUSE == 2 || $CONFIG_BUSMOUSE == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BUSMOUSE]];set CONFIG_MS_BUSMOUSE [sync_tristate $CONFIG_MS_BUSMOUSE $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu60.config.f.x3 disabled {y}} else {configure_entry .menu60.config.f.x3 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu60.config.f.x3 disabled {m}} else {configure_entry .menu60.config.f.x3 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu60.config.f.x3 normal {m}} else {configure_entry .menu60.config.f.x3 disabled {m}}; configure_entry .menu60.config.f.x3 normal {n l}} else {configure_entry .menu60.config.f.x3 disabled {y n m l}}
	global CONFIG_MOUSE

	if {($CONFIG_MODULES == 1)} then {configure_entry .menu60.config.f.x4 normal {m}} else {configure_entry .menu60.config.f.x4 disabled {m}}
	global CONFIG_PSMOUSE
	if {($CONFIG_MOUSE != 0)} then {
	configure_entry .menu60.config.f.x5 normal {n l y}} else {configure_entry .menu60.config.f.x5 disabled {y n l}}
	global CONFIG_82C710_MOUSE
	if {($CONFIG_MOUSE != 0)} then {
	configure_entry .menu60.config.f.x6 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu60.config.f.x6 normal {m}} else {configure_entry .menu60.config.f.x6 disabled {m}}; configure_entry .menu60.config.f.x6 normal {n l}} else {configure_entry .menu60.config.f.x6 disabled {y n m l}}
	global CONFIG_PC110_PAD
	if {($CONFIG_MOUSE != 0)} then {
	configure_entry .menu60.config.f.x7 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu60.config.f.x7 normal {m}} else {configure_entry .menu60.config.f.x7 disabled {m}}; configure_entry .menu60.config.f.x7 normal {n l}} else {configure_entry .menu60.config.f.x7 disabled {y n m l}}
	global CONFIG_MK712_MOUSE
	if {($CONFIG_MOUSE != 0)} then {
	configure_entry .menu60.config.f.x8 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu60.config.f.x8 normal {m}} else {configure_entry .menu60.config.f.x8 disabled {m}}; configure_entry .menu60.config.f.x8 normal {n l}} else {configure_entry .menu60.config.f.x8 disabled {y n m l}}
}


proc update_define_menu60 {} {
	update_define_mainmenu
	global CONFIG_MODULES
	global CONFIG_BUSMOUSE
	global CONFIG_MOUSE
	global CONFIG_82C710_MOUSE
	global CONFIG_PC110_PAD
	global CONFIG_MK712_MOUSE
	global CONFIG_PSMOUSE
set CONFIG_PSMOUSE [expr $CONFIG_PSMOUSE|16]
set CONFIG_82C710_MOUSE [expr $CONFIG_82C710_MOUSE|16]
set CONFIG_PC110_PAD [expr $CONFIG_PC110_PAD|16]
set CONFIG_MK712_MOUSE [expr $CONFIG_MK712_MOUSE|16]

	if {($CONFIG_MODULES == 0)} then {if {($CONFIG_BUSMOUSE == 2)} then {set CONFIG_BUSMOUSE 1}}
	global CONFIG_ATIXL_BUSMOUSE
	if {($CONFIG_BUSMOUSE != 0) && ($CONFIG_BUSMOUSE == 1 || $CONFIG_BUSMOUSE == 2 || $CONFIG_BUSMOUSE == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BUSMOUSE]]; set CONFIG_ATIXL_BUSMOUSE [sync_tristate $CONFIG_ATIXL_BUSMOUSE $tmpvar_dep]; set CONFIG_ATIXL_BUSMOUSE [expr $CONFIG_ATIXL_BUSMOUSE&15]}
	global CONFIG_LOGIBUSMOUSE
	if {($CONFIG_BUSMOUSE != 0) && ($CONFIG_BUSMOUSE == 1 || $CONFIG_BUSMOUSE == 2 || $CONFIG_BUSMOUSE == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BUSMOUSE]]; set CONFIG_LOGIBUSMOUSE [sync_tristate $CONFIG_LOGIBUSMOUSE $tmpvar_dep]; set CONFIG_LOGIBUSMOUSE [expr $CONFIG_LOGIBUSMOUSE&15]}
	global CONFIG_MS_BUSMOUSE
	if {($CONFIG_BUSMOUSE != 0) && ($CONFIG_BUSMOUSE == 1 || $CONFIG_BUSMOUSE == 2 || $CONFIG_BUSMOUSE == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BUSMOUSE]]; set CONFIG_MS_BUSMOUSE [sync_tristate $CONFIG_MS_BUSMOUSE $tmpvar_dep]; set CONFIG_MS_BUSMOUSE [expr $CONFIG_MS_BUSMOUSE&15]}

	if {($CONFIG_MODULES == 0)} then {if {($CONFIG_MOUSE == 2)} then {set CONFIG_MOUSE 1}}
	if {($CONFIG_MOUSE != 0)} then {
	set CONFIG_PSMOUSE [expr $CONFIG_PSMOUSE&15]}
	if {($CONFIG_MOUSE != 0)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_82C710_MOUSE == 2)} then {set CONFIG_82C710_MOUSE 1}; set CONFIG_82C710_MOUSE [expr $CONFIG_82C710_MOUSE&15]}
	if {($CONFIG_MOUSE != 0)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_PC110_PAD == 2)} then {set CONFIG_PC110_PAD 1}; set CONFIG_PC110_PAD [expr $CONFIG_PC110_PAD&15]}
	if {($CONFIG_MOUSE != 0)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_MK712_MOUSE == 2)} then {set CONFIG_MK712_MOUSE 1}; set CONFIG_MK712_MOUSE [expr $CONFIG_MK712_MOUSE&15]}
}


proc menu61 {w title} {
	set oldFocus [focus]
	catch {focus .menu58}
	catch {destroy $w; unregister_active 61}
	toplevel $w -class Dialog
	wm withdraw $w
	global active_menus
	set active_menus [lsort -integer [linsert $active_menus end 61]]
	message $w.m -width 400 -aspect 300 -text \
		"Joysticks"  -relief raised
	pack $w.m -pady 10 -side top -padx 10
	wm title $w "Joysticks" 

	bind $w <Escape> "catch {focus $oldFocus}; destroy $w; unregister_active 61; break"
	set nextscript "catch {focus $oldFocus}; destroy $w; unregister_active 61; menu62 .menu62 \"$title\""
	frame $w.f
	button $w.f.back -text "OK" \
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 61"
	button $w.f.next -text "Next" -underline 0\
		-width 15 -command $nextscript
	bind all <Alt-n> $nextscript
	button $w.f.prev -text "Prev" -underline 0\
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 61; menu60 .menu60 \"$title\""
	bind $w <Alt-p> "catch {focus $oldFocus}; destroy $w; unregister_active 61; menu60 .menu60 \"$title\";break"
	pack $w.f.back $w.f.next $w.f.prev -side left -expand on
	pack $w.f -pady 10 -side bottom -anchor w -fill x
	frame $w.topline -relief ridge -borderwidth 2 -height 2
	pack $w.topline -side top -fill x

	frame $w.botline -relief ridge -borderwidth 2 -height 2
	pack $w.botline -side bottom -fill x

	frame $w.config
	pack $w.config -fill y -expand on

	scrollbar $w.config.vscroll -command "$w.config.canvas yview"
	pack $w.config.vscroll -side right -fill y

	canvas $w.config.canvas -height 1\
		-relief flat -borderwidth 0 -yscrollcommand "$w.config.vscroll set" \
		-width [expr [winfo screenwidth .] * 1 / 2] 
	frame $w.config.f
	bind $w <Key-Down> "$w.config.canvas yview scroll  1 unit;break;"
	bind $w <Key-Up> "$w.config.canvas yview scroll  -1 unit;break;"
	bind $w <Key-Next> "$w.config.canvas yview scroll  1 page;break;"
	bind $w <Key-Prior> "$w.config.canvas yview scroll  -1 page;break;"
	bind $w <Key-Home> "$w.config.canvas yview moveto 0;break;"
	bind $w <Key-End> "$w.config.canvas yview moveto 1 ;break;"
	pack $w.config.canvas -side right -fill y


	dep_tristate $w.config.f 61 0 "Game port support" CONFIG_INPUT_GAMEPORT
	dep_tristate $w.config.f 61 1 "  Classic ISA/PnP gameports" CONFIG_INPUT_NS558
	dep_tristate $w.config.f 61 2 "  PDPI Lightning 4 gamecard" CONFIG_INPUT_LIGHTNING
	dep_tristate $w.config.f 61 3 "  Aureal Vortex, Trident 4DWave, and ALi 5451 gameports" CONFIG_INPUT_PCIGAME
	dep_tristate $w.config.f 61 4 "  Crystal SoundFusion gameports" CONFIG_INPUT_CS461X
	dep_tristate $w.config.f 61 5 "  SoundBlaster Live! gameports" CONFIG_INPUT_EMU10K1
	tristate $w.config.f 61 6 "Serial port device support" CONFIG_INPUT_SERIO
	dep_tristate $w.config.f 61 7 "  Serial port input line discipline" CONFIG_INPUT_SERPORT
	comment $w.config.f 61 8 "Input core support is needed for gameports"
	comment $w.config.f 61 9 "Joysticks"
	dep_tristate $w.config.f 61 10 "  Classic PC analog joysticks and gamepads" CONFIG_INPUT_ANALOG
	dep_tristate $w.config.f 61 11 "  Assasin 3D and MadCatz Panther devices" CONFIG_INPUT_A3D
	dep_tristate $w.config.f 61 12 "  Logitech ADI digital joysticks and gamepads" CONFIG_INPUT_ADI
	dep_tristate $w.config.f 61 13 "  Creative Labs Blaster Cobra gamepad" CONFIG_INPUT_COBRA
	dep_tristate $w.config.f 61 14 "  Genius Flight2000 Digital joysticks and gamepads" CONFIG_INPUT_GF2K
	dep_tristate $w.config.f 61 15 "  Gravis GrIP joysticks and gamepads" CONFIG_INPUT_GRIP
	dep_tristate $w.config.f 61 16 "  InterAct digital joysticks and gamepads" CONFIG_INPUT_INTERACT
	dep_tristate $w.config.f 61 17 "  ThrustMaster DirectConnect joysticks and gamepads" CONFIG_INPUT_TMDC
	dep_tristate $w.config.f 61 18 "  Microsoft SideWinder digital joysticks and gamepads" CONFIG_INPUT_SIDEWINDER
	dep_tristate $w.config.f 61 19 "  I-Force USB joysticks and wheels" CONFIG_INPUT_IFORCE_USB
	dep_tristate $w.config.f 61 20 "  I-Force Serial joysticks and wheels" CONFIG_INPUT_IFORCE_232
	dep_tristate $w.config.f 61 21 "  Logitech WingMan Warrior joystick" CONFIG_INPUT_WARRIOR
	dep_tristate $w.config.f 61 22 "  LogiCad3d Magellan/SpaceMouse 6dof controller" CONFIG_INPUT_MAGELLAN
	dep_tristate $w.config.f 61 23 "  SpaceTec SpaceOrb/Avenger 6dof controller" CONFIG_INPUT_SPACEORB
	dep_tristate $w.config.f 61 24 "  SpaceTec SpaceBall 4000 FLX 6dof controller" CONFIG_INPUT_SPACEBALL
	dep_tristate $w.config.f 61 25 "  Gravis Stinger gamepad" CONFIG_INPUT_STINGER
	dep_tristate $w.config.f 61 26 "  Multisystem, Sega Genesis, Saturn joysticks and gamepads" CONFIG_INPUT_DB9
	dep_tristate $w.config.f 61 27 "  Multisystem, NES, SNES, N64, PSX joysticks and gamepads" CONFIG_INPUT_GAMECON
	dep_tristate $w.config.f 61 28 "  Multisystem joysticks via TurboGraFX device" CONFIG_INPUT_TURBOGRAFX
	comment $w.config.f 61 29 "Input core support is needed for joysticks"



	focus $w
	update_active
	global winx; global winy
	if {[winfo exists .menu58] == 0} then {menu58 .menu58 "Character devices"}
	set winx [expr [winfo x .menu58]+30]; set winy [expr [winfo y .menu58]+30]
	if {[winfo exists $w]} then {wm geometry $w +$winx+$winy}
	update idletasks
	if {[winfo exists $w]} then  {$w.config.canvas create window 0 0 -anchor nw -window $w.config.f

	$w.config.canvas configure \
		-width [expr [winfo reqwidth $w.config.f] + 1]\
		-scrollregion "-1 -1 [expr [winfo reqwidth $w.config.f] + 1] \
			 [expr [winfo reqheight $w.config.f] + 1]"

	set winy [expr [winfo reqh $w] - [winfo reqh $w.config.canvas]]
	set scry [expr [winfo screenh $w] / 2]
	set maxy [expr [winfo screenh $w] * 3 / 4]
	set canvtotal [expr [winfo reqh $w.config.f] + 2]
	if [expr $winy + $canvtotal < $maxy] {
		$w.config.canvas configure -height $canvtotal
	} else {
		$w.config.canvas configure -height [expr $scry - $winy]
		}
	}
	update idletasks
	if {[winfo exists $w]} then {
	wm maxsize $w [winfo width $w] [winfo screenheight $w]
	wm minsize $w [winfo width $w] 100

	wm deiconify $w
}
}

proc update_menu61 {} {
	global CONFIG_MODULES
	global CONFIG_INPUT
	global CONFIG_INPUT_GAMEPORT
	if {($CONFIG_INPUT != 0) && ($CONFIG_INPUT == 1 || $CONFIG_INPUT == 2 || $CONFIG_INPUT == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_INPUT]];set CONFIG_INPUT_GAMEPORT [sync_tristate $CONFIG_INPUT_GAMEPORT $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu61.config.f.x0 disabled {y}} else {configure_entry .menu61.config.f.x0 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu61.config.f.x0 disabled {m}} else {configure_entry .menu61.config.f.x0 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu61.config.f.x0 normal {m}} else {configure_entry .menu61.config.f.x0 disabled {m}}; configure_entry .menu61.config.f.x0 normal {n l}} else {configure_entry .menu61.config.f.x0 disabled {y n m l}}
	global CONFIG_INPUT_NS558
	if {($CONFIG_INPUT != 0) && ($CONFIG_INPUT_GAMEPORT == 1 || $CONFIG_INPUT_GAMEPORT == 2 || $CONFIG_INPUT_GAMEPORT == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_INPUT_GAMEPORT]];set CONFIG_INPUT_NS558 [sync_tristate $CONFIG_INPUT_NS558 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu61.config.f.x1 disabled {y}} else {configure_entry .menu61.config.f.x1 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu61.config.f.x1 disabled {m}} else {configure_entry .menu61.config.f.x1 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu61.config.f.x1 normal {m}} else {configure_entry .menu61.config.f.x1 disabled {m}}; configure_entry .menu61.config.f.x1 normal {n l}} else {configure_entry .menu61.config.f.x1 disabled {y n m l}}
	global CONFIG_INPUT_LIGHTNING
	if {($CONFIG_INPUT != 0) && ($CONFIG_INPUT_GAMEPORT == 1 || $CONFIG_INPUT_GAMEPORT == 2 || $CONFIG_INPUT_GAMEPORT == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_INPUT_GAMEPORT]];set CONFIG_INPUT_LIGHTNING [sync_tristate $CONFIG_INPUT_LIGHTNING $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu61.config.f.x2 disabled {y}} else {configure_entry .menu61.config.f.x2 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu61.config.f.x2 disabled {m}} else {configure_entry .menu61.config.f.x2 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu61.config.f.x2 normal {m}} else {configure_entry .menu61.config.f.x2 disabled {m}}; configure_entry .menu61.config.f.x2 normal {n l}} else {configure_entry .menu61.config.f.x2 disabled {y n m l}}
	global CONFIG_INPUT_PCIGAME
	if {($CONFIG_INPUT != 0) && ($CONFIG_INPUT_GAMEPORT == 1 || $CONFIG_INPUT_GAMEPORT == 2 || $CONFIG_INPUT_GAMEPORT == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_INPUT_GAMEPORT]];set CONFIG_INPUT_PCIGAME [sync_tristate $CONFIG_INPUT_PCIGAME $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu61.config.f.x3 disabled {y}} else {configure_entry .menu61.config.f.x3 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu61.config.f.x3 disabled {m}} else {configure_entry .menu61.config.f.x3 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu61.config.f.x3 normal {m}} else {configure_entry .menu61.config.f.x3 disabled {m}}; configure_entry .menu61.config.f.x3 normal {n l}} else {configure_entry .menu61.config.f.x3 disabled {y n m l}}
	global CONFIG_INPUT_CS461X
	if {($CONFIG_INPUT != 0) && ($CONFIG_INPUT_GAMEPORT == 1 || $CONFIG_INPUT_GAMEPORT == 2 || $CONFIG_INPUT_GAMEPORT == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_INPUT_GAMEPORT]];set CONFIG_INPUT_CS461X [sync_tristate $CONFIG_INPUT_CS461X $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu61.config.f.x4 disabled {y}} else {configure_entry .menu61.config.f.x4 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu61.config.f.x4 disabled {m}} else {configure_entry .menu61.config.f.x4 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu61.config.f.x4 normal {m}} else {configure_entry .menu61.config.f.x4 disabled {m}}; configure_entry .menu61.config.f.x4 normal {n l}} else {configure_entry .menu61.config.f.x4 disabled {y n m l}}
	global CONFIG_INPUT_EMU10K1
	if {($CONFIG_INPUT != 0) && ($CONFIG_INPUT_GAMEPORT == 1 || $CONFIG_INPUT_GAMEPORT == 2 || $CONFIG_INPUT_GAMEPORT == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_INPUT_GAMEPORT]];set CONFIG_INPUT_EMU10K1 [sync_tristate $CONFIG_INPUT_EMU10K1 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu61.config.f.x5 disabled {y}} else {configure_entry .menu61.config.f.x5 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu61.config.f.x5 disabled {m}} else {configure_entry .menu61.config.f.x5 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu61.config.f.x5 normal {m}} else {configure_entry .menu61.config.f.x5 disabled {m}}; configure_entry .menu61.config.f.x5 normal {n l}} else {configure_entry .menu61.config.f.x5 disabled {y n m l}}
	global CONFIG_INPUT_SERIO
	if {($CONFIG_INPUT != 0)} then {
	configure_entry .menu61.config.f.x6 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu61.config.f.x6 normal {m}} else {configure_entry .menu61.config.f.x6 disabled {m}}; configure_entry .menu61.config.f.x6 normal {n l}} else {configure_entry .menu61.config.f.x6 disabled {y n m l}}
	global CONFIG_INPUT_SERPORT
	if {($CONFIG_INPUT != 0) && ($CONFIG_INPUT_SERIO == 1 || $CONFIG_INPUT_SERIO == 2 || $CONFIG_INPUT_SERIO == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_INPUT_SERIO]];set CONFIG_INPUT_SERPORT [sync_tristate $CONFIG_INPUT_SERPORT $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu61.config.f.x7 disabled {y}} else {configure_entry .menu61.config.f.x7 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu61.config.f.x7 disabled {m}} else {configure_entry .menu61.config.f.x7 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu61.config.f.x7 normal {m}} else {configure_entry .menu61.config.f.x7 disabled {m}}; configure_entry .menu61.config.f.x7 normal {n l}} else {configure_entry .menu61.config.f.x7 disabled {y n m l}}
	if {($CONFIG_INPUT == 0)} then {configure_entry .menu61.config.f.x8 normal {m}} else {configure_entry .menu61.config.f.x8 disabled {m}}
	if {($CONFIG_INPUT != 0)} then {configure_entry .menu61.config.f.x9 normal {m}} else {configure_entry .menu61.config.f.x9 disabled {m}}
	global CONFIG_INPUT_ANALOG
	if {($CONFIG_INPUT != 0) && ($CONFIG_INPUT == 1 || $CONFIG_INPUT == 2 || $CONFIG_INPUT == 4) && ($CONFIG_INPUT_GAMEPORT == 1 || $CONFIG_INPUT_GAMEPORT == 2 || $CONFIG_INPUT_GAMEPORT == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_INPUT $CONFIG_INPUT_GAMEPORT]];set CONFIG_INPUT_ANALOG [sync_tristate $CONFIG_INPUT_ANALOG $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu61.config.f.x10 disabled {y}} else {configure_entry .menu61.config.f.x10 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu61.config.f.x10 disabled {m}} else {configure_entry .menu61.config.f.x10 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu61.config.f.x10 normal {m}} else {configure_entry .menu61.config.f.x10 disabled {m}}; configure_entry .menu61.config.f.x10 normal {n l}} else {configure_entry .menu61.config.f.x10 disabled {y n m l}}
	global CONFIG_INPUT_A3D
	if {($CONFIG_INPUT != 0) && ($CONFIG_INPUT == 1 || $CONFIG_INPUT == 2 || $CONFIG_INPUT == 4) && ($CONFIG_INPUT_GAMEPORT == 1 || $CONFIG_INPUT_GAMEPORT == 2 || $CONFIG_INPUT_GAMEPORT == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_INPUT $CONFIG_INPUT_GAMEPORT]];set CONFIG_INPUT_A3D [sync_tristate $CONFIG_INPUT_A3D $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu61.config.f.x11 disabled {y}} else {configure_entry .menu61.config.f.x11 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu61.config.f.x11 disabled {m}} else {configure_entry .menu61.config.f.x11 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu61.config.f.x11 normal {m}} else {configure_entry .menu61.config.f.x11 disabled {m}}; configure_entry .menu61.config.f.x11 normal {n l}} else {configure_entry .menu61.config.f.x11 disabled {y n m l}}
	global CONFIG_INPUT_ADI
	if {($CONFIG_INPUT != 0) && ($CONFIG_INPUT == 1 || $CONFIG_INPUT == 2 || $CONFIG_INPUT == 4) && ($CONFIG_INPUT_GAMEPORT == 1 || $CONFIG_INPUT_GAMEPORT == 2 || $CONFIG_INPUT_GAMEPORT == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_INPUT $CONFIG_INPUT_GAMEPORT]];set CONFIG_INPUT_ADI [sync_tristate $CONFIG_INPUT_ADI $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu61.config.f.x12 disabled {y}} else {configure_entry .menu61.config.f.x12 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu61.config.f.x12 disabled {m}} else {configure_entry .menu61.config.f.x12 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu61.config.f.x12 normal {m}} else {configure_entry .menu61.config.f.x12 disabled {m}}; configure_entry .menu61.config.f.x12 normal {n l}} else {configure_entry .menu61.config.f.x12 disabled {y n m l}}
	global CONFIG_INPUT_COBRA
	if {($CONFIG_INPUT != 0) && ($CONFIG_INPUT == 1 || $CONFIG_INPUT == 2 || $CONFIG_INPUT == 4) && ($CONFIG_INPUT_GAMEPORT == 1 || $CONFIG_INPUT_GAMEPORT == 2 || $CONFIG_INPUT_GAMEPORT == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_INPUT $CONFIG_INPUT_GAMEPORT]];set CONFIG_INPUT_COBRA [sync_tristate $CONFIG_INPUT_COBRA $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu61.config.f.x13 disabled {y}} else {configure_entry .menu61.config.f.x13 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu61.config.f.x13 disabled {m}} else {configure_entry .menu61.config.f.x13 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu61.config.f.x13 normal {m}} else {configure_entry .menu61.config.f.x13 disabled {m}}; configure_entry .menu61.config.f.x13 normal {n l}} else {configure_entry .menu61.config.f.x13 disabled {y n m l}}
	global CONFIG_INPUT_GF2K
	if {($CONFIG_INPUT != 0) && ($CONFIG_INPUT == 1 || $CONFIG_INPUT == 2 || $CONFIG_INPUT == 4) && ($CONFIG_INPUT_GAMEPORT == 1 || $CONFIG_INPUT_GAMEPORT == 2 || $CONFIG_INPUT_GAMEPORT == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_INPUT $CONFIG_INPUT_GAMEPORT]];set CONFIG_INPUT_GF2K [sync_tristate $CONFIG_INPUT_GF2K $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu61.config.f.x14 disabled {y}} else {configure_entry .menu61.config.f.x14 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu61.config.f.x14 disabled {m}} else {configure_entry .menu61.config.f.x14 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu61.config.f.x14 normal {m}} else {configure_entry .menu61.config.f.x14 disabled {m}}; configure_entry .menu61.config.f.x14 normal {n l}} else {configure_entry .menu61.config.f.x14 disabled {y n m l}}
	global CONFIG_INPUT_GRIP
	if {($CONFIG_INPUT != 0) && ($CONFIG_INPUT == 1 || $CONFIG_INPUT == 2 || $CONFIG_INPUT == 4) && ($CONFIG_INPUT_GAMEPORT == 1 || $CONFIG_INPUT_GAMEPORT == 2 || $CONFIG_INPUT_GAMEPORT == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_INPUT $CONFIG_INPUT_GAMEPORT]];set CONFIG_INPUT_GRIP [sync_tristate $CONFIG_INPUT_GRIP $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu61.config.f.x15 disabled {y}} else {configure_entry .menu61.config.f.x15 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu61.config.f.x15 disabled {m}} else {configure_entry .menu61.config.f.x15 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu61.config.f.x15 normal {m}} else {configure_entry .menu61.config.f.x15 disabled {m}}; configure_entry .menu61.config.f.x15 normal {n l}} else {configure_entry .menu61.config.f.x15 disabled {y n m l}}
	global CONFIG_INPUT_INTERACT
	if {($CONFIG_INPUT != 0) && ($CONFIG_INPUT == 1 || $CONFIG_INPUT == 2 || $CONFIG_INPUT == 4) && ($CONFIG_INPUT_GAMEPORT == 1 || $CONFIG_INPUT_GAMEPORT == 2 || $CONFIG_INPUT_GAMEPORT == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_INPUT $CONFIG_INPUT_GAMEPORT]];set CONFIG_INPUT_INTERACT [sync_tristate $CONFIG_INPUT_INTERACT $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu61.config.f.x16 disabled {y}} else {configure_entry .menu61.config.f.x16 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu61.config.f.x16 disabled {m}} else {configure_entry .menu61.config.f.x16 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu61.config.f.x16 normal {m}} else {configure_entry .menu61.config.f.x16 disabled {m}}; configure_entry .menu61.config.f.x16 normal {n l}} else {configure_entry .menu61.config.f.x16 disabled {y n m l}}
	global CONFIG_INPUT_TMDC
	if {($CONFIG_INPUT != 0) && ($CONFIG_INPUT == 1 || $CONFIG_INPUT == 2 || $CONFIG_INPUT == 4) && ($CONFIG_INPUT_GAMEPORT == 1 || $CONFIG_INPUT_GAMEPORT == 2 || $CONFIG_INPUT_GAMEPORT == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_INPUT $CONFIG_INPUT_GAMEPORT]];set CONFIG_INPUT_TMDC [sync_tristate $CONFIG_INPUT_TMDC $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu61.config.f.x17 disabled {y}} else {configure_entry .menu61.config.f.x17 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu61.config.f.x17 disabled {m}} else {configure_entry .menu61.config.f.x17 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu61.config.f.x17 normal {m}} else {configure_entry .menu61.config.f.x17 disabled {m}}; configure_entry .menu61.config.f.x17 normal {n l}} else {configure_entry .menu61.config.f.x17 disabled {y n m l}}
	global CONFIG_INPUT_SIDEWINDER
	if {($CONFIG_INPUT != 0) && ($CONFIG_INPUT == 1 || $CONFIG_INPUT == 2 || $CONFIG_INPUT == 4) && ($CONFIG_INPUT_GAMEPORT == 1 || $CONFIG_INPUT_GAMEPORT == 2 || $CONFIG_INPUT_GAMEPORT == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_INPUT $CONFIG_INPUT_GAMEPORT]];set CONFIG_INPUT_SIDEWINDER [sync_tristate $CONFIG_INPUT_SIDEWINDER $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu61.config.f.x18 disabled {y}} else {configure_entry .menu61.config.f.x18 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu61.config.f.x18 disabled {m}} else {configure_entry .menu61.config.f.x18 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu61.config.f.x18 normal {m}} else {configure_entry .menu61.config.f.x18 disabled {m}}; configure_entry .menu61.config.f.x18 normal {n l}} else {configure_entry .menu61.config.f.x18 disabled {y n m l}}
	global CONFIG_USB
	global CONFIG_INPUT_IFORCE_USB
	if {($CONFIG_INPUT != 0) && ($CONFIG_INPUT == 1 || $CONFIG_INPUT == 2 || $CONFIG_INPUT == 4) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_INPUT $CONFIG_USB]];set CONFIG_INPUT_IFORCE_USB [sync_tristate $CONFIG_INPUT_IFORCE_USB $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu61.config.f.x19 disabled {y}} else {configure_entry .menu61.config.f.x19 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu61.config.f.x19 disabled {m}} else {configure_entry .menu61.config.f.x19 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu61.config.f.x19 normal {m}} else {configure_entry .menu61.config.f.x19 disabled {m}}; configure_entry .menu61.config.f.x19 normal {n l}} else {configure_entry .menu61.config.f.x19 disabled {y n m l}}
	global CONFIG_INPUT_IFORCE_232
	if {($CONFIG_INPUT != 0) && ($CONFIG_INPUT == 1 || $CONFIG_INPUT == 2 || $CONFIG_INPUT == 4) && ($CONFIG_INPUT_SERIO == 1 || $CONFIG_INPUT_SERIO == 2 || $CONFIG_INPUT_SERIO == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_INPUT $CONFIG_INPUT_SERIO]];set CONFIG_INPUT_IFORCE_232 [sync_tristate $CONFIG_INPUT_IFORCE_232 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu61.config.f.x20 disabled {y}} else {configure_entry .menu61.config.f.x20 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu61.config.f.x20 disabled {m}} else {configure_entry .menu61.config.f.x20 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu61.config.f.x20 normal {m}} else {configure_entry .menu61.config.f.x20 disabled {m}}; configure_entry .menu61.config.f.x20 normal {n l}} else {configure_entry .menu61.config.f.x20 disabled {y n m l}}
	global CONFIG_INPUT_WARRIOR
	if {($CONFIG_INPUT != 0) && ($CONFIG_INPUT == 1 || $CONFIG_INPUT == 2 || $CONFIG_INPUT == 4) && ($CONFIG_INPUT_SERIO == 1 || $CONFIG_INPUT_SERIO == 2 || $CONFIG_INPUT_SERIO == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_INPUT $CONFIG_INPUT_SERIO]];set CONFIG_INPUT_WARRIOR [sync_tristate $CONFIG_INPUT_WARRIOR $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu61.config.f.x21 disabled {y}} else {configure_entry .menu61.config.f.x21 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu61.config.f.x21 disabled {m}} else {configure_entry .menu61.config.f.x21 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu61.config.f.x21 normal {m}} else {configure_entry .menu61.config.f.x21 disabled {m}}; configure_entry .menu61.config.f.x21 normal {n l}} else {configure_entry .menu61.config.f.x21 disabled {y n m l}}
	global CONFIG_INPUT_MAGELLAN
	if {($CONFIG_INPUT != 0) && ($CONFIG_INPUT == 1 || $CONFIG_INPUT == 2 || $CONFIG_INPUT == 4) && ($CONFIG_INPUT_SERIO == 1 || $CONFIG_INPUT_SERIO == 2 || $CONFIG_INPUT_SERIO == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_INPUT $CONFIG_INPUT_SERIO]];set CONFIG_INPUT_MAGELLAN [sync_tristate $CONFIG_INPUT_MAGELLAN $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu61.config.f.x22 disabled {y}} else {configure_entry .menu61.config.f.x22 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu61.config.f.x22 disabled {m}} else {configure_entry .menu61.config.f.x22 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu61.config.f.x22 normal {m}} else {configure_entry .menu61.config.f.x22 disabled {m}}; configure_entry .menu61.config.f.x22 normal {n l}} else {configure_entry .menu61.config.f.x22 disabled {y n m l}}
	global CONFIG_INPUT_SPACEORB
	if {($CONFIG_INPUT != 0) && ($CONFIG_INPUT == 1 || $CONFIG_INPUT == 2 || $CONFIG_INPUT == 4) && ($CONFIG_INPUT_SERIO == 1 || $CONFIG_INPUT_SERIO == 2 || $CONFIG_INPUT_SERIO == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_INPUT $CONFIG_INPUT_SERIO]];set CONFIG_INPUT_SPACEORB [sync_tristate $CONFIG_INPUT_SPACEORB $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu61.config.f.x23 disabled {y}} else {configure_entry .menu61.config.f.x23 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu61.config.f.x23 disabled {m}} else {configure_entry .menu61.config.f.x23 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu61.config.f.x23 normal {m}} else {configure_entry .menu61.config.f.x23 disabled {m}}; configure_entry .menu61.config.f.x23 normal {n l}} else {configure_entry .menu61.config.f.x23 disabled {y n m l}}
	global CONFIG_INPUT_SPACEBALL
	if {($CONFIG_INPUT != 0) && ($CONFIG_INPUT == 1 || $CONFIG_INPUT == 2 || $CONFIG_INPUT == 4) && ($CONFIG_INPUT_SERIO == 1 || $CONFIG_INPUT_SERIO == 2 || $CONFIG_INPUT_SERIO == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_INPUT $CONFIG_INPUT_SERIO]];set CONFIG_INPUT_SPACEBALL [sync_tristate $CONFIG_INPUT_SPACEBALL $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu61.config.f.x24 disabled {y}} else {configure_entry .menu61.config.f.x24 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu61.config.f.x24 disabled {m}} else {configure_entry .menu61.config.f.x24 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu61.config.f.x24 normal {m}} else {configure_entry .menu61.config.f.x24 disabled {m}}; configure_entry .menu61.config.f.x24 normal {n l}} else {configure_entry .menu61.config.f.x24 disabled {y n m l}}
	global CONFIG_INPUT_STINGER
	if {($CONFIG_INPUT != 0) && ($CONFIG_INPUT == 1 || $CONFIG_INPUT == 2 || $CONFIG_INPUT == 4) && ($CONFIG_INPUT_SERIO == 1 || $CONFIG_INPUT_SERIO == 2 || $CONFIG_INPUT_SERIO == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_INPUT $CONFIG_INPUT_SERIO]];set CONFIG_INPUT_STINGER [sync_tristate $CONFIG_INPUT_STINGER $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu61.config.f.x25 disabled {y}} else {configure_entry .menu61.config.f.x25 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu61.config.f.x25 disabled {m}} else {configure_entry .menu61.config.f.x25 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu61.config.f.x25 normal {m}} else {configure_entry .menu61.config.f.x25 disabled {m}}; configure_entry .menu61.config.f.x25 normal {n l}} else {configure_entry .menu61.config.f.x25 disabled {y n m l}}
	global CONFIG_PARPORT
	global CONFIG_INPUT_DB9
	if {($CONFIG_INPUT != 0) && ($CONFIG_INPUT == 1 || $CONFIG_INPUT == 2 || $CONFIG_INPUT == 4) && ($CONFIG_PARPORT == 1 || $CONFIG_PARPORT == 2 || $CONFIG_PARPORT == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_INPUT $CONFIG_PARPORT]];set CONFIG_INPUT_DB9 [sync_tristate $CONFIG_INPUT_DB9 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu61.config.f.x26 disabled {y}} else {configure_entry .menu61.config.f.x26 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu61.config.f.x26 disabled {m}} else {configure_entry .menu61.config.f.x26 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu61.config.f.x26 normal {m}} else {configure_entry .menu61.config.f.x26 disabled {m}}; configure_entry .menu61.config.f.x26 normal {n l}} else {configure_entry .menu61.config.f.x26 disabled {y n m l}}
	global CONFIG_INPUT_GAMECON
	if {($CONFIG_INPUT != 0) && ($CONFIG_INPUT == 1 || $CONFIG_INPUT == 2 || $CONFIG_INPUT == 4) && ($CONFIG_PARPORT == 1 || $CONFIG_PARPORT == 2 || $CONFIG_PARPORT == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_INPUT $CONFIG_PARPORT]];set CONFIG_INPUT_GAMECON [sync_tristate $CONFIG_INPUT_GAMECON $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu61.config.f.x27 disabled {y}} else {configure_entry .menu61.config.f.x27 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu61.config.f.x27 disabled {m}} else {configure_entry .menu61.config.f.x27 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu61.config.f.x27 normal {m}} else {configure_entry .menu61.config.f.x27 disabled {m}}; configure_entry .menu61.config.f.x27 normal {n l}} else {configure_entry .menu61.config.f.x27 disabled {y n m l}}
	global CONFIG_INPUT_TURBOGRAFX
	if {($CONFIG_INPUT != 0) && ($CONFIG_INPUT == 1 || $CONFIG_INPUT == 2 || $CONFIG_INPUT == 4) && ($CONFIG_PARPORT == 1 || $CONFIG_PARPORT == 2 || $CONFIG_PARPORT == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_INPUT $CONFIG_PARPORT]];set CONFIG_INPUT_TURBOGRAFX [sync_tristate $CONFIG_INPUT_TURBOGRAFX $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu61.config.f.x28 disabled {y}} else {configure_entry .menu61.config.f.x28 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu61.config.f.x28 disabled {m}} else {configure_entry .menu61.config.f.x28 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu61.config.f.x28 normal {m}} else {configure_entry .menu61.config.f.x28 disabled {m}}; configure_entry .menu61.config.f.x28 normal {n l}} else {configure_entry .menu61.config.f.x28 disabled {y n m l}}
	if {($CONFIG_INPUT == 0)} then {configure_entry .menu61.config.f.x29 normal {m}} else {configure_entry .menu61.config.f.x29 disabled {m}}
}


proc update_define_menu61 {} {
	update_define_mainmenu
	global CONFIG_MODULES
	global CONFIG_INPUT_SERIO
	global CONFIG_INPUT_GAMEPORT
set CONFIG_INPUT_SERIO [expr $CONFIG_INPUT_SERIO|16]
	global CONFIG_INPUT
	if {($CONFIG_INPUT != 0) && ($CONFIG_INPUT == 1 || $CONFIG_INPUT == 2 || $CONFIG_INPUT == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_INPUT]]; set CONFIG_INPUT_GAMEPORT [sync_tristate $CONFIG_INPUT_GAMEPORT $tmpvar_dep]; set CONFIG_INPUT_GAMEPORT [expr $CONFIG_INPUT_GAMEPORT&15]}
	global CONFIG_INPUT_NS558
	if {($CONFIG_INPUT != 0) && ($CONFIG_INPUT_GAMEPORT == 1 || $CONFIG_INPUT_GAMEPORT == 2 || $CONFIG_INPUT_GAMEPORT == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_INPUT_GAMEPORT]]; set CONFIG_INPUT_NS558 [sync_tristate $CONFIG_INPUT_NS558 $tmpvar_dep]; set CONFIG_INPUT_NS558 [expr $CONFIG_INPUT_NS558&15]}
	global CONFIG_INPUT_LIGHTNING
	if {($CONFIG_INPUT != 0) && ($CONFIG_INPUT_GAMEPORT == 1 || $CONFIG_INPUT_GAMEPORT == 2 || $CONFIG_INPUT_GAMEPORT == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_INPUT_GAMEPORT]]; set CONFIG_INPUT_LIGHTNING [sync_tristate $CONFIG_INPUT_LIGHTNING $tmpvar_dep]; set CONFIG_INPUT_LIGHTNING [expr $CONFIG_INPUT_LIGHTNING&15]}
	global CONFIG_INPUT_PCIGAME
	if {($CONFIG_INPUT != 0) && ($CONFIG_INPUT_GAMEPORT == 1 || $CONFIG_INPUT_GAMEPORT == 2 || $CONFIG_INPUT_GAMEPORT == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_INPUT_GAMEPORT]]; set CONFIG_INPUT_PCIGAME [sync_tristate $CONFIG_INPUT_PCIGAME $tmpvar_dep]; set CONFIG_INPUT_PCIGAME [expr $CONFIG_INPUT_PCIGAME&15]}
	global CONFIG_INPUT_CS461X
	if {($CONFIG_INPUT != 0) && ($CONFIG_INPUT_GAMEPORT == 1 || $CONFIG_INPUT_GAMEPORT == 2 || $CONFIG_INPUT_GAMEPORT == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_INPUT_GAMEPORT]]; set CONFIG_INPUT_CS461X [sync_tristate $CONFIG_INPUT_CS461X $tmpvar_dep]; set CONFIG_INPUT_CS461X [expr $CONFIG_INPUT_CS461X&15]}
	global CONFIG_INPUT_EMU10K1
	if {($CONFIG_INPUT != 0) && ($CONFIG_INPUT_GAMEPORT == 1 || $CONFIG_INPUT_GAMEPORT == 2 || $CONFIG_INPUT_GAMEPORT == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_INPUT_GAMEPORT]]; set CONFIG_INPUT_EMU10K1 [sync_tristate $CONFIG_INPUT_EMU10K1 $tmpvar_dep]; set CONFIG_INPUT_EMU10K1 [expr $CONFIG_INPUT_EMU10K1&15]}
	if {($CONFIG_INPUT != 0)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_INPUT_SERIO == 2)} then {set CONFIG_INPUT_SERIO 1}; set CONFIG_INPUT_SERIO [expr $CONFIG_INPUT_SERIO&15]}
	global CONFIG_INPUT_SERPORT
	if {($CONFIG_INPUT != 0) && ($CONFIG_INPUT_SERIO == 1 || $CONFIG_INPUT_SERIO == 2 || $CONFIG_INPUT_SERIO == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_INPUT_SERIO]]; set CONFIG_INPUT_SERPORT [sync_tristate $CONFIG_INPUT_SERPORT $tmpvar_dep]; set CONFIG_INPUT_SERPORT [expr $CONFIG_INPUT_SERPORT&15]}
	if {($CONFIG_INPUT == 0)} then {	global CONSTANT_N
set CONFIG_INPUT_GAMEPORT $CONSTANT_N }
	global CONFIG_INPUT_ANALOG
	if {($CONFIG_INPUT != 0) && ($CONFIG_INPUT == 1 || $CONFIG_INPUT == 2 || $CONFIG_INPUT == 4) && ($CONFIG_INPUT_GAMEPORT == 1 || $CONFIG_INPUT_GAMEPORT == 2 || $CONFIG_INPUT_GAMEPORT == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_INPUT $CONFIG_INPUT_GAMEPORT]]; set CONFIG_INPUT_ANALOG [sync_tristate $CONFIG_INPUT_ANALOG $tmpvar_dep]; set CONFIG_INPUT_ANALOG [expr $CONFIG_INPUT_ANALOG&15]}
	global CONFIG_INPUT_A3D
	if {($CONFIG_INPUT != 0) && ($CONFIG_INPUT == 1 || $CONFIG_INPUT == 2 || $CONFIG_INPUT == 4) && ($CONFIG_INPUT_GAMEPORT == 1 || $CONFIG_INPUT_GAMEPORT == 2 || $CONFIG_INPUT_GAMEPORT == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_INPUT $CONFIG_INPUT_GAMEPORT]]; set CONFIG_INPUT_A3D [sync_tristate $CONFIG_INPUT_A3D $tmpvar_dep]; set CONFIG_INPUT_A3D [expr $CONFIG_INPUT_A3D&15]}
	global CONFIG_INPUT_ADI
	if {($CONFIG_INPUT != 0) && ($CONFIG_INPUT == 1 || $CONFIG_INPUT == 2 || $CONFIG_INPUT == 4) && ($CONFIG_INPUT_GAMEPORT == 1 || $CONFIG_INPUT_GAMEPORT == 2 || $CONFIG_INPUT_GAMEPORT == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_INPUT $CONFIG_INPUT_GAMEPORT]]; set CONFIG_INPUT_ADI [sync_tristate $CONFIG_INPUT_ADI $tmpvar_dep]; set CONFIG_INPUT_ADI [expr $CONFIG_INPUT_ADI&15]}
	global CONFIG_INPUT_COBRA
	if {($CONFIG_INPUT != 0) && ($CONFIG_INPUT == 1 || $CONFIG_INPUT == 2 || $CONFIG_INPUT == 4) && ($CONFIG_INPUT_GAMEPORT == 1 || $CONFIG_INPUT_GAMEPORT == 2 || $CONFIG_INPUT_GAMEPORT == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_INPUT $CONFIG_INPUT_GAMEPORT]]; set CONFIG_INPUT_COBRA [sync_tristate $CONFIG_INPUT_COBRA $tmpvar_dep]; set CONFIG_INPUT_COBRA [expr $CONFIG_INPUT_COBRA&15]}
	global CONFIG_INPUT_GF2K
	if {($CONFIG_INPUT != 0) && ($CONFIG_INPUT == 1 || $CONFIG_INPUT == 2 || $CONFIG_INPUT == 4) && ($CONFIG_INPUT_GAMEPORT == 1 || $CONFIG_INPUT_GAMEPORT == 2 || $CONFIG_INPUT_GAMEPORT == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_INPUT $CONFIG_INPUT_GAMEPORT]]; set CONFIG_INPUT_GF2K [sync_tristate $CONFIG_INPUT_GF2K $tmpvar_dep]; set CONFIG_INPUT_GF2K [expr $CONFIG_INPUT_GF2K&15]}
	global CONFIG_INPUT_GRIP
	if {($CONFIG_INPUT != 0) && ($CONFIG_INPUT == 1 || $CONFIG_INPUT == 2 || $CONFIG_INPUT == 4) && ($CONFIG_INPUT_GAMEPORT == 1 || $CONFIG_INPUT_GAMEPORT == 2 || $CONFIG_INPUT_GAMEPORT == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_INPUT $CONFIG_INPUT_GAMEPORT]]; set CONFIG_INPUT_GRIP [sync_tristate $CONFIG_INPUT_GRIP $tmpvar_dep]; set CONFIG_INPUT_GRIP [expr $CONFIG_INPUT_GRIP&15]}
	global CONFIG_INPUT_INTERACT
	if {($CONFIG_INPUT != 0) && ($CONFIG_INPUT == 1 || $CONFIG_INPUT == 2 || $CONFIG_INPUT == 4) && ($CONFIG_INPUT_GAMEPORT == 1 || $CONFIG_INPUT_GAMEPORT == 2 || $CONFIG_INPUT_GAMEPORT == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_INPUT $CONFIG_INPUT_GAMEPORT]]; set CONFIG_INPUT_INTERACT [sync_tristate $CONFIG_INPUT_INTERACT $tmpvar_dep]; set CONFIG_INPUT_INTERACT [expr $CONFIG_INPUT_INTERACT&15]}
	global CONFIG_INPUT_TMDC
	if {($CONFIG_INPUT != 0) && ($CONFIG_INPUT == 1 || $CONFIG_INPUT == 2 || $CONFIG_INPUT == 4) && ($CONFIG_INPUT_GAMEPORT == 1 || $CONFIG_INPUT_GAMEPORT == 2 || $CONFIG_INPUT_GAMEPORT == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_INPUT $CONFIG_INPUT_GAMEPORT]]; set CONFIG_INPUT_TMDC [sync_tristate $CONFIG_INPUT_TMDC $tmpvar_dep]; set CONFIG_INPUT_TMDC [expr $CONFIG_INPUT_TMDC&15]}
	global CONFIG_INPUT_SIDEWINDER
	if {($CONFIG_INPUT != 0) && ($CONFIG_INPUT == 1 || $CONFIG_INPUT == 2 || $CONFIG_INPUT == 4) && ($CONFIG_INPUT_GAMEPORT == 1 || $CONFIG_INPUT_GAMEPORT == 2 || $CONFIG_INPUT_GAMEPORT == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_INPUT $CONFIG_INPUT_GAMEPORT]]; set CONFIG_INPUT_SIDEWINDER [sync_tristate $CONFIG_INPUT_SIDEWINDER $tmpvar_dep]; set CONFIG_INPUT_SIDEWINDER [expr $CONFIG_INPUT_SIDEWINDER&15]}
	global CONFIG_USB
	global CONFIG_INPUT_IFORCE_USB
	if {($CONFIG_INPUT != 0) && ($CONFIG_INPUT == 1 || $CONFIG_INPUT == 2 || $CONFIG_INPUT == 4) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_INPUT $CONFIG_USB]]; set CONFIG_INPUT_IFORCE_USB [sync_tristate $CONFIG_INPUT_IFORCE_USB $tmpvar_dep]; set CONFIG_INPUT_IFORCE_USB [expr $CONFIG_INPUT_IFORCE_USB&15]}
	global CONFIG_INPUT_IFORCE_232
	if {($CONFIG_INPUT != 0) && ($CONFIG_INPUT == 1 || $CONFIG_INPUT == 2 || $CONFIG_INPUT == 4) && ($CONFIG_INPUT_SERIO == 1 || $CONFIG_INPUT_SERIO == 2 || $CONFIG_INPUT_SERIO == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_INPUT $CONFIG_INPUT_SERIO]]; set CONFIG_INPUT_IFORCE_232 [sync_tristate $CONFIG_INPUT_IFORCE_232 $tmpvar_dep]; set CONFIG_INPUT_IFORCE_232 [expr $CONFIG_INPUT_IFORCE_232&15]}
	global CONFIG_INPUT_WARRIOR
	if {($CONFIG_INPUT != 0) && ($CONFIG_INPUT == 1 || $CONFIG_INPUT == 2 || $CONFIG_INPUT == 4) && ($CONFIG_INPUT_SERIO == 1 || $CONFIG_INPUT_SERIO == 2 || $CONFIG_INPUT_SERIO == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_INPUT $CONFIG_INPUT_SERIO]]; set CONFIG_INPUT_WARRIOR [sync_tristate $CONFIG_INPUT_WARRIOR $tmpvar_dep]; set CONFIG_INPUT_WARRIOR [expr $CONFIG_INPUT_WARRIOR&15]}
	global CONFIG_INPUT_MAGELLAN
	if {($CONFIG_INPUT != 0) && ($CONFIG_INPUT == 1 || $CONFIG_INPUT == 2 || $CONFIG_INPUT == 4) && ($CONFIG_INPUT_SERIO == 1 || $CONFIG_INPUT_SERIO == 2 || $CONFIG_INPUT_SERIO == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_INPUT $CONFIG_INPUT_SERIO]]; set CONFIG_INPUT_MAGELLAN [sync_tristate $CONFIG_INPUT_MAGELLAN $tmpvar_dep]; set CONFIG_INPUT_MAGELLAN [expr $CONFIG_INPUT_MAGELLAN&15]}
	global CONFIG_INPUT_SPACEORB
	if {($CONFIG_INPUT != 0) && ($CONFIG_INPUT == 1 || $CONFIG_INPUT == 2 || $CONFIG_INPUT == 4) && ($CONFIG_INPUT_SERIO == 1 || $CONFIG_INPUT_SERIO == 2 || $CONFIG_INPUT_SERIO == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_INPUT $CONFIG_INPUT_SERIO]]; set CONFIG_INPUT_SPACEORB [sync_tristate $CONFIG_INPUT_SPACEORB $tmpvar_dep]; set CONFIG_INPUT_SPACEORB [expr $CONFIG_INPUT_SPACEORB&15]}
	global CONFIG_INPUT_SPACEBALL
	if {($CONFIG_INPUT != 0) && ($CONFIG_INPUT == 1 || $CONFIG_INPUT == 2 || $CONFIG_INPUT == 4) && ($CONFIG_INPUT_SERIO == 1 || $CONFIG_INPUT_SERIO == 2 || $CONFIG_INPUT_SERIO == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_INPUT $CONFIG_INPUT_SERIO]]; set CONFIG_INPUT_SPACEBALL [sync_tristate $CONFIG_INPUT_SPACEBALL $tmpvar_dep]; set CONFIG_INPUT_SPACEBALL [expr $CONFIG_INPUT_SPACEBALL&15]}
	global CONFIG_INPUT_STINGER
	if {($CONFIG_INPUT != 0) && ($CONFIG_INPUT == 1 || $CONFIG_INPUT == 2 || $CONFIG_INPUT == 4) && ($CONFIG_INPUT_SERIO == 1 || $CONFIG_INPUT_SERIO == 2 || $CONFIG_INPUT_SERIO == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_INPUT $CONFIG_INPUT_SERIO]]; set CONFIG_INPUT_STINGER [sync_tristate $CONFIG_INPUT_STINGER $tmpvar_dep]; set CONFIG_INPUT_STINGER [expr $CONFIG_INPUT_STINGER&15]}
	global CONFIG_PARPORT
	global CONFIG_INPUT_DB9
	if {($CONFIG_INPUT != 0) && ($CONFIG_INPUT == 1 || $CONFIG_INPUT == 2 || $CONFIG_INPUT == 4) && ($CONFIG_PARPORT == 1 || $CONFIG_PARPORT == 2 || $CONFIG_PARPORT == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_INPUT $CONFIG_PARPORT]]; set CONFIG_INPUT_DB9 [sync_tristate $CONFIG_INPUT_DB9 $tmpvar_dep]; set CONFIG_INPUT_DB9 [expr $CONFIG_INPUT_DB9&15]}
	global CONFIG_INPUT_GAMECON
	if {($CONFIG_INPUT != 0) && ($CONFIG_INPUT == 1 || $CONFIG_INPUT == 2 || $CONFIG_INPUT == 4) && ($CONFIG_PARPORT == 1 || $CONFIG_PARPORT == 2 || $CONFIG_PARPORT == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_INPUT $CONFIG_PARPORT]]; set CONFIG_INPUT_GAMECON [sync_tristate $CONFIG_INPUT_GAMECON $tmpvar_dep]; set CONFIG_INPUT_GAMECON [expr $CONFIG_INPUT_GAMECON&15]}
	global CONFIG_INPUT_TURBOGRAFX
	if {($CONFIG_INPUT != 0) && ($CONFIG_INPUT == 1 || $CONFIG_INPUT == 2 || $CONFIG_INPUT == 4) && ($CONFIG_PARPORT == 1 || $CONFIG_PARPORT == 2 || $CONFIG_PARPORT == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_INPUT $CONFIG_PARPORT]]; set CONFIG_INPUT_TURBOGRAFX [sync_tristate $CONFIG_INPUT_TURBOGRAFX $tmpvar_dep]; set CONFIG_INPUT_TURBOGRAFX [expr $CONFIG_INPUT_TURBOGRAFX&15]}
}


proc menu62 {w title} {
	set oldFocus [focus]
	catch {focus .menu58}
	catch {destroy $w; unregister_active 62}
	toplevel $w -class Dialog
	wm withdraw $w
	global active_menus
	set active_menus [lsort -integer [linsert $active_menus end 62]]
	message $w.m -width 400 -aspect 300 -text \
		"Controller Area Network Cards/Chips"  -relief raised
	pack $w.m -pady 10 -side top -padx 10
	wm title $w "Controller Area Network Cards/Chips" 

	bind $w <Escape> "catch {focus $oldFocus}; destroy $w; unregister_active 62; break"
	set nextscript "catch {focus $oldFocus}; destroy $w; unregister_active 62; menu63 .menu63 \"$title\""
	frame $w.f
	button $w.f.back -text "OK" \
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 62"
	button $w.f.next -text "Next" -underline 0\
		-width 15 -command $nextscript
	bind all <Alt-n> $nextscript
	button $w.f.prev -text "Prev" -underline 0\
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 62; menu61 .menu61 \"$title\""
	bind $w <Alt-p> "catch {focus $oldFocus}; destroy $w; unregister_active 62; menu61 .menu61 \"$title\";break"
	pack $w.f.back $w.f.next $w.f.prev -side left -expand on
	pack $w.f -pady 10 -side bottom -anchor w -fill x
	frame $w.topline -relief ridge -borderwidth 2 -height 2
	pack $w.topline -side top -fill x

	frame $w.botline -relief ridge -borderwidth 2 -height 2
	pack $w.botline -side bottom -fill x

	frame $w.config
	pack $w.config -fill y -expand on

	scrollbar $w.config.vscroll -command "$w.config.canvas yview"
	pack $w.config.vscroll -side right -fill y

	canvas $w.config.canvas -height 1\
		-relief flat -borderwidth 0 -yscrollcommand "$w.config.vscroll set" \
		-width [expr [winfo screenwidth .] * 1 / 2] 
	frame $w.config.f
	bind $w <Key-Down> "$w.config.canvas yview scroll  1 unit;break;"
	bind $w <Key-Up> "$w.config.canvas yview scroll  -1 unit;break;"
	bind $w <Key-Next> "$w.config.canvas yview scroll  1 page;break;"
	bind $w <Key-Prior> "$w.config.canvas yview scroll  -1 page;break;"
	bind $w <Key-Home> "$w.config.canvas yview moveto 0;break;"
	bind $w <Key-End> "$w.config.canvas yview moveto 1 ;break;"
	pack $w.config.canvas -side right -fill y


	tristate $w.config.f 62 0 "can4linux Support" CONFIG_CAN4LINUX
	tristate $w.config.f 62 1 "  AT-CAN-MINI ISA" CONFIG_CAN_ATCANMINI
	tristate $w.config.f 62 2 "  CntrlLink PC104" CONFIG_CAN_CCPC104
	tristate $w.config.f 62 3 "  ColdFire Flex CAN" CONFIG_CAN_MCF5282
	tristate $w.config.f 62 4 "  CPC-PCI" CONFIG_CAN_CPC_PCI
	tristate $w.config.f 62 5 "  I+ME Slimline ISA" CONFIG_CAN_IME_SLIMLINE



	focus $w
	update_active
	global winx; global winy
	if {[winfo exists .menu58] == 0} then {menu58 .menu58 "Character devices"}
	set winx [expr [winfo x .menu58]+30]; set winy [expr [winfo y .menu58]+30]
	if {[winfo exists $w]} then {wm geometry $w +$winx+$winy}
	update idletasks
	if {[winfo exists $w]} then  {$w.config.canvas create window 0 0 -anchor nw -window $w.config.f

	$w.config.canvas configure \
		-width [expr [winfo reqwidth $w.config.f] + 1]\
		-scrollregion "-1 -1 [expr [winfo reqwidth $w.config.f] + 1] \
			 [expr [winfo reqheight $w.config.f] + 1]"

	set winy [expr [winfo reqh $w] - [winfo reqh $w.config.canvas]]
	set scry [expr [winfo screenh $w] / 2]
	set maxy [expr [winfo screenh $w] * 3 / 4]
	set canvtotal [expr [winfo reqh $w.config.f] + 2]
	if [expr $winy + $canvtotal < $maxy] {
		$w.config.canvas configure -height $canvtotal
	} else {
		$w.config.canvas configure -height [expr $scry - $winy]
		}
	}
	update idletasks
	if {[winfo exists $w]} then {
	wm maxsize $w [winfo width $w] [winfo screenheight $w]
	wm minsize $w [winfo width $w] 100

	wm deiconify $w
}
}

proc update_menu62 {} {
	global CONFIG_CAN4LINUX
	global CONFIG_MODULES

	if {($CONFIG_MODULES == 1)} then {configure_entry .menu62.config.f.x0 normal {m}} else {configure_entry .menu62.config.f.x0 disabled {m}}
	global CONFIG_CAN_ATCANMINI
	if {($CONFIG_CAN4LINUX != 0)} then {
	configure_entry .menu62.config.f.x1 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu62.config.f.x1 normal {m}} else {configure_entry .menu62.config.f.x1 disabled {m}}; configure_entry .menu62.config.f.x1 normal {n l}} else {configure_entry .menu62.config.f.x1 disabled {y n m l}}
	global CONFIG_CAN_CCPC104
	if {($CONFIG_CAN4LINUX != 0)} then {
	configure_entry .menu62.config.f.x2 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu62.config.f.x2 normal {m}} else {configure_entry .menu62.config.f.x2 disabled {m}}; configure_entry .menu62.config.f.x2 normal {n l}} else {configure_entry .menu62.config.f.x2 disabled {y n m l}}
	global CONFIG_CAN_MCF5282
	if {($CONFIG_CAN4LINUX != 0)} then {
	configure_entry .menu62.config.f.x3 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu62.config.f.x3 normal {m}} else {configure_entry .menu62.config.f.x3 disabled {m}}; configure_entry .menu62.config.f.x3 normal {n l}} else {configure_entry .menu62.config.f.x3 disabled {y n m l}}
	global CONFIG_CAN_CPC_PCI
	if {($CONFIG_CAN4LINUX != 0)} then {
	configure_entry .menu62.config.f.x4 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu62.config.f.x4 normal {m}} else {configure_entry .menu62.config.f.x4 disabled {m}}; configure_entry .menu62.config.f.x4 normal {n l}} else {configure_entry .menu62.config.f.x4 disabled {y n m l}}
	global CONFIG_CAN_IME_SLIMLINE
	if {($CONFIG_CAN4LINUX != 0)} then {
	configure_entry .menu62.config.f.x5 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu62.config.f.x5 normal {m}} else {configure_entry .menu62.config.f.x5 disabled {m}}; configure_entry .menu62.config.f.x5 normal {n l}} else {configure_entry .menu62.config.f.x5 disabled {y n m l}}
}


proc update_define_menu62 {} {
	update_define_mainmenu
	global CONFIG_MODULES
	global CONFIG_CAN4LINUX
	global CONFIG_CAN_ATCANMINI
	global CONFIG_CAN_CCPC104
	global CONFIG_CAN_MCF5282
	global CONFIG_CAN_CPC_PCI
	global CONFIG_CAN_IME_SLIMLINE
set CONFIG_CAN_ATCANMINI [expr $CONFIG_CAN_ATCANMINI|16]
set CONFIG_CAN_CCPC104 [expr $CONFIG_CAN_CCPC104|16]
set CONFIG_CAN_MCF5282 [expr $CONFIG_CAN_MCF5282|16]
set CONFIG_CAN_CPC_PCI [expr $CONFIG_CAN_CPC_PCI|16]
set CONFIG_CAN_IME_SLIMLINE [expr $CONFIG_CAN_IME_SLIMLINE|16]

	if {($CONFIG_MODULES == 0)} then {if {($CONFIG_CAN4LINUX == 2)} then {set CONFIG_CAN4LINUX 1}}
	if {($CONFIG_CAN4LINUX != 0)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_CAN_ATCANMINI == 2)} then {set CONFIG_CAN_ATCANMINI 1}; set CONFIG_CAN_ATCANMINI [expr $CONFIG_CAN_ATCANMINI&15]}
	if {($CONFIG_CAN4LINUX != 0)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_CAN_CCPC104 == 2)} then {set CONFIG_CAN_CCPC104 1}; set CONFIG_CAN_CCPC104 [expr $CONFIG_CAN_CCPC104&15]}
	if {($CONFIG_CAN4LINUX != 0)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_CAN_MCF5282 == 2)} then {set CONFIG_CAN_MCF5282 1}; set CONFIG_CAN_MCF5282 [expr $CONFIG_CAN_MCF5282&15]}
	if {($CONFIG_CAN4LINUX != 0)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_CAN_CPC_PCI == 2)} then {set CONFIG_CAN_CPC_PCI 1}; set CONFIG_CAN_CPC_PCI [expr $CONFIG_CAN_CPC_PCI&15]}
	if {($CONFIG_CAN4LINUX != 0)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_CAN_IME_SLIMLINE == 2)} then {set CONFIG_CAN_IME_SLIMLINE 1}; set CONFIG_CAN_IME_SLIMLINE [expr $CONFIG_CAN_IME_SLIMLINE&15]}
}


proc menu63 {w title} {
	set oldFocus [focus]
	catch {focus .menu58}
	catch {destroy $w; unregister_active 63}
	toplevel $w -class Dialog
	wm withdraw $w
	global active_menus
	set active_menus [lsort -integer [linsert $active_menus end 63]]
	message $w.m -width 400 -aspect 300 -text \
		"Watchdog Cards"  -relief raised
	pack $w.m -pady 10 -side top -padx 10
	wm title $w "Watchdog Cards" 

	bind $w <Escape> "catch {focus $oldFocus}; destroy $w; unregister_active 63; break"
	set nextscript "catch {focus $oldFocus}; destroy $w; unregister_active 63; menu64 .menu64 \"$title\""
	frame $w.f
	button $w.f.back -text "OK" \
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 63"
	button $w.f.next -text "Next" -underline 0\
		-width 15 -command $nextscript
	bind all <Alt-n> $nextscript
	button $w.f.prev -text "Prev" -underline 0\
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 63; menu62 .menu62 \"$title\""
	bind $w <Alt-p> "catch {focus $oldFocus}; destroy $w; unregister_active 63; menu62 .menu62 \"$title\";break"
	pack $w.f.back $w.f.next $w.f.prev -side left -expand on
	pack $w.f -pady 10 -side bottom -anchor w -fill x
	frame $w.topline -relief ridge -borderwidth 2 -height 2
	pack $w.topline -side top -fill x

	frame $w.botline -relief ridge -borderwidth 2 -height 2
	pack $w.botline -side bottom -fill x

	frame $w.config
	pack $w.config -fill y -expand on

	scrollbar $w.config.vscroll -command "$w.config.canvas yview"
	pack $w.config.vscroll -side right -fill y

	canvas $w.config.canvas -height 1\
		-relief flat -borderwidth 0 -yscrollcommand "$w.config.vscroll set" \
		-width [expr [winfo screenwidth .] * 1 / 2] 
	frame $w.config.f
	bind $w <Key-Down> "$w.config.canvas yview scroll  1 unit;break;"
	bind $w <Key-Up> "$w.config.canvas yview scroll  -1 unit;break;"
	bind $w <Key-Next> "$w.config.canvas yview scroll  1 page;break;"
	bind $w <Key-Prior> "$w.config.canvas yview scroll  -1 page;break;"
	bind $w <Key-Home> "$w.config.canvas yview moveto 0;break;"
	bind $w <Key-End> "$w.config.canvas yview moveto 1 ;break;"
	pack $w.config.canvas -side right -fill y


	bool $w.config.f 63 0 "Watchdog Timer Support" CONFIG_WATCHDOG
	bool $w.config.f 63 1 "  Disable watchdog shutdown on close" CONFIG_WATCHDOG_NOWAYOUT
	tristate $w.config.f 63 2 "  Acquire SBC Watchdog Timer" CONFIG_ACQUIRE_WDT
	tristate $w.config.f 63 3 "  Advantech SBC Watchdog Timer" CONFIG_ADVANTECH_WDT
	tristate $w.config.f 63 4 "  ALi M7101 PMU on ALi 1535D+ Watchdog Timer" CONFIG_ALIM1535_WDT
	tristate $w.config.f 63 5 "  ALi M7101 PMU Watchdog Timer" CONFIG_ALIM7101_WDT
	tristate $w.config.f 63 6 "  AMD \"Elan\" SC520 Watchdog Timer" CONFIG_SC520_WDT
	tristate $w.config.f 63 7 "  Berkshire Products PC Watchdog" CONFIG_PCWATCHDOG
	tristate $w.config.f 63 8 "  DC21285 watchdog" CONFIG_21285_WATCHDOG
	tristate $w.config.f 63 9 "  NetWinder WB83C977 watchdog" CONFIG_977_WATCHDOG
	tristate $w.config.f 63 10 "  Eurotech CPU-1220/1410 Watchdog Timer" CONFIG_EUROTECH_WDT
	tristate $w.config.f 63 11 "  IB700 SBC Watchdog Timer" CONFIG_IB700_WDT
	tristate $w.config.f 63 12 "  ICP ELectronics Wafer 5823 Watchdog" CONFIG_WAFER_WDT
	tristate $w.config.f 63 13 "  Intel i810 TCO timer / Watchdog" CONFIG_I810_TCO
	tristate $w.config.f 63 14 "  Mixcom Watchdog" CONFIG_MIXCOMWD
	tristate $w.config.f 63 15 "  SBC-60XX Watchdog Timer" CONFIG_60XX_WDT
	dep_tristate $w.config.f 63 16 "  SC1200 Watchdog Timer (EXPERIMENTAL)" CONFIG_SC1200_WDT
	tristate $w.config.f 63 17 "  NatSemi SCx200 Watchdog" CONFIG_SCx200_WDT
	tristate $w.config.f 63 18 "  Software Watchdog" CONFIG_SOFT_WATCHDOG
	tristate $w.config.f 63 19 "  W83877F (EMACS) Watchdog Timer" CONFIG_W83877F_WDT
	tristate $w.config.f 63 20 "  WDT Watchdog timer" CONFIG_WDT
	tristate $w.config.f 63 21 "  WDT PCI Watchdog timer" CONFIG_WDTPCI
	bool $w.config.f 63 22 "    WDT501 features" CONFIG_WDT_501
	bool $w.config.f 63 23 "      Fan Tachometer" CONFIG_WDT_501_FAN
	tristate $w.config.f 63 24 "  ZF MachZ Watchdog" CONFIG_MACHZ_WDT
	dep_tristate $w.config.f 63 25 "  AMD 766/768 TCO Timer/Watchdog" CONFIG_AMD7XX_TCO



	focus $w
	update_active
	global winx; global winy
	if {[winfo exists .menu58] == 0} then {menu58 .menu58 "Character devices"}
	set winx [expr [winfo x .menu58]+30]; set winy [expr [winfo y .menu58]+30]
	if {[winfo exists $w]} then {wm geometry $w +$winx+$winy}
	update idletasks
	if {[winfo exists $w]} then  {$w.config.canvas create window 0 0 -anchor nw -window $w.config.f

	$w.config.canvas configure \
		-width [expr [winfo reqwidth $w.config.f] + 1]\
		-scrollregion "-1 -1 [expr [winfo reqwidth $w.config.f] + 1] \
			 [expr [winfo reqheight $w.config.f] + 1]"

	set winy [expr [winfo reqh $w] - [winfo reqh $w.config.canvas]]
	set scry [expr [winfo screenh $w] / 2]
	set maxy [expr [winfo screenh $w] * 3 / 4]
	set canvtotal [expr [winfo reqh $w.config.f] + 2]
	if [expr $winy + $canvtotal < $maxy] {
		$w.config.canvas configure -height $canvtotal
	} else {
		$w.config.canvas configure -height [expr $scry - $winy]
		}
	}
	update idletasks
	if {[winfo exists $w]} then {
	wm maxsize $w [winfo width $w] [winfo screenheight $w]
	wm minsize $w [winfo width $w] 100

	wm deiconify $w
}
}

proc update_menu63 {} {
	global CONFIG_WATCHDOG
	global CONFIG_WATCHDOG_NOWAYOUT
	if {($CONFIG_WATCHDOG != 0)} then {
	configure_entry .menu63.config.f.x1 normal {n l y}} else {configure_entry .menu63.config.f.x1 disabled {y n l}}
	global CONFIG_MODULES
	global CONFIG_ACQUIRE_WDT
	if {($CONFIG_WATCHDOG != 0)} then {
	configure_entry .menu63.config.f.x2 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu63.config.f.x2 normal {m}} else {configure_entry .menu63.config.f.x2 disabled {m}}; configure_entry .menu63.config.f.x2 normal {n l}} else {configure_entry .menu63.config.f.x2 disabled {y n m l}}
	global CONFIG_ADVANTECH_WDT
	if {($CONFIG_WATCHDOG != 0)} then {
	configure_entry .menu63.config.f.x3 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu63.config.f.x3 normal {m}} else {configure_entry .menu63.config.f.x3 disabled {m}}; configure_entry .menu63.config.f.x3 normal {n l}} else {configure_entry .menu63.config.f.x3 disabled {y n m l}}
	global CONFIG_ALIM1535_WDT
	if {($CONFIG_WATCHDOG != 0)} then {
	configure_entry .menu63.config.f.x4 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu63.config.f.x4 normal {m}} else {configure_entry .menu63.config.f.x4 disabled {m}}; configure_entry .menu63.config.f.x4 normal {n l}} else {configure_entry .menu63.config.f.x4 disabled {y n m l}}
	global CONFIG_ALIM7101_WDT
	if {($CONFIG_WATCHDOG != 0)} then {
	configure_entry .menu63.config.f.x5 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu63.config.f.x5 normal {m}} else {configure_entry .menu63.config.f.x5 disabled {m}}; configure_entry .menu63.config.f.x5 normal {n l}} else {configure_entry .menu63.config.f.x5 disabled {y n m l}}
	global CONFIG_SC520_WDT
	if {($CONFIG_WATCHDOG != 0)} then {
	configure_entry .menu63.config.f.x6 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu63.config.f.x6 normal {m}} else {configure_entry .menu63.config.f.x6 disabled {m}}; configure_entry .menu63.config.f.x6 normal {n l}} else {configure_entry .menu63.config.f.x6 disabled {y n m l}}
	global CONFIG_PCWATCHDOG
	if {($CONFIG_WATCHDOG != 0)} then {
	configure_entry .menu63.config.f.x7 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu63.config.f.x7 normal {m}} else {configure_entry .menu63.config.f.x7 disabled {m}}; configure_entry .menu63.config.f.x7 normal {n l}} else {configure_entry .menu63.config.f.x7 disabled {y n m l}}
	global CONFIG_FOOTBRIDGE
	global CONFIG_21285_WATCHDOG
	if {($CONFIG_WATCHDOG != 0) && ($CONFIG_FOOTBRIDGE == 1)} then {
	configure_entry .menu63.config.f.x8 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu63.config.f.x8 normal {m}} else {configure_entry .menu63.config.f.x8 disabled {m}}; configure_entry .menu63.config.f.x8 normal {n l}} else {configure_entry .menu63.config.f.x8 disabled {y n m l}}
	global CONFIG_ARCH_NETWINDER
	global CONFIG_977_WATCHDOG
	if {($CONFIG_WATCHDOG != 0) && ($CONFIG_FOOTBRIDGE == 1) && ($CONFIG_ARCH_NETWINDER == 1)} then {
	configure_entry .menu63.config.f.x9 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu63.config.f.x9 normal {m}} else {configure_entry .menu63.config.f.x9 disabled {m}}; configure_entry .menu63.config.f.x9 normal {n l}} else {configure_entry .menu63.config.f.x9 disabled {y n m l}}
	global CONFIG_EUROTECH_WDT
	if {($CONFIG_WATCHDOG != 0)} then {
	configure_entry .menu63.config.f.x10 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu63.config.f.x10 normal {m}} else {configure_entry .menu63.config.f.x10 disabled {m}}; configure_entry .menu63.config.f.x10 normal {n l}} else {configure_entry .menu63.config.f.x10 disabled {y n m l}}
	global CONFIG_IB700_WDT
	if {($CONFIG_WATCHDOG != 0)} then {
	configure_entry .menu63.config.f.x11 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu63.config.f.x11 normal {m}} else {configure_entry .menu63.config.f.x11 disabled {m}}; configure_entry .menu63.config.f.x11 normal {n l}} else {configure_entry .menu63.config.f.x11 disabled {y n m l}}
	global CONFIG_WAFER_WDT
	if {($CONFIG_WATCHDOG != 0)} then {
	configure_entry .menu63.config.f.x12 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu63.config.f.x12 normal {m}} else {configure_entry .menu63.config.f.x12 disabled {m}}; configure_entry .menu63.config.f.x12 normal {n l}} else {configure_entry .menu63.config.f.x12 disabled {y n m l}}
	global CONFIG_I810_TCO
	if {($CONFIG_WATCHDOG != 0)} then {
	configure_entry .menu63.config.f.x13 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu63.config.f.x13 normal {m}} else {configure_entry .menu63.config.f.x13 disabled {m}}; configure_entry .menu63.config.f.x13 normal {n l}} else {configure_entry .menu63.config.f.x13 disabled {y n m l}}
	global CONFIG_MIXCOMWD
	if {($CONFIG_WATCHDOG != 0)} then {
	configure_entry .menu63.config.f.x14 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu63.config.f.x14 normal {m}} else {configure_entry .menu63.config.f.x14 disabled {m}}; configure_entry .menu63.config.f.x14 normal {n l}} else {configure_entry .menu63.config.f.x14 disabled {y n m l}}
	global CONFIG_60XX_WDT
	if {($CONFIG_WATCHDOG != 0)} then {
	configure_entry .menu63.config.f.x15 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu63.config.f.x15 normal {m}} else {configure_entry .menu63.config.f.x15 disabled {m}}; configure_entry .menu63.config.f.x15 normal {n l}} else {configure_entry .menu63.config.f.x15 disabled {y n m l}}
	global CONFIG_EXPERIMENTAL
	global CONFIG_SC1200_WDT
	if {($CONFIG_WATCHDOG != 0) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_EXPERIMENTAL]];set CONFIG_SC1200_WDT [sync_tristate $CONFIG_SC1200_WDT $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu63.config.f.x16 disabled {y}} else {configure_entry .menu63.config.f.x16 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu63.config.f.x16 disabled {m}} else {configure_entry .menu63.config.f.x16 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu63.config.f.x16 normal {m}} else {configure_entry .menu63.config.f.x16 disabled {m}}; configure_entry .menu63.config.f.x16 normal {n l}} else {configure_entry .menu63.config.f.x16 disabled {y n m l}}
	global CONFIG_SCx200_WDT
	if {($CONFIG_WATCHDOG != 0)} then {
	configure_entry .menu63.config.f.x17 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu63.config.f.x17 normal {m}} else {configure_entry .menu63.config.f.x17 disabled {m}}; configure_entry .menu63.config.f.x17 normal {n l}} else {configure_entry .menu63.config.f.x17 disabled {y n m l}}
	global CONFIG_SOFT_WATCHDOG
	if {($CONFIG_WATCHDOG != 0)} then {
	configure_entry .menu63.config.f.x18 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu63.config.f.x18 normal {m}} else {configure_entry .menu63.config.f.x18 disabled {m}}; configure_entry .menu63.config.f.x18 normal {n l}} else {configure_entry .menu63.config.f.x18 disabled {y n m l}}
	global CONFIG_W83877F_WDT
	if {($CONFIG_WATCHDOG != 0)} then {
	configure_entry .menu63.config.f.x19 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu63.config.f.x19 normal {m}} else {configure_entry .menu63.config.f.x19 disabled {m}}; configure_entry .menu63.config.f.x19 normal {n l}} else {configure_entry .menu63.config.f.x19 disabled {y n m l}}
	global CONFIG_WDT
	if {($CONFIG_WATCHDOG != 0)} then {
	configure_entry .menu63.config.f.x20 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu63.config.f.x20 normal {m}} else {configure_entry .menu63.config.f.x20 disabled {m}}; configure_entry .menu63.config.f.x20 normal {n l}} else {configure_entry .menu63.config.f.x20 disabled {y n m l}}
	global CONFIG_WDTPCI
	if {($CONFIG_WATCHDOG != 0)} then {
	configure_entry .menu63.config.f.x21 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu63.config.f.x21 normal {m}} else {configure_entry .menu63.config.f.x21 disabled {m}}; configure_entry .menu63.config.f.x21 normal {n l}} else {configure_entry .menu63.config.f.x21 disabled {y n m l}}
	global CONFIG_WDT_501
	if {($CONFIG_WATCHDOG != 0) && ($CONFIG_WDT != 0)} then {
	configure_entry .menu63.config.f.x22 normal {n l y}} else {configure_entry .menu63.config.f.x22 disabled {y n l}}
	global CONFIG_WDT_501_FAN
	if {($CONFIG_WATCHDOG != 0) && ($CONFIG_WDT != 0) && ($CONFIG_WDT_501 == 1)} then {
	configure_entry .menu63.config.f.x23 normal {n l y}} else {configure_entry .menu63.config.f.x23 disabled {y n l}}
	global CONFIG_MACHZ_WDT
	if {($CONFIG_WATCHDOG != 0)} then {
	configure_entry .menu63.config.f.x24 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu63.config.f.x24 normal {m}} else {configure_entry .menu63.config.f.x24 disabled {m}}; configure_entry .menu63.config.f.x24 normal {n l}} else {configure_entry .menu63.config.f.x24 disabled {y n m l}}
	global CONFIG_AMD7XX_TCO
	if {($CONFIG_WATCHDOG != 0) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_EXPERIMENTAL]];set CONFIG_AMD7XX_TCO [sync_tristate $CONFIG_AMD7XX_TCO $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu63.config.f.x25 disabled {y}} else {configure_entry .menu63.config.f.x25 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu63.config.f.x25 disabled {m}} else {configure_entry .menu63.config.f.x25 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu63.config.f.x25 normal {m}} else {configure_entry .menu63.config.f.x25 disabled {m}}; configure_entry .menu63.config.f.x25 normal {n l}} else {configure_entry .menu63.config.f.x25 disabled {y n m l}}
}


proc update_define_menu63 {} {
	update_define_mainmenu
	global CONFIG_MODULES
	global CONFIG_ACQUIRE_WDT
	global CONFIG_ADVANTECH_WDT
	global CONFIG_ALIM1535_WDT
	global CONFIG_ALIM7101_WDT
	global CONFIG_SC520_WDT
	global CONFIG_PCWATCHDOG
	global CONFIG_21285_WATCHDOG
	global CONFIG_977_WATCHDOG
	global CONFIG_EUROTECH_WDT
	global CONFIG_IB700_WDT
	global CONFIG_WAFER_WDT
	global CONFIG_I810_TCO
	global CONFIG_MIXCOMWD
	global CONFIG_60XX_WDT
	global CONFIG_SCx200_WDT
	global CONFIG_SOFT_WATCHDOG
	global CONFIG_W83877F_WDT
	global CONFIG_WDT
	global CONFIG_WDTPCI
	global CONFIG_MACHZ_WDT
	global CONFIG_WATCHDOG_NOWAYOUT
set CONFIG_WATCHDOG_NOWAYOUT [expr $CONFIG_WATCHDOG_NOWAYOUT|16]
set CONFIG_ACQUIRE_WDT [expr $CONFIG_ACQUIRE_WDT|16]
set CONFIG_ADVANTECH_WDT [expr $CONFIG_ADVANTECH_WDT|16]
set CONFIG_ALIM1535_WDT [expr $CONFIG_ALIM1535_WDT|16]
set CONFIG_ALIM7101_WDT [expr $CONFIG_ALIM7101_WDT|16]
set CONFIG_SC520_WDT [expr $CONFIG_SC520_WDT|16]
set CONFIG_PCWATCHDOG [expr $CONFIG_PCWATCHDOG|16]
set CONFIG_21285_WATCHDOG [expr $CONFIG_21285_WATCHDOG|16]
set CONFIG_977_WATCHDOG [expr $CONFIG_977_WATCHDOG|16]
set CONFIG_EUROTECH_WDT [expr $CONFIG_EUROTECH_WDT|16]
set CONFIG_IB700_WDT [expr $CONFIG_IB700_WDT|16]
set CONFIG_WAFER_WDT [expr $CONFIG_WAFER_WDT|16]
set CONFIG_I810_TCO [expr $CONFIG_I810_TCO|16]
set CONFIG_MIXCOMWD [expr $CONFIG_MIXCOMWD|16]
set CONFIG_60XX_WDT [expr $CONFIG_60XX_WDT|16]
set CONFIG_SCx200_WDT [expr $CONFIG_SCx200_WDT|16]
set CONFIG_SOFT_WATCHDOG [expr $CONFIG_SOFT_WATCHDOG|16]
set CONFIG_W83877F_WDT [expr $CONFIG_W83877F_WDT|16]
set CONFIG_WDT [expr $CONFIG_WDT|16]
set CONFIG_WDTPCI [expr $CONFIG_WDTPCI|16]
	global CONFIG_WDT_501
set CONFIG_WDT_501 [expr $CONFIG_WDT_501|16]
	global CONFIG_WDT_501_FAN
set CONFIG_WDT_501_FAN [expr $CONFIG_WDT_501_FAN|16]
set CONFIG_MACHZ_WDT [expr $CONFIG_MACHZ_WDT|16]
	global CONFIG_WATCHDOG
	if {($CONFIG_WATCHDOG != 0)} then {
	set CONFIG_WATCHDOG_NOWAYOUT [expr $CONFIG_WATCHDOG_NOWAYOUT&15]}
	if {($CONFIG_WATCHDOG != 0)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_ACQUIRE_WDT == 2)} then {set CONFIG_ACQUIRE_WDT 1}; set CONFIG_ACQUIRE_WDT [expr $CONFIG_ACQUIRE_WDT&15]}
	if {($CONFIG_WATCHDOG != 0)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_ADVANTECH_WDT == 2)} then {set CONFIG_ADVANTECH_WDT 1}; set CONFIG_ADVANTECH_WDT [expr $CONFIG_ADVANTECH_WDT&15]}
	if {($CONFIG_WATCHDOG != 0)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_ALIM1535_WDT == 2)} then {set CONFIG_ALIM1535_WDT 1}; set CONFIG_ALIM1535_WDT [expr $CONFIG_ALIM1535_WDT&15]}
	if {($CONFIG_WATCHDOG != 0)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_ALIM7101_WDT == 2)} then {set CONFIG_ALIM7101_WDT 1}; set CONFIG_ALIM7101_WDT [expr $CONFIG_ALIM7101_WDT&15]}
	if {($CONFIG_WATCHDOG != 0)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_SC520_WDT == 2)} then {set CONFIG_SC520_WDT 1}; set CONFIG_SC520_WDT [expr $CONFIG_SC520_WDT&15]}
	if {($CONFIG_WATCHDOG != 0)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_PCWATCHDOG == 2)} then {set CONFIG_PCWATCHDOG 1}; set CONFIG_PCWATCHDOG [expr $CONFIG_PCWATCHDOG&15]}
	global CONFIG_FOOTBRIDGE
	if {($CONFIG_WATCHDOG != 0) && ($CONFIG_FOOTBRIDGE == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_21285_WATCHDOG == 2)} then {set CONFIG_21285_WATCHDOG 1}; set CONFIG_21285_WATCHDOG [expr $CONFIG_21285_WATCHDOG&15]}
	global CONFIG_ARCH_NETWINDER
	if {($CONFIG_WATCHDOG != 0) && ($CONFIG_FOOTBRIDGE == 1) && ($CONFIG_ARCH_NETWINDER == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_977_WATCHDOG == 2)} then {set CONFIG_977_WATCHDOG 1}; set CONFIG_977_WATCHDOG [expr $CONFIG_977_WATCHDOG&15]}
	if {($CONFIG_WATCHDOG != 0)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_EUROTECH_WDT == 2)} then {set CONFIG_EUROTECH_WDT 1}; set CONFIG_EUROTECH_WDT [expr $CONFIG_EUROTECH_WDT&15]}
	if {($CONFIG_WATCHDOG != 0)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_IB700_WDT == 2)} then {set CONFIG_IB700_WDT 1}; set CONFIG_IB700_WDT [expr $CONFIG_IB700_WDT&15]}
	if {($CONFIG_WATCHDOG != 0)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_WAFER_WDT == 2)} then {set CONFIG_WAFER_WDT 1}; set CONFIG_WAFER_WDT [expr $CONFIG_WAFER_WDT&15]}
	if {($CONFIG_WATCHDOG != 0)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_I810_TCO == 2)} then {set CONFIG_I810_TCO 1}; set CONFIG_I810_TCO [expr $CONFIG_I810_TCO&15]}
	if {($CONFIG_WATCHDOG != 0)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_MIXCOMWD == 2)} then {set CONFIG_MIXCOMWD 1}; set CONFIG_MIXCOMWD [expr $CONFIG_MIXCOMWD&15]}
	if {($CONFIG_WATCHDOG != 0)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_60XX_WDT == 2)} then {set CONFIG_60XX_WDT 1}; set CONFIG_60XX_WDT [expr $CONFIG_60XX_WDT&15]}
	global CONFIG_EXPERIMENTAL
	global CONFIG_SC1200_WDT
	if {($CONFIG_WATCHDOG != 0) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_EXPERIMENTAL]]; set CONFIG_SC1200_WDT [sync_tristate $CONFIG_SC1200_WDT $tmpvar_dep]; set CONFIG_SC1200_WDT [expr $CONFIG_SC1200_WDT&15]}
	if {($CONFIG_WATCHDOG != 0)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_SCx200_WDT == 2)} then {set CONFIG_SCx200_WDT 1}; set CONFIG_SCx200_WDT [expr $CONFIG_SCx200_WDT&15]}
	if {($CONFIG_WATCHDOG != 0)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_SOFT_WATCHDOG == 2)} then {set CONFIG_SOFT_WATCHDOG 1}; set CONFIG_SOFT_WATCHDOG [expr $CONFIG_SOFT_WATCHDOG&15]}
	if {($CONFIG_WATCHDOG != 0)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_W83877F_WDT == 2)} then {set CONFIG_W83877F_WDT 1}; set CONFIG_W83877F_WDT [expr $CONFIG_W83877F_WDT&15]}
	if {($CONFIG_WATCHDOG != 0)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_WDT == 2)} then {set CONFIG_WDT 1}; set CONFIG_WDT [expr $CONFIG_WDT&15]}
	if {($CONFIG_WATCHDOG != 0)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_WDTPCI == 2)} then {set CONFIG_WDTPCI 1}; set CONFIG_WDTPCI [expr $CONFIG_WDTPCI&15]}
	if {($CONFIG_WATCHDOG != 0) && ($CONFIG_WDT != 0)} then {
	set CONFIG_WDT_501 [expr $CONFIG_WDT_501&15]}
	if {($CONFIG_WATCHDOG != 0) && ($CONFIG_WDT != 0) && ($CONFIG_WDT_501 == 1)} then {
	set CONFIG_WDT_501_FAN [expr $CONFIG_WDT_501_FAN&15]}
	if {($CONFIG_WATCHDOG != 0)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_MACHZ_WDT == 2)} then {set CONFIG_MACHZ_WDT 1}; set CONFIG_MACHZ_WDT [expr $CONFIG_MACHZ_WDT&15]}
	global CONFIG_AMD7XX_TCO
	if {($CONFIG_WATCHDOG != 0) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_EXPERIMENTAL]]; set CONFIG_AMD7XX_TCO [sync_tristate $CONFIG_AMD7XX_TCO $tmpvar_dep]; set CONFIG_AMD7XX_TCO [expr $CONFIG_AMD7XX_TCO&15]}
}


proc menu64 {w title} {
	set oldFocus [focus]
	catch {focus .menu58}
	catch {destroy $w; unregister_active 64}
	toplevel $w -class Dialog
	wm withdraw $w
	global active_menus
	set active_menus [lsort -integer [linsert $active_menus end 64]]
	message $w.m -width 400 -aspect 300 -text \
		"Ftape, the floppy tape device driver"  -relief raised
	pack $w.m -pady 10 -side top -padx 10
	wm title $w "Ftape, the floppy tape device driver" 

	bind $w <Escape> "catch {focus $oldFocus}; destroy $w; unregister_active 64; break"
	set nextscript "catch {focus $oldFocus}; destroy $w; unregister_active 64; menu65 .menu65 \"$title\""
	frame $w.f
	button $w.f.back -text "OK" \
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 64"
	button $w.f.next -text "Next" -underline 0\
		-width 15 -command $nextscript
	bind all <Alt-n> $nextscript
	button $w.f.prev -text "Prev" -underline 0\
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 64; menu63 .menu63 \"$title\""
	bind $w <Alt-p> "catch {focus $oldFocus}; destroy $w; unregister_active 64; menu63 .menu63 \"$title\";break"
	pack $w.f.back $w.f.next $w.f.prev -side left -expand on
	pack $w.f -pady 10 -side bottom -anchor w -fill x
	frame $w.topline -relief ridge -borderwidth 2 -height 2
	pack $w.topline -side top -fill x

	frame $w.botline -relief ridge -borderwidth 2 -height 2
	pack $w.botline -side bottom -fill x

	frame $w.config
	pack $w.config -fill y -expand on

	scrollbar $w.config.vscroll -command "$w.config.canvas yview"
	pack $w.config.vscroll -side right -fill y

	canvas $w.config.canvas -height 1\
		-relief flat -borderwidth 0 -yscrollcommand "$w.config.vscroll set" \
		-width [expr [winfo screenwidth .] * 1 / 2] 
	frame $w.config.f
	bind $w <Key-Down> "$w.config.canvas yview scroll  1 unit;break;"
	bind $w <Key-Up> "$w.config.canvas yview scroll  -1 unit;break;"
	bind $w <Key-Next> "$w.config.canvas yview scroll  1 page;break;"
	bind $w <Key-Prior> "$w.config.canvas yview scroll  -1 page;break;"
	bind $w <Key-Home> "$w.config.canvas yview moveto 0;break;"
	bind $w <Key-End> "$w.config.canvas yview moveto 1 ;break;"
	pack $w.config.canvas -side right -fill y


	tristate $w.config.f 64 0 "Ftape (QIC-80/Travan) support" CONFIG_FTAPE
	dep_tristate $w.config.f 64 1 "  Zftape, the VFS interface" CONFIG_ZFTAPE
	int $w.config.f 64 2 "  Default block size" CONFIG_ZFT_DFLT_BLK_SZ
	comment $w.config.f 64 3 "  The compressor will be built as a module only!"
	int $w.config.f 64 4 "  Number of ftape buffers (EXPERIMENTAL)" CONFIG_FT_NR_BUFFERS
	bool $w.config.f 64 5 "  Enable procfs status report (+2kb)" CONFIG_FT_PROC_FS
	global tmpvar_33
	minimenu $w.config.f 64 6 "Debugging output" tmpvar_33 CONFIG_FT_NORMAL_DEBUG
	menu $w.config.f.x6.x.menu -tearoffcommand "menutitle \"Debugging output\""
	$w.config.f.x6.x.menu add radiobutton -label "Normal" -variable tmpvar_33 -value "Normal" -command "update_active"
	$w.config.f.x6.x.menu add radiobutton -label "Excessive" -variable tmpvar_33 -value "Excessive" -command "update_active"
	$w.config.f.x6.x.menu add radiobutton -label "Reduced" -variable tmpvar_33 -value "Reduced" -command "update_active"
	$w.config.f.x6.x.menu add radiobutton -label "None" -variable tmpvar_33 -value "None" -command "update_active"
	menusplit $w $w.config.f.x6.x.menu 4
	comment $w.config.f 64 7 "Hardware configuration"
	global tmpvar_34
	minimenu $w.config.f 64 8 "Floppy tape controllers" tmpvar_34 CONFIG_FT_STD_FDC
	menu $w.config.f.x8.x.menu -tearoffcommand "menutitle \"Floppy tape controllers\""
	$w.config.f.x8.x.menu add radiobutton -label "Standard" -variable tmpvar_34 -value "Standard" -command "update_active"
	$w.config.f.x8.x.menu add radiobutton -label "MACH-2" -variable tmpvar_34 -value "MACH-2" -command "update_active"
	$w.config.f.x8.x.menu add radiobutton -label "FC-10/FC-20" -variable tmpvar_34 -value "FC-10/FC-20" -command "update_active"
	$w.config.f.x8.x.menu add radiobutton -label "Alt/82078" -variable tmpvar_34 -value "Alt/82078" -command "update_active"
	menusplit $w $w.config.f.x8.x.menu 4
	comment $w.config.f 64 9 "   Consult the manuals of your tape drive for the correct settings!"
	hex $w.config.f 64 10 "  IO base of the floppy disk controller" CONFIG_FT_FDC_BASE
	int $w.config.f 64 11 "  IRQ channel of the floppy disk controller" CONFIG_FT_FDC_IRQ
	int $w.config.f 64 12 "  DMA channel of the floppy disk controller" CONFIG_FT_FDC_DMA
	int $w.config.f 64 13 "  Default FIFO threshold (EXPERIMENTAL)" CONFIG_FT_FDC_THR
	int $w.config.f 64 14 "  Maximal data rate to use (EXPERIMENTAL)" CONFIG_FT_FDC_MAX_RATE



	focus $w
	update_active
	global winx; global winy
	if {[winfo exists .menu58] == 0} then {menu58 .menu58 "Character devices"}
	set winx [expr [winfo x .menu58]+30]; set winy [expr [winfo y .menu58]+30]
	if {[winfo exists $w]} then {wm geometry $w +$winx+$winy}
	update idletasks
	if {[winfo exists $w]} then  {$w.config.canvas create window 0 0 -anchor nw -window $w.config.f

	$w.config.canvas configure \
		-width [expr [winfo reqwidth $w.config.f] + 1]\
		-scrollregion "-1 -1 [expr [winfo reqwidth $w.config.f] + 1] \
			 [expr [winfo reqheight $w.config.f] + 1]"

	set winy [expr [winfo reqh $w] - [winfo reqh $w.config.canvas]]
	set scry [expr [winfo screenh $w] / 2]
	set maxy [expr [winfo screenh $w] * 3 / 4]
	set canvtotal [expr [winfo reqh $w.config.f] + 2]
	if [expr $winy + $canvtotal < $maxy] {
		$w.config.canvas configure -height $canvtotal
	} else {
		$w.config.canvas configure -height [expr $scry - $winy]
		}
	}
	update idletasks
	if {[winfo exists $w]} then {
	wm maxsize $w [winfo width $w] [winfo screenheight $w]
	wm minsize $w [winfo width $w] 100

	wm deiconify $w
}
}

proc update_menu64 {} {
	global CONFIG_FTAPE
	global CONFIG_MODULES

	if {($CONFIG_MODULES == 1)} then {configure_entry .menu64.config.f.x0 normal {m}} else {configure_entry .menu64.config.f.x0 disabled {m}}
	global CONFIG_ZFTAPE
	if {($CONFIG_FTAPE != 0) && ($CONFIG_FTAPE == 1 || $CONFIG_FTAPE == 2 || $CONFIG_FTAPE == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_FTAPE]];set CONFIG_ZFTAPE [sync_tristate $CONFIG_ZFTAPE $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu64.config.f.x1 disabled {y}} else {configure_entry .menu64.config.f.x1 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu64.config.f.x1 disabled {m}} else {configure_entry .menu64.config.f.x1 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu64.config.f.x1 normal {m}} else {configure_entry .menu64.config.f.x1 disabled {m}}; configure_entry .menu64.config.f.x1 normal {n l}} else {configure_entry .menu64.config.f.x1 disabled {y n m l}}
	global CONFIG_ZFT_DFLT_BLK_SZ
	if {($CONFIG_FTAPE != 0) && ($CONFIG_ZFTAPE != 0)} then {.menu64.config.f.x2.x configure -state normal -foreground [ cget .ref -foreground ]; .menu64.config.f.x2.l configure -state normal; } else {.menu64.config.f.x2.x configure -state disabled -foreground [ cget .ref -disabledforeground ]; .menu64.config.f.x2.l configure -state disabled}
	if {($CONFIG_FTAPE != 0) && ($CONFIG_ZFTAPE != 0)} then {configure_entry .menu64.config.f.x3 normal {m}} else {configure_entry .menu64.config.f.x3 disabled {m}}
	global CONFIG_EXPERIMENTAL
	global CONFIG_FT_NR_BUFFERS
	if {($CONFIG_FTAPE != 0) && ($CONFIG_EXPERIMENTAL == 1)} then {.menu64.config.f.x4.x configure -state normal -foreground [ cget .ref -foreground ]; .menu64.config.f.x4.l configure -state normal; } else {.menu64.config.f.x4.x configure -state disabled -foreground [ cget .ref -disabledforeground ]; .menu64.config.f.x4.l configure -state disabled}
	global CONFIG_PROC_FS
	global CONFIG_FT_PROC_FS
	if {($CONFIG_FTAPE != 0) && ($CONFIG_PROC_FS == 1)} then {
	configure_entry .menu64.config.f.x5 normal {n l y}} else {configure_entry .menu64.config.f.x5 disabled {y n l}}
	if {($CONFIG_FTAPE != 0)} then {configure_entry .menu64.config.f.x6 normal {x l}} else {configure_entry .menu64.config.f.x6 disabled {x l}}
	if {($CONFIG_FTAPE != 0)} then {configure_entry .menu64.config.f.x7 normal {m}} else {configure_entry .menu64.config.f.x7 disabled {m}}
	if {($CONFIG_FTAPE != 0)} then {configure_entry .menu64.config.f.x8 normal {x l}} else {configure_entry .menu64.config.f.x8 disabled {x l}}
	global CONFIG_FT_STD_FDC
	if {($CONFIG_FTAPE != 0) && ($CONFIG_FT_STD_FDC != 1)} then {configure_entry .menu64.config.f.x9 normal {m}} else {configure_entry .menu64.config.f.x9 disabled {m}}
	global CONFIG_FT_FDC_BASE
	if {($CONFIG_FTAPE != 0) && ($CONFIG_FT_STD_FDC != 1)} then {.menu64.config.f.x10.x configure -state normal -foreground [ cget .ref -foreground ]; .menu64.config.f.x10.l configure -state normal; } else {.menu64.config.f.x10.x configure -state disabled -foreground [ cget .ref -disabledforeground ]; .menu64.config.f.x10.l configure -state disabled}
	global CONFIG_FT_FDC_IRQ
	if {($CONFIG_FTAPE != 0) && ($CONFIG_FT_STD_FDC != 1)} then {.menu64.config.f.x11.x configure -state normal -foreground [ cget .ref -foreground ]; .menu64.config.f.x11.l configure -state normal; } else {.menu64.config.f.x11.x configure -state disabled -foreground [ cget .ref -disabledforeground ]; .menu64.config.f.x11.l configure -state disabled}
	global CONFIG_FT_FDC_DMA
	if {($CONFIG_FTAPE != 0) && ($CONFIG_FT_STD_FDC != 1)} then {.menu64.config.f.x12.x configure -state normal -foreground [ cget .ref -foreground ]; .menu64.config.f.x12.l configure -state normal; } else {.menu64.config.f.x12.x configure -state disabled -foreground [ cget .ref -disabledforeground ]; .menu64.config.f.x12.l configure -state disabled}
	global CONFIG_FT_FDC_THR
	if {($CONFIG_FTAPE != 0) && ($CONFIG_EXPERIMENTAL == 1)} then {.menu64.config.f.x13.x configure -state normal -foreground [ cget .ref -foreground ]; .menu64.config.f.x13.l configure -state normal; } else {.menu64.config.f.x13.x configure -state disabled -foreground [ cget .ref -disabledforeground ]; .menu64.config.f.x13.l configure -state disabled}
	global CONFIG_FT_FDC_MAX_RATE
	if {($CONFIG_FTAPE != 0) && ($CONFIG_EXPERIMENTAL == 1)} then {.menu64.config.f.x14.x configure -state normal -foreground [ cget .ref -foreground ]; .menu64.config.f.x14.l configure -state normal; } else {.menu64.config.f.x14.x configure -state disabled -foreground [ cget .ref -disabledforeground ]; .menu64.config.f.x14.l configure -state disabled}
}


proc update_define_menu64 {} {
	update_define_mainmenu
	global CONFIG_MODULES
	global CONFIG_FTAPE
	global CONFIG_ZFT_COMPRESSOR
	global CONFIG_FT_ALPHA_CLOCK
	global CONFIG_FT_PROC_FS
set CONFIG_FT_PROC_FS [expr $CONFIG_FT_PROC_FS|16]

	if {($CONFIG_MODULES == 0)} then {if {($CONFIG_FTAPE == 2)} then {set CONFIG_FTAPE 1}}
	global CONFIG_ZFTAPE
	if {($CONFIG_FTAPE != 0) && ($CONFIG_FTAPE == 1 || $CONFIG_FTAPE == 2 || $CONFIG_FTAPE == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_FTAPE]]; set CONFIG_ZFTAPE [sync_tristate $CONFIG_ZFTAPE $tmpvar_dep]; set CONFIG_ZFTAPE [expr $CONFIG_ZFTAPE&15]}
	global CONFIG_ZFT_DFLT_BLK_SZ
	if {($CONFIG_FTAPE != 0) && ($CONFIG_ZFTAPE != 0)} then {validate_int CONFIG_ZFT_DFLT_BLK_SZ "$CONFIG_ZFT_DFLT_BLK_SZ" 10240}
	if {($CONFIG_FTAPE != 0) && ($CONFIG_ZFTAPE != 0)} then {	global CONSTANT_M
set CONFIG_ZFT_COMPRESSOR $CONSTANT_M }
	global CONFIG_EXPERIMENTAL
	global CONFIG_FT_NR_BUFFERS
	if {($CONFIG_FTAPE != 0) && ($CONFIG_EXPERIMENTAL == 1)} then {validate_int CONFIG_FT_NR_BUFFERS "$CONFIG_FT_NR_BUFFERS" 3}
	global CONFIG_PROC_FS
	if {($CONFIG_FTAPE != 0) && ($CONFIG_PROC_FS == 1)} then {
	set CONFIG_FT_PROC_FS [expr $CONFIG_FT_PROC_FS&15]}
	global tmpvar_33
	global CONFIG_FT_NORMAL_DEBUG
	if {$tmpvar_33 == "Normal"} then {set CONFIG_FT_NORMAL_DEBUG 1} else {set CONFIG_FT_NORMAL_DEBUG 0}
	global CONFIG_FT_FULL_DEBUG
	if {$tmpvar_33 == "Excessive"} then {set CONFIG_FT_FULL_DEBUG 1} else {set CONFIG_FT_FULL_DEBUG 0}
	global CONFIG_FT_NO_TRACE
	if {$tmpvar_33 == "Reduced"} then {set CONFIG_FT_NO_TRACE 1} else {set CONFIG_FT_NO_TRACE 0}
	global CONFIG_FT_NO_TRACE_AT_ALL
	if {$tmpvar_33 == "None"} then {set CONFIG_FT_NO_TRACE_AT_ALL 1} else {set CONFIG_FT_NO_TRACE_AT_ALL 0}
	global tmpvar_34
	global CONFIG_FT_STD_FDC
	if {$tmpvar_34 == "Standard"} then {set CONFIG_FT_STD_FDC 1} else {set CONFIG_FT_STD_FDC 0}
	global CONFIG_FT_MACH2
	if {$tmpvar_34 == "MACH-2"} then {set CONFIG_FT_MACH2 1} else {set CONFIG_FT_MACH2 0}
	global CONFIG_FT_PROBE_FC10
	if {$tmpvar_34 == "FC-10/FC-20"} then {set CONFIG_FT_PROBE_FC10 1} else {set CONFIG_FT_PROBE_FC10 0}
	global CONFIG_FT_ALT_FDC
	if {$tmpvar_34 == "Alt/82078"} then {set CONFIG_FT_ALT_FDC 1} else {set CONFIG_FT_ALT_FDC 0}
	global CONFIG_FT_FDC_BASE
	if {($CONFIG_FTAPE != 0) && ($CONFIG_FT_STD_FDC != 1)} then {validate_hex CONFIG_FT_FDC_BASE "$CONFIG_FT_FDC_BASE" 0}
	global CONFIG_FT_FDC_IRQ
	if {($CONFIG_FTAPE != 0) && ($CONFIG_FT_STD_FDC != 1)} then {validate_int CONFIG_FT_FDC_IRQ "$CONFIG_FT_FDC_IRQ" 0}
	global CONFIG_FT_FDC_DMA
	if {($CONFIG_FTAPE != 0) && ($CONFIG_FT_STD_FDC != 1)} then {validate_int CONFIG_FT_FDC_DMA "$CONFIG_FT_FDC_DMA" 0}
	global CONFIG_FT_FDC_THR
	if {($CONFIG_FTAPE != 0) && ($CONFIG_EXPERIMENTAL == 1)} then {validate_int CONFIG_FT_FDC_THR "$CONFIG_FT_FDC_THR" 8}
	global CONFIG_FT_FDC_MAX_RATE
	if {($CONFIG_FTAPE != 0) && ($CONFIG_EXPERIMENTAL == 1)} then {validate_int CONFIG_FT_FDC_MAX_RATE "$CONFIG_FT_FDC_MAX_RATE" 2000}
	if {($CONFIG_FTAPE != 0)} then {set CONFIG_FT_ALPHA_CLOCK 0 }
}


proc menu65 {w title} {
	set oldFocus [focus]
	catch {focus .menu58}
	catch {destroy $w; unregister_active 65}
	toplevel $w -class Dialog
	wm withdraw $w
	global active_menus
	set active_menus [lsort -integer [linsert $active_menus end 65]]
	message $w.m -width 400 -aspect 300 -text \
		"Direct Rendering Manager (XFree86 DRI support)"  -relief raised
	pack $w.m -pady 10 -side top -padx 10
	wm title $w "Direct Rendering Manager (XFree86 DRI support)" 

	bind $w <Escape> "catch {focus $oldFocus}; destroy $w; unregister_active 65; break"
	set nextscript "catch {focus $oldFocus}; destroy $w; unregister_active 65; menu66 .menu66 \"$title\""
	frame $w.f
	button $w.f.back -text "OK" \
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 65"
	button $w.f.next -text "Next" -underline 0\
		-width 15 -command $nextscript
	bind all <Alt-n> $nextscript
	button $w.f.prev -text "Prev" -underline 0\
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 65; menu64 .menu64 \"$title\""
	bind $w <Alt-p> "catch {focus $oldFocus}; destroy $w; unregister_active 65; menu64 .menu64 \"$title\";break"
	pack $w.f.back $w.f.next $w.f.prev -side left -expand on
	pack $w.f -pady 10 -side bottom -anchor w -fill x
	frame $w.topline -relief ridge -borderwidth 2 -height 2
	pack $w.topline -side top -fill x

	frame $w.botline -relief ridge -borderwidth 2 -height 2
	pack $w.botline -side bottom -fill x

	frame $w.config
	pack $w.config -fill y -expand on

	scrollbar $w.config.vscroll -command "$w.config.canvas yview"
	pack $w.config.vscroll -side right -fill y

	canvas $w.config.canvas -height 1\
		-relief flat -borderwidth 0 -yscrollcommand "$w.config.vscroll set" \
		-width [expr [winfo screenwidth .] * 1 / 2] 
	frame $w.config.f
	bind $w <Key-Down> "$w.config.canvas yview scroll  1 unit;break;"
	bind $w <Key-Up> "$w.config.canvas yview scroll  -1 unit;break;"
	bind $w <Key-Next> "$w.config.canvas yview scroll  1 page;break;"
	bind $w <Key-Prior> "$w.config.canvas yview scroll  -1 page;break;"
	bind $w <Key-Home> "$w.config.canvas yview moveto 0;break;"
	bind $w <Key-End> "$w.config.canvas yview moveto 1 ;break;"
	pack $w.config.canvas -side right -fill y


	bool $w.config.f 65 0 "Direct Rendering Manager (XFree86 DRI support)" CONFIG_DRM
	bool $w.config.f 65 1 "  Build drivers for old (XFree 4.0) DRM" CONFIG_DRM_OLD
	comment $w.config.f 65 2 "DRM 4.0 drivers"
	tristate $w.config.f 65 3 "  3dfx Banshee/Voodoo3+" CONFIG_DRM40_TDFX
	tristate $w.config.f 65 4 "  3dlabs GMX 2000" CONFIG_DRM40_GAMMA
	dep_tristate $w.config.f 65 5 "  ATI Rage 128" CONFIG_DRM40_R128
	dep_tristate $w.config.f 65 6 "  ATI Radeon" CONFIG_DRM40_RADEON
	dep_tristate $w.config.f 65 7 "  Intel I810" CONFIG_DRM40_I810
	dep_tristate $w.config.f 65 8 "  Matrox G200/G400/G450" CONFIG_DRM40_MGA
	comment $w.config.f 65 9 "DRM 4.1 drivers"
	tristate $w.config.f 65 10 "  3dfx Banshee/Voodoo3+" CONFIG_DRM_TDFX
	tristate $w.config.f 65 11 "  3dlabs GMX 2000" CONFIG_DRM_GAMMA
	tristate $w.config.f 65 12 "  ATI Rage 128" CONFIG_DRM_R128
	tristate $w.config.f 65 13 "  ATI Radeon" CONFIG_DRM_RADEON
	dep_tristate $w.config.f 65 14 "  Intel I810" CONFIG_DRM_I810
	dep_bool $w.config.f 65 15 "    Enabled XFree 4.1 ioctl interface by default" CONFIG_DRM_I810_XFREE_41
	dep_tristate $w.config.f 65 16 "  Intel 830M" CONFIG_DRM_I830
	dep_tristate $w.config.f 65 17 "  Matrox g200/g400" CONFIG_DRM_MGA
	dep_tristate $w.config.f 65 18 "  SiS" CONFIG_DRM_SIS



	focus $w
	update_active
	global winx; global winy
	if {[winfo exists .menu58] == 0} then {menu58 .menu58 "Character devices"}
	set winx [expr [winfo x .menu58]+30]; set winy [expr [winfo y .menu58]+30]
	if {[winfo exists $w]} then {wm geometry $w +$winx+$winy}
	update idletasks
	if {[winfo exists $w]} then  {$w.config.canvas create window 0 0 -anchor nw -window $w.config.f

	$w.config.canvas configure \
		-width [expr [winfo reqwidth $w.config.f] + 1]\
		-scrollregion "-1 -1 [expr [winfo reqwidth $w.config.f] + 1] \
			 [expr [winfo reqheight $w.config.f] + 1]"

	set winy [expr [winfo reqh $w] - [winfo reqh $w.config.canvas]]
	set scry [expr [winfo screenh $w] / 2]
	set maxy [expr [winfo screenh $w] * 3 / 4]
	set canvtotal [expr [winfo reqh $w.config.f] + 2]
	if [expr $winy + $canvtotal < $maxy] {
		$w.config.canvas configure -height $canvtotal
	} else {
		$w.config.canvas configure -height [expr $scry - $winy]
		}
	}
	update idletasks
	if {[winfo exists $w]} then {
	wm maxsize $w [winfo width $w] [winfo screenheight $w]
	wm minsize $w [winfo width $w] 100

	wm deiconify $w
}
}

proc update_menu65 {} {
	global CONFIG_DRM
	global CONFIG_DRM_OLD
	if {($CONFIG_DRM == 1)} then {
	configure_entry .menu65.config.f.x1 normal {n l y}} else {configure_entry .menu65.config.f.x1 disabled {y n l}}
	if {($CONFIG_DRM == 1) && ($CONFIG_DRM_OLD == 1)} then {configure_entry .menu65.config.f.x2 normal {m}} else {configure_entry .menu65.config.f.x2 disabled {m}}
	global CONFIG_MODULES
	global CONFIG_DRM40_TDFX
	if {($CONFIG_DRM == 1) && ($CONFIG_DRM_OLD == 1)} then {
	configure_entry .menu65.config.f.x3 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu65.config.f.x3 normal {m}} else {configure_entry .menu65.config.f.x3 disabled {m}}; configure_entry .menu65.config.f.x3 normal {n l}} else {configure_entry .menu65.config.f.x3 disabled {y n m l}}
	global CONFIG_DRM40_GAMMA
	if {($CONFIG_DRM == 1) && ($CONFIG_DRM_OLD == 1)} then {
	configure_entry .menu65.config.f.x4 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu65.config.f.x4 normal {m}} else {configure_entry .menu65.config.f.x4 disabled {m}}; configure_entry .menu65.config.f.x4 normal {n l}} else {configure_entry .menu65.config.f.x4 disabled {y n m l}}
	global CONFIG_AGP
	global CONFIG_DRM40_R128
	if {($CONFIG_DRM == 1) && ($CONFIG_DRM_OLD == 1) && ($CONFIG_AGP == 1 || $CONFIG_AGP == 2 || $CONFIG_AGP == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_AGP]];set CONFIG_DRM40_R128 [sync_tristate $CONFIG_DRM40_R128 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu65.config.f.x5 disabled {y}} else {configure_entry .menu65.config.f.x5 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu65.config.f.x5 disabled {m}} else {configure_entry .menu65.config.f.x5 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu65.config.f.x5 normal {m}} else {configure_entry .menu65.config.f.x5 disabled {m}}; configure_entry .menu65.config.f.x5 normal {n l}} else {configure_entry .menu65.config.f.x5 disabled {y n m l}}
	global CONFIG_DRM40_RADEON
	if {($CONFIG_DRM == 1) && ($CONFIG_DRM_OLD == 1) && ($CONFIG_AGP == 1 || $CONFIG_AGP == 2 || $CONFIG_AGP == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_AGP]];set CONFIG_DRM40_RADEON [sync_tristate $CONFIG_DRM40_RADEON $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu65.config.f.x6 disabled {y}} else {configure_entry .menu65.config.f.x6 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu65.config.f.x6 disabled {m}} else {configure_entry .menu65.config.f.x6 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu65.config.f.x6 normal {m}} else {configure_entry .menu65.config.f.x6 disabled {m}}; configure_entry .menu65.config.f.x6 normal {n l}} else {configure_entry .menu65.config.f.x6 disabled {y n m l}}
	global CONFIG_DRM40_I810
	if {($CONFIG_DRM == 1) && ($CONFIG_DRM_OLD == 1) && ($CONFIG_AGP == 1 || $CONFIG_AGP == 2 || $CONFIG_AGP == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_AGP]];set CONFIG_DRM40_I810 [sync_tristate $CONFIG_DRM40_I810 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu65.config.f.x7 disabled {y}} else {configure_entry .menu65.config.f.x7 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu65.config.f.x7 disabled {m}} else {configure_entry .menu65.config.f.x7 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu65.config.f.x7 normal {m}} else {configure_entry .menu65.config.f.x7 disabled {m}}; configure_entry .menu65.config.f.x7 normal {n l}} else {configure_entry .menu65.config.f.x7 disabled {y n m l}}
	global CONFIG_DRM40_MGA
	if {($CONFIG_DRM == 1) && ($CONFIG_DRM_OLD == 1) && ($CONFIG_AGP == 1 || $CONFIG_AGP == 2 || $CONFIG_AGP == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_AGP]];set CONFIG_DRM40_MGA [sync_tristate $CONFIG_DRM40_MGA $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu65.config.f.x8 disabled {y}} else {configure_entry .menu65.config.f.x8 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu65.config.f.x8 disabled {m}} else {configure_entry .menu65.config.f.x8 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu65.config.f.x8 normal {m}} else {configure_entry .menu65.config.f.x8 disabled {m}}; configure_entry .menu65.config.f.x8 normal {n l}} else {configure_entry .menu65.config.f.x8 disabled {y n m l}}
	if {($CONFIG_DRM == 1) && ($CONFIG_DRM_OLD != 1)} then {configure_entry .menu65.config.f.x9 normal {m}} else {configure_entry .menu65.config.f.x9 disabled {m}}
	global CONFIG_DRM_TDFX
	if {($CONFIG_DRM == 1) && ($CONFIG_DRM_OLD != 1)} then {
	configure_entry .menu65.config.f.x10 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu65.config.f.x10 normal {m}} else {configure_entry .menu65.config.f.x10 disabled {m}}; configure_entry .menu65.config.f.x10 normal {n l}} else {configure_entry .menu65.config.f.x10 disabled {y n m l}}
	global CONFIG_DRM_GAMMA
	if {($CONFIG_DRM == 1) && ($CONFIG_DRM_OLD != 1)} then {
	configure_entry .menu65.config.f.x11 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu65.config.f.x11 normal {m}} else {configure_entry .menu65.config.f.x11 disabled {m}}; configure_entry .menu65.config.f.x11 normal {n l}} else {configure_entry .menu65.config.f.x11 disabled {y n m l}}
	global CONFIG_DRM_R128
	if {($CONFIG_DRM == 1) && ($CONFIG_DRM_OLD != 1)} then {
	configure_entry .menu65.config.f.x12 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu65.config.f.x12 normal {m}} else {configure_entry .menu65.config.f.x12 disabled {m}}; configure_entry .menu65.config.f.x12 normal {n l}} else {configure_entry .menu65.config.f.x12 disabled {y n m l}}
	global CONFIG_DRM_RADEON
	if {($CONFIG_DRM == 1) && ($CONFIG_DRM_OLD != 1)} then {
	configure_entry .menu65.config.f.x13 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu65.config.f.x13 normal {m}} else {configure_entry .menu65.config.f.x13 disabled {m}}; configure_entry .menu65.config.f.x13 normal {n l}} else {configure_entry .menu65.config.f.x13 disabled {y n m l}}
	global CONFIG_DRM_I810
	if {($CONFIG_DRM == 1) && ($CONFIG_DRM_OLD != 1) && ($CONFIG_AGP == 1 || $CONFIG_AGP == 2 || $CONFIG_AGP == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_AGP]];set CONFIG_DRM_I810 [sync_tristate $CONFIG_DRM_I810 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu65.config.f.x14 disabled {y}} else {configure_entry .menu65.config.f.x14 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu65.config.f.x14 disabled {m}} else {configure_entry .menu65.config.f.x14 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu65.config.f.x14 normal {m}} else {configure_entry .menu65.config.f.x14 disabled {m}}; configure_entry .menu65.config.f.x14 normal {n l}} else {configure_entry .menu65.config.f.x14 disabled {y n m l}}
	global CONFIG_DRM_I810_XFREE_41
	if {($CONFIG_DRM == 1) && ($CONFIG_DRM_OLD != 1) && ($CONFIG_DRM_I810 == 1 || $CONFIG_DRM_I810 == 2 || $CONFIG_DRM_I810 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_DRM_I810]];set CONFIG_DRM_I810_XFREE_41 [sync_bool $CONFIG_DRM_I810_XFREE_41 $tmpvar_dep 1];if {$tmpvar_dep != 1 && $tmpvar_dep != 2} then {configure_entry .menu65.config.f.x15 disabled {y};} else {configure_entry .menu65.config.f.x15 normal {y};}; configure_entry .menu65.config.f.x15 normal {n l}} else {configure_entry .menu65.config.f.x15 disabled {y n l}}
	global CONFIG_DRM_I830
	if {($CONFIG_DRM == 1) && ($CONFIG_DRM_OLD != 1) && ($CONFIG_AGP == 1 || $CONFIG_AGP == 2 || $CONFIG_AGP == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_AGP]];set CONFIG_DRM_I830 [sync_tristate $CONFIG_DRM_I830 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu65.config.f.x16 disabled {y}} else {configure_entry .menu65.config.f.x16 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu65.config.f.x16 disabled {m}} else {configure_entry .menu65.config.f.x16 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu65.config.f.x16 normal {m}} else {configure_entry .menu65.config.f.x16 disabled {m}}; configure_entry .menu65.config.f.x16 normal {n l}} else {configure_entry .menu65.config.f.x16 disabled {y n m l}}
	global CONFIG_DRM_MGA
	if {($CONFIG_DRM == 1) && ($CONFIG_DRM_OLD != 1) && ($CONFIG_AGP == 1 || $CONFIG_AGP == 2 || $CONFIG_AGP == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_AGP]];set CONFIG_DRM_MGA [sync_tristate $CONFIG_DRM_MGA $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu65.config.f.x17 disabled {y}} else {configure_entry .menu65.config.f.x17 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu65.config.f.x17 disabled {m}} else {configure_entry .menu65.config.f.x17 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu65.config.f.x17 normal {m}} else {configure_entry .menu65.config.f.x17 disabled {m}}; configure_entry .menu65.config.f.x17 normal {n l}} else {configure_entry .menu65.config.f.x17 disabled {y n m l}}
	global CONFIG_DRM_SIS
	if {($CONFIG_DRM == 1) && ($CONFIG_DRM_OLD != 1) && ($CONFIG_AGP == 1 || $CONFIG_AGP == 2 || $CONFIG_AGP == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_AGP]];set CONFIG_DRM_SIS [sync_tristate $CONFIG_DRM_SIS $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu65.config.f.x18 disabled {y}} else {configure_entry .menu65.config.f.x18 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu65.config.f.x18 disabled {m}} else {configure_entry .menu65.config.f.x18 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu65.config.f.x18 normal {m}} else {configure_entry .menu65.config.f.x18 disabled {m}}; configure_entry .menu65.config.f.x18 normal {n l}} else {configure_entry .menu65.config.f.x18 disabled {y n m l}}
}


proc update_define_menu65 {} {
	update_define_mainmenu
	global CONFIG_MODULES
	global CONFIG_DRM40_TDFX
	global CONFIG_DRM40_GAMMA
	global CONFIG_DRM_NEW
	global CONFIG_DRM_TDFX
	global CONFIG_DRM_GAMMA
	global CONFIG_DRM_R128
	global CONFIG_DRM_RADEON
	global CONFIG_DRM_OLD
set CONFIG_DRM_OLD [expr $CONFIG_DRM_OLD|16]
set CONFIG_DRM40_TDFX [expr $CONFIG_DRM40_TDFX|16]
set CONFIG_DRM40_GAMMA [expr $CONFIG_DRM40_GAMMA|16]
set CONFIG_DRM_TDFX [expr $CONFIG_DRM_TDFX|16]
set CONFIG_DRM_GAMMA [expr $CONFIG_DRM_GAMMA|16]
set CONFIG_DRM_R128 [expr $CONFIG_DRM_R128|16]
set CONFIG_DRM_RADEON [expr $CONFIG_DRM_RADEON|16]
	global CONFIG_DRM
	if {($CONFIG_DRM == 1)} then {
	set CONFIG_DRM_OLD [expr $CONFIG_DRM_OLD&15]}
	if {($CONFIG_DRM == 1) && ($CONFIG_DRM_OLD == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_DRM40_TDFX == 2)} then {set CONFIG_DRM40_TDFX 1}; set CONFIG_DRM40_TDFX [expr $CONFIG_DRM40_TDFX&15]}
	if {($CONFIG_DRM == 1) && ($CONFIG_DRM_OLD == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_DRM40_GAMMA == 2)} then {set CONFIG_DRM40_GAMMA 1}; set CONFIG_DRM40_GAMMA [expr $CONFIG_DRM40_GAMMA&15]}
	global CONFIG_AGP
	global CONFIG_DRM40_R128
	if {($CONFIG_DRM == 1) && ($CONFIG_DRM_OLD == 1) && ($CONFIG_AGP == 1 || $CONFIG_AGP == 2 || $CONFIG_AGP == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_AGP]]; set CONFIG_DRM40_R128 [sync_tristate $CONFIG_DRM40_R128 $tmpvar_dep]; set CONFIG_DRM40_R128 [expr $CONFIG_DRM40_R128&15]}
	global CONFIG_DRM40_RADEON
	if {($CONFIG_DRM == 1) && ($CONFIG_DRM_OLD == 1) && ($CONFIG_AGP == 1 || $CONFIG_AGP == 2 || $CONFIG_AGP == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_AGP]]; set CONFIG_DRM40_RADEON [sync_tristate $CONFIG_DRM40_RADEON $tmpvar_dep]; set CONFIG_DRM40_RADEON [expr $CONFIG_DRM40_RADEON&15]}
	global CONFIG_DRM40_I810
	if {($CONFIG_DRM == 1) && ($CONFIG_DRM_OLD == 1) && ($CONFIG_AGP == 1 || $CONFIG_AGP == 2 || $CONFIG_AGP == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_AGP]]; set CONFIG_DRM40_I810 [sync_tristate $CONFIG_DRM40_I810 $tmpvar_dep]; set CONFIG_DRM40_I810 [expr $CONFIG_DRM40_I810&15]}
	global CONFIG_DRM40_MGA
	if {($CONFIG_DRM == 1) && ($CONFIG_DRM_OLD == 1) && ($CONFIG_AGP == 1 || $CONFIG_AGP == 2 || $CONFIG_AGP == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_AGP]]; set CONFIG_DRM40_MGA [sync_tristate $CONFIG_DRM40_MGA $tmpvar_dep]; set CONFIG_DRM40_MGA [expr $CONFIG_DRM40_MGA&15]}
	if {($CONFIG_DRM == 1) && ($CONFIG_DRM_OLD != 1)} then {	global CONSTANT_Y
set CONFIG_DRM_NEW $CONSTANT_Y }
	if {($CONFIG_DRM == 1) && ($CONFIG_DRM_OLD != 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_DRM_TDFX == 2)} then {set CONFIG_DRM_TDFX 1}; set CONFIG_DRM_TDFX [expr $CONFIG_DRM_TDFX&15]}
	if {($CONFIG_DRM == 1) && ($CONFIG_DRM_OLD != 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_DRM_GAMMA == 2)} then {set CONFIG_DRM_GAMMA 1}; set CONFIG_DRM_GAMMA [expr $CONFIG_DRM_GAMMA&15]}
	if {($CONFIG_DRM == 1) && ($CONFIG_DRM_OLD != 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_DRM_R128 == 2)} then {set CONFIG_DRM_R128 1}; set CONFIG_DRM_R128 [expr $CONFIG_DRM_R128&15]}
	if {($CONFIG_DRM == 1) && ($CONFIG_DRM_OLD != 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_DRM_RADEON == 2)} then {set CONFIG_DRM_RADEON 1}; set CONFIG_DRM_RADEON [expr $CONFIG_DRM_RADEON&15]}
	global CONFIG_DRM_I810
	if {($CONFIG_DRM == 1) && ($CONFIG_DRM_OLD != 1) && ($CONFIG_AGP == 1 || $CONFIG_AGP == 2 || $CONFIG_AGP == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_AGP]]; set CONFIG_DRM_I810 [sync_tristate $CONFIG_DRM_I810 $tmpvar_dep]; set CONFIG_DRM_I810 [expr $CONFIG_DRM_I810&15]}
	global CONFIG_DRM_I810_XFREE_41
	if {($CONFIG_DRM == 1) && ($CONFIG_DRM_OLD != 1) && ($CONFIG_DRM_I810 == 1 || $CONFIG_DRM_I810 == 2 || $CONFIG_DRM_I810 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_DRM_I810]];set CONFIG_DRM_I810_XFREE_41 [sync_bool $CONFIG_DRM_I810_XFREE_41 $tmpvar_dep 1];set CONFIG_DRM_I810_XFREE_41 [expr $CONFIG_DRM_I810_XFREE_41&15]}
	global CONFIG_DRM_I830
	if {($CONFIG_DRM == 1) && ($CONFIG_DRM_OLD != 1) && ($CONFIG_AGP == 1 || $CONFIG_AGP == 2 || $CONFIG_AGP == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_AGP]]; set CONFIG_DRM_I830 [sync_tristate $CONFIG_DRM_I830 $tmpvar_dep]; set CONFIG_DRM_I830 [expr $CONFIG_DRM_I830&15]}
	global CONFIG_DRM_MGA
	if {($CONFIG_DRM == 1) && ($CONFIG_DRM_OLD != 1) && ($CONFIG_AGP == 1 || $CONFIG_AGP == 2 || $CONFIG_AGP == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_AGP]]; set CONFIG_DRM_MGA [sync_tristate $CONFIG_DRM_MGA $tmpvar_dep]; set CONFIG_DRM_MGA [expr $CONFIG_DRM_MGA&15]}
	global CONFIG_DRM_SIS
	if {($CONFIG_DRM == 1) && ($CONFIG_DRM_OLD != 1) && ($CONFIG_AGP == 1 || $CONFIG_AGP == 2 || $CONFIG_AGP == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_AGP]]; set CONFIG_DRM_SIS [sync_tristate $CONFIG_DRM_SIS $tmpvar_dep]; set CONFIG_DRM_SIS [expr $CONFIG_DRM_SIS&15]}
}


proc menu66 {w title} {
	set oldFocus [focus]
	catch {focus .menu58}
	catch {destroy $w; unregister_active 66}
	toplevel $w -class Dialog
	wm withdraw $w
	global active_menus
	set active_menus [lsort -integer [linsert $active_menus end 66]]
	message $w.m -width 400 -aspect 300 -text \
		"PCMCIA character devices"  -relief raised
	pack $w.m -pady 10 -side top -padx 10
	wm title $w "PCMCIA character devices" 

	bind $w <Escape> "catch {focus $oldFocus}; destroy $w; unregister_active 66; break"
	set nextscript "catch {focus $oldFocus}; destroy $w; unregister_active 66; catch {destroy .menu58}; unregister_active 58; menu67 .menu67 \"$title\""
	frame $w.f
	button $w.f.back -text "OK" \
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 66"
	button $w.f.next -text "Next" -underline 0\
		-width 15 -command $nextscript
	bind all <Alt-n> $nextscript
	button $w.f.prev -text "Prev" -underline 0\
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 66; menu65 .menu65 \"$title\""
	bind $w <Alt-p> "catch {focus $oldFocus}; destroy $w; unregister_active 66; menu65 .menu65 \"$title\";break"
	pack $w.f.back $w.f.next $w.f.prev -side left -expand on
	pack $w.f -pady 10 -side bottom -anchor w -fill x
	frame $w.topline -relief ridge -borderwidth 2 -height 2
	pack $w.topline -side top -fill x

	frame $w.botline -relief ridge -borderwidth 2 -height 2
	pack $w.botline -side bottom -fill x

	frame $w.config
	pack $w.config -fill y -expand on

	scrollbar $w.config.vscroll -command "$w.config.canvas yview"
	pack $w.config.vscroll -side right -fill y

	canvas $w.config.canvas -height 1\
		-relief flat -borderwidth 0 -yscrollcommand "$w.config.vscroll set" \
		-width [expr [winfo screenwidth .] * 1 / 2] 
	frame $w.config.f
	bind $w <Key-Down> "$w.config.canvas yview scroll  1 unit;break;"
	bind $w <Key-Up> "$w.config.canvas yview scroll  -1 unit;break;"
	bind $w <Key-Next> "$w.config.canvas yview scroll  1 page;break;"
	bind $w <Key-Prior> "$w.config.canvas yview scroll  -1 page;break;"
	bind $w <Key-Home> "$w.config.canvas yview moveto 0;break;"
	bind $w <Key-End> "$w.config.canvas yview moveto 1 ;break;"
	pack $w.config.canvas -side right -fill y


	dep_tristate $w.config.f 66 0 "PCMCIA serial device support" CONFIG_PCMCIA_SERIAL_CS
	tristate $w.config.f 66 1 "SyncLink PC Card support" CONFIG_SYNCLINK_CS



	focus $w
	update_active
	global winx; global winy
	if {[winfo exists .menu58] == 0} then {menu58 .menu58 "Character devices"}
	set winx [expr [winfo x .menu58]+30]; set winy [expr [winfo y .menu58]+30]
	if {[winfo exists $w]} then {wm geometry $w +$winx+$winy}
	update idletasks
	if {[winfo exists $w]} then  {$w.config.canvas create window 0 0 -anchor nw -window $w.config.f

	$w.config.canvas configure \
		-width [expr [winfo reqwidth $w.config.f] + 1]\
		-scrollregion "-1 -1 [expr [winfo reqwidth $w.config.f] + 1] \
			 [expr [winfo reqheight $w.config.f] + 1]"

	set winy [expr [winfo reqh $w] - [winfo reqh $w.config.canvas]]
	set scry [expr [winfo screenh $w] / 2]
	set maxy [expr [winfo screenh $w] * 3 / 4]
	set canvtotal [expr [winfo reqh $w.config.f] + 2]
	if [expr $winy + $canvtotal < $maxy] {
		$w.config.canvas configure -height $canvtotal
	} else {
		$w.config.canvas configure -height [expr $scry - $winy]
		}
	}
	update idletasks
	if {[winfo exists $w]} then {
	wm maxsize $w [winfo width $w] [winfo screenheight $w]
	wm minsize $w [winfo width $w] 100

	wm deiconify $w
}
}

proc update_menu66 {} {
	global CONFIG_MODULES
	global CONFIG_HOTPLUG
	global CONFIG_PCMCIA
	global CONFIG_SERIAL
	global CONFIG_PCMCIA_SERIAL_CS
	if {($CONFIG_HOTPLUG == 1 && $CONFIG_PCMCIA != 0) && ($CONFIG_SERIAL == 1 || $CONFIG_SERIAL == 2 || $CONFIG_SERIAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SERIAL]];set CONFIG_PCMCIA_SERIAL_CS [sync_tristate $CONFIG_PCMCIA_SERIAL_CS $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu66.config.f.x0 disabled {y}} else {configure_entry .menu66.config.f.x0 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu66.config.f.x0 disabled {m}} else {configure_entry .menu66.config.f.x0 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu66.config.f.x0 normal {m}} else {configure_entry .menu66.config.f.x0 disabled {m}}; configure_entry .menu66.config.f.x0 normal {n l}} else {configure_entry .menu66.config.f.x0 disabled {y n m l}}
	global CONFIG_SYNCLINK_CS
	if {($CONFIG_HOTPLUG == 1 && $CONFIG_PCMCIA != 0)} then {
	configure_entry .menu66.config.f.x1 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu66.config.f.x1 normal {m}} else {configure_entry .menu66.config.f.x1 disabled {m}}; configure_entry .menu66.config.f.x1 normal {n l}} else {configure_entry .menu66.config.f.x1 disabled {y n m l}}
}


proc update_define_menu66 {} {
	update_define_mainmenu
	global CONFIG_MODULES
	global CONFIG_PCMCIA_CHRDEV
	global CONFIG_SYNCLINK_CS
set CONFIG_SYNCLINK_CS [expr $CONFIG_SYNCLINK_CS|16]
	global CONFIG_HOTPLUG
	global CONFIG_PCMCIA
	global CONFIG_SERIAL
	global CONFIG_PCMCIA_SERIAL_CS
	if {($CONFIG_HOTPLUG == 1 && $CONFIG_PCMCIA != 0) && ($CONFIG_SERIAL == 1 || $CONFIG_SERIAL == 2 || $CONFIG_SERIAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SERIAL]]; set CONFIG_PCMCIA_SERIAL_CS [sync_tristate $CONFIG_PCMCIA_SERIAL_CS $tmpvar_dep]; set CONFIG_PCMCIA_SERIAL_CS [expr $CONFIG_PCMCIA_SERIAL_CS&15]}
	if {($CONFIG_HOTPLUG == 1 && $CONFIG_PCMCIA != 0) && ($CONFIG_PCMCIA_SERIAL_CS == 1)} then {	global CONSTANT_Y
set CONFIG_PCMCIA_CHRDEV $CONSTANT_Y }
	if {($CONFIG_HOTPLUG == 1 && $CONFIG_PCMCIA != 0)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_SYNCLINK_CS == 2)} then {set CONFIG_SYNCLINK_CS 1}; set CONFIG_SYNCLINK_CS [expr $CONFIG_SYNCLINK_CS&15]}
}


menu_option menu67 67 "Multimedia devices"
proc menu67 {w title} {
	set oldFocus [focus]
	catch {destroy $w; unregister_active 67}
	toplevel $w -class Dialog
	wm withdraw $w
	global active_menus
	set active_menus [lsort -integer [linsert $active_menus end 67]]
	message $w.m -width 400 -aspect 300 -text \
		"Multimedia devices"  -relief raised
	pack $w.m -pady 10 -side top -padx 10
	wm title $w "Multimedia devices" 

	bind $w <Escape> "catch {focus $oldFocus}; destroy $w; unregister_active 67; break"
	set nextscript "catch {focus $oldFocus}; menu68 .menu68 \"$title\""
	frame $w.f
	button $w.f.back -text "Main Menu" \
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 67"
	button $w.f.next -text "Next" -underline 0\
		-width 15 -command $nextscript
	bind all <Alt-n> $nextscript
	button $w.f.prev -text "Prev" -underline 0\
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 67; menu66 .menu66 \"$title\""
	bind $w <Alt-p> "catch {focus $oldFocus}; destroy $w; unregister_active 67; menu66 .menu66 \"$title\";break"
	pack $w.f.back $w.f.next $w.f.prev -side left -expand on
	pack $w.f -pady 10 -side bottom -anchor w -fill x
	frame $w.topline -relief ridge -borderwidth 2 -height 2
	pack $w.topline -side top -fill x

	frame $w.botline -relief ridge -borderwidth 2 -height 2
	pack $w.botline -side bottom -fill x

	frame $w.config
	pack $w.config -fill y -expand on

	scrollbar $w.config.vscroll -command "$w.config.canvas yview"
	pack $w.config.vscroll -side right -fill y

	canvas $w.config.canvas -height 1\
		-relief flat -borderwidth 0 -yscrollcommand "$w.config.vscroll set" \
		-width [expr [winfo screenwidth .] * 1 / 2] 
	frame $w.config.f
	bind $w <Key-Down> "$w.config.canvas yview scroll  1 unit;break;"
	bind $w <Key-Up> "$w.config.canvas yview scroll  -1 unit;break;"
	bind $w <Key-Next> "$w.config.canvas yview scroll  1 page;break;"
	bind $w <Key-Prior> "$w.config.canvas yview scroll  -1 page;break;"
	bind $w <Key-Home> "$w.config.canvas yview moveto 0;break;"
	bind $w <Key-End> "$w.config.canvas yview moveto 1 ;break;"
	pack $w.config.canvas -side right -fill y


	tristate $w.config.f 67 0 "Video For Linux" CONFIG_VIDEO_DEV
	submenu $w.config.f 67 1 "Video For Linux" 68
	submenu $w.config.f 67 2 "Radio Adapters" 69



	focus $w
	update_active
	global winx; global winy
	set winx [expr [winfo x .]+30]; set winy [expr [winfo y .]+30]
	if {[winfo exists $w]} then {wm geometry $w +$winx+$winy}
	update idletasks
	if {[winfo exists $w]} then  {$w.config.canvas create window 0 0 -anchor nw -window $w.config.f

	$w.config.canvas configure \
		-width [expr [winfo reqwidth $w.config.f] + 1]\
		-scrollregion "-1 -1 [expr [winfo reqwidth $w.config.f] + 1] \
			 [expr [winfo reqheight $w.config.f] + 1]"

	set winy [expr [winfo reqh $w] - [winfo reqh $w.config.canvas]]
	set scry [expr [winfo screenh $w] / 2]
	set maxy [expr [winfo screenh $w] * 3 / 4]
	set canvtotal [expr [winfo reqh $w.config.f] + 2]
	if [expr $winy + $canvtotal < $maxy] {
		$w.config.canvas configure -height $canvtotal
	} else {
		$w.config.canvas configure -height [expr $scry - $winy]
		}
	}
	update idletasks
	if {[winfo exists $w]} then {
	wm maxsize $w [winfo width $w] [winfo screenheight $w]
	wm minsize $w [winfo width $w] 100

	wm deiconify $w
}
}

proc update_menu67 {} {
	global CONFIG_VIDEO_DEV
	global CONFIG_MODULES

	if {($CONFIG_MODULES == 1)} then {configure_entry .menu67.config.f.x0 normal {m}} else {configure_entry .menu67.config.f.x0 disabled {m}}
	if {($CONFIG_VIDEO_DEV != 0)} then {configure_entry .menu67.config.f.x1 normal {m}} else {configure_entry .menu67.config.f.x1 disabled {m}}
	if {($CONFIG_VIDEO_DEV != 0)} then {configure_entry .menu67.config.f.x2 normal {m}} else {configure_entry .menu67.config.f.x2 disabled {m}}
}


proc update_define_menu67 {} {
	update_define_mainmenu
	global CONFIG_MODULES
	global CONFIG_VIDEO_DEV

	if {($CONFIG_MODULES == 0)} then {if {($CONFIG_VIDEO_DEV == 2)} then {set CONFIG_VIDEO_DEV 1}}
}


proc menu68 {w title} {
	set oldFocus [focus]
	catch {focus .menu67}
	catch {destroy $w; unregister_active 68}
	toplevel $w -class Dialog
	wm withdraw $w
	global active_menus
	set active_menus [lsort -integer [linsert $active_menus end 68]]
	message $w.m -width 400 -aspect 300 -text \
		"Video For Linux"  -relief raised
	pack $w.m -pady 10 -side top -padx 10
	wm title $w "Video For Linux" 

	bind $w <Escape> "catch {focus $oldFocus}; destroy $w; unregister_active 68; break"
	set nextscript "catch {focus $oldFocus}; destroy $w; unregister_active 68; menu69 .menu69 \"$title\""
	frame $w.f
	button $w.f.back -text "OK" \
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 68"
	button $w.f.next -text "Next" -underline 0\
		-width 15 -command $nextscript
	bind all <Alt-n> $nextscript
	button $w.f.prev -text "Prev" -underline 0\
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 68; menu67 .menu67 \"$title\""
	bind $w <Alt-p> "catch {focus $oldFocus}; destroy $w; unregister_active 68; menu67 .menu67 \"$title\";break"
	pack $w.f.back $w.f.next $w.f.prev -side left -expand on
	pack $w.f -pady 10 -side bottom -anchor w -fill x
	frame $w.topline -relief ridge -borderwidth 2 -height 2
	pack $w.topline -side top -fill x

	frame $w.botline -relief ridge -borderwidth 2 -height 2
	pack $w.botline -side bottom -fill x

	frame $w.config
	pack $w.config -fill y -expand on

	scrollbar $w.config.vscroll -command "$w.config.canvas yview"
	pack $w.config.vscroll -side right -fill y

	canvas $w.config.canvas -height 1\
		-relief flat -borderwidth 0 -yscrollcommand "$w.config.vscroll set" \
		-width [expr [winfo screenwidth .] * 1 / 2] 
	frame $w.config.f
	bind $w <Key-Down> "$w.config.canvas yview scroll  1 unit;break;"
	bind $w <Key-Up> "$w.config.canvas yview scroll  -1 unit;break;"
	bind $w <Key-Next> "$w.config.canvas yview scroll  1 page;break;"
	bind $w <Key-Prior> "$w.config.canvas yview scroll  -1 page;break;"
	bind $w <Key-Home> "$w.config.canvas yview moveto 0;break;"
	bind $w <Key-End> "$w.config.canvas yview moveto 1 ;break;"
	pack $w.config.canvas -side right -fill y


	bool $w.config.f 68 0 "  V4L information in proc filesystem" CONFIG_VIDEO_PROC_FS
	dep_tristate $w.config.f 68 1 "  I2C on parallel port" CONFIG_I2C_PARPORT
	comment $w.config.f 68 2 "Video Adapters"
	dep_tristate $w.config.f 68 3 "  BT848 Video For Linux" CONFIG_VIDEO_BT848
	dep_tristate $w.config.f 68 4 "  Mediavision Pro Movie Studio Video For Linux" CONFIG_VIDEO_PMS
	dep_tristate $w.config.f 68 5 "  Quickcam BW Video For Linux" CONFIG_VIDEO_BWQCAM
	dep_tristate $w.config.f 68 6 "  QuickCam Colour Video For Linux (EXPERIMENTAL)" CONFIG_VIDEO_CQCAM
	dep_tristate $w.config.f 68 7 "  W9966CF Webcam (FlyCam Supra and others) Video For Linux" CONFIG_VIDEO_W9966
	dep_tristate $w.config.f 68 8 "  CPiA Video For Linux" CONFIG_VIDEO_CPIA
	dep_tristate $w.config.f 68 9 "    CPiA Parallel Port Lowlevel Support" CONFIG_VIDEO_CPIA_PP
	dep_tristate $w.config.f 68 10 "    CPiA USB Lowlevel Support" CONFIG_VIDEO_CPIA_USB
	dep_tristate $w.config.f 68 11 "  SAA5249 Teletext processor" CONFIG_VIDEO_SAA5249
	dep_tristate $w.config.f 68 12 "  SAB3036 tuner" CONFIG_TUNER_3036
	dep_tristate $w.config.f 68 13 "  Stradis 4:2:2 MPEG-2 video driver  (EXPERIMENTAL)" CONFIG_VIDEO_STRADIS
	dep_tristate $w.config.f 68 14 "  Zoran ZR36057/36060 Video For Linux" CONFIG_VIDEO_ZORAN
	dep_tristate $w.config.f 68 15 "  Iomega Buz support" CONFIG_VIDEO_ZORAN_BUZ
	dep_tristate $w.config.f 68 16 "  Miro DC10(+) support" CONFIG_VIDEO_ZORAN_DC10
	dep_tristate $w.config.f 68 17 "  Linux Media Labs LML33 support" CONFIG_VIDEO_ZORAN_LML33
	dep_tristate $w.config.f 68 18 "  Zoran ZR36120/36125 Video For Linux" CONFIG_VIDEO_ZR36120
	dep_tristate $w.config.f 68 19 "  NetWinder Video for Linux (EXPERIMENTAL)" CONFIG_VIDEO_CYBERPRO
	dep_tristate $w.config.f 68 20 "  Sony Vaio Picturebook Motion Eye Video For Linux (EXPERIMENTAL)" CONFIG_VIDEO_MEYE



	focus $w
	update_active
	global winx; global winy
	if {[winfo exists .menu67] == 0} then {menu67 .menu67 "Multimedia devices"}
	set winx [expr [winfo x .menu67]+30]; set winy [expr [winfo y .menu67]+30]
	if {[winfo exists $w]} then {wm geometry $w +$winx+$winy}
	update idletasks
	if {[winfo exists $w]} then  {$w.config.canvas create window 0 0 -anchor nw -window $w.config.f

	$w.config.canvas configure \
		-width [expr [winfo reqwidth $w.config.f] + 1]\
		-scrollregion "-1 -1 [expr [winfo reqwidth $w.config.f] + 1] \
			 [expr [winfo reqheight $w.config.f] + 1]"

	set winy [expr [winfo reqh $w] - [winfo reqh $w.config.canvas]]
	set scry [expr [winfo screenh $w] / 2]
	set maxy [expr [winfo screenh $w] * 3 / 4]
	set canvtotal [expr [winfo reqh $w.config.f] + 2]
	if [expr $winy + $canvtotal < $maxy] {
		$w.config.canvas configure -height $canvtotal
	} else {
		$w.config.canvas configure -height [expr $scry - $winy]
		}
	}
	update idletasks
	if {[winfo exists $w]} then {
	wm maxsize $w [winfo width $w] [winfo screenheight $w]
	wm minsize $w [winfo width $w] 100

	wm deiconify $w
}
}

proc update_menu68 {} {
	global CONFIG_VIDEO_DEV
	global CONFIG_VIDEO_PROC_FS
	if {($CONFIG_VIDEO_DEV != 0)} then {
	configure_entry .menu68.config.f.x0 normal {n l y}} else {configure_entry .menu68.config.f.x0 disabled {y n l}}
	global CONFIG_MODULES
	global CONFIG_PARPORT
	global CONFIG_I2C
	global CONFIG_I2C_PARPORT
	if {($CONFIG_VIDEO_DEV != 0) && ($CONFIG_PARPORT == 1 || $CONFIG_PARPORT == 2 || $CONFIG_PARPORT == 4) && ($CONFIG_I2C == 1 || $CONFIG_I2C == 2 || $CONFIG_I2C == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PARPORT $CONFIG_I2C]];set CONFIG_I2C_PARPORT [sync_tristate $CONFIG_I2C_PARPORT $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu68.config.f.x1 disabled {y}} else {configure_entry .menu68.config.f.x1 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu68.config.f.x1 disabled {m}} else {configure_entry .menu68.config.f.x1 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu68.config.f.x1 normal {m}} else {configure_entry .menu68.config.f.x1 disabled {m}}; configure_entry .menu68.config.f.x1 normal {n l}} else {configure_entry .menu68.config.f.x1 disabled {y n m l}}
	if {($CONFIG_VIDEO_DEV != 0)} then {configure_entry .menu68.config.f.x2 normal {m}} else {configure_entry .menu68.config.f.x2 disabled {m}}
	global CONFIG_PCI
	global CONFIG_I2C_ALGOBIT
	global CONFIG_SOUND
	global CONFIG_VIDEO_BT848
	if {($CONFIG_VIDEO_DEV != 0) && ($CONFIG_VIDEO_DEV == 1 || $CONFIG_VIDEO_DEV == 2 || $CONFIG_VIDEO_DEV == 4) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4) && ($CONFIG_I2C_ALGOBIT == 1 || $CONFIG_I2C_ALGOBIT == 2 || $CONFIG_I2C_ALGOBIT == 4) && ($CONFIG_SOUND == 1 || $CONFIG_SOUND == 2 || $CONFIG_SOUND == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_VIDEO_DEV $CONFIG_PCI $CONFIG_I2C_ALGOBIT $CONFIG_SOUND]];set CONFIG_VIDEO_BT848 [sync_tristate $CONFIG_VIDEO_BT848 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu68.config.f.x3 disabled {y}} else {configure_entry .menu68.config.f.x3 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu68.config.f.x3 disabled {m}} else {configure_entry .menu68.config.f.x3 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu68.config.f.x3 normal {m}} else {configure_entry .menu68.config.f.x3 disabled {m}}; configure_entry .menu68.config.f.x3 normal {n l}} else {configure_entry .menu68.config.f.x3 disabled {y n m l}}
	global CONFIG_VIDEO_PMS
	if {($CONFIG_VIDEO_DEV != 0) && ($CONFIG_VIDEO_DEV == 1 || $CONFIG_VIDEO_DEV == 2 || $CONFIG_VIDEO_DEV == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_VIDEO_DEV]];set CONFIG_VIDEO_PMS [sync_tristate $CONFIG_VIDEO_PMS $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu68.config.f.x4 disabled {y}} else {configure_entry .menu68.config.f.x4 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu68.config.f.x4 disabled {m}} else {configure_entry .menu68.config.f.x4 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu68.config.f.x4 normal {m}} else {configure_entry .menu68.config.f.x4 disabled {m}}; configure_entry .menu68.config.f.x4 normal {n l}} else {configure_entry .menu68.config.f.x4 disabled {y n m l}}
	global CONFIG_VIDEO_BWQCAM
	if {($CONFIG_VIDEO_DEV != 0) && ($CONFIG_PARPORT != 0) && ($CONFIG_VIDEO_DEV == 1 || $CONFIG_VIDEO_DEV == 2 || $CONFIG_VIDEO_DEV == 4) && ($CONFIG_PARPORT == 1 || $CONFIG_PARPORT == 2 || $CONFIG_PARPORT == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_VIDEO_DEV $CONFIG_PARPORT]];set CONFIG_VIDEO_BWQCAM [sync_tristate $CONFIG_VIDEO_BWQCAM $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu68.config.f.x5 disabled {y}} else {configure_entry .menu68.config.f.x5 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu68.config.f.x5 disabled {m}} else {configure_entry .menu68.config.f.x5 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu68.config.f.x5 normal {m}} else {configure_entry .menu68.config.f.x5 disabled {m}}; configure_entry .menu68.config.f.x5 normal {n l}} else {configure_entry .menu68.config.f.x5 disabled {y n m l}}
	global CONFIG_EXPERIMENTAL
	global CONFIG_VIDEO_CQCAM
	if {($CONFIG_VIDEO_DEV != 0) && ($CONFIG_PARPORT != 0) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_VIDEO_DEV == 1 || $CONFIG_VIDEO_DEV == 2 || $CONFIG_VIDEO_DEV == 4) && ($CONFIG_PARPORT == 1 || $CONFIG_PARPORT == 2 || $CONFIG_PARPORT == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_VIDEO_DEV $CONFIG_PARPORT]];set CONFIG_VIDEO_CQCAM [sync_tristate $CONFIG_VIDEO_CQCAM $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu68.config.f.x6 disabled {y}} else {configure_entry .menu68.config.f.x6 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu68.config.f.x6 disabled {m}} else {configure_entry .menu68.config.f.x6 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu68.config.f.x6 normal {m}} else {configure_entry .menu68.config.f.x6 disabled {m}}; configure_entry .menu68.config.f.x6 normal {n l}} else {configure_entry .menu68.config.f.x6 disabled {y n m l}}
	global CONFIG_PARPORT_1284
	global CONFIG_VIDEO_W9966
	if {($CONFIG_VIDEO_DEV != 0) && ($CONFIG_PARPORT != 0) && ($CONFIG_PARPORT_1284 != 0) && ($CONFIG_VIDEO_DEV == 1 || $CONFIG_VIDEO_DEV == 2 || $CONFIG_VIDEO_DEV == 4) && ($CONFIG_PARPORT == 1 || $CONFIG_PARPORT == 2 || $CONFIG_PARPORT == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_VIDEO_DEV $CONFIG_PARPORT]];set CONFIG_VIDEO_W9966 [sync_tristate $CONFIG_VIDEO_W9966 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu68.config.f.x7 disabled {y}} else {configure_entry .menu68.config.f.x7 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu68.config.f.x7 disabled {m}} else {configure_entry .menu68.config.f.x7 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu68.config.f.x7 normal {m}} else {configure_entry .menu68.config.f.x7 disabled {m}}; configure_entry .menu68.config.f.x7 normal {n l}} else {configure_entry .menu68.config.f.x7 disabled {y n m l}}
	global CONFIG_VIDEO_CPIA
	if {($CONFIG_VIDEO_DEV != 0) && ($CONFIG_VIDEO_DEV == 1 || $CONFIG_VIDEO_DEV == 2 || $CONFIG_VIDEO_DEV == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_VIDEO_DEV]];set CONFIG_VIDEO_CPIA [sync_tristate $CONFIG_VIDEO_CPIA $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu68.config.f.x8 disabled {y}} else {configure_entry .menu68.config.f.x8 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu68.config.f.x8 disabled {m}} else {configure_entry .menu68.config.f.x8 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu68.config.f.x8 normal {m}} else {configure_entry .menu68.config.f.x8 disabled {m}}; configure_entry .menu68.config.f.x8 normal {n l}} else {configure_entry .menu68.config.f.x8 disabled {y n m l}}
	global CONFIG_VIDEO_CPIA_PP
	if {($CONFIG_VIDEO_DEV != 0) && ($CONFIG_VIDEO_CPIA != 0) && ($CONFIG_PARPORT_1284 != 0) && ($CONFIG_VIDEO_CPIA == 1 || $CONFIG_VIDEO_CPIA == 2 || $CONFIG_VIDEO_CPIA == 4) && ($CONFIG_PARPORT == 1 || $CONFIG_PARPORT == 2 || $CONFIG_PARPORT == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_VIDEO_CPIA $CONFIG_PARPORT]];set CONFIG_VIDEO_CPIA_PP [sync_tristate $CONFIG_VIDEO_CPIA_PP $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu68.config.f.x9 disabled {y}} else {configure_entry .menu68.config.f.x9 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu68.config.f.x9 disabled {m}} else {configure_entry .menu68.config.f.x9 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu68.config.f.x9 normal {m}} else {configure_entry .menu68.config.f.x9 disabled {m}}; configure_entry .menu68.config.f.x9 normal {n l}} else {configure_entry .menu68.config.f.x9 disabled {y n m l}}
	global CONFIG_USB
	global CONFIG_VIDEO_CPIA_USB
	if {($CONFIG_VIDEO_DEV != 0) && ($CONFIG_VIDEO_CPIA != 0) && ($CONFIG_USB != 0) && ($CONFIG_VIDEO_CPIA == 1 || $CONFIG_VIDEO_CPIA == 2 || $CONFIG_VIDEO_CPIA == 4) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_VIDEO_CPIA $CONFIG_USB]];set CONFIG_VIDEO_CPIA_USB [sync_tristate $CONFIG_VIDEO_CPIA_USB $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu68.config.f.x10 disabled {y}} else {configure_entry .menu68.config.f.x10 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu68.config.f.x10 disabled {m}} else {configure_entry .menu68.config.f.x10 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu68.config.f.x10 normal {m}} else {configure_entry .menu68.config.f.x10 disabled {m}}; configure_entry .menu68.config.f.x10 normal {n l}} else {configure_entry .menu68.config.f.x10 disabled {y n m l}}
	global CONFIG_VIDEO_SAA5249
	if {($CONFIG_VIDEO_DEV != 0) && ($CONFIG_VIDEO_DEV == 1 || $CONFIG_VIDEO_DEV == 2 || $CONFIG_VIDEO_DEV == 4) && ($CONFIG_I2C == 1 || $CONFIG_I2C == 2 || $CONFIG_I2C == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_VIDEO_DEV $CONFIG_I2C]];set CONFIG_VIDEO_SAA5249 [sync_tristate $CONFIG_VIDEO_SAA5249 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu68.config.f.x11 disabled {y}} else {configure_entry .menu68.config.f.x11 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu68.config.f.x11 disabled {m}} else {configure_entry .menu68.config.f.x11 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu68.config.f.x11 normal {m}} else {configure_entry .menu68.config.f.x11 disabled {m}}; configure_entry .menu68.config.f.x11 normal {n l}} else {configure_entry .menu68.config.f.x11 disabled {y n m l}}
	global CONFIG_TUNER_3036
	if {($CONFIG_VIDEO_DEV != 0) && ($CONFIG_VIDEO_DEV == 1 || $CONFIG_VIDEO_DEV == 2 || $CONFIG_VIDEO_DEV == 4) && ($CONFIG_I2C == 1 || $CONFIG_I2C == 2 || $CONFIG_I2C == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_VIDEO_DEV $CONFIG_I2C]];set CONFIG_TUNER_3036 [sync_tristate $CONFIG_TUNER_3036 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu68.config.f.x12 disabled {y}} else {configure_entry .menu68.config.f.x12 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu68.config.f.x12 disabled {m}} else {configure_entry .menu68.config.f.x12 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu68.config.f.x12 normal {m}} else {configure_entry .menu68.config.f.x12 disabled {m}}; configure_entry .menu68.config.f.x12 normal {n l}} else {configure_entry .menu68.config.f.x12 disabled {y n m l}}
	global CONFIG_VIDEO_STRADIS
	if {($CONFIG_VIDEO_DEV != 0) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_VIDEO_DEV == 1 || $CONFIG_VIDEO_DEV == 2 || $CONFIG_VIDEO_DEV == 4) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_VIDEO_DEV $CONFIG_PCI]];set CONFIG_VIDEO_STRADIS [sync_tristate $CONFIG_VIDEO_STRADIS $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu68.config.f.x13 disabled {y}} else {configure_entry .menu68.config.f.x13 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu68.config.f.x13 disabled {m}} else {configure_entry .menu68.config.f.x13 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu68.config.f.x13 normal {m}} else {configure_entry .menu68.config.f.x13 disabled {m}}; configure_entry .menu68.config.f.x13 normal {n l}} else {configure_entry .menu68.config.f.x13 disabled {y n m l}}
	global CONFIG_VIDEO_ZORAN
	if {($CONFIG_VIDEO_DEV != 0) && ($CONFIG_VIDEO_DEV == 1 || $CONFIG_VIDEO_DEV == 2 || $CONFIG_VIDEO_DEV == 4) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4) && ($CONFIG_I2C == 1 || $CONFIG_I2C == 2 || $CONFIG_I2C == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_VIDEO_DEV $CONFIG_PCI $CONFIG_I2C]];set CONFIG_VIDEO_ZORAN [sync_tristate $CONFIG_VIDEO_ZORAN $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu68.config.f.x14 disabled {y}} else {configure_entry .menu68.config.f.x14 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu68.config.f.x14 disabled {m}} else {configure_entry .menu68.config.f.x14 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu68.config.f.x14 normal {m}} else {configure_entry .menu68.config.f.x14 disabled {m}}; configure_entry .menu68.config.f.x14 normal {n l}} else {configure_entry .menu68.config.f.x14 disabled {y n m l}}
	global CONFIG_VIDEO_ZORAN_BUZ
	if {($CONFIG_VIDEO_DEV != 0) && ($CONFIG_VIDEO_ZORAN == 1 || $CONFIG_VIDEO_ZORAN == 2 || $CONFIG_VIDEO_ZORAN == 4) && ($CONFIG_VIDEO_DEV == 1 || $CONFIG_VIDEO_DEV == 2 || $CONFIG_VIDEO_DEV == 4) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4) && ($CONFIG_I2C == 1 || $CONFIG_I2C == 2 || $CONFIG_I2C == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_VIDEO_ZORAN $CONFIG_VIDEO_DEV $CONFIG_PCI $CONFIG_I2C]];set CONFIG_VIDEO_ZORAN_BUZ [sync_tristate $CONFIG_VIDEO_ZORAN_BUZ $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu68.config.f.x15 disabled {y}} else {configure_entry .menu68.config.f.x15 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu68.config.f.x15 disabled {m}} else {configure_entry .menu68.config.f.x15 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu68.config.f.x15 normal {m}} else {configure_entry .menu68.config.f.x15 disabled {m}}; configure_entry .menu68.config.f.x15 normal {n l}} else {configure_entry .menu68.config.f.x15 disabled {y n m l}}
	global CONFIG_VIDEO_ZORAN_DC10
	if {($CONFIG_VIDEO_DEV != 0) && ($CONFIG_VIDEO_ZORAN == 1 || $CONFIG_VIDEO_ZORAN == 2 || $CONFIG_VIDEO_ZORAN == 4) && ($CONFIG_VIDEO_DEV == 1 || $CONFIG_VIDEO_DEV == 2 || $CONFIG_VIDEO_DEV == 4) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4) && ($CONFIG_I2C == 1 || $CONFIG_I2C == 2 || $CONFIG_I2C == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_VIDEO_ZORAN $CONFIG_VIDEO_DEV $CONFIG_PCI $CONFIG_I2C]];set CONFIG_VIDEO_ZORAN_DC10 [sync_tristate $CONFIG_VIDEO_ZORAN_DC10 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu68.config.f.x16 disabled {y}} else {configure_entry .menu68.config.f.x16 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu68.config.f.x16 disabled {m}} else {configure_entry .menu68.config.f.x16 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu68.config.f.x16 normal {m}} else {configure_entry .menu68.config.f.x16 disabled {m}}; configure_entry .menu68.config.f.x16 normal {n l}} else {configure_entry .menu68.config.f.x16 disabled {y n m l}}
	global CONFIG_VIDEO_ZORAN_LML33
	if {($CONFIG_VIDEO_DEV != 0) && ($CONFIG_VIDEO_ZORAN == 1 || $CONFIG_VIDEO_ZORAN == 2 || $CONFIG_VIDEO_ZORAN == 4) && ($CONFIG_VIDEO_DEV == 1 || $CONFIG_VIDEO_DEV == 2 || $CONFIG_VIDEO_DEV == 4) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4) && ($CONFIG_I2C == 1 || $CONFIG_I2C == 2 || $CONFIG_I2C == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_VIDEO_ZORAN $CONFIG_VIDEO_DEV $CONFIG_PCI $CONFIG_I2C]];set CONFIG_VIDEO_ZORAN_LML33 [sync_tristate $CONFIG_VIDEO_ZORAN_LML33 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu68.config.f.x17 disabled {y}} else {configure_entry .menu68.config.f.x17 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu68.config.f.x17 disabled {m}} else {configure_entry .menu68.config.f.x17 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu68.config.f.x17 normal {m}} else {configure_entry .menu68.config.f.x17 disabled {m}}; configure_entry .menu68.config.f.x17 normal {n l}} else {configure_entry .menu68.config.f.x17 disabled {y n m l}}
	global CONFIG_VIDEO_ZR36120
	if {($CONFIG_VIDEO_DEV != 0) && ($CONFIG_VIDEO_DEV == 1 || $CONFIG_VIDEO_DEV == 2 || $CONFIG_VIDEO_DEV == 4) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4) && ($CONFIG_I2C == 1 || $CONFIG_I2C == 2 || $CONFIG_I2C == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_VIDEO_DEV $CONFIG_PCI $CONFIG_I2C]];set CONFIG_VIDEO_ZR36120 [sync_tristate $CONFIG_VIDEO_ZR36120 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu68.config.f.x18 disabled {y}} else {configure_entry .menu68.config.f.x18 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu68.config.f.x18 disabled {m}} else {configure_entry .menu68.config.f.x18 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu68.config.f.x18 normal {m}} else {configure_entry .menu68.config.f.x18 disabled {m}}; configure_entry .menu68.config.f.x18 normal {n l}} else {configure_entry .menu68.config.f.x18 disabled {y n m l}}
	global CONFIG_ARCH_NETWINDER
	global CONFIG_VIDEO_CYBERPRO
	if {($CONFIG_VIDEO_DEV != 0) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_ARCH_NETWINDER == 1) && ($CONFIG_VIDEO_DEV == 1 || $CONFIG_VIDEO_DEV == 2 || $CONFIG_VIDEO_DEV == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_VIDEO_DEV]];set CONFIG_VIDEO_CYBERPRO [sync_tristate $CONFIG_VIDEO_CYBERPRO $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu68.config.f.x19 disabled {y}} else {configure_entry .menu68.config.f.x19 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu68.config.f.x19 disabled {m}} else {configure_entry .menu68.config.f.x19 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu68.config.f.x19 normal {m}} else {configure_entry .menu68.config.f.x19 disabled {m}}; configure_entry .menu68.config.f.x19 normal {n l}} else {configure_entry .menu68.config.f.x19 disabled {y n m l}}
	global CONFIG_SONYPI
	global CONFIG_VIDEO_MEYE
	if {($CONFIG_VIDEO_DEV != 0) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_VIDEO_DEV == 1 || $CONFIG_VIDEO_DEV == 2 || $CONFIG_VIDEO_DEV == 4) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4) && ($CONFIG_SONYPI == 1 || $CONFIG_SONYPI == 2 || $CONFIG_SONYPI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_VIDEO_DEV $CONFIG_PCI $CONFIG_SONYPI]];set CONFIG_VIDEO_MEYE [sync_tristate $CONFIG_VIDEO_MEYE $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu68.config.f.x20 disabled {y}} else {configure_entry .menu68.config.f.x20 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu68.config.f.x20 disabled {m}} else {configure_entry .menu68.config.f.x20 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu68.config.f.x20 normal {m}} else {configure_entry .menu68.config.f.x20 disabled {m}}; configure_entry .menu68.config.f.x20 normal {n l}} else {configure_entry .menu68.config.f.x20 disabled {y n m l}}
}


proc update_define_menu68 {} {
	update_define_mainmenu
	global CONFIG_MODULES
	global CONFIG_VIDEO_PROC_FS
set CONFIG_VIDEO_PROC_FS [expr $CONFIG_VIDEO_PROC_FS|16]
	global CONFIG_VIDEO_DEV
	if {($CONFIG_VIDEO_DEV != 0)} then {
	set CONFIG_VIDEO_PROC_FS [expr $CONFIG_VIDEO_PROC_FS&15]}
	global CONFIG_PARPORT
	global CONFIG_I2C
	global CONFIG_I2C_PARPORT
	if {($CONFIG_VIDEO_DEV != 0) && ($CONFIG_PARPORT == 1 || $CONFIG_PARPORT == 2 || $CONFIG_PARPORT == 4) && ($CONFIG_I2C == 1 || $CONFIG_I2C == 2 || $CONFIG_I2C == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PARPORT $CONFIG_I2C]]; set CONFIG_I2C_PARPORT [sync_tristate $CONFIG_I2C_PARPORT $tmpvar_dep]; set CONFIG_I2C_PARPORT [expr $CONFIG_I2C_PARPORT&15]}
	global CONFIG_PCI
	global CONFIG_I2C_ALGOBIT
	global CONFIG_SOUND
	global CONFIG_VIDEO_BT848
	if {($CONFIG_VIDEO_DEV != 0) && ($CONFIG_VIDEO_DEV == 1 || $CONFIG_VIDEO_DEV == 2 || $CONFIG_VIDEO_DEV == 4) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4) && ($CONFIG_I2C_ALGOBIT == 1 || $CONFIG_I2C_ALGOBIT == 2 || $CONFIG_I2C_ALGOBIT == 4) && ($CONFIG_SOUND == 1 || $CONFIG_SOUND == 2 || $CONFIG_SOUND == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_VIDEO_DEV $CONFIG_PCI $CONFIG_I2C_ALGOBIT $CONFIG_SOUND]]; set CONFIG_VIDEO_BT848 [sync_tristate $CONFIG_VIDEO_BT848 $tmpvar_dep]; set CONFIG_VIDEO_BT848 [expr $CONFIG_VIDEO_BT848&15]}
	global CONFIG_VIDEO_PMS
	if {($CONFIG_VIDEO_DEV != 0) && ($CONFIG_VIDEO_DEV == 1 || $CONFIG_VIDEO_DEV == 2 || $CONFIG_VIDEO_DEV == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_VIDEO_DEV]]; set CONFIG_VIDEO_PMS [sync_tristate $CONFIG_VIDEO_PMS $tmpvar_dep]; set CONFIG_VIDEO_PMS [expr $CONFIG_VIDEO_PMS&15]}
	global CONFIG_VIDEO_BWQCAM
	if {($CONFIG_VIDEO_DEV != 0) && ($CONFIG_PARPORT != 0) && ($CONFIG_VIDEO_DEV == 1 || $CONFIG_VIDEO_DEV == 2 || $CONFIG_VIDEO_DEV == 4) && ($CONFIG_PARPORT == 1 || $CONFIG_PARPORT == 2 || $CONFIG_PARPORT == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_VIDEO_DEV $CONFIG_PARPORT]]; set CONFIG_VIDEO_BWQCAM [sync_tristate $CONFIG_VIDEO_BWQCAM $tmpvar_dep]; set CONFIG_VIDEO_BWQCAM [expr $CONFIG_VIDEO_BWQCAM&15]}
	global CONFIG_EXPERIMENTAL
	global CONFIG_VIDEO_CQCAM
	if {($CONFIG_VIDEO_DEV != 0) && ($CONFIG_PARPORT != 0) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_VIDEO_DEV == 1 || $CONFIG_VIDEO_DEV == 2 || $CONFIG_VIDEO_DEV == 4) && ($CONFIG_PARPORT == 1 || $CONFIG_PARPORT == 2 || $CONFIG_PARPORT == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_VIDEO_DEV $CONFIG_PARPORT]]; set CONFIG_VIDEO_CQCAM [sync_tristate $CONFIG_VIDEO_CQCAM $tmpvar_dep]; set CONFIG_VIDEO_CQCAM [expr $CONFIG_VIDEO_CQCAM&15]}
	global CONFIG_PARPORT_1284
	global CONFIG_VIDEO_W9966
	if {($CONFIG_VIDEO_DEV != 0) && ($CONFIG_PARPORT != 0) && ($CONFIG_PARPORT_1284 != 0) && ($CONFIG_VIDEO_DEV == 1 || $CONFIG_VIDEO_DEV == 2 || $CONFIG_VIDEO_DEV == 4) && ($CONFIG_PARPORT == 1 || $CONFIG_PARPORT == 2 || $CONFIG_PARPORT == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_VIDEO_DEV $CONFIG_PARPORT]]; set CONFIG_VIDEO_W9966 [sync_tristate $CONFIG_VIDEO_W9966 $tmpvar_dep]; set CONFIG_VIDEO_W9966 [expr $CONFIG_VIDEO_W9966&15]}
	global CONFIG_VIDEO_CPIA
	if {($CONFIG_VIDEO_DEV != 0) && ($CONFIG_VIDEO_DEV == 1 || $CONFIG_VIDEO_DEV == 2 || $CONFIG_VIDEO_DEV == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_VIDEO_DEV]]; set CONFIG_VIDEO_CPIA [sync_tristate $CONFIG_VIDEO_CPIA $tmpvar_dep]; set CONFIG_VIDEO_CPIA [expr $CONFIG_VIDEO_CPIA&15]}
	global CONFIG_VIDEO_CPIA_PP
	if {($CONFIG_VIDEO_DEV != 0) && ($CONFIG_VIDEO_CPIA != 0) && ($CONFIG_PARPORT_1284 != 0) && ($CONFIG_VIDEO_CPIA == 1 || $CONFIG_VIDEO_CPIA == 2 || $CONFIG_VIDEO_CPIA == 4) && ($CONFIG_PARPORT == 1 || $CONFIG_PARPORT == 2 || $CONFIG_PARPORT == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_VIDEO_CPIA $CONFIG_PARPORT]]; set CONFIG_VIDEO_CPIA_PP [sync_tristate $CONFIG_VIDEO_CPIA_PP $tmpvar_dep]; set CONFIG_VIDEO_CPIA_PP [expr $CONFIG_VIDEO_CPIA_PP&15]}
	global CONFIG_USB
	global CONFIG_VIDEO_CPIA_USB
	if {($CONFIG_VIDEO_DEV != 0) && ($CONFIG_VIDEO_CPIA != 0) && ($CONFIG_USB != 0) && ($CONFIG_VIDEO_CPIA == 1 || $CONFIG_VIDEO_CPIA == 2 || $CONFIG_VIDEO_CPIA == 4) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_VIDEO_CPIA $CONFIG_USB]]; set CONFIG_VIDEO_CPIA_USB [sync_tristate $CONFIG_VIDEO_CPIA_USB $tmpvar_dep]; set CONFIG_VIDEO_CPIA_USB [expr $CONFIG_VIDEO_CPIA_USB&15]}
	global CONFIG_VIDEO_SAA5249
	if {($CONFIG_VIDEO_DEV != 0) && ($CONFIG_VIDEO_DEV == 1 || $CONFIG_VIDEO_DEV == 2 || $CONFIG_VIDEO_DEV == 4) && ($CONFIG_I2C == 1 || $CONFIG_I2C == 2 || $CONFIG_I2C == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_VIDEO_DEV $CONFIG_I2C]]; set CONFIG_VIDEO_SAA5249 [sync_tristate $CONFIG_VIDEO_SAA5249 $tmpvar_dep]; set CONFIG_VIDEO_SAA5249 [expr $CONFIG_VIDEO_SAA5249&15]}
	global CONFIG_TUNER_3036
	if {($CONFIG_VIDEO_DEV != 0) && ($CONFIG_VIDEO_DEV == 1 || $CONFIG_VIDEO_DEV == 2 || $CONFIG_VIDEO_DEV == 4) && ($CONFIG_I2C == 1 || $CONFIG_I2C == 2 || $CONFIG_I2C == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_VIDEO_DEV $CONFIG_I2C]]; set CONFIG_TUNER_3036 [sync_tristate $CONFIG_TUNER_3036 $tmpvar_dep]; set CONFIG_TUNER_3036 [expr $CONFIG_TUNER_3036&15]}
	global CONFIG_VIDEO_STRADIS
	if {($CONFIG_VIDEO_DEV != 0) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_VIDEO_DEV == 1 || $CONFIG_VIDEO_DEV == 2 || $CONFIG_VIDEO_DEV == 4) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_VIDEO_DEV $CONFIG_PCI]]; set CONFIG_VIDEO_STRADIS [sync_tristate $CONFIG_VIDEO_STRADIS $tmpvar_dep]; set CONFIG_VIDEO_STRADIS [expr $CONFIG_VIDEO_STRADIS&15]}
	global CONFIG_VIDEO_ZORAN
	if {($CONFIG_VIDEO_DEV != 0) && ($CONFIG_VIDEO_DEV == 1 || $CONFIG_VIDEO_DEV == 2 || $CONFIG_VIDEO_DEV == 4) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4) && ($CONFIG_I2C == 1 || $CONFIG_I2C == 2 || $CONFIG_I2C == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_VIDEO_DEV $CONFIG_PCI $CONFIG_I2C]]; set CONFIG_VIDEO_ZORAN [sync_tristate $CONFIG_VIDEO_ZORAN $tmpvar_dep]; set CONFIG_VIDEO_ZORAN [expr $CONFIG_VIDEO_ZORAN&15]}
	global CONFIG_VIDEO_ZORAN_BUZ
	if {($CONFIG_VIDEO_DEV != 0) && ($CONFIG_VIDEO_ZORAN == 1 || $CONFIG_VIDEO_ZORAN == 2 || $CONFIG_VIDEO_ZORAN == 4) && ($CONFIG_VIDEO_DEV == 1 || $CONFIG_VIDEO_DEV == 2 || $CONFIG_VIDEO_DEV == 4) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4) && ($CONFIG_I2C == 1 || $CONFIG_I2C == 2 || $CONFIG_I2C == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_VIDEO_ZORAN $CONFIG_VIDEO_DEV $CONFIG_PCI $CONFIG_I2C]]; set CONFIG_VIDEO_ZORAN_BUZ [sync_tristate $CONFIG_VIDEO_ZORAN_BUZ $tmpvar_dep]; set CONFIG_VIDEO_ZORAN_BUZ [expr $CONFIG_VIDEO_ZORAN_BUZ&15]}
	global CONFIG_VIDEO_ZORAN_DC10
	if {($CONFIG_VIDEO_DEV != 0) && ($CONFIG_VIDEO_ZORAN == 1 || $CONFIG_VIDEO_ZORAN == 2 || $CONFIG_VIDEO_ZORAN == 4) && ($CONFIG_VIDEO_DEV == 1 || $CONFIG_VIDEO_DEV == 2 || $CONFIG_VIDEO_DEV == 4) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4) && ($CONFIG_I2C == 1 || $CONFIG_I2C == 2 || $CONFIG_I2C == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_VIDEO_ZORAN $CONFIG_VIDEO_DEV $CONFIG_PCI $CONFIG_I2C]]; set CONFIG_VIDEO_ZORAN_DC10 [sync_tristate $CONFIG_VIDEO_ZORAN_DC10 $tmpvar_dep]; set CONFIG_VIDEO_ZORAN_DC10 [expr $CONFIG_VIDEO_ZORAN_DC10&15]}
	global CONFIG_VIDEO_ZORAN_LML33
	if {($CONFIG_VIDEO_DEV != 0) && ($CONFIG_VIDEO_ZORAN == 1 || $CONFIG_VIDEO_ZORAN == 2 || $CONFIG_VIDEO_ZORAN == 4) && ($CONFIG_VIDEO_DEV == 1 || $CONFIG_VIDEO_DEV == 2 || $CONFIG_VIDEO_DEV == 4) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4) && ($CONFIG_I2C == 1 || $CONFIG_I2C == 2 || $CONFIG_I2C == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_VIDEO_ZORAN $CONFIG_VIDEO_DEV $CONFIG_PCI $CONFIG_I2C]]; set CONFIG_VIDEO_ZORAN_LML33 [sync_tristate $CONFIG_VIDEO_ZORAN_LML33 $tmpvar_dep]; set CONFIG_VIDEO_ZORAN_LML33 [expr $CONFIG_VIDEO_ZORAN_LML33&15]}
	global CONFIG_VIDEO_ZR36120
	if {($CONFIG_VIDEO_DEV != 0) && ($CONFIG_VIDEO_DEV == 1 || $CONFIG_VIDEO_DEV == 2 || $CONFIG_VIDEO_DEV == 4) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4) && ($CONFIG_I2C == 1 || $CONFIG_I2C == 2 || $CONFIG_I2C == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_VIDEO_DEV $CONFIG_PCI $CONFIG_I2C]]; set CONFIG_VIDEO_ZR36120 [sync_tristate $CONFIG_VIDEO_ZR36120 $tmpvar_dep]; set CONFIG_VIDEO_ZR36120 [expr $CONFIG_VIDEO_ZR36120&15]}
	global CONFIG_ARCH_NETWINDER
	global CONFIG_VIDEO_CYBERPRO
	if {($CONFIG_VIDEO_DEV != 0) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_ARCH_NETWINDER == 1) && ($CONFIG_VIDEO_DEV == 1 || $CONFIG_VIDEO_DEV == 2 || $CONFIG_VIDEO_DEV == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_VIDEO_DEV]]; set CONFIG_VIDEO_CYBERPRO [sync_tristate $CONFIG_VIDEO_CYBERPRO $tmpvar_dep]; set CONFIG_VIDEO_CYBERPRO [expr $CONFIG_VIDEO_CYBERPRO&15]}
	global CONFIG_SONYPI
	global CONFIG_VIDEO_MEYE
	if {($CONFIG_VIDEO_DEV != 0) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_VIDEO_DEV == 1 || $CONFIG_VIDEO_DEV == 2 || $CONFIG_VIDEO_DEV == 4) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4) && ($CONFIG_SONYPI == 1 || $CONFIG_SONYPI == 2 || $CONFIG_SONYPI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_VIDEO_DEV $CONFIG_PCI $CONFIG_SONYPI]]; set CONFIG_VIDEO_MEYE [sync_tristate $CONFIG_VIDEO_MEYE $tmpvar_dep]; set CONFIG_VIDEO_MEYE [expr $CONFIG_VIDEO_MEYE&15]}
}


proc menu69 {w title} {
	set oldFocus [focus]
	catch {focus .menu67}
	catch {destroy $w; unregister_active 69}
	toplevel $w -class Dialog
	wm withdraw $w
	global active_menus
	set active_menus [lsort -integer [linsert $active_menus end 69]]
	message $w.m -width 400 -aspect 300 -text \
		"Radio Adapters"  -relief raised
	pack $w.m -pady 10 -side top -padx 10
	wm title $w "Radio Adapters" 

	bind $w <Escape> "catch {focus $oldFocus}; destroy $w; unregister_active 69; break"
	set nextscript "catch {focus $oldFocus}; destroy $w; unregister_active 69; catch {destroy .menu67}; unregister_active 67; menu70 .menu70 \"$title\""
	frame $w.f
	button $w.f.back -text "OK" \
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 69"
	button $w.f.next -text "Next" -underline 0\
		-width 15 -command $nextscript
	bind all <Alt-n> $nextscript
	button $w.f.prev -text "Prev" -underline 0\
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 69; menu68 .menu68 \"$title\""
	bind $w <Alt-p> "catch {focus $oldFocus}; destroy $w; unregister_active 69; menu68 .menu68 \"$title\";break"
	pack $w.f.back $w.f.next $w.f.prev -side left -expand on
	pack $w.f -pady 10 -side bottom -anchor w -fill x
	frame $w.topline -relief ridge -borderwidth 2 -height 2
	pack $w.topline -side top -fill x

	frame $w.botline -relief ridge -borderwidth 2 -height 2
	pack $w.botline -side bottom -fill x

	frame $w.config
	pack $w.config -fill y -expand on

	scrollbar $w.config.vscroll -command "$w.config.canvas yview"
	pack $w.config.vscroll -side right -fill y

	canvas $w.config.canvas -height 1\
		-relief flat -borderwidth 0 -yscrollcommand "$w.config.vscroll set" \
		-width [expr [winfo screenwidth .] * 1 / 2] 
	frame $w.config.f
	bind $w <Key-Down> "$w.config.canvas yview scroll  1 unit;break;"
	bind $w <Key-Up> "$w.config.canvas yview scroll  -1 unit;break;"
	bind $w <Key-Next> "$w.config.canvas yview scroll  1 page;break;"
	bind $w <Key-Prior> "$w.config.canvas yview scroll  -1 page;break;"
	bind $w <Key-Home> "$w.config.canvas yview moveto 0;break;"
	bind $w <Key-End> "$w.config.canvas yview moveto 1 ;break;"
	pack $w.config.canvas -side right -fill y


	dep_tristate $w.config.f 69 0 "  ADS Cadet AM/FM Tuner" CONFIG_RADIO_CADET
	dep_tristate $w.config.f 69 1 "  AIMSlab RadioTrack (aka RadioReveal) support" CONFIG_RADIO_RTRACK
	hex $w.config.f 69 2 "  RadioTrack i/o port (0x20f or 0x30f)" CONFIG_RADIO_RTRACK_PORT
	dep_tristate $w.config.f 69 3 "  AIMSlab RadioTrack II support" CONFIG_RADIO_RTRACK2
	hex $w.config.f 69 4 "    RadioTrack II i/o port (0x20c or 0x30c)" CONFIG_RADIO_RTRACK2_PORT
	dep_tristate $w.config.f 69 5 "  Aztech/Packard Bell Radio" CONFIG_RADIO_AZTECH
	hex $w.config.f 69 6 "    Aztech/Packard Bell I/O port (0x350 or 0x358)" CONFIG_RADIO_AZTECH_PORT
	dep_tristate $w.config.f 69 7 "  GemTek Radio Card support" CONFIG_RADIO_GEMTEK
	hex $w.config.f 69 8 "    GemTek i/o port (0x20c, 0x30c, 0x24c or 0x34c)" CONFIG_RADIO_GEMTEK_PORT
	dep_tristate $w.config.f 69 9 "  GemTek PCI Radio Card support" CONFIG_RADIO_GEMTEK_PCI
	dep_tristate $w.config.f 69 10 "  Guillemot MAXI Radio FM 2000 radio" CONFIG_RADIO_MAXIRADIO
	dep_tristate $w.config.f 69 11 "  Maestro on board radio" CONFIG_RADIO_MAESTRO
	dep_tristate $w.config.f 69 12 "  miroSOUND PCM20 radio" CONFIG_RADIO_MIROPCM20
	dep_tristate $w.config.f 69 13 "    miroSOUND PCM20 radio RDS user interface (EXPERIMENTAL)" CONFIG_RADIO_MIROPCM20_RDS
	dep_tristate $w.config.f 69 14 "  SF16FMI Radio" CONFIG_RADIO_SF16FMI
	dep_tristate $w.config.f 69 15 "  SF16FMR2 Radio" CONFIG_RADIO_SF16FMR2
	dep_tristate $w.config.f 69 16 "  TerraTec ActiveRadio ISA Standalone" CONFIG_RADIO_TERRATEC
	hex $w.config.f 69 17 "    Terratec i/o port (normally 0x590)" CONFIG_RADIO_TERRATEC_PORT
	dep_tristate $w.config.f 69 18 "  Trust FM radio card" CONFIG_RADIO_TRUST
	hex $w.config.f 69 19 "    Trust i/o port (usually 0x350 or 0x358)" CONFIG_RADIO_TRUST_PORT
	dep_tristate $w.config.f 69 20 "  Typhoon Radio (a.k.a. EcoRadio)" CONFIG_RADIO_TYPHOON
	bool $w.config.f 69 21 "    Support for /proc/radio-typhoon" CONFIG_RADIO_TYPHOON_PROC_FS
	hex $w.config.f 69 22 "  Typhoon I/O port (0x316 or 0x336)" CONFIG_RADIO_TYPHOON_PORT
	int $w.config.f 69 23 "  Typhoon frequency set when muting the device (kHz)" CONFIG_RADIO_TYPHOON_MUTEFREQ
	dep_tristate $w.config.f 69 24 "  Zoltrix Radio" CONFIG_RADIO_ZOLTRIX
	hex $w.config.f 69 25 "    ZOLTRIX I/O port (0x20c or 0x30c)" CONFIG_RADIO_ZOLTRIX_PORT



	focus $w
	update_active
	global winx; global winy
	if {[winfo exists .menu67] == 0} then {menu67 .menu67 "Multimedia devices"}
	set winx [expr [winfo x .menu67]+30]; set winy [expr [winfo y .menu67]+30]
	if {[winfo exists $w]} then {wm geometry $w +$winx+$winy}
	update idletasks
	if {[winfo exists $w]} then  {$w.config.canvas create window 0 0 -anchor nw -window $w.config.f

	$w.config.canvas configure \
		-width [expr [winfo reqwidth $w.config.f] + 1]\
		-scrollregion "-1 -1 [expr [winfo reqwidth $w.config.f] + 1] \
			 [expr [winfo reqheight $w.config.f] + 1]"

	set winy [expr [winfo reqh $w] - [winfo reqh $w.config.canvas]]
	set scry [expr [winfo screenh $w] / 2]
	set maxy [expr [winfo screenh $w] * 3 / 4]
	set canvtotal [expr [winfo reqh $w.config.f] + 2]
	if [expr $winy + $canvtotal < $maxy] {
		$w.config.canvas configure -height $canvtotal
	} else {
		$w.config.canvas configure -height [expr $scry - $winy]
		}
	}
	update idletasks
	if {[winfo exists $w]} then {
	wm maxsize $w [winfo width $w] [winfo screenheight $w]
	wm minsize $w [winfo width $w] 100

	wm deiconify $w
}
}

proc update_menu69 {} {
	global CONFIG_MODULES
	global CONFIG_VIDEO_DEV
	global CONFIG_ISA
	global CONFIG_RADIO_CADET
	if {($CONFIG_VIDEO_DEV != 0) && ($CONFIG_ISA == 1) && ($CONFIG_VIDEO_DEV == 1 || $CONFIG_VIDEO_DEV == 2 || $CONFIG_VIDEO_DEV == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_VIDEO_DEV]];set CONFIG_RADIO_CADET [sync_tristate $CONFIG_RADIO_CADET $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu69.config.f.x0 disabled {y}} else {configure_entry .menu69.config.f.x0 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu69.config.f.x0 disabled {m}} else {configure_entry .menu69.config.f.x0 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu69.config.f.x0 normal {m}} else {configure_entry .menu69.config.f.x0 disabled {m}}; configure_entry .menu69.config.f.x0 normal {n l}} else {configure_entry .menu69.config.f.x0 disabled {y n m l}}
	global CONFIG_RADIO_RTRACK
	if {($CONFIG_VIDEO_DEV != 0) && ($CONFIG_ISA == 1) && ($CONFIG_VIDEO_DEV == 1 || $CONFIG_VIDEO_DEV == 2 || $CONFIG_VIDEO_DEV == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_VIDEO_DEV]];set CONFIG_RADIO_RTRACK [sync_tristate $CONFIG_RADIO_RTRACK $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu69.config.f.x1 disabled {y}} else {configure_entry .menu69.config.f.x1 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu69.config.f.x1 disabled {m}} else {configure_entry .menu69.config.f.x1 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu69.config.f.x1 normal {m}} else {configure_entry .menu69.config.f.x1 disabled {m}}; configure_entry .menu69.config.f.x1 normal {n l}} else {configure_entry .menu69.config.f.x1 disabled {y n m l}}
	global CONFIG_RADIO_RTRACK_PORT
	if {($CONFIG_VIDEO_DEV != 0) && ($CONFIG_ISA == 1) && ($CONFIG_RADIO_RTRACK == 1)} then {.menu69.config.f.x2.x configure -state normal -foreground [ cget .ref -foreground ]; .menu69.config.f.x2.l configure -state normal; } else {.menu69.config.f.x2.x configure -state disabled -foreground [ cget .ref -disabledforeground ]; .menu69.config.f.x2.l configure -state disabled}
	global CONFIG_RADIO_RTRACK2
	if {($CONFIG_VIDEO_DEV != 0) && ($CONFIG_ISA == 1) && ($CONFIG_VIDEO_DEV == 1 || $CONFIG_VIDEO_DEV == 2 || $CONFIG_VIDEO_DEV == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_VIDEO_DEV]];set CONFIG_RADIO_RTRACK2 [sync_tristate $CONFIG_RADIO_RTRACK2 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu69.config.f.x3 disabled {y}} else {configure_entry .menu69.config.f.x3 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu69.config.f.x3 disabled {m}} else {configure_entry .menu69.config.f.x3 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu69.config.f.x3 normal {m}} else {configure_entry .menu69.config.f.x3 disabled {m}}; configure_entry .menu69.config.f.x3 normal {n l}} else {configure_entry .menu69.config.f.x3 disabled {y n m l}}
	global CONFIG_RADIO_RTRACK2_PORT
	if {($CONFIG_VIDEO_DEV != 0) && ($CONFIG_ISA == 1) && ($CONFIG_RADIO_RTRACK2 == 1)} then {.menu69.config.f.x4.x configure -state normal -foreground [ cget .ref -foreground ]; .menu69.config.f.x4.l configure -state normal; } else {.menu69.config.f.x4.x configure -state disabled -foreground [ cget .ref -disabledforeground ]; .menu69.config.f.x4.l configure -state disabled}
	global CONFIG_RADIO_AZTECH
	if {($CONFIG_VIDEO_DEV != 0) && ($CONFIG_ISA == 1) && ($CONFIG_VIDEO_DEV == 1 || $CONFIG_VIDEO_DEV == 2 || $CONFIG_VIDEO_DEV == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_VIDEO_DEV]];set CONFIG_RADIO_AZTECH [sync_tristate $CONFIG_RADIO_AZTECH $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu69.config.f.x5 disabled {y}} else {configure_entry .menu69.config.f.x5 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu69.config.f.x5 disabled {m}} else {configure_entry .menu69.config.f.x5 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu69.config.f.x5 normal {m}} else {configure_entry .menu69.config.f.x5 disabled {m}}; configure_entry .menu69.config.f.x5 normal {n l}} else {configure_entry .menu69.config.f.x5 disabled {y n m l}}
	global CONFIG_RADIO_AZTECH_PORT
	if {($CONFIG_VIDEO_DEV != 0) && ($CONFIG_ISA == 1) && ($CONFIG_RADIO_AZTECH == 1)} then {.menu69.config.f.x6.x configure -state normal -foreground [ cget .ref -foreground ]; .menu69.config.f.x6.l configure -state normal; } else {.menu69.config.f.x6.x configure -state disabled -foreground [ cget .ref -disabledforeground ]; .menu69.config.f.x6.l configure -state disabled}
	global CONFIG_RADIO_GEMTEK
	if {($CONFIG_VIDEO_DEV != 0) && ($CONFIG_ISA == 1) && ($CONFIG_VIDEO_DEV == 1 || $CONFIG_VIDEO_DEV == 2 || $CONFIG_VIDEO_DEV == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_VIDEO_DEV]];set CONFIG_RADIO_GEMTEK [sync_tristate $CONFIG_RADIO_GEMTEK $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu69.config.f.x7 disabled {y}} else {configure_entry .menu69.config.f.x7 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu69.config.f.x7 disabled {m}} else {configure_entry .menu69.config.f.x7 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu69.config.f.x7 normal {m}} else {configure_entry .menu69.config.f.x7 disabled {m}}; configure_entry .menu69.config.f.x7 normal {n l}} else {configure_entry .menu69.config.f.x7 disabled {y n m l}}
	global CONFIG_RADIO_GEMTEK_PORT
	if {($CONFIG_VIDEO_DEV != 0) && ($CONFIG_ISA == 1) && ($CONFIG_RADIO_GEMTEK == 1)} then {.menu69.config.f.x8.x configure -state normal -foreground [ cget .ref -foreground ]; .menu69.config.f.x8.l configure -state normal; } else {.menu69.config.f.x8.x configure -state disabled -foreground [ cget .ref -disabledforeground ]; .menu69.config.f.x8.l configure -state disabled}
	global CONFIG_PCI
	global CONFIG_RADIO_GEMTEK_PCI
	if {($CONFIG_VIDEO_DEV != 0) && ($CONFIG_VIDEO_DEV == 1 || $CONFIG_VIDEO_DEV == 2 || $CONFIG_VIDEO_DEV == 4) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_VIDEO_DEV $CONFIG_PCI]];set CONFIG_RADIO_GEMTEK_PCI [sync_tristate $CONFIG_RADIO_GEMTEK_PCI $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu69.config.f.x9 disabled {y}} else {configure_entry .menu69.config.f.x9 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu69.config.f.x9 disabled {m}} else {configure_entry .menu69.config.f.x9 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu69.config.f.x9 normal {m}} else {configure_entry .menu69.config.f.x9 disabled {m}}; configure_entry .menu69.config.f.x9 normal {n l}} else {configure_entry .menu69.config.f.x9 disabled {y n m l}}
	global CONFIG_RADIO_MAXIRADIO
	if {($CONFIG_VIDEO_DEV != 0) && ($CONFIG_VIDEO_DEV == 1 || $CONFIG_VIDEO_DEV == 2 || $CONFIG_VIDEO_DEV == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_VIDEO_DEV]];set CONFIG_RADIO_MAXIRADIO [sync_tristate $CONFIG_RADIO_MAXIRADIO $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu69.config.f.x10 disabled {y}} else {configure_entry .menu69.config.f.x10 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu69.config.f.x10 disabled {m}} else {configure_entry .menu69.config.f.x10 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu69.config.f.x10 normal {m}} else {configure_entry .menu69.config.f.x10 disabled {m}}; configure_entry .menu69.config.f.x10 normal {n l}} else {configure_entry .menu69.config.f.x10 disabled {y n m l}}
	global CONFIG_RADIO_MAESTRO
	if {($CONFIG_VIDEO_DEV != 0) && ($CONFIG_VIDEO_DEV == 1 || $CONFIG_VIDEO_DEV == 2 || $CONFIG_VIDEO_DEV == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_VIDEO_DEV]];set CONFIG_RADIO_MAESTRO [sync_tristate $CONFIG_RADIO_MAESTRO $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu69.config.f.x11 disabled {y}} else {configure_entry .menu69.config.f.x11 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu69.config.f.x11 disabled {m}} else {configure_entry .menu69.config.f.x11 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu69.config.f.x11 normal {m}} else {configure_entry .menu69.config.f.x11 disabled {m}}; configure_entry .menu69.config.f.x11 normal {n l}} else {configure_entry .menu69.config.f.x11 disabled {y n m l}}
	global CONFIG_SOUND_ACI_MIXER
	global CONFIG_RADIO_MIROPCM20
	if {($CONFIG_VIDEO_DEV != 0) && ($CONFIG_VIDEO_DEV == 1 || $CONFIG_VIDEO_DEV == 2 || $CONFIG_VIDEO_DEV == 4) && ($CONFIG_SOUND_ACI_MIXER == 1 || $CONFIG_SOUND_ACI_MIXER == 2 || $CONFIG_SOUND_ACI_MIXER == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_VIDEO_DEV $CONFIG_SOUND_ACI_MIXER]];set CONFIG_RADIO_MIROPCM20 [sync_tristate $CONFIG_RADIO_MIROPCM20 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu69.config.f.x12 disabled {y}} else {configure_entry .menu69.config.f.x12 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu69.config.f.x12 disabled {m}} else {configure_entry .menu69.config.f.x12 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu69.config.f.x12 normal {m}} else {configure_entry .menu69.config.f.x12 disabled {m}}; configure_entry .menu69.config.f.x12 normal {n l}} else {configure_entry .menu69.config.f.x12 disabled {y n m l}}
	global CONFIG_EXPERIMENTAL
	global CONFIG_RADIO_MIROPCM20_RDS
	if {($CONFIG_VIDEO_DEV != 0) && ($CONFIG_ISA == 1) && ($CONFIG_RADIO_MIROPCM20 == 1 || $CONFIG_RADIO_MIROPCM20 == 2 || $CONFIG_RADIO_MIROPCM20 == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_RADIO_MIROPCM20 $CONFIG_EXPERIMENTAL]];set CONFIG_RADIO_MIROPCM20_RDS [sync_tristate $CONFIG_RADIO_MIROPCM20_RDS $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu69.config.f.x13 disabled {y}} else {configure_entry .menu69.config.f.x13 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu69.config.f.x13 disabled {m}} else {configure_entry .menu69.config.f.x13 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu69.config.f.x13 normal {m}} else {configure_entry .menu69.config.f.x13 disabled {m}}; configure_entry .menu69.config.f.x13 normal {n l}} else {configure_entry .menu69.config.f.x13 disabled {y n m l}}
	global CONFIG_RADIO_SF16FMI
	if {($CONFIG_VIDEO_DEV != 0) && ($CONFIG_ISA == 1) && ($CONFIG_VIDEO_DEV == 1 || $CONFIG_VIDEO_DEV == 2 || $CONFIG_VIDEO_DEV == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_VIDEO_DEV]];set CONFIG_RADIO_SF16FMI [sync_tristate $CONFIG_RADIO_SF16FMI $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu69.config.f.x14 disabled {y}} else {configure_entry .menu69.config.f.x14 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu69.config.f.x14 disabled {m}} else {configure_entry .menu69.config.f.x14 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu69.config.f.x14 normal {m}} else {configure_entry .menu69.config.f.x14 disabled {m}}; configure_entry .menu69.config.f.x14 normal {n l}} else {configure_entry .menu69.config.f.x14 disabled {y n m l}}
	global CONFIG_RADIO_SF16FMR2
	if {($CONFIG_VIDEO_DEV != 0) && ($CONFIG_ISA == 1) && ($CONFIG_VIDEO_DEV == 1 || $CONFIG_VIDEO_DEV == 2 || $CONFIG_VIDEO_DEV == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_VIDEO_DEV]];set CONFIG_RADIO_SF16FMR2 [sync_tristate $CONFIG_RADIO_SF16FMR2 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu69.config.f.x15 disabled {y}} else {configure_entry .menu69.config.f.x15 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu69.config.f.x15 disabled {m}} else {configure_entry .menu69.config.f.x15 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu69.config.f.x15 normal {m}} else {configure_entry .menu69.config.f.x15 disabled {m}}; configure_entry .menu69.config.f.x15 normal {n l}} else {configure_entry .menu69.config.f.x15 disabled {y n m l}}
	global CONFIG_RADIO_TERRATEC
	if {($CONFIG_VIDEO_DEV != 0) && ($CONFIG_ISA == 1) && ($CONFIG_VIDEO_DEV == 1 || $CONFIG_VIDEO_DEV == 2 || $CONFIG_VIDEO_DEV == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_VIDEO_DEV]];set CONFIG_RADIO_TERRATEC [sync_tristate $CONFIG_RADIO_TERRATEC $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu69.config.f.x16 disabled {y}} else {configure_entry .menu69.config.f.x16 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu69.config.f.x16 disabled {m}} else {configure_entry .menu69.config.f.x16 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu69.config.f.x16 normal {m}} else {configure_entry .menu69.config.f.x16 disabled {m}}; configure_entry .menu69.config.f.x16 normal {n l}} else {configure_entry .menu69.config.f.x16 disabled {y n m l}}
	global CONFIG_RADIO_TERRATEC_PORT
	if {($CONFIG_VIDEO_DEV != 0) && ($CONFIG_ISA == 1) && ($CONFIG_RADIO_TERRATEC == 1)} then {.menu69.config.f.x17.x configure -state normal -foreground [ cget .ref -foreground ]; .menu69.config.f.x17.l configure -state normal; } else {.menu69.config.f.x17.x configure -state disabled -foreground [ cget .ref -disabledforeground ]; .menu69.config.f.x17.l configure -state disabled}
	global CONFIG_RADIO_TRUST
	if {($CONFIG_VIDEO_DEV != 0) && ($CONFIG_ISA == 1) && ($CONFIG_VIDEO_DEV == 1 || $CONFIG_VIDEO_DEV == 2 || $CONFIG_VIDEO_DEV == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_VIDEO_DEV]];set CONFIG_RADIO_TRUST [sync_tristate $CONFIG_RADIO_TRUST $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu69.config.f.x18 disabled {y}} else {configure_entry .menu69.config.f.x18 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu69.config.f.x18 disabled {m}} else {configure_entry .menu69.config.f.x18 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu69.config.f.x18 normal {m}} else {configure_entry .menu69.config.f.x18 disabled {m}}; configure_entry .menu69.config.f.x18 normal {n l}} else {configure_entry .menu69.config.f.x18 disabled {y n m l}}
	global CONFIG_RADIO_TRUST_PORT
	if {($CONFIG_VIDEO_DEV != 0) && ($CONFIG_ISA == 1) && ($CONFIG_RADIO_TRUST == 1)} then {.menu69.config.f.x19.x configure -state normal -foreground [ cget .ref -foreground ]; .menu69.config.f.x19.l configure -state normal; } else {.menu69.config.f.x19.x configure -state disabled -foreground [ cget .ref -disabledforeground ]; .menu69.config.f.x19.l configure -state disabled}
	global CONFIG_RADIO_TYPHOON
	if {($CONFIG_VIDEO_DEV != 0) && ($CONFIG_ISA == 1) && ($CONFIG_VIDEO_DEV == 1 || $CONFIG_VIDEO_DEV == 2 || $CONFIG_VIDEO_DEV == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_VIDEO_DEV]];set CONFIG_RADIO_TYPHOON [sync_tristate $CONFIG_RADIO_TYPHOON $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu69.config.f.x20 disabled {y}} else {configure_entry .menu69.config.f.x20 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu69.config.f.x20 disabled {m}} else {configure_entry .menu69.config.f.x20 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu69.config.f.x20 normal {m}} else {configure_entry .menu69.config.f.x20 disabled {m}}; configure_entry .menu69.config.f.x20 normal {n l}} else {configure_entry .menu69.config.f.x20 disabled {y n m l}}
	global CONFIG_PROC_FS
	global CONFIG_RADIO_TYPHOON_PROC_FS
	if {($CONFIG_VIDEO_DEV != 0) && ($CONFIG_ISA == 1) && ($CONFIG_PROC_FS == 1) && ($CONFIG_RADIO_TYPHOON != 0)} then {
	configure_entry .menu69.config.f.x21 normal {n l y}} else {configure_entry .menu69.config.f.x21 disabled {y n l}}
	global CONFIG_RADIO_TYPHOON_PORT
	if {($CONFIG_VIDEO_DEV != 0) && ($CONFIG_ISA == 1) && ($CONFIG_RADIO_TYPHOON == 1)} then {.menu69.config.f.x22.x configure -state normal -foreground [ cget .ref -foreground ]; .menu69.config.f.x22.l configure -state normal; } else {.menu69.config.f.x22.x configure -state disabled -foreground [ cget .ref -disabledforeground ]; .menu69.config.f.x22.l configure -state disabled}
	global CONFIG_RADIO_TYPHOON_MUTEFREQ
	if {($CONFIG_VIDEO_DEV != 0) && ($CONFIG_ISA == 1) && ($CONFIG_RADIO_TYPHOON == 1)} then {.menu69.config.f.x23.x configure -state normal -foreground [ cget .ref -foreground ]; .menu69.config.f.x23.l configure -state normal; } else {.menu69.config.f.x23.x configure -state disabled -foreground [ cget .ref -disabledforeground ]; .menu69.config.f.x23.l configure -state disabled}
	global CONFIG_RADIO_ZOLTRIX
	if {($CONFIG_VIDEO_DEV != 0) && ($CONFIG_ISA == 1) && ($CONFIG_VIDEO_DEV == 1 || $CONFIG_VIDEO_DEV == 2 || $CONFIG_VIDEO_DEV == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_VIDEO_DEV]];set CONFIG_RADIO_ZOLTRIX [sync_tristate $CONFIG_RADIO_ZOLTRIX $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu69.config.f.x24 disabled {y}} else {configure_entry .menu69.config.f.x24 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu69.config.f.x24 disabled {m}} else {configure_entry .menu69.config.f.x24 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu69.config.f.x24 normal {m}} else {configure_entry .menu69.config.f.x24 disabled {m}}; configure_entry .menu69.config.f.x24 normal {n l}} else {configure_entry .menu69.config.f.x24 disabled {y n m l}}
	global CONFIG_RADIO_ZOLTRIX_PORT
	if {($CONFIG_VIDEO_DEV != 0) && ($CONFIG_ISA == 1) && ($CONFIG_RADIO_ZOLTRIX == 1)} then {.menu69.config.f.x25.x configure -state normal -foreground [ cget .ref -foreground ]; .menu69.config.f.x25.l configure -state normal; } else {.menu69.config.f.x25.x configure -state disabled -foreground [ cget .ref -disabledforeground ]; .menu69.config.f.x25.l configure -state disabled}
}


proc update_define_menu69 {} {
	update_define_mainmenu
	global CONFIG_MODULES
	global CONFIG_RADIO_TYPHOON_PROC_FS
set CONFIG_RADIO_TYPHOON_PROC_FS [expr $CONFIG_RADIO_TYPHOON_PROC_FS|16]
	global CONFIG_VIDEO_DEV
	global CONFIG_ISA
	global CONFIG_RADIO_CADET
	if {($CONFIG_VIDEO_DEV != 0) && ($CONFIG_ISA == 1) && ($CONFIG_VIDEO_DEV == 1 || $CONFIG_VIDEO_DEV == 2 || $CONFIG_VIDEO_DEV == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_VIDEO_DEV]]; set CONFIG_RADIO_CADET [sync_tristate $CONFIG_RADIO_CADET $tmpvar_dep]; set CONFIG_RADIO_CADET [expr $CONFIG_RADIO_CADET&15]}
	global CONFIG_RADIO_RTRACK
	if {($CONFIG_VIDEO_DEV != 0) && ($CONFIG_ISA == 1) && ($CONFIG_VIDEO_DEV == 1 || $CONFIG_VIDEO_DEV == 2 || $CONFIG_VIDEO_DEV == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_VIDEO_DEV]]; set CONFIG_RADIO_RTRACK [sync_tristate $CONFIG_RADIO_RTRACK $tmpvar_dep]; set CONFIG_RADIO_RTRACK [expr $CONFIG_RADIO_RTRACK&15]}
	global CONFIG_RADIO_RTRACK_PORT
	if {($CONFIG_VIDEO_DEV != 0) && ($CONFIG_ISA == 1) && ($CONFIG_RADIO_RTRACK == 1)} then {validate_hex CONFIG_RADIO_RTRACK_PORT "$CONFIG_RADIO_RTRACK_PORT" 20f}
	global CONFIG_RADIO_RTRACK2
	if {($CONFIG_VIDEO_DEV != 0) && ($CONFIG_ISA == 1) && ($CONFIG_VIDEO_DEV == 1 || $CONFIG_VIDEO_DEV == 2 || $CONFIG_VIDEO_DEV == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_VIDEO_DEV]]; set CONFIG_RADIO_RTRACK2 [sync_tristate $CONFIG_RADIO_RTRACK2 $tmpvar_dep]; set CONFIG_RADIO_RTRACK2 [expr $CONFIG_RADIO_RTRACK2&15]}
	global CONFIG_RADIO_RTRACK2_PORT
	if {($CONFIG_VIDEO_DEV != 0) && ($CONFIG_ISA == 1) && ($CONFIG_RADIO_RTRACK2 == 1)} then {validate_hex CONFIG_RADIO_RTRACK2_PORT "$CONFIG_RADIO_RTRACK2_PORT" 30c}
	global CONFIG_RADIO_AZTECH
	if {($CONFIG_VIDEO_DEV != 0) && ($CONFIG_ISA == 1) && ($CONFIG_VIDEO_DEV == 1 || $CONFIG_VIDEO_DEV == 2 || $CONFIG_VIDEO_DEV == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_VIDEO_DEV]]; set CONFIG_RADIO_AZTECH [sync_tristate $CONFIG_RADIO_AZTECH $tmpvar_dep]; set CONFIG_RADIO_AZTECH [expr $CONFIG_RADIO_AZTECH&15]}
	global CONFIG_RADIO_AZTECH_PORT
	if {($CONFIG_VIDEO_DEV != 0) && ($CONFIG_ISA == 1) && ($CONFIG_RADIO_AZTECH == 1)} then {validate_hex CONFIG_RADIO_AZTECH_PORT "$CONFIG_RADIO_AZTECH_PORT" 350}
	global CONFIG_RADIO_GEMTEK
	if {($CONFIG_VIDEO_DEV != 0) && ($CONFIG_ISA == 1) && ($CONFIG_VIDEO_DEV == 1 || $CONFIG_VIDEO_DEV == 2 || $CONFIG_VIDEO_DEV == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_VIDEO_DEV]]; set CONFIG_RADIO_GEMTEK [sync_tristate $CONFIG_RADIO_GEMTEK $tmpvar_dep]; set CONFIG_RADIO_GEMTEK [expr $CONFIG_RADIO_GEMTEK&15]}
	global CONFIG_RADIO_GEMTEK_PORT
	if {($CONFIG_VIDEO_DEV != 0) && ($CONFIG_ISA == 1) && ($CONFIG_RADIO_GEMTEK == 1)} then {validate_hex CONFIG_RADIO_GEMTEK_PORT "$CONFIG_RADIO_GEMTEK_PORT" 34c}
	global CONFIG_PCI
	global CONFIG_RADIO_GEMTEK_PCI
	if {($CONFIG_VIDEO_DEV != 0) && ($CONFIG_VIDEO_DEV == 1 || $CONFIG_VIDEO_DEV == 2 || $CONFIG_VIDEO_DEV == 4) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_VIDEO_DEV $CONFIG_PCI]]; set CONFIG_RADIO_GEMTEK_PCI [sync_tristate $CONFIG_RADIO_GEMTEK_PCI $tmpvar_dep]; set CONFIG_RADIO_GEMTEK_PCI [expr $CONFIG_RADIO_GEMTEK_PCI&15]}
	global CONFIG_RADIO_MAXIRADIO
	if {($CONFIG_VIDEO_DEV != 0) && ($CONFIG_VIDEO_DEV == 1 || $CONFIG_VIDEO_DEV == 2 || $CONFIG_VIDEO_DEV == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_VIDEO_DEV]]; set CONFIG_RADIO_MAXIRADIO [sync_tristate $CONFIG_RADIO_MAXIRADIO $tmpvar_dep]; set CONFIG_RADIO_MAXIRADIO [expr $CONFIG_RADIO_MAXIRADIO&15]}
	global CONFIG_RADIO_MAESTRO
	if {($CONFIG_VIDEO_DEV != 0) && ($CONFIG_VIDEO_DEV == 1 || $CONFIG_VIDEO_DEV == 2 || $CONFIG_VIDEO_DEV == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_VIDEO_DEV]]; set CONFIG_RADIO_MAESTRO [sync_tristate $CONFIG_RADIO_MAESTRO $tmpvar_dep]; set CONFIG_RADIO_MAESTRO [expr $CONFIG_RADIO_MAESTRO&15]}
	global CONFIG_SOUND_ACI_MIXER
	global CONFIG_RADIO_MIROPCM20
	if {($CONFIG_VIDEO_DEV != 0) && ($CONFIG_VIDEO_DEV == 1 || $CONFIG_VIDEO_DEV == 2 || $CONFIG_VIDEO_DEV == 4) && ($CONFIG_SOUND_ACI_MIXER == 1 || $CONFIG_SOUND_ACI_MIXER == 2 || $CONFIG_SOUND_ACI_MIXER == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_VIDEO_DEV $CONFIG_SOUND_ACI_MIXER]]; set CONFIG_RADIO_MIROPCM20 [sync_tristate $CONFIG_RADIO_MIROPCM20 $tmpvar_dep]; set CONFIG_RADIO_MIROPCM20 [expr $CONFIG_RADIO_MIROPCM20&15]}
	global CONFIG_EXPERIMENTAL
	global CONFIG_RADIO_MIROPCM20_RDS
	if {($CONFIG_VIDEO_DEV != 0) && ($CONFIG_ISA == 1) && ($CONFIG_RADIO_MIROPCM20 == 1 || $CONFIG_RADIO_MIROPCM20 == 2 || $CONFIG_RADIO_MIROPCM20 == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_RADIO_MIROPCM20 $CONFIG_EXPERIMENTAL]]; set CONFIG_RADIO_MIROPCM20_RDS [sync_tristate $CONFIG_RADIO_MIROPCM20_RDS $tmpvar_dep]; set CONFIG_RADIO_MIROPCM20_RDS [expr $CONFIG_RADIO_MIROPCM20_RDS&15]}
	global CONFIG_RADIO_SF16FMI
	if {($CONFIG_VIDEO_DEV != 0) && ($CONFIG_ISA == 1) && ($CONFIG_VIDEO_DEV == 1 || $CONFIG_VIDEO_DEV == 2 || $CONFIG_VIDEO_DEV == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_VIDEO_DEV]]; set CONFIG_RADIO_SF16FMI [sync_tristate $CONFIG_RADIO_SF16FMI $tmpvar_dep]; set CONFIG_RADIO_SF16FMI [expr $CONFIG_RADIO_SF16FMI&15]}
	global CONFIG_RADIO_SF16FMR2
	if {($CONFIG_VIDEO_DEV != 0) && ($CONFIG_ISA == 1) && ($CONFIG_VIDEO_DEV == 1 || $CONFIG_VIDEO_DEV == 2 || $CONFIG_VIDEO_DEV == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_VIDEO_DEV]]; set CONFIG_RADIO_SF16FMR2 [sync_tristate $CONFIG_RADIO_SF16FMR2 $tmpvar_dep]; set CONFIG_RADIO_SF16FMR2 [expr $CONFIG_RADIO_SF16FMR2&15]}
	global CONFIG_RADIO_TERRATEC
	if {($CONFIG_VIDEO_DEV != 0) && ($CONFIG_ISA == 1) && ($CONFIG_VIDEO_DEV == 1 || $CONFIG_VIDEO_DEV == 2 || $CONFIG_VIDEO_DEV == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_VIDEO_DEV]]; set CONFIG_RADIO_TERRATEC [sync_tristate $CONFIG_RADIO_TERRATEC $tmpvar_dep]; set CONFIG_RADIO_TERRATEC [expr $CONFIG_RADIO_TERRATEC&15]}
	global CONFIG_RADIO_TERRATEC_PORT
	if {($CONFIG_VIDEO_DEV != 0) && ($CONFIG_ISA == 1) && ($CONFIG_RADIO_TERRATEC == 1)} then {validate_hex CONFIG_RADIO_TERRATEC_PORT "$CONFIG_RADIO_TERRATEC_PORT" 590}
	global CONFIG_RADIO_TRUST
	if {($CONFIG_VIDEO_DEV != 0) && ($CONFIG_ISA == 1) && ($CONFIG_VIDEO_DEV == 1 || $CONFIG_VIDEO_DEV == 2 || $CONFIG_VIDEO_DEV == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_VIDEO_DEV]]; set CONFIG_RADIO_TRUST [sync_tristate $CONFIG_RADIO_TRUST $tmpvar_dep]; set CONFIG_RADIO_TRUST [expr $CONFIG_RADIO_TRUST&15]}
	global CONFIG_RADIO_TRUST_PORT
	if {($CONFIG_VIDEO_DEV != 0) && ($CONFIG_ISA == 1) && ($CONFIG_RADIO_TRUST == 1)} then {validate_hex CONFIG_RADIO_TRUST_PORT "$CONFIG_RADIO_TRUST_PORT" 350}
	global CONFIG_RADIO_TYPHOON
	if {($CONFIG_VIDEO_DEV != 0) && ($CONFIG_ISA == 1) && ($CONFIG_VIDEO_DEV == 1 || $CONFIG_VIDEO_DEV == 2 || $CONFIG_VIDEO_DEV == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_VIDEO_DEV]]; set CONFIG_RADIO_TYPHOON [sync_tristate $CONFIG_RADIO_TYPHOON $tmpvar_dep]; set CONFIG_RADIO_TYPHOON [expr $CONFIG_RADIO_TYPHOON&15]}
	global CONFIG_PROC_FS
	if {($CONFIG_VIDEO_DEV != 0) && ($CONFIG_ISA == 1) && ($CONFIG_PROC_FS == 1) && ($CONFIG_RADIO_TYPHOON != 0)} then {
	set CONFIG_RADIO_TYPHOON_PROC_FS [expr $CONFIG_RADIO_TYPHOON_PROC_FS&15]}
	global CONFIG_RADIO_TYPHOON_PORT
	if {($CONFIG_VIDEO_DEV != 0) && ($CONFIG_ISA == 1) && ($CONFIG_RADIO_TYPHOON == 1)} then {validate_hex CONFIG_RADIO_TYPHOON_PORT "$CONFIG_RADIO_TYPHOON_PORT" 316}
	global CONFIG_RADIO_TYPHOON_MUTEFREQ
	if {($CONFIG_VIDEO_DEV != 0) && ($CONFIG_ISA == 1) && ($CONFIG_RADIO_TYPHOON == 1)} then {validate_int CONFIG_RADIO_TYPHOON_MUTEFREQ "$CONFIG_RADIO_TYPHOON_MUTEFREQ" 87500}
	global CONFIG_RADIO_ZOLTRIX
	if {($CONFIG_VIDEO_DEV != 0) && ($CONFIG_ISA == 1) && ($CONFIG_VIDEO_DEV == 1 || $CONFIG_VIDEO_DEV == 2 || $CONFIG_VIDEO_DEV == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_VIDEO_DEV]]; set CONFIG_RADIO_ZOLTRIX [sync_tristate $CONFIG_RADIO_ZOLTRIX $tmpvar_dep]; set CONFIG_RADIO_ZOLTRIX [expr $CONFIG_RADIO_ZOLTRIX&15]}
	global CONFIG_RADIO_ZOLTRIX_PORT
	if {($CONFIG_VIDEO_DEV != 0) && ($CONFIG_ISA == 1) && ($CONFIG_RADIO_ZOLTRIX == 1)} then {validate_hex CONFIG_RADIO_ZOLTRIX_PORT "$CONFIG_RADIO_ZOLTRIX_PORT" 20c}
}


menu_option menu70 70 "File systems"
proc menu70 {w title} {
	set oldFocus [focus]
	catch {destroy $w; unregister_active 70}
	toplevel $w -class Dialog
	wm withdraw $w
	global active_menus
	set active_menus [lsort -integer [linsert $active_menus end 70]]
	message $w.m -width 400 -aspect 300 -text \
		"File systems"  -relief raised
	pack $w.m -pady 10 -side top -padx 10
	wm title $w "File systems" 

	bind $w <Escape> "catch {focus $oldFocus}; destroy $w; unregister_active 70; break"
	set nextscript "catch {focus $oldFocus}; menu71 .menu71 \"$title\""
	frame $w.f
	button $w.f.back -text "Main Menu" \
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 70"
	button $w.f.next -text "Next" -underline 0\
		-width 15 -command $nextscript
	bind all <Alt-n> $nextscript
	button $w.f.prev -text "Prev" -underline 0\
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 70; menu69 .menu69 \"$title\""
	bind $w <Alt-p> "catch {focus $oldFocus}; destroy $w; unregister_active 70; menu69 .menu69 \"$title\";break"
	pack $w.f.back $w.f.next $w.f.prev -side left -expand on
	pack $w.f -pady 10 -side bottom -anchor w -fill x
	frame $w.topline -relief ridge -borderwidth 2 -height 2
	pack $w.topline -side top -fill x

	frame $w.botline -relief ridge -borderwidth 2 -height 2
	pack $w.botline -side bottom -fill x

	frame $w.config
	pack $w.config -fill y -expand on

	scrollbar $w.config.vscroll -command "$w.config.canvas yview"
	pack $w.config.vscroll -side right -fill y

	canvas $w.config.canvas -height 1\
		-relief flat -borderwidth 0 -yscrollcommand "$w.config.vscroll set" \
		-width [expr [winfo screenwidth .] * 1 / 2] 
	frame $w.config.f
	bind $w <Key-Down> "$w.config.canvas yview scroll  1 unit;break;"
	bind $w <Key-Up> "$w.config.canvas yview scroll  -1 unit;break;"
	bind $w <Key-Next> "$w.config.canvas yview scroll  1 page;break;"
	bind $w <Key-Prior> "$w.config.canvas yview scroll  -1 page;break;"
	bind $w <Key-Home> "$w.config.canvas yview moveto 0;break;"
	bind $w <Key-End> "$w.config.canvas yview moveto 1 ;break;"
	pack $w.config.canvas -side right -fill y


	bool $w.config.f 70 0 "Quota support" CONFIG_QUOTA
	dep_tristate $w.config.f 70 1 "  VFS v0 quota format support" CONFIG_QFMT_V2
	tristate $w.config.f 70 2 "Kernel automounter support" CONFIG_AUTOFS_FS
	tristate $w.config.f 70 3 "Kernel automounter version 4 support (also supports v3)" CONFIG_AUTOFS4_FS
	tristate $w.config.f 70 4 "Reiserfs support" CONFIG_REISERFS_FS
	dep_bool $w.config.f 70 5 "  Enable reiserfs debug mode" CONFIG_REISERFS_CHECK
	dep_bool $w.config.f 70 6 "  Stats in /proc/fs/reiserfs" CONFIG_REISERFS_PROC_INFO
	dep_tristate $w.config.f 70 7 "ADFS file system support (EXPERIMENTAL)" CONFIG_ADFS_FS
	dep_bool $w.config.f 70 8 "  ADFS write support (DANGEROUS)" CONFIG_ADFS_FS_RW
	dep_tristate $w.config.f 70 9 "Amiga FFS file system support (EXPERIMENTAL)" CONFIG_AFFS_FS
	dep_tristate $w.config.f 70 10 "Apple HFS file system support (EXPERIMENTAL)" CONFIG_HFS_FS
	dep_tristate $w.config.f 70 11 "Apple HFS+ (Extended HFS) file system support (EXPERIMENTAL)" CONFIG_HFSPLUS_FS
	dep_tristate $w.config.f 70 12 "BeOS file systemv(BeFS) support (read only) (EXPERIMENTAL)" CONFIG_BEFS_FS
	dep_bool $w.config.f 70 13 "  Debug Befs" CONFIG_BEFS_DEBUG
	dep_tristate $w.config.f 70 14 "BFS file system support (EXPERIMENTAL)" CONFIG_BFS_FS
	tristate $w.config.f 70 15 "Ext3 journalling file system support" CONFIG_EXT3_FS
	dep_bool $w.config.f 70 16 "  JBD (ext3) debugging support" CONFIG_JBD_DEBUG
	tristate $w.config.f 70 17 "DOS FAT fs support" CONFIG_FAT_FS
	dep_tristate $w.config.f 70 18 "  MSDOS fs support" CONFIG_MSDOS_FS
	dep_tristate $w.config.f 70 19 "    UMSDOS: Unix-like file system on top of standard MSDOS fs" CONFIG_UMSDOS_FS
	dep_tristate $w.config.f 70 20 "  VFAT (Windows-95) fs support" CONFIG_VFAT_FS
	dep_tristate $w.config.f 70 21 "EFS file system support (read only) (EXPERIMENTAL)" CONFIG_EFS_FS
	dep_tristate $w.config.f 70 22 "Journalling Flash File System (JFFS) support" CONFIG_JFFS_FS
	int $w.config.f 70 23 "JFFS debugging verbosity (0 = quiet, 3 = noisy)" CONFIG_JFFS_FS_VERBOSE
	bool $w.config.f 70 24 "JFFS stats available in /proc filesystem" CONFIG_JFFS_PROC_FS
	dep_tristate $w.config.f 70 25 "Journalling Flash File System v2 (JFFS2) support" CONFIG_JFFS2_FS
	int $w.config.f 70 26 "JFFS2 debugging verbosity (0 = quiet, 2 = noisy)" CONFIG_JFFS2_FS_DEBUG
	tristate $w.config.f 70 27 "Compressed ROM file system support" CONFIG_CRAMFS
	bool $w.config.f 70 28 "Virtual memory file system support (former shm fs)" CONFIG_TMPFS
	tristate $w.config.f 70 29 "ISO 9660 CDROM file system support" CONFIG_ISO9660_FS
	dep_bool $w.config.f 70 30 "  Microsoft Joliet CDROM extensions" CONFIG_JOLIET
	dep_bool $w.config.f 70 31 "  Transparent decompression extension" CONFIG_ZISOFS
	tristate $w.config.f 70 32 "JFS filesystem support" CONFIG_JFS_FS
	dep_bool $w.config.f 70 33 "  JFS debugging" CONFIG_JFS_DEBUG
	dep_bool $w.config.f 70 34 "  JFS statistics" CONFIG_JFS_STATISTICS
	tristate $w.config.f 70 35 "Minix fs support" CONFIG_MINIX_FS
	tristate $w.config.f 70 36 "FreeVxFS file system support (VERITAS VxFS(TM) compatible)" CONFIG_VXFS_FS
	tristate $w.config.f 70 37 "NTFS file system support (read only)" CONFIG_NTFS_FS
	dep_bool $w.config.f 70 38 "  NTFS write support (DANGEROUS)" CONFIG_NTFS_RW
	tristate $w.config.f 70 39 "OS/2 HPFS file system support" CONFIG_HPFS_FS
	bool $w.config.f 70 40 "/proc file system support" CONFIG_PROC_FS
	dep_bool $w.config.f 70 41 "/dev file system support (EXPERIMENTAL)" CONFIG_DEVFS_FS
	dep_bool $w.config.f 70 42 "  Automatically mount at boot" CONFIG_DEVFS_MOUNT
	dep_bool $w.config.f 70 43 "  Debug devfs" CONFIG_DEVFS_DEBUG
	dep_bool $w.config.f 70 44 "/dev/pts file system for Unix98 PTYs" CONFIG_DEVPTS_FS
	tristate $w.config.f 70 45 "QNX4 file system support (read only)" CONFIG_QNX4FS_FS
	dep_bool $w.config.f 70 46 "  QNX4FS write support (DANGEROUS)" CONFIG_QNX4FS_RW
	tristate $w.config.f 70 47 "ROM file system support" CONFIG_ROMFS_FS
	tristate $w.config.f 70 48 "Second extended fs support" CONFIG_EXT2_FS
	tristate $w.config.f 70 49 "System V/Xenix/V7/Coherent file system support" CONFIG_SYSV_FS
	tristate $w.config.f 70 50 "UDF file system support (read only)" CONFIG_UDF_FS
	dep_bool $w.config.f 70 51 "  UDF write support (DANGEROUS)" CONFIG_UDF_RW
	tristate $w.config.f 70 52 "UFS file system support (read only)" CONFIG_UFS_FS
	dep_bool $w.config.f 70 53 "  UFS file system write support (DANGEROUS)" CONFIG_UFS_FS_WRITE
	submenu $w.config.f 70 54 "Network File Systems" 71
	bool $w.config.f 70 55 "Crazy printk coredump support" CONFIG_COREDUMP_PRINTK
	submenu $w.config.f 70 56 "Partition Types" 72
	submenu $w.config.f 70 57 "Native Language Support" 73



	focus $w
	update_active
	global winx; global winy
	set winx [expr [winfo x .]+30]; set winy [expr [winfo y .]+30]
	if {[winfo exists $w]} then {wm geometry $w +$winx+$winy}
	update idletasks
	if {[winfo exists $w]} then  {$w.config.canvas create window 0 0 -anchor nw -window $w.config.f

	$w.config.canvas configure \
		-width [expr [winfo reqwidth $w.config.f] + 1]\
		-scrollregion "-1 -1 [expr [winfo reqwidth $w.config.f] + 1] \
			 [expr [winfo reqheight $w.config.f] + 1]"

	set winy [expr [winfo reqh $w] - [winfo reqh $w.config.canvas]]
	set scry [expr [winfo screenh $w] / 2]
	set maxy [expr [winfo screenh $w] * 3 / 4]
	set canvtotal [expr [winfo reqh $w.config.f] + 2]
	if [expr $winy + $canvtotal < $maxy] {
		$w.config.canvas configure -height $canvtotal
	} else {
		$w.config.canvas configure -height [expr $scry - $winy]
		}
	}
	update idletasks
	if {[winfo exists $w]} then {
	wm maxsize $w [winfo width $w] [winfo screenheight $w]
	wm minsize $w [winfo width $w] 100

	wm deiconify $w
}
}

proc update_menu70 {} {
	global CONFIG_MODULES
	global CONFIG_QUOTA
	global CONFIG_QFMT_V2
	if {($CONFIG_QUOTA == 1 || $CONFIG_QUOTA == 2 || $CONFIG_QUOTA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_QUOTA]];set CONFIG_QFMT_V2 [sync_tristate $CONFIG_QFMT_V2 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu70.config.f.x1 disabled {y}} else {configure_entry .menu70.config.f.x1 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu70.config.f.x1 disabled {m}} else {configure_entry .menu70.config.f.x1 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu70.config.f.x1 normal {m}} else {configure_entry .menu70.config.f.x1 disabled {m}}; configure_entry .menu70.config.f.x1 normal {n l}} else {configure_entry .menu70.config.f.x1 disabled {y n m l}}
	global CONFIG_AUTOFS_FS

	if {($CONFIG_MODULES == 1)} then {configure_entry .menu70.config.f.x2 normal {m}} else {configure_entry .menu70.config.f.x2 disabled {m}}
	global CONFIG_AUTOFS4_FS

	if {($CONFIG_MODULES == 1)} then {configure_entry .menu70.config.f.x3 normal {m}} else {configure_entry .menu70.config.f.x3 disabled {m}}
	global CONFIG_REISERFS_FS

	if {($CONFIG_MODULES == 1)} then {configure_entry .menu70.config.f.x4 normal {m}} else {configure_entry .menu70.config.f.x4 disabled {m}}
	global CONFIG_REISERFS_CHECK
	if {($CONFIG_REISERFS_FS == 1 || $CONFIG_REISERFS_FS == 2 || $CONFIG_REISERFS_FS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_REISERFS_FS]];set CONFIG_REISERFS_CHECK [sync_bool $CONFIG_REISERFS_CHECK $tmpvar_dep 1];if {$tmpvar_dep != 1 && $tmpvar_dep != 2} then {configure_entry .menu70.config.f.x5 disabled {y};} else {configure_entry .menu70.config.f.x5 normal {y};}; configure_entry .menu70.config.f.x5 normal {n l}} else {configure_entry .menu70.config.f.x5 disabled {y n l}}
	global CONFIG_REISERFS_PROC_INFO
	if {($CONFIG_REISERFS_FS == 1 || $CONFIG_REISERFS_FS == 2 || $CONFIG_REISERFS_FS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_REISERFS_FS]];set CONFIG_REISERFS_PROC_INFO [sync_bool $CONFIG_REISERFS_PROC_INFO $tmpvar_dep 1];if {$tmpvar_dep != 1 && $tmpvar_dep != 2} then {configure_entry .menu70.config.f.x6 disabled {y};} else {configure_entry .menu70.config.f.x6 normal {y};}; configure_entry .menu70.config.f.x6 normal {n l}} else {configure_entry .menu70.config.f.x6 disabled {y n l}}
	global CONFIG_EXPERIMENTAL
	global CONFIG_ADFS_FS
	if {($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_EXPERIMENTAL]];set CONFIG_ADFS_FS [sync_tristate $CONFIG_ADFS_FS $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu70.config.f.x7 disabled {y}} else {configure_entry .menu70.config.f.x7 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu70.config.f.x7 disabled {m}} else {configure_entry .menu70.config.f.x7 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu70.config.f.x7 normal {m}} else {configure_entry .menu70.config.f.x7 disabled {m}}; configure_entry .menu70.config.f.x7 normal {n l}} else {configure_entry .menu70.config.f.x7 disabled {y n m l}}
	global CONFIG_ADFS_FS_RW
	if {($CONFIG_ADFS_FS == 1 || $CONFIG_ADFS_FS == 2 || $CONFIG_ADFS_FS == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ADFS_FS $CONFIG_EXPERIMENTAL]];set CONFIG_ADFS_FS_RW [sync_bool $CONFIG_ADFS_FS_RW $tmpvar_dep 1];if {$tmpvar_dep != 1 && $tmpvar_dep != 2} then {configure_entry .menu70.config.f.x8 disabled {y};} else {configure_entry .menu70.config.f.x8 normal {y};}; configure_entry .menu70.config.f.x8 normal {n l}} else {configure_entry .menu70.config.f.x8 disabled {y n l}}
	global CONFIG_AFFS_FS
	if {($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_EXPERIMENTAL]];set CONFIG_AFFS_FS [sync_tristate $CONFIG_AFFS_FS $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu70.config.f.x9 disabled {y}} else {configure_entry .menu70.config.f.x9 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu70.config.f.x9 disabled {m}} else {configure_entry .menu70.config.f.x9 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu70.config.f.x9 normal {m}} else {configure_entry .menu70.config.f.x9 disabled {m}}; configure_entry .menu70.config.f.x9 normal {n l}} else {configure_entry .menu70.config.f.x9 disabled {y n m l}}
	global CONFIG_HFS_FS
	if {($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_EXPERIMENTAL]];set CONFIG_HFS_FS [sync_tristate $CONFIG_HFS_FS $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu70.config.f.x10 disabled {y}} else {configure_entry .menu70.config.f.x10 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu70.config.f.x10 disabled {m}} else {configure_entry .menu70.config.f.x10 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu70.config.f.x10 normal {m}} else {configure_entry .menu70.config.f.x10 disabled {m}}; configure_entry .menu70.config.f.x10 normal {n l}} else {configure_entry .menu70.config.f.x10 disabled {y n m l}}
	global CONFIG_HFSPLUS_FS
	if {($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_EXPERIMENTAL]];set CONFIG_HFSPLUS_FS [sync_tristate $CONFIG_HFSPLUS_FS $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu70.config.f.x11 disabled {y}} else {configure_entry .menu70.config.f.x11 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu70.config.f.x11 disabled {m}} else {configure_entry .menu70.config.f.x11 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu70.config.f.x11 normal {m}} else {configure_entry .menu70.config.f.x11 disabled {m}}; configure_entry .menu70.config.f.x11 normal {n l}} else {configure_entry .menu70.config.f.x11 disabled {y n m l}}
	global CONFIG_BEFS_FS
	if {($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_EXPERIMENTAL]];set CONFIG_BEFS_FS [sync_tristate $CONFIG_BEFS_FS $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu70.config.f.x12 disabled {y}} else {configure_entry .menu70.config.f.x12 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu70.config.f.x12 disabled {m}} else {configure_entry .menu70.config.f.x12 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu70.config.f.x12 normal {m}} else {configure_entry .menu70.config.f.x12 disabled {m}}; configure_entry .menu70.config.f.x12 normal {n l}} else {configure_entry .menu70.config.f.x12 disabled {y n m l}}
	global CONFIG_BEFS_DEBUG
	if {($CONFIG_BEFS_FS == 1 || $CONFIG_BEFS_FS == 2 || $CONFIG_BEFS_FS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BEFS_FS]];set CONFIG_BEFS_DEBUG [sync_bool $CONFIG_BEFS_DEBUG $tmpvar_dep 1];if {$tmpvar_dep != 1 && $tmpvar_dep != 2} then {configure_entry .menu70.config.f.x13 disabled {y};} else {configure_entry .menu70.config.f.x13 normal {y};}; configure_entry .menu70.config.f.x13 normal {n l}} else {configure_entry .menu70.config.f.x13 disabled {y n l}}
	global CONFIG_BFS_FS
	if {($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_EXPERIMENTAL]];set CONFIG_BFS_FS [sync_tristate $CONFIG_BFS_FS $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu70.config.f.x14 disabled {y}} else {configure_entry .menu70.config.f.x14 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu70.config.f.x14 disabled {m}} else {configure_entry .menu70.config.f.x14 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu70.config.f.x14 normal {m}} else {configure_entry .menu70.config.f.x14 disabled {m}}; configure_entry .menu70.config.f.x14 normal {n l}} else {configure_entry .menu70.config.f.x14 disabled {y n m l}}
	global CONFIG_EXT3_FS

	if {($CONFIG_MODULES == 1)} then {configure_entry .menu70.config.f.x15 normal {m}} else {configure_entry .menu70.config.f.x15 disabled {m}}
	global CONFIG_JBD
	global CONFIG_JBD_DEBUG
	if {($CONFIG_JBD == 1 || $CONFIG_JBD == 2 || $CONFIG_JBD == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_JBD]];set CONFIG_JBD_DEBUG [sync_bool $CONFIG_JBD_DEBUG $tmpvar_dep 1];if {$tmpvar_dep != 1 && $tmpvar_dep != 2} then {configure_entry .menu70.config.f.x16 disabled {y};} else {configure_entry .menu70.config.f.x16 normal {y};}; configure_entry .menu70.config.f.x16 normal {n l}} else {configure_entry .menu70.config.f.x16 disabled {y n l}}
	global CONFIG_FAT_FS

	if {($CONFIG_MODULES == 1)} then {configure_entry .menu70.config.f.x17 normal {m}} else {configure_entry .menu70.config.f.x17 disabled {m}}
	global CONFIG_MSDOS_FS
	if {($CONFIG_FAT_FS == 1 || $CONFIG_FAT_FS == 2 || $CONFIG_FAT_FS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_FAT_FS]];set CONFIG_MSDOS_FS [sync_tristate $CONFIG_MSDOS_FS $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu70.config.f.x18 disabled {y}} else {configure_entry .menu70.config.f.x18 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu70.config.f.x18 disabled {m}} else {configure_entry .menu70.config.f.x18 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu70.config.f.x18 normal {m}} else {configure_entry .menu70.config.f.x18 disabled {m}}; configure_entry .menu70.config.f.x18 normal {n l}} else {configure_entry .menu70.config.f.x18 disabled {y n m l}}
	global CONFIG_UMSDOS_FS
	if {($CONFIG_MSDOS_FS == 1 || $CONFIG_MSDOS_FS == 2 || $CONFIG_MSDOS_FS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_MSDOS_FS]];set CONFIG_UMSDOS_FS [sync_tristate $CONFIG_UMSDOS_FS $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu70.config.f.x19 disabled {y}} else {configure_entry .menu70.config.f.x19 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu70.config.f.x19 disabled {m}} else {configure_entry .menu70.config.f.x19 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu70.config.f.x19 normal {m}} else {configure_entry .menu70.config.f.x19 disabled {m}}; configure_entry .menu70.config.f.x19 normal {n l}} else {configure_entry .menu70.config.f.x19 disabled {y n m l}}
	global CONFIG_VFAT_FS
	if {($CONFIG_FAT_FS == 1 || $CONFIG_FAT_FS == 2 || $CONFIG_FAT_FS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_FAT_FS]];set CONFIG_VFAT_FS [sync_tristate $CONFIG_VFAT_FS $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu70.config.f.x20 disabled {y}} else {configure_entry .menu70.config.f.x20 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu70.config.f.x20 disabled {m}} else {configure_entry .menu70.config.f.x20 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu70.config.f.x20 normal {m}} else {configure_entry .menu70.config.f.x20 disabled {m}}; configure_entry .menu70.config.f.x20 normal {n l}} else {configure_entry .menu70.config.f.x20 disabled {y n m l}}
	global CONFIG_EFS_FS
	if {($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_EXPERIMENTAL]];set CONFIG_EFS_FS [sync_tristate $CONFIG_EFS_FS $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu70.config.f.x21 disabled {y}} else {configure_entry .menu70.config.f.x21 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu70.config.f.x21 disabled {m}} else {configure_entry .menu70.config.f.x21 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu70.config.f.x21 normal {m}} else {configure_entry .menu70.config.f.x21 disabled {m}}; configure_entry .menu70.config.f.x21 normal {n l}} else {configure_entry .menu70.config.f.x21 disabled {y n m l}}
	global CONFIG_MTD
	global CONFIG_JFFS_FS
	if {($CONFIG_MTD == 1 || $CONFIG_MTD == 2 || $CONFIG_MTD == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_MTD]];set CONFIG_JFFS_FS [sync_tristate $CONFIG_JFFS_FS $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu70.config.f.x22 disabled {y}} else {configure_entry .menu70.config.f.x22 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu70.config.f.x22 disabled {m}} else {configure_entry .menu70.config.f.x22 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu70.config.f.x22 normal {m}} else {configure_entry .menu70.config.f.x22 disabled {m}}; configure_entry .menu70.config.f.x22 normal {n l}} else {configure_entry .menu70.config.f.x22 disabled {y n m l}}
	global CONFIG_JFFS_FS_VERBOSE
	if {($CONFIG_JFFS_FS == 1 || $CONFIG_JFFS_FS == 2)} then {.menu70.config.f.x23.x configure -state normal -foreground [ cget .ref -foreground ]; .menu70.config.f.x23.l configure -state normal; } else {.menu70.config.f.x23.x configure -state disabled -foreground [ cget .ref -disabledforeground ]; .menu70.config.f.x23.l configure -state disabled}
	global CONFIG_JFFS_PROC_FS
	if {($CONFIG_JFFS_FS == 1 || $CONFIG_JFFS_FS == 2)} then {
	configure_entry .menu70.config.f.x24 normal {n l y}} else {configure_entry .menu70.config.f.x24 disabled {y n l}}
	global CONFIG_JFFS2_FS
	if {($CONFIG_MTD == 1 || $CONFIG_MTD == 2 || $CONFIG_MTD == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_MTD]];set CONFIG_JFFS2_FS [sync_tristate $CONFIG_JFFS2_FS $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu70.config.f.x25 disabled {y}} else {configure_entry .menu70.config.f.x25 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu70.config.f.x25 disabled {m}} else {configure_entry .menu70.config.f.x25 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu70.config.f.x25 normal {m}} else {configure_entry .menu70.config.f.x25 disabled {m}}; configure_entry .menu70.config.f.x25 normal {n l}} else {configure_entry .menu70.config.f.x25 disabled {y n m l}}
	global CONFIG_JFFS2_FS_DEBUG
	if {($CONFIG_JFFS2_FS == 1 || $CONFIG_JFFS2_FS == 2)} then {.menu70.config.f.x26.x configure -state normal -foreground [ cget .ref -foreground ]; .menu70.config.f.x26.l configure -state normal; } else {.menu70.config.f.x26.x configure -state disabled -foreground [ cget .ref -disabledforeground ]; .menu70.config.f.x26.l configure -state disabled}
	global CONFIG_CRAMFS

	if {($CONFIG_MODULES == 1)} then {configure_entry .menu70.config.f.x27 normal {m}} else {configure_entry .menu70.config.f.x27 disabled {m}}
	global CONFIG_ISO9660_FS

	if {($CONFIG_MODULES == 1)} then {configure_entry .menu70.config.f.x29 normal {m}} else {configure_entry .menu70.config.f.x29 disabled {m}}
	global CONFIG_JOLIET
	if {($CONFIG_ISO9660_FS == 1 || $CONFIG_ISO9660_FS == 2 || $CONFIG_ISO9660_FS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ISO9660_FS]];set CONFIG_JOLIET [sync_bool $CONFIG_JOLIET $tmpvar_dep 1];if {$tmpvar_dep != 1 && $tmpvar_dep != 2} then {configure_entry .menu70.config.f.x30 disabled {y};} else {configure_entry .menu70.config.f.x30 normal {y};}; configure_entry .menu70.config.f.x30 normal {n l}} else {configure_entry .menu70.config.f.x30 disabled {y n l}}
	global CONFIG_ZISOFS
	if {($CONFIG_ISO9660_FS == 1 || $CONFIG_ISO9660_FS == 2 || $CONFIG_ISO9660_FS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ISO9660_FS]];set CONFIG_ZISOFS [sync_bool $CONFIG_ZISOFS $tmpvar_dep 1];if {$tmpvar_dep != 1 && $tmpvar_dep != 2} then {configure_entry .menu70.config.f.x31 disabled {y};} else {configure_entry .menu70.config.f.x31 normal {y};}; configure_entry .menu70.config.f.x31 normal {n l}} else {configure_entry .menu70.config.f.x31 disabled {y n l}}
	global CONFIG_JFS_FS

	if {($CONFIG_MODULES == 1)} then {configure_entry .menu70.config.f.x32 normal {m}} else {configure_entry .menu70.config.f.x32 disabled {m}}
	global CONFIG_JFS_DEBUG
	if {($CONFIG_JFS_FS == 1 || $CONFIG_JFS_FS == 2 || $CONFIG_JFS_FS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_JFS_FS]];set CONFIG_JFS_DEBUG [sync_bool $CONFIG_JFS_DEBUG $tmpvar_dep 1];if {$tmpvar_dep != 1 && $tmpvar_dep != 2} then {configure_entry .menu70.config.f.x33 disabled {y};} else {configure_entry .menu70.config.f.x33 normal {y};}; configure_entry .menu70.config.f.x33 normal {n l}} else {configure_entry .menu70.config.f.x33 disabled {y n l}}
	global CONFIG_JFS_STATISTICS
	if {($CONFIG_JFS_FS == 1 || $CONFIG_JFS_FS == 2 || $CONFIG_JFS_FS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_JFS_FS]];set CONFIG_JFS_STATISTICS [sync_bool $CONFIG_JFS_STATISTICS $tmpvar_dep 1];if {$tmpvar_dep != 1 && $tmpvar_dep != 2} then {configure_entry .menu70.config.f.x34 disabled {y};} else {configure_entry .menu70.config.f.x34 normal {y};}; configure_entry .menu70.config.f.x34 normal {n l}} else {configure_entry .menu70.config.f.x34 disabled {y n l}}
	global CONFIG_MINIX_FS

	if {($CONFIG_MODULES == 1)} then {configure_entry .menu70.config.f.x35 normal {m}} else {configure_entry .menu70.config.f.x35 disabled {m}}
	global CONFIG_VXFS_FS

	if {($CONFIG_MODULES == 1)} then {configure_entry .menu70.config.f.x36 normal {m}} else {configure_entry .menu70.config.f.x36 disabled {m}}
	global CONFIG_NTFS_FS

	if {($CONFIG_MODULES == 1)} then {configure_entry .menu70.config.f.x37 normal {m}} else {configure_entry .menu70.config.f.x37 disabled {m}}
	global CONFIG_NTFS_RW
	if {($CONFIG_NTFS_FS == 1 || $CONFIG_NTFS_FS == 2 || $CONFIG_NTFS_FS == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_NTFS_FS $CONFIG_EXPERIMENTAL]];set CONFIG_NTFS_RW [sync_bool $CONFIG_NTFS_RW $tmpvar_dep 1];if {$tmpvar_dep != 1 && $tmpvar_dep != 2} then {configure_entry .menu70.config.f.x38 disabled {y};} else {configure_entry .menu70.config.f.x38 normal {y};}; configure_entry .menu70.config.f.x38 normal {n l}} else {configure_entry .menu70.config.f.x38 disabled {y n l}}
	global CONFIG_HPFS_FS

	if {($CONFIG_MODULES == 1)} then {configure_entry .menu70.config.f.x39 normal {m}} else {configure_entry .menu70.config.f.x39 disabled {m}}
	global CONFIG_X86_64
	global CONFIG_DEVFS_FS
	if {($CONFIG_X86_64 != 1) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_EXPERIMENTAL]];set CONFIG_DEVFS_FS [sync_bool $CONFIG_DEVFS_FS $tmpvar_dep 0];if {$tmpvar_dep != 1} then {configure_entry .menu70.config.f.x41 disabled {y};} else {configure_entry .menu70.config.f.x41 normal {y};}; configure_entry .menu70.config.f.x41 normal {n l}} else {configure_entry .menu70.config.f.x41 disabled {y n l}}
	global CONFIG_DEVFS_MOUNT
	if {($CONFIG_X86_64 != 1) && ($CONFIG_DEVFS_FS == 1 || $CONFIG_DEVFS_FS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_DEVFS_FS]];set CONFIG_DEVFS_MOUNT [sync_bool $CONFIG_DEVFS_MOUNT $tmpvar_dep 0];if {$tmpvar_dep != 1} then {configure_entry .menu70.config.f.x42 disabled {y};} else {configure_entry .menu70.config.f.x42 normal {y};}; configure_entry .menu70.config.f.x42 normal {n l}} else {configure_entry .menu70.config.f.x42 disabled {y n l}}
	global CONFIG_DEVFS_DEBUG
	if {($CONFIG_X86_64 != 1) && ($CONFIG_DEVFS_FS == 1 || $CONFIG_DEVFS_FS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_DEVFS_FS]];set CONFIG_DEVFS_DEBUG [sync_bool $CONFIG_DEVFS_DEBUG $tmpvar_dep 0];if {$tmpvar_dep != 1} then {configure_entry .menu70.config.f.x43 disabled {y};} else {configure_entry .menu70.config.f.x43 normal {y};}; configure_entry .menu70.config.f.x43 normal {n l}} else {configure_entry .menu70.config.f.x43 disabled {y n l}}
	global CONFIG_UNIX98_PTYS
	global CONFIG_DEVPTS_FS
	if {($CONFIG_UNIX98_PTYS == 1 || $CONFIG_UNIX98_PTYS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_UNIX98_PTYS]];set CONFIG_DEVPTS_FS [sync_bool $CONFIG_DEVPTS_FS $tmpvar_dep 0];if {$tmpvar_dep != 1} then {configure_entry .menu70.config.f.x44 disabled {y};} else {configure_entry .menu70.config.f.x44 normal {y};}; configure_entry .menu70.config.f.x44 normal {n l}} else {configure_entry .menu70.config.f.x44 disabled {y n l}}
	global CONFIG_QNX4FS_FS

	if {($CONFIG_MODULES == 1)} then {configure_entry .menu70.config.f.x45 normal {m}} else {configure_entry .menu70.config.f.x45 disabled {m}}
	global CONFIG_QNX4FS_RW
	if {($CONFIG_QNX4FS_FS == 1 || $CONFIG_QNX4FS_FS == 2 || $CONFIG_QNX4FS_FS == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_QNX4FS_FS $CONFIG_EXPERIMENTAL]];set CONFIG_QNX4FS_RW [sync_bool $CONFIG_QNX4FS_RW $tmpvar_dep 1];if {$tmpvar_dep != 1 && $tmpvar_dep != 2} then {configure_entry .menu70.config.f.x46 disabled {y};} else {configure_entry .menu70.config.f.x46 normal {y};}; configure_entry .menu70.config.f.x46 normal {n l}} else {configure_entry .menu70.config.f.x46 disabled {y n l}}
	global CONFIG_ROMFS_FS

	if {($CONFIG_MODULES == 1)} then {configure_entry .menu70.config.f.x47 normal {m}} else {configure_entry .menu70.config.f.x47 disabled {m}}
	global CONFIG_EXT2_FS

	if {($CONFIG_MODULES == 1)} then {configure_entry .menu70.config.f.x48 normal {m}} else {configure_entry .menu70.config.f.x48 disabled {m}}
	global CONFIG_SYSV_FS

	if {($CONFIG_MODULES == 1)} then {configure_entry .menu70.config.f.x49 normal {m}} else {configure_entry .menu70.config.f.x49 disabled {m}}
	global CONFIG_UDF_FS

	if {($CONFIG_MODULES == 1)} then {configure_entry .menu70.config.f.x50 normal {m}} else {configure_entry .menu70.config.f.x50 disabled {m}}
	global CONFIG_UDF_RW
	if {($CONFIG_UDF_FS == 1 || $CONFIG_UDF_FS == 2 || $CONFIG_UDF_FS == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_UDF_FS $CONFIG_EXPERIMENTAL]];set CONFIG_UDF_RW [sync_bool $CONFIG_UDF_RW $tmpvar_dep 1];if {$tmpvar_dep != 1 && $tmpvar_dep != 2} then {configure_entry .menu70.config.f.x51 disabled {y};} else {configure_entry .menu70.config.f.x51 normal {y};}; configure_entry .menu70.config.f.x51 normal {n l}} else {configure_entry .menu70.config.f.x51 disabled {y n l}}
	global CONFIG_UFS_FS

	if {($CONFIG_MODULES == 1)} then {configure_entry .menu70.config.f.x52 normal {m}} else {configure_entry .menu70.config.f.x52 disabled {m}}
	global CONFIG_UFS_FS_WRITE
	if {($CONFIG_UFS_FS == 1 || $CONFIG_UFS_FS == 2 || $CONFIG_UFS_FS == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_UFS_FS $CONFIG_EXPERIMENTAL]];set CONFIG_UFS_FS_WRITE [sync_bool $CONFIG_UFS_FS_WRITE $tmpvar_dep 1];if {$tmpvar_dep != 1 && $tmpvar_dep != 2} then {configure_entry .menu70.config.f.x53 disabled {y};} else {configure_entry .menu70.config.f.x53 normal {y};}; configure_entry .menu70.config.f.x53 normal {n l}} else {configure_entry .menu70.config.f.x53 disabled {y n l}}
	global CONFIG_NET
	if {($CONFIG_NET == 1)} then {configure_entry .menu70.config.f.x54 normal {m}} else {configure_entry .menu70.config.f.x54 disabled {m}}
	global CONFIG_UCLINUX
	global CONFIG_COREDUMP_PRINTK
	if {($CONFIG_UCLINUX != 1)} then {
	configure_entry .menu70.config.f.x55 normal {n l y}} else {configure_entry .menu70.config.f.x55 disabled {y n l}}
	global CONFIG_NLS
	if {($CONFIG_NLS == 1)} then {configure_entry .menu70.config.f.x57 normal {m}} else {configure_entry .menu70.config.f.x57 disabled {m}}
}


proc update_define_menu70 {} {
	update_define_mainmenu
	global CONFIG_MODULES
	global CONFIG_AUTOFS_FS
	global CONFIG_AUTOFS4_FS
	global CONFIG_REISERFS_FS
	global CONFIG_EXT3_FS
	global CONFIG_JBD
	global CONFIG_FAT_FS
	global CONFIG_CRAMFS
	global CONFIG_RAMFS
	global CONFIG_ISO9660_FS
	global CONFIG_JFS_FS
	global CONFIG_MINIX_FS
	global CONFIG_VXFS_FS
	global CONFIG_NTFS_FS
	global CONFIG_HPFS_FS
	global CONFIG_QNX4FS_FS
	global CONFIG_ROMFS_FS
	global CONFIG_EXT2_FS
	global CONFIG_SYSV_FS
	global CONFIG_UDF_FS
	global CONFIG_UFS_FS
	global CONFIG_NCPFS_NLS
	global CONFIG_SMB_FS
	global CONFIG_ZISOFS_FS
	global CONFIG_SMB_NLS
	global CONFIG_NLS
	global CONFIG_JFFS_PROC_FS
set CONFIG_JFFS_PROC_FS [expr $CONFIG_JFFS_PROC_FS|16]
	global CONFIG_COREDUMP_PRINTK
set CONFIG_COREDUMP_PRINTK [expr $CONFIG_COREDUMP_PRINTK|16]
	global CONFIG_QUOTA
	global CONFIG_QFMT_V2
	if {($CONFIG_QUOTA == 1 || $CONFIG_QUOTA == 2 || $CONFIG_QUOTA == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_QUOTA]]; set CONFIG_QFMT_V2 [sync_tristate $CONFIG_QFMT_V2 $tmpvar_dep]; set CONFIG_QFMT_V2 [expr $CONFIG_QFMT_V2&15]}

	if {($CONFIG_MODULES == 0)} then {if {($CONFIG_AUTOFS_FS == 2)} then {set CONFIG_AUTOFS_FS 1}}

	if {($CONFIG_MODULES == 0)} then {if {($CONFIG_AUTOFS4_FS == 2)} then {set CONFIG_AUTOFS4_FS 1}}

	if {($CONFIG_MODULES == 0)} then {if {($CONFIG_REISERFS_FS == 2)} then {set CONFIG_REISERFS_FS 1}}
	global CONFIG_REISERFS_CHECK
	if {($CONFIG_REISERFS_FS == 1 || $CONFIG_REISERFS_FS == 2 || $CONFIG_REISERFS_FS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_REISERFS_FS]];set CONFIG_REISERFS_CHECK [sync_bool $CONFIG_REISERFS_CHECK $tmpvar_dep 1];set CONFIG_REISERFS_CHECK [expr $CONFIG_REISERFS_CHECK&15]}
	global CONFIG_REISERFS_PROC_INFO
	if {($CONFIG_REISERFS_FS == 1 || $CONFIG_REISERFS_FS == 2 || $CONFIG_REISERFS_FS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_REISERFS_FS]];set CONFIG_REISERFS_PROC_INFO [sync_bool $CONFIG_REISERFS_PROC_INFO $tmpvar_dep 1];set CONFIG_REISERFS_PROC_INFO [expr $CONFIG_REISERFS_PROC_INFO&15]}
	global CONFIG_EXPERIMENTAL
	global CONFIG_ADFS_FS
	if {($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_EXPERIMENTAL]]; set CONFIG_ADFS_FS [sync_tristate $CONFIG_ADFS_FS $tmpvar_dep]; set CONFIG_ADFS_FS [expr $CONFIG_ADFS_FS&15]}
	global CONFIG_ADFS_FS_RW
	if {($CONFIG_ADFS_FS == 1 || $CONFIG_ADFS_FS == 2 || $CONFIG_ADFS_FS == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ADFS_FS $CONFIG_EXPERIMENTAL]];set CONFIG_ADFS_FS_RW [sync_bool $CONFIG_ADFS_FS_RW $tmpvar_dep 1];set CONFIG_ADFS_FS_RW [expr $CONFIG_ADFS_FS_RW&15]}
	global CONFIG_AFFS_FS
	if {($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_EXPERIMENTAL]]; set CONFIG_AFFS_FS [sync_tristate $CONFIG_AFFS_FS $tmpvar_dep]; set CONFIG_AFFS_FS [expr $CONFIG_AFFS_FS&15]}
	global CONFIG_HFS_FS
	if {($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_EXPERIMENTAL]]; set CONFIG_HFS_FS [sync_tristate $CONFIG_HFS_FS $tmpvar_dep]; set CONFIG_HFS_FS [expr $CONFIG_HFS_FS&15]}
	global CONFIG_HFSPLUS_FS
	if {($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_EXPERIMENTAL]]; set CONFIG_HFSPLUS_FS [sync_tristate $CONFIG_HFSPLUS_FS $tmpvar_dep]; set CONFIG_HFSPLUS_FS [expr $CONFIG_HFSPLUS_FS&15]}
	global CONFIG_BEFS_FS
	if {($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_EXPERIMENTAL]]; set CONFIG_BEFS_FS [sync_tristate $CONFIG_BEFS_FS $tmpvar_dep]; set CONFIG_BEFS_FS [expr $CONFIG_BEFS_FS&15]}
	global CONFIG_BEFS_DEBUG
	if {($CONFIG_BEFS_FS == 1 || $CONFIG_BEFS_FS == 2 || $CONFIG_BEFS_FS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BEFS_FS]];set CONFIG_BEFS_DEBUG [sync_bool $CONFIG_BEFS_DEBUG $tmpvar_dep 1];set CONFIG_BEFS_DEBUG [expr $CONFIG_BEFS_DEBUG&15]}
	global CONFIG_BFS_FS
	if {($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_EXPERIMENTAL]]; set CONFIG_BFS_FS [sync_tristate $CONFIG_BFS_FS $tmpvar_dep]; set CONFIG_BFS_FS [expr $CONFIG_BFS_FS&15]}

	if {($CONFIG_MODULES == 0)} then {if {($CONFIG_EXT3_FS == 2)} then {set CONFIG_EXT3_FS 1}}
	set CONFIG_JBD $CONFIG_EXT3_FS
	global CONFIG_JBD_DEBUG
	if {($CONFIG_JBD == 1 || $CONFIG_JBD == 2 || $CONFIG_JBD == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_JBD]];set CONFIG_JBD_DEBUG [sync_bool $CONFIG_JBD_DEBUG $tmpvar_dep 1];set CONFIG_JBD_DEBUG [expr $CONFIG_JBD_DEBUG&15]}

	if {($CONFIG_MODULES == 0)} then {if {($CONFIG_FAT_FS == 2)} then {set CONFIG_FAT_FS 1}}
	global CONFIG_MSDOS_FS
	if {($CONFIG_FAT_FS == 1 || $CONFIG_FAT_FS == 2 || $CONFIG_FAT_FS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_FAT_FS]]; set CONFIG_MSDOS_FS [sync_tristate $CONFIG_MSDOS_FS $tmpvar_dep]; set CONFIG_MSDOS_FS [expr $CONFIG_MSDOS_FS&15]}
	global CONFIG_UMSDOS_FS
	if {($CONFIG_MSDOS_FS == 1 || $CONFIG_MSDOS_FS == 2 || $CONFIG_MSDOS_FS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_MSDOS_FS]]; set CONFIG_UMSDOS_FS [sync_tristate $CONFIG_UMSDOS_FS $tmpvar_dep]; set CONFIG_UMSDOS_FS [expr $CONFIG_UMSDOS_FS&15]}
	global CONFIG_VFAT_FS
	if {($CONFIG_FAT_FS == 1 || $CONFIG_FAT_FS == 2 || $CONFIG_FAT_FS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_FAT_FS]]; set CONFIG_VFAT_FS [sync_tristate $CONFIG_VFAT_FS $tmpvar_dep]; set CONFIG_VFAT_FS [expr $CONFIG_VFAT_FS&15]}
	global CONFIG_EFS_FS
	if {($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_EXPERIMENTAL]]; set CONFIG_EFS_FS [sync_tristate $CONFIG_EFS_FS $tmpvar_dep]; set CONFIG_EFS_FS [expr $CONFIG_EFS_FS&15]}
	global CONFIG_MTD
	global CONFIG_JFFS_FS
	if {($CONFIG_MTD == 1 || $CONFIG_MTD == 2 || $CONFIG_MTD == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_MTD]]; set CONFIG_JFFS_FS [sync_tristate $CONFIG_JFFS_FS $tmpvar_dep]; set CONFIG_JFFS_FS [expr $CONFIG_JFFS_FS&15]}
	global CONFIG_JFFS_FS_VERBOSE
	if {($CONFIG_JFFS_FS == 1 || $CONFIG_JFFS_FS == 2)} then {validate_int CONFIG_JFFS_FS_VERBOSE "$CONFIG_JFFS_FS_VERBOSE" 0}
	if {($CONFIG_JFFS_FS == 1 || $CONFIG_JFFS_FS == 2)} then {
	set CONFIG_JFFS_PROC_FS [expr $CONFIG_JFFS_PROC_FS&15]}
	global CONFIG_JFFS2_FS
	if {($CONFIG_MTD == 1 || $CONFIG_MTD == 2 || $CONFIG_MTD == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_MTD]]; set CONFIG_JFFS2_FS [sync_tristate $CONFIG_JFFS2_FS $tmpvar_dep]; set CONFIG_JFFS2_FS [expr $CONFIG_JFFS2_FS&15]}
	global CONFIG_JFFS2_FS_DEBUG
	if {($CONFIG_JFFS2_FS == 1 || $CONFIG_JFFS2_FS == 2)} then {validate_int CONFIG_JFFS2_FS_DEBUG "$CONFIG_JFFS2_FS_DEBUG" 0}

	if {($CONFIG_MODULES == 0)} then {if {($CONFIG_CRAMFS == 2)} then {set CONFIG_CRAMFS 1}}
	global CONSTANT_Y
	set CONFIG_RAMFS $CONSTANT_Y

	if {($CONFIG_MODULES == 0)} then {if {($CONFIG_ISO9660_FS == 2)} then {set CONFIG_ISO9660_FS 1}}
	global CONFIG_JOLIET
	if {($CONFIG_ISO9660_FS == 1 || $CONFIG_ISO9660_FS == 2 || $CONFIG_ISO9660_FS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ISO9660_FS]];set CONFIG_JOLIET [sync_bool $CONFIG_JOLIET $tmpvar_dep 1];set CONFIG_JOLIET [expr $CONFIG_JOLIET&15]}
	global CONFIG_ZISOFS
	if {($CONFIG_ISO9660_FS == 1 || $CONFIG_ISO9660_FS == 2 || $CONFIG_ISO9660_FS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ISO9660_FS]];set CONFIG_ZISOFS [sync_bool $CONFIG_ZISOFS $tmpvar_dep 1];set CONFIG_ZISOFS [expr $CONFIG_ZISOFS&15]}

	if {($CONFIG_MODULES == 0)} then {if {($CONFIG_JFS_FS == 2)} then {set CONFIG_JFS_FS 1}}
	global CONFIG_JFS_DEBUG
	if {($CONFIG_JFS_FS == 1 || $CONFIG_JFS_FS == 2 || $CONFIG_JFS_FS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_JFS_FS]];set CONFIG_JFS_DEBUG [sync_bool $CONFIG_JFS_DEBUG $tmpvar_dep 1];set CONFIG_JFS_DEBUG [expr $CONFIG_JFS_DEBUG&15]}
	global CONFIG_JFS_STATISTICS
	if {($CONFIG_JFS_FS == 1 || $CONFIG_JFS_FS == 2 || $CONFIG_JFS_FS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_JFS_FS]];set CONFIG_JFS_STATISTICS [sync_bool $CONFIG_JFS_STATISTICS $tmpvar_dep 1];set CONFIG_JFS_STATISTICS [expr $CONFIG_JFS_STATISTICS&15]}

	if {($CONFIG_MODULES == 0)} then {if {($CONFIG_MINIX_FS == 2)} then {set CONFIG_MINIX_FS 1}}

	if {($CONFIG_MODULES == 0)} then {if {($CONFIG_VXFS_FS == 2)} then {set CONFIG_VXFS_FS 1}}

	if {($CONFIG_MODULES == 0)} then {if {($CONFIG_NTFS_FS == 2)} then {set CONFIG_NTFS_FS 1}}
	global CONFIG_NTFS_RW
	if {($CONFIG_NTFS_FS == 1 || $CONFIG_NTFS_FS == 2 || $CONFIG_NTFS_FS == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_NTFS_FS $CONFIG_EXPERIMENTAL]];set CONFIG_NTFS_RW [sync_bool $CONFIG_NTFS_RW $tmpvar_dep 1];set CONFIG_NTFS_RW [expr $CONFIG_NTFS_RW&15]}

	if {($CONFIG_MODULES == 0)} then {if {($CONFIG_HPFS_FS == 2)} then {set CONFIG_HPFS_FS 1}}
	global CONFIG_X86_64
	global CONFIG_DEVFS_FS
	if {($CONFIG_X86_64 != 1) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_EXPERIMENTAL]];set CONFIG_DEVFS_FS [sync_bool $CONFIG_DEVFS_FS $tmpvar_dep 0];set CONFIG_DEVFS_FS [expr $CONFIG_DEVFS_FS&15]}
	global CONFIG_DEVFS_MOUNT
	if {($CONFIG_X86_64 != 1) && ($CONFIG_DEVFS_FS == 1 || $CONFIG_DEVFS_FS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_DEVFS_FS]];set CONFIG_DEVFS_MOUNT [sync_bool $CONFIG_DEVFS_MOUNT $tmpvar_dep 0];set CONFIG_DEVFS_MOUNT [expr $CONFIG_DEVFS_MOUNT&15]}
	global CONFIG_DEVFS_DEBUG
	if {($CONFIG_X86_64 != 1) && ($CONFIG_DEVFS_FS == 1 || $CONFIG_DEVFS_FS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_DEVFS_FS]];set CONFIG_DEVFS_DEBUG [sync_bool $CONFIG_DEVFS_DEBUG $tmpvar_dep 0];set CONFIG_DEVFS_DEBUG [expr $CONFIG_DEVFS_DEBUG&15]}
	global CONFIG_UNIX98_PTYS
	global CONFIG_DEVPTS_FS
	if {($CONFIG_UNIX98_PTYS == 1 || $CONFIG_UNIX98_PTYS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_UNIX98_PTYS]];set CONFIG_DEVPTS_FS [sync_bool $CONFIG_DEVPTS_FS $tmpvar_dep 0];set CONFIG_DEVPTS_FS [expr $CONFIG_DEVPTS_FS&15]}

	if {($CONFIG_MODULES == 0)} then {if {($CONFIG_QNX4FS_FS == 2)} then {set CONFIG_QNX4FS_FS 1}}
	global CONFIG_QNX4FS_RW
	if {($CONFIG_QNX4FS_FS == 1 || $CONFIG_QNX4FS_FS == 2 || $CONFIG_QNX4FS_FS == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_QNX4FS_FS $CONFIG_EXPERIMENTAL]];set CONFIG_QNX4FS_RW [sync_bool $CONFIG_QNX4FS_RW $tmpvar_dep 1];set CONFIG_QNX4FS_RW [expr $CONFIG_QNX4FS_RW&15]}

	if {($CONFIG_MODULES == 0)} then {if {($CONFIG_ROMFS_FS == 2)} then {set CONFIG_ROMFS_FS 1}}

	if {($CONFIG_MODULES == 0)} then {if {($CONFIG_EXT2_FS == 2)} then {set CONFIG_EXT2_FS 1}}

	if {($CONFIG_MODULES == 0)} then {if {($CONFIG_SYSV_FS == 2)} then {set CONFIG_SYSV_FS 1}}

	if {($CONFIG_MODULES == 0)} then {if {($CONFIG_UDF_FS == 2)} then {set CONFIG_UDF_FS 1}}
	global CONFIG_UDF_RW
	if {($CONFIG_UDF_FS == 1 || $CONFIG_UDF_FS == 2 || $CONFIG_UDF_FS == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_UDF_FS $CONFIG_EXPERIMENTAL]];set CONFIG_UDF_RW [sync_bool $CONFIG_UDF_RW $tmpvar_dep 1];set CONFIG_UDF_RW [expr $CONFIG_UDF_RW&15]}

	if {($CONFIG_MODULES == 0)} then {if {($CONFIG_UFS_FS == 2)} then {set CONFIG_UFS_FS 1}}
	global CONFIG_UFS_FS_WRITE
	if {($CONFIG_UFS_FS == 1 || $CONFIG_UFS_FS == 2 || $CONFIG_UFS_FS == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_UFS_FS $CONFIG_EXPERIMENTAL]];set CONFIG_UFS_FS_WRITE [sync_bool $CONFIG_UFS_FS_WRITE $tmpvar_dep 1];set CONFIG_UFS_FS_WRITE [expr $CONFIG_UFS_FS_WRITE&15]}
	global CONFIG_NET
	if {($CONFIG_NET != 1)} then {	global CONSTANT_N
set CONFIG_NCPFS_NLS $CONSTANT_N }
	if {($CONFIG_NET != 1)} then {	global CONSTANT_N
set CONFIG_SMB_FS $CONSTANT_N }
	if {($CONFIG_ZISOFS == 1)} then {set CONFIG_ZISOFS_FS $CONFIG_ISO9660_FS }
	if {($CONFIG_ZISOFS != 1)} then {	global CONSTANT_N
set CONFIG_ZISOFS_FS $CONSTANT_N }
	global CONFIG_UCLINUX
	if {($CONFIG_UCLINUX != 1)} then {
	set CONFIG_COREDUMP_PRINTK [expr $CONFIG_COREDUMP_PRINTK&15]}
	if {($CONFIG_SMB_FS == 2 || $CONFIG_SMB_FS == 1)} then {set CONFIG_SMB_NLS $CONSTANT_Y }
	if {($CONFIG_SMB_FS != 2 && $CONFIG_SMB_FS != 1)} then {	global CONSTANT_N
set CONFIG_SMB_NLS $CONSTANT_N }
	if {($CONFIG_JOLIET == 1 || $CONFIG_FAT_FS != 0 || $CONFIG_NTFS_FS != 0 || $CONFIG_NCPFS_NLS == 1 || $CONFIG_SMB_NLS == 1 || $CONFIG_JFS_FS != 0 || $CONFIG_BEFS_FS != 0 || $CONFIG_HFSPLUS_FS != 0)} then {set CONFIG_NLS $CONSTANT_Y }
	if {($CONFIG_JOLIET != 1 && $CONFIG_FAT_FS == 0 && $CONFIG_NTFS_FS == 0 && $CONFIG_NCPFS_NLS != 1 && $CONFIG_SMB_NLS != 1 && $CONFIG_JFS_FS == 0 && $CONFIG_BEFS_FS == 0 && $CONFIG_HFSPLUS_FS == 0)} then {	global CONSTANT_N
set CONFIG_NLS $CONSTANT_N }
}


proc menu71 {w title} {
	set oldFocus [focus]
	catch {focus .menu70}
	catch {destroy $w; unregister_active 71}
	toplevel $w -class Dialog
	wm withdraw $w
	global active_menus
	set active_menus [lsort -integer [linsert $active_menus end 71]]
	message $w.m -width 400 -aspect 300 -text \
		"Network File Systems"  -relief raised
	pack $w.m -pady 10 -side top -padx 10
	wm title $w "Network File Systems" 

	bind $w <Escape> "catch {focus $oldFocus}; destroy $w; unregister_active 71; break"
	set nextscript "catch {focus $oldFocus}; destroy $w; unregister_active 71; menu72 .menu72 \"$title\""
	frame $w.f
	button $w.f.back -text "OK" \
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 71"
	button $w.f.next -text "Next" -underline 0\
		-width 15 -command $nextscript
	bind all <Alt-n> $nextscript
	button $w.f.prev -text "Prev" -underline 0\
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 71; menu70 .menu70 \"$title\""
	bind $w <Alt-p> "catch {focus $oldFocus}; destroy $w; unregister_active 71; menu70 .menu70 \"$title\";break"
	pack $w.f.back $w.f.next $w.f.prev -side left -expand on
	pack $w.f -pady 10 -side bottom -anchor w -fill x
	frame $w.topline -relief ridge -borderwidth 2 -height 2
	pack $w.topline -side top -fill x

	frame $w.botline -relief ridge -borderwidth 2 -height 2
	pack $w.botline -side bottom -fill x

	frame $w.config
	pack $w.config -fill y -expand on

	scrollbar $w.config.vscroll -command "$w.config.canvas yview"
	pack $w.config.vscroll -side right -fill y

	canvas $w.config.canvas -height 1\
		-relief flat -borderwidth 0 -yscrollcommand "$w.config.vscroll set" \
		-width [expr [winfo screenwidth .] * 1 / 2] 
	frame $w.config.f
	bind $w <Key-Down> "$w.config.canvas yview scroll  1 unit;break;"
	bind $w <Key-Up> "$w.config.canvas yview scroll  -1 unit;break;"
	bind $w <Key-Next> "$w.config.canvas yview scroll  1 page;break;"
	bind $w <Key-Prior> "$w.config.canvas yview scroll  -1 page;break;"
	bind $w <Key-Home> "$w.config.canvas yview moveto 0;break;"
	bind $w <Key-End> "$w.config.canvas yview moveto 1 ;break;"
	pack $w.config.canvas -side right -fill y


	dep_tristate $w.config.f 71 0 "Coda file system support (advanced network fs)" CONFIG_CODA_FS
	dep_tristate $w.config.f 71 1 "InterMezzo file system support (replicating fs) (EXPERIMENTAL)" CONFIG_INTERMEZZO_FS
	dep_tristate $w.config.f 71 2 "NFS file system support" CONFIG_NFS_FS
	dep_bool $w.config.f 71 3 "  Provide NFSv3 client support" CONFIG_NFS_V3
	dep_bool $w.config.f 71 4 "  Allow direct I/O on NFS files (EXPERIMENTAL)" CONFIG_NFS_DIRECTIO
	dep_bool $w.config.f 71 5 "  Root file system on NFS" CONFIG_ROOT_NFS
	dep_tristate $w.config.f 71 6 "NFS server support" CONFIG_NFSD
	dep_bool $w.config.f 71 7 "  Provide NFSv3 server support" CONFIG_NFSD_V3
	dep_bool $w.config.f 71 8 "  Provide NFS server over TCP support (EXPERIMENTAL)" CONFIG_NFSD_TCP
	dep_tristate $w.config.f 71 9 "SMB file system support (to mount Windows shares etc.)" CONFIG_SMB_FS
	bool $w.config.f 71 10 "  Use a default NLS" CONFIG_SMB_NLS_DEFAULT
	istring $w.config.f 71 11 "    Default Remote NLS Option" CONFIG_SMB_NLS_REMOTE
	tristate $w.config.f 71 12 "NCP file system support (to mount NetWare volumes)" CONFIG_NCP_FS
	dep_bool $w.config.f 71 13 "  Packet signatures" CONFIG_NCPFS_PACKET_SIGNING
	dep_bool $w.config.f 71 14 "  Proprietary file locking" CONFIG_NCPFS_IOCTL_LOCKING
	dep_bool $w.config.f 71 15 "  Clear remove/delete inhibit when needed" CONFIG_NCPFS_STRONG
	dep_bool $w.config.f 71 16 "  Use NFS namespace if available" CONFIG_NCPFS_NFS_NS
	dep_bool $w.config.f 71 17 "  Use LONG (OS/2) namespace if available" CONFIG_NCPFS_OS2_NS
	dep_bool $w.config.f 71 18 "  Lowercase DOS filenames" CONFIG_NCPFS_SMALLDOS
	dep_bool $w.config.f 71 19 "  Use Native Language Support" CONFIG_NCPFS_NLS
	dep_bool $w.config.f 71 20 "  Enable symbolic links and execute flags" CONFIG_NCPFS_EXTRAS



	focus $w
	update_active
	global winx; global winy
	if {[winfo exists .menu70] == 0} then {menu70 .menu70 "File systems"}
	set winx [expr [winfo x .menu70]+30]; set winy [expr [winfo y .menu70]+30]
	if {[winfo exists $w]} then {wm geometry $w +$winx+$winy}
	update idletasks
	if {[winfo exists $w]} then  {$w.config.canvas create window 0 0 -anchor nw -window $w.config.f

	$w.config.canvas configure \
		-width [expr [winfo reqwidth $w.config.f] + 1]\
		-scrollregion "-1 -1 [expr [winfo reqwidth $w.config.f] + 1] \
			 [expr [winfo reqheight $w.config.f] + 1]"

	set winy [expr [winfo reqh $w] - [winfo reqh $w.config.canvas]]
	set scry [expr [winfo screenh $w] / 2]
	set maxy [expr [winfo screenh $w] * 3 / 4]
	set canvtotal [expr [winfo reqh $w.config.f] + 2]
	if [expr $winy + $canvtotal < $maxy] {
		$w.config.canvas configure -height $canvtotal
	} else {
		$w.config.canvas configure -height [expr $scry - $winy]
		}
	}
	update idletasks
	if {[winfo exists $w]} then {
	wm maxsize $w [winfo width $w] [winfo screenheight $w]
	wm minsize $w [winfo width $w] 100

	wm deiconify $w
}
}

proc update_menu71 {} {
	global CONFIG_MODULES
	global CONFIG_NET
	global CONFIG_INET
	global CONFIG_CODA_FS
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1 || $CONFIG_INET == 2 || $CONFIG_INET == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_INET]];set CONFIG_CODA_FS [sync_tristate $CONFIG_CODA_FS $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu71.config.f.x0 disabled {y}} else {configure_entry .menu71.config.f.x0 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu71.config.f.x0 disabled {m}} else {configure_entry .menu71.config.f.x0 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu71.config.f.x0 normal {m}} else {configure_entry .menu71.config.f.x0 disabled {m}}; configure_entry .menu71.config.f.x0 normal {n l}} else {configure_entry .menu71.config.f.x0 disabled {y n m l}}
	global CONFIG_EXPERIMENTAL
	global CONFIG_INTERMEZZO_FS
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1 || $CONFIG_INET == 2 || $CONFIG_INET == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_INET $CONFIG_EXPERIMENTAL]];set CONFIG_INTERMEZZO_FS [sync_tristate $CONFIG_INTERMEZZO_FS $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu71.config.f.x1 disabled {y}} else {configure_entry .menu71.config.f.x1 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu71.config.f.x1 disabled {m}} else {configure_entry .menu71.config.f.x1 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu71.config.f.x1 normal {m}} else {configure_entry .menu71.config.f.x1 disabled {m}}; configure_entry .menu71.config.f.x1 normal {n l}} else {configure_entry .menu71.config.f.x1 disabled {y n m l}}
	global CONFIG_NFS_FS
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1 || $CONFIG_INET == 2 || $CONFIG_INET == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_INET]];set CONFIG_NFS_FS [sync_tristate $CONFIG_NFS_FS $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu71.config.f.x2 disabled {y}} else {configure_entry .menu71.config.f.x2 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu71.config.f.x2 disabled {m}} else {configure_entry .menu71.config.f.x2 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu71.config.f.x2 normal {m}} else {configure_entry .menu71.config.f.x2 disabled {m}}; configure_entry .menu71.config.f.x2 normal {n l}} else {configure_entry .menu71.config.f.x2 disabled {y n m l}}
	global CONFIG_NFS_V3
	if {($CONFIG_NET == 1) && ($CONFIG_NFS_FS == 1 || $CONFIG_NFS_FS == 2 || $CONFIG_NFS_FS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_NFS_FS]];set CONFIG_NFS_V3 [sync_bool $CONFIG_NFS_V3 $tmpvar_dep 1];if {$tmpvar_dep != 1 && $tmpvar_dep != 2} then {configure_entry .menu71.config.f.x3 disabled {y};} else {configure_entry .menu71.config.f.x3 normal {y};}; configure_entry .menu71.config.f.x3 normal {n l}} else {configure_entry .menu71.config.f.x3 disabled {y n l}}
	global CONFIG_NFS_DIRECTIO
	if {($CONFIG_NET == 1) && ($CONFIG_NFS_FS == 1 || $CONFIG_NFS_FS == 2 || $CONFIG_NFS_FS == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_NFS_FS $CONFIG_EXPERIMENTAL]];set CONFIG_NFS_DIRECTIO [sync_bool $CONFIG_NFS_DIRECTIO $tmpvar_dep 1];if {$tmpvar_dep != 1 && $tmpvar_dep != 2} then {configure_entry .menu71.config.f.x4 disabled {y};} else {configure_entry .menu71.config.f.x4 normal {y};}; configure_entry .menu71.config.f.x4 normal {n l}} else {configure_entry .menu71.config.f.x4 disabled {y n l}}
	global CONFIG_IP_PNP
	global CONFIG_ROOT_NFS
	if {($CONFIG_NET == 1) && ($CONFIG_NFS_FS == 1 || $CONFIG_NFS_FS == 4) && ($CONFIG_IP_PNP == 1 || $CONFIG_IP_PNP == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_NFS_FS $CONFIG_IP_PNP]];set CONFIG_ROOT_NFS [sync_bool $CONFIG_ROOT_NFS $tmpvar_dep 0];if {$tmpvar_dep != 1} then {configure_entry .menu71.config.f.x5 disabled {y};} else {configure_entry .menu71.config.f.x5 normal {y};}; configure_entry .menu71.config.f.x5 normal {n l}} else {configure_entry .menu71.config.f.x5 disabled {y n l}}
	global CONFIG_NFSD
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1 || $CONFIG_INET == 2 || $CONFIG_INET == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_INET]];set CONFIG_NFSD [sync_tristate $CONFIG_NFSD $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu71.config.f.x6 disabled {y}} else {configure_entry .menu71.config.f.x6 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu71.config.f.x6 disabled {m}} else {configure_entry .menu71.config.f.x6 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu71.config.f.x6 normal {m}} else {configure_entry .menu71.config.f.x6 disabled {m}}; configure_entry .menu71.config.f.x6 normal {n l}} else {configure_entry .menu71.config.f.x6 disabled {y n m l}}
	global CONFIG_NFSD_V3
	if {($CONFIG_NET == 1) && ($CONFIG_NFSD == 1 || $CONFIG_NFSD == 2 || $CONFIG_NFSD == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_NFSD]];set CONFIG_NFSD_V3 [sync_bool $CONFIG_NFSD_V3 $tmpvar_dep 1];if {$tmpvar_dep != 1 && $tmpvar_dep != 2} then {configure_entry .menu71.config.f.x7 disabled {y};} else {configure_entry .menu71.config.f.x7 normal {y};}; configure_entry .menu71.config.f.x7 normal {n l}} else {configure_entry .menu71.config.f.x7 disabled {y n l}}
	global CONFIG_NFSD_TCP
	if {($CONFIG_NET == 1) && ($CONFIG_NFSD == 1 || $CONFIG_NFSD == 2 || $CONFIG_NFSD == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_NFSD $CONFIG_EXPERIMENTAL]];set CONFIG_NFSD_TCP [sync_bool $CONFIG_NFSD_TCP $tmpvar_dep 1];if {$tmpvar_dep != 1 && $tmpvar_dep != 2} then {configure_entry .menu71.config.f.x8 disabled {y};} else {configure_entry .menu71.config.f.x8 normal {y};}; configure_entry .menu71.config.f.x8 normal {n l}} else {configure_entry .menu71.config.f.x8 disabled {y n l}}
	global CONFIG_SMB_FS
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1 || $CONFIG_INET == 2 || $CONFIG_INET == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_INET]];set CONFIG_SMB_FS [sync_tristate $CONFIG_SMB_FS $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu71.config.f.x9 disabled {y}} else {configure_entry .menu71.config.f.x9 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu71.config.f.x9 disabled {m}} else {configure_entry .menu71.config.f.x9 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu71.config.f.x9 normal {m}} else {configure_entry .menu71.config.f.x9 disabled {m}}; configure_entry .menu71.config.f.x9 normal {n l}} else {configure_entry .menu71.config.f.x9 disabled {y n m l}}
	global CONFIG_SMB_NLS_DEFAULT
	if {($CONFIG_NET == 1) && ($CONFIG_SMB_FS != 0)} then {
	configure_entry .menu71.config.f.x10 normal {n l y}} else {configure_entry .menu71.config.f.x10 disabled {y n l}}
	global CONFIG_SMB_NLS_REMOTE
	if {($CONFIG_NET == 1) && ($CONFIG_SMB_FS != 0) && ($CONFIG_SMB_NLS_DEFAULT == 1)} then {.menu71.config.f.x11.x configure -state normal -foreground [ cget .ref -foreground ]; .menu71.config.f.x11.l configure -state normal; } else {.menu71.config.f.x11.x configure -state disabled -foreground [ cget .ref -disabledforeground ]; .menu71.config.f.x11.l configure -state disabled}
	global CONFIG_IPX
	global CONFIG_NCP_FS
	if {($CONFIG_NET == 1) && ($CONFIG_IPX != 0 || $CONFIG_INET != 0)} then {
	configure_entry .menu71.config.f.x12 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu71.config.f.x12 normal {m}} else {configure_entry .menu71.config.f.x12 disabled {m}}; configure_entry .menu71.config.f.x12 normal {n l}} else {configure_entry .menu71.config.f.x12 disabled {y n m l}}
	global CONFIG_NCPFS_PACKET_SIGNING
	if {($CONFIG_NET == 1) && ($CONFIG_IPX != 0 || $CONFIG_INET != 0) && ($CONFIG_NCP_FS == 1 || $CONFIG_NCP_FS == 2 || $CONFIG_NCP_FS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_NCP_FS]];set CONFIG_NCPFS_PACKET_SIGNING [sync_bool $CONFIG_NCPFS_PACKET_SIGNING $tmpvar_dep 1];if {$tmpvar_dep != 1 && $tmpvar_dep != 2} then {configure_entry .menu71.config.f.x13 disabled {y};} else {configure_entry .menu71.config.f.x13 normal {y};}; configure_entry .menu71.config.f.x13 normal {n l}} else {configure_entry .menu71.config.f.x13 disabled {y n l}}
	global CONFIG_NCPFS_IOCTL_LOCKING
	if {($CONFIG_NET == 1) && ($CONFIG_IPX != 0 || $CONFIG_INET != 0) && ($CONFIG_NCP_FS == 1 || $CONFIG_NCP_FS == 2 || $CONFIG_NCP_FS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_NCP_FS]];set CONFIG_NCPFS_IOCTL_LOCKING [sync_bool $CONFIG_NCPFS_IOCTL_LOCKING $tmpvar_dep 1];if {$tmpvar_dep != 1 && $tmpvar_dep != 2} then {configure_entry .menu71.config.f.x14 disabled {y};} else {configure_entry .menu71.config.f.x14 normal {y};}; configure_entry .menu71.config.f.x14 normal {n l}} else {configure_entry .menu71.config.f.x14 disabled {y n l}}
	global CONFIG_NCPFS_STRONG
	if {($CONFIG_NET == 1) && ($CONFIG_IPX != 0 || $CONFIG_INET != 0) && ($CONFIG_NCP_FS == 1 || $CONFIG_NCP_FS == 2 || $CONFIG_NCP_FS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_NCP_FS]];set CONFIG_NCPFS_STRONG [sync_bool $CONFIG_NCPFS_STRONG $tmpvar_dep 1];if {$tmpvar_dep != 1 && $tmpvar_dep != 2} then {configure_entry .menu71.config.f.x15 disabled {y};} else {configure_entry .menu71.config.f.x15 normal {y};}; configure_entry .menu71.config.f.x15 normal {n l}} else {configure_entry .menu71.config.f.x15 disabled {y n l}}
	global CONFIG_NCPFS_NFS_NS
	if {($CONFIG_NET == 1) && ($CONFIG_IPX != 0 || $CONFIG_INET != 0) && ($CONFIG_NCP_FS == 1 || $CONFIG_NCP_FS == 2 || $CONFIG_NCP_FS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_NCP_FS]];set CONFIG_NCPFS_NFS_NS [sync_bool $CONFIG_NCPFS_NFS_NS $tmpvar_dep 1];if {$tmpvar_dep != 1 && $tmpvar_dep != 2} then {configure_entry .menu71.config.f.x16 disabled {y};} else {configure_entry .menu71.config.f.x16 normal {y};}; configure_entry .menu71.config.f.x16 normal {n l}} else {configure_entry .menu71.config.f.x16 disabled {y n l}}
	global CONFIG_NCPFS_OS2_NS
	if {($CONFIG_NET == 1) && ($CONFIG_IPX != 0 || $CONFIG_INET != 0) && ($CONFIG_NCP_FS == 1 || $CONFIG_NCP_FS == 2 || $CONFIG_NCP_FS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_NCP_FS]];set CONFIG_NCPFS_OS2_NS [sync_bool $CONFIG_NCPFS_OS2_NS $tmpvar_dep 1];if {$tmpvar_dep != 1 && $tmpvar_dep != 2} then {configure_entry .menu71.config.f.x17 disabled {y};} else {configure_entry .menu71.config.f.x17 normal {y};}; configure_entry .menu71.config.f.x17 normal {n l}} else {configure_entry .menu71.config.f.x17 disabled {y n l}}
	global CONFIG_NCPFS_SMALLDOS
	if {($CONFIG_NET == 1) && ($CONFIG_IPX != 0 || $CONFIG_INET != 0) && ($CONFIG_NCP_FS == 1 || $CONFIG_NCP_FS == 2 || $CONFIG_NCP_FS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_NCP_FS]];set CONFIG_NCPFS_SMALLDOS [sync_bool $CONFIG_NCPFS_SMALLDOS $tmpvar_dep 1];if {$tmpvar_dep != 1 && $tmpvar_dep != 2} then {configure_entry .menu71.config.f.x18 disabled {y};} else {configure_entry .menu71.config.f.x18 normal {y};}; configure_entry .menu71.config.f.x18 normal {n l}} else {configure_entry .menu71.config.f.x18 disabled {y n l}}
	global CONFIG_NCPFS_NLS
	if {($CONFIG_NET == 1) && ($CONFIG_IPX != 0 || $CONFIG_INET != 0) && ($CONFIG_NCP_FS == 1 || $CONFIG_NCP_FS == 2 || $CONFIG_NCP_FS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_NCP_FS]];set CONFIG_NCPFS_NLS [sync_bool $CONFIG_NCPFS_NLS $tmpvar_dep 1];if {$tmpvar_dep != 1 && $tmpvar_dep != 2} then {configure_entry .menu71.config.f.x19 disabled {y};} else {configure_entry .menu71.config.f.x19 normal {y};}; configure_entry .menu71.config.f.x19 normal {n l}} else {configure_entry .menu71.config.f.x19 disabled {y n l}}
	global CONFIG_NCPFS_EXTRAS
	if {($CONFIG_NET == 1) && ($CONFIG_IPX != 0 || $CONFIG_INET != 0) && ($CONFIG_NCP_FS == 1 || $CONFIG_NCP_FS == 2 || $CONFIG_NCP_FS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_NCP_FS]];set CONFIG_NCPFS_EXTRAS [sync_bool $CONFIG_NCPFS_EXTRAS $tmpvar_dep 1];if {$tmpvar_dep != 1 && $tmpvar_dep != 2} then {configure_entry .menu71.config.f.x20 disabled {y};} else {configure_entry .menu71.config.f.x20 normal {y};}; configure_entry .menu71.config.f.x20 normal {n l}} else {configure_entry .menu71.config.f.x20 disabled {y n l}}
}


proc update_define_menu71 {} {
	update_define_mainmenu
	global CONFIG_MODULES
	global CONFIG_SUNRPC
	global CONFIG_LOCKD
	global CONFIG_LOCKD_V4
	global CONFIG_NCP_FS
	global CONFIG_NCPFS_NLS
	global CONFIG_SMB_NLS_DEFAULT
set CONFIG_SMB_NLS_DEFAULT [expr $CONFIG_SMB_NLS_DEFAULT|16]
set CONFIG_NCP_FS [expr $CONFIG_NCP_FS|16]
	global CONFIG_NET
	global CONFIG_INET
	global CONFIG_CODA_FS
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1 || $CONFIG_INET == 2 || $CONFIG_INET == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_INET]]; set CONFIG_CODA_FS [sync_tristate $CONFIG_CODA_FS $tmpvar_dep]; set CONFIG_CODA_FS [expr $CONFIG_CODA_FS&15]}
	global CONFIG_EXPERIMENTAL
	global CONFIG_INTERMEZZO_FS
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1 || $CONFIG_INET == 2 || $CONFIG_INET == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_INET $CONFIG_EXPERIMENTAL]]; set CONFIG_INTERMEZZO_FS [sync_tristate $CONFIG_INTERMEZZO_FS $tmpvar_dep]; set CONFIG_INTERMEZZO_FS [expr $CONFIG_INTERMEZZO_FS&15]}
	global CONFIG_NFS_FS
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1 || $CONFIG_INET == 2 || $CONFIG_INET == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_INET]]; set CONFIG_NFS_FS [sync_tristate $CONFIG_NFS_FS $tmpvar_dep]; set CONFIG_NFS_FS [expr $CONFIG_NFS_FS&15]}
	global CONFIG_NFS_V3
	if {($CONFIG_NET == 1) && ($CONFIG_NFS_FS == 1 || $CONFIG_NFS_FS == 2 || $CONFIG_NFS_FS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_NFS_FS]];set CONFIG_NFS_V3 [sync_bool $CONFIG_NFS_V3 $tmpvar_dep 1];set CONFIG_NFS_V3 [expr $CONFIG_NFS_V3&15]}
	global CONFIG_NFS_DIRECTIO
	if {($CONFIG_NET == 1) && ($CONFIG_NFS_FS == 1 || $CONFIG_NFS_FS == 2 || $CONFIG_NFS_FS == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_NFS_FS $CONFIG_EXPERIMENTAL]];set CONFIG_NFS_DIRECTIO [sync_bool $CONFIG_NFS_DIRECTIO $tmpvar_dep 1];set CONFIG_NFS_DIRECTIO [expr $CONFIG_NFS_DIRECTIO&15]}
	global CONFIG_IP_PNP
	global CONFIG_ROOT_NFS
	if {($CONFIG_NET == 1) && ($CONFIG_NFS_FS == 1 || $CONFIG_NFS_FS == 4) && ($CONFIG_IP_PNP == 1 || $CONFIG_IP_PNP == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_NFS_FS $CONFIG_IP_PNP]];set CONFIG_ROOT_NFS [sync_bool $CONFIG_ROOT_NFS $tmpvar_dep 0];set CONFIG_ROOT_NFS [expr $CONFIG_ROOT_NFS&15]}
	global CONFIG_NFSD
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1 || $CONFIG_INET == 2 || $CONFIG_INET == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_INET]]; set CONFIG_NFSD [sync_tristate $CONFIG_NFSD $tmpvar_dep]; set CONFIG_NFSD [expr $CONFIG_NFSD&15]}
	global CONFIG_NFSD_V3
	if {($CONFIG_NET == 1) && ($CONFIG_NFSD == 1 || $CONFIG_NFSD == 2 || $CONFIG_NFSD == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_NFSD]];set CONFIG_NFSD_V3 [sync_bool $CONFIG_NFSD_V3 $tmpvar_dep 1];set CONFIG_NFSD_V3 [expr $CONFIG_NFSD_V3&15]}
	global CONFIG_NFSD_TCP
	if {($CONFIG_NET == 1) && ($CONFIG_NFSD == 1 || $CONFIG_NFSD == 2 || $CONFIG_NFSD == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_NFSD $CONFIG_EXPERIMENTAL]];set CONFIG_NFSD_TCP [sync_bool $CONFIG_NFSD_TCP $tmpvar_dep 1];set CONFIG_NFSD_TCP [expr $CONFIG_NFSD_TCP&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_NFS_FS == 1 || $CONFIG_NFSD == 1)} then {	global CONSTANT_Y
set CONFIG_SUNRPC $CONSTANT_Y }
	if {($CONFIG_NET == 1) && ($CONFIG_NFS_FS == 1 || $CONFIG_NFSD == 1)} then {	global CONSTANT_Y
set CONFIG_LOCKD $CONSTANT_Y }
	if {($CONFIG_NET == 1) && ($CONFIG_NFS_FS != 1 && $CONFIG_NFSD != 1) && ($CONFIG_NFS_FS == 2 || $CONFIG_NFSD == 2)} then {	global CONSTANT_M
set CONFIG_SUNRPC $CONSTANT_M }
	if {($CONFIG_NET == 1) && ($CONFIG_NFS_FS != 1 && $CONFIG_NFSD != 1) && ($CONFIG_NFS_FS == 2 || $CONFIG_NFSD == 2)} then {	global CONSTANT_M
set CONFIG_LOCKD $CONSTANT_M }
	if {($CONFIG_NET == 1) && ($CONFIG_NFS_FS != 1 && $CONFIG_NFSD != 1) && ($CONFIG_NFS_FS != 2 && $CONFIG_NFSD != 2)} then {	global CONSTANT_N
set CONFIG_SUNRPC $CONSTANT_N }
	if {($CONFIG_NET == 1) && ($CONFIG_NFS_FS != 1 && $CONFIG_NFSD != 1) && ($CONFIG_NFS_FS != 2 && $CONFIG_NFSD != 2)} then {	global CONSTANT_N
set CONFIG_LOCKD $CONSTANT_N }
	if {($CONFIG_NET == 1) && ($CONFIG_NFSD_V3 == 1 || $CONFIG_NFS_V3 == 1)} then {	global CONSTANT_Y
set CONFIG_LOCKD_V4 $CONSTANT_Y }
	global CONFIG_SMB_FS
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1 || $CONFIG_INET == 2 || $CONFIG_INET == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_INET]]; set CONFIG_SMB_FS [sync_tristate $CONFIG_SMB_FS $tmpvar_dep]; set CONFIG_SMB_FS [expr $CONFIG_SMB_FS&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_SMB_FS != 0)} then {
	set CONFIG_SMB_NLS_DEFAULT [expr $CONFIG_SMB_NLS_DEFAULT&15]}
	global CONFIG_IPX
	if {($CONFIG_NET == 1) && ($CONFIG_IPX != 0 || $CONFIG_INET != 0)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_NCP_FS == 2)} then {set CONFIG_NCP_FS 1}; set CONFIG_NCP_FS [expr $CONFIG_NCP_FS&15]}
	global CONFIG_NCPFS_PACKET_SIGNING
	if {($CONFIG_NET == 1) && ($CONFIG_IPX != 0 || $CONFIG_INET != 0) && ($CONFIG_NCP_FS == 1 || $CONFIG_NCP_FS == 2 || $CONFIG_NCP_FS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_NCP_FS]];set CONFIG_NCPFS_PACKET_SIGNING [sync_bool $CONFIG_NCPFS_PACKET_SIGNING $tmpvar_dep 1];set CONFIG_NCPFS_PACKET_SIGNING [expr $CONFIG_NCPFS_PACKET_SIGNING&15]}
	global CONFIG_NCPFS_IOCTL_LOCKING
	if {($CONFIG_NET == 1) && ($CONFIG_IPX != 0 || $CONFIG_INET != 0) && ($CONFIG_NCP_FS == 1 || $CONFIG_NCP_FS == 2 || $CONFIG_NCP_FS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_NCP_FS]];set CONFIG_NCPFS_IOCTL_LOCKING [sync_bool $CONFIG_NCPFS_IOCTL_LOCKING $tmpvar_dep 1];set CONFIG_NCPFS_IOCTL_LOCKING [expr $CONFIG_NCPFS_IOCTL_LOCKING&15]}
	global CONFIG_NCPFS_STRONG
	if {($CONFIG_NET == 1) && ($CONFIG_IPX != 0 || $CONFIG_INET != 0) && ($CONFIG_NCP_FS == 1 || $CONFIG_NCP_FS == 2 || $CONFIG_NCP_FS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_NCP_FS]];set CONFIG_NCPFS_STRONG [sync_bool $CONFIG_NCPFS_STRONG $tmpvar_dep 1];set CONFIG_NCPFS_STRONG [expr $CONFIG_NCPFS_STRONG&15]}
	global CONFIG_NCPFS_NFS_NS
	if {($CONFIG_NET == 1) && ($CONFIG_IPX != 0 || $CONFIG_INET != 0) && ($CONFIG_NCP_FS == 1 || $CONFIG_NCP_FS == 2 || $CONFIG_NCP_FS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_NCP_FS]];set CONFIG_NCPFS_NFS_NS [sync_bool $CONFIG_NCPFS_NFS_NS $tmpvar_dep 1];set CONFIG_NCPFS_NFS_NS [expr $CONFIG_NCPFS_NFS_NS&15]}
	global CONFIG_NCPFS_OS2_NS
	if {($CONFIG_NET == 1) && ($CONFIG_IPX != 0 || $CONFIG_INET != 0) && ($CONFIG_NCP_FS == 1 || $CONFIG_NCP_FS == 2 || $CONFIG_NCP_FS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_NCP_FS]];set CONFIG_NCPFS_OS2_NS [sync_bool $CONFIG_NCPFS_OS2_NS $tmpvar_dep 1];set CONFIG_NCPFS_OS2_NS [expr $CONFIG_NCPFS_OS2_NS&15]}
	global CONFIG_NCPFS_SMALLDOS
	if {($CONFIG_NET == 1) && ($CONFIG_IPX != 0 || $CONFIG_INET != 0) && ($CONFIG_NCP_FS == 1 || $CONFIG_NCP_FS == 2 || $CONFIG_NCP_FS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_NCP_FS]];set CONFIG_NCPFS_SMALLDOS [sync_bool $CONFIG_NCPFS_SMALLDOS $tmpvar_dep 1];set CONFIG_NCPFS_SMALLDOS [expr $CONFIG_NCPFS_SMALLDOS&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_IPX != 0 || $CONFIG_INET != 0) && ($CONFIG_NCP_FS == 1 || $CONFIG_NCP_FS == 2 || $CONFIG_NCP_FS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_NCP_FS]];set CONFIG_NCPFS_NLS [sync_bool $CONFIG_NCPFS_NLS $tmpvar_dep 1];set CONFIG_NCPFS_NLS [expr $CONFIG_NCPFS_NLS&15]}
	global CONFIG_NCPFS_EXTRAS
	if {($CONFIG_NET == 1) && ($CONFIG_IPX != 0 || $CONFIG_INET != 0) && ($CONFIG_NCP_FS == 1 || $CONFIG_NCP_FS == 2 || $CONFIG_NCP_FS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_NCP_FS]];set CONFIG_NCPFS_EXTRAS [sync_bool $CONFIG_NCPFS_EXTRAS $tmpvar_dep 1];set CONFIG_NCPFS_EXTRAS [expr $CONFIG_NCPFS_EXTRAS&15]}
	if {($CONFIG_NET == 1) && ($CONFIG_IPX == 0 && $CONFIG_INET == 0)} then {	global CONSTANT_N
set CONFIG_NCPFS_NLS $CONSTANT_N }
}


proc menu72 {w title} {
	set oldFocus [focus]
	catch {focus .menu70}
	catch {destroy $w; unregister_active 72}
	toplevel $w -class Dialog
	wm withdraw $w
	global active_menus
	set active_menus [lsort -integer [linsert $active_menus end 72]]
	message $w.m -width 400 -aspect 300 -text \
		"Partition Types"  -relief raised
	pack $w.m -pady 10 -side top -padx 10
	wm title $w "Partition Types" 

	bind $w <Escape> "catch {focus $oldFocus}; destroy $w; unregister_active 72; break"
	set nextscript "catch {focus $oldFocus}; destroy $w; unregister_active 72; menu73 .menu73 \"$title\""
	frame $w.f
	button $w.f.back -text "OK" \
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 72"
	button $w.f.next -text "Next" -underline 0\
		-width 15 -command $nextscript
	bind all <Alt-n> $nextscript
	button $w.f.prev -text "Prev" -underline 0\
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 72; menu71 .menu71 \"$title\""
	bind $w <Alt-p> "catch {focus $oldFocus}; destroy $w; unregister_active 72; menu71 .menu71 \"$title\";break"
	pack $w.f.back $w.f.next $w.f.prev -side left -expand on
	pack $w.f -pady 10 -side bottom -anchor w -fill x
	frame $w.topline -relief ridge -borderwidth 2 -height 2
	pack $w.topline -side top -fill x

	frame $w.botline -relief ridge -borderwidth 2 -height 2
	pack $w.botline -side bottom -fill x

	frame $w.config
	pack $w.config -fill y -expand on

	scrollbar $w.config.vscroll -command "$w.config.canvas yview"
	pack $w.config.vscroll -side right -fill y

	canvas $w.config.canvas -height 1\
		-relief flat -borderwidth 0 -yscrollcommand "$w.config.vscroll set" \
		-width [expr [winfo screenwidth .] * 1 / 2] 
	frame $w.config.f
	bind $w <Key-Down> "$w.config.canvas yview scroll  1 unit;break;"
	bind $w <Key-Up> "$w.config.canvas yview scroll  -1 unit;break;"
	bind $w <Key-Next> "$w.config.canvas yview scroll  1 page;break;"
	bind $w <Key-Prior> "$w.config.canvas yview scroll  -1 page;break;"
	bind $w <Key-Home> "$w.config.canvas yview moveto 0;break;"
	bind $w <Key-End> "$w.config.canvas yview moveto 1 ;break;"
	pack $w.config.canvas -side right -fill y


	bool $w.config.f 72 0 "Advanced partition selection" CONFIG_PARTITION_ADVANCED
	bool $w.config.f 72 1 "  Acorn partition support" CONFIG_ACORN_PARTITION
	bool $w.config.f 72 2 "    ICS partition support" CONFIG_ACORN_PARTITION_ICS
	bool $w.config.f 72 3 "    Native filecore partition support" CONFIG_ACORN_PARTITION_ADFS
	bool $w.config.f 72 4 "    PowerTec partition support" CONFIG_ACORN_PARTITION_POWERTEC
	bool $w.config.f 72 5 "    RISCiX partition support" CONFIG_ACORN_PARTITION_RISCIX
	bool $w.config.f 72 6 "  Alpha OSF partition support" CONFIG_OSF_PARTITION
	bool $w.config.f 72 7 "  Amiga partition table support" CONFIG_AMIGA_PARTITION
	bool $w.config.f 72 8 "  Atari partition table support" CONFIG_ATARI_PARTITION
	bool $w.config.f 72 9 "  Macintosh partition map support" CONFIG_MAC_PARTITION
	bool $w.config.f 72 10 "  PC BIOS (MSDOS partition tables) support" CONFIG_MSDOS_PARTITION
	bool $w.config.f 72 11 "    BSD disklabel (FreeBSD partition tables) support" CONFIG_BSD_DISKLABEL
	bool $w.config.f 72 12 "    Minix subpartition support" CONFIG_MINIX_SUBPARTITION
	bool $w.config.f 72 13 "    Solaris (x86) partition table support" CONFIG_SOLARIS_X86_PARTITION
	bool $w.config.f 72 14 "    Unixware slices support" CONFIG_UNIXWARE_DISKLABEL
	dep_bool $w.config.f 72 15 "  Windows Logical Disk Manager (Dynamic Disk) support (EXPERIMENTAL)" CONFIG_LDM_PARTITION
	bool $w.config.f 72 16 "    Windows LDM extra logging" CONFIG_LDM_DEBUG
	bool $w.config.f 72 17 "  SGI partition support" CONFIG_SGI_PARTITION
	bool $w.config.f 72 18 "  Ultrix partition table support" CONFIG_ULTRIX_PARTITION
	bool $w.config.f 72 19 "  Sun partition tables support" CONFIG_SUN_PARTITION
	bool $w.config.f 72 20 "  EFI GUID Partition support" CONFIG_EFI_PARTITION



	focus $w
	update_active
	global winx; global winy
	if {[winfo exists .menu70] == 0} then {menu70 .menu70 "File systems"}
	set winx [expr [winfo x .menu70]+30]; set winy [expr [winfo y .menu70]+30]
	if {[winfo exists $w]} then {wm geometry $w +$winx+$winy}
	update idletasks
	if {[winfo exists $w]} then  {$w.config.canvas create window 0 0 -anchor nw -window $w.config.f

	$w.config.canvas configure \
		-width [expr [winfo reqwidth $w.config.f] + 1]\
		-scrollregion "-1 -1 [expr [winfo reqwidth $w.config.f] + 1] \
			 [expr [winfo reqheight $w.config.f] + 1]"

	set winy [expr [winfo reqh $w] - [winfo reqh $w.config.canvas]]
	set scry [expr [winfo screenh $w] / 2]
	set maxy [expr [winfo screenh $w] * 3 / 4]
	set canvtotal [expr [winfo reqh $w.config.f] + 2]
	if [expr $winy + $canvtotal < $maxy] {
		$w.config.canvas configure -height $canvtotal
	} else {
		$w.config.canvas configure -height [expr $scry - $winy]
		}
	}
	update idletasks
	if {[winfo exists $w]} then {
	wm maxsize $w [winfo width $w] [winfo screenheight $w]
	wm minsize $w [winfo width $w] 100

	wm deiconify $w
}
}

proc update_menu72 {} {
	global CONFIG_PARTITION_ADVANCED
	global CONFIG_ACORN_PARTITION
	if {($CONFIG_PARTITION_ADVANCED == 1)} then {
	configure_entry .menu72.config.f.x1 normal {n l y}} else {configure_entry .menu72.config.f.x1 disabled {y n l}}
	global CONFIG_ACORN_PARTITION_ICS
	if {($CONFIG_PARTITION_ADVANCED == 1) && ($CONFIG_ACORN_PARTITION != 0)} then {
	configure_entry .menu72.config.f.x2 normal {n l y}} else {configure_entry .menu72.config.f.x2 disabled {y n l}}
	global CONFIG_ACORN_PARTITION_ADFS
	if {($CONFIG_PARTITION_ADVANCED == 1) && ($CONFIG_ACORN_PARTITION != 0)} then {
	configure_entry .menu72.config.f.x3 normal {n l y}} else {configure_entry .menu72.config.f.x3 disabled {y n l}}
	global CONFIG_ACORN_PARTITION_POWERTEC
	if {($CONFIG_PARTITION_ADVANCED == 1) && ($CONFIG_ACORN_PARTITION != 0)} then {
	configure_entry .menu72.config.f.x4 normal {n l y}} else {configure_entry .menu72.config.f.x4 disabled {y n l}}
	global CONFIG_ACORN_PARTITION_RISCIX
	if {($CONFIG_PARTITION_ADVANCED == 1) && ($CONFIG_ACORN_PARTITION != 0)} then {
	configure_entry .menu72.config.f.x5 normal {n l y}} else {configure_entry .menu72.config.f.x5 disabled {y n l}}
	global CONFIG_OSF_PARTITION
	if {($CONFIG_PARTITION_ADVANCED == 1)} then {
	configure_entry .menu72.config.f.x6 normal {n l y}} else {configure_entry .menu72.config.f.x6 disabled {y n l}}
	global CONFIG_AMIGA_PARTITION
	if {($CONFIG_PARTITION_ADVANCED == 1)} then {
	configure_entry .menu72.config.f.x7 normal {n l y}} else {configure_entry .menu72.config.f.x7 disabled {y n l}}
	global CONFIG_ATARI_PARTITION
	if {($CONFIG_PARTITION_ADVANCED == 1)} then {
	configure_entry .menu72.config.f.x8 normal {n l y}} else {configure_entry .menu72.config.f.x8 disabled {y n l}}
	global CONFIG_MAC_PARTITION
	if {($CONFIG_PARTITION_ADVANCED == 1)} then {
	configure_entry .menu72.config.f.x9 normal {n l y}} else {configure_entry .menu72.config.f.x9 disabled {y n l}}
	global CONFIG_MSDOS_PARTITION
	if {($CONFIG_PARTITION_ADVANCED == 1)} then {
	configure_entry .menu72.config.f.x10 normal {n l y}} else {configure_entry .menu72.config.f.x10 disabled {y n l}}
	global CONFIG_BSD_DISKLABEL
	if {($CONFIG_PARTITION_ADVANCED == 1) && ($CONFIG_MSDOS_PARTITION == 1)} then {
	configure_entry .menu72.config.f.x11 normal {n l y}} else {configure_entry .menu72.config.f.x11 disabled {y n l}}
	global CONFIG_MINIX_SUBPARTITION
	if {($CONFIG_PARTITION_ADVANCED == 1) && ($CONFIG_MSDOS_PARTITION == 1)} then {
	configure_entry .menu72.config.f.x12 normal {n l y}} else {configure_entry .menu72.config.f.x12 disabled {y n l}}
	global CONFIG_SOLARIS_X86_PARTITION
	if {($CONFIG_PARTITION_ADVANCED == 1) && ($CONFIG_MSDOS_PARTITION == 1)} then {
	configure_entry .menu72.config.f.x13 normal {n l y}} else {configure_entry .menu72.config.f.x13 disabled {y n l}}
	global CONFIG_UNIXWARE_DISKLABEL
	if {($CONFIG_PARTITION_ADVANCED == 1) && ($CONFIG_MSDOS_PARTITION == 1)} then {
	configure_entry .menu72.config.f.x14 normal {n l y}} else {configure_entry .menu72.config.f.x14 disabled {y n l}}
	global CONFIG_EXPERIMENTAL
	global CONFIG_LDM_PARTITION
	if {($CONFIG_PARTITION_ADVANCED == 1) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_EXPERIMENTAL]];set CONFIG_LDM_PARTITION [sync_bool $CONFIG_LDM_PARTITION $tmpvar_dep 0];if {$tmpvar_dep != 1} then {configure_entry .menu72.config.f.x15 disabled {y};} else {configure_entry .menu72.config.f.x15 normal {y};}; configure_entry .menu72.config.f.x15 normal {n l}} else {configure_entry .menu72.config.f.x15 disabled {y n l}}
	global CONFIG_LDM_DEBUG
	if {($CONFIG_PARTITION_ADVANCED == 1) && ($CONFIG_LDM_PARTITION == 1)} then {
	configure_entry .menu72.config.f.x16 normal {n l y}} else {configure_entry .menu72.config.f.x16 disabled {y n l}}
	global CONFIG_SGI_PARTITION
	if {($CONFIG_PARTITION_ADVANCED == 1)} then {
	configure_entry .menu72.config.f.x17 normal {n l y}} else {configure_entry .menu72.config.f.x17 disabled {y n l}}
	global CONFIG_ULTRIX_PARTITION
	if {($CONFIG_PARTITION_ADVANCED == 1)} then {
	configure_entry .menu72.config.f.x18 normal {n l y}} else {configure_entry .menu72.config.f.x18 disabled {y n l}}
	global CONFIG_SUN_PARTITION
	if {($CONFIG_PARTITION_ADVANCED == 1)} then {
	configure_entry .menu72.config.f.x19 normal {n l y}} else {configure_entry .menu72.config.f.x19 disabled {y n l}}
	global CONFIG_EFI_PARTITION
	if {($CONFIG_PARTITION_ADVANCED == 1)} then {
	configure_entry .menu72.config.f.x20 normal {n l y}} else {configure_entry .menu72.config.f.x20 disabled {y n l}}
}


proc update_define_menu72 {} {
	update_define_mainmenu
	global CONFIG_MODULES
	global CONFIG_MSDOS_PARTITION
	global CONFIG_AMIGA_PARTITION
	global CONFIG_ACORN_PARTITION
	global CONFIG_ACORN_PARTITION_ADFS
	global CONFIG_ACORN_PARTITION_ICS
	global CONFIG_ACORN_PARTITION_POWERTEC
	global CONFIG_ACORN_PARTITION_RISCIX
set CONFIG_ACORN_PARTITION [expr $CONFIG_ACORN_PARTITION|16]
set CONFIG_ACORN_PARTITION_ICS [expr $CONFIG_ACORN_PARTITION_ICS|16]
set CONFIG_ACORN_PARTITION_ADFS [expr $CONFIG_ACORN_PARTITION_ADFS|16]
set CONFIG_ACORN_PARTITION_POWERTEC [expr $CONFIG_ACORN_PARTITION_POWERTEC|16]
set CONFIG_ACORN_PARTITION_RISCIX [expr $CONFIG_ACORN_PARTITION_RISCIX|16]
	global CONFIG_OSF_PARTITION
set CONFIG_OSF_PARTITION [expr $CONFIG_OSF_PARTITION|16]
set CONFIG_AMIGA_PARTITION [expr $CONFIG_AMIGA_PARTITION|16]
	global CONFIG_ATARI_PARTITION
set CONFIG_ATARI_PARTITION [expr $CONFIG_ATARI_PARTITION|16]
	global CONFIG_MAC_PARTITION
set CONFIG_MAC_PARTITION [expr $CONFIG_MAC_PARTITION|16]
set CONFIG_MSDOS_PARTITION [expr $CONFIG_MSDOS_PARTITION|16]
	global CONFIG_BSD_DISKLABEL
set CONFIG_BSD_DISKLABEL [expr $CONFIG_BSD_DISKLABEL|16]
	global CONFIG_MINIX_SUBPARTITION
set CONFIG_MINIX_SUBPARTITION [expr $CONFIG_MINIX_SUBPARTITION|16]
	global CONFIG_SOLARIS_X86_PARTITION
set CONFIG_SOLARIS_X86_PARTITION [expr $CONFIG_SOLARIS_X86_PARTITION|16]
	global CONFIG_UNIXWARE_DISKLABEL
set CONFIG_UNIXWARE_DISKLABEL [expr $CONFIG_UNIXWARE_DISKLABEL|16]
	global CONFIG_LDM_DEBUG
set CONFIG_LDM_DEBUG [expr $CONFIG_LDM_DEBUG|16]
	global CONFIG_SGI_PARTITION
set CONFIG_SGI_PARTITION [expr $CONFIG_SGI_PARTITION|16]
	global CONFIG_ULTRIX_PARTITION
set CONFIG_ULTRIX_PARTITION [expr $CONFIG_ULTRIX_PARTITION|16]
	global CONFIG_SUN_PARTITION
set CONFIG_SUN_PARTITION [expr $CONFIG_SUN_PARTITION|16]
	global CONFIG_EFI_PARTITION
set CONFIG_EFI_PARTITION [expr $CONFIG_EFI_PARTITION|16]
	global CONFIG_PARTITION_ADVANCED
	if {($CONFIG_PARTITION_ADVANCED == 1)} then {
	set CONFIG_ACORN_PARTITION [expr $CONFIG_ACORN_PARTITION&15]}
	if {($CONFIG_PARTITION_ADVANCED == 1) && ($CONFIG_ACORN_PARTITION != 0)} then {
	set CONFIG_ACORN_PARTITION_ICS [expr $CONFIG_ACORN_PARTITION_ICS&15]}
	if {($CONFIG_PARTITION_ADVANCED == 1) && ($CONFIG_ACORN_PARTITION != 0)} then {
	set CONFIG_ACORN_PARTITION_ADFS [expr $CONFIG_ACORN_PARTITION_ADFS&15]}
	if {($CONFIG_PARTITION_ADVANCED == 1) && ($CONFIG_ACORN_PARTITION != 0)} then {
	set CONFIG_ACORN_PARTITION_POWERTEC [expr $CONFIG_ACORN_PARTITION_POWERTEC&15]}
	if {($CONFIG_PARTITION_ADVANCED == 1) && ($CONFIG_ACORN_PARTITION != 0)} then {
	set CONFIG_ACORN_PARTITION_RISCIX [expr $CONFIG_ACORN_PARTITION_RISCIX&15]}
	if {($CONFIG_PARTITION_ADVANCED == 1)} then {
	set CONFIG_OSF_PARTITION [expr $CONFIG_OSF_PARTITION&15]}
	if {($CONFIG_PARTITION_ADVANCED == 1)} then {
	set CONFIG_AMIGA_PARTITION [expr $CONFIG_AMIGA_PARTITION&15]}
	if {($CONFIG_PARTITION_ADVANCED == 1)} then {
	set CONFIG_ATARI_PARTITION [expr $CONFIG_ATARI_PARTITION&15]}
	if {($CONFIG_PARTITION_ADVANCED == 1)} then {
	set CONFIG_MAC_PARTITION [expr $CONFIG_MAC_PARTITION&15]}
	if {($CONFIG_PARTITION_ADVANCED == 1)} then {
	set CONFIG_MSDOS_PARTITION [expr $CONFIG_MSDOS_PARTITION&15]}
	if {($CONFIG_PARTITION_ADVANCED == 1) && ($CONFIG_MSDOS_PARTITION == 1)} then {
	set CONFIG_BSD_DISKLABEL [expr $CONFIG_BSD_DISKLABEL&15]}
	if {($CONFIG_PARTITION_ADVANCED == 1) && ($CONFIG_MSDOS_PARTITION == 1)} then {
	set CONFIG_MINIX_SUBPARTITION [expr $CONFIG_MINIX_SUBPARTITION&15]}
	if {($CONFIG_PARTITION_ADVANCED == 1) && ($CONFIG_MSDOS_PARTITION == 1)} then {
	set CONFIG_SOLARIS_X86_PARTITION [expr $CONFIG_SOLARIS_X86_PARTITION&15]}
	if {($CONFIG_PARTITION_ADVANCED == 1) && ($CONFIG_MSDOS_PARTITION == 1)} then {
	set CONFIG_UNIXWARE_DISKLABEL [expr $CONFIG_UNIXWARE_DISKLABEL&15]}
	global CONFIG_EXPERIMENTAL
	global CONFIG_LDM_PARTITION
	if {($CONFIG_PARTITION_ADVANCED == 1) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_EXPERIMENTAL]];set CONFIG_LDM_PARTITION [sync_bool $CONFIG_LDM_PARTITION $tmpvar_dep 0];set CONFIG_LDM_PARTITION [expr $CONFIG_LDM_PARTITION&15]}
	if {($CONFIG_PARTITION_ADVANCED == 1) && ($CONFIG_LDM_PARTITION == 1)} then {
	set CONFIG_LDM_DEBUG [expr $CONFIG_LDM_DEBUG&15]}
	if {($CONFIG_PARTITION_ADVANCED == 1)} then {
	set CONFIG_SGI_PARTITION [expr $CONFIG_SGI_PARTITION&15]}
	if {($CONFIG_PARTITION_ADVANCED == 1)} then {
	set CONFIG_ULTRIX_PARTITION [expr $CONFIG_ULTRIX_PARTITION&15]}
	if {($CONFIG_PARTITION_ADVANCED == 1)} then {
	set CONFIG_SUN_PARTITION [expr $CONFIG_SUN_PARTITION&15]}
	if {($CONFIG_PARTITION_ADVANCED == 1)} then {
	set CONFIG_EFI_PARTITION [expr $CONFIG_EFI_PARTITION&15]}
	global CONFIG_AMIGA
	global CONFIG_ATARI
	global CONFIG_MAC
	global CONFIG_SGI_IP22
	global CONFIG_UCLINUX
	global CONFIG_SH_SNAPGEAR
	global CONFIG_SGI_IP27
	if {($CONFIG_PARTITION_ADVANCED != 1) && ($CONFIG_AMIGA != 1 && $CONFIG_ATARI != 1 && $CONFIG_MAC != 1 && $CONFIG_SGI_IP22 != 1 && $CONFIG_UCLINUX != 1 && $CONFIG_SH_SNAPGEAR != 1 && $CONFIG_SGI_IP27 != 1)} then {	global CONSTANT_Y
set CONFIG_MSDOS_PARTITION $CONSTANT_Y }
	global CONFIG_AFFS_FS
	if {($CONFIG_PARTITION_ADVANCED != 1) && ($CONFIG_AFFS_FS == 1)} then {	global CONSTANT_Y
set CONFIG_AMIGA_PARTITION $CONSTANT_Y }
	global CONFIG_ARCH_ACORN
	if {($CONFIG_PARTITION_ADVANCED != 1) && ($CONFIG_ARCH_ACORN == 1)} then {	global CONSTANT_Y
set CONFIG_ACORN_PARTITION $CONSTANT_Y }
	if {($CONFIG_PARTITION_ADVANCED != 1) && ($CONFIG_ARCH_ACORN == 1)} then {	global CONSTANT_Y
set CONFIG_ACORN_PARTITION_ADFS $CONSTANT_Y }
	if {($CONFIG_PARTITION_ADVANCED != 1) && ($CONFIG_ARCH_ACORN == 1)} then {	global CONSTANT_Y
set CONFIG_ACORN_PARTITION_ICS $CONSTANT_Y }
	if {($CONFIG_PARTITION_ADVANCED != 1) && ($CONFIG_ARCH_ACORN == 1)} then {	global CONSTANT_Y
set CONFIG_ACORN_PARTITION_POWERTEC $CONSTANT_Y }
	if {($CONFIG_PARTITION_ADVANCED != 1) && ($CONFIG_ARCH_ACORN == 1)} then {	global CONSTANT_Y
set CONFIG_ACORN_PARTITION_RISCIX $CONSTANT_Y }
}


proc menu73 {w title} {
	set oldFocus [focus]
	catch {focus .menu70}
	catch {destroy $w; unregister_active 73}
	toplevel $w -class Dialog
	wm withdraw $w
	global active_menus
	set active_menus [lsort -integer [linsert $active_menus end 73]]
	message $w.m -width 400 -aspect 300 -text \
		"Native Language Support"  -relief raised
	pack $w.m -pady 10 -side top -padx 10
	wm title $w "Native Language Support" 

	bind $w <Escape> "catch {focus $oldFocus}; destroy $w; unregister_active 73; break"
	set nextscript "catch {focus $oldFocus}; destroy $w; unregister_active 73; catch {destroy .menu70}; unregister_active 70; menu74 .menu74 \"$title\""
	frame $w.f
	button $w.f.back -text "OK" \
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 73"
	button $w.f.next -text "Next" -underline 0\
		-width 15 -command $nextscript
	bind all <Alt-n> $nextscript
	button $w.f.prev -text "Prev" -underline 0\
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 73; menu72 .menu72 \"$title\""
	bind $w <Alt-p> "catch {focus $oldFocus}; destroy $w; unregister_active 73; menu72 .menu72 \"$title\";break"
	pack $w.f.back $w.f.next $w.f.prev -side left -expand on
	pack $w.f -pady 10 -side bottom -anchor w -fill x
	frame $w.topline -relief ridge -borderwidth 2 -height 2
	pack $w.topline -side top -fill x

	frame $w.botline -relief ridge -borderwidth 2 -height 2
	pack $w.botline -side bottom -fill x

	frame $w.config
	pack $w.config -fill y -expand on

	scrollbar $w.config.vscroll -command "$w.config.canvas yview"
	pack $w.config.vscroll -side right -fill y

	canvas $w.config.canvas -height 1\
		-relief flat -borderwidth 0 -yscrollcommand "$w.config.vscroll set" \
		-width [expr [winfo screenwidth .] * 1 / 2] 
	frame $w.config.f
	bind $w <Key-Down> "$w.config.canvas yview scroll  1 unit;break;"
	bind $w <Key-Up> "$w.config.canvas yview scroll  -1 unit;break;"
	bind $w <Key-Next> "$w.config.canvas yview scroll  1 page;break;"
	bind $w <Key-Prior> "$w.config.canvas yview scroll  -1 page;break;"
	bind $w <Key-Home> "$w.config.canvas yview moveto 0;break;"
	bind $w <Key-End> "$w.config.canvas yview moveto 1 ;break;"
	pack $w.config.canvas -side right -fill y


	istring $w.config.f 73 0 "Default NLS Option" CONFIG_NLS_DEFAULT
	tristate $w.config.f 73 1 "Codepage 437 (United States, Canada)" CONFIG_NLS_CODEPAGE_437
	tristate $w.config.f 73 2 "Codepage 737 (Greek)" CONFIG_NLS_CODEPAGE_737
	tristate $w.config.f 73 3 "Codepage 775 (Baltic Rim)" CONFIG_NLS_CODEPAGE_775
	tristate $w.config.f 73 4 "Codepage 850 (Europe)" CONFIG_NLS_CODEPAGE_850
	tristate $w.config.f 73 5 "Codepage 852 (Central/Eastern Europe)" CONFIG_NLS_CODEPAGE_852
	tristate $w.config.f 73 6 "Codepage 855 (Cyrillic)" CONFIG_NLS_CODEPAGE_855
	tristate $w.config.f 73 7 "Codepage 857 (Turkish)" CONFIG_NLS_CODEPAGE_857
	tristate $w.config.f 73 8 "Codepage 860 (Portuguese)" CONFIG_NLS_CODEPAGE_860
	tristate $w.config.f 73 9 "Codepage 861 (Icelandic)" CONFIG_NLS_CODEPAGE_861
	tristate $w.config.f 73 10 "Codepage 862 (Hebrew)" CONFIG_NLS_CODEPAGE_862
	tristate $w.config.f 73 11 "Codepage 863 (Canadian French)" CONFIG_NLS_CODEPAGE_863
	tristate $w.config.f 73 12 "Codepage 864 (Arabic)" CONFIG_NLS_CODEPAGE_864
	tristate $w.config.f 73 13 "Codepage 865 (Norwegian, Danish)" CONFIG_NLS_CODEPAGE_865
	tristate $w.config.f 73 14 "Codepage 866 (Cyrillic/Russian)" CONFIG_NLS_CODEPAGE_866
	tristate $w.config.f 73 15 "Codepage 869 (Greek)" CONFIG_NLS_CODEPAGE_869
	tristate $w.config.f 73 16 "Simplified Chinese charset (CP936, GB2312)" CONFIG_NLS_CODEPAGE_936
	tristate $w.config.f 73 17 "Traditional Chinese charset (Big5)" CONFIG_NLS_CODEPAGE_950
	tristate $w.config.f 73 18 "Japanese charsets (Shift-JIS, EUC-JP)" CONFIG_NLS_CODEPAGE_932
	tristate $w.config.f 73 19 "Korean charset (CP949, EUC-KR)" CONFIG_NLS_CODEPAGE_949
	tristate $w.config.f 73 20 "Thai charset (CP874, TIS-620)" CONFIG_NLS_CODEPAGE_874
	tristate $w.config.f 73 21 "Hebrew charsets (ISO-8859-8, CP1255)" CONFIG_NLS_ISO8859_8
	tristate $w.config.f 73 22 "Windows CP1250 (Slavic/Central European Languages)" CONFIG_NLS_CODEPAGE_1250
	tristate $w.config.f 73 23 "Windows CP1251 (Bulgarian, Belarusian)" CONFIG_NLS_CODEPAGE_1251
	tristate $w.config.f 73 24 "NLS ISO 8859-1  (Latin 1; Western European Languages)" CONFIG_NLS_ISO8859_1
	tristate $w.config.f 73 25 "NLS ISO 8859-2  (Latin 2; Slavic/Central European Languages)" CONFIG_NLS_ISO8859_2
	tristate $w.config.f 73 26 "NLS ISO 8859-3  (Latin 3; Esperanto, Galician, Maltese, Turkish)" CONFIG_NLS_ISO8859_3
	tristate $w.config.f 73 27 "NLS ISO 8859-4  (Latin 4; old Baltic charset)" CONFIG_NLS_ISO8859_4
	tristate $w.config.f 73 28 "NLS ISO 8859-5  (Cyrillic)" CONFIG_NLS_ISO8859_5
	tristate $w.config.f 73 29 "NLS ISO 8859-6  (Arabic)" CONFIG_NLS_ISO8859_6
	tristate $w.config.f 73 30 "NLS ISO 8859-7  (Modern Greek)" CONFIG_NLS_ISO8859_7
	tristate $w.config.f 73 31 "NLS ISO 8859-9  (Latin 5; Turkish)" CONFIG_NLS_ISO8859_9
	tristate $w.config.f 73 32 "NLS ISO 8859-13 (Latin 7; Baltic)" CONFIG_NLS_ISO8859_13
	tristate $w.config.f 73 33 "NLS ISO 8859-14 (Latin 8; Celtic)" CONFIG_NLS_ISO8859_14
	tristate $w.config.f 73 34 "NLS ISO 8859-15 (Latin 9; Western European Languages with Euro)" CONFIG_NLS_ISO8859_15
	tristate $w.config.f 73 35 "NLS KOI8-R (Russian)" CONFIG_NLS_KOI8_R
	tristate $w.config.f 73 36 "NLS KOI8-U/RU (Ukrainian, Belarusian)" CONFIG_NLS_KOI8_U
	tristate $w.config.f 73 37 "NLS UTF8" CONFIG_NLS_UTF8



	focus $w
	update_active
	global winx; global winy
	if {[winfo exists .menu70] == 0} then {menu70 .menu70 "File systems"}
	set winx [expr [winfo x .menu70]+30]; set winy [expr [winfo y .menu70]+30]
	if {[winfo exists $w]} then {wm geometry $w +$winx+$winy}
	update idletasks
	if {[winfo exists $w]} then  {$w.config.canvas create window 0 0 -anchor nw -window $w.config.f

	$w.config.canvas configure \
		-width [expr [winfo reqwidth $w.config.f] + 1]\
		-scrollregion "-1 -1 [expr [winfo reqwidth $w.config.f] + 1] \
			 [expr [winfo reqheight $w.config.f] + 1]"

	set winy [expr [winfo reqh $w] - [winfo reqh $w.config.canvas]]
	set scry [expr [winfo screenh $w] / 2]
	set maxy [expr [winfo screenh $w] * 3 / 4]
	set canvtotal [expr [winfo reqh $w.config.f] + 2]
	if [expr $winy + $canvtotal < $maxy] {
		$w.config.canvas configure -height $canvtotal
	} else {
		$w.config.canvas configure -height [expr $scry - $winy]
		}
	}
	update idletasks
	if {[winfo exists $w]} then {
	wm maxsize $w [winfo width $w] [winfo screenheight $w]
	wm minsize $w [winfo width $w] 100

	wm deiconify $w
}
}

proc update_menu73 {} {
	global CONFIG_NLS
	global CONFIG_NLS_DEFAULT
	if {($CONFIG_NLS == 1)} then {.menu73.config.f.x0.x configure -state normal -foreground [ cget .ref -foreground ]; .menu73.config.f.x0.l configure -state normal; } else {.menu73.config.f.x0.x configure -state disabled -foreground [ cget .ref -disabledforeground ]; .menu73.config.f.x0.l configure -state disabled}
	global CONFIG_MODULES
	global CONFIG_NLS_CODEPAGE_437
	if {($CONFIG_NLS == 1)} then {
	configure_entry .menu73.config.f.x1 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu73.config.f.x1 normal {m}} else {configure_entry .menu73.config.f.x1 disabled {m}}; configure_entry .menu73.config.f.x1 normal {n l}} else {configure_entry .menu73.config.f.x1 disabled {y n m l}}
	global CONFIG_NLS_CODEPAGE_737
	if {($CONFIG_NLS == 1)} then {
	configure_entry .menu73.config.f.x2 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu73.config.f.x2 normal {m}} else {configure_entry .menu73.config.f.x2 disabled {m}}; configure_entry .menu73.config.f.x2 normal {n l}} else {configure_entry .menu73.config.f.x2 disabled {y n m l}}
	global CONFIG_NLS_CODEPAGE_775
	if {($CONFIG_NLS == 1)} then {
	configure_entry .menu73.config.f.x3 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu73.config.f.x3 normal {m}} else {configure_entry .menu73.config.f.x3 disabled {m}}; configure_entry .menu73.config.f.x3 normal {n l}} else {configure_entry .menu73.config.f.x3 disabled {y n m l}}
	global CONFIG_NLS_CODEPAGE_850
	if {($CONFIG_NLS == 1)} then {
	configure_entry .menu73.config.f.x4 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu73.config.f.x4 normal {m}} else {configure_entry .menu73.config.f.x4 disabled {m}}; configure_entry .menu73.config.f.x4 normal {n l}} else {configure_entry .menu73.config.f.x4 disabled {y n m l}}
	global CONFIG_NLS_CODEPAGE_852
	if {($CONFIG_NLS == 1)} then {
	configure_entry .menu73.config.f.x5 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu73.config.f.x5 normal {m}} else {configure_entry .menu73.config.f.x5 disabled {m}}; configure_entry .menu73.config.f.x5 normal {n l}} else {configure_entry .menu73.config.f.x5 disabled {y n m l}}
	global CONFIG_NLS_CODEPAGE_855
	if {($CONFIG_NLS == 1)} then {
	configure_entry .menu73.config.f.x6 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu73.config.f.x6 normal {m}} else {configure_entry .menu73.config.f.x6 disabled {m}}; configure_entry .menu73.config.f.x6 normal {n l}} else {configure_entry .menu73.config.f.x6 disabled {y n m l}}
	global CONFIG_NLS_CODEPAGE_857
	if {($CONFIG_NLS == 1)} then {
	configure_entry .menu73.config.f.x7 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu73.config.f.x7 normal {m}} else {configure_entry .menu73.config.f.x7 disabled {m}}; configure_entry .menu73.config.f.x7 normal {n l}} else {configure_entry .menu73.config.f.x7 disabled {y n m l}}
	global CONFIG_NLS_CODEPAGE_860
	if {($CONFIG_NLS == 1)} then {
	configure_entry .menu73.config.f.x8 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu73.config.f.x8 normal {m}} else {configure_entry .menu73.config.f.x8 disabled {m}}; configure_entry .menu73.config.f.x8 normal {n l}} else {configure_entry .menu73.config.f.x8 disabled {y n m l}}
	global CONFIG_NLS_CODEPAGE_861
	if {($CONFIG_NLS == 1)} then {
	configure_entry .menu73.config.f.x9 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu73.config.f.x9 normal {m}} else {configure_entry .menu73.config.f.x9 disabled {m}}; configure_entry .menu73.config.f.x9 normal {n l}} else {configure_entry .menu73.config.f.x9 disabled {y n m l}}
	global CONFIG_NLS_CODEPAGE_862
	if {($CONFIG_NLS == 1)} then {
	configure_entry .menu73.config.f.x10 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu73.config.f.x10 normal {m}} else {configure_entry .menu73.config.f.x10 disabled {m}}; configure_entry .menu73.config.f.x10 normal {n l}} else {configure_entry .menu73.config.f.x10 disabled {y n m l}}
	global CONFIG_NLS_CODEPAGE_863
	if {($CONFIG_NLS == 1)} then {
	configure_entry .menu73.config.f.x11 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu73.config.f.x11 normal {m}} else {configure_entry .menu73.config.f.x11 disabled {m}}; configure_entry .menu73.config.f.x11 normal {n l}} else {configure_entry .menu73.config.f.x11 disabled {y n m l}}
	global CONFIG_NLS_CODEPAGE_864
	if {($CONFIG_NLS == 1)} then {
	configure_entry .menu73.config.f.x12 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu73.config.f.x12 normal {m}} else {configure_entry .menu73.config.f.x12 disabled {m}}; configure_entry .menu73.config.f.x12 normal {n l}} else {configure_entry .menu73.config.f.x12 disabled {y n m l}}
	global CONFIG_NLS_CODEPAGE_865
	if {($CONFIG_NLS == 1)} then {
	configure_entry .menu73.config.f.x13 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu73.config.f.x13 normal {m}} else {configure_entry .menu73.config.f.x13 disabled {m}}; configure_entry .menu73.config.f.x13 normal {n l}} else {configure_entry .menu73.config.f.x13 disabled {y n m l}}
	global CONFIG_NLS_CODEPAGE_866
	if {($CONFIG_NLS == 1)} then {
	configure_entry .menu73.config.f.x14 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu73.config.f.x14 normal {m}} else {configure_entry .menu73.config.f.x14 disabled {m}}; configure_entry .menu73.config.f.x14 normal {n l}} else {configure_entry .menu73.config.f.x14 disabled {y n m l}}
	global CONFIG_NLS_CODEPAGE_869
	if {($CONFIG_NLS == 1)} then {
	configure_entry .menu73.config.f.x15 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu73.config.f.x15 normal {m}} else {configure_entry .menu73.config.f.x15 disabled {m}}; configure_entry .menu73.config.f.x15 normal {n l}} else {configure_entry .menu73.config.f.x15 disabled {y n m l}}
	global CONFIG_NLS_CODEPAGE_936
	if {($CONFIG_NLS == 1)} then {
	configure_entry .menu73.config.f.x16 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu73.config.f.x16 normal {m}} else {configure_entry .menu73.config.f.x16 disabled {m}}; configure_entry .menu73.config.f.x16 normal {n l}} else {configure_entry .menu73.config.f.x16 disabled {y n m l}}
	global CONFIG_NLS_CODEPAGE_950
	if {($CONFIG_NLS == 1)} then {
	configure_entry .menu73.config.f.x17 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu73.config.f.x17 normal {m}} else {configure_entry .menu73.config.f.x17 disabled {m}}; configure_entry .menu73.config.f.x17 normal {n l}} else {configure_entry .menu73.config.f.x17 disabled {y n m l}}
	global CONFIG_NLS_CODEPAGE_932
	if {($CONFIG_NLS == 1)} then {
	configure_entry .menu73.config.f.x18 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu73.config.f.x18 normal {m}} else {configure_entry .menu73.config.f.x18 disabled {m}}; configure_entry .menu73.config.f.x18 normal {n l}} else {configure_entry .menu73.config.f.x18 disabled {y n m l}}
	global CONFIG_NLS_CODEPAGE_949
	if {($CONFIG_NLS == 1)} then {
	configure_entry .menu73.config.f.x19 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu73.config.f.x19 normal {m}} else {configure_entry .menu73.config.f.x19 disabled {m}}; configure_entry .menu73.config.f.x19 normal {n l}} else {configure_entry .menu73.config.f.x19 disabled {y n m l}}
	global CONFIG_NLS_CODEPAGE_874
	if {($CONFIG_NLS == 1)} then {
	configure_entry .menu73.config.f.x20 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu73.config.f.x20 normal {m}} else {configure_entry .menu73.config.f.x20 disabled {m}}; configure_entry .menu73.config.f.x20 normal {n l}} else {configure_entry .menu73.config.f.x20 disabled {y n m l}}
	global CONFIG_NLS_ISO8859_8
	if {($CONFIG_NLS == 1)} then {
	configure_entry .menu73.config.f.x21 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu73.config.f.x21 normal {m}} else {configure_entry .menu73.config.f.x21 disabled {m}}; configure_entry .menu73.config.f.x21 normal {n l}} else {configure_entry .menu73.config.f.x21 disabled {y n m l}}
	global CONFIG_NLS_CODEPAGE_1250
	if {($CONFIG_NLS == 1)} then {
	configure_entry .menu73.config.f.x22 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu73.config.f.x22 normal {m}} else {configure_entry .menu73.config.f.x22 disabled {m}}; configure_entry .menu73.config.f.x22 normal {n l}} else {configure_entry .menu73.config.f.x22 disabled {y n m l}}
	global CONFIG_NLS_CODEPAGE_1251
	if {($CONFIG_NLS == 1)} then {
	configure_entry .menu73.config.f.x23 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu73.config.f.x23 normal {m}} else {configure_entry .menu73.config.f.x23 disabled {m}}; configure_entry .menu73.config.f.x23 normal {n l}} else {configure_entry .menu73.config.f.x23 disabled {y n m l}}
	global CONFIG_NLS_ISO8859_1
	if {($CONFIG_NLS == 1)} then {
	configure_entry .menu73.config.f.x24 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu73.config.f.x24 normal {m}} else {configure_entry .menu73.config.f.x24 disabled {m}}; configure_entry .menu73.config.f.x24 normal {n l}} else {configure_entry .menu73.config.f.x24 disabled {y n m l}}
	global CONFIG_NLS_ISO8859_2
	if {($CONFIG_NLS == 1)} then {
	configure_entry .menu73.config.f.x25 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu73.config.f.x25 normal {m}} else {configure_entry .menu73.config.f.x25 disabled {m}}; configure_entry .menu73.config.f.x25 normal {n l}} else {configure_entry .menu73.config.f.x25 disabled {y n m l}}
	global CONFIG_NLS_ISO8859_3
	if {($CONFIG_NLS == 1)} then {
	configure_entry .menu73.config.f.x26 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu73.config.f.x26 normal {m}} else {configure_entry .menu73.config.f.x26 disabled {m}}; configure_entry .menu73.config.f.x26 normal {n l}} else {configure_entry .menu73.config.f.x26 disabled {y n m l}}
	global CONFIG_NLS_ISO8859_4
	if {($CONFIG_NLS == 1)} then {
	configure_entry .menu73.config.f.x27 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu73.config.f.x27 normal {m}} else {configure_entry .menu73.config.f.x27 disabled {m}}; configure_entry .menu73.config.f.x27 normal {n l}} else {configure_entry .menu73.config.f.x27 disabled {y n m l}}
	global CONFIG_NLS_ISO8859_5
	if {($CONFIG_NLS == 1)} then {
	configure_entry .menu73.config.f.x28 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu73.config.f.x28 normal {m}} else {configure_entry .menu73.config.f.x28 disabled {m}}; configure_entry .menu73.config.f.x28 normal {n l}} else {configure_entry .menu73.config.f.x28 disabled {y n m l}}
	global CONFIG_NLS_ISO8859_6
	if {($CONFIG_NLS == 1)} then {
	configure_entry .menu73.config.f.x29 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu73.config.f.x29 normal {m}} else {configure_entry .menu73.config.f.x29 disabled {m}}; configure_entry .menu73.config.f.x29 normal {n l}} else {configure_entry .menu73.config.f.x29 disabled {y n m l}}
	global CONFIG_NLS_ISO8859_7
	if {($CONFIG_NLS == 1)} then {
	configure_entry .menu73.config.f.x30 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu73.config.f.x30 normal {m}} else {configure_entry .menu73.config.f.x30 disabled {m}}; configure_entry .menu73.config.f.x30 normal {n l}} else {configure_entry .menu73.config.f.x30 disabled {y n m l}}
	global CONFIG_NLS_ISO8859_9
	if {($CONFIG_NLS == 1)} then {
	configure_entry .menu73.config.f.x31 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu73.config.f.x31 normal {m}} else {configure_entry .menu73.config.f.x31 disabled {m}}; configure_entry .menu73.config.f.x31 normal {n l}} else {configure_entry .menu73.config.f.x31 disabled {y n m l}}
	global CONFIG_NLS_ISO8859_13
	if {($CONFIG_NLS == 1)} then {
	configure_entry .menu73.config.f.x32 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu73.config.f.x32 normal {m}} else {configure_entry .menu73.config.f.x32 disabled {m}}; configure_entry .menu73.config.f.x32 normal {n l}} else {configure_entry .menu73.config.f.x32 disabled {y n m l}}
	global CONFIG_NLS_ISO8859_14
	if {($CONFIG_NLS == 1)} then {
	configure_entry .menu73.config.f.x33 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu73.config.f.x33 normal {m}} else {configure_entry .menu73.config.f.x33 disabled {m}}; configure_entry .menu73.config.f.x33 normal {n l}} else {configure_entry .menu73.config.f.x33 disabled {y n m l}}
	global CONFIG_NLS_ISO8859_15
	if {($CONFIG_NLS == 1)} then {
	configure_entry .menu73.config.f.x34 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu73.config.f.x34 normal {m}} else {configure_entry .menu73.config.f.x34 disabled {m}}; configure_entry .menu73.config.f.x34 normal {n l}} else {configure_entry .menu73.config.f.x34 disabled {y n m l}}
	global CONFIG_NLS_KOI8_R
	if {($CONFIG_NLS == 1)} then {
	configure_entry .menu73.config.f.x35 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu73.config.f.x35 normal {m}} else {configure_entry .menu73.config.f.x35 disabled {m}}; configure_entry .menu73.config.f.x35 normal {n l}} else {configure_entry .menu73.config.f.x35 disabled {y n m l}}
	global CONFIG_NLS_KOI8_U
	if {($CONFIG_NLS == 1)} then {
	configure_entry .menu73.config.f.x36 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu73.config.f.x36 normal {m}} else {configure_entry .menu73.config.f.x36 disabled {m}}; configure_entry .menu73.config.f.x36 normal {n l}} else {configure_entry .menu73.config.f.x36 disabled {y n m l}}
	global CONFIG_NLS_UTF8
	if {($CONFIG_NLS == 1)} then {
	configure_entry .menu73.config.f.x37 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu73.config.f.x37 normal {m}} else {configure_entry .menu73.config.f.x37 disabled {m}}; configure_entry .menu73.config.f.x37 normal {n l}} else {configure_entry .menu73.config.f.x37 disabled {y n m l}}
}


proc update_define_menu73 {} {
	update_define_mainmenu
	global CONFIG_MODULES
	global CONFIG_NLS_CODEPAGE_437
	global CONFIG_NLS_CODEPAGE_737
	global CONFIG_NLS_CODEPAGE_775
	global CONFIG_NLS_CODEPAGE_850
	global CONFIG_NLS_CODEPAGE_852
	global CONFIG_NLS_CODEPAGE_855
	global CONFIG_NLS_CODEPAGE_857
	global CONFIG_NLS_CODEPAGE_860
	global CONFIG_NLS_CODEPAGE_861
	global CONFIG_NLS_CODEPAGE_862
	global CONFIG_NLS_CODEPAGE_863
	global CONFIG_NLS_CODEPAGE_864
	global CONFIG_NLS_CODEPAGE_865
	global CONFIG_NLS_CODEPAGE_866
	global CONFIG_NLS_CODEPAGE_869
	global CONFIG_NLS_CODEPAGE_936
	global CONFIG_NLS_CODEPAGE_950
	global CONFIG_NLS_CODEPAGE_932
	global CONFIG_NLS_CODEPAGE_949
	global CONFIG_NLS_CODEPAGE_874
	global CONFIG_NLS_ISO8859_8
	global CONFIG_NLS_CODEPAGE_1250
	global CONFIG_NLS_CODEPAGE_1251
	global CONFIG_NLS_ISO8859_1
	global CONFIG_NLS_ISO8859_2
	global CONFIG_NLS_ISO8859_3
	global CONFIG_NLS_ISO8859_4
	global CONFIG_NLS_ISO8859_5
	global CONFIG_NLS_ISO8859_6
	global CONFIG_NLS_ISO8859_7
	global CONFIG_NLS_ISO8859_9
	global CONFIG_NLS_ISO8859_13
	global CONFIG_NLS_ISO8859_14
	global CONFIG_NLS_ISO8859_15
	global CONFIG_NLS_KOI8_R
	global CONFIG_NLS_KOI8_U
	global CONFIG_NLS_UTF8
set CONFIG_NLS_CODEPAGE_437 [expr $CONFIG_NLS_CODEPAGE_437|16]
set CONFIG_NLS_CODEPAGE_737 [expr $CONFIG_NLS_CODEPAGE_737|16]
set CONFIG_NLS_CODEPAGE_775 [expr $CONFIG_NLS_CODEPAGE_775|16]
set CONFIG_NLS_CODEPAGE_850 [expr $CONFIG_NLS_CODEPAGE_850|16]
set CONFIG_NLS_CODEPAGE_852 [expr $CONFIG_NLS_CODEPAGE_852|16]
set CONFIG_NLS_CODEPAGE_855 [expr $CONFIG_NLS_CODEPAGE_855|16]
set CONFIG_NLS_CODEPAGE_857 [expr $CONFIG_NLS_CODEPAGE_857|16]
set CONFIG_NLS_CODEPAGE_860 [expr $CONFIG_NLS_CODEPAGE_860|16]
set CONFIG_NLS_CODEPAGE_861 [expr $CONFIG_NLS_CODEPAGE_861|16]
set CONFIG_NLS_CODEPAGE_862 [expr $CONFIG_NLS_CODEPAGE_862|16]
set CONFIG_NLS_CODEPAGE_863 [expr $CONFIG_NLS_CODEPAGE_863|16]
set CONFIG_NLS_CODEPAGE_864 [expr $CONFIG_NLS_CODEPAGE_864|16]
set CONFIG_NLS_CODEPAGE_865 [expr $CONFIG_NLS_CODEPAGE_865|16]
set CONFIG_NLS_CODEPAGE_866 [expr $CONFIG_NLS_CODEPAGE_866|16]
set CONFIG_NLS_CODEPAGE_869 [expr $CONFIG_NLS_CODEPAGE_869|16]
set CONFIG_NLS_CODEPAGE_936 [expr $CONFIG_NLS_CODEPAGE_936|16]
set CONFIG_NLS_CODEPAGE_950 [expr $CONFIG_NLS_CODEPAGE_950|16]
set CONFIG_NLS_CODEPAGE_932 [expr $CONFIG_NLS_CODEPAGE_932|16]
set CONFIG_NLS_CODEPAGE_949 [expr $CONFIG_NLS_CODEPAGE_949|16]
set CONFIG_NLS_CODEPAGE_874 [expr $CONFIG_NLS_CODEPAGE_874|16]
set CONFIG_NLS_ISO8859_8 [expr $CONFIG_NLS_ISO8859_8|16]
set CONFIG_NLS_CODEPAGE_1250 [expr $CONFIG_NLS_CODEPAGE_1250|16]
set CONFIG_NLS_CODEPAGE_1251 [expr $CONFIG_NLS_CODEPAGE_1251|16]
set CONFIG_NLS_ISO8859_1 [expr $CONFIG_NLS_ISO8859_1|16]
set CONFIG_NLS_ISO8859_2 [expr $CONFIG_NLS_ISO8859_2|16]
set CONFIG_NLS_ISO8859_3 [expr $CONFIG_NLS_ISO8859_3|16]
set CONFIG_NLS_ISO8859_4 [expr $CONFIG_NLS_ISO8859_4|16]
set CONFIG_NLS_ISO8859_5 [expr $CONFIG_NLS_ISO8859_5|16]
set CONFIG_NLS_ISO8859_6 [expr $CONFIG_NLS_ISO8859_6|16]
set CONFIG_NLS_ISO8859_7 [expr $CONFIG_NLS_ISO8859_7|16]
set CONFIG_NLS_ISO8859_9 [expr $CONFIG_NLS_ISO8859_9|16]
set CONFIG_NLS_ISO8859_13 [expr $CONFIG_NLS_ISO8859_13|16]
set CONFIG_NLS_ISO8859_14 [expr $CONFIG_NLS_ISO8859_14|16]
set CONFIG_NLS_ISO8859_15 [expr $CONFIG_NLS_ISO8859_15|16]
set CONFIG_NLS_KOI8_R [expr $CONFIG_NLS_KOI8_R|16]
set CONFIG_NLS_KOI8_U [expr $CONFIG_NLS_KOI8_U|16]
set CONFIG_NLS_UTF8 [expr $CONFIG_NLS_UTF8|16]
	global CONFIG_NLS
	if {($CONFIG_NLS == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_NLS_CODEPAGE_437 == 2)} then {set CONFIG_NLS_CODEPAGE_437 1}; set CONFIG_NLS_CODEPAGE_437 [expr $CONFIG_NLS_CODEPAGE_437&15]}
	if {($CONFIG_NLS == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_NLS_CODEPAGE_737 == 2)} then {set CONFIG_NLS_CODEPAGE_737 1}; set CONFIG_NLS_CODEPAGE_737 [expr $CONFIG_NLS_CODEPAGE_737&15]}
	if {($CONFIG_NLS == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_NLS_CODEPAGE_775 == 2)} then {set CONFIG_NLS_CODEPAGE_775 1}; set CONFIG_NLS_CODEPAGE_775 [expr $CONFIG_NLS_CODEPAGE_775&15]}
	if {($CONFIG_NLS == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_NLS_CODEPAGE_850 == 2)} then {set CONFIG_NLS_CODEPAGE_850 1}; set CONFIG_NLS_CODEPAGE_850 [expr $CONFIG_NLS_CODEPAGE_850&15]}
	if {($CONFIG_NLS == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_NLS_CODEPAGE_852 == 2)} then {set CONFIG_NLS_CODEPAGE_852 1}; set CONFIG_NLS_CODEPAGE_852 [expr $CONFIG_NLS_CODEPAGE_852&15]}
	if {($CONFIG_NLS == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_NLS_CODEPAGE_855 == 2)} then {set CONFIG_NLS_CODEPAGE_855 1}; set CONFIG_NLS_CODEPAGE_855 [expr $CONFIG_NLS_CODEPAGE_855&15]}
	if {($CONFIG_NLS == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_NLS_CODEPAGE_857 == 2)} then {set CONFIG_NLS_CODEPAGE_857 1}; set CONFIG_NLS_CODEPAGE_857 [expr $CONFIG_NLS_CODEPAGE_857&15]}
	if {($CONFIG_NLS == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_NLS_CODEPAGE_860 == 2)} then {set CONFIG_NLS_CODEPAGE_860 1}; set CONFIG_NLS_CODEPAGE_860 [expr $CONFIG_NLS_CODEPAGE_860&15]}
	if {($CONFIG_NLS == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_NLS_CODEPAGE_861 == 2)} then {set CONFIG_NLS_CODEPAGE_861 1}; set CONFIG_NLS_CODEPAGE_861 [expr $CONFIG_NLS_CODEPAGE_861&15]}
	if {($CONFIG_NLS == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_NLS_CODEPAGE_862 == 2)} then {set CONFIG_NLS_CODEPAGE_862 1}; set CONFIG_NLS_CODEPAGE_862 [expr $CONFIG_NLS_CODEPAGE_862&15]}
	if {($CONFIG_NLS == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_NLS_CODEPAGE_863 == 2)} then {set CONFIG_NLS_CODEPAGE_863 1}; set CONFIG_NLS_CODEPAGE_863 [expr $CONFIG_NLS_CODEPAGE_863&15]}
	if {($CONFIG_NLS == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_NLS_CODEPAGE_864 == 2)} then {set CONFIG_NLS_CODEPAGE_864 1}; set CONFIG_NLS_CODEPAGE_864 [expr $CONFIG_NLS_CODEPAGE_864&15]}
	if {($CONFIG_NLS == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_NLS_CODEPAGE_865 == 2)} then {set CONFIG_NLS_CODEPAGE_865 1}; set CONFIG_NLS_CODEPAGE_865 [expr $CONFIG_NLS_CODEPAGE_865&15]}
	if {($CONFIG_NLS == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_NLS_CODEPAGE_866 == 2)} then {set CONFIG_NLS_CODEPAGE_866 1}; set CONFIG_NLS_CODEPAGE_866 [expr $CONFIG_NLS_CODEPAGE_866&15]}
	if {($CONFIG_NLS == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_NLS_CODEPAGE_869 == 2)} then {set CONFIG_NLS_CODEPAGE_869 1}; set CONFIG_NLS_CODEPAGE_869 [expr $CONFIG_NLS_CODEPAGE_869&15]}
	if {($CONFIG_NLS == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_NLS_CODEPAGE_936 == 2)} then {set CONFIG_NLS_CODEPAGE_936 1}; set CONFIG_NLS_CODEPAGE_936 [expr $CONFIG_NLS_CODEPAGE_936&15]}
	if {($CONFIG_NLS == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_NLS_CODEPAGE_950 == 2)} then {set CONFIG_NLS_CODEPAGE_950 1}; set CONFIG_NLS_CODEPAGE_950 [expr $CONFIG_NLS_CODEPAGE_950&15]}
	if {($CONFIG_NLS == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_NLS_CODEPAGE_932 == 2)} then {set CONFIG_NLS_CODEPAGE_932 1}; set CONFIG_NLS_CODEPAGE_932 [expr $CONFIG_NLS_CODEPAGE_932&15]}
	if {($CONFIG_NLS == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_NLS_CODEPAGE_949 == 2)} then {set CONFIG_NLS_CODEPAGE_949 1}; set CONFIG_NLS_CODEPAGE_949 [expr $CONFIG_NLS_CODEPAGE_949&15]}
	if {($CONFIG_NLS == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_NLS_CODEPAGE_874 == 2)} then {set CONFIG_NLS_CODEPAGE_874 1}; set CONFIG_NLS_CODEPAGE_874 [expr $CONFIG_NLS_CODEPAGE_874&15]}
	if {($CONFIG_NLS == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_NLS_ISO8859_8 == 2)} then {set CONFIG_NLS_ISO8859_8 1}; set CONFIG_NLS_ISO8859_8 [expr $CONFIG_NLS_ISO8859_8&15]}
	if {($CONFIG_NLS == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_NLS_CODEPAGE_1250 == 2)} then {set CONFIG_NLS_CODEPAGE_1250 1}; set CONFIG_NLS_CODEPAGE_1250 [expr $CONFIG_NLS_CODEPAGE_1250&15]}
	if {($CONFIG_NLS == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_NLS_CODEPAGE_1251 == 2)} then {set CONFIG_NLS_CODEPAGE_1251 1}; set CONFIG_NLS_CODEPAGE_1251 [expr $CONFIG_NLS_CODEPAGE_1251&15]}
	if {($CONFIG_NLS == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_NLS_ISO8859_1 == 2)} then {set CONFIG_NLS_ISO8859_1 1}; set CONFIG_NLS_ISO8859_1 [expr $CONFIG_NLS_ISO8859_1&15]}
	if {($CONFIG_NLS == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_NLS_ISO8859_2 == 2)} then {set CONFIG_NLS_ISO8859_2 1}; set CONFIG_NLS_ISO8859_2 [expr $CONFIG_NLS_ISO8859_2&15]}
	if {($CONFIG_NLS == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_NLS_ISO8859_3 == 2)} then {set CONFIG_NLS_ISO8859_3 1}; set CONFIG_NLS_ISO8859_3 [expr $CONFIG_NLS_ISO8859_3&15]}
	if {($CONFIG_NLS == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_NLS_ISO8859_4 == 2)} then {set CONFIG_NLS_ISO8859_4 1}; set CONFIG_NLS_ISO8859_4 [expr $CONFIG_NLS_ISO8859_4&15]}
	if {($CONFIG_NLS == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_NLS_ISO8859_5 == 2)} then {set CONFIG_NLS_ISO8859_5 1}; set CONFIG_NLS_ISO8859_5 [expr $CONFIG_NLS_ISO8859_5&15]}
	if {($CONFIG_NLS == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_NLS_ISO8859_6 == 2)} then {set CONFIG_NLS_ISO8859_6 1}; set CONFIG_NLS_ISO8859_6 [expr $CONFIG_NLS_ISO8859_6&15]}
	if {($CONFIG_NLS == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_NLS_ISO8859_7 == 2)} then {set CONFIG_NLS_ISO8859_7 1}; set CONFIG_NLS_ISO8859_7 [expr $CONFIG_NLS_ISO8859_7&15]}
	if {($CONFIG_NLS == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_NLS_ISO8859_9 == 2)} then {set CONFIG_NLS_ISO8859_9 1}; set CONFIG_NLS_ISO8859_9 [expr $CONFIG_NLS_ISO8859_9&15]}
	if {($CONFIG_NLS == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_NLS_ISO8859_13 == 2)} then {set CONFIG_NLS_ISO8859_13 1}; set CONFIG_NLS_ISO8859_13 [expr $CONFIG_NLS_ISO8859_13&15]}
	if {($CONFIG_NLS == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_NLS_ISO8859_14 == 2)} then {set CONFIG_NLS_ISO8859_14 1}; set CONFIG_NLS_ISO8859_14 [expr $CONFIG_NLS_ISO8859_14&15]}
	if {($CONFIG_NLS == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_NLS_ISO8859_15 == 2)} then {set CONFIG_NLS_ISO8859_15 1}; set CONFIG_NLS_ISO8859_15 [expr $CONFIG_NLS_ISO8859_15&15]}
	if {($CONFIG_NLS == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_NLS_KOI8_R == 2)} then {set CONFIG_NLS_KOI8_R 1}; set CONFIG_NLS_KOI8_R [expr $CONFIG_NLS_KOI8_R&15]}
	if {($CONFIG_NLS == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_NLS_KOI8_U == 2)} then {set CONFIG_NLS_KOI8_U 1}; set CONFIG_NLS_KOI8_U [expr $CONFIG_NLS_KOI8_U&15]}
	if {($CONFIG_NLS == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_NLS_UTF8 == 2)} then {set CONFIG_NLS_UTF8 1}; set CONFIG_NLS_UTF8 [expr $CONFIG_NLS_UTF8&15]}
}


menu_option menu74 74 "Console drivers"
proc menu74 {w title} {
	set oldFocus [focus]
	catch {destroy $w; unregister_active 74}
	toplevel $w -class Dialog
	wm withdraw $w
	global active_menus
	set active_menus [lsort -integer [linsert $active_menus end 74]]
	message $w.m -width 400 -aspect 300 -text \
		"Console drivers"  -relief raised
	pack $w.m -pady 10 -side top -padx 10
	wm title $w "Console drivers" 

	bind $w <Escape> "catch {focus $oldFocus}; destroy $w; unregister_active 74; break"
	set nextscript "catch {focus $oldFocus}; menu75 .menu75 \"$title\""
	frame $w.f
	button $w.f.back -text "Main Menu" \
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 74"
	button $w.f.next -text "Next" -underline 0\
		-width 15 -command $nextscript
	bind all <Alt-n> $nextscript
	button $w.f.prev -text "Prev" -underline 0\
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 74; menu73 .menu73 \"$title\""
	bind $w <Alt-p> "catch {focus $oldFocus}; destroy $w; unregister_active 74; menu73 .menu73 \"$title\";break"
	pack $w.f.back $w.f.next $w.f.prev -side left -expand on
	pack $w.f -pady 10 -side bottom -anchor w -fill x
	frame $w.topline -relief ridge -borderwidth 2 -height 2
	pack $w.topline -side top -fill x

	frame $w.botline -relief ridge -borderwidth 2 -height 2
	pack $w.botline -side bottom -fill x

	frame $w.config
	pack $w.config -fill y -expand on

	scrollbar $w.config.vscroll -command "$w.config.canvas yview"
	pack $w.config.vscroll -side right -fill y

	canvas $w.config.canvas -height 1\
		-relief flat -borderwidth 0 -yscrollcommand "$w.config.vscroll set" \
		-width [expr [winfo screenwidth .] * 1 / 2] 
	frame $w.config.f
	bind $w <Key-Down> "$w.config.canvas yview scroll  1 unit;break;"
	bind $w <Key-Up> "$w.config.canvas yview scroll  -1 unit;break;"
	bind $w <Key-Next> "$w.config.canvas yview scroll  1 page;break;"
	bind $w <Key-Prior> "$w.config.canvas yview scroll  -1 page;break;"
	bind $w <Key-Home> "$w.config.canvas yview moveto 0;break;"
	bind $w <Key-End> "$w.config.canvas yview moveto 1 ;break;"
	pack $w.config.canvas -side right -fill y


	bool $w.config.f 74 0 "VGA text console" CONFIG_VGA_CONSOLE
	submenu $w.config.f 74 1 "Frame-buffer support" 75



	focus $w
	update_active
	global winx; global winy
	set winx [expr [winfo x .]+30]; set winy [expr [winfo y .]+30]
	if {[winfo exists $w]} then {wm geometry $w +$winx+$winy}
	update idletasks
	if {[winfo exists $w]} then  {$w.config.canvas create window 0 0 -anchor nw -window $w.config.f

	$w.config.canvas configure \
		-width [expr [winfo reqwidth $w.config.f] + 1]\
		-scrollregion "-1 -1 [expr [winfo reqwidth $w.config.f] + 1] \
			 [expr [winfo reqheight $w.config.f] + 1]"

	set winy [expr [winfo reqh $w] - [winfo reqh $w.config.canvas]]
	set scry [expr [winfo screenh $w] / 2]
	set maxy [expr [winfo screenh $w] * 3 / 4]
	set canvtotal [expr [winfo reqh $w.config.f] + 2]
	if [expr $winy + $canvtotal < $maxy] {
		$w.config.canvas configure -height $canvtotal
	} else {
		$w.config.canvas configure -height [expr $scry - $winy]
		}
	}
	update idletasks
	if {[winfo exists $w]} then {
	wm maxsize $w [winfo width $w] [winfo screenheight $w]
	wm minsize $w [winfo width $w] 100

	wm deiconify $w
}
}

proc update_menu74 {} {
	global CONFIG_VT
	global CONFIG_ARCH_ACORN
	global CONFIG_ARCH_EBSA110
	global CONFIG_ARCH_RISCSTATION
	global CONFIG_VGA_CONSOLE
	if {($CONFIG_VT == 1) && ($CONFIG_ARCH_ACORN != 1 && $CONFIG_ARCH_EBSA110 != 1 && $CONFIG_ARCH_RISCSTATION != 1)} then {
	configure_entry .menu74.config.f.x0 normal {n l y}} else {configure_entry .menu74.config.f.x0 disabled {y n l}}
	if {($CONFIG_VT == 1)} then {configure_entry .menu74.config.f.x1 normal {m}} else {configure_entry .menu74.config.f.x1 disabled {m}}
}


proc update_define_menu74 {} {
	update_define_mainmenu
	global CONFIG_MODULES
	global CONFIG_PC_KEYB
	global CONFIG_KMI_KEYB
	global CONFIG_KMI_MOUSE
	global CONFIG_L7200_KEYB
	global CONFIG_PC_KEYMAP
	global CONFIG_VGA_CONSOLE
set CONFIG_VGA_CONSOLE [expr $CONFIG_VGA_CONSOLE|16]
	global CONFIG_VT
	global CONFIG_FOOTBRIDGE_HOST
	global CONFIG_ARCH_CLPS7500
	global CONFIG_ARCH_SHARK
	if {($CONFIG_VT == 1) && ($CONFIG_FOOTBRIDGE_HOST == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_SHARK == 1)} then {	global CONSTANT_Y
set CONFIG_PC_KEYB $CONSTANT_Y }
	global CONFIG_ARCH_INTEGRATOR
	if {($CONFIG_VT == 1) && ($CONFIG_ARCH_INTEGRATOR == 1)} then {	global CONSTANT_Y
set CONFIG_KMI_KEYB $CONSTANT_Y }
	if {($CONFIG_VT == 1) && ($CONFIG_ARCH_INTEGRATOR == 1)} then {	global CONSTANT_Y
set CONFIG_KMI_MOUSE $CONSTANT_Y }
	global CONFIG_ARCH_L7200
	if {($CONFIG_VT == 1) && ($CONFIG_ARCH_L7200 == 1)} then {	global CONSTANT_Y
set CONFIG_L7200_KEYB $CONSTANT_Y }
	global CONFIG_ARCH_SA1100
	global CONFIG_ARCH_TBOX
	global CONFIG_ARCH_P720T
	global CONFIG_ARCH_ANAKIN
	global CONFIG_ARCH_MX1ADS
	if {($CONFIG_VT == 1) && ($CONFIG_FOOTBRIDGE_HOST == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_INTEGRATOR == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_P720T == 1 || $CONFIG_ARCH_ANAKIN == 1 || $CONFIG_ARCH_MX1ADS == 1)} then {	global CONSTANT_Y
set CONFIG_PC_KEYMAP $CONSTANT_Y }
	global CONFIG_ARCH_ACORN
	global CONFIG_ARCH_EBSA110
	global CONFIG_ARCH_RISCSTATION
	if {($CONFIG_VT == 1) && ($CONFIG_ARCH_ACORN != 1 && $CONFIG_ARCH_EBSA110 != 1 && $CONFIG_ARCH_RISCSTATION != 1)} then {
	set CONFIG_VGA_CONSOLE [expr $CONFIG_VGA_CONSOLE&15]}
}


proc menu75 {w title} {
	set oldFocus [focus]
	catch {focus .menu74}
	catch {destroy $w; unregister_active 75}
	toplevel $w -class Dialog
	wm withdraw $w
	global active_menus
	set active_menus [lsort -integer [linsert $active_menus end 75]]
	message $w.m -width 400 -aspect 300 -text \
		"Frame-buffer support"  -relief raised
	pack $w.m -pady 10 -side top -padx 10
	wm title $w "Frame-buffer support" 

	bind $w <Escape> "catch {focus $oldFocus}; destroy $w; unregister_active 75; break"
	set nextscript "catch {focus $oldFocus}; destroy $w; unregister_active 75; catch {destroy .menu74}; unregister_active 74; menu76 .menu76 \"$title\""
	frame $w.f
	button $w.f.back -text "OK" \
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 75"
	button $w.f.next -text "Next" -underline 0\
		-width 15 -command $nextscript
	bind all <Alt-n> $nextscript
	button $w.f.prev -text "Prev" -underline 0\
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 75; menu74 .menu74 \"$title\""
	bind $w <Alt-p> "catch {focus $oldFocus}; destroy $w; unregister_active 75; menu74 .menu74 \"$title\";break"
	pack $w.f.back $w.f.next $w.f.prev -side left -expand on
	pack $w.f -pady 10 -side bottom -anchor w -fill x
	frame $w.topline -relief ridge -borderwidth 2 -height 2
	pack $w.topline -side top -fill x

	frame $w.botline -relief ridge -borderwidth 2 -height 2
	pack $w.botline -side bottom -fill x

	frame $w.config
	pack $w.config -fill y -expand on

	scrollbar $w.config.vscroll -command "$w.config.canvas yview"
	pack $w.config.vscroll -side right -fill y

	canvas $w.config.canvas -height 1\
		-relief flat -borderwidth 0 -yscrollcommand "$w.config.vscroll set" \
		-width [expr [winfo screenwidth .] * 1 / 2] 
	frame $w.config.f
	bind $w <Key-Down> "$w.config.canvas yview scroll  1 unit;break;"
	bind $w <Key-Up> "$w.config.canvas yview scroll  -1 unit;break;"
	bind $w <Key-Next> "$w.config.canvas yview scroll  1 page;break;"
	bind $w <Key-Prior> "$w.config.canvas yview scroll  -1 page;break;"
	bind $w <Key-Home> "$w.config.canvas yview moveto 0;break;"
	bind $w <Key-End> "$w.config.canvas yview moveto 1 ;break;"
	pack $w.config.canvas -side right -fill y


	bool $w.config.f 75 0 "Support for frame buffer devices (EXPERIMENTAL)" CONFIG_FB
	tristate $w.config.f 75 1 "  nVidia Riva support (EXPERIMENTAL)" CONFIG_FB_RIVA
	tristate $w.config.f 75 2 "  Cirrus Logic support (EXPERIMENTAL)" CONFIG_FB_CLGEN
	tristate $w.config.f 75 3 "  Permedia2 support (EXPERIMENTAL)" CONFIG_FB_PM2
	bool $w.config.f 75 4 "    enable FIFO disconnect feature" CONFIG_FB_PM2_FIFO_DISCONNECT
	bool $w.config.f 75 5 "    generic Permedia2 PCI board support" CONFIG_FB_PM2_PCI
	tristate $w.config.f 75 6 "  Permedia3 support (EXPERIMENTAL)" CONFIG_FB_PM3
	bool $w.config.f 75 7 "  Acorn VIDC support" CONFIG_FB_ACORN
	dep_bool $w.config.f 75 8 "  Acorn VIDC support" CONFIG_FB_ACORN
	dep_bool $w.config.f 75 9 "  CLPS711X LCD support" CONFIG_FB_CLPS711X
	dep_tristate $w.config.f 75 10 "  Cyber2000 support" CONFIG_FB_CYBER2000
	dep_bool $w.config.f 75 11 "  SA-1100 LCD support" CONFIG_FB_SA1100
	tristate $w.config.f 75 12 "  Matrox acceleration (EXPERIMENTAL)" CONFIG_FB_MATROX
	bool $w.config.f 75 13 "    Millennium I/II support" CONFIG_FB_MATROX_MILLENIUM
	bool $w.config.f 75 14 "    Mystique support" CONFIG_FB_MATROX_MYSTIQUE
	bool $w.config.f 75 15 "    G100/G200/G400/G450/G550 support" CONFIG_FB_MATROX_G450
	bool $w.config.f 75 16 "    G100/G200/G400 support" CONFIG_FB_MATROX_G100A
	dep_tristate $w.config.f 75 17 "      Matrox I2C support" CONFIG_FB_MATROX_I2C
	dep_tristate $w.config.f 75 18 "      G400 second head support" CONFIG_FB_MATROX_MAVEN
	dep_tristate $w.config.f 75 19 "    Matrox /proc interface" CONFIG_FB_MATROX_PROC
	bool $w.config.f 75 20 "    Multihead support" CONFIG_FB_MATROX_MULTIHEAD
	tristate $w.config.f 75 21 "  ATI Mach64 display support (EXPERIMENTAL)" CONFIG_FB_ATY
	bool $w.config.f 75 22 "    Mach64 GX support (EXPERIMENTAL)" CONFIG_FB_ATY_GX
	bool $w.config.f 75 23 "    Mach64 CT/VT/GT/LT (incl. 3D RAGE) support" CONFIG_FB_ATY_CT
	tristate $w.config.f 75 24 "  ATI Radeon display support (EXPERIMENTAL)" CONFIG_FB_RADEON
	tristate $w.config.f 75 25 "  ATI Rage128 display support (EXPERIMENTAL)" CONFIG_FB_ATY128
	tristate $w.config.f 75 26 "  Intel 830M/845G/852GM/855GM/865G display support (EXPERIMENTAL)" CONFIG_FB_INTEL
	tristate $w.config.f 75 27 "  SIS display support (EXPERIMENTAL)" CONFIG_FB_SIS
	bool $w.config.f 75 28 "    SIS 300 series support" CONFIG_FB_SIS_300
	bool $w.config.f 75 29 "    SIS 315/330 series support" CONFIG_FB_SIS_315
	tristate $w.config.f 75 30 "  NeoMagic display support (EXPERIMENTAL)" CONFIG_FB_NEOMAGIC
	tristate $w.config.f 75 31 "  3Dfx Banshee/Voodoo3 display support (EXPERIMENTAL)" CONFIG_FB_3DFX
	tristate $w.config.f 75 32 "  3Dfx Voodoo Graphics (sst1) support (EXPERIMENTAL)" CONFIG_FB_VOODOO1
	tristate $w.config.f 75 33 "  Trident support (EXPERIMENTAL)" CONFIG_FB_TRIDENT
	tristate $w.config.f 75 34 "  Virtual Frame Buffer support (ONLY FOR TESTING!) (EXPERIMENTAL)" CONFIG_FB_VIRTUAL
	tristate $w.config.f 75 35 "  Virtual Frame Buffer support (small 1KB VRAM) (ONLY FOR TESTING!) (EXPERIMENTAL)" CONFIG_FB_VIRTUAL_SMALL
	bool $w.config.f 75 36 "  Advanced low level driver options" CONFIG_FBCON_ADVANCED
	tristate $w.config.f 75 37 "    Monochrome support" CONFIG_FBCON_MFB
	tristate $w.config.f 75 38 "    2 bpp packed pixels support" CONFIG_FBCON_CFB2
	tristate $w.config.f 75 39 "    4 bpp packed pixels support" CONFIG_FBCON_CFB4
	tristate $w.config.f 75 40 "    8 bpp packed pixels support" CONFIG_FBCON_CFB8
	tristate $w.config.f 75 41 "    16 bpp packed pixels support" CONFIG_FBCON_CFB16
	tristate $w.config.f 75 42 "    24 bpp packed pixels support" CONFIG_FBCON_CFB24
	tristate $w.config.f 75 43 "    32 bpp packed pixels support" CONFIG_FBCON_CFB32
	tristate $w.config.f 75 44 "    Amiga bitplanes support" CONFIG_FBCON_AFB
	tristate $w.config.f 75 45 "    Amiga interleaved bitplanes support" CONFIG_FBCON_ILBM
	tristate $w.config.f 75 46 "    Atari interleaved bitplanes (2 planes) support" CONFIG_FBCON_IPLAN2P2
	tristate $w.config.f 75 47 "    Atari interleaved bitplanes (4 planes) support" CONFIG_FBCON_IPLAN2P4
	tristate $w.config.f 75 48 "    Atari interleaved bitplanes (8 planes) support" CONFIG_FBCON_IPLAN2P8
	tristate $w.config.f 75 49 "    Mac variable bpp packed pixels support" CONFIG_FBCON_MAC
	tristate $w.config.f 75 50 "    VGA 16-color planar support" CONFIG_FBCON_VGA_PLANES
	tristate $w.config.f 75 51 "    VGA characters/attributes support" CONFIG_FBCON_VGA
	tristate $w.config.f 75 52 "    HGA monochrome support (EXPERIMENTAL)" CONFIG_FBCON_HGA
	bool $w.config.f 75 53 "  Support only 8 pixels wide fonts" CONFIG_FBCON_FONTWIDTH8_ONLY
	bool $w.config.f 75 54 "  Select compiled-in fonts" CONFIG_FBCON_FONTS
	bool $w.config.f 75 55 "    VGA 8x8 font" CONFIG_FONT_8x8
	bool $w.config.f 75 56 "    VGA 8x16 font" CONFIG_FONT_8x16
	bool $w.config.f 75 57 "    Sparc console 8x16 font" CONFIG_FONT_SUN8x16
	bool $w.config.f 75 58 "    Sparc console 12x22 font (not supported by all drivers)" CONFIG_FONT_SUN12x22
	bool $w.config.f 75 59 "    Mac console 6x11 font (not supported by all drivers)" CONFIG_FONT_6x11
	bool $w.config.f 75 60 "    Pearl (old m68k) console 8x8 font" CONFIG_FONT_PEARL_8x8
	bool $w.config.f 75 61 "    Acorn console 8x8 font" CONFIG_FONT_ACORN_8x8



	focus $w
	update_active
	global winx; global winy
	if {[winfo exists .menu74] == 0} then {menu74 .menu74 "Console drivers"}
	set winx [expr [winfo x .menu74]+30]; set winy [expr [winfo y .menu74]+30]
	if {[winfo exists $w]} then {wm geometry $w +$winx+$winy}
	update idletasks
	if {[winfo exists $w]} then  {$w.config.canvas create window 0 0 -anchor nw -window $w.config.f

	$w.config.canvas configure \
		-width [expr [winfo reqwidth $w.config.f] + 1]\
		-scrollregion "-1 -1 [expr [winfo reqwidth $w.config.f] + 1] \
			 [expr [winfo reqheight $w.config.f] + 1]"

	set winy [expr [winfo reqh $w] - [winfo reqh $w.config.canvas]]
	set scry [expr [winfo screenh $w] / 2]
	set maxy [expr [winfo screenh $w] * 3 / 4]
	set canvtotal [expr [winfo reqh $w.config.f] + 2]
	if [expr $winy + $canvtotal < $maxy] {
		$w.config.canvas configure -height $canvtotal
	} else {
		$w.config.canvas configure -height [expr $scry - $winy]
		}
	}
	update idletasks
	if {[winfo exists $w]} then {
	wm maxsize $w [winfo width $w] [winfo screenheight $w]
	wm minsize $w [winfo width $w] 100

	wm deiconify $w
}
}

proc update_menu75 {} {
	global CONFIG_VT
	global CONFIG_FB
	if {($CONFIG_VT == 1)} then {
	configure_entry .menu75.config.f.x0 normal {n l y}} else {configure_entry .menu75.config.f.x0 disabled {y n l}}
	global CONFIG_MODULES
	global CONFIG_EXPERIMENTAL
	global CONFIG_PCI
	global CONFIG_FB_RIVA
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_PCI == 1)} then {
	configure_entry .menu75.config.f.x1 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu75.config.f.x1 normal {m}} else {configure_entry .menu75.config.f.x1 disabled {m}}; configure_entry .menu75.config.f.x1 normal {n l}} else {configure_entry .menu75.config.f.x1 disabled {y n m l}}
	global CONFIG_FB_CLGEN
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_PCI == 1)} then {
	configure_entry .menu75.config.f.x2 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu75.config.f.x2 normal {m}} else {configure_entry .menu75.config.f.x2 disabled {m}}; configure_entry .menu75.config.f.x2 normal {n l}} else {configure_entry .menu75.config.f.x2 disabled {y n m l}}
	global CONFIG_FB_PM2
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_PCI == 1)} then {
	configure_entry .menu75.config.f.x3 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu75.config.f.x3 normal {m}} else {configure_entry .menu75.config.f.x3 disabled {m}}; configure_entry .menu75.config.f.x3 normal {n l}} else {configure_entry .menu75.config.f.x3 disabled {y n m l}}
	global CONFIG_FB_PM2_FIFO_DISCONNECT
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_FB_PM2 == 1 || $CONFIG_FB_PM2 == 2) && ($CONFIG_PCI == 1)} then {
	configure_entry .menu75.config.f.x4 normal {n l y}} else {configure_entry .menu75.config.f.x4 disabled {y n l}}
	global CONFIG_FB_PM2_PCI
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_FB_PM2 == 1 || $CONFIG_FB_PM2 == 2) && ($CONFIG_PCI == 1)} then {
	configure_entry .menu75.config.f.x5 normal {n l y}} else {configure_entry .menu75.config.f.x5 disabled {y n l}}
	global CONFIG_FB_PM3
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_PCI == 1)} then {
	configure_entry .menu75.config.f.x6 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu75.config.f.x6 normal {m}} else {configure_entry .menu75.config.f.x6 disabled {m}}; configure_entry .menu75.config.f.x6 normal {n l}} else {configure_entry .menu75.config.f.x6 disabled {y n m l}}
	global CONFIG_ARCH_ACORN
	global CONFIG_FB_ACORN
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_ARCH_ACORN == 1)} then {
	configure_entry .menu75.config.f.x7 normal {n l y}} else {configure_entry .menu75.config.f.x7 disabled {y n l}}
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_ACORN == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ARCH_ACORN]];set CONFIG_FB_ACORN [sync_bool $CONFIG_FB_ACORN $tmpvar_dep 0];if {$tmpvar_dep != 1} then {configure_entry .menu75.config.f.x8 disabled {y};} else {configure_entry .menu75.config.f.x8 normal {y};}; configure_entry .menu75.config.f.x8 normal {n l}} else {configure_entry .menu75.config.f.x8 disabled {y n l}}
	global CONFIG_ARCH_CLPS711X
	global CONFIG_FB_CLPS711X
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_ARCH_CLPS711X == 1 || $CONFIG_ARCH_CLPS711X == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ARCH_CLPS711X]];set CONFIG_FB_CLPS711X [sync_bool $CONFIG_FB_CLPS711X $tmpvar_dep 0];if {$tmpvar_dep != 1} then {configure_entry .menu75.config.f.x9 disabled {y};} else {configure_entry .menu75.config.f.x9 normal {y};}; configure_entry .menu75.config.f.x9 normal {n l}} else {configure_entry .menu75.config.f.x9 disabled {y n l}}
	global CONFIG_FB_CYBER2000
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PCI]];set CONFIG_FB_CYBER2000 [sync_tristate $CONFIG_FB_CYBER2000 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu75.config.f.x10 disabled {y}} else {configure_entry .menu75.config.f.x10 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu75.config.f.x10 disabled {m}} else {configure_entry .menu75.config.f.x10 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu75.config.f.x10 normal {m}} else {configure_entry .menu75.config.f.x10 disabled {m}}; configure_entry .menu75.config.f.x10 normal {n l}} else {configure_entry .menu75.config.f.x10 disabled {y n m l}}
	global CONFIG_ARCH_SA1100
	global CONFIG_FB_SA1100
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_SA1100 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ARCH_SA1100]];set CONFIG_FB_SA1100 [sync_bool $CONFIG_FB_SA1100 $tmpvar_dep 0];if {$tmpvar_dep != 1} then {configure_entry .menu75.config.f.x11 disabled {y};} else {configure_entry .menu75.config.f.x11 normal {y};}; configure_entry .menu75.config.f.x11 normal {n l}} else {configure_entry .menu75.config.f.x11 disabled {y n l}}
	global CONFIG_FB_MATROX
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_PCI != 0)} then {
	configure_entry .menu75.config.f.x12 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu75.config.f.x12 normal {m}} else {configure_entry .menu75.config.f.x12 disabled {m}}; configure_entry .menu75.config.f.x12 normal {n l}} else {configure_entry .menu75.config.f.x12 disabled {y n m l}}
	global CONFIG_FB_MATROX_MILLENIUM
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_PCI != 0) && ($CONFIG_FB_MATROX != 0)} then {
	configure_entry .menu75.config.f.x13 normal {n l y}} else {configure_entry .menu75.config.f.x13 disabled {y n l}}
	global CONFIG_FB_MATROX_MYSTIQUE
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_PCI != 0) && ($CONFIG_FB_MATROX != 0)} then {
	configure_entry .menu75.config.f.x14 normal {n l y}} else {configure_entry .menu75.config.f.x14 disabled {y n l}}
	global CONFIG_FB_MATROX_G450
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_PCI != 0) && ($CONFIG_FB_MATROX != 0)} then {
	configure_entry .menu75.config.f.x15 normal {n l y}} else {configure_entry .menu75.config.f.x15 disabled {y n l}}
	global CONFIG_FB_MATROX_G100A
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_PCI != 0) && ($CONFIG_FB_MATROX != 0) && ($CONFIG_FB_MATROX_G450 == 0)} then {
	configure_entry .menu75.config.f.x16 normal {n l y}} else {configure_entry .menu75.config.f.x16 disabled {y n l}}
	global CONFIG_I2C
	global CONFIG_I2C_ALGOBIT
	global CONFIG_FB_MATROX_I2C
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_PCI != 0) && ($CONFIG_FB_MATROX != 0) && ($CONFIG_I2C != 0) && ($CONFIG_FB_MATROX == 1 || $CONFIG_FB_MATROX == 2 || $CONFIG_FB_MATROX == 4) && ($CONFIG_I2C_ALGOBIT == 1 || $CONFIG_I2C_ALGOBIT == 2 || $CONFIG_I2C_ALGOBIT == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_FB_MATROX $CONFIG_I2C_ALGOBIT]];set CONFIG_FB_MATROX_I2C [sync_tristate $CONFIG_FB_MATROX_I2C $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu75.config.f.x17 disabled {y}} else {configure_entry .menu75.config.f.x17 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu75.config.f.x17 disabled {m}} else {configure_entry .menu75.config.f.x17 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu75.config.f.x17 normal {m}} else {configure_entry .menu75.config.f.x17 disabled {m}}; configure_entry .menu75.config.f.x17 normal {n l}} else {configure_entry .menu75.config.f.x17 disabled {y n m l}}
	global CONFIG_FB_MATROX_G100
	global CONFIG_FB_MATROX_MAVEN
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_PCI != 0) && ($CONFIG_FB_MATROX != 0) && ($CONFIG_I2C != 0) && ($CONFIG_FB_MATROX_G100 == 1) && ($CONFIG_FB_MATROX_I2C == 1 || $CONFIG_FB_MATROX_I2C == 2 || $CONFIG_FB_MATROX_I2C == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_FB_MATROX_I2C]];set CONFIG_FB_MATROX_MAVEN [sync_tristate $CONFIG_FB_MATROX_MAVEN $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu75.config.f.x18 disabled {y}} else {configure_entry .menu75.config.f.x18 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu75.config.f.x18 disabled {m}} else {configure_entry .menu75.config.f.x18 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu75.config.f.x18 normal {m}} else {configure_entry .menu75.config.f.x18 disabled {m}}; configure_entry .menu75.config.f.x18 normal {n l}} else {configure_entry .menu75.config.f.x18 disabled {y n m l}}
	global CONFIG_FB_MATROX_PROC
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_PCI != 0) && ($CONFIG_FB_MATROX != 0) && ($CONFIG_FB_MATROX == 1 || $CONFIG_FB_MATROX == 2 || $CONFIG_FB_MATROX == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_FB_MATROX]];set CONFIG_FB_MATROX_PROC [sync_tristate $CONFIG_FB_MATROX_PROC $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu75.config.f.x19 disabled {y}} else {configure_entry .menu75.config.f.x19 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu75.config.f.x19 disabled {m}} else {configure_entry .menu75.config.f.x19 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu75.config.f.x19 normal {m}} else {configure_entry .menu75.config.f.x19 disabled {m}}; configure_entry .menu75.config.f.x19 normal {n l}} else {configure_entry .menu75.config.f.x19 disabled {y n m l}}
	global CONFIG_FB_MATROX_MULTIHEAD
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_PCI != 0) && ($CONFIG_FB_MATROX != 0)} then {
	configure_entry .menu75.config.f.x20 normal {n l y}} else {configure_entry .menu75.config.f.x20 disabled {y n l}}
	global CONFIG_FB_ATY
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_PCI != 0)} then {
	configure_entry .menu75.config.f.x21 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu75.config.f.x21 normal {m}} else {configure_entry .menu75.config.f.x21 disabled {m}}; configure_entry .menu75.config.f.x21 normal {n l}} else {configure_entry .menu75.config.f.x21 disabled {y n m l}}
	global CONFIG_FB_ATY_GX
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_PCI != 0) && ($CONFIG_FB_ATY != 0)} then {
	configure_entry .menu75.config.f.x22 normal {n l y}} else {configure_entry .menu75.config.f.x22 disabled {y n l}}
	global CONFIG_FB_ATY_CT
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_PCI != 0) && ($CONFIG_FB_ATY != 0)} then {
	configure_entry .menu75.config.f.x23 normal {n l y}} else {configure_entry .menu75.config.f.x23 disabled {y n l}}
	global CONFIG_FB_RADEON
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_PCI != 0)} then {
	configure_entry .menu75.config.f.x24 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu75.config.f.x24 normal {m}} else {configure_entry .menu75.config.f.x24 disabled {m}}; configure_entry .menu75.config.f.x24 normal {n l}} else {configure_entry .menu75.config.f.x24 disabled {y n m l}}
	global CONFIG_FB_ATY128
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_PCI != 0)} then {
	configure_entry .menu75.config.f.x25 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu75.config.f.x25 normal {m}} else {configure_entry .menu75.config.f.x25 disabled {m}}; configure_entry .menu75.config.f.x25 normal {n l}} else {configure_entry .menu75.config.f.x25 disabled {y n m l}}
	global CONFIG_FB_INTEL
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_PCI != 0)} then {
	configure_entry .menu75.config.f.x26 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu75.config.f.x26 normal {m}} else {configure_entry .menu75.config.f.x26 disabled {m}}; configure_entry .menu75.config.f.x26 normal {n l}} else {configure_entry .menu75.config.f.x26 disabled {y n m l}}
	global CONFIG_FB_SIS
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_PCI != 0)} then {
	configure_entry .menu75.config.f.x27 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu75.config.f.x27 normal {m}} else {configure_entry .menu75.config.f.x27 disabled {m}}; configure_entry .menu75.config.f.x27 normal {n l}} else {configure_entry .menu75.config.f.x27 disabled {y n m l}}
	global CONFIG_FB_SIS_300
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_PCI != 0) && ($CONFIG_FB_SIS != 0)} then {
	configure_entry .menu75.config.f.x28 normal {n l y}} else {configure_entry .menu75.config.f.x28 disabled {y n l}}
	global CONFIG_FB_SIS_315
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_PCI != 0) && ($CONFIG_FB_SIS != 0)} then {
	configure_entry .menu75.config.f.x29 normal {n l y}} else {configure_entry .menu75.config.f.x29 disabled {y n l}}
	global CONFIG_FB_NEOMAGIC
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_PCI != 0)} then {
	configure_entry .menu75.config.f.x30 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu75.config.f.x30 normal {m}} else {configure_entry .menu75.config.f.x30 disabled {m}}; configure_entry .menu75.config.f.x30 normal {n l}} else {configure_entry .menu75.config.f.x30 disabled {y n m l}}
	global CONFIG_FB_3DFX
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_PCI != 0)} then {
	configure_entry .menu75.config.f.x31 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu75.config.f.x31 normal {m}} else {configure_entry .menu75.config.f.x31 disabled {m}}; configure_entry .menu75.config.f.x31 normal {n l}} else {configure_entry .menu75.config.f.x31 disabled {y n m l}}
	global CONFIG_FB_VOODOO1
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_PCI != 0)} then {
	configure_entry .menu75.config.f.x32 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu75.config.f.x32 normal {m}} else {configure_entry .menu75.config.f.x32 disabled {m}}; configure_entry .menu75.config.f.x32 normal {n l}} else {configure_entry .menu75.config.f.x32 disabled {y n m l}}
	global CONFIG_FB_TRIDENT
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_PCI != 0)} then {
	configure_entry .menu75.config.f.x33 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu75.config.f.x33 normal {m}} else {configure_entry .menu75.config.f.x33 disabled {m}}; configure_entry .menu75.config.f.x33 normal {n l}} else {configure_entry .menu75.config.f.x33 disabled {y n m l}}
	global CONFIG_FB_VIRTUAL
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_EXPERIMENTAL == 1)} then {
	configure_entry .menu75.config.f.x34 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu75.config.f.x34 normal {m}} else {configure_entry .menu75.config.f.x34 disabled {m}}; configure_entry .menu75.config.f.x34 normal {n l}} else {configure_entry .menu75.config.f.x34 disabled {y n m l}}
	global CONFIG_FB_VIRTUAL_SMALL
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_EXPERIMENTAL == 1)} then {
	configure_entry .menu75.config.f.x35 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu75.config.f.x35 normal {m}} else {configure_entry .menu75.config.f.x35 disabled {m}}; configure_entry .menu75.config.f.x35 normal {n l}} else {configure_entry .menu75.config.f.x35 disabled {y n m l}}
	global CONFIG_FBCON_ADVANCED
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1)} then {
	configure_entry .menu75.config.f.x36 normal {n l y}} else {configure_entry .menu75.config.f.x36 disabled {y n l}}
	global CONFIG_FBCON_MFB
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_FBCON_ADVANCED == 1)} then {
	configure_entry .menu75.config.f.x37 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu75.config.f.x37 normal {m}} else {configure_entry .menu75.config.f.x37 disabled {m}}; configure_entry .menu75.config.f.x37 normal {n l}} else {configure_entry .menu75.config.f.x37 disabled {y n m l}}
	global CONFIG_FBCON_CFB2
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_FBCON_ADVANCED == 1)} then {
	configure_entry .menu75.config.f.x38 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu75.config.f.x38 normal {m}} else {configure_entry .menu75.config.f.x38 disabled {m}}; configure_entry .menu75.config.f.x38 normal {n l}} else {configure_entry .menu75.config.f.x38 disabled {y n m l}}
	global CONFIG_FBCON_CFB4
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_FBCON_ADVANCED == 1)} then {
	configure_entry .menu75.config.f.x39 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu75.config.f.x39 normal {m}} else {configure_entry .menu75.config.f.x39 disabled {m}}; configure_entry .menu75.config.f.x39 normal {n l}} else {configure_entry .menu75.config.f.x39 disabled {y n m l}}
	global CONFIG_FBCON_CFB8
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_FBCON_ADVANCED == 1)} then {
	configure_entry .menu75.config.f.x40 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu75.config.f.x40 normal {m}} else {configure_entry .menu75.config.f.x40 disabled {m}}; configure_entry .menu75.config.f.x40 normal {n l}} else {configure_entry .menu75.config.f.x40 disabled {y n m l}}
	global CONFIG_FBCON_CFB16
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_FBCON_ADVANCED == 1)} then {
	configure_entry .menu75.config.f.x41 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu75.config.f.x41 normal {m}} else {configure_entry .menu75.config.f.x41 disabled {m}}; configure_entry .menu75.config.f.x41 normal {n l}} else {configure_entry .menu75.config.f.x41 disabled {y n m l}}
	global CONFIG_FBCON_CFB24
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_FBCON_ADVANCED == 1)} then {
	configure_entry .menu75.config.f.x42 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu75.config.f.x42 normal {m}} else {configure_entry .menu75.config.f.x42 disabled {m}}; configure_entry .menu75.config.f.x42 normal {n l}} else {configure_entry .menu75.config.f.x42 disabled {y n m l}}
	global CONFIG_FBCON_CFB32
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_FBCON_ADVANCED == 1)} then {
	configure_entry .menu75.config.f.x43 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu75.config.f.x43 normal {m}} else {configure_entry .menu75.config.f.x43 disabled {m}}; configure_entry .menu75.config.f.x43 normal {n l}} else {configure_entry .menu75.config.f.x43 disabled {y n m l}}
	global CONFIG_FBCON_AFB
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_FBCON_ADVANCED == 1)} then {
	configure_entry .menu75.config.f.x44 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu75.config.f.x44 normal {m}} else {configure_entry .menu75.config.f.x44 disabled {m}}; configure_entry .menu75.config.f.x44 normal {n l}} else {configure_entry .menu75.config.f.x44 disabled {y n m l}}
	global CONFIG_FBCON_ILBM
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_FBCON_ADVANCED == 1)} then {
	configure_entry .menu75.config.f.x45 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu75.config.f.x45 normal {m}} else {configure_entry .menu75.config.f.x45 disabled {m}}; configure_entry .menu75.config.f.x45 normal {n l}} else {configure_entry .menu75.config.f.x45 disabled {y n m l}}
	global CONFIG_FBCON_IPLAN2P2
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_FBCON_ADVANCED == 1)} then {
	configure_entry .menu75.config.f.x46 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu75.config.f.x46 normal {m}} else {configure_entry .menu75.config.f.x46 disabled {m}}; configure_entry .menu75.config.f.x46 normal {n l}} else {configure_entry .menu75.config.f.x46 disabled {y n m l}}
	global CONFIG_FBCON_IPLAN2P4
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_FBCON_ADVANCED == 1)} then {
	configure_entry .menu75.config.f.x47 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu75.config.f.x47 normal {m}} else {configure_entry .menu75.config.f.x47 disabled {m}}; configure_entry .menu75.config.f.x47 normal {n l}} else {configure_entry .menu75.config.f.x47 disabled {y n m l}}
	global CONFIG_FBCON_IPLAN2P8
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_FBCON_ADVANCED == 1)} then {
	configure_entry .menu75.config.f.x48 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu75.config.f.x48 normal {m}} else {configure_entry .menu75.config.f.x48 disabled {m}}; configure_entry .menu75.config.f.x48 normal {n l}} else {configure_entry .menu75.config.f.x48 disabled {y n m l}}
	global CONFIG_FBCON_MAC
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_FBCON_ADVANCED == 1)} then {
	configure_entry .menu75.config.f.x49 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu75.config.f.x49 normal {m}} else {configure_entry .menu75.config.f.x49 disabled {m}}; configure_entry .menu75.config.f.x49 normal {n l}} else {configure_entry .menu75.config.f.x49 disabled {y n m l}}
	global CONFIG_FBCON_VGA_PLANES
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_FBCON_ADVANCED == 1)} then {
	configure_entry .menu75.config.f.x50 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu75.config.f.x50 normal {m}} else {configure_entry .menu75.config.f.x50 disabled {m}}; configure_entry .menu75.config.f.x50 normal {n l}} else {configure_entry .menu75.config.f.x50 disabled {y n m l}}
	global CONFIG_FBCON_VGA
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_FBCON_ADVANCED == 1)} then {
	configure_entry .menu75.config.f.x51 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu75.config.f.x51 normal {m}} else {configure_entry .menu75.config.f.x51 disabled {m}}; configure_entry .menu75.config.f.x51 normal {n l}} else {configure_entry .menu75.config.f.x51 disabled {y n m l}}
	global CONFIG_FBCON_HGA
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_FBCON_ADVANCED == 1)} then {
	configure_entry .menu75.config.f.x52 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu75.config.f.x52 normal {m}} else {configure_entry .menu75.config.f.x52 disabled {m}}; configure_entry .menu75.config.f.x52 normal {n l}} else {configure_entry .menu75.config.f.x52 disabled {y n m l}}
	global CONFIG_FBCON_FONTWIDTH8_ONLY
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1)} then {
	configure_entry .menu75.config.f.x53 normal {n l y}} else {configure_entry .menu75.config.f.x53 disabled {y n l}}
	global CONFIG_FBCON_FONTS
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1)} then {
	configure_entry .menu75.config.f.x54 normal {n l y}} else {configure_entry .menu75.config.f.x54 disabled {y n l}}
	global CONFIG_FONT_8x8
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_FBCON_FONTS == 1)} then {
	configure_entry .menu75.config.f.x55 normal {n l y}} else {configure_entry .menu75.config.f.x55 disabled {y n l}}
	global CONFIG_FONT_8x16
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_FBCON_FONTS == 1)} then {
	configure_entry .menu75.config.f.x56 normal {n l y}} else {configure_entry .menu75.config.f.x56 disabled {y n l}}
	global CONFIG_FONT_SUN8x16
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_FBCON_FONTS == 1)} then {
	configure_entry .menu75.config.f.x57 normal {n l y}} else {configure_entry .menu75.config.f.x57 disabled {y n l}}
	global CONFIG_FONT_SUN12x22
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_FBCON_FONTS == 1) && ($CONFIG_FBCON_FONTWIDTH8_ONLY == 0)} then {
	configure_entry .menu75.config.f.x58 normal {n l y}} else {configure_entry .menu75.config.f.x58 disabled {y n l}}
	global CONFIG_FONT_6x11
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_FBCON_FONTS == 1) && ($CONFIG_FBCON_FONTWIDTH8_ONLY == 0)} then {
	configure_entry .menu75.config.f.x59 normal {n l y}} else {configure_entry .menu75.config.f.x59 disabled {y n l}}
	global CONFIG_FONT_PEARL_8x8
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_FBCON_FONTS == 1)} then {
	configure_entry .menu75.config.f.x60 normal {n l y}} else {configure_entry .menu75.config.f.x60 disabled {y n l}}
	global CONFIG_FONT_ACORN_8x8
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_FBCON_FONTS == 1)} then {
	configure_entry .menu75.config.f.x61 normal {n l y}} else {configure_entry .menu75.config.f.x61 disabled {y n l}}
}


proc update_define_menu75 {} {
	update_define_mainmenu
	global CONFIG_MODULES
	global CONFIG_DUMMY_CONSOLE
	global CONFIG_FB_RIVA
	global CONFIG_FB_CLGEN
	global CONFIG_FB_PM2
	global CONFIG_FB_PM3
	global CONFIG_FB_MATROX
	global CONFIG_FB_MATROX_G100
	global CONFIG_FB_ATY
	global CONFIG_FB_RADEON
	global CONFIG_FB_ATY128
	global CONFIG_FB_INTEL
	global CONFIG_FB_SIS
	global CONFIG_FB_NEOMAGIC
	global CONFIG_FB_3DFX
	global CONFIG_FB_VOODOO1
	global CONFIG_FB_TRIDENT
	global CONFIG_FB_VIRTUAL
	global CONFIG_FB_VIRTUAL_SMALL
	global CONFIG_FBCON_MFB
	global CONFIG_FBCON_CFB2
	global CONFIG_FBCON_CFB4
	global CONFIG_FBCON_CFB8
	global CONFIG_FBCON_CFB16
	global CONFIG_FBCON_CFB24
	global CONFIG_FBCON_CFB32
	global CONFIG_FBCON_AFB
	global CONFIG_FBCON_ILBM
	global CONFIG_FBCON_IPLAN2P2
	global CONFIG_FBCON_IPLAN2P4
	global CONFIG_FBCON_IPLAN2P8
	global CONFIG_FBCON_MAC
	global CONFIG_FBCON_VGA_PLANES
	global CONFIG_FBCON_VGA
	global CONFIG_FBCON_HGA
	global CONFIG_FBCON_STI
	global CONFIG_FONT_8x8
	global CONFIG_FONT_8x16
	global CONFIG_FONT_ACORN_8x8
	global CONFIG_FB
set CONFIG_FB [expr $CONFIG_FB|16]
set CONFIG_FB_RIVA [expr $CONFIG_FB_RIVA|16]
set CONFIG_FB_CLGEN [expr $CONFIG_FB_CLGEN|16]
set CONFIG_FB_PM2 [expr $CONFIG_FB_PM2|16]
	global CONFIG_FB_PM2_FIFO_DISCONNECT
set CONFIG_FB_PM2_FIFO_DISCONNECT [expr $CONFIG_FB_PM2_FIFO_DISCONNECT|16]
	global CONFIG_FB_PM2_PCI
set CONFIG_FB_PM2_PCI [expr $CONFIG_FB_PM2_PCI|16]
set CONFIG_FB_PM3 [expr $CONFIG_FB_PM3|16]
	global CONFIG_FB_ACORN
set CONFIG_FB_ACORN [expr $CONFIG_FB_ACORN|16]
set CONFIG_FB_MATROX [expr $CONFIG_FB_MATROX|16]
	global CONFIG_FB_MATROX_MILLENIUM
set CONFIG_FB_MATROX_MILLENIUM [expr $CONFIG_FB_MATROX_MILLENIUM|16]
	global CONFIG_FB_MATROX_MYSTIQUE
set CONFIG_FB_MATROX_MYSTIQUE [expr $CONFIG_FB_MATROX_MYSTIQUE|16]
	global CONFIG_FB_MATROX_G450
set CONFIG_FB_MATROX_G450 [expr $CONFIG_FB_MATROX_G450|16]
	global CONFIG_FB_MATROX_G100A
set CONFIG_FB_MATROX_G100A [expr $CONFIG_FB_MATROX_G100A|16]
	global CONFIG_FB_MATROX_MULTIHEAD
set CONFIG_FB_MATROX_MULTIHEAD [expr $CONFIG_FB_MATROX_MULTIHEAD|16]
set CONFIG_FB_ATY [expr $CONFIG_FB_ATY|16]
	global CONFIG_FB_ATY_GX
set CONFIG_FB_ATY_GX [expr $CONFIG_FB_ATY_GX|16]
	global CONFIG_FB_ATY_CT
set CONFIG_FB_ATY_CT [expr $CONFIG_FB_ATY_CT|16]
set CONFIG_FB_RADEON [expr $CONFIG_FB_RADEON|16]
set CONFIG_FB_ATY128 [expr $CONFIG_FB_ATY128|16]
set CONFIG_FB_INTEL [expr $CONFIG_FB_INTEL|16]
set CONFIG_FB_SIS [expr $CONFIG_FB_SIS|16]
	global CONFIG_FB_SIS_300
set CONFIG_FB_SIS_300 [expr $CONFIG_FB_SIS_300|16]
	global CONFIG_FB_SIS_315
set CONFIG_FB_SIS_315 [expr $CONFIG_FB_SIS_315|16]
set CONFIG_FB_NEOMAGIC [expr $CONFIG_FB_NEOMAGIC|16]
set CONFIG_FB_3DFX [expr $CONFIG_FB_3DFX|16]
set CONFIG_FB_VOODOO1 [expr $CONFIG_FB_VOODOO1|16]
set CONFIG_FB_TRIDENT [expr $CONFIG_FB_TRIDENT|16]
set CONFIG_FB_VIRTUAL [expr $CONFIG_FB_VIRTUAL|16]
set CONFIG_FB_VIRTUAL_SMALL [expr $CONFIG_FB_VIRTUAL_SMALL|16]
	global CONFIG_FBCON_ADVANCED
set CONFIG_FBCON_ADVANCED [expr $CONFIG_FBCON_ADVANCED|16]
set CONFIG_FBCON_MFB [expr $CONFIG_FBCON_MFB|16]
set CONFIG_FBCON_CFB2 [expr $CONFIG_FBCON_CFB2|16]
set CONFIG_FBCON_CFB4 [expr $CONFIG_FBCON_CFB4|16]
set CONFIG_FBCON_CFB8 [expr $CONFIG_FBCON_CFB8|16]
set CONFIG_FBCON_CFB16 [expr $CONFIG_FBCON_CFB16|16]
set CONFIG_FBCON_CFB24 [expr $CONFIG_FBCON_CFB24|16]
set CONFIG_FBCON_CFB32 [expr $CONFIG_FBCON_CFB32|16]
set CONFIG_FBCON_AFB [expr $CONFIG_FBCON_AFB|16]
set CONFIG_FBCON_ILBM [expr $CONFIG_FBCON_ILBM|16]
set CONFIG_FBCON_IPLAN2P2 [expr $CONFIG_FBCON_IPLAN2P2|16]
set CONFIG_FBCON_IPLAN2P4 [expr $CONFIG_FBCON_IPLAN2P4|16]
set CONFIG_FBCON_IPLAN2P8 [expr $CONFIG_FBCON_IPLAN2P8|16]
set CONFIG_FBCON_MAC [expr $CONFIG_FBCON_MAC|16]
set CONFIG_FBCON_VGA_PLANES [expr $CONFIG_FBCON_VGA_PLANES|16]
set CONFIG_FBCON_VGA [expr $CONFIG_FBCON_VGA|16]
set CONFIG_FBCON_HGA [expr $CONFIG_FBCON_HGA|16]
	global CONFIG_FBCON_FONTWIDTH8_ONLY
set CONFIG_FBCON_FONTWIDTH8_ONLY [expr $CONFIG_FBCON_FONTWIDTH8_ONLY|16]
	global CONFIG_FBCON_FONTS
set CONFIG_FBCON_FONTS [expr $CONFIG_FBCON_FONTS|16]
set CONFIG_FONT_8x8 [expr $CONFIG_FONT_8x8|16]
set CONFIG_FONT_8x16 [expr $CONFIG_FONT_8x16|16]
	global CONFIG_FONT_SUN8x16
set CONFIG_FONT_SUN8x16 [expr $CONFIG_FONT_SUN8x16|16]
	global CONFIG_FONT_SUN12x22
set CONFIG_FONT_SUN12x22 [expr $CONFIG_FONT_SUN12x22|16]
	global CONFIG_FONT_6x11
set CONFIG_FONT_6x11 [expr $CONFIG_FONT_6x11|16]
	global CONFIG_FONT_PEARL_8x8
set CONFIG_FONT_PEARL_8x8 [expr $CONFIG_FONT_PEARL_8x8|16]
set CONFIG_FONT_ACORN_8x8 [expr $CONFIG_FONT_ACORN_8x8|16]
	global CONFIG_VT
	if {($CONFIG_VT == 1)} then {
	set CONFIG_FB [expr $CONFIG_FB&15]}
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1)} then {	global CONSTANT_Y
set CONFIG_DUMMY_CONSOLE $CONSTANT_Y }
	global CONFIG_EXPERIMENTAL
	global CONFIG_PCI
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_PCI == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_FB_RIVA == 2)} then {set CONFIG_FB_RIVA 1}; set CONFIG_FB_RIVA [expr $CONFIG_FB_RIVA&15]}
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_PCI == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_FB_CLGEN == 2)} then {set CONFIG_FB_CLGEN 1}; set CONFIG_FB_CLGEN [expr $CONFIG_FB_CLGEN&15]}
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_PCI == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_FB_PM2 == 2)} then {set CONFIG_FB_PM2 1}; set CONFIG_FB_PM2 [expr $CONFIG_FB_PM2&15]}
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_FB_PM2 == 1 || $CONFIG_FB_PM2 == 2) && ($CONFIG_PCI == 1)} then {
	set CONFIG_FB_PM2_FIFO_DISCONNECT [expr $CONFIG_FB_PM2_FIFO_DISCONNECT&15]}
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_FB_PM2 == 1 || $CONFIG_FB_PM2 == 2) && ($CONFIG_PCI == 1)} then {
	set CONFIG_FB_PM2_PCI [expr $CONFIG_FB_PM2_PCI&15]}
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_PCI == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_FB_PM3 == 2)} then {set CONFIG_FB_PM3 1}; set CONFIG_FB_PM3 [expr $CONFIG_FB_PM3&15]}
	global CONFIG_ARCH_ACORN
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_ARCH_ACORN == 1)} then {
	set CONFIG_FB_ACORN [expr $CONFIG_FB_ACORN&15]}
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_ACORN == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ARCH_ACORN]];set CONFIG_FB_ACORN [sync_bool $CONFIG_FB_ACORN $tmpvar_dep 0];set CONFIG_FB_ACORN [expr $CONFIG_FB_ACORN&15]}
	global CONFIG_ARCH_CLPS711X
	global CONFIG_FB_CLPS711X
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_ARCH_CLPS711X == 1 || $CONFIG_ARCH_CLPS711X == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ARCH_CLPS711X]];set CONFIG_FB_CLPS711X [sync_bool $CONFIG_FB_CLPS711X $tmpvar_dep 0];set CONFIG_FB_CLPS711X [expr $CONFIG_FB_CLPS711X&15]}
	global CONFIG_FB_CYBER2000
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PCI]]; set CONFIG_FB_CYBER2000 [sync_tristate $CONFIG_FB_CYBER2000 $tmpvar_dep]; set CONFIG_FB_CYBER2000 [expr $CONFIG_FB_CYBER2000&15]}
	global CONFIG_ARCH_SA1100
	global CONFIG_FB_SA1100
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_SA1100 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ARCH_SA1100]];set CONFIG_FB_SA1100 [sync_bool $CONFIG_FB_SA1100 $tmpvar_dep 0];set CONFIG_FB_SA1100 [expr $CONFIG_FB_SA1100&15]}
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_PCI != 0)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_FB_MATROX == 2)} then {set CONFIG_FB_MATROX 1}; set CONFIG_FB_MATROX [expr $CONFIG_FB_MATROX&15]}
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_PCI != 0) && ($CONFIG_FB_MATROX != 0)} then {
	set CONFIG_FB_MATROX_MILLENIUM [expr $CONFIG_FB_MATROX_MILLENIUM&15]}
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_PCI != 0) && ($CONFIG_FB_MATROX != 0)} then {
	set CONFIG_FB_MATROX_MYSTIQUE [expr $CONFIG_FB_MATROX_MYSTIQUE&15]}
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_PCI != 0) && ($CONFIG_FB_MATROX != 0)} then {
	set CONFIG_FB_MATROX_G450 [expr $CONFIG_FB_MATROX_G450&15]}
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_PCI != 0) && ($CONFIG_FB_MATROX != 0) && ($CONFIG_FB_MATROX_G450 == 0)} then {
	set CONFIG_FB_MATROX_G100A [expr $CONFIG_FB_MATROX_G100A&15]}
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_PCI != 0) && ($CONFIG_FB_MATROX != 0) && ($CONFIG_FB_MATROX_G450 == 1 || $CONFIG_FB_MATROX_G100A == 1)} then {	global CONSTANT_Y
set CONFIG_FB_MATROX_G100 $CONSTANT_Y }
	global CONFIG_I2C
	global CONFIG_I2C_ALGOBIT
	global CONFIG_FB_MATROX_I2C
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_PCI != 0) && ($CONFIG_FB_MATROX != 0) && ($CONFIG_I2C != 0) && ($CONFIG_FB_MATROX == 1 || $CONFIG_FB_MATROX == 2 || $CONFIG_FB_MATROX == 4) && ($CONFIG_I2C_ALGOBIT == 1 || $CONFIG_I2C_ALGOBIT == 2 || $CONFIG_I2C_ALGOBIT == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_FB_MATROX $CONFIG_I2C_ALGOBIT]]; set CONFIG_FB_MATROX_I2C [sync_tristate $CONFIG_FB_MATROX_I2C $tmpvar_dep]; set CONFIG_FB_MATROX_I2C [expr $CONFIG_FB_MATROX_I2C&15]}
	global CONFIG_FB_MATROX_MAVEN
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_PCI != 0) && ($CONFIG_FB_MATROX != 0) && ($CONFIG_I2C != 0) && ($CONFIG_FB_MATROX_G100 == 1) && ($CONFIG_FB_MATROX_I2C == 1 || $CONFIG_FB_MATROX_I2C == 2 || $CONFIG_FB_MATROX_I2C == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_FB_MATROX_I2C]]; set CONFIG_FB_MATROX_MAVEN [sync_tristate $CONFIG_FB_MATROX_MAVEN $tmpvar_dep]; set CONFIG_FB_MATROX_MAVEN [expr $CONFIG_FB_MATROX_MAVEN&15]}
	global CONFIG_FB_MATROX_PROC
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_PCI != 0) && ($CONFIG_FB_MATROX != 0) && ($CONFIG_FB_MATROX == 1 || $CONFIG_FB_MATROX == 2 || $CONFIG_FB_MATROX == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_FB_MATROX]]; set CONFIG_FB_MATROX_PROC [sync_tristate $CONFIG_FB_MATROX_PROC $tmpvar_dep]; set CONFIG_FB_MATROX_PROC [expr $CONFIG_FB_MATROX_PROC&15]}
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_PCI != 0) && ($CONFIG_FB_MATROX != 0)} then {
	set CONFIG_FB_MATROX_MULTIHEAD [expr $CONFIG_FB_MATROX_MULTIHEAD&15]}
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_PCI != 0)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_FB_ATY == 2)} then {set CONFIG_FB_ATY 1}; set CONFIG_FB_ATY [expr $CONFIG_FB_ATY&15]}
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_PCI != 0) && ($CONFIG_FB_ATY != 0)} then {
	set CONFIG_FB_ATY_GX [expr $CONFIG_FB_ATY_GX&15]}
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_PCI != 0) && ($CONFIG_FB_ATY != 0)} then {
	set CONFIG_FB_ATY_CT [expr $CONFIG_FB_ATY_CT&15]}
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_PCI != 0)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_FB_RADEON == 2)} then {set CONFIG_FB_RADEON 1}; set CONFIG_FB_RADEON [expr $CONFIG_FB_RADEON&15]}
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_PCI != 0)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_FB_ATY128 == 2)} then {set CONFIG_FB_ATY128 1}; set CONFIG_FB_ATY128 [expr $CONFIG_FB_ATY128&15]}
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_PCI != 0)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_FB_INTEL == 2)} then {set CONFIG_FB_INTEL 1}; set CONFIG_FB_INTEL [expr $CONFIG_FB_INTEL&15]}
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_PCI != 0)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_FB_SIS == 2)} then {set CONFIG_FB_SIS 1}; set CONFIG_FB_SIS [expr $CONFIG_FB_SIS&15]}
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_PCI != 0) && ($CONFIG_FB_SIS != 0)} then {
	set CONFIG_FB_SIS_300 [expr $CONFIG_FB_SIS_300&15]}
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_PCI != 0) && ($CONFIG_FB_SIS != 0)} then {
	set CONFIG_FB_SIS_315 [expr $CONFIG_FB_SIS_315&15]}
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_PCI != 0)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_FB_NEOMAGIC == 2)} then {set CONFIG_FB_NEOMAGIC 1}; set CONFIG_FB_NEOMAGIC [expr $CONFIG_FB_NEOMAGIC&15]}
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_PCI != 0)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_FB_3DFX == 2)} then {set CONFIG_FB_3DFX 1}; set CONFIG_FB_3DFX [expr $CONFIG_FB_3DFX&15]}
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_PCI != 0)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_FB_VOODOO1 == 2)} then {set CONFIG_FB_VOODOO1 1}; set CONFIG_FB_VOODOO1 [expr $CONFIG_FB_VOODOO1&15]}
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_PCI != 0)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_FB_TRIDENT == 2)} then {set CONFIG_FB_TRIDENT 1}; set CONFIG_FB_TRIDENT [expr $CONFIG_FB_TRIDENT&15]}
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_EXPERIMENTAL == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_FB_VIRTUAL == 2)} then {set CONFIG_FB_VIRTUAL 1}; set CONFIG_FB_VIRTUAL [expr $CONFIG_FB_VIRTUAL&15]}
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_EXPERIMENTAL == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_FB_VIRTUAL_SMALL == 2)} then {set CONFIG_FB_VIRTUAL_SMALL 1}; set CONFIG_FB_VIRTUAL_SMALL [expr $CONFIG_FB_VIRTUAL_SMALL&15]}
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1)} then {
	set CONFIG_FBCON_ADVANCED [expr $CONFIG_FBCON_ADVANCED&15]}
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_FBCON_ADVANCED == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_FBCON_MFB == 2)} then {set CONFIG_FBCON_MFB 1}; set CONFIG_FBCON_MFB [expr $CONFIG_FBCON_MFB&15]}
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_FBCON_ADVANCED == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_FBCON_CFB2 == 2)} then {set CONFIG_FBCON_CFB2 1}; set CONFIG_FBCON_CFB2 [expr $CONFIG_FBCON_CFB2&15]}
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_FBCON_ADVANCED == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_FBCON_CFB4 == 2)} then {set CONFIG_FBCON_CFB4 1}; set CONFIG_FBCON_CFB4 [expr $CONFIG_FBCON_CFB4&15]}
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_FBCON_ADVANCED == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_FBCON_CFB8 == 2)} then {set CONFIG_FBCON_CFB8 1}; set CONFIG_FBCON_CFB8 [expr $CONFIG_FBCON_CFB8&15]}
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_FBCON_ADVANCED == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_FBCON_CFB16 == 2)} then {set CONFIG_FBCON_CFB16 1}; set CONFIG_FBCON_CFB16 [expr $CONFIG_FBCON_CFB16&15]}
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_FBCON_ADVANCED == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_FBCON_CFB24 == 2)} then {set CONFIG_FBCON_CFB24 1}; set CONFIG_FBCON_CFB24 [expr $CONFIG_FBCON_CFB24&15]}
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_FBCON_ADVANCED == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_FBCON_CFB32 == 2)} then {set CONFIG_FBCON_CFB32 1}; set CONFIG_FBCON_CFB32 [expr $CONFIG_FBCON_CFB32&15]}
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_FBCON_ADVANCED == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_FBCON_AFB == 2)} then {set CONFIG_FBCON_AFB 1}; set CONFIG_FBCON_AFB [expr $CONFIG_FBCON_AFB&15]}
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_FBCON_ADVANCED == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_FBCON_ILBM == 2)} then {set CONFIG_FBCON_ILBM 1}; set CONFIG_FBCON_ILBM [expr $CONFIG_FBCON_ILBM&15]}
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_FBCON_ADVANCED == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_FBCON_IPLAN2P2 == 2)} then {set CONFIG_FBCON_IPLAN2P2 1}; set CONFIG_FBCON_IPLAN2P2 [expr $CONFIG_FBCON_IPLAN2P2&15]}
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_FBCON_ADVANCED == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_FBCON_IPLAN2P4 == 2)} then {set CONFIG_FBCON_IPLAN2P4 1}; set CONFIG_FBCON_IPLAN2P4 [expr $CONFIG_FBCON_IPLAN2P4&15]}
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_FBCON_ADVANCED == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_FBCON_IPLAN2P8 == 2)} then {set CONFIG_FBCON_IPLAN2P8 1}; set CONFIG_FBCON_IPLAN2P8 [expr $CONFIG_FBCON_IPLAN2P8&15]}
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_FBCON_ADVANCED == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_FBCON_MAC == 2)} then {set CONFIG_FBCON_MAC 1}; set CONFIG_FBCON_MAC [expr $CONFIG_FBCON_MAC&15]}
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_FBCON_ADVANCED == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_FBCON_VGA_PLANES == 2)} then {set CONFIG_FBCON_VGA_PLANES 1}; set CONFIG_FBCON_VGA_PLANES [expr $CONFIG_FBCON_VGA_PLANES&15]}
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_FBCON_ADVANCED == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_FBCON_VGA == 2)} then {set CONFIG_FBCON_VGA 1}; set CONFIG_FBCON_VGA [expr $CONFIG_FBCON_VGA&15]}
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_FBCON_ADVANCED == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_FBCON_HGA == 2)} then {set CONFIG_FBCON_HGA 1}; set CONFIG_FBCON_HGA [expr $CONFIG_FBCON_HGA&15]}
	global CONFIG_FB_AMIGA
	global CONFIG_FB_ATARI
	global CONFIG_FB_CYBER
	global CONFIG_FB_MAC
	global CONFIG_FB_RETINAZ3
	global CONFIG_FB_VIRGE
	global CONFIG_FB_BWTWO
	global CONFIG_FB_TX3912
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_FBCON_ADVANCED != 1) && ($CONFIG_FB_ACORN == 1 || $CONFIG_FB_AMIGA == 1 || $CONFIG_FB_ATARI == 1 || $CONFIG_FB_CYBER == 1 || $CONFIG_FB_MAC == 1 || $CONFIG_FB_RETINAZ3 == 1 || $CONFIG_FB_VIRGE == 1 || $CONFIG_FB_VIRTUAL == 1 || $CONFIG_FB_BWTWO == 1 || $CONFIG_FB_CLGEN == 1 || $CONFIG_FB_TX3912 == 1)} then {	global CONSTANT_Y
set CONFIG_FBCON_MFB $CONSTANT_Y }
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_FBCON_ADVANCED != 1) && ($CONFIG_FB_ACORN != 1 && $CONFIG_FB_AMIGA != 1 && $CONFIG_FB_ATARI != 1 && $CONFIG_FB_CYBER != 1 && $CONFIG_FB_MAC != 1 && $CONFIG_FB_RETINAZ3 != 1 && $CONFIG_FB_VIRGE != 1 && $CONFIG_FB_VIRTUAL != 1 && $CONFIG_FB_BWTWO != 1 && $CONFIG_FB_CLGEN != 1 && $CONFIG_FB_TX3912 != 1) && ($CONFIG_FB_ACORN == 2 || $CONFIG_FB_AMIGA == 2 || $CONFIG_FB_ATARI == 2 || $CONFIG_FB_CYBER == 2 || $CONFIG_FB_MAC == 2 || $CONFIG_FB_RETINAZ3 == 2 || $CONFIG_FB_VIRGE == 2 || $CONFIG_FB_VIRTUAL == 2 || $CONFIG_FB_BWTWO == 2 || $CONFIG_FB_CLGEN == 2 || $CONFIG_FB_TX3912 == 2)} then {	global CONSTANT_M
set CONFIG_FBCON_MFB $CONSTANT_M }
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_FBCON_ADVANCED != 1) && ($CONFIG_FB_ACORN == 1 || $CONFIG_FB_MAC == 1 || $CONFIG_FB_SA1100 == 1 || $CONFIG_FB_VIRTUAL == 1 || $CONFIG_FB_TX3912 == 1)} then {	global CONSTANT_Y
set CONFIG_FBCON_CFB2 $CONSTANT_Y }
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_FBCON_ADVANCED != 1) && ($CONFIG_FB_ACORN == 1 || $CONFIG_FB_MAC == 1 || $CONFIG_FB_SA1100 == 1 || $CONFIG_FB_VIRTUAL == 1 || $CONFIG_FB_TX3912 == 1)} then {	global CONSTANT_Y
set CONFIG_FBCON_CFB4 $CONSTANT_Y }
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_FBCON_ADVANCED != 1) && ($CONFIG_FB_ACORN != 1 && $CONFIG_FB_MAC != 1 && $CONFIG_FB_SA1100 != 1 && $CONFIG_FB_VIRTUAL != 1 && $CONFIG_FB_TX3912 != 1) && ($CONFIG_FB_ACORN == 2 || $CONFIG_FB_MAC == 2 || $CONFIG_FB_SA1100 == 2 || $CONFIG_FB_VIRTUAL == 2 || $CONFIG_FB_TX3912 == 2)} then {	global CONSTANT_M
set CONFIG_FBCON_CFB2 $CONSTANT_M }
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_FBCON_ADVANCED != 1) && ($CONFIG_FB_ACORN != 1 && $CONFIG_FB_MAC != 1 && $CONFIG_FB_SA1100 != 1 && $CONFIG_FB_VIRTUAL != 1 && $CONFIG_FB_TX3912 != 1) && ($CONFIG_FB_ACORN == 2 || $CONFIG_FB_MAC == 2 || $CONFIG_FB_SA1100 == 2 || $CONFIG_FB_VIRTUAL == 2 || $CONFIG_FB_TX3912 == 2)} then {	global CONSTANT_M
set CONFIG_FBCON_CFB4 $CONSTANT_M }
	global CONFIG_FB_OF
	global CONFIG_FB_TGA
	global CONFIG_FB_VESA
	global CONFIG_FB_TCX
	global CONFIG_FB_CGTHREE
	global CONFIG_FB_CONTROL
	global CONFIG_FB_CGFOURTEEN
	global CONFIG_FB_G364
	global CONFIG_FB_VALKYRIE
	global CONFIG_FB_PLATINUM
	global CONFIG_FB_IGA
	global CONFIG_FB_CT65550
	global CONFIG_FB_P9100
	global CONFIG_FB_SGIVW
	global CONFIG_FB_PMAG_BA
	global CONFIG_FB_PMAGB_B
	global CONFIG_FB_MAXINE
	global CONFIG_FB_STI
	global CONFIG_FB_HP300
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_FBCON_ADVANCED != 1) && ($CONFIG_FB_ACORN == 1 || $CONFIG_FB_ATARI == 1 || $CONFIG_FB_ATY == 1 || $CONFIG_FB_MAC == 1 || $CONFIG_FB_OF == 1 || $CONFIG_FB_TGA == 1 || $CONFIG_FB_VESA == 1 || $CONFIG_FB_VIRTUAL == 1 || $CONFIG_FB_TCX == 1 || $CONFIG_FB_CGTHREE == 1 || $CONFIG_FB_CONTROL == 1 || $CONFIG_FB_CLGEN == 1 || $CONFIG_FB_CGFOURTEEN == 1 || $CONFIG_FB_G364 == 1 || $CONFIG_FB_VIRGE == 1 || $CONFIG_FB_CYBER == 1 || $CONFIG_FB_VALKYRIE == 1 || $CONFIG_FB_PLATINUM == 1 || $CONFIG_FB_IGA == 1 || $CONFIG_FB_MATROX == 1 || $CONFIG_FB_CT65550 == 1 || $CONFIG_FB_PM2 == 1 || $CONFIG_FB_PM3 == 1 || $CONFIG_FB_TRIDENT == 1 || $CONFIG_FB_P9100 == 1 || $CONFIG_FB_ATY128 == 1 || $CONFIG_FB_RIVA == 1 || $CONFIG_FB_RADEON == 1 || $CONFIG_FB_INTEL == 1 || $CONFIG_FB_SGIVW == 1 || $CONFIG_FB_CYBER2000 == 1 || $CONFIG_FB_SA1100 == 1 || $CONFIG_FB_3DFX == 1 || $CONFIG_FB_PMAG_BA == 1 || $CONFIG_FB_PMAGB_B == 1 || $CONFIG_FB_MAXINE == 1 || $CONFIG_FB_TX3912 == 1 || $CONFIG_FB_SIS == 1 || $CONFIG_FB_NEOMAGIC == 1 || $CONFIG_FB_STI == 1 || $CONFIG_FB_HP300 == 1 || $CONFIG_FB_INTEL == 1)} then {	global CONSTANT_Y
set CONFIG_FBCON_CFB8 $CONSTANT_Y }
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_FBCON_ADVANCED != 1) && ($CONFIG_FB_ACORN != 1 && $CONFIG_FB_ATARI != 1 && $CONFIG_FB_ATY != 1 && $CONFIG_FB_MAC != 1 && $CONFIG_FB_OF != 1 && $CONFIG_FB_TGA != 1 && $CONFIG_FB_VESA != 1 && $CONFIG_FB_VIRTUAL != 1 && $CONFIG_FB_TCX != 1 && $CONFIG_FB_CGTHREE != 1 && $CONFIG_FB_CONTROL != 1 && $CONFIG_FB_CLGEN != 1 && $CONFIG_FB_CGFOURTEEN != 1 && $CONFIG_FB_G364 != 1 && $CONFIG_FB_VIRGE != 1 && $CONFIG_FB_CYBER != 1 && $CONFIG_FB_VALKYRIE != 1 && $CONFIG_FB_PLATINUM != 1 && $CONFIG_FB_IGA != 1 && $CONFIG_FB_MATROX != 1 && $CONFIG_FB_CT65550 != 1 && $CONFIG_FB_PM2 != 1 && $CONFIG_FB_PM3 != 1 && $CONFIG_FB_TRIDENT != 1 && $CONFIG_FB_P9100 != 1 && $CONFIG_FB_ATY128 != 1 && $CONFIG_FB_RIVA != 1 && $CONFIG_FB_RADEON != 1 && $CONFIG_FB_INTEL != 1 && $CONFIG_FB_SGIVW != 1 && $CONFIG_FB_CYBER2000 != 1 && $CONFIG_FB_SA1100 != 1 && $CONFIG_FB_3DFX != 1 && $CONFIG_FB_PMAG_BA != 1 && $CONFIG_FB_PMAGB_B != 1 && $CONFIG_FB_MAXINE != 1 && $CONFIG_FB_TX3912 != 1 && $CONFIG_FB_SIS != 1 && $CONFIG_FB_NEOMAGIC != 1 && $CONFIG_FB_STI != 1 && $CONFIG_FB_HP300 != 1 && $CONFIG_FB_INTEL != 1) && ($CONFIG_FB_ACORN == 2 || $CONFIG_FB_ATARI == 2 || $CONFIG_FB_ATY == 2 || $CONFIG_FB_MAC == 2 || $CONFIG_FB_OF == 2 || $CONFIG_FB_TGA == 2 || $CONFIG_FB_VESA == 2 || $CONFIG_FB_VIRTUAL == 2 || $CONFIG_FB_TCX == 2 || $CONFIG_FB_CGTHREE == 2 || $CONFIG_FB_CONTROL == 2 || $CONFIG_FB_CLGEN == 2 || $CONFIG_FB_CGFOURTEEN == 2 || $CONFIG_FB_G364 == 2 || $CONFIG_FB_VIRGE == 2 || $CONFIG_FB_CYBER == 2 || $CONFIG_FB_VALKYRIE == 2 || $CONFIG_FB_PLATINUM == 2 || $CONFIG_FB_IGA == 2 || $CONFIG_FB_MATROX == 2 || $CONFIG_FB_CT65550 == 2 || $CONFIG_FB_PM2 == 2 || $CONFIG_FB_PM3 == 2 || $CONFIG_FB_TRIDENT == 2 || $CONFIG_FB_P9100 == 2 || $CONFIG_FB_ATY128 == 2 || $CONFIG_FB_RIVA == 2 || $CONFIG_FB_3DFX == 2 || $CONFIG_FB_SGIVW == 2 || $CONFIG_FB_CYBER2000 == 2 || $CONFIG_FB_PMAG_BA == 2 || $CONFIG_FB_PMAGB_B == 2 || $CONFIG_FB_MAXINE == 2 || $CONFIG_FB_RADEON == 2 || $CONFIG_FB_INTEL == 2 || $CONFIG_FB_SA1100 == 2 || $CONFIG_FB_SIS == 2 || $CONFIG_FB_TX3912 == 2 || $CONFIG_FB_NEOMAGIC == 2 || $CONFIG_FB_STI == 2 || $CONFIG_FB_INTEL == 2)} then {	global CONSTANT_M
set CONFIG_FBCON_CFB8 $CONSTANT_M }
	global CONFIG_FB_TBOX
	global CONFIG_FB_Q40
	global CONFIG_FB_PVR2
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_FBCON_ADVANCED != 1) && ($CONFIG_FB_ATARI == 1 || $CONFIG_FB_ATY == 1 || $CONFIG_FB_MAC == 1 || $CONFIG_FB_VESA == 1 || $CONFIG_FB_VIRTUAL == 1 || $CONFIG_FB_TBOX == 1 || $CONFIG_FB_Q40 == 1 || $CONFIG_FB_RADEON == 1 || $CONFIG_FB_INTEL == 1 || $CONFIG_FB_CONTROL == 1 || $CONFIG_FB_CLGEN == 1 || $CONFIG_FB_VIRGE == 1 || $CONFIG_FB_CYBER == 1 || $CONFIG_FB_VALKYRIE == 1 || $CONFIG_FB_PLATINUM == 1 || $CONFIG_FB_CT65550 == 1 || $CONFIG_FB_MATROX == 1 || $CONFIG_FB_PM2 == 1 || $CONFIG_FB_SGIVW == 1 || $CONFIG_FB_PM3 == 1 || $CONFIG_FB_TRIDENT == 1 || $CONFIG_FB_RIVA == 1 || $CONFIG_FB_ATY128 == 1 || $CONFIG_FB_CYBER2000 == 1 || $CONFIG_FB_3DFX == 1 || $CONFIG_FB_SIS == 1 || $CONFIG_FB_SA1100 == 1 || $CONFIG_FB_PVR2 == 1 || $CONFIG_FB_VOODOO1 == 1 || $CONFIG_FB_NEOMAGIC == 1 || $CONFIG_FB_INTEL == 1)} then {	global CONSTANT_Y
set CONFIG_FBCON_CFB16 $CONSTANT_Y }
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_FBCON_ADVANCED != 1) && ($CONFIG_FB_ATARI != 1 && $CONFIG_FB_ATY != 1 && $CONFIG_FB_MAC != 1 && $CONFIG_FB_VESA != 1 && $CONFIG_FB_VIRTUAL != 1 && $CONFIG_FB_TBOX != 1 && $CONFIG_FB_Q40 != 1 && $CONFIG_FB_RADEON != 1 && $CONFIG_FB_INTEL != 1 && $CONFIG_FB_CONTROL != 1 && $CONFIG_FB_CLGEN != 1 && $CONFIG_FB_VIRGE != 1 && $CONFIG_FB_CYBER != 1 && $CONFIG_FB_VALKYRIE != 1 && $CONFIG_FB_PLATINUM != 1 && $CONFIG_FB_CT65550 != 1 && $CONFIG_FB_MATROX != 1 && $CONFIG_FB_PM2 != 1 && $CONFIG_FB_SGIVW != 1 && $CONFIG_FB_PM3 != 1 && $CONFIG_FB_TRIDENT != 1 && $CONFIG_FB_RIVA != 1 && $CONFIG_FB_ATY128 != 1 && $CONFIG_FB_CYBER2000 != 1 && $CONFIG_FB_3DFX != 1 && $CONFIG_FB_SIS != 1 && $CONFIG_FB_SA1100 != 1 && $CONFIG_FB_PVR2 != 1 && $CONFIG_FB_VOODOO1 != 1 && $CONFIG_FB_NEOMAGIC != 1 && $CONFIG_FB_INTEL != 1) && ($CONFIG_FB_ATARI == 2 || $CONFIG_FB_ATY == 2 || $CONFIG_FB_MAC == 2 || $CONFIG_FB_VESA == 2 || $CONFIG_FB_VIRTUAL == 2 || $CONFIG_FB_TBOX == 2 || $CONFIG_FB_Q40 == 2 || $CONFIG_FB_3DFX == 2 || $CONFIG_FB_CONTROL == 2 || $CONFIG_FB_CLGEN == 2 || $CONFIG_FB_VIRGE == 2 || $CONFIG_FB_CYBER == 2 || $CONFIG_FB_VALKYRIE == 2 || $CONFIG_FB_PLATINUM == 2 || $CONFIG_FB_CT65550 == 2 || $CONFIG_FB_MATROX == 2 || $CONFIG_FB_PM2 == 2 || $CONFIG_FB_SGIVW == 2 || $CONFIG_FB_PM3 == 2 || $CONFIG_FB_TRIDENT == 2 || $CONFIG_FB_RIVA == 2 || $CONFIG_FB_ATY128 == 2 || $CONFIG_FB_CYBER2000 == 2 || $CONFIG_FB_SIS == 2 || $CONFIG_FB_SA1100 == 2 || $CONFIG_FB_RADEON == 2 || $CONFIG_FB_INTEL == 2 || $CONFIG_FB_PVR2 == 2 || $CONFIG_FB_VOODOO1 == 2 || $CONFIG_FB_NEOMAGIC == 2 || $CONFIG_FB_INTEL == 2)} then {	global CONSTANT_M
set CONFIG_FBCON_CFB16 $CONSTANT_M }
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_FBCON_ADVANCED != 1) && ($CONFIG_FB_ATY == 1 || $CONFIG_FB_VIRTUAL == 1 || $CONFIG_FB_CLGEN == 1 || $CONFIG_FB_VESA == 1 || $CONFIG_FB_MATROX == 1 || $CONFIG_FB_PM2 == 1 || $CONFIG_FB_ATY128 == 1 || $CONFIG_FB_RADEON == 1 || $CONFIG_FB_CYBER2000 == 1 || $CONFIG_FB_PVR2 == 1 || $CONFIG_FB_VOODOO1 == 1 || $CONFIG_FB_NEOMAGIC == 1)} then {	global CONSTANT_Y
set CONFIG_FBCON_CFB24 $CONSTANT_Y }
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_FBCON_ADVANCED != 1) && ($CONFIG_FB_ATY != 1 && $CONFIG_FB_VIRTUAL != 1 && $CONFIG_FB_CLGEN != 1 && $CONFIG_FB_VESA != 1 && $CONFIG_FB_MATROX != 1 && $CONFIG_FB_PM2 != 1 && $CONFIG_FB_ATY128 != 1 && $CONFIG_FB_RADEON != 1 && $CONFIG_FB_CYBER2000 != 1 && $CONFIG_FB_PVR2 != 1 && $CONFIG_FB_VOODOO1 != 1 && $CONFIG_FB_NEOMAGIC != 1) && ($CONFIG_FB_ATY == 2 || $CONFIG_FB_VIRTUAL == 2 || $CONFIG_FB_CLGEN == 2 || $CONFIG_FB_VESA == 2 || $CONFIG_FB_MATROX == 2 || $CONFIG_FB_PM2 == 2 || $CONFIG_FB_ATY128 == 2 || $CONFIG_FB_RADEON == 2 || $CONFIG_FB_CYBER2000 == 2 || $CONFIG_FB_PVR2 == 2 || $CONFIG_FB_VOODOO1 == 2 || $CONFIG_FB_NEOMAGIC == 2)} then {	global CONSTANT_M
set CONFIG_FBCON_CFB24 $CONSTANT_M }
	global CONFIG_FB_FM2
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_FBCON_ADVANCED != 1) && ($CONFIG_FB_ATARI == 1 || $CONFIG_FB_ATY == 1 || $CONFIG_FB_VESA == 1 || $CONFIG_FB_VIRTUAL == 1 || $CONFIG_FB_CONTROL == 1 || $CONFIG_FB_CLGEN == 1 || $CONFIG_FB_TGA == 1 || $CONFIG_FB_PLATINUM == 1 || $CONFIG_FB_MATROX == 1 || $CONFIG_FB_PM2 == 1 || $CONFIG_FB_PM3 == 1 || $CONFIG_FB_TRIDENT == 1 || $CONFIG_FB_RIVA == 1 || $CONFIG_FB_ATY128 == 1 || $CONFIG_FB_FM2 == 1 || $CONFIG_FB_SGIVW == 1 || $CONFIG_FB_RADEON == 1 || $CONFIG_FB_PVR2 == 1 || $CONFIG_FB_INTEL == 1 || $CONFIG_FB_3DFX == 1 || $CONFIG_FB_SIS == 1 || $CONFIG_FB_VOODOO1 == 1 || $CONFIG_FB_CYBER2000 == 1 || $CONFIG_FB_STI == 1 || $CONFIG_FB_INTEL == 1)} then {	global CONSTANT_Y
set CONFIG_FBCON_CFB32 $CONSTANT_Y }
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_FBCON_ADVANCED != 1) && ($CONFIG_FB_ATARI != 1 && $CONFIG_FB_ATY != 1 && $CONFIG_FB_VESA != 1 && $CONFIG_FB_VIRTUAL != 1 && $CONFIG_FB_CONTROL != 1 && $CONFIG_FB_CLGEN != 1 && $CONFIG_FB_TGA != 1 && $CONFIG_FB_PLATINUM != 1 && $CONFIG_FB_MATROX != 1 && $CONFIG_FB_PM2 != 1 && $CONFIG_FB_PM3 != 1 && $CONFIG_FB_TRIDENT != 1 && $CONFIG_FB_RIVA != 1 && $CONFIG_FB_ATY128 != 1 && $CONFIG_FB_FM2 != 1 && $CONFIG_FB_SGIVW != 1 && $CONFIG_FB_RADEON != 1 && $CONFIG_FB_PVR2 != 1 && $CONFIG_FB_INTEL != 1 && $CONFIG_FB_3DFX != 1 && $CONFIG_FB_SIS != 1 && $CONFIG_FB_VOODOO1 != 1 && $CONFIG_FB_CYBER2000 != 1 && $CONFIG_FB_STI != 1 && $CONFIG_FB_INTEL != 1) && ($CONFIG_FB_ATARI == 2 || $CONFIG_FB_ATY == 2 || $CONFIG_FB_VESA == 2 || $CONFIG_FB_VIRTUAL == 2 || $CONFIG_FB_CONTROL == 2 || $CONFIG_FB_CLGEN == 2 || $CONFIG_FB_TGA == 2 || $CONFIG_FB_PLATINUM == 2 || $CONFIG_FB_MATROX == 2 || $CONFIG_FB_PM2 == 2 || $CONFIG_FB_PM3 == 2 || $CONFIG_FB_TRIDENT == 2 || $CONFIG_FB_RIVA == 2 || $CONFIG_FB_ATY128 == 2 || $CONFIG_FB_3DFX == 2 || $CONFIG_FB_RADEON == 2 || $CONFIG_FB_INTEL == 2 || $CONFIG_FB_SGIVW == 2 || $CONFIG_FB_SIS == 2 || $CONFIG_FB_PVR2 == 2 || $CONFIG_FB_VOODOO1 == 2 || $CONFIG_FB_CYBER2000 == 2 || $CONFIG_FB_STI == 2)} then {	global CONSTANT_M
set CONFIG_FBCON_CFB32 $CONSTANT_M }
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_FBCON_ADVANCED != 1) && ($CONFIG_FB_AMIGA == 1)} then {	global CONSTANT_Y
set CONFIG_FBCON_AFB $CONSTANT_Y }
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_FBCON_ADVANCED != 1) && ($CONFIG_FB_AMIGA == 1)} then {	global CONSTANT_Y
set CONFIG_FBCON_ILBM $CONSTANT_Y }
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_FBCON_ADVANCED != 1) && ($CONFIG_FB_AMIGA != 1) && ($CONFIG_FB_AMIGA == 2)} then {	global CONSTANT_M
set CONFIG_FBCON_AFB $CONSTANT_M }
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_FBCON_ADVANCED != 1) && ($CONFIG_FB_AMIGA != 1) && ($CONFIG_FB_AMIGA == 2)} then {	global CONSTANT_M
set CONFIG_FBCON_ILBM $CONSTANT_M }
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_FBCON_ADVANCED != 1) && ($CONFIG_FB_ATARI == 1)} then {	global CONSTANT_Y
set CONFIG_FBCON_IPLAN2P2 $CONSTANT_Y }
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_FBCON_ADVANCED != 1) && ($CONFIG_FB_ATARI == 1)} then {	global CONSTANT_Y
set CONFIG_FBCON_IPLAN2P4 $CONSTANT_Y }
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_FBCON_ADVANCED != 1) && ($CONFIG_FB_ATARI == 1)} then {	global CONSTANT_Y
set CONFIG_FBCON_IPLAN2P8 $CONSTANT_Y }
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_FBCON_ADVANCED != 1) && ($CONFIG_FB_ATARI != 1) && ($CONFIG_FB_ATARI == 2)} then {	global CONSTANT_M
set CONFIG_FBCON_IPLAN2P2 $CONSTANT_M }
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_FBCON_ADVANCED != 1) && ($CONFIG_FB_ATARI != 1) && ($CONFIG_FB_ATARI == 2)} then {	global CONSTANT_M
set CONFIG_FBCON_IPLAN2P4 $CONSTANT_M }
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_FBCON_ADVANCED != 1) && ($CONFIG_FB_ATARI != 1) && ($CONFIG_FB_ATARI == 2)} then {	global CONSTANT_M
set CONFIG_FBCON_IPLAN2P8 $CONSTANT_M }
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_FBCON_ADVANCED != 1) && ($CONFIG_FB_MAC == 1 || $CONFIG_FB_VIRTUAL == 1)} then {	global CONSTANT_Y
set CONFIG_FBCON_MAC $CONSTANT_Y }
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_FBCON_ADVANCED != 1) && ($CONFIG_FB_MAC != 1 && $CONFIG_FB_VIRTUAL != 1) && ($CONFIG_FB_MAC == 2 || $CONFIG_FB_VIRTUAL == 2)} then {	global CONSTANT_M
set CONFIG_FBCON_MAC $CONSTANT_M }
	global CONFIG_FB_VGA16
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_FBCON_ADVANCED != 1) && ($CONFIG_FB_VGA16 == 1)} then {	global CONSTANT_Y
set CONFIG_FBCON_VGA_PLANES $CONSTANT_Y }
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_FBCON_ADVANCED != 1) && ($CONFIG_FB_VGA16 != 1) && ($CONFIG_FB_VGA16 == 2)} then {	global CONSTANT_M
set CONFIG_FBCON_VGA_PLANES $CONSTANT_M }
	global CONFIG_FB_HGA
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_FBCON_ADVANCED != 1) && ($CONFIG_FB_HGA == 1)} then {	global CONSTANT_Y
set CONFIG_FBCON_HGA $CONSTANT_Y }
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_FBCON_ADVANCED != 1) && ($CONFIG_FB_HGA != 1) && ($CONFIG_FB_HGA == 2)} then {	global CONSTANT_M
set CONFIG_FBCON_HGA $CONSTANT_M }
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_FB_STI == 1)} then {	global CONSTANT_Y
set CONFIG_FBCON_STI $CONSTANT_Y }
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1)} then {
	set CONFIG_FBCON_FONTWIDTH8_ONLY [expr $CONFIG_FBCON_FONTWIDTH8_ONLY&15]}
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1)} then {
	set CONFIG_FBCON_FONTS [expr $CONFIG_FBCON_FONTS&15]}
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_FBCON_FONTS == 1)} then {
	set CONFIG_FONT_8x8 [expr $CONFIG_FONT_8x8&15]}
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_FBCON_FONTS == 1)} then {
	set CONFIG_FONT_8x16 [expr $CONFIG_FONT_8x16&15]}
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_FBCON_FONTS == 1)} then {
	set CONFIG_FONT_SUN8x16 [expr $CONFIG_FONT_SUN8x16&15]}
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_FBCON_FONTS == 1) && ($CONFIG_FBCON_FONTWIDTH8_ONLY == 0)} then {
	set CONFIG_FONT_SUN12x22 [expr $CONFIG_FONT_SUN12x22&15]}
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_FBCON_FONTS == 1) && ($CONFIG_FBCON_FONTWIDTH8_ONLY == 0)} then {
	set CONFIG_FONT_6x11 [expr $CONFIG_FONT_6x11&15]}
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_FBCON_FONTS == 1)} then {
	set CONFIG_FONT_PEARL_8x8 [expr $CONFIG_FONT_PEARL_8x8&15]}
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_FBCON_FONTS == 1)} then {
	set CONFIG_FONT_ACORN_8x8 [expr $CONFIG_FONT_ACORN_8x8&15]}
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_FBCON_FONTS != 1)} then {	global CONSTANT_Y
set CONFIG_FONT_8x8 $CONSTANT_Y }
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_FBCON_FONTS != 1)} then {	global CONSTANT_Y
set CONFIG_FONT_8x16 $CONSTANT_Y }
	global CONFIG_ARM
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_FBCON_FONTS != 1) && ($CONFIG_ARM == 1 && $CONFIG_ARCH_ACORN == 1)} then {	global CONSTANT_Y
set CONFIG_FONT_ACORN_8x8 $CONSTANT_Y }
}


menu_option menu76 76 "Sound"
proc menu76 {w title} {
	set oldFocus [focus]
	catch {destroy $w; unregister_active 76}
	toplevel $w -class Dialog
	wm withdraw $w
	global active_menus
	set active_menus [lsort -integer [linsert $active_menus end 76]]
	message $w.m -width 400 -aspect 300 -text \
		"Sound"  -relief raised
	pack $w.m -pady 10 -side top -padx 10
	wm title $w "Sound" 

	bind $w <Escape> "catch {focus $oldFocus}; destroy $w; unregister_active 76; break"
	set nextscript "catch {focus $oldFocus}; destroy $w; unregister_active 76; menu77 .menu77 \"$title\""
	frame $w.f
	button $w.f.back -text "Main Menu" \
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 76"
	button $w.f.next -text "Next" -underline 0\
		-width 15 -command $nextscript
	bind all <Alt-n> $nextscript
	button $w.f.prev -text "Prev" -underline 0\
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 76; menu75 .menu75 \"$title\""
	bind $w <Alt-p> "catch {focus $oldFocus}; destroy $w; unregister_active 76; menu75 .menu75 \"$title\";break"
	pack $w.f.back $w.f.next $w.f.prev -side left -expand on
	pack $w.f -pady 10 -side bottom -anchor w -fill x
	frame $w.topline -relief ridge -borderwidth 2 -height 2
	pack $w.topline -side top -fill x

	frame $w.botline -relief ridge -borderwidth 2 -height 2
	pack $w.botline -side bottom -fill x

	frame $w.config
	pack $w.config -fill y -expand on

	scrollbar $w.config.vscroll -command "$w.config.canvas yview"
	pack $w.config.vscroll -side right -fill y

	canvas $w.config.canvas -height 1\
		-relief flat -borderwidth 0 -yscrollcommand "$w.config.vscroll set" \
		-width [expr [winfo screenwidth .] * 1 / 2] 
	frame $w.config.f
	bind $w <Key-Down> "$w.config.canvas yview scroll  1 unit;break;"
	bind $w <Key-Up> "$w.config.canvas yview scroll  -1 unit;break;"
	bind $w <Key-Next> "$w.config.canvas yview scroll  1 page;break;"
	bind $w <Key-Prior> "$w.config.canvas yview scroll  -1 page;break;"
	bind $w <Key-Home> "$w.config.canvas yview moveto 0;break;"
	bind $w <Key-End> "$w.config.canvas yview moveto 1 ;break;"
	pack $w.config.canvas -side right -fill y


	tristate $w.config.f 76 0 "Sound support" CONFIG_SOUND
	dep_tristate $w.config.f 76 1 "  ALi5455 audio support" CONFIG_SOUND_ALI5455
	bool $w.config.f 76 2 "   Enable Codec SPDIF OUT ( Pcm Out Share )" CONFIG_SOUND_ALI5455_CODECSPDIFOUT_PCMOUTSHARE
	bool $w.config.f 76 3 "   Enable Codec SPDIF OUT ( Codec Independent DMA )" CONFIG_SOUND_ALI5455_CODECSPDIFOUT_CODECINDEPENDENTDMA
	bool $w.config.f 76 4 "   Enable Controller SPDIF OUT ( Pcm Out Share )" CONFIG_SOUND_ALI5455_CONTROLLERSPDIFOUT_PCMOUTSHARE
	bool $w.config.f 76 5 "   Enable Controller SPDIF OUT ( Controller Independent DMA )" CONFIG_SOUND_ALI5455_CONTROLLERSPDIFOUT_CONTROLLERINDEPENDENTDMA
	dep_tristate $w.config.f 76 6 "  BT878 audio dma" CONFIG_SOUND_BT878
	dep_tristate $w.config.f 76 7 "  C-Media PCI (CMI8338/8738)" CONFIG_SOUND_CMPCI
	bool $w.config.f 76 8 "    Enable legacy FM" CONFIG_SOUND_CMPCI_FM
	hex $w.config.f 76 9 "    FM I/O 388, 3C8, 3E0, 3E8" CONFIG_SOUND_CMPCI_FMIO
	bool $w.config.f 76 10 "    Enable legacy MPU-401" CONFIG_SOUND_CMPCI_MIDI
	hex $w.config.f 76 11 "    MPU-401 I/O 330, 320, 310, 300" CONFIG_SOUND_CMPCI_MPUIO
	bool $w.config.f 76 12 "    Enable joystick" CONFIG_SOUND_CMPCI_JOYSTICK
	bool $w.config.f 76 13 "    Support CMI8738 based audio cards" CONFIG_SOUND_CMPCI_CM8738
	bool $w.config.f 76 14 "      Inverse S/PDIF in for CMI8738" CONFIG_SOUND_CMPCI_SPDIFINVERSE
	bool $w.config.f 76 15 "      Enable S/PDIF loop for CMI8738" CONFIG_SOUND_CMPCI_SPDIFLOOP
	int $w.config.f 76 16 "      Number of speakers 2, 4, 5, 6" CONFIG_SOUND_CMPCI_SPEAKERS
	bool $w.config.f 76 17 "        Use Line-in as Read-out" CONFIG_SOUND_CMPCI_LINE_REAR
	bool $w.config.f 76 18 "        Use Line-in as Bass" CONFIG_SOUND_CMPCI_LINE_BASS
	dep_tristate $w.config.f 76 19 "  Creative SBLive! (EMU10K1)" CONFIG_SOUND_EMU10K1
	dep_bool $w.config.f 76 20 "    Creative SBLive! MIDI" CONFIG_MIDI_EMU10K1
	dep_tristate $w.config.f 76 21 "  Crystal SoundFusion (CS4280/461x)" CONFIG_SOUND_FUSION
	dep_tristate $w.config.f 76 22 "  Crystal Sound CS4281" CONFIG_SOUND_CS4281
	dep_tristate $w.config.f 76 23 "  Ensoniq AudioPCI (ES1370)" CONFIG_SOUND_ES1370
	dep_tristate $w.config.f 76 24 "  Creative Ensoniq AudioPCI 97 (ES1371)" CONFIG_SOUND_ES1371
	dep_tristate $w.config.f 76 25 "  ESS Technology Solo1" CONFIG_SOUND_ESSSOLO1
	dep_tristate $w.config.f 76 26 "  ESS Maestro, Maestro2, Maestro2E driver" CONFIG_SOUND_MAESTRO
	dep_tristate $w.config.f 76 27 "  ESS Maestro3/Allegro driver (EXPERIMENTAL)" CONFIG_SOUND_MAESTRO3
	dep_tristate $w.config.f 76 28 "  ForteMedia FM801 driver (EXPERIMENTAL)" CONFIG_SOUND_FORTE
	dep_tristate $w.config.f 76 29 "  Intel ICH (i8xx), SiS 7012, NVidia nForce Audio or AMD 768/811x" CONFIG_SOUND_ICH
	dep_tristate $w.config.f 76 30 "  RME Hammerfall (RME96XX) support" CONFIG_SOUND_RME96XX
	dep_tristate $w.config.f 76 31 "  S3 SonicVibes" CONFIG_SOUND_SONICVIBES
	dep_tristate $w.config.f 76 32 "  Trident 4DWave DX/NX, SiS 7018 or ALi 5451 PCI Audio Core" CONFIG_SOUND_TRIDENT
	dep_tristate $w.config.f 76 33 "  Support for Turtle Beach MultiSound Classic, Tahiti, Monterey" CONFIG_SOUND_MSNDCLAS
	comment $w.config.f 76 34 "  Compiled-in MSND Classic support requires firmware during compilation."
	istring $w.config.f 76 35 "Full pathname of MSNDINIT.BIN firmware file" CONFIG_MSNDCLAS_INIT_FILE
	istring $w.config.f 76 36 "Full pathname of MSNDPERM.BIN firmware file" CONFIG_MSNDCLAS_PERM_FILE
	int $w.config.f 76 37 "  MSND Classic IRQ 5, 7, 9, 10, 11, 12" CONFIG_MSNDCLAS_IRQ
	hex $w.config.f 76 38 "  MSND Classic memory B0000, C8000, D0000, D8000, E0000, E8000" CONFIG_MSNDCLAS_MEM
	hex $w.config.f 76 39 "  MSND Classic I/O 210, 220, 230, 240, 250, 260, 290, 3E0" CONFIG_MSNDCLAS_IO
	dep_tristate $w.config.f 76 40 "  Support for Turtle Beach MultiSound Pinnacle, Fiji" CONFIG_SOUND_MSNDPIN
	comment $w.config.f 76 41 "Compiled-in MSND Pinnacle support requires firmware during compilation."
	istring $w.config.f 76 42 "  Full pathname of PNDSPINI.BIN firmware file" CONFIG_MSNDPIN_INIT_FILE
	istring $w.config.f 76 43 "  Full pathname of PNDSPERM.BIN firmware file" CONFIG_MSNDPIN_PERM_FILE
	int $w.config.f 76 44 "    MSND Pinnacle IRQ 5, 7, 9, 10, 11, 12" CONFIG_MSNDPIN_IRQ
	hex $w.config.f 76 45 "    MSND Pinnacle memory B0000, C8000, D0000, D8000, E0000, E8000" CONFIG_MSNDPIN_MEM
	hex $w.config.f 76 46 "MSND Pinnacle I/O 210, 220, 230, 240, 250, 260, 290, 3E0" CONFIG_MSNDPIN_IO
	bool $w.config.f 76 47 "  MSND Pinnacle has S/PDIF I/O" CONFIG_MSNDPIN_DIGITAL
	bool $w.config.f 76 48 "  MSND Pinnacle non-PnP Mode" CONFIG_MSNDPIN_NONPNP
	comment $w.config.f 76 49 "MSND Pinnacle DSP section will be configured to above parameters."
	hex $w.config.f 76 50 "MSND Pinnacle config port 250,260,270" CONFIG_MSNDPIN_CFG
	comment $w.config.f 76 51 "Pinnacle-specific Device Configuration (0 disables)"
	hex $w.config.f 76 52 "MSND Pinnacle MPU I/O (e.g. 330)" CONFIG_MSNDPIN_MPU_IO
	int $w.config.f 76 53 "MSND Pinnacle MPU IRQ (e.g. 9)" CONFIG_MSNDPIN_MPU_IRQ
	hex $w.config.f 76 54 "MSND Pinnacle IDE I/O 0 (e.g. 170)" CONFIG_MSNDPIN_IDE_IO0
	hex $w.config.f 76 55 "MSND Pinnacle IDE I/O 1 (e.g. 376)" CONFIG_MSNDPIN_IDE_IO1
	int $w.config.f 76 56 "MSND Pinnacle IDE IRQ (e.g. 15)" CONFIG_MSNDPIN_IDE_IRQ
	hex $w.config.f 76 57 "MSND Pinnacle joystick I/O (e.g. 200)" CONFIG_MSNDPIN_JOYSTICK_IO
	int $w.config.f 76 58 "MSND buffer size (kB)" CONFIG_MSND_FIFOSIZE
	dep_tristate $w.config.f 76 59 "  VIA 82C686 Audio Codec" CONFIG_SOUND_VIA82CXXX
	dep_bool $w.config.f 76 60 "  VIA 82C686 MIDI" CONFIG_MIDI_VIA82CXXX
	dep_tristate $w.config.f 76 61 "  OSS sound modules" CONFIG_SOUND_OSS
	bool $w.config.f 76 62 "      Verbose initialisation" CONFIG_SOUND_TRACEINIT
	bool $w.config.f 76 63 "      Persistent DMA buffers" CONFIG_SOUND_DMAP
	dep_tristate $w.config.f 76 64 "    AD1816(A) based cards (EXPERIMENTAL)" CONFIG_SOUND_AD1816
	dep_tristate $w.config.f 76 65 "    AD1889 based cards (AD1819 codec) (EXPERIMENTAL)" CONFIG_SOUND_AD1889
	dep_tristate $w.config.f 76 66 "    Aztech Sound Galaxy (non-PnP) cards" CONFIG_SOUND_SGALAXY
	dep_tristate $w.config.f 76 67 "    Adlib Cards" CONFIG_SOUND_ADLIB
	dep_tristate $w.config.f 76 68 "    ACI mixer (miroSOUND PCM1-pro/PCM12/PCM20)" CONFIG_SOUND_ACI_MIXER
	dep_tristate $w.config.f 76 69 "    Crystal CS4232 based (PnP) cards" CONFIG_SOUND_CS4232
	dep_tristate $w.config.f 76 70 "    Ensoniq SoundScape support" CONFIG_SOUND_SSCAPE
	dep_tristate $w.config.f 76 71 "    Gravis Ultrasound support" CONFIG_SOUND_GUS
	bool $w.config.f 76 72 "      16 bit sampling option of GUS (_NOT_ GUS MAX)" CONFIG_SOUND_GUS16
	bool $w.config.f 76 73 "      GUS MAX support" CONFIG_SOUND_GUSMAX
	dep_tristate $w.config.f 76 74 "    Loopback MIDI device support" CONFIG_SOUND_VMIDI
	dep_tristate $w.config.f 76 75 "    MediaTrix AudioTrix Pro support" CONFIG_SOUND_TRIX
	bool $w.config.f 76 76 "      Have TRXPRO.HEX firmware file" CONFIG_TRIX_HAVE_BOOT
	istring $w.config.f 76 77 "  Full pathname of TRXPRO.HEX firmware file" CONFIG_TRIX_BOOT_FILE
	dep_tristate $w.config.f 76 78 "    Microsoft Sound System support" CONFIG_SOUND_MSS
	dep_tristate $w.config.f 76 79 "    MPU-401 support (NOT for SB16)" CONFIG_SOUND_MPU401
	dep_tristate $w.config.f 76 80 "    NM256AV/NM256ZX audio support" CONFIG_SOUND_NM256
	dep_tristate $w.config.f 76 81 "    OPTi MAD16 and/or Mozart based cards" CONFIG_SOUND_MAD16
	bool $w.config.f 76 82 "      Support MIDI in older MAD16 based cards (requires SB)" CONFIG_MAD16_OLDCARD
	dep_tristate $w.config.f 76 83 "    ProAudioSpectrum 16 support" CONFIG_SOUND_PAS
	dep_bool $w.config.f 76 84 "      Enable PAS16 joystick port" CONFIG_PAS_JOYSTICK
	dep_tristate $w.config.f 76 85 "    PSS (AD1848, ADSP-2115, ESC614) support" CONFIG_SOUND_PSS
	bool $w.config.f 76 86 "      Enable PSS mixer (Beethoven ADSP-16 and other compatibile)" CONFIG_PSS_MIXER
	bool $w.config.f 76 87 "      Have DSPxxx.LD firmware file" CONFIG_PSS_HAVE_BOOT
	istring $w.config.f 76 88 "        Full pathname of DSPxxx.LD firmware file" CONFIG_PSS_BOOT_FILE
	dep_tristate $w.config.f 76 89 "    100% Sound Blaster compatibles (SB16/32/64, ESS, Jazz16) support" CONFIG_SOUND_SB
	dep_tristate $w.config.f 76 90 "    AWE32 synth" CONFIG_SOUND_AWE32_SYNTH
	dep_tristate $w.config.f 76 91 "    XpressAudio Sound Blaster emulation" CONFIG_SOUND_KAHLUA
	dep_tristate $w.config.f 76 92 "    Full support for Turtle Beach WaveFront (Tropez Plus, Tropez, Maui) synth/soundcards" CONFIG_SOUND_WAVEFRONT
	dep_tristate $w.config.f 76 93 "    Limited support for Turtle Beach Wave Front (Maui, Tropez) synthesizers" CONFIG_SOUND_MAUI
	bool $w.config.f 76 94 "      Have OSWF.MOT firmware file" CONFIG_MAUI_HAVE_BOOT
	istring $w.config.f 76 95 "  Full pathname of OSWF.MOT firmware file" CONFIG_MAUI_BOOT_FILE
	dep_tristate $w.config.f 76 96 "    Yamaha FM synthesizer (YM3812/OPL-3) support" CONFIG_SOUND_YM3812
	dep_tristate $w.config.f 76 97 "    Yamaha OPL3-SA1 audio controller" CONFIG_SOUND_OPL3SA1
	dep_tristate $w.config.f 76 98 "    Yamaha OPL3-SA2 and SA3 based PnP cards" CONFIG_SOUND_OPL3SA2
	dep_tristate $w.config.f 76 99 "    Yamaha YMF7xx PCI audio (native mode)" CONFIG_SOUND_YMFPCI
	dep_bool $w.config.f 76 100 "      Yamaha PCI legacy ports support" CONFIG_SOUND_YMFPCI_LEGACY
	dep_tristate $w.config.f 76 101 "    6850 UART support" CONFIG_SOUND_UART6850
	dep_tristate $w.config.f 76 102 "    Gallant Audio Cards (SC-6000 and SC-6600 based)" CONFIG_SOUND_AEDSP16
	bool $w.config.f 76 103 "      SC-6600 based audio cards (new Audio Excel DSP 16)" CONFIG_SC6600
	bool $w.config.f 76 104 "        Activate SC-6600 Joystick Interface" CONFIG_SC6600_JOY
	int $w.config.f 76 105 "        SC-6600 CDROM Interface (4=None, 3=IDE, 1=Panasonic, 0=?Sony?)" CONFIG_SC6600_CDROM
	hex $w.config.f 76 106 "        SC-6600 CDROM Interface I/O Address" CONFIG_SC6600_CDROMBASE
	bool $w.config.f 76 107 "      Audio Excel DSP 16 (SBPro emulation)" CONFIG_AEDSP16_SBPRO
	bool $w.config.f 76 108 "      Audio Excel DSP 16 (MSS emulation)" CONFIG_AEDSP16_MSS
	bool $w.config.f 76 109 "      Audio Excel DSP 16 (MPU401 emulation)" CONFIG_AEDSP16_MPU401
	dep_tristate $w.config.f 76 110 "    VIDC 16-bit sound" CONFIG_SOUND_VIDC
	dep_tristate $w.config.f 76 111 "    Netwinder WaveArtist" CONFIG_SOUND_WAVEARTIST
	dep_tristate $w.config.f 76 112 "  TV card (bt848) mixer support" CONFIG_SOUND_TVMIXER
	dep_tristate $w.config.f 76 113 "  AD1980 front/back switch plugin" CONFIG_SOUND_AD1980
	dep_tristate $w.config.f 76 114 "  Wolfson Touchscreen/BMON plugin" CONFIG_SOUND_WM97XX



	focus $w
	update_active
	global winx; global winy
	set winx [expr [winfo x .]+30]; set winy [expr [winfo y .]+30]
	if {[winfo exists $w]} then {wm geometry $w +$winx+$winy}
	update idletasks
	if {[winfo exists $w]} then  {$w.config.canvas create window 0 0 -anchor nw -window $w.config.f

	$w.config.canvas configure \
		-width [expr [winfo reqwidth $w.config.f] + 1]\
		-scrollregion "-1 -1 [expr [winfo reqwidth $w.config.f] + 1] \
			 [expr [winfo reqheight $w.config.f] + 1]"

	set winy [expr [winfo reqh $w] - [winfo reqh $w.config.canvas]]
	set scry [expr [winfo screenh $w] / 2]
	set maxy [expr [winfo screenh $w] * 3 / 4]
	set canvtotal [expr [winfo reqh $w.config.f] + 2]
	if [expr $winy + $canvtotal < $maxy] {
		$w.config.canvas configure -height $canvtotal
	} else {
		$w.config.canvas configure -height [expr $scry - $winy]
		}
	}
	update idletasks
	if {[winfo exists $w]} then {
	wm maxsize $w [winfo width $w] [winfo screenheight $w]
	wm minsize $w [winfo width $w] 100

	wm deiconify $w
}
}

proc update_menu76 {} {
	global CONFIG_MODULES
	global CONFIG_ARCH_ACORN
	global CONFIG_ARCH_CLPS7500
	global CONFIG_ARCH_RISCSTATION
	global CONFIG_ARCH_TBOX
	global CONFIG_ARCH_SHARK
	global CONFIG_ARCH_SA1100
	global CONFIG_PCI
	global CONFIG_SOUND
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1)} then {
	configure_entry .menu76.config.f.x0 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu76.config.f.x0 normal {m}} else {configure_entry .menu76.config.f.x0 disabled {m}}; configure_entry .menu76.config.f.x0 normal {n l}} else {configure_entry .menu76.config.f.x0 disabled {y n m l}}
	global CONFIG_SOUND_ALI5455
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND == 1 || $CONFIG_SOUND == 2 || $CONFIG_SOUND == 4) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SOUND $CONFIG_PCI]];set CONFIG_SOUND_ALI5455 [sync_tristate $CONFIG_SOUND_ALI5455 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu76.config.f.x1 disabled {y}} else {configure_entry .menu76.config.f.x1 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu76.config.f.x1 disabled {m}} else {configure_entry .menu76.config.f.x1 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu76.config.f.x1 normal {m}} else {configure_entry .menu76.config.f.x1 disabled {m}}; configure_entry .menu76.config.f.x1 normal {n l}} else {configure_entry .menu76.config.f.x1 disabled {y n m l}}
	global CONFIG_SOUND_ALI5455_CODECSPDIFOUT_PCMOUTSHARE
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_ALI5455 == 1 || $CONFIG_SOUND_ALI5455 == 2)} then {
	configure_entry .menu76.config.f.x2 normal {n l y}} else {configure_entry .menu76.config.f.x2 disabled {y n l}}
	global CONFIG_SOUND_ALI5455_CODECSPDIFOUT_CODECINDEPENDENTDMA
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_ALI5455 == 1 || $CONFIG_SOUND_ALI5455 == 2)} then {
	configure_entry .menu76.config.f.x3 normal {n l y}} else {configure_entry .menu76.config.f.x3 disabled {y n l}}
	global CONFIG_SOUND_ALI5455_CONTROLLERSPDIFOUT_PCMOUTSHARE
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_ALI5455 == 1 || $CONFIG_SOUND_ALI5455 == 2)} then {
	configure_entry .menu76.config.f.x4 normal {n l y}} else {configure_entry .menu76.config.f.x4 disabled {y n l}}
	global CONFIG_SOUND_ALI5455_CONTROLLERSPDIFOUT_CONTROLLERINDEPENDENTDMA
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_ALI5455 == 1 || $CONFIG_SOUND_ALI5455 == 2)} then {
	configure_entry .menu76.config.f.x5 normal {n l y}} else {configure_entry .menu76.config.f.x5 disabled {y n l}}
	global CONFIG_SOUND_BT878
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND == 1 || $CONFIG_SOUND == 2 || $CONFIG_SOUND == 4) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SOUND $CONFIG_PCI]];set CONFIG_SOUND_BT878 [sync_tristate $CONFIG_SOUND_BT878 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu76.config.f.x6 disabled {y}} else {configure_entry .menu76.config.f.x6 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu76.config.f.x6 disabled {m}} else {configure_entry .menu76.config.f.x6 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu76.config.f.x6 normal {m}} else {configure_entry .menu76.config.f.x6 disabled {m}}; configure_entry .menu76.config.f.x6 normal {n l}} else {configure_entry .menu76.config.f.x6 disabled {y n m l}}
	global CONFIG_SOUND_CMPCI
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND == 1 || $CONFIG_SOUND == 2 || $CONFIG_SOUND == 4) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SOUND $CONFIG_PCI]];set CONFIG_SOUND_CMPCI [sync_tristate $CONFIG_SOUND_CMPCI $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu76.config.f.x7 disabled {y}} else {configure_entry .menu76.config.f.x7 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu76.config.f.x7 disabled {m}} else {configure_entry .menu76.config.f.x7 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu76.config.f.x7 normal {m}} else {configure_entry .menu76.config.f.x7 disabled {m}}; configure_entry .menu76.config.f.x7 normal {n l}} else {configure_entry .menu76.config.f.x7 disabled {y n m l}}
	global CONFIG_SOUND_CMPCI_FM
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_CMPCI == 1 || $CONFIG_SOUND_CMPCI == 2)} then {
	configure_entry .menu76.config.f.x8 normal {n l y}} else {configure_entry .menu76.config.f.x8 disabled {y n l}}
	global CONFIG_SOUND_CMPCI_FMIO
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_CMPCI == 1 || $CONFIG_SOUND_CMPCI == 2) && ($CONFIG_SOUND_CMPCI_FM == 1)} then {.menu76.config.f.x9.x configure -state normal -foreground [ cget .ref -foreground ]; .menu76.config.f.x9.l configure -state normal; } else {.menu76.config.f.x9.x configure -state disabled -foreground [ cget .ref -disabledforeground ]; .menu76.config.f.x9.l configure -state disabled}
	global CONFIG_SOUND_CMPCI_MIDI
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_CMPCI == 1 || $CONFIG_SOUND_CMPCI == 2)} then {
	configure_entry .menu76.config.f.x10 normal {n l y}} else {configure_entry .menu76.config.f.x10 disabled {y n l}}
	global CONFIG_SOUND_CMPCI_MPUIO
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_CMPCI == 1 || $CONFIG_SOUND_CMPCI == 2) && ($CONFIG_SOUND_CMPCI_MIDI == 1)} then {.menu76.config.f.x11.x configure -state normal -foreground [ cget .ref -foreground ]; .menu76.config.f.x11.l configure -state normal; } else {.menu76.config.f.x11.x configure -state disabled -foreground [ cget .ref -disabledforeground ]; .menu76.config.f.x11.l configure -state disabled}
	global CONFIG_SOUND_CMPCI_JOYSTICK
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_CMPCI == 1 || $CONFIG_SOUND_CMPCI == 2)} then {
	configure_entry .menu76.config.f.x12 normal {n l y}} else {configure_entry .menu76.config.f.x12 disabled {y n l}}
	global CONFIG_SOUND_CMPCI_CM8738
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_CMPCI == 1 || $CONFIG_SOUND_CMPCI == 2)} then {
	configure_entry .menu76.config.f.x13 normal {n l y}} else {configure_entry .menu76.config.f.x13 disabled {y n l}}
	global CONFIG_SOUND_CMPCI_SPDIFINVERSE
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_CMPCI == 1 || $CONFIG_SOUND_CMPCI == 2) && ($CONFIG_SOUND_CMPCI_CM8738 == 1)} then {
	configure_entry .menu76.config.f.x14 normal {n l y}} else {configure_entry .menu76.config.f.x14 disabled {y n l}}
	global CONFIG_SOUND_CMPCI_SPDIFLOOP
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_CMPCI == 1 || $CONFIG_SOUND_CMPCI == 2) && ($CONFIG_SOUND_CMPCI_CM8738 == 1)} then {
	configure_entry .menu76.config.f.x15 normal {n l y}} else {configure_entry .menu76.config.f.x15 disabled {y n l}}
	global CONFIG_SOUND_CMPCI_SPEAKERS
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_CMPCI == 1 || $CONFIG_SOUND_CMPCI == 2) && ($CONFIG_SOUND_CMPCI_CM8738 == 1)} then {.menu76.config.f.x16.x configure -state normal -foreground [ cget .ref -foreground ]; .menu76.config.f.x16.l configure -state normal; } else {.menu76.config.f.x16.x configure -state disabled -foreground [ cget .ref -disabledforeground ]; .menu76.config.f.x16.l configure -state disabled}
	global CONFIG_SOUND_CMPCI_LINE_REAR
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_CMPCI == 1 || $CONFIG_SOUND_CMPCI == 2) && ($CONFIG_SOUND_CMPCI_CM8738 == 1) && ($CONFIG_SOUND_CMPCI_SPEAKERS != "2")} then {
	configure_entry .menu76.config.f.x17 normal {n l y}} else {configure_entry .menu76.config.f.x17 disabled {y n l}}
	global CONFIG_SOUND_CMPCI_LINE_BASS
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_CMPCI == 1 || $CONFIG_SOUND_CMPCI == 2) && ($CONFIG_SOUND_CMPCI_CM8738 == 1) && ($CONFIG_SOUND_CMPCI_SPEAKERS != "2")} then {
	configure_entry .menu76.config.f.x18 normal {n l y}} else {configure_entry .menu76.config.f.x18 disabled {y n l}}
	global CONFIG_SOUND_EMU10K1
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND == 1 || $CONFIG_SOUND == 2 || $CONFIG_SOUND == 4) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SOUND $CONFIG_PCI]];set CONFIG_SOUND_EMU10K1 [sync_tristate $CONFIG_SOUND_EMU10K1 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu76.config.f.x19 disabled {y}} else {configure_entry .menu76.config.f.x19 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu76.config.f.x19 disabled {m}} else {configure_entry .menu76.config.f.x19 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu76.config.f.x19 normal {m}} else {configure_entry .menu76.config.f.x19 disabled {m}}; configure_entry .menu76.config.f.x19 normal {n l}} else {configure_entry .menu76.config.f.x19 disabled {y n m l}}
	global CONFIG_EXPERIMENTAL
	global CONFIG_MIDI_EMU10K1
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_EMU10K1 == 1 || $CONFIG_SOUND_EMU10K1 == 2 || $CONFIG_SOUND_EMU10K1 == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SOUND_EMU10K1 $CONFIG_EXPERIMENTAL]];set CONFIG_MIDI_EMU10K1 [sync_bool $CONFIG_MIDI_EMU10K1 $tmpvar_dep 1];if {$tmpvar_dep != 1 && $tmpvar_dep != 2} then {configure_entry .menu76.config.f.x20 disabled {y};} else {configure_entry .menu76.config.f.x20 normal {y};}; configure_entry .menu76.config.f.x20 normal {n l}} else {configure_entry .menu76.config.f.x20 disabled {y n l}}
	global CONFIG_SOUND_FUSION
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND == 1 || $CONFIG_SOUND == 2 || $CONFIG_SOUND == 4) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SOUND $CONFIG_PCI]];set CONFIG_SOUND_FUSION [sync_tristate $CONFIG_SOUND_FUSION $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu76.config.f.x21 disabled {y}} else {configure_entry .menu76.config.f.x21 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu76.config.f.x21 disabled {m}} else {configure_entry .menu76.config.f.x21 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu76.config.f.x21 normal {m}} else {configure_entry .menu76.config.f.x21 disabled {m}}; configure_entry .menu76.config.f.x21 normal {n l}} else {configure_entry .menu76.config.f.x21 disabled {y n m l}}
	global CONFIG_SOUND_CS4281
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND == 1 || $CONFIG_SOUND == 2 || $CONFIG_SOUND == 4) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SOUND $CONFIG_PCI]];set CONFIG_SOUND_CS4281 [sync_tristate $CONFIG_SOUND_CS4281 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu76.config.f.x22 disabled {y}} else {configure_entry .menu76.config.f.x22 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu76.config.f.x22 disabled {m}} else {configure_entry .menu76.config.f.x22 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu76.config.f.x22 normal {m}} else {configure_entry .menu76.config.f.x22 disabled {m}}; configure_entry .menu76.config.f.x22 normal {n l}} else {configure_entry .menu76.config.f.x22 disabled {y n m l}}
	global CONFIG_SOUND_ES1370
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND == 1 || $CONFIG_SOUND == 2 || $CONFIG_SOUND == 4) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SOUND $CONFIG_PCI]];set CONFIG_SOUND_ES1370 [sync_tristate $CONFIG_SOUND_ES1370 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu76.config.f.x23 disabled {y}} else {configure_entry .menu76.config.f.x23 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu76.config.f.x23 disabled {m}} else {configure_entry .menu76.config.f.x23 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu76.config.f.x23 normal {m}} else {configure_entry .menu76.config.f.x23 disabled {m}}; configure_entry .menu76.config.f.x23 normal {n l}} else {configure_entry .menu76.config.f.x23 disabled {y n m l}}
	global CONFIG_SOUND_ES1371
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND == 1 || $CONFIG_SOUND == 2 || $CONFIG_SOUND == 4) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SOUND $CONFIG_PCI]];set CONFIG_SOUND_ES1371 [sync_tristate $CONFIG_SOUND_ES1371 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu76.config.f.x24 disabled {y}} else {configure_entry .menu76.config.f.x24 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu76.config.f.x24 disabled {m}} else {configure_entry .menu76.config.f.x24 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu76.config.f.x24 normal {m}} else {configure_entry .menu76.config.f.x24 disabled {m}}; configure_entry .menu76.config.f.x24 normal {n l}} else {configure_entry .menu76.config.f.x24 disabled {y n m l}}
	global CONFIG_SOUND_ESSSOLO1
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND == 1 || $CONFIG_SOUND == 2 || $CONFIG_SOUND == 4) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SOUND $CONFIG_PCI]];set CONFIG_SOUND_ESSSOLO1 [sync_tristate $CONFIG_SOUND_ESSSOLO1 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu76.config.f.x25 disabled {y}} else {configure_entry .menu76.config.f.x25 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu76.config.f.x25 disabled {m}} else {configure_entry .menu76.config.f.x25 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu76.config.f.x25 normal {m}} else {configure_entry .menu76.config.f.x25 disabled {m}}; configure_entry .menu76.config.f.x25 normal {n l}} else {configure_entry .menu76.config.f.x25 disabled {y n m l}}
	global CONFIG_SOUND_MAESTRO
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND == 1 || $CONFIG_SOUND == 2 || $CONFIG_SOUND == 4) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SOUND $CONFIG_PCI]];set CONFIG_SOUND_MAESTRO [sync_tristate $CONFIG_SOUND_MAESTRO $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu76.config.f.x26 disabled {y}} else {configure_entry .menu76.config.f.x26 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu76.config.f.x26 disabled {m}} else {configure_entry .menu76.config.f.x26 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu76.config.f.x26 normal {m}} else {configure_entry .menu76.config.f.x26 disabled {m}}; configure_entry .menu76.config.f.x26 normal {n l}} else {configure_entry .menu76.config.f.x26 disabled {y n m l}}
	global CONFIG_SOUND_MAESTRO3
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND == 1 || $CONFIG_SOUND == 2 || $CONFIG_SOUND == 4) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SOUND $CONFIG_PCI $CONFIG_EXPERIMENTAL]];set CONFIG_SOUND_MAESTRO3 [sync_tristate $CONFIG_SOUND_MAESTRO3 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu76.config.f.x27 disabled {y}} else {configure_entry .menu76.config.f.x27 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu76.config.f.x27 disabled {m}} else {configure_entry .menu76.config.f.x27 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu76.config.f.x27 normal {m}} else {configure_entry .menu76.config.f.x27 disabled {m}}; configure_entry .menu76.config.f.x27 normal {n l}} else {configure_entry .menu76.config.f.x27 disabled {y n m l}}
	global CONFIG_SOUND_FORTE
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND == 1 || $CONFIG_SOUND == 2 || $CONFIG_SOUND == 4) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SOUND $CONFIG_PCI $CONFIG_EXPERIMENTAL]];set CONFIG_SOUND_FORTE [sync_tristate $CONFIG_SOUND_FORTE $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu76.config.f.x28 disabled {y}} else {configure_entry .menu76.config.f.x28 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu76.config.f.x28 disabled {m}} else {configure_entry .menu76.config.f.x28 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu76.config.f.x28 normal {m}} else {configure_entry .menu76.config.f.x28 disabled {m}}; configure_entry .menu76.config.f.x28 normal {n l}} else {configure_entry .menu76.config.f.x28 disabled {y n m l}}
	global CONFIG_SOUND_ICH
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PCI]];set CONFIG_SOUND_ICH [sync_tristate $CONFIG_SOUND_ICH $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu76.config.f.x29 disabled {y}} else {configure_entry .menu76.config.f.x29 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu76.config.f.x29 disabled {m}} else {configure_entry .menu76.config.f.x29 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu76.config.f.x29 normal {m}} else {configure_entry .menu76.config.f.x29 disabled {m}}; configure_entry .menu76.config.f.x29 normal {n l}} else {configure_entry .menu76.config.f.x29 disabled {y n m l}}
	global CONFIG_SOUND_RME96XX
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND == 1 || $CONFIG_SOUND == 2 || $CONFIG_SOUND == 4) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SOUND $CONFIG_PCI $CONFIG_EXPERIMENTAL]];set CONFIG_SOUND_RME96XX [sync_tristate $CONFIG_SOUND_RME96XX $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu76.config.f.x30 disabled {y}} else {configure_entry .menu76.config.f.x30 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu76.config.f.x30 disabled {m}} else {configure_entry .menu76.config.f.x30 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu76.config.f.x30 normal {m}} else {configure_entry .menu76.config.f.x30 disabled {m}}; configure_entry .menu76.config.f.x30 normal {n l}} else {configure_entry .menu76.config.f.x30 disabled {y n m l}}
	global CONFIG_SOUND_SONICVIBES
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND == 1 || $CONFIG_SOUND == 2 || $CONFIG_SOUND == 4) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SOUND $CONFIG_PCI]];set CONFIG_SOUND_SONICVIBES [sync_tristate $CONFIG_SOUND_SONICVIBES $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu76.config.f.x31 disabled {y}} else {configure_entry .menu76.config.f.x31 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu76.config.f.x31 disabled {m}} else {configure_entry .menu76.config.f.x31 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu76.config.f.x31 normal {m}} else {configure_entry .menu76.config.f.x31 disabled {m}}; configure_entry .menu76.config.f.x31 normal {n l}} else {configure_entry .menu76.config.f.x31 disabled {y n m l}}
	global CONFIG_SOUND_TRIDENT
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND == 1 || $CONFIG_SOUND == 2 || $CONFIG_SOUND == 4) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SOUND $CONFIG_PCI]];set CONFIG_SOUND_TRIDENT [sync_tristate $CONFIG_SOUND_TRIDENT $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu76.config.f.x32 disabled {y}} else {configure_entry .menu76.config.f.x32 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu76.config.f.x32 disabled {m}} else {configure_entry .menu76.config.f.x32 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu76.config.f.x32 normal {m}} else {configure_entry .menu76.config.f.x32 disabled {m}}; configure_entry .menu76.config.f.x32 normal {n l}} else {configure_entry .menu76.config.f.x32 disabled {y n m l}}
	global CONFIG_SOUND_MSNDCLAS
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND == 1 || $CONFIG_SOUND == 2 || $CONFIG_SOUND == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SOUND]];set CONFIG_SOUND_MSNDCLAS [sync_tristate $CONFIG_SOUND_MSNDCLAS $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu76.config.f.x33 disabled {y}} else {configure_entry .menu76.config.f.x33 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu76.config.f.x33 disabled {m}} else {configure_entry .menu76.config.f.x33 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu76.config.f.x33 normal {m}} else {configure_entry .menu76.config.f.x33 disabled {m}}; configure_entry .menu76.config.f.x33 normal {n l}} else {configure_entry .menu76.config.f.x33 disabled {y n m l}}
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_MSNDCLAS == 1 || $CONFIG_SOUND_MSNDCLAS == 2) && ($CONFIG_SOUND_MSNDCLAS == 1)} then {configure_entry .menu76.config.f.x34 normal {m}} else {configure_entry .menu76.config.f.x34 disabled {m}}
	global CONFIG_MSNDCLAS_INIT_FILE
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_MSNDCLAS == 1 || $CONFIG_SOUND_MSNDCLAS == 2)} then {.menu76.config.f.x35.x configure -state normal -foreground [ cget .ref -foreground ]; .menu76.config.f.x35.l configure -state normal; } else {.menu76.config.f.x35.x configure -state disabled -foreground [ cget .ref -disabledforeground ]; .menu76.config.f.x35.l configure -state disabled}
	global CONFIG_MSNDCLAS_PERM_FILE
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_MSNDCLAS == 1 || $CONFIG_SOUND_MSNDCLAS == 2)} then {.menu76.config.f.x36.x configure -state normal -foreground [ cget .ref -foreground ]; .menu76.config.f.x36.l configure -state normal; } else {.menu76.config.f.x36.x configure -state disabled -foreground [ cget .ref -disabledforeground ]; .menu76.config.f.x36.l configure -state disabled}
	global CONFIG_MSNDCLAS_IRQ
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_MSNDCLAS == 1)} then {.menu76.config.f.x37.x configure -state normal -foreground [ cget .ref -foreground ]; .menu76.config.f.x37.l configure -state normal; } else {.menu76.config.f.x37.x configure -state disabled -foreground [ cget .ref -disabledforeground ]; .menu76.config.f.x37.l configure -state disabled}
	global CONFIG_MSNDCLAS_MEM
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_MSNDCLAS == 1)} then {.menu76.config.f.x38.x configure -state normal -foreground [ cget .ref -foreground ]; .menu76.config.f.x38.l configure -state normal; } else {.menu76.config.f.x38.x configure -state disabled -foreground [ cget .ref -disabledforeground ]; .menu76.config.f.x38.l configure -state disabled}
	global CONFIG_MSNDCLAS_IO
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_MSNDCLAS == 1)} then {.menu76.config.f.x39.x configure -state normal -foreground [ cget .ref -foreground ]; .menu76.config.f.x39.l configure -state normal; } else {.menu76.config.f.x39.x configure -state disabled -foreground [ cget .ref -disabledforeground ]; .menu76.config.f.x39.l configure -state disabled}
	global CONFIG_SOUND_MSNDPIN
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND == 1 || $CONFIG_SOUND == 2 || $CONFIG_SOUND == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SOUND]];set CONFIG_SOUND_MSNDPIN [sync_tristate $CONFIG_SOUND_MSNDPIN $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu76.config.f.x40 disabled {y}} else {configure_entry .menu76.config.f.x40 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu76.config.f.x40 disabled {m}} else {configure_entry .menu76.config.f.x40 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu76.config.f.x40 normal {m}} else {configure_entry .menu76.config.f.x40 disabled {m}}; configure_entry .menu76.config.f.x40 normal {n l}} else {configure_entry .menu76.config.f.x40 disabled {y n m l}}
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_MSNDPIN == 1 || $CONFIG_SOUND_MSNDPIN == 2) && ($CONFIG_SOUND_MSNDPIN == 1)} then {configure_entry .menu76.config.f.x41 normal {m}} else {configure_entry .menu76.config.f.x41 disabled {m}}
	global CONFIG_MSNDPIN_INIT_FILE
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_MSNDPIN == 1 || $CONFIG_SOUND_MSNDPIN == 2)} then {.menu76.config.f.x42.x configure -state normal -foreground [ cget .ref -foreground ]; .menu76.config.f.x42.l configure -state normal; } else {.menu76.config.f.x42.x configure -state disabled -foreground [ cget .ref -disabledforeground ]; .menu76.config.f.x42.l configure -state disabled}
	global CONFIG_MSNDPIN_PERM_FILE
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_MSNDPIN == 1 || $CONFIG_SOUND_MSNDPIN == 2)} then {.menu76.config.f.x43.x configure -state normal -foreground [ cget .ref -foreground ]; .menu76.config.f.x43.l configure -state normal; } else {.menu76.config.f.x43.x configure -state disabled -foreground [ cget .ref -disabledforeground ]; .menu76.config.f.x43.l configure -state disabled}
	global CONFIG_MSNDPIN_IRQ
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_MSNDPIN == 1)} then {.menu76.config.f.x44.x configure -state normal -foreground [ cget .ref -foreground ]; .menu76.config.f.x44.l configure -state normal; } else {.menu76.config.f.x44.x configure -state disabled -foreground [ cget .ref -disabledforeground ]; .menu76.config.f.x44.l configure -state disabled}
	global CONFIG_MSNDPIN_MEM
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_MSNDPIN == 1)} then {.menu76.config.f.x45.x configure -state normal -foreground [ cget .ref -foreground ]; .menu76.config.f.x45.l configure -state normal; } else {.menu76.config.f.x45.x configure -state disabled -foreground [ cget .ref -disabledforeground ]; .menu76.config.f.x45.l configure -state disabled}
	global CONFIG_MSNDPIN_IO
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_MSNDPIN == 1)} then {.menu76.config.f.x46.x configure -state normal -foreground [ cget .ref -foreground ]; .menu76.config.f.x46.l configure -state normal; } else {.menu76.config.f.x46.x configure -state disabled -foreground [ cget .ref -disabledforeground ]; .menu76.config.f.x46.l configure -state disabled}
	global CONFIG_MSNDPIN_DIGITAL
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_MSNDPIN == 1)} then {
	configure_entry .menu76.config.f.x47 normal {n l y}} else {configure_entry .menu76.config.f.x47 disabled {y n l}}
	global CONFIG_MSNDPIN_NONPNP
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_MSNDPIN == 1)} then {
	configure_entry .menu76.config.f.x48 normal {n l y}} else {configure_entry .menu76.config.f.x48 disabled {y n l}}
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_MSNDPIN == 1) && ($CONFIG_MSNDPIN_NONPNP == 1)} then {configure_entry .menu76.config.f.x49 normal {m}} else {configure_entry .menu76.config.f.x49 disabled {m}}
	global CONFIG_MSNDPIN_CFG
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_MSNDPIN == 1) && ($CONFIG_MSNDPIN_NONPNP == 1)} then {.menu76.config.f.x50.x configure -state normal -foreground [ cget .ref -foreground ]; .menu76.config.f.x50.l configure -state normal; } else {.menu76.config.f.x50.x configure -state disabled -foreground [ cget .ref -disabledforeground ]; .menu76.config.f.x50.l configure -state disabled}
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_MSNDPIN == 1) && ($CONFIG_MSNDPIN_NONPNP == 1)} then {configure_entry .menu76.config.f.x51 normal {m}} else {configure_entry .menu76.config.f.x51 disabled {m}}
	global CONFIG_MSNDPIN_MPU_IO
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_MSNDPIN == 1) && ($CONFIG_MSNDPIN_NONPNP == 1)} then {.menu76.config.f.x52.x configure -state normal -foreground [ cget .ref -foreground ]; .menu76.config.f.x52.l configure -state normal; } else {.menu76.config.f.x52.x configure -state disabled -foreground [ cget .ref -disabledforeground ]; .menu76.config.f.x52.l configure -state disabled}
	global CONFIG_MSNDPIN_MPU_IRQ
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_MSNDPIN == 1) && ($CONFIG_MSNDPIN_NONPNP == 1)} then {.menu76.config.f.x53.x configure -state normal -foreground [ cget .ref -foreground ]; .menu76.config.f.x53.l configure -state normal; } else {.menu76.config.f.x53.x configure -state disabled -foreground [ cget .ref -disabledforeground ]; .menu76.config.f.x53.l configure -state disabled}
	global CONFIG_MSNDPIN_IDE_IO0
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_MSNDPIN == 1) && ($CONFIG_MSNDPIN_NONPNP == 1)} then {.menu76.config.f.x54.x configure -state normal -foreground [ cget .ref -foreground ]; .menu76.config.f.x54.l configure -state normal; } else {.menu76.config.f.x54.x configure -state disabled -foreground [ cget .ref -disabledforeground ]; .menu76.config.f.x54.l configure -state disabled}
	global CONFIG_MSNDPIN_IDE_IO1
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_MSNDPIN == 1) && ($CONFIG_MSNDPIN_NONPNP == 1)} then {.menu76.config.f.x55.x configure -state normal -foreground [ cget .ref -foreground ]; .menu76.config.f.x55.l configure -state normal; } else {.menu76.config.f.x55.x configure -state disabled -foreground [ cget .ref -disabledforeground ]; .menu76.config.f.x55.l configure -state disabled}
	global CONFIG_MSNDPIN_IDE_IRQ
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_MSNDPIN == 1) && ($CONFIG_MSNDPIN_NONPNP == 1)} then {.menu76.config.f.x56.x configure -state normal -foreground [ cget .ref -foreground ]; .menu76.config.f.x56.l configure -state normal; } else {.menu76.config.f.x56.x configure -state disabled -foreground [ cget .ref -disabledforeground ]; .menu76.config.f.x56.l configure -state disabled}
	global CONFIG_MSNDPIN_JOYSTICK_IO
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_MSNDPIN == 1) && ($CONFIG_MSNDPIN_NONPNP == 1)} then {.menu76.config.f.x57.x configure -state normal -foreground [ cget .ref -foreground ]; .menu76.config.f.x57.l configure -state normal; } else {.menu76.config.f.x57.x configure -state disabled -foreground [ cget .ref -disabledforeground ]; .menu76.config.f.x57.l configure -state disabled}
	global CONFIG_MSND_FIFOSIZE
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_MSNDPIN == 1 || $CONFIG_SOUND_MSNDCLAS == 1)} then {.menu76.config.f.x58.x configure -state normal -foreground [ cget .ref -foreground ]; .menu76.config.f.x58.l configure -state normal; } else {.menu76.config.f.x58.x configure -state disabled -foreground [ cget .ref -disabledforeground ]; .menu76.config.f.x58.l configure -state disabled}
	global CONFIG_SOUND_VIA82CXXX
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PCI]];set CONFIG_SOUND_VIA82CXXX [sync_tristate $CONFIG_SOUND_VIA82CXXX $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu76.config.f.x59 disabled {y}} else {configure_entry .menu76.config.f.x59 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu76.config.f.x59 disabled {m}} else {configure_entry .menu76.config.f.x59 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu76.config.f.x59 normal {m}} else {configure_entry .menu76.config.f.x59 disabled {m}}; configure_entry .menu76.config.f.x59 normal {n l}} else {configure_entry .menu76.config.f.x59 disabled {y n m l}}
	global CONFIG_MIDI_VIA82CXXX
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_VIA82CXXX == 1 || $CONFIG_SOUND_VIA82CXXX == 2 || $CONFIG_SOUND_VIA82CXXX == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SOUND_VIA82CXXX]];set CONFIG_MIDI_VIA82CXXX [sync_bool $CONFIG_MIDI_VIA82CXXX $tmpvar_dep 1];if {$tmpvar_dep != 1 && $tmpvar_dep != 2} then {configure_entry .menu76.config.f.x60 disabled {y};} else {configure_entry .menu76.config.f.x60 normal {y};}; configure_entry .menu76.config.f.x60 normal {n l}} else {configure_entry .menu76.config.f.x60 disabled {y n l}}
	global CONFIG_SOUND_OSS
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND == 1 || $CONFIG_SOUND == 2 || $CONFIG_SOUND == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SOUND]];set CONFIG_SOUND_OSS [sync_tristate $CONFIG_SOUND_OSS $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu76.config.f.x61 disabled {y}} else {configure_entry .menu76.config.f.x61 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu76.config.f.x61 disabled {m}} else {configure_entry .menu76.config.f.x61 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu76.config.f.x61 normal {m}} else {configure_entry .menu76.config.f.x61 disabled {m}}; configure_entry .menu76.config.f.x61 normal {n l}} else {configure_entry .menu76.config.f.x61 disabled {y n m l}}
	global CONFIG_SOUND_TRACEINIT
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2)} then {
	configure_entry .menu76.config.f.x62 normal {n l y}} else {configure_entry .menu76.config.f.x62 disabled {y n l}}
	global CONFIG_SOUND_DMAP
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2)} then {
	configure_entry .menu76.config.f.x63 normal {n l y}} else {configure_entry .menu76.config.f.x63 disabled {y n l}}
	global CONFIG_SOUND_AD1816
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2 || $CONFIG_SOUND_OSS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SOUND_OSS]];set CONFIG_SOUND_AD1816 [sync_tristate $CONFIG_SOUND_AD1816 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu76.config.f.x64 disabled {y}} else {configure_entry .menu76.config.f.x64 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu76.config.f.x64 disabled {m}} else {configure_entry .menu76.config.f.x64 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu76.config.f.x64 normal {m}} else {configure_entry .menu76.config.f.x64 disabled {m}}; configure_entry .menu76.config.f.x64 normal {n l}} else {configure_entry .menu76.config.f.x64 disabled {y n m l}}
	global CONFIG_SOUND_AD1889
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2 || $CONFIG_SOUND_OSS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SOUND_OSS]];set CONFIG_SOUND_AD1889 [sync_tristate $CONFIG_SOUND_AD1889 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu76.config.f.x65 disabled {y}} else {configure_entry .menu76.config.f.x65 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu76.config.f.x65 disabled {m}} else {configure_entry .menu76.config.f.x65 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu76.config.f.x65 normal {m}} else {configure_entry .menu76.config.f.x65 disabled {m}}; configure_entry .menu76.config.f.x65 normal {n l}} else {configure_entry .menu76.config.f.x65 disabled {y n m l}}
	global CONFIG_SOUND_SGALAXY
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2 || $CONFIG_SOUND_OSS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SOUND_OSS]];set CONFIG_SOUND_SGALAXY [sync_tristate $CONFIG_SOUND_SGALAXY $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu76.config.f.x66 disabled {y}} else {configure_entry .menu76.config.f.x66 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu76.config.f.x66 disabled {m}} else {configure_entry .menu76.config.f.x66 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu76.config.f.x66 normal {m}} else {configure_entry .menu76.config.f.x66 disabled {m}}; configure_entry .menu76.config.f.x66 normal {n l}} else {configure_entry .menu76.config.f.x66 disabled {y n m l}}
	global CONFIG_SOUND_ADLIB
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2 || $CONFIG_SOUND_OSS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SOUND_OSS]];set CONFIG_SOUND_ADLIB [sync_tristate $CONFIG_SOUND_ADLIB $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu76.config.f.x67 disabled {y}} else {configure_entry .menu76.config.f.x67 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu76.config.f.x67 disabled {m}} else {configure_entry .menu76.config.f.x67 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu76.config.f.x67 normal {m}} else {configure_entry .menu76.config.f.x67 disabled {m}}; configure_entry .menu76.config.f.x67 normal {n l}} else {configure_entry .menu76.config.f.x67 disabled {y n m l}}
	global CONFIG_SOUND_ACI_MIXER
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2 || $CONFIG_SOUND_OSS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SOUND_OSS]];set CONFIG_SOUND_ACI_MIXER [sync_tristate $CONFIG_SOUND_ACI_MIXER $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu76.config.f.x68 disabled {y}} else {configure_entry .menu76.config.f.x68 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu76.config.f.x68 disabled {m}} else {configure_entry .menu76.config.f.x68 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu76.config.f.x68 normal {m}} else {configure_entry .menu76.config.f.x68 disabled {m}}; configure_entry .menu76.config.f.x68 normal {n l}} else {configure_entry .menu76.config.f.x68 disabled {y n m l}}
	global CONFIG_SOUND_CS4232
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2 || $CONFIG_SOUND_OSS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SOUND_OSS]];set CONFIG_SOUND_CS4232 [sync_tristate $CONFIG_SOUND_CS4232 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu76.config.f.x69 disabled {y}} else {configure_entry .menu76.config.f.x69 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu76.config.f.x69 disabled {m}} else {configure_entry .menu76.config.f.x69 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu76.config.f.x69 normal {m}} else {configure_entry .menu76.config.f.x69 disabled {m}}; configure_entry .menu76.config.f.x69 normal {n l}} else {configure_entry .menu76.config.f.x69 disabled {y n m l}}
	global CONFIG_SOUND_SSCAPE
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2 || $CONFIG_SOUND_OSS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SOUND_OSS]];set CONFIG_SOUND_SSCAPE [sync_tristate $CONFIG_SOUND_SSCAPE $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu76.config.f.x70 disabled {y}} else {configure_entry .menu76.config.f.x70 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu76.config.f.x70 disabled {m}} else {configure_entry .menu76.config.f.x70 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu76.config.f.x70 normal {m}} else {configure_entry .menu76.config.f.x70 disabled {m}}; configure_entry .menu76.config.f.x70 normal {n l}} else {configure_entry .menu76.config.f.x70 disabled {y n m l}}
	global CONFIG_SOUND_GUS
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2 || $CONFIG_SOUND_OSS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SOUND_OSS]];set CONFIG_SOUND_GUS [sync_tristate $CONFIG_SOUND_GUS $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu76.config.f.x71 disabled {y}} else {configure_entry .menu76.config.f.x71 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu76.config.f.x71 disabled {m}} else {configure_entry .menu76.config.f.x71 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu76.config.f.x71 normal {m}} else {configure_entry .menu76.config.f.x71 disabled {m}}; configure_entry .menu76.config.f.x71 normal {n l}} else {configure_entry .menu76.config.f.x71 disabled {y n m l}}
	global CONFIG_SOUND_GUS16
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_SOUND_GUS != 0)} then {
	configure_entry .menu76.config.f.x72 normal {n l y}} else {configure_entry .menu76.config.f.x72 disabled {y n l}}
	global CONFIG_SOUND_GUSMAX
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_SOUND_GUS != 0)} then {
	configure_entry .menu76.config.f.x73 normal {n l y}} else {configure_entry .menu76.config.f.x73 disabled {y n l}}
	global CONFIG_SOUND_VMIDI
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2 || $CONFIG_SOUND_OSS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SOUND_OSS]];set CONFIG_SOUND_VMIDI [sync_tristate $CONFIG_SOUND_VMIDI $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu76.config.f.x74 disabled {y}} else {configure_entry .menu76.config.f.x74 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu76.config.f.x74 disabled {m}} else {configure_entry .menu76.config.f.x74 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu76.config.f.x74 normal {m}} else {configure_entry .menu76.config.f.x74 disabled {m}}; configure_entry .menu76.config.f.x74 normal {n l}} else {configure_entry .menu76.config.f.x74 disabled {y n m l}}
	global CONFIG_SOUND_TRIX
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2 || $CONFIG_SOUND_OSS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SOUND_OSS]];set CONFIG_SOUND_TRIX [sync_tristate $CONFIG_SOUND_TRIX $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu76.config.f.x75 disabled {y}} else {configure_entry .menu76.config.f.x75 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu76.config.f.x75 disabled {m}} else {configure_entry .menu76.config.f.x75 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu76.config.f.x75 normal {m}} else {configure_entry .menu76.config.f.x75 disabled {m}}; configure_entry .menu76.config.f.x75 normal {n l}} else {configure_entry .menu76.config.f.x75 disabled {y n m l}}
	global CONFIG_TRIX_HAVE_BOOT
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_SOUND_TRIX == 1)} then {
	configure_entry .menu76.config.f.x76 normal {n l y}} else {configure_entry .menu76.config.f.x76 disabled {y n l}}
	global CONFIG_TRIX_BOOT_FILE
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_SOUND_TRIX == 1) && ($CONFIG_TRIX_HAVE_BOOT == 1)} then {.menu76.config.f.x77.x configure -state normal -foreground [ cget .ref -foreground ]; .menu76.config.f.x77.l configure -state normal; } else {.menu76.config.f.x77.x configure -state disabled -foreground [ cget .ref -disabledforeground ]; .menu76.config.f.x77.l configure -state disabled}
	global CONFIG_SOUND_MSS
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2 || $CONFIG_SOUND_OSS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SOUND_OSS]];set CONFIG_SOUND_MSS [sync_tristate $CONFIG_SOUND_MSS $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu76.config.f.x78 disabled {y}} else {configure_entry .menu76.config.f.x78 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu76.config.f.x78 disabled {m}} else {configure_entry .menu76.config.f.x78 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu76.config.f.x78 normal {m}} else {configure_entry .menu76.config.f.x78 disabled {m}}; configure_entry .menu76.config.f.x78 normal {n l}} else {configure_entry .menu76.config.f.x78 disabled {y n m l}}
	global CONFIG_SOUND_MPU401
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2 || $CONFIG_SOUND_OSS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SOUND_OSS]];set CONFIG_SOUND_MPU401 [sync_tristate $CONFIG_SOUND_MPU401 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu76.config.f.x79 disabled {y}} else {configure_entry .menu76.config.f.x79 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu76.config.f.x79 disabled {m}} else {configure_entry .menu76.config.f.x79 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu76.config.f.x79 normal {m}} else {configure_entry .menu76.config.f.x79 disabled {m}}; configure_entry .menu76.config.f.x79 normal {n l}} else {configure_entry .menu76.config.f.x79 disabled {y n m l}}
	global CONFIG_SOUND_NM256
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2 || $CONFIG_SOUND_OSS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SOUND_OSS]];set CONFIG_SOUND_NM256 [sync_tristate $CONFIG_SOUND_NM256 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu76.config.f.x80 disabled {y}} else {configure_entry .menu76.config.f.x80 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu76.config.f.x80 disabled {m}} else {configure_entry .menu76.config.f.x80 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu76.config.f.x80 normal {m}} else {configure_entry .menu76.config.f.x80 disabled {m}}; configure_entry .menu76.config.f.x80 normal {n l}} else {configure_entry .menu76.config.f.x80 disabled {y n m l}}
	global CONFIG_SOUND_MAD16
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2 || $CONFIG_SOUND_OSS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SOUND_OSS]];set CONFIG_SOUND_MAD16 [sync_tristate $CONFIG_SOUND_MAD16 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu76.config.f.x81 disabled {y}} else {configure_entry .menu76.config.f.x81 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu76.config.f.x81 disabled {m}} else {configure_entry .menu76.config.f.x81 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu76.config.f.x81 normal {m}} else {configure_entry .menu76.config.f.x81 disabled {m}}; configure_entry .menu76.config.f.x81 normal {n l}} else {configure_entry .menu76.config.f.x81 disabled {y n m l}}
	global CONFIG_MAD16_OLDCARD
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_SOUND_MAD16 == 1 || $CONFIG_SOUND_MAD16 == 2)} then {
	configure_entry .menu76.config.f.x82 normal {n l y}} else {configure_entry .menu76.config.f.x82 disabled {y n l}}
	global CONFIG_SOUND_PAS
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2 || $CONFIG_SOUND_OSS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SOUND_OSS]];set CONFIG_SOUND_PAS [sync_tristate $CONFIG_SOUND_PAS $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu76.config.f.x83 disabled {y}} else {configure_entry .menu76.config.f.x83 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu76.config.f.x83 disabled {m}} else {configure_entry .menu76.config.f.x83 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu76.config.f.x83 normal {m}} else {configure_entry .menu76.config.f.x83 disabled {m}}; configure_entry .menu76.config.f.x83 normal {n l}} else {configure_entry .menu76.config.f.x83 disabled {y n m l}}
	global CONFIG_PAS_JOYSTICK
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_SOUND_PAS == 1 || $CONFIG_SOUND_PAS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SOUND_PAS]];set CONFIG_PAS_JOYSTICK [sync_bool $CONFIG_PAS_JOYSTICK $tmpvar_dep 0];if {$tmpvar_dep != 1} then {configure_entry .menu76.config.f.x84 disabled {y};} else {configure_entry .menu76.config.f.x84 normal {y};}; configure_entry .menu76.config.f.x84 normal {n l}} else {configure_entry .menu76.config.f.x84 disabled {y n l}}
	global CONFIG_SOUND_PSS
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2 || $CONFIG_SOUND_OSS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SOUND_OSS]];set CONFIG_SOUND_PSS [sync_tristate $CONFIG_SOUND_PSS $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu76.config.f.x85 disabled {y}} else {configure_entry .menu76.config.f.x85 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu76.config.f.x85 disabled {m}} else {configure_entry .menu76.config.f.x85 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu76.config.f.x85 normal {m}} else {configure_entry .menu76.config.f.x85 disabled {m}}; configure_entry .menu76.config.f.x85 normal {n l}} else {configure_entry .menu76.config.f.x85 disabled {y n m l}}
	global CONFIG_PSS_MIXER
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_SOUND_PSS == 1 || $CONFIG_SOUND_PSS == 2)} then {
	configure_entry .menu76.config.f.x86 normal {n l y}} else {configure_entry .menu76.config.f.x86 disabled {y n l}}
	global CONFIG_PSS_HAVE_BOOT
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_SOUND_PSS == 1 || $CONFIG_SOUND_PSS == 2)} then {
	configure_entry .menu76.config.f.x87 normal {n l y}} else {configure_entry .menu76.config.f.x87 disabled {y n l}}
	global CONFIG_PSS_BOOT_FILE
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_SOUND_PSS == 1 || $CONFIG_SOUND_PSS == 2) && ($CONFIG_PSS_HAVE_BOOT == 1)} then {.menu76.config.f.x88.x configure -state normal -foreground [ cget .ref -foreground ]; .menu76.config.f.x88.l configure -state normal; } else {.menu76.config.f.x88.x configure -state disabled -foreground [ cget .ref -disabledforeground ]; .menu76.config.f.x88.l configure -state disabled}
	global CONFIG_SOUND_SB
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2 || $CONFIG_SOUND_OSS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SOUND_OSS]];set CONFIG_SOUND_SB [sync_tristate $CONFIG_SOUND_SB $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu76.config.f.x89 disabled {y}} else {configure_entry .menu76.config.f.x89 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu76.config.f.x89 disabled {m}} else {configure_entry .menu76.config.f.x89 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu76.config.f.x89 normal {m}} else {configure_entry .menu76.config.f.x89 disabled {m}}; configure_entry .menu76.config.f.x89 normal {n l}} else {configure_entry .menu76.config.f.x89 disabled {y n m l}}
	global CONFIG_SOUND_AWE32_SYNTH
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2 || $CONFIG_SOUND_OSS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SOUND_OSS]];set CONFIG_SOUND_AWE32_SYNTH [sync_tristate $CONFIG_SOUND_AWE32_SYNTH $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu76.config.f.x90 disabled {y}} else {configure_entry .menu76.config.f.x90 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu76.config.f.x90 disabled {m}} else {configure_entry .menu76.config.f.x90 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu76.config.f.x90 normal {m}} else {configure_entry .menu76.config.f.x90 disabled {m}}; configure_entry .menu76.config.f.x90 normal {n l}} else {configure_entry .menu76.config.f.x90 disabled {y n m l}}
	global CONFIG_SOUND_KAHLUA
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_SOUND_SB == 1 || $CONFIG_SOUND_SB == 2 || $CONFIG_SOUND_SB == 4) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2 || $CONFIG_SOUND_OSS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SOUND_SB $CONFIG_SOUND_OSS]];set CONFIG_SOUND_KAHLUA [sync_tristate $CONFIG_SOUND_KAHLUA $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu76.config.f.x91 disabled {y}} else {configure_entry .menu76.config.f.x91 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu76.config.f.x91 disabled {m}} else {configure_entry .menu76.config.f.x91 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu76.config.f.x91 normal {m}} else {configure_entry .menu76.config.f.x91 disabled {m}}; configure_entry .menu76.config.f.x91 normal {n l}} else {configure_entry .menu76.config.f.x91 disabled {y n m l}}
	global CONFIG_SOUND_WAVEFRONT
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2 || $CONFIG_SOUND_OSS == 4)} then {
	global CONSTANT_M
	set tmpvar_dep [effective_dep [list $CONFIG_SOUND_OSS $CONSTANT_M]];set CONFIG_SOUND_WAVEFRONT [sync_tristate $CONFIG_SOUND_WAVEFRONT $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu76.config.f.x92 disabled {y}} else {configure_entry .menu76.config.f.x92 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu76.config.f.x92 disabled {m}} else {configure_entry .menu76.config.f.x92 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu76.config.f.x92 normal {m}} else {configure_entry .menu76.config.f.x92 disabled {m}}; configure_entry .menu76.config.f.x92 normal {n l}} else {configure_entry .menu76.config.f.x92 disabled {y n m l}}
	global CONFIG_SOUND_MAUI
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2 || $CONFIG_SOUND_OSS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SOUND_OSS]];set CONFIG_SOUND_MAUI [sync_tristate $CONFIG_SOUND_MAUI $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu76.config.f.x93 disabled {y}} else {configure_entry .menu76.config.f.x93 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu76.config.f.x93 disabled {m}} else {configure_entry .menu76.config.f.x93 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu76.config.f.x93 normal {m}} else {configure_entry .menu76.config.f.x93 disabled {m}}; configure_entry .menu76.config.f.x93 normal {n l}} else {configure_entry .menu76.config.f.x93 disabled {y n m l}}
	global CONFIG_MAUI_HAVE_BOOT
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_SOUND_MAUI == 1)} then {
	configure_entry .menu76.config.f.x94 normal {n l y}} else {configure_entry .menu76.config.f.x94 disabled {y n l}}
	global CONFIG_MAUI_BOOT_FILE
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_SOUND_MAUI == 1) && ($CONFIG_MAUI_HAVE_BOOT == 1)} then {.menu76.config.f.x95.x configure -state normal -foreground [ cget .ref -foreground ]; .menu76.config.f.x95.l configure -state normal; } else {.menu76.config.f.x95.x configure -state disabled -foreground [ cget .ref -disabledforeground ]; .menu76.config.f.x95.l configure -state disabled}
	global CONFIG_SOUND_YM3812
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2 || $CONFIG_SOUND_OSS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SOUND_OSS]];set CONFIG_SOUND_YM3812 [sync_tristate $CONFIG_SOUND_YM3812 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu76.config.f.x96 disabled {y}} else {configure_entry .menu76.config.f.x96 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu76.config.f.x96 disabled {m}} else {configure_entry .menu76.config.f.x96 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu76.config.f.x96 normal {m}} else {configure_entry .menu76.config.f.x96 disabled {m}}; configure_entry .menu76.config.f.x96 normal {n l}} else {configure_entry .menu76.config.f.x96 disabled {y n m l}}
	global CONFIG_SOUND_OPL3SA1
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2 || $CONFIG_SOUND_OSS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SOUND_OSS]];set CONFIG_SOUND_OPL3SA1 [sync_tristate $CONFIG_SOUND_OPL3SA1 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu76.config.f.x97 disabled {y}} else {configure_entry .menu76.config.f.x97 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu76.config.f.x97 disabled {m}} else {configure_entry .menu76.config.f.x97 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu76.config.f.x97 normal {m}} else {configure_entry .menu76.config.f.x97 disabled {m}}; configure_entry .menu76.config.f.x97 normal {n l}} else {configure_entry .menu76.config.f.x97 disabled {y n m l}}
	global CONFIG_SOUND_OPL3SA2
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2 || $CONFIG_SOUND_OSS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SOUND_OSS]];set CONFIG_SOUND_OPL3SA2 [sync_tristate $CONFIG_SOUND_OPL3SA2 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu76.config.f.x98 disabled {y}} else {configure_entry .menu76.config.f.x98 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu76.config.f.x98 disabled {m}} else {configure_entry .menu76.config.f.x98 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu76.config.f.x98 normal {m}} else {configure_entry .menu76.config.f.x98 disabled {m}}; configure_entry .menu76.config.f.x98 normal {n l}} else {configure_entry .menu76.config.f.x98 disabled {y n m l}}
	global CONFIG_SOUND_YMFPCI
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2 || $CONFIG_SOUND_OSS == 4) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SOUND_OSS $CONFIG_PCI]];set CONFIG_SOUND_YMFPCI [sync_tristate $CONFIG_SOUND_YMFPCI $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu76.config.f.x99 disabled {y}} else {configure_entry .menu76.config.f.x99 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu76.config.f.x99 disabled {m}} else {configure_entry .menu76.config.f.x99 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu76.config.f.x99 normal {m}} else {configure_entry .menu76.config.f.x99 disabled {m}}; configure_entry .menu76.config.f.x99 normal {n l}} else {configure_entry .menu76.config.f.x99 disabled {y n m l}}
	global CONFIG_SOUND_YMFPCI_LEGACY
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_SOUND_YMFPCI == 1 || $CONFIG_SOUND_YMFPCI == 2 || $CONFIG_SOUND_YMFPCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SOUND_YMFPCI]];set CONFIG_SOUND_YMFPCI_LEGACY [sync_bool $CONFIG_SOUND_YMFPCI_LEGACY $tmpvar_dep 1];if {$tmpvar_dep != 1 && $tmpvar_dep != 2} then {configure_entry .menu76.config.f.x100 disabled {y};} else {configure_entry .menu76.config.f.x100 normal {y};}; configure_entry .menu76.config.f.x100 normal {n l}} else {configure_entry .menu76.config.f.x100 disabled {y n l}}
	global CONFIG_SOUND_UART6850
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2 || $CONFIG_SOUND_OSS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SOUND_OSS]];set CONFIG_SOUND_UART6850 [sync_tristate $CONFIG_SOUND_UART6850 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu76.config.f.x101 disabled {y}} else {configure_entry .menu76.config.f.x101 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu76.config.f.x101 disabled {m}} else {configure_entry .menu76.config.f.x101 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu76.config.f.x101 normal {m}} else {configure_entry .menu76.config.f.x101 disabled {m}}; configure_entry .menu76.config.f.x101 normal {n l}} else {configure_entry .menu76.config.f.x101 disabled {y n m l}}
	global CONFIG_SOUND_AEDSP16
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2 || $CONFIG_SOUND_OSS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SOUND_OSS]];set CONFIG_SOUND_AEDSP16 [sync_tristate $CONFIG_SOUND_AEDSP16 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu76.config.f.x102 disabled {y}} else {configure_entry .menu76.config.f.x102 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu76.config.f.x102 disabled {m}} else {configure_entry .menu76.config.f.x102 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu76.config.f.x102 normal {m}} else {configure_entry .menu76.config.f.x102 disabled {m}}; configure_entry .menu76.config.f.x102 normal {n l}} else {configure_entry .menu76.config.f.x102 disabled {y n m l}}
	global CONFIG_SC6600
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_SOUND_AEDSP16 == 1 || $CONFIG_SOUND_AEDSP16 == 2)} then {
	configure_entry .menu76.config.f.x103 normal {n l y}} else {configure_entry .menu76.config.f.x103 disabled {y n l}}
	global CONFIG_SC6600_JOY
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_SOUND_AEDSP16 == 1 || $CONFIG_SOUND_AEDSP16 == 2) && ($CONFIG_SC6600 == 1)} then {
	configure_entry .menu76.config.f.x104 normal {n l y}} else {configure_entry .menu76.config.f.x104 disabled {y n l}}
	global CONFIG_SC6600_CDROM
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_SOUND_AEDSP16 == 1 || $CONFIG_SOUND_AEDSP16 == 2) && ($CONFIG_SC6600 == 1)} then {.menu76.config.f.x105.x configure -state normal -foreground [ cget .ref -foreground ]; .menu76.config.f.x105.l configure -state normal; } else {.menu76.config.f.x105.x configure -state disabled -foreground [ cget .ref -disabledforeground ]; .menu76.config.f.x105.l configure -state disabled}
	global CONFIG_SC6600_CDROMBASE
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_SOUND_AEDSP16 == 1 || $CONFIG_SOUND_AEDSP16 == 2) && ($CONFIG_SC6600 == 1)} then {.menu76.config.f.x106.x configure -state normal -foreground [ cget .ref -foreground ]; .menu76.config.f.x106.l configure -state normal; } else {.menu76.config.f.x106.x configure -state disabled -foreground [ cget .ref -disabledforeground ]; .menu76.config.f.x106.l configure -state disabled}
	global CONFIG_AEDSP16_MSS
	global CONFIG_AEDSP16_SBPRO
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_SOUND_AEDSP16 == 1 || $CONFIG_SOUND_AEDSP16 == 2) && ($CONFIG_SOUND_SB == 1 || $CONFIG_SOUND_SB == 2) && ($CONFIG_AEDSP16_MSS != 1)} then {
	configure_entry .menu76.config.f.x107 normal {n l y}} else {configure_entry .menu76.config.f.x107 disabled {y n l}}
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_SOUND_AEDSP16 == 1 || $CONFIG_SOUND_AEDSP16 == 2) && ($CONFIG_SOUND_MSS == 1 || $CONFIG_SOUND_MSS == 2) && ($CONFIG_AEDSP16_SBPRO != 1)} then {
	configure_entry .menu76.config.f.x108 normal {n l y}} else {configure_entry .menu76.config.f.x108 disabled {y n l}}
	global CONFIG_AEDSP16_MPU401
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_SOUND_AEDSP16 == 1 || $CONFIG_SOUND_AEDSP16 == 2) && ($CONFIG_SOUND_MPU401 == 1 || $CONFIG_SOUND_MPU401 == 2)} then {
	configure_entry .menu76.config.f.x109 normal {n l y}} else {configure_entry .menu76.config.f.x109 disabled {y n l}}
	global CONFIG_ARM
	global CONFIG_SOUND_VIDC
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_ARM == 1) && ($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2 || $CONFIG_SOUND_OSS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SOUND_OSS]];set CONFIG_SOUND_VIDC [sync_tristate $CONFIG_SOUND_VIDC $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu76.config.f.x110 disabled {y}} else {configure_entry .menu76.config.f.x110 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu76.config.f.x110 disabled {m}} else {configure_entry .menu76.config.f.x110 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu76.config.f.x110 normal {m}} else {configure_entry .menu76.config.f.x110 disabled {m}}; configure_entry .menu76.config.f.x110 normal {n l}} else {configure_entry .menu76.config.f.x110 disabled {y n m l}}
	global CONFIG_ARCH_NETWINDER
	global CONFIG_SOUND_WAVEARTIST
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_ARM == 1) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2 || $CONFIG_SOUND_OSS == 4) && ($CONFIG_ARCH_NETWINDER == 1 || $CONFIG_ARCH_NETWINDER == 2 || $CONFIG_ARCH_NETWINDER == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SOUND_OSS $CONFIG_ARCH_NETWINDER]];set CONFIG_SOUND_WAVEARTIST [sync_tristate $CONFIG_SOUND_WAVEARTIST $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu76.config.f.x111 disabled {y}} else {configure_entry .menu76.config.f.x111 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu76.config.f.x111 disabled {m}} else {configure_entry .menu76.config.f.x111 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu76.config.f.x111 normal {m}} else {configure_entry .menu76.config.f.x111 disabled {m}}; configure_entry .menu76.config.f.x111 normal {n l}} else {configure_entry .menu76.config.f.x111 disabled {y n m l}}
	global CONFIG_I2C
	global CONFIG_SOUND_TVMIXER
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND == 1 || $CONFIG_SOUND == 2 || $CONFIG_SOUND == 4) && ($CONFIG_I2C == 1 || $CONFIG_I2C == 2 || $CONFIG_I2C == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SOUND $CONFIG_I2C]];set CONFIG_SOUND_TVMIXER [sync_tristate $CONFIG_SOUND_TVMIXER $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu76.config.f.x112 disabled {y}} else {configure_entry .menu76.config.f.x112 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu76.config.f.x112 disabled {m}} else {configure_entry .menu76.config.f.x112 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu76.config.f.x112 normal {m}} else {configure_entry .menu76.config.f.x112 disabled {m}}; configure_entry .menu76.config.f.x112 normal {n l}} else {configure_entry .menu76.config.f.x112 disabled {y n m l}}
	global CONFIG_SOUND_AD1980
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND == 1 || $CONFIG_SOUND == 2 || $CONFIG_SOUND == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SOUND]];set CONFIG_SOUND_AD1980 [sync_tristate $CONFIG_SOUND_AD1980 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu76.config.f.x113 disabled {y}} else {configure_entry .menu76.config.f.x113 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu76.config.f.x113 disabled {m}} else {configure_entry .menu76.config.f.x113 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu76.config.f.x113 normal {m}} else {configure_entry .menu76.config.f.x113 disabled {m}}; configure_entry .menu76.config.f.x113 normal {n l}} else {configure_entry .menu76.config.f.x113 disabled {y n m l}}
	global CONFIG_SOUND_WM97XX
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND == 1 || $CONFIG_SOUND == 2 || $CONFIG_SOUND == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SOUND]];set CONFIG_SOUND_WM97XX [sync_tristate $CONFIG_SOUND_WM97XX $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu76.config.f.x114 disabled {y}} else {configure_entry .menu76.config.f.x114 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu76.config.f.x114 disabled {m}} else {configure_entry .menu76.config.f.x114 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu76.config.f.x114 normal {m}} else {configure_entry .menu76.config.f.x114 disabled {m}}; configure_entry .menu76.config.f.x114 normal {n l}} else {configure_entry .menu76.config.f.x114 disabled {y n m l}}
}


proc update_define_menu76 {} {
	update_define_mainmenu
	global CONFIG_MODULES
	global CONFIG_SOUND
	global CONFIG_SOUND_CMPCI_FMIO
	global CONFIG_MSNDCLAS_HAVE_BOOT
	global CONFIG_MSNDPIN_HAVE_BOOT
	global CONFIG_INPUT_GAMEPORT
set CONFIG_SOUND [expr $CONFIG_SOUND|16]
	global CONFIG_SOUND_ALI5455_CODECSPDIFOUT_PCMOUTSHARE
set CONFIG_SOUND_ALI5455_CODECSPDIFOUT_PCMOUTSHARE [expr $CONFIG_SOUND_ALI5455_CODECSPDIFOUT_PCMOUTSHARE|16]
	global CONFIG_SOUND_ALI5455_CODECSPDIFOUT_CODECINDEPENDENTDMA
set CONFIG_SOUND_ALI5455_CODECSPDIFOUT_CODECINDEPENDENTDMA [expr $CONFIG_SOUND_ALI5455_CODECSPDIFOUT_CODECINDEPENDENTDMA|16]
	global CONFIG_SOUND_ALI5455_CONTROLLERSPDIFOUT_PCMOUTSHARE
set CONFIG_SOUND_ALI5455_CONTROLLERSPDIFOUT_PCMOUTSHARE [expr $CONFIG_SOUND_ALI5455_CONTROLLERSPDIFOUT_PCMOUTSHARE|16]
	global CONFIG_SOUND_ALI5455_CONTROLLERSPDIFOUT_CONTROLLERINDEPENDENTDMA
set CONFIG_SOUND_ALI5455_CONTROLLERSPDIFOUT_CONTROLLERINDEPENDENTDMA [expr $CONFIG_SOUND_ALI5455_CONTROLLERSPDIFOUT_CONTROLLERINDEPENDENTDMA|16]
	global CONFIG_SOUND_CMPCI_FM
set CONFIG_SOUND_CMPCI_FM [expr $CONFIG_SOUND_CMPCI_FM|16]
	global CONFIG_SOUND_CMPCI_MIDI
set CONFIG_SOUND_CMPCI_MIDI [expr $CONFIG_SOUND_CMPCI_MIDI|16]
	global CONFIG_SOUND_CMPCI_JOYSTICK
set CONFIG_SOUND_CMPCI_JOYSTICK [expr $CONFIG_SOUND_CMPCI_JOYSTICK|16]
	global CONFIG_SOUND_CMPCI_CM8738
set CONFIG_SOUND_CMPCI_CM8738 [expr $CONFIG_SOUND_CMPCI_CM8738|16]
	global CONFIG_SOUND_CMPCI_SPDIFINVERSE
set CONFIG_SOUND_CMPCI_SPDIFINVERSE [expr $CONFIG_SOUND_CMPCI_SPDIFINVERSE|16]
	global CONFIG_SOUND_CMPCI_SPDIFLOOP
set CONFIG_SOUND_CMPCI_SPDIFLOOP [expr $CONFIG_SOUND_CMPCI_SPDIFLOOP|16]
	global CONFIG_SOUND_CMPCI_LINE_REAR
set CONFIG_SOUND_CMPCI_LINE_REAR [expr $CONFIG_SOUND_CMPCI_LINE_REAR|16]
	global CONFIG_SOUND_CMPCI_LINE_BASS
set CONFIG_SOUND_CMPCI_LINE_BASS [expr $CONFIG_SOUND_CMPCI_LINE_BASS|16]
	global CONFIG_MSNDPIN_DIGITAL
set CONFIG_MSNDPIN_DIGITAL [expr $CONFIG_MSNDPIN_DIGITAL|16]
	global CONFIG_MSNDPIN_NONPNP
set CONFIG_MSNDPIN_NONPNP [expr $CONFIG_MSNDPIN_NONPNP|16]
	global CONFIG_SOUND_TRACEINIT
set CONFIG_SOUND_TRACEINIT [expr $CONFIG_SOUND_TRACEINIT|16]
	global CONFIG_SOUND_DMAP
set CONFIG_SOUND_DMAP [expr $CONFIG_SOUND_DMAP|16]
	global CONFIG_SOUND_GUS16
set CONFIG_SOUND_GUS16 [expr $CONFIG_SOUND_GUS16|16]
	global CONFIG_SOUND_GUSMAX
set CONFIG_SOUND_GUSMAX [expr $CONFIG_SOUND_GUSMAX|16]
	global CONFIG_TRIX_HAVE_BOOT
set CONFIG_TRIX_HAVE_BOOT [expr $CONFIG_TRIX_HAVE_BOOT|16]
	global CONFIG_MAD16_OLDCARD
set CONFIG_MAD16_OLDCARD [expr $CONFIG_MAD16_OLDCARD|16]
	global CONFIG_PSS_MIXER
set CONFIG_PSS_MIXER [expr $CONFIG_PSS_MIXER|16]
	global CONFIG_PSS_HAVE_BOOT
set CONFIG_PSS_HAVE_BOOT [expr $CONFIG_PSS_HAVE_BOOT|16]
	global CONFIG_MAUI_HAVE_BOOT
set CONFIG_MAUI_HAVE_BOOT [expr $CONFIG_MAUI_HAVE_BOOT|16]
	global CONFIG_SC6600
set CONFIG_SC6600 [expr $CONFIG_SC6600|16]
	global CONFIG_SC6600_JOY
set CONFIG_SC6600_JOY [expr $CONFIG_SC6600_JOY|16]
	global CONFIG_AEDSP16_SBPRO
set CONFIG_AEDSP16_SBPRO [expr $CONFIG_AEDSP16_SBPRO|16]
	global CONFIG_AEDSP16_MSS
set CONFIG_AEDSP16_MSS [expr $CONFIG_AEDSP16_MSS|16]
	global CONFIG_AEDSP16_MPU401
set CONFIG_AEDSP16_MPU401 [expr $CONFIG_AEDSP16_MPU401|16]
	global CONFIG_ARCH_ACORN
	global CONFIG_ARCH_CLPS7500
	global CONFIG_ARCH_RISCSTATION
	global CONFIG_ARCH_TBOX
	global CONFIG_ARCH_SHARK
	global CONFIG_ARCH_SA1100
	global CONFIG_PCI
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_SOUND == 2)} then {set CONFIG_SOUND 1}; set CONFIG_SOUND [expr $CONFIG_SOUND&15]}
	global CONFIG_SOUND_ALI5455
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND == 1 || $CONFIG_SOUND == 2 || $CONFIG_SOUND == 4) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SOUND $CONFIG_PCI]]; set CONFIG_SOUND_ALI5455 [sync_tristate $CONFIG_SOUND_ALI5455 $tmpvar_dep]; set CONFIG_SOUND_ALI5455 [expr $CONFIG_SOUND_ALI5455&15]}
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_ALI5455 == 1 || $CONFIG_SOUND_ALI5455 == 2)} then {
	set CONFIG_SOUND_ALI5455_CODECSPDIFOUT_PCMOUTSHARE [expr $CONFIG_SOUND_ALI5455_CODECSPDIFOUT_PCMOUTSHARE&15]}
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_ALI5455 == 1 || $CONFIG_SOUND_ALI5455 == 2)} then {
	set CONFIG_SOUND_ALI5455_CODECSPDIFOUT_CODECINDEPENDENTDMA [expr $CONFIG_SOUND_ALI5455_CODECSPDIFOUT_CODECINDEPENDENTDMA&15]}
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_ALI5455 == 1 || $CONFIG_SOUND_ALI5455 == 2)} then {
	set CONFIG_SOUND_ALI5455_CONTROLLERSPDIFOUT_PCMOUTSHARE [expr $CONFIG_SOUND_ALI5455_CONTROLLERSPDIFOUT_PCMOUTSHARE&15]}
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_ALI5455 == 1 || $CONFIG_SOUND_ALI5455 == 2)} then {
	set CONFIG_SOUND_ALI5455_CONTROLLERSPDIFOUT_CONTROLLERINDEPENDENTDMA [expr $CONFIG_SOUND_ALI5455_CONTROLLERSPDIFOUT_CONTROLLERINDEPENDENTDMA&15]}
	global CONFIG_SOUND_BT878
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND == 1 || $CONFIG_SOUND == 2 || $CONFIG_SOUND == 4) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SOUND $CONFIG_PCI]]; set CONFIG_SOUND_BT878 [sync_tristate $CONFIG_SOUND_BT878 $tmpvar_dep]; set CONFIG_SOUND_BT878 [expr $CONFIG_SOUND_BT878&15]}
	global CONFIG_SOUND_CMPCI
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND == 1 || $CONFIG_SOUND == 2 || $CONFIG_SOUND == 4) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SOUND $CONFIG_PCI]]; set CONFIG_SOUND_CMPCI [sync_tristate $CONFIG_SOUND_CMPCI $tmpvar_dep]; set CONFIG_SOUND_CMPCI [expr $CONFIG_SOUND_CMPCI&15]}
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_CMPCI == 1 || $CONFIG_SOUND_CMPCI == 2)} then {
	set CONFIG_SOUND_CMPCI_FM [expr $CONFIG_SOUND_CMPCI_FM&15]}
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_CMPCI == 1 || $CONFIG_SOUND_CMPCI == 2) && ($CONFIG_SOUND_CMPCI_FM == 1)} then {set CONFIG_SOUND_CMPCI_FMIO 388 }
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_CMPCI == 1 || $CONFIG_SOUND_CMPCI == 2) && ($CONFIG_SOUND_CMPCI_FM == 1)} then {validate_hex CONFIG_SOUND_CMPCI_FMIO "$CONFIG_SOUND_CMPCI_FMIO" 388}
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_CMPCI == 1 || $CONFIG_SOUND_CMPCI == 2)} then {
	set CONFIG_SOUND_CMPCI_MIDI [expr $CONFIG_SOUND_CMPCI_MIDI&15]}
	global CONFIG_SOUND_CMPCI_MPUIO
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_CMPCI == 1 || $CONFIG_SOUND_CMPCI == 2) && ($CONFIG_SOUND_CMPCI_MIDI == 1)} then {validate_hex CONFIG_SOUND_CMPCI_MPUIO "$CONFIG_SOUND_CMPCI_MPUIO" 330}
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_CMPCI == 1 || $CONFIG_SOUND_CMPCI == 2)} then {
	set CONFIG_SOUND_CMPCI_JOYSTICK [expr $CONFIG_SOUND_CMPCI_JOYSTICK&15]}
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_CMPCI == 1 || $CONFIG_SOUND_CMPCI == 2)} then {
	set CONFIG_SOUND_CMPCI_CM8738 [expr $CONFIG_SOUND_CMPCI_CM8738&15]}
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_CMPCI == 1 || $CONFIG_SOUND_CMPCI == 2) && ($CONFIG_SOUND_CMPCI_CM8738 == 1)} then {
	set CONFIG_SOUND_CMPCI_SPDIFINVERSE [expr $CONFIG_SOUND_CMPCI_SPDIFINVERSE&15]}
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_CMPCI == 1 || $CONFIG_SOUND_CMPCI == 2) && ($CONFIG_SOUND_CMPCI_CM8738 == 1)} then {
	set CONFIG_SOUND_CMPCI_SPDIFLOOP [expr $CONFIG_SOUND_CMPCI_SPDIFLOOP&15]}
	global CONFIG_SOUND_CMPCI_SPEAKERS
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_CMPCI == 1 || $CONFIG_SOUND_CMPCI == 2) && ($CONFIG_SOUND_CMPCI_CM8738 == 1)} then {validate_int CONFIG_SOUND_CMPCI_SPEAKERS "$CONFIG_SOUND_CMPCI_SPEAKERS" 2}
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_CMPCI == 1 || $CONFIG_SOUND_CMPCI == 2) && ($CONFIG_SOUND_CMPCI_CM8738 == 1) && ($CONFIG_SOUND_CMPCI_SPEAKERS != "2")} then {
	set CONFIG_SOUND_CMPCI_LINE_REAR [expr $CONFIG_SOUND_CMPCI_LINE_REAR&15]}
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_CMPCI == 1 || $CONFIG_SOUND_CMPCI == 2) && ($CONFIG_SOUND_CMPCI_CM8738 == 1) && ($CONFIG_SOUND_CMPCI_SPEAKERS != "2")} then {
	set CONFIG_SOUND_CMPCI_LINE_BASS [expr $CONFIG_SOUND_CMPCI_LINE_BASS&15]}
	global CONFIG_SOUND_EMU10K1
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND == 1 || $CONFIG_SOUND == 2 || $CONFIG_SOUND == 4) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SOUND $CONFIG_PCI]]; set CONFIG_SOUND_EMU10K1 [sync_tristate $CONFIG_SOUND_EMU10K1 $tmpvar_dep]; set CONFIG_SOUND_EMU10K1 [expr $CONFIG_SOUND_EMU10K1&15]}
	global CONFIG_EXPERIMENTAL
	global CONFIG_MIDI_EMU10K1
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_EMU10K1 == 1 || $CONFIG_SOUND_EMU10K1 == 2 || $CONFIG_SOUND_EMU10K1 == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SOUND_EMU10K1 $CONFIG_EXPERIMENTAL]];set CONFIG_MIDI_EMU10K1 [sync_bool $CONFIG_MIDI_EMU10K1 $tmpvar_dep 1];set CONFIG_MIDI_EMU10K1 [expr $CONFIG_MIDI_EMU10K1&15]}
	global CONFIG_SOUND_FUSION
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND == 1 || $CONFIG_SOUND == 2 || $CONFIG_SOUND == 4) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SOUND $CONFIG_PCI]]; set CONFIG_SOUND_FUSION [sync_tristate $CONFIG_SOUND_FUSION $tmpvar_dep]; set CONFIG_SOUND_FUSION [expr $CONFIG_SOUND_FUSION&15]}
	global CONFIG_SOUND_CS4281
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND == 1 || $CONFIG_SOUND == 2 || $CONFIG_SOUND == 4) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SOUND $CONFIG_PCI]]; set CONFIG_SOUND_CS4281 [sync_tristate $CONFIG_SOUND_CS4281 $tmpvar_dep]; set CONFIG_SOUND_CS4281 [expr $CONFIG_SOUND_CS4281&15]}
	global CONFIG_SOUND_ES1370
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND == 1 || $CONFIG_SOUND == 2 || $CONFIG_SOUND == 4) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SOUND $CONFIG_PCI]]; set CONFIG_SOUND_ES1370 [sync_tristate $CONFIG_SOUND_ES1370 $tmpvar_dep]; set CONFIG_SOUND_ES1370 [expr $CONFIG_SOUND_ES1370&15]}
	global CONFIG_SOUND_ES1371
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND == 1 || $CONFIG_SOUND == 2 || $CONFIG_SOUND == 4) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SOUND $CONFIG_PCI]]; set CONFIG_SOUND_ES1371 [sync_tristate $CONFIG_SOUND_ES1371 $tmpvar_dep]; set CONFIG_SOUND_ES1371 [expr $CONFIG_SOUND_ES1371&15]}
	global CONFIG_SOUND_ESSSOLO1
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND == 1 || $CONFIG_SOUND == 2 || $CONFIG_SOUND == 4) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SOUND $CONFIG_PCI]]; set CONFIG_SOUND_ESSSOLO1 [sync_tristate $CONFIG_SOUND_ESSSOLO1 $tmpvar_dep]; set CONFIG_SOUND_ESSSOLO1 [expr $CONFIG_SOUND_ESSSOLO1&15]}
	global CONFIG_SOUND_MAESTRO
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND == 1 || $CONFIG_SOUND == 2 || $CONFIG_SOUND == 4) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SOUND $CONFIG_PCI]]; set CONFIG_SOUND_MAESTRO [sync_tristate $CONFIG_SOUND_MAESTRO $tmpvar_dep]; set CONFIG_SOUND_MAESTRO [expr $CONFIG_SOUND_MAESTRO&15]}
	global CONFIG_SOUND_MAESTRO3
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND == 1 || $CONFIG_SOUND == 2 || $CONFIG_SOUND == 4) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SOUND $CONFIG_PCI $CONFIG_EXPERIMENTAL]]; set CONFIG_SOUND_MAESTRO3 [sync_tristate $CONFIG_SOUND_MAESTRO3 $tmpvar_dep]; set CONFIG_SOUND_MAESTRO3 [expr $CONFIG_SOUND_MAESTRO3&15]}
	global CONFIG_SOUND_FORTE
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND == 1 || $CONFIG_SOUND == 2 || $CONFIG_SOUND == 4) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SOUND $CONFIG_PCI $CONFIG_EXPERIMENTAL]]; set CONFIG_SOUND_FORTE [sync_tristate $CONFIG_SOUND_FORTE $tmpvar_dep]; set CONFIG_SOUND_FORTE [expr $CONFIG_SOUND_FORTE&15]}
	global CONFIG_SOUND_ICH
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PCI]]; set CONFIG_SOUND_ICH [sync_tristate $CONFIG_SOUND_ICH $tmpvar_dep]; set CONFIG_SOUND_ICH [expr $CONFIG_SOUND_ICH&15]}
	global CONFIG_SOUND_RME96XX
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND == 1 || $CONFIG_SOUND == 2 || $CONFIG_SOUND == 4) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SOUND $CONFIG_PCI $CONFIG_EXPERIMENTAL]]; set CONFIG_SOUND_RME96XX [sync_tristate $CONFIG_SOUND_RME96XX $tmpvar_dep]; set CONFIG_SOUND_RME96XX [expr $CONFIG_SOUND_RME96XX&15]}
	global CONFIG_SOUND_SONICVIBES
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND == 1 || $CONFIG_SOUND == 2 || $CONFIG_SOUND == 4) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SOUND $CONFIG_PCI]]; set CONFIG_SOUND_SONICVIBES [sync_tristate $CONFIG_SOUND_SONICVIBES $tmpvar_dep]; set CONFIG_SOUND_SONICVIBES [expr $CONFIG_SOUND_SONICVIBES&15]}
	global CONFIG_SOUND_TRIDENT
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND == 1 || $CONFIG_SOUND == 2 || $CONFIG_SOUND == 4) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SOUND $CONFIG_PCI]]; set CONFIG_SOUND_TRIDENT [sync_tristate $CONFIG_SOUND_TRIDENT $tmpvar_dep]; set CONFIG_SOUND_TRIDENT [expr $CONFIG_SOUND_TRIDENT&15]}
	global CONFIG_SOUND_MSNDCLAS
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND == 1 || $CONFIG_SOUND == 2 || $CONFIG_SOUND == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SOUND]]; set CONFIG_SOUND_MSNDCLAS [sync_tristate $CONFIG_SOUND_MSNDCLAS $tmpvar_dep]; set CONFIG_SOUND_MSNDCLAS [expr $CONFIG_SOUND_MSNDCLAS&15]}
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_MSNDCLAS == 1 || $CONFIG_SOUND_MSNDCLAS == 2) && ($CONFIG_SOUND_MSNDCLAS == 1)} then {	global CONSTANT_Y
set CONFIG_MSNDCLAS_HAVE_BOOT $CONSTANT_Y }
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_MSNDCLAS == 1 || $CONFIG_SOUND_MSNDCLAS == 2) && ($CONFIG_SOUND_MSNDCLAS != 1)} then {	global CONSTANT_N
set CONFIG_MSNDCLAS_HAVE_BOOT $CONSTANT_N }
	global CONFIG_MSNDCLAS_IRQ
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_MSNDCLAS == 1)} then {validate_int CONFIG_MSNDCLAS_IRQ "$CONFIG_MSNDCLAS_IRQ" 5}
	global CONFIG_MSNDCLAS_MEM
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_MSNDCLAS == 1)} then {validate_hex CONFIG_MSNDCLAS_MEM "$CONFIG_MSNDCLAS_MEM" D0000}
	global CONFIG_MSNDCLAS_IO
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_MSNDCLAS == 1)} then {validate_hex CONFIG_MSNDCLAS_IO "$CONFIG_MSNDCLAS_IO" 290}
	global CONFIG_SOUND_MSNDPIN
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND == 1 || $CONFIG_SOUND == 2 || $CONFIG_SOUND == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SOUND]]; set CONFIG_SOUND_MSNDPIN [sync_tristate $CONFIG_SOUND_MSNDPIN $tmpvar_dep]; set CONFIG_SOUND_MSNDPIN [expr $CONFIG_SOUND_MSNDPIN&15]}
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_MSNDPIN == 1 || $CONFIG_SOUND_MSNDPIN == 2) && ($CONFIG_SOUND_MSNDPIN == 1)} then {	global CONSTANT_Y
set CONFIG_MSNDPIN_HAVE_BOOT $CONSTANT_Y }
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_MSNDPIN == 1 || $CONFIG_SOUND_MSNDPIN == 2) && ($CONFIG_SOUND_MSNDPIN != 1)} then {	global CONSTANT_N
set CONFIG_MSNDPIN_HAVE_BOOT $CONSTANT_N }
	global CONFIG_MSNDPIN_IRQ
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_MSNDPIN == 1)} then {validate_int CONFIG_MSNDPIN_IRQ "$CONFIG_MSNDPIN_IRQ" 5}
	global CONFIG_MSNDPIN_MEM
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_MSNDPIN == 1)} then {validate_hex CONFIG_MSNDPIN_MEM "$CONFIG_MSNDPIN_MEM" D0000}
	global CONFIG_MSNDPIN_IO
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_MSNDPIN == 1)} then {validate_hex CONFIG_MSNDPIN_IO "$CONFIG_MSNDPIN_IO" 290}
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_MSNDPIN == 1)} then {
	set CONFIG_MSNDPIN_DIGITAL [expr $CONFIG_MSNDPIN_DIGITAL&15]}
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_MSNDPIN == 1)} then {
	set CONFIG_MSNDPIN_NONPNP [expr $CONFIG_MSNDPIN_NONPNP&15]}
	global CONFIG_MSNDPIN_CFG
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_MSNDPIN == 1) && ($CONFIG_MSNDPIN_NONPNP == 1)} then {validate_hex CONFIG_MSNDPIN_CFG "$CONFIG_MSNDPIN_CFG" 250}
	global CONFIG_MSNDPIN_MPU_IO
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_MSNDPIN == 1) && ($CONFIG_MSNDPIN_NONPNP == 1)} then {validate_hex CONFIG_MSNDPIN_MPU_IO "$CONFIG_MSNDPIN_MPU_IO" 0}
	global CONFIG_MSNDPIN_MPU_IRQ
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_MSNDPIN == 1) && ($CONFIG_MSNDPIN_NONPNP == 1)} then {validate_int CONFIG_MSNDPIN_MPU_IRQ "$CONFIG_MSNDPIN_MPU_IRQ" 0}
	global CONFIG_MSNDPIN_IDE_IO0
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_MSNDPIN == 1) && ($CONFIG_MSNDPIN_NONPNP == 1)} then {validate_hex CONFIG_MSNDPIN_IDE_IO0 "$CONFIG_MSNDPIN_IDE_IO0" 0}
	global CONFIG_MSNDPIN_IDE_IO1
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_MSNDPIN == 1) && ($CONFIG_MSNDPIN_NONPNP == 1)} then {validate_hex CONFIG_MSNDPIN_IDE_IO1 "$CONFIG_MSNDPIN_IDE_IO1" 0}
	global CONFIG_MSNDPIN_IDE_IRQ
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_MSNDPIN == 1) && ($CONFIG_MSNDPIN_NONPNP == 1)} then {validate_int CONFIG_MSNDPIN_IDE_IRQ "$CONFIG_MSNDPIN_IDE_IRQ" 0}
	global CONFIG_MSNDPIN_JOYSTICK_IO
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_MSNDPIN == 1) && ($CONFIG_MSNDPIN_NONPNP == 1)} then {validate_hex CONFIG_MSNDPIN_JOYSTICK_IO "$CONFIG_MSNDPIN_JOYSTICK_IO" 0}
	global CONFIG_MSND_FIFOSIZE
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_MSNDPIN == 1 || $CONFIG_SOUND_MSNDCLAS == 1)} then {validate_int CONFIG_MSND_FIFOSIZE "$CONFIG_MSND_FIFOSIZE" 128}
	global CONFIG_SOUND_VIA82CXXX
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PCI]]; set CONFIG_SOUND_VIA82CXXX [sync_tristate $CONFIG_SOUND_VIA82CXXX $tmpvar_dep]; set CONFIG_SOUND_VIA82CXXX [expr $CONFIG_SOUND_VIA82CXXX&15]}
	global CONFIG_MIDI_VIA82CXXX
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_VIA82CXXX == 1 || $CONFIG_SOUND_VIA82CXXX == 2 || $CONFIG_SOUND_VIA82CXXX == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SOUND_VIA82CXXX]];set CONFIG_MIDI_VIA82CXXX [sync_bool $CONFIG_MIDI_VIA82CXXX $tmpvar_dep 1];set CONFIG_MIDI_VIA82CXXX [expr $CONFIG_MIDI_VIA82CXXX&15]}
	global CONFIG_SOUND_OSS
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND == 1 || $CONFIG_SOUND == 2 || $CONFIG_SOUND == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SOUND]]; set CONFIG_SOUND_OSS [sync_tristate $CONFIG_SOUND_OSS $tmpvar_dep]; set CONFIG_SOUND_OSS [expr $CONFIG_SOUND_OSS&15]}
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2)} then {
	set CONFIG_SOUND_TRACEINIT [expr $CONFIG_SOUND_TRACEINIT&15]}
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2)} then {
	set CONFIG_SOUND_DMAP [expr $CONFIG_SOUND_DMAP&15]}
	global CONFIG_SOUND_AD1816
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2 || $CONFIG_SOUND_OSS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SOUND_OSS]]; set CONFIG_SOUND_AD1816 [sync_tristate $CONFIG_SOUND_AD1816 $tmpvar_dep]; set CONFIG_SOUND_AD1816 [expr $CONFIG_SOUND_AD1816&15]}
	global CONFIG_SOUND_AD1889
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2 || $CONFIG_SOUND_OSS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SOUND_OSS]]; set CONFIG_SOUND_AD1889 [sync_tristate $CONFIG_SOUND_AD1889 $tmpvar_dep]; set CONFIG_SOUND_AD1889 [expr $CONFIG_SOUND_AD1889&15]}
	global CONFIG_SOUND_SGALAXY
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2 || $CONFIG_SOUND_OSS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SOUND_OSS]]; set CONFIG_SOUND_SGALAXY [sync_tristate $CONFIG_SOUND_SGALAXY $tmpvar_dep]; set CONFIG_SOUND_SGALAXY [expr $CONFIG_SOUND_SGALAXY&15]}
	global CONFIG_SOUND_ADLIB
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2 || $CONFIG_SOUND_OSS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SOUND_OSS]]; set CONFIG_SOUND_ADLIB [sync_tristate $CONFIG_SOUND_ADLIB $tmpvar_dep]; set CONFIG_SOUND_ADLIB [expr $CONFIG_SOUND_ADLIB&15]}
	global CONFIG_SOUND_ACI_MIXER
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2 || $CONFIG_SOUND_OSS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SOUND_OSS]]; set CONFIG_SOUND_ACI_MIXER [sync_tristate $CONFIG_SOUND_ACI_MIXER $tmpvar_dep]; set CONFIG_SOUND_ACI_MIXER [expr $CONFIG_SOUND_ACI_MIXER&15]}
	global CONFIG_SOUND_CS4232
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2 || $CONFIG_SOUND_OSS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SOUND_OSS]]; set CONFIG_SOUND_CS4232 [sync_tristate $CONFIG_SOUND_CS4232 $tmpvar_dep]; set CONFIG_SOUND_CS4232 [expr $CONFIG_SOUND_CS4232&15]}
	global CONFIG_SOUND_SSCAPE
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2 || $CONFIG_SOUND_OSS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SOUND_OSS]]; set CONFIG_SOUND_SSCAPE [sync_tristate $CONFIG_SOUND_SSCAPE $tmpvar_dep]; set CONFIG_SOUND_SSCAPE [expr $CONFIG_SOUND_SSCAPE&15]}
	global CONFIG_SOUND_GUS
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2 || $CONFIG_SOUND_OSS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SOUND_OSS]]; set CONFIG_SOUND_GUS [sync_tristate $CONFIG_SOUND_GUS $tmpvar_dep]; set CONFIG_SOUND_GUS [expr $CONFIG_SOUND_GUS&15]}
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_SOUND_GUS != 0)} then {
	set CONFIG_SOUND_GUS16 [expr $CONFIG_SOUND_GUS16&15]}
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_SOUND_GUS != 0)} then {
	set CONFIG_SOUND_GUSMAX [expr $CONFIG_SOUND_GUSMAX&15]}
	global CONFIG_SOUND_VMIDI
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2 || $CONFIG_SOUND_OSS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SOUND_OSS]]; set CONFIG_SOUND_VMIDI [sync_tristate $CONFIG_SOUND_VMIDI $tmpvar_dep]; set CONFIG_SOUND_VMIDI [expr $CONFIG_SOUND_VMIDI&15]}
	global CONFIG_SOUND_TRIX
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2 || $CONFIG_SOUND_OSS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SOUND_OSS]]; set CONFIG_SOUND_TRIX [sync_tristate $CONFIG_SOUND_TRIX $tmpvar_dep]; set CONFIG_SOUND_TRIX [expr $CONFIG_SOUND_TRIX&15]}
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_SOUND_TRIX == 1)} then {
	set CONFIG_TRIX_HAVE_BOOT [expr $CONFIG_TRIX_HAVE_BOOT&15]}
	global CONFIG_SOUND_MSS
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2 || $CONFIG_SOUND_OSS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SOUND_OSS]]; set CONFIG_SOUND_MSS [sync_tristate $CONFIG_SOUND_MSS $tmpvar_dep]; set CONFIG_SOUND_MSS [expr $CONFIG_SOUND_MSS&15]}
	global CONFIG_SOUND_MPU401
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2 || $CONFIG_SOUND_OSS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SOUND_OSS]]; set CONFIG_SOUND_MPU401 [sync_tristate $CONFIG_SOUND_MPU401 $tmpvar_dep]; set CONFIG_SOUND_MPU401 [expr $CONFIG_SOUND_MPU401&15]}
	global CONFIG_SOUND_NM256
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2 || $CONFIG_SOUND_OSS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SOUND_OSS]]; set CONFIG_SOUND_NM256 [sync_tristate $CONFIG_SOUND_NM256 $tmpvar_dep]; set CONFIG_SOUND_NM256 [expr $CONFIG_SOUND_NM256&15]}
	global CONFIG_SOUND_MAD16
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2 || $CONFIG_SOUND_OSS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SOUND_OSS]]; set CONFIG_SOUND_MAD16 [sync_tristate $CONFIG_SOUND_MAD16 $tmpvar_dep]; set CONFIG_SOUND_MAD16 [expr $CONFIG_SOUND_MAD16&15]}
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_SOUND_MAD16 == 1 || $CONFIG_SOUND_MAD16 == 2)} then {
	set CONFIG_MAD16_OLDCARD [expr $CONFIG_MAD16_OLDCARD&15]}
	global CONFIG_SOUND_PAS
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2 || $CONFIG_SOUND_OSS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SOUND_OSS]]; set CONFIG_SOUND_PAS [sync_tristate $CONFIG_SOUND_PAS $tmpvar_dep]; set CONFIG_SOUND_PAS [expr $CONFIG_SOUND_PAS&15]}
	global CONFIG_PAS_JOYSTICK
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_SOUND_PAS == 1 || $CONFIG_SOUND_PAS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SOUND_PAS]];set CONFIG_PAS_JOYSTICK [sync_bool $CONFIG_PAS_JOYSTICK $tmpvar_dep 0];set CONFIG_PAS_JOYSTICK [expr $CONFIG_PAS_JOYSTICK&15]}
	global CONFIG_SOUND_PSS
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2 || $CONFIG_SOUND_OSS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SOUND_OSS]]; set CONFIG_SOUND_PSS [sync_tristate $CONFIG_SOUND_PSS $tmpvar_dep]; set CONFIG_SOUND_PSS [expr $CONFIG_SOUND_PSS&15]}
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_SOUND_PSS == 1 || $CONFIG_SOUND_PSS == 2)} then {
	set CONFIG_PSS_MIXER [expr $CONFIG_PSS_MIXER&15]}
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_SOUND_PSS == 1 || $CONFIG_SOUND_PSS == 2)} then {
	set CONFIG_PSS_HAVE_BOOT [expr $CONFIG_PSS_HAVE_BOOT&15]}
	global CONFIG_SOUND_SB
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2 || $CONFIG_SOUND_OSS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SOUND_OSS]]; set CONFIG_SOUND_SB [sync_tristate $CONFIG_SOUND_SB $tmpvar_dep]; set CONFIG_SOUND_SB [expr $CONFIG_SOUND_SB&15]}
	global CONFIG_SOUND_AWE32_SYNTH
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2 || $CONFIG_SOUND_OSS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SOUND_OSS]]; set CONFIG_SOUND_AWE32_SYNTH [sync_tristate $CONFIG_SOUND_AWE32_SYNTH $tmpvar_dep]; set CONFIG_SOUND_AWE32_SYNTH [expr $CONFIG_SOUND_AWE32_SYNTH&15]}
	global CONFIG_SOUND_KAHLUA
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_SOUND_SB == 1 || $CONFIG_SOUND_SB == 2 || $CONFIG_SOUND_SB == 4) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2 || $CONFIG_SOUND_OSS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SOUND_SB $CONFIG_SOUND_OSS]]; set CONFIG_SOUND_KAHLUA [sync_tristate $CONFIG_SOUND_KAHLUA $tmpvar_dep]; set CONFIG_SOUND_KAHLUA [expr $CONFIG_SOUND_KAHLUA&15]}
	global CONFIG_SOUND_WAVEFRONT
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2 || $CONFIG_SOUND_OSS == 4)} then {
	global CONSTANT_M
	set tmpvar_dep [effective_dep [list $CONFIG_SOUND_OSS $CONSTANT_M]]; set CONFIG_SOUND_WAVEFRONT [sync_tristate $CONFIG_SOUND_WAVEFRONT $tmpvar_dep]; set CONFIG_SOUND_WAVEFRONT [expr $CONFIG_SOUND_WAVEFRONT&15]}
	global CONFIG_SOUND_MAUI
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2 || $CONFIG_SOUND_OSS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SOUND_OSS]]; set CONFIG_SOUND_MAUI [sync_tristate $CONFIG_SOUND_MAUI $tmpvar_dep]; set CONFIG_SOUND_MAUI [expr $CONFIG_SOUND_MAUI&15]}
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_SOUND_MAUI == 1)} then {
	set CONFIG_MAUI_HAVE_BOOT [expr $CONFIG_MAUI_HAVE_BOOT&15]}
	global CONFIG_SOUND_YM3812
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2 || $CONFIG_SOUND_OSS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SOUND_OSS]]; set CONFIG_SOUND_YM3812 [sync_tristate $CONFIG_SOUND_YM3812 $tmpvar_dep]; set CONFIG_SOUND_YM3812 [expr $CONFIG_SOUND_YM3812&15]}
	global CONFIG_SOUND_OPL3SA1
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2 || $CONFIG_SOUND_OSS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SOUND_OSS]]; set CONFIG_SOUND_OPL3SA1 [sync_tristate $CONFIG_SOUND_OPL3SA1 $tmpvar_dep]; set CONFIG_SOUND_OPL3SA1 [expr $CONFIG_SOUND_OPL3SA1&15]}
	global CONFIG_SOUND_OPL3SA2
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2 || $CONFIG_SOUND_OSS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SOUND_OSS]]; set CONFIG_SOUND_OPL3SA2 [sync_tristate $CONFIG_SOUND_OPL3SA2 $tmpvar_dep]; set CONFIG_SOUND_OPL3SA2 [expr $CONFIG_SOUND_OPL3SA2&15]}
	global CONFIG_SOUND_YMFPCI
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2 || $CONFIG_SOUND_OSS == 4) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SOUND_OSS $CONFIG_PCI]]; set CONFIG_SOUND_YMFPCI [sync_tristate $CONFIG_SOUND_YMFPCI $tmpvar_dep]; set CONFIG_SOUND_YMFPCI [expr $CONFIG_SOUND_YMFPCI&15]}
	global CONFIG_SOUND_YMFPCI_LEGACY
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_SOUND_YMFPCI == 1 || $CONFIG_SOUND_YMFPCI == 2 || $CONFIG_SOUND_YMFPCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SOUND_YMFPCI]];set CONFIG_SOUND_YMFPCI_LEGACY [sync_bool $CONFIG_SOUND_YMFPCI_LEGACY $tmpvar_dep 1];set CONFIG_SOUND_YMFPCI_LEGACY [expr $CONFIG_SOUND_YMFPCI_LEGACY&15]}
	global CONFIG_SOUND_UART6850
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2 || $CONFIG_SOUND_OSS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SOUND_OSS]]; set CONFIG_SOUND_UART6850 [sync_tristate $CONFIG_SOUND_UART6850 $tmpvar_dep]; set CONFIG_SOUND_UART6850 [expr $CONFIG_SOUND_UART6850&15]}
	global CONFIG_SOUND_AEDSP16
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2 || $CONFIG_SOUND_OSS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SOUND_OSS]]; set CONFIG_SOUND_AEDSP16 [sync_tristate $CONFIG_SOUND_AEDSP16 $tmpvar_dep]; set CONFIG_SOUND_AEDSP16 [expr $CONFIG_SOUND_AEDSP16&15]}
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_SOUND_AEDSP16 == 1 || $CONFIG_SOUND_AEDSP16 == 2)} then {
	set CONFIG_SC6600 [expr $CONFIG_SC6600&15]}
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_SOUND_AEDSP16 == 1 || $CONFIG_SOUND_AEDSP16 == 2) && ($CONFIG_SC6600 == 1)} then {
	set CONFIG_SC6600_JOY [expr $CONFIG_SC6600_JOY&15]}
	global CONFIG_SC6600_CDROM
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_SOUND_AEDSP16 == 1 || $CONFIG_SOUND_AEDSP16 == 2) && ($CONFIG_SC6600 == 1)} then {validate_int CONFIG_SC6600_CDROM "$CONFIG_SC6600_CDROM" 4}
	global CONFIG_SC6600_CDROMBASE
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_SOUND_AEDSP16 == 1 || $CONFIG_SOUND_AEDSP16 == 2) && ($CONFIG_SC6600 == 1)} then {validate_hex CONFIG_SC6600_CDROMBASE "$CONFIG_SC6600_CDROMBASE" 0}
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_SOUND_AEDSP16 == 1 || $CONFIG_SOUND_AEDSP16 == 2) && ($CONFIG_SOUND_SB == 1 || $CONFIG_SOUND_SB == 2) && ($CONFIG_AEDSP16_MSS != 1)} then {
	set CONFIG_AEDSP16_SBPRO [expr $CONFIG_AEDSP16_SBPRO&15]}
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_SOUND_AEDSP16 == 1 || $CONFIG_SOUND_AEDSP16 == 2) && ($CONFIG_SOUND_MSS == 1 || $CONFIG_SOUND_MSS == 2) && ($CONFIG_AEDSP16_SBPRO != 1)} then {
	set CONFIG_AEDSP16_MSS [expr $CONFIG_AEDSP16_MSS&15]}
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_SOUND_AEDSP16 == 1 || $CONFIG_SOUND_AEDSP16 == 2) && ($CONFIG_SOUND_MPU401 == 1 || $CONFIG_SOUND_MPU401 == 2)} then {
	set CONFIG_AEDSP16_MPU401 [expr $CONFIG_AEDSP16_MPU401&15]}
	global CONFIG_ARM
	global CONFIG_SOUND_VIDC
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_ARM == 1) && ($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2 || $CONFIG_SOUND_OSS == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SOUND_OSS]]; set CONFIG_SOUND_VIDC [sync_tristate $CONFIG_SOUND_VIDC $tmpvar_dep]; set CONFIG_SOUND_VIDC [expr $CONFIG_SOUND_VIDC&15]}
	global CONFIG_ARCH_NETWINDER
	global CONFIG_SOUND_WAVEARTIST
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_ARM == 1) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2 || $CONFIG_SOUND_OSS == 4) && ($CONFIG_ARCH_NETWINDER == 1 || $CONFIG_ARCH_NETWINDER == 2 || $CONFIG_ARCH_NETWINDER == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SOUND_OSS $CONFIG_ARCH_NETWINDER]]; set CONFIG_SOUND_WAVEARTIST [sync_tristate $CONFIG_SOUND_WAVEARTIST $tmpvar_dep]; set CONFIG_SOUND_WAVEARTIST [expr $CONFIG_SOUND_WAVEARTIST&15]}
	global CONFIG_I2C
	global CONFIG_SOUND_TVMIXER
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND == 1 || $CONFIG_SOUND == 2 || $CONFIG_SOUND == 4) && ($CONFIG_I2C == 1 || $CONFIG_I2C == 2 || $CONFIG_I2C == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SOUND $CONFIG_I2C]]; set CONFIG_SOUND_TVMIXER [sync_tristate $CONFIG_SOUND_TVMIXER $tmpvar_dep]; set CONFIG_SOUND_TVMIXER [expr $CONFIG_SOUND_TVMIXER&15]}
	global CONFIG_SOUND_AD1980
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND == 1 || $CONFIG_SOUND == 2 || $CONFIG_SOUND == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SOUND]]; set CONFIG_SOUND_AD1980 [sync_tristate $CONFIG_SOUND_AD1980 $tmpvar_dep]; set CONFIG_SOUND_AD1980 [expr $CONFIG_SOUND_AD1980&15]}
	global CONFIG_SOUND_WM97XX
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND == 1 || $CONFIG_SOUND == 2 || $CONFIG_SOUND == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_SOUND]]; set CONFIG_SOUND_WM97XX [sync_tristate $CONFIG_SOUND_WM97XX $tmpvar_dep]; set CONFIG_SOUND_WM97XX [expr $CONFIG_SOUND_WM97XX&15]}
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_INPUT_GAMEPORT != 0) && ($CONFIG_SOUND_ESSSOLO1 == 1 || $CONFIG_SOUND_ES1370 == 1 || $CONFIG_SOUND_ES1371 == 1 || $CONFIG_SOUND_SONICVIBES == 1)} then {	global CONSTANT_Y
set CONFIG_INPUT_GAMEPORT $CONSTANT_Y }
}


menu_option menu77 77 "Misc devices"
proc menu77 {w title} {
	set oldFocus [focus]
	catch {destroy $w; unregister_active 77}
	toplevel $w -class Dialog
	wm withdraw $w
	global active_menus
	set active_menus [lsort -integer [linsert $active_menus end 77]]
	message $w.m -width 400 -aspect 300 -text \
		"Misc devices"  -relief raised
	pack $w.m -pady 10 -side top -padx 10
	wm title $w "Misc devices" 

	bind $w <Escape> "catch {focus $oldFocus}; destroy $w; unregister_active 77; break"
	set nextscript "catch {focus $oldFocus}; destroy $w; unregister_active 77; menu78 .menu78 \"$title\""
	frame $w.f
	button $w.f.back -text "Main Menu" \
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 77"
	button $w.f.next -text "Next" -underline 0\
		-width 15 -command $nextscript
	bind all <Alt-n> $nextscript
	button $w.f.prev -text "Prev" -underline 0\
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 77; menu76 .menu76 \"$title\""
	bind $w <Alt-p> "catch {focus $oldFocus}; destroy $w; unregister_active 77; menu76 .menu76 \"$title\";break"
	pack $w.f.back $w.f.next $w.f.prev -side left -expand on
	pack $w.f -pady 10 -side bottom -anchor w -fill x
	frame $w.topline -relief ridge -borderwidth 2 -height 2
	pack $w.topline -side top -fill x

	frame $w.botline -relief ridge -borderwidth 2 -height 2
	pack $w.botline -side bottom -fill x

	frame $w.config
	pack $w.config -fill y -expand on

	scrollbar $w.config.vscroll -command "$w.config.canvas yview"
	pack $w.config.vscroll -side right -fill y

	canvas $w.config.canvas -height 1\
		-relief flat -borderwidth 0 -yscrollcommand "$w.config.vscroll set" \
		-width [expr [winfo screenwidth .] * 1 / 2] 
	frame $w.config.f
	bind $w <Key-Down> "$w.config.canvas yview scroll  1 unit;break;"
	bind $w <Key-Up> "$w.config.canvas yview scroll  -1 unit;break;"
	bind $w <Key-Next> "$w.config.canvas yview scroll  1 page;break;"
	bind $w <Key-Prior> "$w.config.canvas yview scroll  -1 page;break;"
	bind $w <Key-Home> "$w.config.canvas yview moveto 0;break;"
	bind $w <Key-End> "$w.config.canvas yview moveto 1 ;break;"
	pack $w.config.canvas -side right -fill y





	focus $w
	update_active
	global winx; global winy
	set winx [expr [winfo x .]+30]; set winy [expr [winfo y .]+30]
	if {[winfo exists $w]} then {wm geometry $w +$winx+$winy}
	update idletasks
	if {[winfo exists $w]} then  {$w.config.canvas create window 0 0 -anchor nw -window $w.config.f

	$w.config.canvas configure \
		-width [expr [winfo reqwidth $w.config.f] + 1]\
		-scrollregion "-1 -1 [expr [winfo reqwidth $w.config.f] + 1] \
			 [expr [winfo reqheight $w.config.f] + 1]"

	set winy [expr [winfo reqh $w] - [winfo reqh $w.config.canvas]]
	set scry [expr [winfo screenh $w] / 2]
	set maxy [expr [winfo screenh $w] * 3 / 4]
	set canvtotal [expr [winfo reqh $w.config.f] + 2]
	if [expr $winy + $canvtotal < $maxy] {
		$w.config.canvas configure -height $canvtotal
	} else {
		$w.config.canvas configure -height [expr $scry - $winy]
		}
	}
	update idletasks
	if {[winfo exists $w]} then {
	wm maxsize $w [winfo width $w] [winfo screenheight $w]
	wm minsize $w [winfo width $w] 100

	wm deiconify $w
}
}

proc update_menu77 {} {
}


proc update_define_menu77 {} {
	update_define_mainmenu
	global CONFIG_MODULES
}


menu_option menu78 78 "USB support"
proc menu78 {w title} {
	set oldFocus [focus]
	catch {destroy $w; unregister_active 78}
	toplevel $w -class Dialog
	wm withdraw $w
	global active_menus
	set active_menus [lsort -integer [linsert $active_menus end 78]]
	message $w.m -width 400 -aspect 300 -text \
		"USB support"  -relief raised
	pack $w.m -pady 10 -side top -padx 10
	wm title $w "USB support" 

	bind $w <Escape> "catch {focus $oldFocus}; destroy $w; unregister_active 78; break"
	set nextscript "catch {focus $oldFocus}; menu79 .menu79 \"$title\""
	frame $w.f
	button $w.f.back -text "Main Menu" \
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 78"
	button $w.f.next -text "Next" -underline 0\
		-width 15 -command $nextscript
	bind all <Alt-n> $nextscript
	button $w.f.prev -text "Prev" -underline 0\
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 78; menu77 .menu77 \"$title\""
	bind $w <Alt-p> "catch {focus $oldFocus}; destroy $w; unregister_active 78; menu77 .menu77 \"$title\";break"
	pack $w.f.back $w.f.next $w.f.prev -side left -expand on
	pack $w.f -pady 10 -side bottom -anchor w -fill x
	frame $w.topline -relief ridge -borderwidth 2 -height 2
	pack $w.topline -side top -fill x

	frame $w.botline -relief ridge -borderwidth 2 -height 2
	pack $w.botline -side bottom -fill x

	frame $w.config
	pack $w.config -fill y -expand on

	scrollbar $w.config.vscroll -command "$w.config.canvas yview"
	pack $w.config.vscroll -side right -fill y

	canvas $w.config.canvas -height 1\
		-relief flat -borderwidth 0 -yscrollcommand "$w.config.vscroll set" \
		-width [expr [winfo screenwidth .] * 1 / 2] 
	frame $w.config.f
	bind $w <Key-Down> "$w.config.canvas yview scroll  1 unit;break;"
	bind $w <Key-Up> "$w.config.canvas yview scroll  -1 unit;break;"
	bind $w <Key-Next> "$w.config.canvas yview scroll  1 page;break;"
	bind $w <Key-Prior> "$w.config.canvas yview scroll  -1 page;break;"
	bind $w <Key-Home> "$w.config.canvas yview moveto 0;break;"
	bind $w <Key-End> "$w.config.canvas yview moveto 1 ;break;"
	pack $w.config.canvas -side right -fill y


	dep_tristate $w.config.f 78 0 "Support for USB" CONFIG_USB
	bool $w.config.f 78 1 "  USB verbose debug messages" CONFIG_USB_DEBUG
	comment $w.config.f 78 2 "Miscellaneous USB options"
	bool $w.config.f 78 3 "  Preliminary USB device filesystem" CONFIG_USB_DEVICEFS
	bool $w.config.f 78 4 "  Enforce USB bandwidth allocation (EXPERIMENTAL)" CONFIG_USB_BANDWIDTH
	comment $w.config.f 78 5 "USB Host Controller Drivers"
	dep_tristate $w.config.f 78 6 "  EHCI HCD (USB 2.0) support (EXPERIMENTAL)" CONFIG_USB_EHCI_HCD
	dep_tristate $w.config.f 78 7 "  UHCI (Intel PIIX4, VIA, ...) support" CONFIG_USB_UHCI
	dep_tristate $w.config.f 78 8 "  UHCI Alternate Driver (JE) support" CONFIG_USB_UHCI_ALT
	dep_tristate $w.config.f 78 9 "  OHCI (Compaq, iMacs, OPTi, SiS, ALi, ...) support" CONFIG_USB_OHCI
	dep_tristate $w.config.f 78 10 "  SL811HS Alternate (x86, StrongARM, isosynchronous mode)" CONFIG_USB_SL811HS_ALT
	dep_tristate $w.config.f 78 11 "  SL811HS (x86, StrongARM) support, old driver" CONFIG_USB_SL811HS
	comment $w.config.f 78 12 "USB Device Class drivers"
	dep_tristate $w.config.f 78 13 "  USB Audio support" CONFIG_USB_AUDIO
	dep_tristate $w.config.f 78 14 "    EMI 2|6 USB Audio interface support" CONFIG_USB_EMI26
	dep_tristate $w.config.f 78 15 "  USB Bluetooth support (EXPERIMENTAL)" CONFIG_USB_BLUETOOTH
	comment $w.config.f 78 16 "  USB Bluetooth can only be used with disabled Bluetooth subsystem"
	dep_tristate $w.config.f 78 17 "  USB MIDI support" CONFIG_USB_MIDI
	comment $w.config.f 78 18 "  SCSI support is needed for USB Storage"
	dep_tristate $w.config.f 78 19 "  USB Mass Storage support" CONFIG_USB_STORAGE
	dep_bool $w.config.f 78 20 "    USB Mass Storage verbose debug" CONFIG_USB_STORAGE_DEBUG
	dep_bool $w.config.f 78 21 "    Datafab MDCFE-B Compact Flash Reader support" CONFIG_USB_STORAGE_DATAFAB
	dep_bool $w.config.f 78 22 "    Freecom USB/ATAPI Bridge support" CONFIG_USB_STORAGE_FREECOM
	dep_bool $w.config.f 78 23 "    ISD-200 USB/ATA Bridge support" CONFIG_USB_STORAGE_ISD200
	dep_bool $w.config.f 78 24 "    Microtech CompactFlash/SmartMedia support" CONFIG_USB_STORAGE_DPCM
	dep_bool $w.config.f 78 25 "    HP CD-Writer 82xx support" CONFIG_USB_STORAGE_HP8200e
	dep_bool $w.config.f 78 26 "    SanDisk SDDR-09 (and other SmartMedia) support" CONFIG_USB_STORAGE_SDDR09
	dep_bool $w.config.f 78 27 "    SanDisk SDDR-55 SmartMedia support" CONFIG_USB_STORAGE_SDDR55
	dep_bool $w.config.f 78 28 "    Lexar Jumpshot Compact Flash Reader" CONFIG_USB_STORAGE_JUMPSHOT
	dep_tristate $w.config.f 78 29 "  USB Modem (CDC ACM) support" CONFIG_USB_ACM
	dep_tristate $w.config.f 78 30 "  USB Printer support" CONFIG_USB_PRINTER
	comment $w.config.f 78 31 "USB Human Interface Devices (HID)"
	dep_tristate $w.config.f 78 32 "  USB Human Interface Device (full HID) support" CONFIG_USB_HID
	comment $w.config.f 78 33 "    Input core support is needed for USB HID input layer or HIDBP support"
	dep_bool $w.config.f 78 34 "    HID input layer support" CONFIG_USB_HIDINPUT
	dep_bool $w.config.f 78 35 "    /dev/hiddev raw HID device support" CONFIG_USB_HIDDEV
	dep_tristate $w.config.f 78 36 "  USB HIDBP Keyboard (basic) support" CONFIG_USB_KBD
	dep_tristate $w.config.f 78 37 "  USB HIDBP Mouse (basic) support" CONFIG_USB_MOUSE
	dep_tristate $w.config.f 78 38 "  Aiptek 6000U/8000U tablet support" CONFIG_USB_AIPTEK
	dep_tristate $w.config.f 78 39 "  Wacom Intuos/Graphire tablet support" CONFIG_USB_WACOM
	dep_tristate $w.config.f 78 40 "  KB Gear JamStudio tablet support" CONFIG_USB_KBTAB
	dep_tristate $w.config.f 78 41 "  Griffin Technology PowerMate support" CONFIG_USB_POWERMATE
	comment $w.config.f 78 42 "USB Imaging devices"
	dep_tristate $w.config.f 78 43 "  USB Kodak DC-2xx Camera support" CONFIG_USB_DC2XX
	dep_tristate $w.config.f 78 44 "  USB Mustek MDC800 Digital Camera support (EXPERIMENTAL)" CONFIG_USB_MDC800
	dep_tristate $w.config.f 78 45 "  USB Scanner support" CONFIG_USB_SCANNER
	dep_tristate $w.config.f 78 46 "  Microtek X6USB scanner support" CONFIG_USB_MICROTEK
	dep_tristate $w.config.f 78 47 "  HP53xx USB scanner support (EXPERIMENTAL)" CONFIG_USB_HPUSBSCSI
	comment $w.config.f 78 48 "USB Multimedia devices"
	comment $w.config.f 78 49 "  Video4Linux support is needed for USB Multimedia device support"
	dep_tristate $w.config.f 78 50 "  USB IBM (Xirlink) C-it Camera support" CONFIG_USB_IBMCAM
	dep_tristate $w.config.f 78 51 "  USB Konica Webcam support" CONFIG_USB_KONICAWC
	dep_tristate $w.config.f 78 52 "  USB OV511 Camera support" CONFIG_USB_OV511
	dep_tristate $w.config.f 78 53 "  USB Philips Cameras" CONFIG_USB_PWC
	dep_tristate $w.config.f 78 54 "  USB SE401 Camera support" CONFIG_USB_SE401
	dep_tristate $w.config.f 78 55 "  USB STV680 (Pencam) Camera support" CONFIG_USB_STV680
	dep_tristate $w.config.f 78 56 "  USB W996\[87\]CF Camera support" CONFIG_USB_W9968CF
	dep_tristate $w.config.f 78 57 "  USB 3com HomeConnect (aka vicam) support (EXPERIMENTAL)" CONFIG_USB_VICAM
	dep_tristate $w.config.f 78 58 "  D-Link USB FM radio support (EXPERIMENTAL)" CONFIG_USB_DSBR
	dep_tristate $w.config.f 78 59 "  DABUSB driver" CONFIG_USB_DABUSB
	comment $w.config.f 78 60 "USB Network adaptors"
	comment $w.config.f 78 61 "  Networking support is needed for USB Networking device support"
	dep_tristate $w.config.f 78 62 "  USB Pegasus/Pegasus-II based ethernet device support (EXPERIMENTAL)" CONFIG_USB_PEGASUS
	dep_tristate $w.config.f 78 63 "  USB Realtek RTL8150 based ethernet device support (EXPERIMENTAL)" CONFIG_USB_RTL8150
	dep_tristate $w.config.f 78 64 "  USB KLSI KL5USB101-based ethernet device support (EXPERIMENTAL)" CONFIG_USB_KAWETH
	dep_tristate $w.config.f 78 65 "  USB CATC NetMate-based Ethernet device support (EXPERIMENTAL)" CONFIG_USB_CATC
	dep_tristate $w.config.f 78 66 "  USB ASIX AX88172 based ethernet device support (EXPERIMENTAL)" CONFIG_USB_AX8817X
	dep_tristate $w.config.f 78 67 "  USB Communication Class Ethernet device support (EXPERIMENTAL)" CONFIG_USB_CDCETHER
	dep_tristate $w.config.f 78 68 "  USB-to-USB Networking cables, Linux PDAs, ... (EXPERIMENTAL)" CONFIG_USB_USBNET
	comment $w.config.f 78 69 "USB port drivers"
	dep_tristate $w.config.f 78 70 "  USS720 parport driver" CONFIG_USB_USS720
	submenu $w.config.f 78 71 "USB Serial Converter support" 79
	comment $w.config.f 78 72 "USB Miscellaneous drivers"
	dep_tristate $w.config.f 78 73 "  USB Diamond Rio500 support (EXPERIMENTAL)" CONFIG_USB_RIO500
	dep_tristate $w.config.f 78 74 "  Auerswald device support" CONFIG_USB_AUERSWALD
	dep_tristate $w.config.f 78 75 "  Texas Instruments Graph Link USB (aka SilverLink) cable support" CONFIG_USB_TIGL
	dep_tristate $w.config.f 78 76 "  Tieman Voyager USB Braille display support (EXPERIMENTAL)" CONFIG_USB_BRLVGER
	dep_tristate $w.config.f 78 77 "  USB LCD device support" CONFIG_USB_LCD
	dep_tristate $w.config.f 78 78 "  Alcatel Speedtouch USB support" CONFIG_USB_SPEEDTOUCH
	submenu $w.config.f 78 79 "Support for USB gadgets" 80



	focus $w
	update_active
	global winx; global winy
	set winx [expr [winfo x .]+30]; set winy [expr [winfo y .]+30]
	if {[winfo exists $w]} then {wm geometry $w +$winx+$winy}
	update idletasks
	if {[winfo exists $w]} then  {$w.config.canvas create window 0 0 -anchor nw -window $w.config.f

	$w.config.canvas configure \
		-width [expr [winfo reqwidth $w.config.f] + 1]\
		-scrollregion "-1 -1 [expr [winfo reqwidth $w.config.f] + 1] \
			 [expr [winfo reqheight $w.config.f] + 1]"

	set winy [expr [winfo reqh $w] - [winfo reqh $w.config.canvas]]
	set scry [expr [winfo screenh $w] / 2]
	set maxy [expr [winfo screenh $w] * 3 / 4]
	set canvtotal [expr [winfo reqh $w.config.f] + 2]
	if [expr $winy + $canvtotal < $maxy] {
		$w.config.canvas configure -height $canvtotal
	} else {
		$w.config.canvas configure -height [expr $scry - $winy]
		}
	}
	update idletasks
	if {[winfo exists $w]} then {
	wm maxsize $w [winfo width $w] [winfo screenheight $w]
	wm minsize $w [winfo width $w] 100

	wm deiconify $w
}
}

proc update_menu78 {} {
	global CONFIG_MODULES
	global CONFIG_PCI
	global CONFIG_USB
	if {($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PCI]];set CONFIG_USB [sync_tristate $CONFIG_USB $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu78.config.f.x0 disabled {y}} else {configure_entry .menu78.config.f.x0 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu78.config.f.x0 disabled {m}} else {configure_entry .menu78.config.f.x0 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu78.config.f.x0 normal {m}} else {configure_entry .menu78.config.f.x0 disabled {m}}; configure_entry .menu78.config.f.x0 normal {n l}} else {configure_entry .menu78.config.f.x0 disabled {y n m l}}
	global CONFIG_USB_DEBUG
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2)} then {
	configure_entry .menu78.config.f.x1 normal {n l y}} else {configure_entry .menu78.config.f.x1 disabled {y n l}}
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2)} then {configure_entry .menu78.config.f.x2 normal {m}} else {configure_entry .menu78.config.f.x2 disabled {m}}
	global CONFIG_USB_DEVICEFS
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2)} then {
	configure_entry .menu78.config.f.x3 normal {n l y}} else {configure_entry .menu78.config.f.x3 disabled {y n l}}
	global CONFIG_EXPERIMENTAL
	global CONFIG_USB_BANDWIDTH
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_EXPERIMENTAL == 1)} then {
	configure_entry .menu78.config.f.x4 normal {n l y}} else {configure_entry .menu78.config.f.x4 disabled {y n l}}
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2)} then {configure_entry .menu78.config.f.x5 normal {m}} else {configure_entry .menu78.config.f.x5 disabled {m}}
	global CONFIG_USB_EHCI_HCD
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB $CONFIG_EXPERIMENTAL]];set CONFIG_USB_EHCI_HCD [sync_tristate $CONFIG_USB_EHCI_HCD $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu78.config.f.x6 disabled {y}} else {configure_entry .menu78.config.f.x6 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu78.config.f.x6 disabled {m}} else {configure_entry .menu78.config.f.x6 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu78.config.f.x6 normal {m}} else {configure_entry .menu78.config.f.x6 disabled {m}}; configure_entry .menu78.config.f.x6 normal {n l}} else {configure_entry .menu78.config.f.x6 disabled {y n m l}}
	global CONFIG_USB_UHCI_ALT
	global CONFIG_USB_UHCI
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_UHCI_ALT != 1) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB]];set CONFIG_USB_UHCI [sync_tristate $CONFIG_USB_UHCI $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu78.config.f.x7 disabled {y}} else {configure_entry .menu78.config.f.x7 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu78.config.f.x7 disabled {m}} else {configure_entry .menu78.config.f.x7 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu78.config.f.x7 normal {m}} else {configure_entry .menu78.config.f.x7 disabled {m}}; configure_entry .menu78.config.f.x7 normal {n l}} else {configure_entry .menu78.config.f.x7 disabled {y n m l}}
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_UHCI != 1) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB]];set CONFIG_USB_UHCI_ALT [sync_tristate $CONFIG_USB_UHCI_ALT $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu78.config.f.x8 disabled {y}} else {configure_entry .menu78.config.f.x8 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu78.config.f.x8 disabled {m}} else {configure_entry .menu78.config.f.x8 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu78.config.f.x8 normal {m}} else {configure_entry .menu78.config.f.x8 disabled {m}}; configure_entry .menu78.config.f.x8 normal {n l}} else {configure_entry .menu78.config.f.x8 disabled {y n m l}}
	global CONFIG_USB_OHCI
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB]];set CONFIG_USB_OHCI [sync_tristate $CONFIG_USB_OHCI $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu78.config.f.x9 disabled {y}} else {configure_entry .menu78.config.f.x9 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu78.config.f.x9 disabled {m}} else {configure_entry .menu78.config.f.x9 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu78.config.f.x9 normal {m}} else {configure_entry .menu78.config.f.x9 disabled {m}}; configure_entry .menu78.config.f.x9 normal {n l}} else {configure_entry .menu78.config.f.x9 disabled {y n m l}}
	global CONFIG_ARM
	global CONFIG_X86
	global CONFIG_X86_64
	global CONFIG_USB_SL811HS_ALT
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_ARM == 1 || $CONFIG_X86 == 1 && $CONFIG_X86_64 != 1) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB $CONFIG_EXPERIMENTAL]];set CONFIG_USB_SL811HS_ALT [sync_tristate $CONFIG_USB_SL811HS_ALT $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu78.config.f.x10 disabled {y}} else {configure_entry .menu78.config.f.x10 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu78.config.f.x10 disabled {m}} else {configure_entry .menu78.config.f.x10 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu78.config.f.x10 normal {m}} else {configure_entry .menu78.config.f.x10 disabled {m}}; configure_entry .menu78.config.f.x10 normal {n l}} else {configure_entry .menu78.config.f.x10 disabled {y n m l}}
	global CONFIG_USB_SL811HS
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_ARM == 1 || $CONFIG_X86 == 1 && $CONFIG_X86_64 != 1) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB $CONFIG_EXPERIMENTAL]];set CONFIG_USB_SL811HS [sync_tristate $CONFIG_USB_SL811HS $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu78.config.f.x11 disabled {y}} else {configure_entry .menu78.config.f.x11 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu78.config.f.x11 disabled {m}} else {configure_entry .menu78.config.f.x11 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu78.config.f.x11 normal {m}} else {configure_entry .menu78.config.f.x11 disabled {m}}; configure_entry .menu78.config.f.x11 normal {n l}} else {configure_entry .menu78.config.f.x11 disabled {y n m l}}
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2)} then {configure_entry .menu78.config.f.x12 normal {m}} else {configure_entry .menu78.config.f.x12 disabled {m}}
	global CONFIG_SOUND
	global CONFIG_USB_AUDIO
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4) && ($CONFIG_SOUND == 1 || $CONFIG_SOUND == 2 || $CONFIG_SOUND == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB $CONFIG_SOUND]];set CONFIG_USB_AUDIO [sync_tristate $CONFIG_USB_AUDIO $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu78.config.f.x13 disabled {y}} else {configure_entry .menu78.config.f.x13 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu78.config.f.x13 disabled {m}} else {configure_entry .menu78.config.f.x13 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu78.config.f.x13 normal {m}} else {configure_entry .menu78.config.f.x13 disabled {m}}; configure_entry .menu78.config.f.x13 normal {n l}} else {configure_entry .menu78.config.f.x13 disabled {y n m l}}
	global CONFIG_USB_EMI26
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_AUDIO == 1 || $CONFIG_USB_AUDIO == 2 || $CONFIG_USB_AUDIO == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB_AUDIO]];set CONFIG_USB_EMI26 [sync_tristate $CONFIG_USB_EMI26 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu78.config.f.x14 disabled {y}} else {configure_entry .menu78.config.f.x14 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu78.config.f.x14 disabled {m}} else {configure_entry .menu78.config.f.x14 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu78.config.f.x14 normal {m}} else {configure_entry .menu78.config.f.x14 disabled {m}}; configure_entry .menu78.config.f.x14 normal {n l}} else {configure_entry .menu78.config.f.x14 disabled {y n m l}}
	global CONFIG_BLUEZ
	global CONFIG_USB_BLUETOOTH
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_BLUEZ == 0) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB]];set CONFIG_USB_BLUETOOTH [sync_tristate $CONFIG_USB_BLUETOOTH $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu78.config.f.x15 disabled {y}} else {configure_entry .menu78.config.f.x15 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu78.config.f.x15 disabled {m}} else {configure_entry .menu78.config.f.x15 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu78.config.f.x15 normal {m}} else {configure_entry .menu78.config.f.x15 disabled {m}}; configure_entry .menu78.config.f.x15 normal {n l}} else {configure_entry .menu78.config.f.x15 disabled {y n m l}}
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_BLUEZ != 0)} then {configure_entry .menu78.config.f.x16 normal {m}} else {configure_entry .menu78.config.f.x16 disabled {m}}
	global CONFIG_USB_MIDI
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4) && ($CONFIG_SOUND == 1 || $CONFIG_SOUND == 2 || $CONFIG_SOUND == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB $CONFIG_SOUND]];set CONFIG_USB_MIDI [sync_tristate $CONFIG_USB_MIDI $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu78.config.f.x17 disabled {y}} else {configure_entry .menu78.config.f.x17 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu78.config.f.x17 disabled {m}} else {configure_entry .menu78.config.f.x17 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu78.config.f.x17 normal {m}} else {configure_entry .menu78.config.f.x17 disabled {m}}; configure_entry .menu78.config.f.x17 normal {n l}} else {configure_entry .menu78.config.f.x17 disabled {y n m l}}
	global CONFIG_SCSI
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_SCSI == 0)} then {configure_entry .menu78.config.f.x18 normal {m}} else {configure_entry .menu78.config.f.x18 disabled {m}}
	global CONFIG_USB_STORAGE
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB $CONFIG_SCSI]];set CONFIG_USB_STORAGE [sync_tristate $CONFIG_USB_STORAGE $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu78.config.f.x19 disabled {y}} else {configure_entry .menu78.config.f.x19 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu78.config.f.x19 disabled {m}} else {configure_entry .menu78.config.f.x19 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu78.config.f.x19 normal {m}} else {configure_entry .menu78.config.f.x19 disabled {m}}; configure_entry .menu78.config.f.x19 normal {n l}} else {configure_entry .menu78.config.f.x19 disabled {y n m l}}
	global CONFIG_USB_STORAGE_DEBUG
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_STORAGE == 1 || $CONFIG_USB_STORAGE == 2 || $CONFIG_USB_STORAGE == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB_STORAGE]];set CONFIG_USB_STORAGE_DEBUG [sync_bool $CONFIG_USB_STORAGE_DEBUG $tmpvar_dep 1];if {$tmpvar_dep != 1 && $tmpvar_dep != 2} then {configure_entry .menu78.config.f.x20 disabled {y};} else {configure_entry .menu78.config.f.x20 normal {y};}; configure_entry .menu78.config.f.x20 normal {n l}} else {configure_entry .menu78.config.f.x20 disabled {y n l}}
	global CONFIG_USB_STORAGE_DATAFAB
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_STORAGE == 1 || $CONFIG_USB_STORAGE == 2 || $CONFIG_USB_STORAGE == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB_STORAGE $CONFIG_EXPERIMENTAL]];set CONFIG_USB_STORAGE_DATAFAB [sync_bool $CONFIG_USB_STORAGE_DATAFAB $tmpvar_dep 1];if {$tmpvar_dep != 1 && $tmpvar_dep != 2} then {configure_entry .menu78.config.f.x21 disabled {y};} else {configure_entry .menu78.config.f.x21 normal {y};}; configure_entry .menu78.config.f.x21 normal {n l}} else {configure_entry .menu78.config.f.x21 disabled {y n l}}
	global CONFIG_USB_STORAGE_FREECOM
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_STORAGE == 1 || $CONFIG_USB_STORAGE == 2 || $CONFIG_USB_STORAGE == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB_STORAGE]];set CONFIG_USB_STORAGE_FREECOM [sync_bool $CONFIG_USB_STORAGE_FREECOM $tmpvar_dep 1];if {$tmpvar_dep != 1 && $tmpvar_dep != 2} then {configure_entry .menu78.config.f.x22 disabled {y};} else {configure_entry .menu78.config.f.x22 normal {y};}; configure_entry .menu78.config.f.x22 normal {n l}} else {configure_entry .menu78.config.f.x22 disabled {y n l}}
	global CONFIG_IDE
	global CONFIG_USB_STORAGE_ISD200
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_STORAGE == 1 || $CONFIG_USB_STORAGE == 2 || $CONFIG_USB_STORAGE == 4) && ($CONFIG_IDE == 1 || $CONFIG_IDE == 2 || $CONFIG_IDE == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB_STORAGE $CONFIG_IDE]];set CONFIG_USB_STORAGE_ISD200 [sync_bool $CONFIG_USB_STORAGE_ISD200 $tmpvar_dep 1];if {$tmpvar_dep != 1 && $tmpvar_dep != 2} then {configure_entry .menu78.config.f.x23 disabled {y};} else {configure_entry .menu78.config.f.x23 normal {y};}; configure_entry .menu78.config.f.x23 normal {n l}} else {configure_entry .menu78.config.f.x23 disabled {y n l}}
	global CONFIG_USB_STORAGE_DPCM
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_STORAGE == 1 || $CONFIG_USB_STORAGE == 2 || $CONFIG_USB_STORAGE == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB_STORAGE]];set CONFIG_USB_STORAGE_DPCM [sync_bool $CONFIG_USB_STORAGE_DPCM $tmpvar_dep 1];if {$tmpvar_dep != 1 && $tmpvar_dep != 2} then {configure_entry .menu78.config.f.x24 disabled {y};} else {configure_entry .menu78.config.f.x24 normal {y};}; configure_entry .menu78.config.f.x24 normal {n l}} else {configure_entry .menu78.config.f.x24 disabled {y n l}}
	global CONFIG_USB_STORAGE_HP8200e
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_STORAGE == 1 || $CONFIG_USB_STORAGE == 2 || $CONFIG_USB_STORAGE == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB_STORAGE $CONFIG_EXPERIMENTAL]];set CONFIG_USB_STORAGE_HP8200e [sync_bool $CONFIG_USB_STORAGE_HP8200e $tmpvar_dep 1];if {$tmpvar_dep != 1 && $tmpvar_dep != 2} then {configure_entry .menu78.config.f.x25 disabled {y};} else {configure_entry .menu78.config.f.x25 normal {y};}; configure_entry .menu78.config.f.x25 normal {n l}} else {configure_entry .menu78.config.f.x25 disabled {y n l}}
	global CONFIG_USB_STORAGE_SDDR09
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_STORAGE == 1 || $CONFIG_USB_STORAGE == 2 || $CONFIG_USB_STORAGE == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB_STORAGE $CONFIG_EXPERIMENTAL]];set CONFIG_USB_STORAGE_SDDR09 [sync_bool $CONFIG_USB_STORAGE_SDDR09 $tmpvar_dep 1];if {$tmpvar_dep != 1 && $tmpvar_dep != 2} then {configure_entry .menu78.config.f.x26 disabled {y};} else {configure_entry .menu78.config.f.x26 normal {y};}; configure_entry .menu78.config.f.x26 normal {n l}} else {configure_entry .menu78.config.f.x26 disabled {y n l}}
	global CONFIG_USB_STORAGE_SDDR55
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_STORAGE == 1 || $CONFIG_USB_STORAGE == 2 || $CONFIG_USB_STORAGE == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB_STORAGE $CONFIG_EXPERIMENTAL]];set CONFIG_USB_STORAGE_SDDR55 [sync_bool $CONFIG_USB_STORAGE_SDDR55 $tmpvar_dep 1];if {$tmpvar_dep != 1 && $tmpvar_dep != 2} then {configure_entry .menu78.config.f.x27 disabled {y};} else {configure_entry .menu78.config.f.x27 normal {y};}; configure_entry .menu78.config.f.x27 normal {n l}} else {configure_entry .menu78.config.f.x27 disabled {y n l}}
	global CONFIG_USB_STORAGE_JUMPSHOT
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_STORAGE == 1 || $CONFIG_USB_STORAGE == 2 || $CONFIG_USB_STORAGE == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB_STORAGE $CONFIG_EXPERIMENTAL]];set CONFIG_USB_STORAGE_JUMPSHOT [sync_bool $CONFIG_USB_STORAGE_JUMPSHOT $tmpvar_dep 1];if {$tmpvar_dep != 1 && $tmpvar_dep != 2} then {configure_entry .menu78.config.f.x28 disabled {y};} else {configure_entry .menu78.config.f.x28 normal {y};}; configure_entry .menu78.config.f.x28 normal {n l}} else {configure_entry .menu78.config.f.x28 disabled {y n l}}
	global CONFIG_USB_ACM
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB]];set CONFIG_USB_ACM [sync_tristate $CONFIG_USB_ACM $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu78.config.f.x29 disabled {y}} else {configure_entry .menu78.config.f.x29 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu78.config.f.x29 disabled {m}} else {configure_entry .menu78.config.f.x29 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu78.config.f.x29 normal {m}} else {configure_entry .menu78.config.f.x29 disabled {m}}; configure_entry .menu78.config.f.x29 normal {n l}} else {configure_entry .menu78.config.f.x29 disabled {y n m l}}
	global CONFIG_USB_PRINTER
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB]];set CONFIG_USB_PRINTER [sync_tristate $CONFIG_USB_PRINTER $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu78.config.f.x30 disabled {y}} else {configure_entry .menu78.config.f.x30 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu78.config.f.x30 disabled {m}} else {configure_entry .menu78.config.f.x30 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu78.config.f.x30 normal {m}} else {configure_entry .menu78.config.f.x30 disabled {m}}; configure_entry .menu78.config.f.x30 normal {n l}} else {configure_entry .menu78.config.f.x30 disabled {y n m l}}
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2)} then {configure_entry .menu78.config.f.x31 normal {m}} else {configure_entry .menu78.config.f.x31 disabled {m}}
	global CONFIG_USB_HID
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB]];set CONFIG_USB_HID [sync_tristate $CONFIG_USB_HID $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu78.config.f.x32 disabled {y}} else {configure_entry .menu78.config.f.x32 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu78.config.f.x32 disabled {m}} else {configure_entry .menu78.config.f.x32 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu78.config.f.x32 normal {m}} else {configure_entry .menu78.config.f.x32 disabled {m}}; configure_entry .menu78.config.f.x32 normal {n l}} else {configure_entry .menu78.config.f.x32 disabled {y n m l}}
	global CONFIG_INPUT
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_INPUT == 0)} then {configure_entry .menu78.config.f.x33 normal {m}} else {configure_entry .menu78.config.f.x33 disabled {m}}
	global CONFIG_USB_HIDINPUT
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_INPUT == 1 || $CONFIG_INPUT == 2 || $CONFIG_INPUT == 4) && ($CONFIG_USB_HID == 1 || $CONFIG_USB_HID == 2 || $CONFIG_USB_HID == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_INPUT $CONFIG_USB_HID]];set CONFIG_USB_HIDINPUT [sync_bool $CONFIG_USB_HIDINPUT $tmpvar_dep 1];if {$tmpvar_dep != 1 && $tmpvar_dep != 2} then {configure_entry .menu78.config.f.x34 disabled {y};} else {configure_entry .menu78.config.f.x34 normal {y};}; configure_entry .menu78.config.f.x34 normal {n l}} else {configure_entry .menu78.config.f.x34 disabled {y n l}}
	global CONFIG_USB_HIDDEV
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_HID == 1 || $CONFIG_USB_HID == 2 || $CONFIG_USB_HID == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB_HID]];set CONFIG_USB_HIDDEV [sync_bool $CONFIG_USB_HIDDEV $tmpvar_dep 1];if {$tmpvar_dep != 1 && $tmpvar_dep != 2} then {configure_entry .menu78.config.f.x35 disabled {y};} else {configure_entry .menu78.config.f.x35 normal {y};}; configure_entry .menu78.config.f.x35 normal {n l}} else {configure_entry .menu78.config.f.x35 disabled {y n l}}
	global CONFIG_USB_KBD
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_HID != 1) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4) && ($CONFIG_INPUT == 1 || $CONFIG_INPUT == 2 || $CONFIG_INPUT == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB $CONFIG_INPUT]];set CONFIG_USB_KBD [sync_tristate $CONFIG_USB_KBD $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu78.config.f.x36 disabled {y}} else {configure_entry .menu78.config.f.x36 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu78.config.f.x36 disabled {m}} else {configure_entry .menu78.config.f.x36 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu78.config.f.x36 normal {m}} else {configure_entry .menu78.config.f.x36 disabled {m}}; configure_entry .menu78.config.f.x36 normal {n l}} else {configure_entry .menu78.config.f.x36 disabled {y n m l}}
	global CONFIG_USB_MOUSE
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_HID != 1) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4) && ($CONFIG_INPUT == 1 || $CONFIG_INPUT == 2 || $CONFIG_INPUT == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB $CONFIG_INPUT]];set CONFIG_USB_MOUSE [sync_tristate $CONFIG_USB_MOUSE $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu78.config.f.x37 disabled {y}} else {configure_entry .menu78.config.f.x37 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu78.config.f.x37 disabled {m}} else {configure_entry .menu78.config.f.x37 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu78.config.f.x37 normal {m}} else {configure_entry .menu78.config.f.x37 disabled {m}}; configure_entry .menu78.config.f.x37 normal {n l}} else {configure_entry .menu78.config.f.x37 disabled {y n m l}}
	global CONFIG_USB_AIPTEK
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4) && ($CONFIG_INPUT == 1 || $CONFIG_INPUT == 2 || $CONFIG_INPUT == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB $CONFIG_INPUT]];set CONFIG_USB_AIPTEK [sync_tristate $CONFIG_USB_AIPTEK $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu78.config.f.x38 disabled {y}} else {configure_entry .menu78.config.f.x38 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu78.config.f.x38 disabled {m}} else {configure_entry .menu78.config.f.x38 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu78.config.f.x38 normal {m}} else {configure_entry .menu78.config.f.x38 disabled {m}}; configure_entry .menu78.config.f.x38 normal {n l}} else {configure_entry .menu78.config.f.x38 disabled {y n m l}}
	global CONFIG_USB_WACOM
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4) && ($CONFIG_INPUT == 1 || $CONFIG_INPUT == 2 || $CONFIG_INPUT == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB $CONFIG_INPUT]];set CONFIG_USB_WACOM [sync_tristate $CONFIG_USB_WACOM $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu78.config.f.x39 disabled {y}} else {configure_entry .menu78.config.f.x39 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu78.config.f.x39 disabled {m}} else {configure_entry .menu78.config.f.x39 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu78.config.f.x39 normal {m}} else {configure_entry .menu78.config.f.x39 disabled {m}}; configure_entry .menu78.config.f.x39 normal {n l}} else {configure_entry .menu78.config.f.x39 disabled {y n m l}}
	global CONFIG_USB_KBTAB
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4) && ($CONFIG_INPUT == 1 || $CONFIG_INPUT == 2 || $CONFIG_INPUT == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB $CONFIG_INPUT]];set CONFIG_USB_KBTAB [sync_tristate $CONFIG_USB_KBTAB $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu78.config.f.x40 disabled {y}} else {configure_entry .menu78.config.f.x40 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu78.config.f.x40 disabled {m}} else {configure_entry .menu78.config.f.x40 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu78.config.f.x40 normal {m}} else {configure_entry .menu78.config.f.x40 disabled {m}}; configure_entry .menu78.config.f.x40 normal {n l}} else {configure_entry .menu78.config.f.x40 disabled {y n m l}}
	global CONFIG_USB_POWERMATE
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4) && ($CONFIG_INPUT == 1 || $CONFIG_INPUT == 2 || $CONFIG_INPUT == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB $CONFIG_INPUT]];set CONFIG_USB_POWERMATE [sync_tristate $CONFIG_USB_POWERMATE $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu78.config.f.x41 disabled {y}} else {configure_entry .menu78.config.f.x41 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu78.config.f.x41 disabled {m}} else {configure_entry .menu78.config.f.x41 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu78.config.f.x41 normal {m}} else {configure_entry .menu78.config.f.x41 disabled {m}}; configure_entry .menu78.config.f.x41 normal {n l}} else {configure_entry .menu78.config.f.x41 disabled {y n m l}}
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2)} then {configure_entry .menu78.config.f.x42 normal {m}} else {configure_entry .menu78.config.f.x42 disabled {m}}
	global CONFIG_USB_DC2XX
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB]];set CONFIG_USB_DC2XX [sync_tristate $CONFIG_USB_DC2XX $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu78.config.f.x43 disabled {y}} else {configure_entry .menu78.config.f.x43 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu78.config.f.x43 disabled {m}} else {configure_entry .menu78.config.f.x43 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu78.config.f.x43 normal {m}} else {configure_entry .menu78.config.f.x43 disabled {m}}; configure_entry .menu78.config.f.x43 normal {n l}} else {configure_entry .menu78.config.f.x43 disabled {y n m l}}
	global CONFIG_USB_MDC800
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB $CONFIG_EXPERIMENTAL]];set CONFIG_USB_MDC800 [sync_tristate $CONFIG_USB_MDC800 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu78.config.f.x44 disabled {y}} else {configure_entry .menu78.config.f.x44 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu78.config.f.x44 disabled {m}} else {configure_entry .menu78.config.f.x44 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu78.config.f.x44 normal {m}} else {configure_entry .menu78.config.f.x44 disabled {m}}; configure_entry .menu78.config.f.x44 normal {n l}} else {configure_entry .menu78.config.f.x44 disabled {y n m l}}
	global CONFIG_USB_SCANNER
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB]];set CONFIG_USB_SCANNER [sync_tristate $CONFIG_USB_SCANNER $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu78.config.f.x45 disabled {y}} else {configure_entry .menu78.config.f.x45 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu78.config.f.x45 disabled {m}} else {configure_entry .menu78.config.f.x45 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu78.config.f.x45 normal {m}} else {configure_entry .menu78.config.f.x45 disabled {m}}; configure_entry .menu78.config.f.x45 normal {n l}} else {configure_entry .menu78.config.f.x45 disabled {y n m l}}
	global CONFIG_USB_MICROTEK
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB $CONFIG_SCSI]];set CONFIG_USB_MICROTEK [sync_tristate $CONFIG_USB_MICROTEK $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu78.config.f.x46 disabled {y}} else {configure_entry .menu78.config.f.x46 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu78.config.f.x46 disabled {m}} else {configure_entry .menu78.config.f.x46 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu78.config.f.x46 normal {m}} else {configure_entry .menu78.config.f.x46 disabled {m}}; configure_entry .menu78.config.f.x46 normal {n l}} else {configure_entry .menu78.config.f.x46 disabled {y n m l}}
	global CONFIG_USB_HPUSBSCSI
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB $CONFIG_SCSI $CONFIG_EXPERIMENTAL]];set CONFIG_USB_HPUSBSCSI [sync_tristate $CONFIG_USB_HPUSBSCSI $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu78.config.f.x47 disabled {y}} else {configure_entry .menu78.config.f.x47 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu78.config.f.x47 disabled {m}} else {configure_entry .menu78.config.f.x47 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu78.config.f.x47 normal {m}} else {configure_entry .menu78.config.f.x47 disabled {m}}; configure_entry .menu78.config.f.x47 normal {n l}} else {configure_entry .menu78.config.f.x47 disabled {y n m l}}
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2)} then {configure_entry .menu78.config.f.x48 normal {m}} else {configure_entry .menu78.config.f.x48 disabled {m}}
	global CONFIG_VIDEO_DEV
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_VIDEO_DEV == 0)} then {configure_entry .menu78.config.f.x49 normal {m}} else {configure_entry .menu78.config.f.x49 disabled {m}}
	global CONFIG_USB_IBMCAM
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_VIDEO_DEV != 0) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4) && ($CONFIG_VIDEO_DEV == 1 || $CONFIG_VIDEO_DEV == 2 || $CONFIG_VIDEO_DEV == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB $CONFIG_VIDEO_DEV]];set CONFIG_USB_IBMCAM [sync_tristate $CONFIG_USB_IBMCAM $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu78.config.f.x50 disabled {y}} else {configure_entry .menu78.config.f.x50 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu78.config.f.x50 disabled {m}} else {configure_entry .menu78.config.f.x50 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu78.config.f.x50 normal {m}} else {configure_entry .menu78.config.f.x50 disabled {m}}; configure_entry .menu78.config.f.x50 normal {n l}} else {configure_entry .menu78.config.f.x50 disabled {y n m l}}
	global CONFIG_USB_KONICAWC
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_VIDEO_DEV != 0) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4) && ($CONFIG_VIDEO_DEV == 1 || $CONFIG_VIDEO_DEV == 2 || $CONFIG_VIDEO_DEV == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB $CONFIG_VIDEO_DEV]];set CONFIG_USB_KONICAWC [sync_tristate $CONFIG_USB_KONICAWC $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu78.config.f.x51 disabled {y}} else {configure_entry .menu78.config.f.x51 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu78.config.f.x51 disabled {m}} else {configure_entry .menu78.config.f.x51 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu78.config.f.x51 normal {m}} else {configure_entry .menu78.config.f.x51 disabled {m}}; configure_entry .menu78.config.f.x51 normal {n l}} else {configure_entry .menu78.config.f.x51 disabled {y n m l}}
	global CONFIG_USB_OV511
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_VIDEO_DEV != 0) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4) && ($CONFIG_VIDEO_DEV == 1 || $CONFIG_VIDEO_DEV == 2 || $CONFIG_VIDEO_DEV == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB $CONFIG_VIDEO_DEV]];set CONFIG_USB_OV511 [sync_tristate $CONFIG_USB_OV511 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu78.config.f.x52 disabled {y}} else {configure_entry .menu78.config.f.x52 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu78.config.f.x52 disabled {m}} else {configure_entry .menu78.config.f.x52 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu78.config.f.x52 normal {m}} else {configure_entry .menu78.config.f.x52 disabled {m}}; configure_entry .menu78.config.f.x52 normal {n l}} else {configure_entry .menu78.config.f.x52 disabled {y n m l}}
	global CONFIG_USB_PWC
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_VIDEO_DEV != 0) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4) && ($CONFIG_VIDEO_DEV == 1 || $CONFIG_VIDEO_DEV == 2 || $CONFIG_VIDEO_DEV == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB $CONFIG_VIDEO_DEV]];set CONFIG_USB_PWC [sync_tristate $CONFIG_USB_PWC $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu78.config.f.x53 disabled {y}} else {configure_entry .menu78.config.f.x53 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu78.config.f.x53 disabled {m}} else {configure_entry .menu78.config.f.x53 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu78.config.f.x53 normal {m}} else {configure_entry .menu78.config.f.x53 disabled {m}}; configure_entry .menu78.config.f.x53 normal {n l}} else {configure_entry .menu78.config.f.x53 disabled {y n m l}}
	global CONFIG_USB_SE401
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_VIDEO_DEV != 0) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4) && ($CONFIG_VIDEO_DEV == 1 || $CONFIG_VIDEO_DEV == 2 || $CONFIG_VIDEO_DEV == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB $CONFIG_VIDEO_DEV]];set CONFIG_USB_SE401 [sync_tristate $CONFIG_USB_SE401 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu78.config.f.x54 disabled {y}} else {configure_entry .menu78.config.f.x54 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu78.config.f.x54 disabled {m}} else {configure_entry .menu78.config.f.x54 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu78.config.f.x54 normal {m}} else {configure_entry .menu78.config.f.x54 disabled {m}}; configure_entry .menu78.config.f.x54 normal {n l}} else {configure_entry .menu78.config.f.x54 disabled {y n m l}}
	global CONFIG_USB_STV680
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_VIDEO_DEV != 0) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4) && ($CONFIG_VIDEO_DEV == 1 || $CONFIG_VIDEO_DEV == 2 || $CONFIG_VIDEO_DEV == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB $CONFIG_VIDEO_DEV]];set CONFIG_USB_STV680 [sync_tristate $CONFIG_USB_STV680 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu78.config.f.x55 disabled {y}} else {configure_entry .menu78.config.f.x55 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu78.config.f.x55 disabled {m}} else {configure_entry .menu78.config.f.x55 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu78.config.f.x55 normal {m}} else {configure_entry .menu78.config.f.x55 disabled {m}}; configure_entry .menu78.config.f.x55 normal {n l}} else {configure_entry .menu78.config.f.x55 disabled {y n m l}}
	global CONFIG_I2C
	global CONFIG_USB_W9968CF
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_VIDEO_DEV != 0) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4) && ($CONFIG_VIDEO_DEV == 1 || $CONFIG_VIDEO_DEV == 2 || $CONFIG_VIDEO_DEV == 4) && ($CONFIG_I2C == 1 || $CONFIG_I2C == 2 || $CONFIG_I2C == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB $CONFIG_VIDEO_DEV $CONFIG_I2C]];set CONFIG_USB_W9968CF [sync_tristate $CONFIG_USB_W9968CF $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu78.config.f.x56 disabled {y}} else {configure_entry .menu78.config.f.x56 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu78.config.f.x56 disabled {m}} else {configure_entry .menu78.config.f.x56 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu78.config.f.x56 normal {m}} else {configure_entry .menu78.config.f.x56 disabled {m}}; configure_entry .menu78.config.f.x56 normal {n l}} else {configure_entry .menu78.config.f.x56 disabled {y n m l}}
	global CONFIG_USB_VICAM
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_VIDEO_DEV != 0) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4) && ($CONFIG_VIDEO_DEV == 1 || $CONFIG_VIDEO_DEV == 2 || $CONFIG_VIDEO_DEV == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB $CONFIG_VIDEO_DEV $CONFIG_EXPERIMENTAL]];set CONFIG_USB_VICAM [sync_tristate $CONFIG_USB_VICAM $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu78.config.f.x57 disabled {y}} else {configure_entry .menu78.config.f.x57 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu78.config.f.x57 disabled {m}} else {configure_entry .menu78.config.f.x57 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu78.config.f.x57 normal {m}} else {configure_entry .menu78.config.f.x57 disabled {m}}; configure_entry .menu78.config.f.x57 normal {n l}} else {configure_entry .menu78.config.f.x57 disabled {y n m l}}
	global CONFIG_USB_DSBR
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_VIDEO_DEV != 0) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4) && ($CONFIG_VIDEO_DEV == 1 || $CONFIG_VIDEO_DEV == 2 || $CONFIG_VIDEO_DEV == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB $CONFIG_VIDEO_DEV $CONFIG_EXPERIMENTAL]];set CONFIG_USB_DSBR [sync_tristate $CONFIG_USB_DSBR $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu78.config.f.x58 disabled {y}} else {configure_entry .menu78.config.f.x58 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu78.config.f.x58 disabled {m}} else {configure_entry .menu78.config.f.x58 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu78.config.f.x58 normal {m}} else {configure_entry .menu78.config.f.x58 disabled {m}}; configure_entry .menu78.config.f.x58 normal {n l}} else {configure_entry .menu78.config.f.x58 disabled {y n m l}}
	global CONFIG_USB_DABUSB
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_VIDEO_DEV != 0) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB]];set CONFIG_USB_DABUSB [sync_tristate $CONFIG_USB_DABUSB $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu78.config.f.x59 disabled {y}} else {configure_entry .menu78.config.f.x59 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu78.config.f.x59 disabled {m}} else {configure_entry .menu78.config.f.x59 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu78.config.f.x59 normal {m}} else {configure_entry .menu78.config.f.x59 disabled {m}}; configure_entry .menu78.config.f.x59 normal {n l}} else {configure_entry .menu78.config.f.x59 disabled {y n m l}}
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2)} then {configure_entry .menu78.config.f.x60 normal {m}} else {configure_entry .menu78.config.f.x60 disabled {m}}
	global CONFIG_NET
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_NET == 0)} then {configure_entry .menu78.config.f.x61 normal {m}} else {configure_entry .menu78.config.f.x61 disabled {m}}
	global CONFIG_USB_PEGASUS
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_NET != 0) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4) && ($CONFIG_NET == 1 || $CONFIG_NET == 2 || $CONFIG_NET == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB $CONFIG_NET $CONFIG_EXPERIMENTAL]];set CONFIG_USB_PEGASUS [sync_tristate $CONFIG_USB_PEGASUS $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu78.config.f.x62 disabled {y}} else {configure_entry .menu78.config.f.x62 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu78.config.f.x62 disabled {m}} else {configure_entry .menu78.config.f.x62 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu78.config.f.x62 normal {m}} else {configure_entry .menu78.config.f.x62 disabled {m}}; configure_entry .menu78.config.f.x62 normal {n l}} else {configure_entry .menu78.config.f.x62 disabled {y n m l}}
	global CONFIG_USB_RTL8150
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_NET != 0) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4) && ($CONFIG_NET == 1 || $CONFIG_NET == 2 || $CONFIG_NET == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB $CONFIG_NET $CONFIG_EXPERIMENTAL]];set CONFIG_USB_RTL8150 [sync_tristate $CONFIG_USB_RTL8150 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu78.config.f.x63 disabled {y}} else {configure_entry .menu78.config.f.x63 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu78.config.f.x63 disabled {m}} else {configure_entry .menu78.config.f.x63 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu78.config.f.x63 normal {m}} else {configure_entry .menu78.config.f.x63 disabled {m}}; configure_entry .menu78.config.f.x63 normal {n l}} else {configure_entry .menu78.config.f.x63 disabled {y n m l}}
	global CONFIG_USB_KAWETH
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_NET != 0) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4) && ($CONFIG_NET == 1 || $CONFIG_NET == 2 || $CONFIG_NET == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB $CONFIG_NET $CONFIG_EXPERIMENTAL]];set CONFIG_USB_KAWETH [sync_tristate $CONFIG_USB_KAWETH $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu78.config.f.x64 disabled {y}} else {configure_entry .menu78.config.f.x64 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu78.config.f.x64 disabled {m}} else {configure_entry .menu78.config.f.x64 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu78.config.f.x64 normal {m}} else {configure_entry .menu78.config.f.x64 disabled {m}}; configure_entry .menu78.config.f.x64 normal {n l}} else {configure_entry .menu78.config.f.x64 disabled {y n m l}}
	global CONFIG_USB_CATC
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_NET != 0) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4) && ($CONFIG_NET == 1 || $CONFIG_NET == 2 || $CONFIG_NET == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB $CONFIG_NET $CONFIG_EXPERIMENTAL]];set CONFIG_USB_CATC [sync_tristate $CONFIG_USB_CATC $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu78.config.f.x65 disabled {y}} else {configure_entry .menu78.config.f.x65 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu78.config.f.x65 disabled {m}} else {configure_entry .menu78.config.f.x65 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu78.config.f.x65 normal {m}} else {configure_entry .menu78.config.f.x65 disabled {m}}; configure_entry .menu78.config.f.x65 normal {n l}} else {configure_entry .menu78.config.f.x65 disabled {y n m l}}
	global CONFIG_USB_AX8817X
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_NET != 0) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4) && ($CONFIG_NET == 1 || $CONFIG_NET == 2 || $CONFIG_NET == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB $CONFIG_NET $CONFIG_EXPERIMENTAL]];set CONFIG_USB_AX8817X [sync_tristate $CONFIG_USB_AX8817X $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu78.config.f.x66 disabled {y}} else {configure_entry .menu78.config.f.x66 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu78.config.f.x66 disabled {m}} else {configure_entry .menu78.config.f.x66 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu78.config.f.x66 normal {m}} else {configure_entry .menu78.config.f.x66 disabled {m}}; configure_entry .menu78.config.f.x66 normal {n l}} else {configure_entry .menu78.config.f.x66 disabled {y n m l}}
	global CONFIG_USB_CDCETHER
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_NET != 0) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4) && ($CONFIG_NET == 1 || $CONFIG_NET == 2 || $CONFIG_NET == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB $CONFIG_NET $CONFIG_EXPERIMENTAL]];set CONFIG_USB_CDCETHER [sync_tristate $CONFIG_USB_CDCETHER $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu78.config.f.x67 disabled {y}} else {configure_entry .menu78.config.f.x67 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu78.config.f.x67 disabled {m}} else {configure_entry .menu78.config.f.x67 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu78.config.f.x67 normal {m}} else {configure_entry .menu78.config.f.x67 disabled {m}}; configure_entry .menu78.config.f.x67 normal {n l}} else {configure_entry .menu78.config.f.x67 disabled {y n m l}}
	global CONFIG_USB_USBNET
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_NET != 0) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4) && ($CONFIG_NET == 1 || $CONFIG_NET == 2 || $CONFIG_NET == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB $CONFIG_NET $CONFIG_EXPERIMENTAL]];set CONFIG_USB_USBNET [sync_tristate $CONFIG_USB_USBNET $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu78.config.f.x68 disabled {y}} else {configure_entry .menu78.config.f.x68 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu78.config.f.x68 disabled {m}} else {configure_entry .menu78.config.f.x68 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu78.config.f.x68 normal {m}} else {configure_entry .menu78.config.f.x68 disabled {m}}; configure_entry .menu78.config.f.x68 normal {n l}} else {configure_entry .menu78.config.f.x68 disabled {y n m l}}
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2)} then {configure_entry .menu78.config.f.x69 normal {m}} else {configure_entry .menu78.config.f.x69 disabled {m}}
	global CONFIG_PARPORT
	global CONFIG_USB_USS720
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4) && ($CONFIG_PARPORT == 1 || $CONFIG_PARPORT == 2 || $CONFIG_PARPORT == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB $CONFIG_PARPORT]];set CONFIG_USB_USS720 [sync_tristate $CONFIG_USB_USS720 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu78.config.f.x70 disabled {y}} else {configure_entry .menu78.config.f.x70 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu78.config.f.x70 disabled {m}} else {configure_entry .menu78.config.f.x70 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu78.config.f.x70 normal {m}} else {configure_entry .menu78.config.f.x70 disabled {m}}; configure_entry .menu78.config.f.x70 normal {n l}} else {configure_entry .menu78.config.f.x70 disabled {y n m l}}
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2)} then {configure_entry .menu78.config.f.x71 normal {m}} else {configure_entry .menu78.config.f.x71 disabled {m}}
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2)} then {configure_entry .menu78.config.f.x72 normal {m}} else {configure_entry .menu78.config.f.x72 disabled {m}}
	global CONFIG_USB_RIO500
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB $CONFIG_EXPERIMENTAL]];set CONFIG_USB_RIO500 [sync_tristate $CONFIG_USB_RIO500 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu78.config.f.x73 disabled {y}} else {configure_entry .menu78.config.f.x73 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu78.config.f.x73 disabled {m}} else {configure_entry .menu78.config.f.x73 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu78.config.f.x73 normal {m}} else {configure_entry .menu78.config.f.x73 disabled {m}}; configure_entry .menu78.config.f.x73 normal {n l}} else {configure_entry .menu78.config.f.x73 disabled {y n m l}}
	global CONFIG_USB_AUERSWALD
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB]];set CONFIG_USB_AUERSWALD [sync_tristate $CONFIG_USB_AUERSWALD $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu78.config.f.x74 disabled {y}} else {configure_entry .menu78.config.f.x74 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu78.config.f.x74 disabled {m}} else {configure_entry .menu78.config.f.x74 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu78.config.f.x74 normal {m}} else {configure_entry .menu78.config.f.x74 disabled {m}}; configure_entry .menu78.config.f.x74 normal {n l}} else {configure_entry .menu78.config.f.x74 disabled {y n m l}}
	global CONFIG_USB_TIGL
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB]];set CONFIG_USB_TIGL [sync_tristate $CONFIG_USB_TIGL $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu78.config.f.x75 disabled {y}} else {configure_entry .menu78.config.f.x75 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu78.config.f.x75 disabled {m}} else {configure_entry .menu78.config.f.x75 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu78.config.f.x75 normal {m}} else {configure_entry .menu78.config.f.x75 disabled {m}}; configure_entry .menu78.config.f.x75 normal {n l}} else {configure_entry .menu78.config.f.x75 disabled {y n m l}}
	global CONFIG_USB_BRLVGER
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB $CONFIG_EXPERIMENTAL]];set CONFIG_USB_BRLVGER [sync_tristate $CONFIG_USB_BRLVGER $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu78.config.f.x76 disabled {y}} else {configure_entry .menu78.config.f.x76 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu78.config.f.x76 disabled {m}} else {configure_entry .menu78.config.f.x76 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu78.config.f.x76 normal {m}} else {configure_entry .menu78.config.f.x76 disabled {m}}; configure_entry .menu78.config.f.x76 normal {n l}} else {configure_entry .menu78.config.f.x76 disabled {y n m l}}
	global CONFIG_USB_LCD
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB]];set CONFIG_USB_LCD [sync_tristate $CONFIG_USB_LCD $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu78.config.f.x77 disabled {y}} else {configure_entry .menu78.config.f.x77 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu78.config.f.x77 disabled {m}} else {configure_entry .menu78.config.f.x77 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu78.config.f.x77 normal {m}} else {configure_entry .menu78.config.f.x77 disabled {m}}; configure_entry .menu78.config.f.x77 normal {n l}} else {configure_entry .menu78.config.f.x77 disabled {y n m l}}
	global CONFIG_ATM
	global CONFIG_USB_SPEEDTOUCH
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_ATM == 1 || $CONFIG_ATM == 2) && ($CONFIG_ATM == 1 || $CONFIG_ATM == 2 || $CONFIG_ATM == 4) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ATM $CONFIG_USB]];set CONFIG_USB_SPEEDTOUCH [sync_tristate $CONFIG_USB_SPEEDTOUCH $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu78.config.f.x78 disabled {y}} else {configure_entry .menu78.config.f.x78 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu78.config.f.x78 disabled {m}} else {configure_entry .menu78.config.f.x78 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu78.config.f.x78 normal {m}} else {configure_entry .menu78.config.f.x78 disabled {m}}; configure_entry .menu78.config.f.x78 normal {n l}} else {configure_entry .menu78.config.f.x78 disabled {y n m l}}
}


proc update_define_menu78 {} {
	update_define_mainmenu
	global CONFIG_MODULES
	global CONFIG_USB_BANDWIDTH
	global CONFIG_USB_UHCI_ALT
	global CONFIG_USB_DEBUG
set CONFIG_USB_DEBUG [expr $CONFIG_USB_DEBUG|16]
	global CONFIG_USB_DEVICEFS
set CONFIG_USB_DEVICEFS [expr $CONFIG_USB_DEVICEFS|16]
set CONFIG_USB_BANDWIDTH [expr $CONFIG_USB_BANDWIDTH|16]
	global CONFIG_PCI
	global CONFIG_USB
	if {($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PCI]]; set CONFIG_USB [sync_tristate $CONFIG_USB $tmpvar_dep]; set CONFIG_USB [expr $CONFIG_USB&15]}
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2)} then {
	set CONFIG_USB_DEBUG [expr $CONFIG_USB_DEBUG&15]}
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2)} then {
	set CONFIG_USB_DEVICEFS [expr $CONFIG_USB_DEVICEFS&15]}
	global CONFIG_EXPERIMENTAL
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_EXPERIMENTAL == 1)} then {
	set CONFIG_USB_BANDWIDTH [expr $CONFIG_USB_BANDWIDTH&15]}
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_EXPERIMENTAL != 1)} then {	global CONSTANT_N
set CONFIG_USB_BANDWIDTH $CONSTANT_N }
	global CONFIG_USB_EHCI_HCD
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB $CONFIG_EXPERIMENTAL]]; set CONFIG_USB_EHCI_HCD [sync_tristate $CONFIG_USB_EHCI_HCD $tmpvar_dep]; set CONFIG_USB_EHCI_HCD [expr $CONFIG_USB_EHCI_HCD&15]}
	global CONFIG_USB_UHCI
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_UHCI_ALT != 1) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB]]; set CONFIG_USB_UHCI [sync_tristate $CONFIG_USB_UHCI $tmpvar_dep]; set CONFIG_USB_UHCI [expr $CONFIG_USB_UHCI&15]}
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_UHCI != 1) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB]]; set CONFIG_USB_UHCI_ALT [sync_tristate $CONFIG_USB_UHCI_ALT $tmpvar_dep]; set CONFIG_USB_UHCI_ALT [expr $CONFIG_USB_UHCI_ALT&15]}
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_UHCI == 1)} then {	global CONSTANT_N
set CONFIG_USB_UHCI_ALT $CONSTANT_N }
	global CONFIG_USB_OHCI
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB]]; set CONFIG_USB_OHCI [sync_tristate $CONFIG_USB_OHCI $tmpvar_dep]; set CONFIG_USB_OHCI [expr $CONFIG_USB_OHCI&15]}
	global CONFIG_ARM
	global CONFIG_X86
	global CONFIG_X86_64
	global CONFIG_USB_SL811HS_ALT
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_ARM == 1 || $CONFIG_X86 == 1 && $CONFIG_X86_64 != 1) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB $CONFIG_EXPERIMENTAL]]; set CONFIG_USB_SL811HS_ALT [sync_tristate $CONFIG_USB_SL811HS_ALT $tmpvar_dep]; set CONFIG_USB_SL811HS_ALT [expr $CONFIG_USB_SL811HS_ALT&15]}
	global CONFIG_USB_SL811HS
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_ARM == 1 || $CONFIG_X86 == 1 && $CONFIG_X86_64 != 1) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB $CONFIG_EXPERIMENTAL]]; set CONFIG_USB_SL811HS [sync_tristate $CONFIG_USB_SL811HS $tmpvar_dep]; set CONFIG_USB_SL811HS [expr $CONFIG_USB_SL811HS&15]}
	global CONFIG_SOUND
	global CONFIG_USB_AUDIO
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4) && ($CONFIG_SOUND == 1 || $CONFIG_SOUND == 2 || $CONFIG_SOUND == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB $CONFIG_SOUND]]; set CONFIG_USB_AUDIO [sync_tristate $CONFIG_USB_AUDIO $tmpvar_dep]; set CONFIG_USB_AUDIO [expr $CONFIG_USB_AUDIO&15]}
	global CONFIG_USB_EMI26
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_AUDIO == 1 || $CONFIG_USB_AUDIO == 2 || $CONFIG_USB_AUDIO == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB_AUDIO]]; set CONFIG_USB_EMI26 [sync_tristate $CONFIG_USB_EMI26 $tmpvar_dep]; set CONFIG_USB_EMI26 [expr $CONFIG_USB_EMI26&15]}
	global CONFIG_BLUEZ
	global CONFIG_USB_BLUETOOTH
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_BLUEZ == 0) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB]]; set CONFIG_USB_BLUETOOTH [sync_tristate $CONFIG_USB_BLUETOOTH $tmpvar_dep]; set CONFIG_USB_BLUETOOTH [expr $CONFIG_USB_BLUETOOTH&15]}
	global CONFIG_USB_MIDI
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4) && ($CONFIG_SOUND == 1 || $CONFIG_SOUND == 2 || $CONFIG_SOUND == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB $CONFIG_SOUND]]; set CONFIG_USB_MIDI [sync_tristate $CONFIG_USB_MIDI $tmpvar_dep]; set CONFIG_USB_MIDI [expr $CONFIG_USB_MIDI&15]}
	global CONFIG_SCSI
	global CONFIG_USB_STORAGE
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB $CONFIG_SCSI]]; set CONFIG_USB_STORAGE [sync_tristate $CONFIG_USB_STORAGE $tmpvar_dep]; set CONFIG_USB_STORAGE [expr $CONFIG_USB_STORAGE&15]}
	global CONFIG_USB_STORAGE_DEBUG
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_STORAGE == 1 || $CONFIG_USB_STORAGE == 2 || $CONFIG_USB_STORAGE == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB_STORAGE]];set CONFIG_USB_STORAGE_DEBUG [sync_bool $CONFIG_USB_STORAGE_DEBUG $tmpvar_dep 1];set CONFIG_USB_STORAGE_DEBUG [expr $CONFIG_USB_STORAGE_DEBUG&15]}
	global CONFIG_USB_STORAGE_DATAFAB
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_STORAGE == 1 || $CONFIG_USB_STORAGE == 2 || $CONFIG_USB_STORAGE == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB_STORAGE $CONFIG_EXPERIMENTAL]];set CONFIG_USB_STORAGE_DATAFAB [sync_bool $CONFIG_USB_STORAGE_DATAFAB $tmpvar_dep 1];set CONFIG_USB_STORAGE_DATAFAB [expr $CONFIG_USB_STORAGE_DATAFAB&15]}
	global CONFIG_USB_STORAGE_FREECOM
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_STORAGE == 1 || $CONFIG_USB_STORAGE == 2 || $CONFIG_USB_STORAGE == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB_STORAGE]];set CONFIG_USB_STORAGE_FREECOM [sync_bool $CONFIG_USB_STORAGE_FREECOM $tmpvar_dep 1];set CONFIG_USB_STORAGE_FREECOM [expr $CONFIG_USB_STORAGE_FREECOM&15]}
	global CONFIG_IDE
	global CONFIG_USB_STORAGE_ISD200
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_STORAGE == 1 || $CONFIG_USB_STORAGE == 2 || $CONFIG_USB_STORAGE == 4) && ($CONFIG_IDE == 1 || $CONFIG_IDE == 2 || $CONFIG_IDE == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB_STORAGE $CONFIG_IDE]];set CONFIG_USB_STORAGE_ISD200 [sync_bool $CONFIG_USB_STORAGE_ISD200 $tmpvar_dep 1];set CONFIG_USB_STORAGE_ISD200 [expr $CONFIG_USB_STORAGE_ISD200&15]}
	global CONFIG_USB_STORAGE_DPCM
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_STORAGE == 1 || $CONFIG_USB_STORAGE == 2 || $CONFIG_USB_STORAGE == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB_STORAGE]];set CONFIG_USB_STORAGE_DPCM [sync_bool $CONFIG_USB_STORAGE_DPCM $tmpvar_dep 1];set CONFIG_USB_STORAGE_DPCM [expr $CONFIG_USB_STORAGE_DPCM&15]}
	global CONFIG_USB_STORAGE_HP8200e
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_STORAGE == 1 || $CONFIG_USB_STORAGE == 2 || $CONFIG_USB_STORAGE == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB_STORAGE $CONFIG_EXPERIMENTAL]];set CONFIG_USB_STORAGE_HP8200e [sync_bool $CONFIG_USB_STORAGE_HP8200e $tmpvar_dep 1];set CONFIG_USB_STORAGE_HP8200e [expr $CONFIG_USB_STORAGE_HP8200e&15]}
	global CONFIG_USB_STORAGE_SDDR09
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_STORAGE == 1 || $CONFIG_USB_STORAGE == 2 || $CONFIG_USB_STORAGE == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB_STORAGE $CONFIG_EXPERIMENTAL]];set CONFIG_USB_STORAGE_SDDR09 [sync_bool $CONFIG_USB_STORAGE_SDDR09 $tmpvar_dep 1];set CONFIG_USB_STORAGE_SDDR09 [expr $CONFIG_USB_STORAGE_SDDR09&15]}
	global CONFIG_USB_STORAGE_SDDR55
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_STORAGE == 1 || $CONFIG_USB_STORAGE == 2 || $CONFIG_USB_STORAGE == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB_STORAGE $CONFIG_EXPERIMENTAL]];set CONFIG_USB_STORAGE_SDDR55 [sync_bool $CONFIG_USB_STORAGE_SDDR55 $tmpvar_dep 1];set CONFIG_USB_STORAGE_SDDR55 [expr $CONFIG_USB_STORAGE_SDDR55&15]}
	global CONFIG_USB_STORAGE_JUMPSHOT
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_STORAGE == 1 || $CONFIG_USB_STORAGE == 2 || $CONFIG_USB_STORAGE == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB_STORAGE $CONFIG_EXPERIMENTAL]];set CONFIG_USB_STORAGE_JUMPSHOT [sync_bool $CONFIG_USB_STORAGE_JUMPSHOT $tmpvar_dep 1];set CONFIG_USB_STORAGE_JUMPSHOT [expr $CONFIG_USB_STORAGE_JUMPSHOT&15]}
	global CONFIG_USB_ACM
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB]]; set CONFIG_USB_ACM [sync_tristate $CONFIG_USB_ACM $tmpvar_dep]; set CONFIG_USB_ACM [expr $CONFIG_USB_ACM&15]}
	global CONFIG_USB_PRINTER
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB]]; set CONFIG_USB_PRINTER [sync_tristate $CONFIG_USB_PRINTER $tmpvar_dep]; set CONFIG_USB_PRINTER [expr $CONFIG_USB_PRINTER&15]}
	global CONFIG_USB_HID
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB]]; set CONFIG_USB_HID [sync_tristate $CONFIG_USB_HID $tmpvar_dep]; set CONFIG_USB_HID [expr $CONFIG_USB_HID&15]}
	global CONFIG_INPUT
	global CONFIG_USB_HIDINPUT
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_INPUT == 1 || $CONFIG_INPUT == 2 || $CONFIG_INPUT == 4) && ($CONFIG_USB_HID == 1 || $CONFIG_USB_HID == 2 || $CONFIG_USB_HID == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_INPUT $CONFIG_USB_HID]];set CONFIG_USB_HIDINPUT [sync_bool $CONFIG_USB_HIDINPUT $tmpvar_dep 1];set CONFIG_USB_HIDINPUT [expr $CONFIG_USB_HIDINPUT&15]}
	global CONFIG_USB_HIDDEV
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_HID == 1 || $CONFIG_USB_HID == 2 || $CONFIG_USB_HID == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB_HID]];set CONFIG_USB_HIDDEV [sync_bool $CONFIG_USB_HIDDEV $tmpvar_dep 1];set CONFIG_USB_HIDDEV [expr $CONFIG_USB_HIDDEV&15]}
	global CONFIG_USB_KBD
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_HID != 1) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4) && ($CONFIG_INPUT == 1 || $CONFIG_INPUT == 2 || $CONFIG_INPUT == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB $CONFIG_INPUT]]; set CONFIG_USB_KBD [sync_tristate $CONFIG_USB_KBD $tmpvar_dep]; set CONFIG_USB_KBD [expr $CONFIG_USB_KBD&15]}
	global CONFIG_USB_MOUSE
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_HID != 1) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4) && ($CONFIG_INPUT == 1 || $CONFIG_INPUT == 2 || $CONFIG_INPUT == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB $CONFIG_INPUT]]; set CONFIG_USB_MOUSE [sync_tristate $CONFIG_USB_MOUSE $tmpvar_dep]; set CONFIG_USB_MOUSE [expr $CONFIG_USB_MOUSE&15]}
	global CONFIG_USB_AIPTEK
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4) && ($CONFIG_INPUT == 1 || $CONFIG_INPUT == 2 || $CONFIG_INPUT == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB $CONFIG_INPUT]]; set CONFIG_USB_AIPTEK [sync_tristate $CONFIG_USB_AIPTEK $tmpvar_dep]; set CONFIG_USB_AIPTEK [expr $CONFIG_USB_AIPTEK&15]}
	global CONFIG_USB_WACOM
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4) && ($CONFIG_INPUT == 1 || $CONFIG_INPUT == 2 || $CONFIG_INPUT == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB $CONFIG_INPUT]]; set CONFIG_USB_WACOM [sync_tristate $CONFIG_USB_WACOM $tmpvar_dep]; set CONFIG_USB_WACOM [expr $CONFIG_USB_WACOM&15]}
	global CONFIG_USB_KBTAB
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4) && ($CONFIG_INPUT == 1 || $CONFIG_INPUT == 2 || $CONFIG_INPUT == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB $CONFIG_INPUT]]; set CONFIG_USB_KBTAB [sync_tristate $CONFIG_USB_KBTAB $tmpvar_dep]; set CONFIG_USB_KBTAB [expr $CONFIG_USB_KBTAB&15]}
	global CONFIG_USB_POWERMATE
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4) && ($CONFIG_INPUT == 1 || $CONFIG_INPUT == 2 || $CONFIG_INPUT == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB $CONFIG_INPUT]]; set CONFIG_USB_POWERMATE [sync_tristate $CONFIG_USB_POWERMATE $tmpvar_dep]; set CONFIG_USB_POWERMATE [expr $CONFIG_USB_POWERMATE&15]}
	global CONFIG_USB_DC2XX
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB]]; set CONFIG_USB_DC2XX [sync_tristate $CONFIG_USB_DC2XX $tmpvar_dep]; set CONFIG_USB_DC2XX [expr $CONFIG_USB_DC2XX&15]}
	global CONFIG_USB_MDC800
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB $CONFIG_EXPERIMENTAL]]; set CONFIG_USB_MDC800 [sync_tristate $CONFIG_USB_MDC800 $tmpvar_dep]; set CONFIG_USB_MDC800 [expr $CONFIG_USB_MDC800&15]}
	global CONFIG_USB_SCANNER
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB]]; set CONFIG_USB_SCANNER [sync_tristate $CONFIG_USB_SCANNER $tmpvar_dep]; set CONFIG_USB_SCANNER [expr $CONFIG_USB_SCANNER&15]}
	global CONFIG_USB_MICROTEK
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB $CONFIG_SCSI]]; set CONFIG_USB_MICROTEK [sync_tristate $CONFIG_USB_MICROTEK $tmpvar_dep]; set CONFIG_USB_MICROTEK [expr $CONFIG_USB_MICROTEK&15]}
	global CONFIG_USB_HPUSBSCSI
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB $CONFIG_SCSI $CONFIG_EXPERIMENTAL]]; set CONFIG_USB_HPUSBSCSI [sync_tristate $CONFIG_USB_HPUSBSCSI $tmpvar_dep]; set CONFIG_USB_HPUSBSCSI [expr $CONFIG_USB_HPUSBSCSI&15]}
	global CONFIG_VIDEO_DEV
	global CONFIG_USB_IBMCAM
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_VIDEO_DEV != 0) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4) && ($CONFIG_VIDEO_DEV == 1 || $CONFIG_VIDEO_DEV == 2 || $CONFIG_VIDEO_DEV == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB $CONFIG_VIDEO_DEV]]; set CONFIG_USB_IBMCAM [sync_tristate $CONFIG_USB_IBMCAM $tmpvar_dep]; set CONFIG_USB_IBMCAM [expr $CONFIG_USB_IBMCAM&15]}
	global CONFIG_USB_KONICAWC
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_VIDEO_DEV != 0) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4) && ($CONFIG_VIDEO_DEV == 1 || $CONFIG_VIDEO_DEV == 2 || $CONFIG_VIDEO_DEV == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB $CONFIG_VIDEO_DEV]]; set CONFIG_USB_KONICAWC [sync_tristate $CONFIG_USB_KONICAWC $tmpvar_dep]; set CONFIG_USB_KONICAWC [expr $CONFIG_USB_KONICAWC&15]}
	global CONFIG_USB_OV511
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_VIDEO_DEV != 0) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4) && ($CONFIG_VIDEO_DEV == 1 || $CONFIG_VIDEO_DEV == 2 || $CONFIG_VIDEO_DEV == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB $CONFIG_VIDEO_DEV]]; set CONFIG_USB_OV511 [sync_tristate $CONFIG_USB_OV511 $tmpvar_dep]; set CONFIG_USB_OV511 [expr $CONFIG_USB_OV511&15]}
	global CONFIG_USB_PWC
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_VIDEO_DEV != 0) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4) && ($CONFIG_VIDEO_DEV == 1 || $CONFIG_VIDEO_DEV == 2 || $CONFIG_VIDEO_DEV == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB $CONFIG_VIDEO_DEV]]; set CONFIG_USB_PWC [sync_tristate $CONFIG_USB_PWC $tmpvar_dep]; set CONFIG_USB_PWC [expr $CONFIG_USB_PWC&15]}
	global CONFIG_USB_SE401
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_VIDEO_DEV != 0) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4) && ($CONFIG_VIDEO_DEV == 1 || $CONFIG_VIDEO_DEV == 2 || $CONFIG_VIDEO_DEV == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB $CONFIG_VIDEO_DEV]]; set CONFIG_USB_SE401 [sync_tristate $CONFIG_USB_SE401 $tmpvar_dep]; set CONFIG_USB_SE401 [expr $CONFIG_USB_SE401&15]}
	global CONFIG_USB_STV680
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_VIDEO_DEV != 0) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4) && ($CONFIG_VIDEO_DEV == 1 || $CONFIG_VIDEO_DEV == 2 || $CONFIG_VIDEO_DEV == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB $CONFIG_VIDEO_DEV]]; set CONFIG_USB_STV680 [sync_tristate $CONFIG_USB_STV680 $tmpvar_dep]; set CONFIG_USB_STV680 [expr $CONFIG_USB_STV680&15]}
	global CONFIG_I2C
	global CONFIG_USB_W9968CF
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_VIDEO_DEV != 0) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4) && ($CONFIG_VIDEO_DEV == 1 || $CONFIG_VIDEO_DEV == 2 || $CONFIG_VIDEO_DEV == 4) && ($CONFIG_I2C == 1 || $CONFIG_I2C == 2 || $CONFIG_I2C == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB $CONFIG_VIDEO_DEV $CONFIG_I2C]]; set CONFIG_USB_W9968CF [sync_tristate $CONFIG_USB_W9968CF $tmpvar_dep]; set CONFIG_USB_W9968CF [expr $CONFIG_USB_W9968CF&15]}
	global CONFIG_USB_VICAM
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_VIDEO_DEV != 0) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4) && ($CONFIG_VIDEO_DEV == 1 || $CONFIG_VIDEO_DEV == 2 || $CONFIG_VIDEO_DEV == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB $CONFIG_VIDEO_DEV $CONFIG_EXPERIMENTAL]]; set CONFIG_USB_VICAM [sync_tristate $CONFIG_USB_VICAM $tmpvar_dep]; set CONFIG_USB_VICAM [expr $CONFIG_USB_VICAM&15]}
	global CONFIG_USB_DSBR
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_VIDEO_DEV != 0) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4) && ($CONFIG_VIDEO_DEV == 1 || $CONFIG_VIDEO_DEV == 2 || $CONFIG_VIDEO_DEV == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB $CONFIG_VIDEO_DEV $CONFIG_EXPERIMENTAL]]; set CONFIG_USB_DSBR [sync_tristate $CONFIG_USB_DSBR $tmpvar_dep]; set CONFIG_USB_DSBR [expr $CONFIG_USB_DSBR&15]}
	global CONFIG_USB_DABUSB
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_VIDEO_DEV != 0) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB]]; set CONFIG_USB_DABUSB [sync_tristate $CONFIG_USB_DABUSB $tmpvar_dep]; set CONFIG_USB_DABUSB [expr $CONFIG_USB_DABUSB&15]}
	global CONFIG_NET
	global CONFIG_USB_PEGASUS
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_NET != 0) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4) && ($CONFIG_NET == 1 || $CONFIG_NET == 2 || $CONFIG_NET == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB $CONFIG_NET $CONFIG_EXPERIMENTAL]]; set CONFIG_USB_PEGASUS [sync_tristate $CONFIG_USB_PEGASUS $tmpvar_dep]; set CONFIG_USB_PEGASUS [expr $CONFIG_USB_PEGASUS&15]}
	global CONFIG_USB_RTL8150
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_NET != 0) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4) && ($CONFIG_NET == 1 || $CONFIG_NET == 2 || $CONFIG_NET == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB $CONFIG_NET $CONFIG_EXPERIMENTAL]]; set CONFIG_USB_RTL8150 [sync_tristate $CONFIG_USB_RTL8150 $tmpvar_dep]; set CONFIG_USB_RTL8150 [expr $CONFIG_USB_RTL8150&15]}
	global CONFIG_USB_KAWETH
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_NET != 0) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4) && ($CONFIG_NET == 1 || $CONFIG_NET == 2 || $CONFIG_NET == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB $CONFIG_NET $CONFIG_EXPERIMENTAL]]; set CONFIG_USB_KAWETH [sync_tristate $CONFIG_USB_KAWETH $tmpvar_dep]; set CONFIG_USB_KAWETH [expr $CONFIG_USB_KAWETH&15]}
	global CONFIG_USB_CATC
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_NET != 0) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4) && ($CONFIG_NET == 1 || $CONFIG_NET == 2 || $CONFIG_NET == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB $CONFIG_NET $CONFIG_EXPERIMENTAL]]; set CONFIG_USB_CATC [sync_tristate $CONFIG_USB_CATC $tmpvar_dep]; set CONFIG_USB_CATC [expr $CONFIG_USB_CATC&15]}
	global CONFIG_USB_AX8817X
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_NET != 0) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4) && ($CONFIG_NET == 1 || $CONFIG_NET == 2 || $CONFIG_NET == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB $CONFIG_NET $CONFIG_EXPERIMENTAL]]; set CONFIG_USB_AX8817X [sync_tristate $CONFIG_USB_AX8817X $tmpvar_dep]; set CONFIG_USB_AX8817X [expr $CONFIG_USB_AX8817X&15]}
	global CONFIG_USB_CDCETHER
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_NET != 0) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4) && ($CONFIG_NET == 1 || $CONFIG_NET == 2 || $CONFIG_NET == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB $CONFIG_NET $CONFIG_EXPERIMENTAL]]; set CONFIG_USB_CDCETHER [sync_tristate $CONFIG_USB_CDCETHER $tmpvar_dep]; set CONFIG_USB_CDCETHER [expr $CONFIG_USB_CDCETHER&15]}
	global CONFIG_USB_USBNET
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_NET != 0) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4) && ($CONFIG_NET == 1 || $CONFIG_NET == 2 || $CONFIG_NET == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB $CONFIG_NET $CONFIG_EXPERIMENTAL]]; set CONFIG_USB_USBNET [sync_tristate $CONFIG_USB_USBNET $tmpvar_dep]; set CONFIG_USB_USBNET [expr $CONFIG_USB_USBNET&15]}
	global CONFIG_PARPORT
	global CONFIG_USB_USS720
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4) && ($CONFIG_PARPORT == 1 || $CONFIG_PARPORT == 2 || $CONFIG_PARPORT == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB $CONFIG_PARPORT]]; set CONFIG_USB_USS720 [sync_tristate $CONFIG_USB_USS720 $tmpvar_dep]; set CONFIG_USB_USS720 [expr $CONFIG_USB_USS720&15]}
	global CONFIG_USB_RIO500
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB $CONFIG_EXPERIMENTAL]]; set CONFIG_USB_RIO500 [sync_tristate $CONFIG_USB_RIO500 $tmpvar_dep]; set CONFIG_USB_RIO500 [expr $CONFIG_USB_RIO500&15]}
	global CONFIG_USB_AUERSWALD
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB]]; set CONFIG_USB_AUERSWALD [sync_tristate $CONFIG_USB_AUERSWALD $tmpvar_dep]; set CONFIG_USB_AUERSWALD [expr $CONFIG_USB_AUERSWALD&15]}
	global CONFIG_USB_TIGL
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB]]; set CONFIG_USB_TIGL [sync_tristate $CONFIG_USB_TIGL $tmpvar_dep]; set CONFIG_USB_TIGL [expr $CONFIG_USB_TIGL&15]}
	global CONFIG_USB_BRLVGER
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB $CONFIG_EXPERIMENTAL]]; set CONFIG_USB_BRLVGER [sync_tristate $CONFIG_USB_BRLVGER $tmpvar_dep]; set CONFIG_USB_BRLVGER [expr $CONFIG_USB_BRLVGER&15]}
	global CONFIG_USB_LCD
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB]]; set CONFIG_USB_LCD [sync_tristate $CONFIG_USB_LCD $tmpvar_dep]; set CONFIG_USB_LCD [expr $CONFIG_USB_LCD&15]}
	global CONFIG_ATM
	global CONFIG_USB_SPEEDTOUCH
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_ATM == 1 || $CONFIG_ATM == 2) && ($CONFIG_ATM == 1 || $CONFIG_ATM == 2 || $CONFIG_ATM == 4) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ATM $CONFIG_USB]]; set CONFIG_USB_SPEEDTOUCH [sync_tristate $CONFIG_USB_SPEEDTOUCH $tmpvar_dep]; set CONFIG_USB_SPEEDTOUCH [expr $CONFIG_USB_SPEEDTOUCH&15]}
}


proc menu79 {w title} {
	set oldFocus [focus]
	catch {focus .menu78}
	catch {destroy $w; unregister_active 79}
	toplevel $w -class Dialog
	wm withdraw $w
	global active_menus
	set active_menus [lsort -integer [linsert $active_menus end 79]]
	message $w.m -width 400 -aspect 300 -text \
		"USB Serial Converter support"  -relief raised
	pack $w.m -pady 10 -side top -padx 10
	wm title $w "USB Serial Converter support" 

	bind $w <Escape> "catch {focus $oldFocus}; destroy $w; unregister_active 79; break"
	set nextscript "catch {focus $oldFocus}; destroy $w; unregister_active 79; menu80 .menu80 \"$title\""
	frame $w.f
	button $w.f.back -text "OK" \
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 79"
	button $w.f.next -text "Next" -underline 0\
		-width 15 -command $nextscript
	bind all <Alt-n> $nextscript
	button $w.f.prev -text "Prev" -underline 0\
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 79; menu78 .menu78 \"$title\""
	bind $w <Alt-p> "catch {focus $oldFocus}; destroy $w; unregister_active 79; menu78 .menu78 \"$title\";break"
	pack $w.f.back $w.f.next $w.f.prev -side left -expand on
	pack $w.f -pady 10 -side bottom -anchor w -fill x
	frame $w.topline -relief ridge -borderwidth 2 -height 2
	pack $w.topline -side top -fill x

	frame $w.botline -relief ridge -borderwidth 2 -height 2
	pack $w.botline -side bottom -fill x

	frame $w.config
	pack $w.config -fill y -expand on

	scrollbar $w.config.vscroll -command "$w.config.canvas yview"
	pack $w.config.vscroll -side right -fill y

	canvas $w.config.canvas -height 1\
		-relief flat -borderwidth 0 -yscrollcommand "$w.config.vscroll set" \
		-width [expr [winfo screenwidth .] * 1 / 2] 
	frame $w.config.f
	bind $w <Key-Down> "$w.config.canvas yview scroll  1 unit;break;"
	bind $w <Key-Up> "$w.config.canvas yview scroll  -1 unit;break;"
	bind $w <Key-Next> "$w.config.canvas yview scroll  1 page;break;"
	bind $w <Key-Prior> "$w.config.canvas yview scroll  -1 page;break;"
	bind $w <Key-Home> "$w.config.canvas yview moveto 0;break;"
	bind $w <Key-End> "$w.config.canvas yview moveto 1 ;break;"
	pack $w.config.canvas -side right -fill y


	dep_tristate $w.config.f 79 0 "USB Serial Converter support" CONFIG_USB_SERIAL
	dep_bool $w.config.f 79 1 "  USB Serial Converter verbose debug" CONFIG_USB_SERIAL_DEBUG
	dep_bool $w.config.f 79 2 "  USB Generic Serial Driver" CONFIG_USB_SERIAL_GENERIC
	dep_tristate $w.config.f 79 3 "  USB Belkin and Peracom Single Port Serial Driver" CONFIG_USB_SERIAL_BELKIN
	dep_tristate $w.config.f 79 4 "  USB ConnectTech WhiteHEAT Serial Driver" CONFIG_USB_SERIAL_WHITEHEAT
	dep_tristate $w.config.f 79 5 "  USB Digi International AccelePort USB Serial Driver" CONFIG_USB_SERIAL_DIGI_ACCELEPORT
	dep_tristate $w.config.f 79 6 "  USB Empeg empeg-car Mark I/II Driver" CONFIG_USB_SERIAL_EMPEG
	dep_tristate $w.config.f 79 7 "  USB FTDI Single Port Serial Driver" CONFIG_USB_SERIAL_FTDI_SIO
	dep_tristate $w.config.f 79 8 "  USB Handspring Visor / Palm m50x / Sony Clie Driver" CONFIG_USB_SERIAL_VISOR
	dep_tristate $w.config.f 79 9 "  USB Compaq iPAQ / HP Jornada / Casio EM500 Driver" CONFIG_USB_SERIAL_IPAQ
	dep_tristate $w.config.f 79 10 "  USB IR Dongle Serial Driver (EXPERIMENTAL)" CONFIG_USB_SERIAL_IR
	dep_tristate $w.config.f 79 11 "  USB Inside Out Edgeport Serial Driver" CONFIG_USB_SERIAL_EDGEPORT
	dep_tristate $w.config.f 79 12 "  USB Inside Out Edgeport Serial Driver (TI devices)" CONFIG_USB_SERIAL_EDGEPORT_TI
	dep_tristate $w.config.f 79 13 "  USB Keyspan PDA Single Port Serial Driver (EXPERIMENTAL)" CONFIG_USB_SERIAL_KEYSPAN_PDA
	dep_tristate $w.config.f 79 14 "  USB Keyspan USA-xxx Serial Driver" CONFIG_USB_SERIAL_KEYSPAN
	bool $w.config.f 79 15 "    USB Keyspan USA-28 Firmware" CONFIG_USB_SERIAL_KEYSPAN_USA28
	bool $w.config.f 79 16 "    USB Keyspan USA-28X Firmware" CONFIG_USB_SERIAL_KEYSPAN_USA28X
	bool $w.config.f 79 17 "    USB Keyspan USA-28XA Firmware" CONFIG_USB_SERIAL_KEYSPAN_USA28XA
	bool $w.config.f 79 18 "    USB Keyspan USA-28XB Firmware" CONFIG_USB_SERIAL_KEYSPAN_USA28XB
	bool $w.config.f 79 19 "    USB Keyspan USA-19 Firmware" CONFIG_USB_SERIAL_KEYSPAN_USA19
	bool $w.config.f 79 20 "    USB Keyspan USA-18X Firmware" CONFIG_USB_SERIAL_KEYSPAN_USA18X
	bool $w.config.f 79 21 "    USB Keyspan USA-19W Firmware" CONFIG_USB_SERIAL_KEYSPAN_USA19W
	bool $w.config.f 79 22 "    USB Keyspan USA-19QW Firmware" CONFIG_USB_SERIAL_KEYSPAN_USA19QW
	bool $w.config.f 79 23 "    USB Keyspan USA-19QI Firmware" CONFIG_USB_SERIAL_KEYSPAN_USA19QI
	bool $w.config.f 79 24 "    USB Keyspan MPR Firmware" CONFIG_USB_SERIAL_KEYSPAN_MPR
	bool $w.config.f 79 25 "    USB Keyspan USA-49W Firmware" CONFIG_USB_SERIAL_KEYSPAN_USA49W
	bool $w.config.f 79 26 "    USB Keyspan USA-49WLC Firmware" CONFIG_USB_SERIAL_KEYSPAN_USA49WLC
	dep_tristate $w.config.f 79 27 "  USB MCT Single Port Serial Driver" CONFIG_USB_SERIAL_MCT_U232
	dep_tristate $w.config.f 79 28 "  USB KL5KUSB105 (Palmconnect) Driver" CONFIG_USB_SERIAL_KLSI
	dep_tristate $w.config.f 79 29 "  USB KOBIL chipcard reader (EXPERIMENTAL)" CONFIG_USB_SERIAL_KOBIL_SCT
	dep_tristate $w.config.f 79 30 "  USB Prolific 2303 Single Port Serial Driver" CONFIG_USB_SERIAL_PL2303
	dep_tristate $w.config.f 79 31 "  USB REINER SCT cyberJack pinpad/e-com chipcard reader (EXPERIMENTAL)" CONFIG_USB_SERIAL_CYBERJACK
	dep_tristate $w.config.f 79 32 "  USB Xircom / Entregra Single Port Serial Driver (EXPERIMENTAL)" CONFIG_USB_SERIAL_XIRCOM
	dep_tristate $w.config.f 79 33 "  USB ZyXEL omni.net LCD Plus Driver (EXPERIMENTAL)" CONFIG_USB_SERIAL_OMNINET



	focus $w
	update_active
	global winx; global winy
	if {[winfo exists .menu78] == 0} then {menu78 .menu78 "USB support"}
	set winx [expr [winfo x .menu78]+30]; set winy [expr [winfo y .menu78]+30]
	if {[winfo exists $w]} then {wm geometry $w +$winx+$winy}
	update idletasks
	if {[winfo exists $w]} then  {$w.config.canvas create window 0 0 -anchor nw -window $w.config.f

	$w.config.canvas configure \
		-width [expr [winfo reqwidth $w.config.f] + 1]\
		-scrollregion "-1 -1 [expr [winfo reqwidth $w.config.f] + 1] \
			 [expr [winfo reqheight $w.config.f] + 1]"

	set winy [expr [winfo reqh $w] - [winfo reqh $w.config.canvas]]
	set scry [expr [winfo screenh $w] / 2]
	set maxy [expr [winfo screenh $w] * 3 / 4]
	set canvtotal [expr [winfo reqh $w.config.f] + 2]
	if [expr $winy + $canvtotal < $maxy] {
		$w.config.canvas configure -height $canvtotal
	} else {
		$w.config.canvas configure -height [expr $scry - $winy]
		}
	}
	update idletasks
	if {[winfo exists $w]} then {
	wm maxsize $w [winfo width $w] [winfo screenheight $w]
	wm minsize $w [winfo width $w] 100

	wm deiconify $w
}
}

proc update_menu79 {} {
	global CONFIG_MODULES
	global CONFIG_USB
	global CONFIG_USB_SERIAL
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB]];set CONFIG_USB_SERIAL [sync_tristate $CONFIG_USB_SERIAL $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu79.config.f.x0 disabled {y}} else {configure_entry .menu79.config.f.x0 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu79.config.f.x0 disabled {m}} else {configure_entry .menu79.config.f.x0 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu79.config.f.x0 normal {m}} else {configure_entry .menu79.config.f.x0 disabled {m}}; configure_entry .menu79.config.f.x0 normal {n l}} else {configure_entry .menu79.config.f.x0 disabled {y n m l}}
	global CONFIG_USB_SERIAL_DEBUG
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_SERIAL != 0) && ($CONFIG_USB_SERIAL == 1 || $CONFIG_USB_SERIAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB_SERIAL]];set CONFIG_USB_SERIAL_DEBUG [sync_bool $CONFIG_USB_SERIAL_DEBUG $tmpvar_dep 0];if {$tmpvar_dep != 1} then {configure_entry .menu79.config.f.x1 disabled {y};} else {configure_entry .menu79.config.f.x1 normal {y};}; configure_entry .menu79.config.f.x1 normal {n l}} else {configure_entry .menu79.config.f.x1 disabled {y n l}}
	global CONFIG_USB_SERIAL_GENERIC
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_SERIAL != 0) && ($CONFIG_USB_SERIAL == 1 || $CONFIG_USB_SERIAL == 2 || $CONFIG_USB_SERIAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB_SERIAL]];set CONFIG_USB_SERIAL_GENERIC [sync_bool $CONFIG_USB_SERIAL_GENERIC $tmpvar_dep 1];if {$tmpvar_dep != 1 && $tmpvar_dep != 2} then {configure_entry .menu79.config.f.x2 disabled {y};} else {configure_entry .menu79.config.f.x2 normal {y};}; configure_entry .menu79.config.f.x2 normal {n l}} else {configure_entry .menu79.config.f.x2 disabled {y n l}}
	global CONFIG_USB_SERIAL_BELKIN
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_SERIAL != 0) && ($CONFIG_USB_SERIAL == 1 || $CONFIG_USB_SERIAL == 2 || $CONFIG_USB_SERIAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB_SERIAL]];set CONFIG_USB_SERIAL_BELKIN [sync_tristate $CONFIG_USB_SERIAL_BELKIN $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu79.config.f.x3 disabled {y}} else {configure_entry .menu79.config.f.x3 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu79.config.f.x3 disabled {m}} else {configure_entry .menu79.config.f.x3 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu79.config.f.x3 normal {m}} else {configure_entry .menu79.config.f.x3 disabled {m}}; configure_entry .menu79.config.f.x3 normal {n l}} else {configure_entry .menu79.config.f.x3 disabled {y n m l}}
	global CONFIG_USB_SERIAL_WHITEHEAT
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_SERIAL != 0) && ($CONFIG_USB_SERIAL == 1 || $CONFIG_USB_SERIAL == 2 || $CONFIG_USB_SERIAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB_SERIAL]];set CONFIG_USB_SERIAL_WHITEHEAT [sync_tristate $CONFIG_USB_SERIAL_WHITEHEAT $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu79.config.f.x4 disabled {y}} else {configure_entry .menu79.config.f.x4 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu79.config.f.x4 disabled {m}} else {configure_entry .menu79.config.f.x4 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu79.config.f.x4 normal {m}} else {configure_entry .menu79.config.f.x4 disabled {m}}; configure_entry .menu79.config.f.x4 normal {n l}} else {configure_entry .menu79.config.f.x4 disabled {y n m l}}
	global CONFIG_USB_SERIAL_DIGI_ACCELEPORT
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_SERIAL != 0) && ($CONFIG_USB_SERIAL == 1 || $CONFIG_USB_SERIAL == 2 || $CONFIG_USB_SERIAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB_SERIAL]];set CONFIG_USB_SERIAL_DIGI_ACCELEPORT [sync_tristate $CONFIG_USB_SERIAL_DIGI_ACCELEPORT $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu79.config.f.x5 disabled {y}} else {configure_entry .menu79.config.f.x5 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu79.config.f.x5 disabled {m}} else {configure_entry .menu79.config.f.x5 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu79.config.f.x5 normal {m}} else {configure_entry .menu79.config.f.x5 disabled {m}}; configure_entry .menu79.config.f.x5 normal {n l}} else {configure_entry .menu79.config.f.x5 disabled {y n m l}}
	global CONFIG_USB_SERIAL_EMPEG
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_SERIAL != 0) && ($CONFIG_USB_SERIAL == 1 || $CONFIG_USB_SERIAL == 2 || $CONFIG_USB_SERIAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB_SERIAL]];set CONFIG_USB_SERIAL_EMPEG [sync_tristate $CONFIG_USB_SERIAL_EMPEG $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu79.config.f.x6 disabled {y}} else {configure_entry .menu79.config.f.x6 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu79.config.f.x6 disabled {m}} else {configure_entry .menu79.config.f.x6 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu79.config.f.x6 normal {m}} else {configure_entry .menu79.config.f.x6 disabled {m}}; configure_entry .menu79.config.f.x6 normal {n l}} else {configure_entry .menu79.config.f.x6 disabled {y n m l}}
	global CONFIG_USB_SERIAL_FTDI_SIO
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_SERIAL != 0) && ($CONFIG_USB_SERIAL == 1 || $CONFIG_USB_SERIAL == 2 || $CONFIG_USB_SERIAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB_SERIAL]];set CONFIG_USB_SERIAL_FTDI_SIO [sync_tristate $CONFIG_USB_SERIAL_FTDI_SIO $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu79.config.f.x7 disabled {y}} else {configure_entry .menu79.config.f.x7 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu79.config.f.x7 disabled {m}} else {configure_entry .menu79.config.f.x7 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu79.config.f.x7 normal {m}} else {configure_entry .menu79.config.f.x7 disabled {m}}; configure_entry .menu79.config.f.x7 normal {n l}} else {configure_entry .menu79.config.f.x7 disabled {y n m l}}
	global CONFIG_USB_SERIAL_VISOR
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_SERIAL != 0) && ($CONFIG_USB_SERIAL == 1 || $CONFIG_USB_SERIAL == 2 || $CONFIG_USB_SERIAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB_SERIAL]];set CONFIG_USB_SERIAL_VISOR [sync_tristate $CONFIG_USB_SERIAL_VISOR $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu79.config.f.x8 disabled {y}} else {configure_entry .menu79.config.f.x8 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu79.config.f.x8 disabled {m}} else {configure_entry .menu79.config.f.x8 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu79.config.f.x8 normal {m}} else {configure_entry .menu79.config.f.x8 disabled {m}}; configure_entry .menu79.config.f.x8 normal {n l}} else {configure_entry .menu79.config.f.x8 disabled {y n m l}}
	global CONFIG_USB_SERIAL_IPAQ
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_SERIAL != 0) && ($CONFIG_USB_SERIAL == 1 || $CONFIG_USB_SERIAL == 2 || $CONFIG_USB_SERIAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB_SERIAL]];set CONFIG_USB_SERIAL_IPAQ [sync_tristate $CONFIG_USB_SERIAL_IPAQ $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu79.config.f.x9 disabled {y}} else {configure_entry .menu79.config.f.x9 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu79.config.f.x9 disabled {m}} else {configure_entry .menu79.config.f.x9 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu79.config.f.x9 normal {m}} else {configure_entry .menu79.config.f.x9 disabled {m}}; configure_entry .menu79.config.f.x9 normal {n l}} else {configure_entry .menu79.config.f.x9 disabled {y n m l}}
	global CONFIG_EXPERIMENTAL
	global CONFIG_USB_SERIAL_IR
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_SERIAL != 0) && ($CONFIG_USB_SERIAL == 1 || $CONFIG_USB_SERIAL == 2 || $CONFIG_USB_SERIAL == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB_SERIAL $CONFIG_EXPERIMENTAL]];set CONFIG_USB_SERIAL_IR [sync_tristate $CONFIG_USB_SERIAL_IR $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu79.config.f.x10 disabled {y}} else {configure_entry .menu79.config.f.x10 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu79.config.f.x10 disabled {m}} else {configure_entry .menu79.config.f.x10 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu79.config.f.x10 normal {m}} else {configure_entry .menu79.config.f.x10 disabled {m}}; configure_entry .menu79.config.f.x10 normal {n l}} else {configure_entry .menu79.config.f.x10 disabled {y n m l}}
	global CONFIG_USB_SERIAL_EDGEPORT
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_SERIAL != 0) && ($CONFIG_USB_SERIAL == 1 || $CONFIG_USB_SERIAL == 2 || $CONFIG_USB_SERIAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB_SERIAL]];set CONFIG_USB_SERIAL_EDGEPORT [sync_tristate $CONFIG_USB_SERIAL_EDGEPORT $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu79.config.f.x11 disabled {y}} else {configure_entry .menu79.config.f.x11 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu79.config.f.x11 disabled {m}} else {configure_entry .menu79.config.f.x11 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu79.config.f.x11 normal {m}} else {configure_entry .menu79.config.f.x11 disabled {m}}; configure_entry .menu79.config.f.x11 normal {n l}} else {configure_entry .menu79.config.f.x11 disabled {y n m l}}
	global CONFIG_USB_SERIAL_EDGEPORT_TI
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_SERIAL != 0) && ($CONFIG_USB_SERIAL == 1 || $CONFIG_USB_SERIAL == 2 || $CONFIG_USB_SERIAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB_SERIAL]];set CONFIG_USB_SERIAL_EDGEPORT_TI [sync_tristate $CONFIG_USB_SERIAL_EDGEPORT_TI $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu79.config.f.x12 disabled {y}} else {configure_entry .menu79.config.f.x12 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu79.config.f.x12 disabled {m}} else {configure_entry .menu79.config.f.x12 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu79.config.f.x12 normal {m}} else {configure_entry .menu79.config.f.x12 disabled {m}}; configure_entry .menu79.config.f.x12 normal {n l}} else {configure_entry .menu79.config.f.x12 disabled {y n m l}}
	global CONFIG_USB_SERIAL_KEYSPAN_PDA
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_SERIAL != 0) && ($CONFIG_USB_SERIAL == 1 || $CONFIG_USB_SERIAL == 2 || $CONFIG_USB_SERIAL == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB_SERIAL $CONFIG_EXPERIMENTAL]];set CONFIG_USB_SERIAL_KEYSPAN_PDA [sync_tristate $CONFIG_USB_SERIAL_KEYSPAN_PDA $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu79.config.f.x13 disabled {y}} else {configure_entry .menu79.config.f.x13 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu79.config.f.x13 disabled {m}} else {configure_entry .menu79.config.f.x13 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu79.config.f.x13 normal {m}} else {configure_entry .menu79.config.f.x13 disabled {m}}; configure_entry .menu79.config.f.x13 normal {n l}} else {configure_entry .menu79.config.f.x13 disabled {y n m l}}
	global CONFIG_USB_SERIAL_KEYSPAN
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_SERIAL != 0) && ($CONFIG_USB_SERIAL == 1 || $CONFIG_USB_SERIAL == 2 || $CONFIG_USB_SERIAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB_SERIAL]];set CONFIG_USB_SERIAL_KEYSPAN [sync_tristate $CONFIG_USB_SERIAL_KEYSPAN $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu79.config.f.x14 disabled {y}} else {configure_entry .menu79.config.f.x14 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu79.config.f.x14 disabled {m}} else {configure_entry .menu79.config.f.x14 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu79.config.f.x14 normal {m}} else {configure_entry .menu79.config.f.x14 disabled {m}}; configure_entry .menu79.config.f.x14 normal {n l}} else {configure_entry .menu79.config.f.x14 disabled {y n m l}}
	global CONFIG_USB_SERIAL_KEYSPAN_USA28
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_SERIAL != 0) && ($CONFIG_USB_SERIAL_KEYSPAN != 0)} then {
	configure_entry .menu79.config.f.x15 normal {n l y}} else {configure_entry .menu79.config.f.x15 disabled {y n l}}
	global CONFIG_USB_SERIAL_KEYSPAN_USA28X
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_SERIAL != 0) && ($CONFIG_USB_SERIAL_KEYSPAN != 0)} then {
	configure_entry .menu79.config.f.x16 normal {n l y}} else {configure_entry .menu79.config.f.x16 disabled {y n l}}
	global CONFIG_USB_SERIAL_KEYSPAN_USA28XA
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_SERIAL != 0) && ($CONFIG_USB_SERIAL_KEYSPAN != 0)} then {
	configure_entry .menu79.config.f.x17 normal {n l y}} else {configure_entry .menu79.config.f.x17 disabled {y n l}}
	global CONFIG_USB_SERIAL_KEYSPAN_USA28XB
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_SERIAL != 0) && ($CONFIG_USB_SERIAL_KEYSPAN != 0)} then {
	configure_entry .menu79.config.f.x18 normal {n l y}} else {configure_entry .menu79.config.f.x18 disabled {y n l}}
	global CONFIG_USB_SERIAL_KEYSPAN_USA19
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_SERIAL != 0) && ($CONFIG_USB_SERIAL_KEYSPAN != 0)} then {
	configure_entry .menu79.config.f.x19 normal {n l y}} else {configure_entry .menu79.config.f.x19 disabled {y n l}}
	global CONFIG_USB_SERIAL_KEYSPAN_USA18X
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_SERIAL != 0) && ($CONFIG_USB_SERIAL_KEYSPAN != 0)} then {
	configure_entry .menu79.config.f.x20 normal {n l y}} else {configure_entry .menu79.config.f.x20 disabled {y n l}}
	global CONFIG_USB_SERIAL_KEYSPAN_USA19W
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_SERIAL != 0) && ($CONFIG_USB_SERIAL_KEYSPAN != 0)} then {
	configure_entry .menu79.config.f.x21 normal {n l y}} else {configure_entry .menu79.config.f.x21 disabled {y n l}}
	global CONFIG_USB_SERIAL_KEYSPAN_USA19QW
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_SERIAL != 0) && ($CONFIG_USB_SERIAL_KEYSPAN != 0)} then {
	configure_entry .menu79.config.f.x22 normal {n l y}} else {configure_entry .menu79.config.f.x22 disabled {y n l}}
	global CONFIG_USB_SERIAL_KEYSPAN_USA19QI
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_SERIAL != 0) && ($CONFIG_USB_SERIAL_KEYSPAN != 0)} then {
	configure_entry .menu79.config.f.x23 normal {n l y}} else {configure_entry .menu79.config.f.x23 disabled {y n l}}
	global CONFIG_USB_SERIAL_KEYSPAN_MPR
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_SERIAL != 0) && ($CONFIG_USB_SERIAL_KEYSPAN != 0)} then {
	configure_entry .menu79.config.f.x24 normal {n l y}} else {configure_entry .menu79.config.f.x24 disabled {y n l}}
	global CONFIG_USB_SERIAL_KEYSPAN_USA49W
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_SERIAL != 0) && ($CONFIG_USB_SERIAL_KEYSPAN != 0)} then {
	configure_entry .menu79.config.f.x25 normal {n l y}} else {configure_entry .menu79.config.f.x25 disabled {y n l}}
	global CONFIG_USB_SERIAL_KEYSPAN_USA49WLC
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_SERIAL != 0) && ($CONFIG_USB_SERIAL_KEYSPAN != 0)} then {
	configure_entry .menu79.config.f.x26 normal {n l y}} else {configure_entry .menu79.config.f.x26 disabled {y n l}}
	global CONFIG_USB_SERIAL_MCT_U232
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_SERIAL != 0) && ($CONFIG_USB_SERIAL == 1 || $CONFIG_USB_SERIAL == 2 || $CONFIG_USB_SERIAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB_SERIAL]];set CONFIG_USB_SERIAL_MCT_U232 [sync_tristate $CONFIG_USB_SERIAL_MCT_U232 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu79.config.f.x27 disabled {y}} else {configure_entry .menu79.config.f.x27 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu79.config.f.x27 disabled {m}} else {configure_entry .menu79.config.f.x27 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu79.config.f.x27 normal {m}} else {configure_entry .menu79.config.f.x27 disabled {m}}; configure_entry .menu79.config.f.x27 normal {n l}} else {configure_entry .menu79.config.f.x27 disabled {y n m l}}
	global CONFIG_USB_SERIAL_KLSI
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_SERIAL != 0) && ($CONFIG_USB_SERIAL == 1 || $CONFIG_USB_SERIAL == 2 || $CONFIG_USB_SERIAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB_SERIAL]];set CONFIG_USB_SERIAL_KLSI [sync_tristate $CONFIG_USB_SERIAL_KLSI $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu79.config.f.x28 disabled {y}} else {configure_entry .menu79.config.f.x28 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu79.config.f.x28 disabled {m}} else {configure_entry .menu79.config.f.x28 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu79.config.f.x28 normal {m}} else {configure_entry .menu79.config.f.x28 disabled {m}}; configure_entry .menu79.config.f.x28 normal {n l}} else {configure_entry .menu79.config.f.x28 disabled {y n m l}}
	global CONFIG_USB_SERIAL_KOBIL_SCT
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_SERIAL != 0) && ($CONFIG_USB_SERIAL == 1 || $CONFIG_USB_SERIAL == 2 || $CONFIG_USB_SERIAL == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB_SERIAL $CONFIG_EXPERIMENTAL]];set CONFIG_USB_SERIAL_KOBIL_SCT [sync_tristate $CONFIG_USB_SERIAL_KOBIL_SCT $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu79.config.f.x29 disabled {y}} else {configure_entry .menu79.config.f.x29 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu79.config.f.x29 disabled {m}} else {configure_entry .menu79.config.f.x29 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu79.config.f.x29 normal {m}} else {configure_entry .menu79.config.f.x29 disabled {m}}; configure_entry .menu79.config.f.x29 normal {n l}} else {configure_entry .menu79.config.f.x29 disabled {y n m l}}
	global CONFIG_USB_SERIAL_PL2303
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_SERIAL != 0) && ($CONFIG_USB_SERIAL == 1 || $CONFIG_USB_SERIAL == 2 || $CONFIG_USB_SERIAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB_SERIAL]];set CONFIG_USB_SERIAL_PL2303 [sync_tristate $CONFIG_USB_SERIAL_PL2303 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu79.config.f.x30 disabled {y}} else {configure_entry .menu79.config.f.x30 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu79.config.f.x30 disabled {m}} else {configure_entry .menu79.config.f.x30 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu79.config.f.x30 normal {m}} else {configure_entry .menu79.config.f.x30 disabled {m}}; configure_entry .menu79.config.f.x30 normal {n l}} else {configure_entry .menu79.config.f.x30 disabled {y n m l}}
	global CONFIG_USB_SERIAL_CYBERJACK
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_SERIAL != 0) && ($CONFIG_USB_SERIAL == 1 || $CONFIG_USB_SERIAL == 2 || $CONFIG_USB_SERIAL == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB_SERIAL $CONFIG_EXPERIMENTAL]];set CONFIG_USB_SERIAL_CYBERJACK [sync_tristate $CONFIG_USB_SERIAL_CYBERJACK $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu79.config.f.x31 disabled {y}} else {configure_entry .menu79.config.f.x31 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu79.config.f.x31 disabled {m}} else {configure_entry .menu79.config.f.x31 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu79.config.f.x31 normal {m}} else {configure_entry .menu79.config.f.x31 disabled {m}}; configure_entry .menu79.config.f.x31 normal {n l}} else {configure_entry .menu79.config.f.x31 disabled {y n m l}}
	global CONFIG_USB_SERIAL_XIRCOM
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_SERIAL != 0) && ($CONFIG_USB_SERIAL == 1 || $CONFIG_USB_SERIAL == 2 || $CONFIG_USB_SERIAL == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB_SERIAL $CONFIG_EXPERIMENTAL]];set CONFIG_USB_SERIAL_XIRCOM [sync_tristate $CONFIG_USB_SERIAL_XIRCOM $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu79.config.f.x32 disabled {y}} else {configure_entry .menu79.config.f.x32 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu79.config.f.x32 disabled {m}} else {configure_entry .menu79.config.f.x32 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu79.config.f.x32 normal {m}} else {configure_entry .menu79.config.f.x32 disabled {m}}; configure_entry .menu79.config.f.x32 normal {n l}} else {configure_entry .menu79.config.f.x32 disabled {y n m l}}
	global CONFIG_USB_SERIAL_OMNINET
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_SERIAL != 0) && ($CONFIG_USB_SERIAL == 1 || $CONFIG_USB_SERIAL == 2 || $CONFIG_USB_SERIAL == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB_SERIAL $CONFIG_EXPERIMENTAL]];set CONFIG_USB_SERIAL_OMNINET [sync_tristate $CONFIG_USB_SERIAL_OMNINET $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu79.config.f.x33 disabled {y}} else {configure_entry .menu79.config.f.x33 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu79.config.f.x33 disabled {m}} else {configure_entry .menu79.config.f.x33 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu79.config.f.x33 normal {m}} else {configure_entry .menu79.config.f.x33 disabled {m}}; configure_entry .menu79.config.f.x33 normal {n l}} else {configure_entry .menu79.config.f.x33 disabled {y n m l}}
}


proc update_define_menu79 {} {
	update_define_mainmenu
	global CONFIG_MODULES
	global CONFIG_USB_SERIAL_KEYSPAN_USA28
set CONFIG_USB_SERIAL_KEYSPAN_USA28 [expr $CONFIG_USB_SERIAL_KEYSPAN_USA28|16]
	global CONFIG_USB_SERIAL_KEYSPAN_USA28X
set CONFIG_USB_SERIAL_KEYSPAN_USA28X [expr $CONFIG_USB_SERIAL_KEYSPAN_USA28X|16]
	global CONFIG_USB_SERIAL_KEYSPAN_USA28XA
set CONFIG_USB_SERIAL_KEYSPAN_USA28XA [expr $CONFIG_USB_SERIAL_KEYSPAN_USA28XA|16]
	global CONFIG_USB_SERIAL_KEYSPAN_USA28XB
set CONFIG_USB_SERIAL_KEYSPAN_USA28XB [expr $CONFIG_USB_SERIAL_KEYSPAN_USA28XB|16]
	global CONFIG_USB_SERIAL_KEYSPAN_USA19
set CONFIG_USB_SERIAL_KEYSPAN_USA19 [expr $CONFIG_USB_SERIAL_KEYSPAN_USA19|16]
	global CONFIG_USB_SERIAL_KEYSPAN_USA18X
set CONFIG_USB_SERIAL_KEYSPAN_USA18X [expr $CONFIG_USB_SERIAL_KEYSPAN_USA18X|16]
	global CONFIG_USB_SERIAL_KEYSPAN_USA19W
set CONFIG_USB_SERIAL_KEYSPAN_USA19W [expr $CONFIG_USB_SERIAL_KEYSPAN_USA19W|16]
	global CONFIG_USB_SERIAL_KEYSPAN_USA19QW
set CONFIG_USB_SERIAL_KEYSPAN_USA19QW [expr $CONFIG_USB_SERIAL_KEYSPAN_USA19QW|16]
	global CONFIG_USB_SERIAL_KEYSPAN_USA19QI
set CONFIG_USB_SERIAL_KEYSPAN_USA19QI [expr $CONFIG_USB_SERIAL_KEYSPAN_USA19QI|16]
	global CONFIG_USB_SERIAL_KEYSPAN_MPR
set CONFIG_USB_SERIAL_KEYSPAN_MPR [expr $CONFIG_USB_SERIAL_KEYSPAN_MPR|16]
	global CONFIG_USB_SERIAL_KEYSPAN_USA49W
set CONFIG_USB_SERIAL_KEYSPAN_USA49W [expr $CONFIG_USB_SERIAL_KEYSPAN_USA49W|16]
	global CONFIG_USB_SERIAL_KEYSPAN_USA49WLC
set CONFIG_USB_SERIAL_KEYSPAN_USA49WLC [expr $CONFIG_USB_SERIAL_KEYSPAN_USA49WLC|16]
	global CONFIG_USB
	global CONFIG_USB_SERIAL
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB]]; set CONFIG_USB_SERIAL [sync_tristate $CONFIG_USB_SERIAL $tmpvar_dep]; set CONFIG_USB_SERIAL [expr $CONFIG_USB_SERIAL&15]}
	global CONFIG_USB_SERIAL_DEBUG
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_SERIAL != 0) && ($CONFIG_USB_SERIAL == 1 || $CONFIG_USB_SERIAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB_SERIAL]];set CONFIG_USB_SERIAL_DEBUG [sync_bool $CONFIG_USB_SERIAL_DEBUG $tmpvar_dep 0];set CONFIG_USB_SERIAL_DEBUG [expr $CONFIG_USB_SERIAL_DEBUG&15]}
	global CONFIG_USB_SERIAL_GENERIC
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_SERIAL != 0) && ($CONFIG_USB_SERIAL == 1 || $CONFIG_USB_SERIAL == 2 || $CONFIG_USB_SERIAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB_SERIAL]];set CONFIG_USB_SERIAL_GENERIC [sync_bool $CONFIG_USB_SERIAL_GENERIC $tmpvar_dep 1];set CONFIG_USB_SERIAL_GENERIC [expr $CONFIG_USB_SERIAL_GENERIC&15]}
	global CONFIG_USB_SERIAL_BELKIN
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_SERIAL != 0) && ($CONFIG_USB_SERIAL == 1 || $CONFIG_USB_SERIAL == 2 || $CONFIG_USB_SERIAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB_SERIAL]]; set CONFIG_USB_SERIAL_BELKIN [sync_tristate $CONFIG_USB_SERIAL_BELKIN $tmpvar_dep]; set CONFIG_USB_SERIAL_BELKIN [expr $CONFIG_USB_SERIAL_BELKIN&15]}
	global CONFIG_USB_SERIAL_WHITEHEAT
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_SERIAL != 0) && ($CONFIG_USB_SERIAL == 1 || $CONFIG_USB_SERIAL == 2 || $CONFIG_USB_SERIAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB_SERIAL]]; set CONFIG_USB_SERIAL_WHITEHEAT [sync_tristate $CONFIG_USB_SERIAL_WHITEHEAT $tmpvar_dep]; set CONFIG_USB_SERIAL_WHITEHEAT [expr $CONFIG_USB_SERIAL_WHITEHEAT&15]}
	global CONFIG_USB_SERIAL_DIGI_ACCELEPORT
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_SERIAL != 0) && ($CONFIG_USB_SERIAL == 1 || $CONFIG_USB_SERIAL == 2 || $CONFIG_USB_SERIAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB_SERIAL]]; set CONFIG_USB_SERIAL_DIGI_ACCELEPORT [sync_tristate $CONFIG_USB_SERIAL_DIGI_ACCELEPORT $tmpvar_dep]; set CONFIG_USB_SERIAL_DIGI_ACCELEPORT [expr $CONFIG_USB_SERIAL_DIGI_ACCELEPORT&15]}
	global CONFIG_USB_SERIAL_EMPEG
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_SERIAL != 0) && ($CONFIG_USB_SERIAL == 1 || $CONFIG_USB_SERIAL == 2 || $CONFIG_USB_SERIAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB_SERIAL]]; set CONFIG_USB_SERIAL_EMPEG [sync_tristate $CONFIG_USB_SERIAL_EMPEG $tmpvar_dep]; set CONFIG_USB_SERIAL_EMPEG [expr $CONFIG_USB_SERIAL_EMPEG&15]}
	global CONFIG_USB_SERIAL_FTDI_SIO
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_SERIAL != 0) && ($CONFIG_USB_SERIAL == 1 || $CONFIG_USB_SERIAL == 2 || $CONFIG_USB_SERIAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB_SERIAL]]; set CONFIG_USB_SERIAL_FTDI_SIO [sync_tristate $CONFIG_USB_SERIAL_FTDI_SIO $tmpvar_dep]; set CONFIG_USB_SERIAL_FTDI_SIO [expr $CONFIG_USB_SERIAL_FTDI_SIO&15]}
	global CONFIG_USB_SERIAL_VISOR
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_SERIAL != 0) && ($CONFIG_USB_SERIAL == 1 || $CONFIG_USB_SERIAL == 2 || $CONFIG_USB_SERIAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB_SERIAL]]; set CONFIG_USB_SERIAL_VISOR [sync_tristate $CONFIG_USB_SERIAL_VISOR $tmpvar_dep]; set CONFIG_USB_SERIAL_VISOR [expr $CONFIG_USB_SERIAL_VISOR&15]}
	global CONFIG_USB_SERIAL_IPAQ
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_SERIAL != 0) && ($CONFIG_USB_SERIAL == 1 || $CONFIG_USB_SERIAL == 2 || $CONFIG_USB_SERIAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB_SERIAL]]; set CONFIG_USB_SERIAL_IPAQ [sync_tristate $CONFIG_USB_SERIAL_IPAQ $tmpvar_dep]; set CONFIG_USB_SERIAL_IPAQ [expr $CONFIG_USB_SERIAL_IPAQ&15]}
	global CONFIG_EXPERIMENTAL
	global CONFIG_USB_SERIAL_IR
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_SERIAL != 0) && ($CONFIG_USB_SERIAL == 1 || $CONFIG_USB_SERIAL == 2 || $CONFIG_USB_SERIAL == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB_SERIAL $CONFIG_EXPERIMENTAL]]; set CONFIG_USB_SERIAL_IR [sync_tristate $CONFIG_USB_SERIAL_IR $tmpvar_dep]; set CONFIG_USB_SERIAL_IR [expr $CONFIG_USB_SERIAL_IR&15]}
	global CONFIG_USB_SERIAL_EDGEPORT
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_SERIAL != 0) && ($CONFIG_USB_SERIAL == 1 || $CONFIG_USB_SERIAL == 2 || $CONFIG_USB_SERIAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB_SERIAL]]; set CONFIG_USB_SERIAL_EDGEPORT [sync_tristate $CONFIG_USB_SERIAL_EDGEPORT $tmpvar_dep]; set CONFIG_USB_SERIAL_EDGEPORT [expr $CONFIG_USB_SERIAL_EDGEPORT&15]}
	global CONFIG_USB_SERIAL_EDGEPORT_TI
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_SERIAL != 0) && ($CONFIG_USB_SERIAL == 1 || $CONFIG_USB_SERIAL == 2 || $CONFIG_USB_SERIAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB_SERIAL]]; set CONFIG_USB_SERIAL_EDGEPORT_TI [sync_tristate $CONFIG_USB_SERIAL_EDGEPORT_TI $tmpvar_dep]; set CONFIG_USB_SERIAL_EDGEPORT_TI [expr $CONFIG_USB_SERIAL_EDGEPORT_TI&15]}
	global CONFIG_USB_SERIAL_KEYSPAN_PDA
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_SERIAL != 0) && ($CONFIG_USB_SERIAL == 1 || $CONFIG_USB_SERIAL == 2 || $CONFIG_USB_SERIAL == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB_SERIAL $CONFIG_EXPERIMENTAL]]; set CONFIG_USB_SERIAL_KEYSPAN_PDA [sync_tristate $CONFIG_USB_SERIAL_KEYSPAN_PDA $tmpvar_dep]; set CONFIG_USB_SERIAL_KEYSPAN_PDA [expr $CONFIG_USB_SERIAL_KEYSPAN_PDA&15]}
	global CONFIG_USB_SERIAL_KEYSPAN
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_SERIAL != 0) && ($CONFIG_USB_SERIAL == 1 || $CONFIG_USB_SERIAL == 2 || $CONFIG_USB_SERIAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB_SERIAL]]; set CONFIG_USB_SERIAL_KEYSPAN [sync_tristate $CONFIG_USB_SERIAL_KEYSPAN $tmpvar_dep]; set CONFIG_USB_SERIAL_KEYSPAN [expr $CONFIG_USB_SERIAL_KEYSPAN&15]}
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_SERIAL != 0) && ($CONFIG_USB_SERIAL_KEYSPAN != 0)} then {
	set CONFIG_USB_SERIAL_KEYSPAN_USA28 [expr $CONFIG_USB_SERIAL_KEYSPAN_USA28&15]}
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_SERIAL != 0) && ($CONFIG_USB_SERIAL_KEYSPAN != 0)} then {
	set CONFIG_USB_SERIAL_KEYSPAN_USA28X [expr $CONFIG_USB_SERIAL_KEYSPAN_USA28X&15]}
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_SERIAL != 0) && ($CONFIG_USB_SERIAL_KEYSPAN != 0)} then {
	set CONFIG_USB_SERIAL_KEYSPAN_USA28XA [expr $CONFIG_USB_SERIAL_KEYSPAN_USA28XA&15]}
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_SERIAL != 0) && ($CONFIG_USB_SERIAL_KEYSPAN != 0)} then {
	set CONFIG_USB_SERIAL_KEYSPAN_USA28XB [expr $CONFIG_USB_SERIAL_KEYSPAN_USA28XB&15]}
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_SERIAL != 0) && ($CONFIG_USB_SERIAL_KEYSPAN != 0)} then {
	set CONFIG_USB_SERIAL_KEYSPAN_USA19 [expr $CONFIG_USB_SERIAL_KEYSPAN_USA19&15]}
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_SERIAL != 0) && ($CONFIG_USB_SERIAL_KEYSPAN != 0)} then {
	set CONFIG_USB_SERIAL_KEYSPAN_USA18X [expr $CONFIG_USB_SERIAL_KEYSPAN_USA18X&15]}
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_SERIAL != 0) && ($CONFIG_USB_SERIAL_KEYSPAN != 0)} then {
	set CONFIG_USB_SERIAL_KEYSPAN_USA19W [expr $CONFIG_USB_SERIAL_KEYSPAN_USA19W&15]}
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_SERIAL != 0) && ($CONFIG_USB_SERIAL_KEYSPAN != 0)} then {
	set CONFIG_USB_SERIAL_KEYSPAN_USA19QW [expr $CONFIG_USB_SERIAL_KEYSPAN_USA19QW&15]}
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_SERIAL != 0) && ($CONFIG_USB_SERIAL_KEYSPAN != 0)} then {
	set CONFIG_USB_SERIAL_KEYSPAN_USA19QI [expr $CONFIG_USB_SERIAL_KEYSPAN_USA19QI&15]}
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_SERIAL != 0) && ($CONFIG_USB_SERIAL_KEYSPAN != 0)} then {
	set CONFIG_USB_SERIAL_KEYSPAN_MPR [expr $CONFIG_USB_SERIAL_KEYSPAN_MPR&15]}
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_SERIAL != 0) && ($CONFIG_USB_SERIAL_KEYSPAN != 0)} then {
	set CONFIG_USB_SERIAL_KEYSPAN_USA49W [expr $CONFIG_USB_SERIAL_KEYSPAN_USA49W&15]}
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_SERIAL != 0) && ($CONFIG_USB_SERIAL_KEYSPAN != 0)} then {
	set CONFIG_USB_SERIAL_KEYSPAN_USA49WLC [expr $CONFIG_USB_SERIAL_KEYSPAN_USA49WLC&15]}
	global CONFIG_USB_SERIAL_MCT_U232
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_SERIAL != 0) && ($CONFIG_USB_SERIAL == 1 || $CONFIG_USB_SERIAL == 2 || $CONFIG_USB_SERIAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB_SERIAL]]; set CONFIG_USB_SERIAL_MCT_U232 [sync_tristate $CONFIG_USB_SERIAL_MCT_U232 $tmpvar_dep]; set CONFIG_USB_SERIAL_MCT_U232 [expr $CONFIG_USB_SERIAL_MCT_U232&15]}
	global CONFIG_USB_SERIAL_KLSI
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_SERIAL != 0) && ($CONFIG_USB_SERIAL == 1 || $CONFIG_USB_SERIAL == 2 || $CONFIG_USB_SERIAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB_SERIAL]]; set CONFIG_USB_SERIAL_KLSI [sync_tristate $CONFIG_USB_SERIAL_KLSI $tmpvar_dep]; set CONFIG_USB_SERIAL_KLSI [expr $CONFIG_USB_SERIAL_KLSI&15]}
	global CONFIG_USB_SERIAL_KOBIL_SCT
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_SERIAL != 0) && ($CONFIG_USB_SERIAL == 1 || $CONFIG_USB_SERIAL == 2 || $CONFIG_USB_SERIAL == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB_SERIAL $CONFIG_EXPERIMENTAL]]; set CONFIG_USB_SERIAL_KOBIL_SCT [sync_tristate $CONFIG_USB_SERIAL_KOBIL_SCT $tmpvar_dep]; set CONFIG_USB_SERIAL_KOBIL_SCT [expr $CONFIG_USB_SERIAL_KOBIL_SCT&15]}
	global CONFIG_USB_SERIAL_PL2303
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_SERIAL != 0) && ($CONFIG_USB_SERIAL == 1 || $CONFIG_USB_SERIAL == 2 || $CONFIG_USB_SERIAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB_SERIAL]]; set CONFIG_USB_SERIAL_PL2303 [sync_tristate $CONFIG_USB_SERIAL_PL2303 $tmpvar_dep]; set CONFIG_USB_SERIAL_PL2303 [expr $CONFIG_USB_SERIAL_PL2303&15]}
	global CONFIG_USB_SERIAL_CYBERJACK
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_SERIAL != 0) && ($CONFIG_USB_SERIAL == 1 || $CONFIG_USB_SERIAL == 2 || $CONFIG_USB_SERIAL == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB_SERIAL $CONFIG_EXPERIMENTAL]]; set CONFIG_USB_SERIAL_CYBERJACK [sync_tristate $CONFIG_USB_SERIAL_CYBERJACK $tmpvar_dep]; set CONFIG_USB_SERIAL_CYBERJACK [expr $CONFIG_USB_SERIAL_CYBERJACK&15]}
	global CONFIG_USB_SERIAL_XIRCOM
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_SERIAL != 0) && ($CONFIG_USB_SERIAL == 1 || $CONFIG_USB_SERIAL == 2 || $CONFIG_USB_SERIAL == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB_SERIAL $CONFIG_EXPERIMENTAL]]; set CONFIG_USB_SERIAL_XIRCOM [sync_tristate $CONFIG_USB_SERIAL_XIRCOM $tmpvar_dep]; set CONFIG_USB_SERIAL_XIRCOM [expr $CONFIG_USB_SERIAL_XIRCOM&15]}
	global CONFIG_USB_SERIAL_OMNINET
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_SERIAL != 0) && ($CONFIG_USB_SERIAL == 1 || $CONFIG_USB_SERIAL == 2 || $CONFIG_USB_SERIAL == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB_SERIAL $CONFIG_EXPERIMENTAL]]; set CONFIG_USB_SERIAL_OMNINET [sync_tristate $CONFIG_USB_SERIAL_OMNINET $tmpvar_dep]; set CONFIG_USB_SERIAL_OMNINET [expr $CONFIG_USB_SERIAL_OMNINET&15]}
}


proc menu80 {w title} {
	set oldFocus [focus]
	catch {focus .menu78}
	catch {destroy $w; unregister_active 80}
	toplevel $w -class Dialog
	wm withdraw $w
	global active_menus
	set active_menus [lsort -integer [linsert $active_menus end 80]]
	message $w.m -width 400 -aspect 300 -text \
		"Support for USB gadgets"  -relief raised
	pack $w.m -pady 10 -side top -padx 10
	wm title $w "Support for USB gadgets" 

	bind $w <Escape> "catch {focus $oldFocus}; destroy $w; unregister_active 80; break"
	set nextscript "catch {focus $oldFocus}; destroy $w; unregister_active 80; catch {destroy .menu78}; unregister_active 78; menu81 .menu81 \"$title\""
	frame $w.f
	button $w.f.back -text "OK" \
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 80"
	button $w.f.next -text "Next" -underline 0\
		-width 15 -command $nextscript
	bind all <Alt-n> $nextscript
	button $w.f.prev -text "Prev" -underline 0\
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 80; menu79 .menu79 \"$title\""
	bind $w <Alt-p> "catch {focus $oldFocus}; destroy $w; unregister_active 80; menu79 .menu79 \"$title\";break"
	pack $w.f.back $w.f.next $w.f.prev -side left -expand on
	pack $w.f -pady 10 -side bottom -anchor w -fill x
	frame $w.topline -relief ridge -borderwidth 2 -height 2
	pack $w.topline -side top -fill x

	frame $w.botline -relief ridge -borderwidth 2 -height 2
	pack $w.botline -side bottom -fill x

	frame $w.config
	pack $w.config -fill y -expand on

	scrollbar $w.config.vscroll -command "$w.config.canvas yview"
	pack $w.config.vscroll -side right -fill y

	canvas $w.config.canvas -height 1\
		-relief flat -borderwidth 0 -yscrollcommand "$w.config.vscroll set" \
		-width [expr [winfo screenwidth .] * 1 / 2] 
	frame $w.config.f
	bind $w <Key-Down> "$w.config.canvas yview scroll  1 unit;break;"
	bind $w <Key-Up> "$w.config.canvas yview scroll  -1 unit;break;"
	bind $w <Key-Next> "$w.config.canvas yview scroll  1 page;break;"
	bind $w <Key-Prior> "$w.config.canvas yview scroll  -1 page;break;"
	bind $w <Key-Home> "$w.config.canvas yview moveto 0;break;"
	bind $w <Key-End> "$w.config.canvas yview moveto 1 ;break;"
	pack $w.config.canvas -side right -fill y


	bool $w.config.f 80 0 "Support for USB Gadgets" CONFIG_USB_GADGET
	comment $w.config.f 80 1 "USB Peripheral Controller Drivers"
	tristate $w.config.f 80 2 "  NetChip 2280 support" CONFIG_USB_NET2280
	comment $w.config.f 80 3 "USB Gadget Drivers"
	dep_tristate $w.config.f 80 4 "  Gadget Zero (DEVELOPMENT)" CONFIG_USB_ZERO
	dep_tristate $w.config.f 80 5 "  Ethernet Gadget (EXPERIMENTAL)" CONFIG_USB_ETH



	focus $w
	update_active
	global winx; global winy
	if {[winfo exists .menu78] == 0} then {menu78 .menu78 "USB support"}
	set winx [expr [winfo x .menu78]+30]; set winy [expr [winfo y .menu78]+30]
	if {[winfo exists $w]} then {wm geometry $w +$winx+$winy}
	update idletasks
	if {[winfo exists $w]} then  {$w.config.canvas create window 0 0 -anchor nw -window $w.config.f

	$w.config.canvas configure \
		-width [expr [winfo reqwidth $w.config.f] + 1]\
		-scrollregion "-1 -1 [expr [winfo reqwidth $w.config.f] + 1] \
			 [expr [winfo reqheight $w.config.f] + 1]"

	set winy [expr [winfo reqh $w] - [winfo reqh $w.config.canvas]]
	set scry [expr [winfo screenh $w] / 2]
	set maxy [expr [winfo screenh $w] * 3 / 4]
	set canvtotal [expr [winfo reqh $w.config.f] + 2]
	if [expr $winy + $canvtotal < $maxy] {
		$w.config.canvas configure -height $canvtotal
	} else {
		$w.config.canvas configure -height [expr $scry - $winy]
		}
	}
	update idletasks
	if {[winfo exists $w]} then {
	wm maxsize $w [winfo width $w] [winfo screenheight $w]
	wm minsize $w [winfo width $w] 100

	wm deiconify $w
}
}

proc update_menu80 {} {
	global CONFIG_USB_GADGET
	if {($CONFIG_USB_GADGET == 1)} then {configure_entry .menu80.config.f.x1 normal {m}} else {configure_entry .menu80.config.f.x1 disabled {m}}
	global CONFIG_MODULES
	global CONFIG_PCI
	global CONFIG_USB_NET2280
	if {($CONFIG_USB_GADGET == 1) && ($CONFIG_PCI == 1)} then {
	configure_entry .menu80.config.f.x2 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu80.config.f.x2 normal {m}} else {configure_entry .menu80.config.f.x2 disabled {m}}; configure_entry .menu80.config.f.x2 normal {n l}} else {configure_entry .menu80.config.f.x2 disabled {y n m l}}
	global CONFIG_USB_GADGET_CONTROLLER
	if {($CONFIG_USB_GADGET == 1) && ($CONFIG_USB_GADGET_CONTROLLER == 1 || $CONFIG_USB_GADGET_CONTROLLER == 2)} then {configure_entry .menu80.config.f.x3 normal {m}} else {configure_entry .menu80.config.f.x3 disabled {m}}
	global CONFIG_USB_ZERO
	if {($CONFIG_USB_GADGET == 1) && ($CONFIG_USB_GADGET_CONTROLLER == 1 || $CONFIG_USB_GADGET_CONTROLLER == 2) && ($CONFIG_USB_GADGET_CONTROLLER == 1 || $CONFIG_USB_GADGET_CONTROLLER == 2 || $CONFIG_USB_GADGET_CONTROLLER == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB_GADGET_CONTROLLER]];set CONFIG_USB_ZERO [sync_tristate $CONFIG_USB_ZERO $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu80.config.f.x4 disabled {y}} else {configure_entry .menu80.config.f.x4 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu80.config.f.x4 disabled {m}} else {configure_entry .menu80.config.f.x4 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu80.config.f.x4 normal {m}} else {configure_entry .menu80.config.f.x4 disabled {m}}; configure_entry .menu80.config.f.x4 normal {n l}} else {configure_entry .menu80.config.f.x4 disabled {y n m l}}
	global CONFIG_NET
	global CONFIG_USB_ETH
	if {($CONFIG_USB_GADGET == 1) && ($CONFIG_USB_GADGET_CONTROLLER == 1 || $CONFIG_USB_GADGET_CONTROLLER == 2) && ($CONFIG_USB_GADGET_CONTROLLER == 1 || $CONFIG_USB_GADGET_CONTROLLER == 2 || $CONFIG_USB_GADGET_CONTROLLER == 4) && ($CONFIG_NET == 1 || $CONFIG_NET == 2 || $CONFIG_NET == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB_GADGET_CONTROLLER $CONFIG_NET]];set CONFIG_USB_ETH [sync_tristate $CONFIG_USB_ETH $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu80.config.f.x5 disabled {y}} else {configure_entry .menu80.config.f.x5 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu80.config.f.x5 disabled {m}} else {configure_entry .menu80.config.f.x5 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu80.config.f.x5 normal {m}} else {configure_entry .menu80.config.f.x5 disabled {m}}; configure_entry .menu80.config.f.x5 normal {n l}} else {configure_entry .menu80.config.f.x5 disabled {y n m l}}
}


proc update_define_menu80 {} {
	update_define_mainmenu
	global CONFIG_MODULES
	global CONFIG_USB_GADGET_CONTROLLER
	global CONFIG_USB_NET2280
	global CONFIG_USB_ZERO_NET2280
	global CONFIG_USB_ZERO_PXA2XX
	global CONFIG_USB_ZERO_GOKU
	global CONFIG_USB_ETH_NET2280
	global CONFIG_USB_ETH_PXA2XX
	global CONFIG_USB_ETH_GOKU
set CONFIG_USB_NET2280 [expr $CONFIG_USB_NET2280|16]
	global CONFIG_USB_GADGET
	if {($CONFIG_USB_GADGET == 1)} then {	global CONSTANT_N
set CONFIG_USB_GADGET_CONTROLLER $CONSTANT_N }
	global CONFIG_PCI
	if {($CONFIG_USB_GADGET == 1) && ($CONFIG_PCI == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_USB_NET2280 == 2)} then {set CONFIG_USB_NET2280 1}; set CONFIG_USB_NET2280 [expr $CONFIG_USB_NET2280&15]}
	if {($CONFIG_USB_GADGET == 1) && ($CONFIG_PCI == 1)} then {set CONFIG_USB_GADGET_CONTROLLER $CONFIG_USB_NET2280 }
	global CONFIG_USB_ZERO
	if {($CONFIG_USB_GADGET == 1) && ($CONFIG_USB_GADGET_CONTROLLER == 1 || $CONFIG_USB_GADGET_CONTROLLER == 2) && ($CONFIG_USB_GADGET_CONTROLLER == 1 || $CONFIG_USB_GADGET_CONTROLLER == 2 || $CONFIG_USB_GADGET_CONTROLLER == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB_GADGET_CONTROLLER]]; set CONFIG_USB_ZERO [sync_tristate $CONFIG_USB_ZERO $tmpvar_dep]; set CONFIG_USB_ZERO [expr $CONFIG_USB_ZERO&15]}
	if {($CONFIG_USB_GADGET == 1) && ($CONFIG_USB_GADGET_CONTROLLER == 1 || $CONFIG_USB_GADGET_CONTROLLER == 2) && ($CONFIG_USB_ZERO == 1 || $CONFIG_USB_ZERO == 2) && ($CONFIG_USB_NET2280 == 1 || $CONFIG_USB_NET2280 == 2)} then {	global CONSTANT_Y
set CONFIG_USB_ZERO_NET2280 $CONSTANT_Y }
	if {($CONFIG_USB_GADGET == 1) && ($CONFIG_USB_GADGET_CONTROLLER == 1 || $CONFIG_USB_GADGET_CONTROLLER == 2) && ($CONFIG_USB_ZERO == 1 || $CONFIG_USB_ZERO == 2) && ($CONFIG_USB_NET2280 != 1 && $CONFIG_USB_NET2280 != 2)} then {	global CONSTANT_Y
set CONFIG_USB_ZERO_PXA2XX $CONSTANT_Y }
	if {($CONFIG_USB_GADGET == 1) && ($CONFIG_USB_GADGET_CONTROLLER == 1 || $CONFIG_USB_GADGET_CONTROLLER == 2) && ($CONFIG_USB_ZERO == 1 || $CONFIG_USB_ZERO == 2) && ($CONFIG_USB_NET2280 == 1 && $CONFIG_USB_NET2280 == 2)} then {	global CONSTANT_Y
set CONFIG_USB_ZERO_GOKU $CONSTANT_Y }
	global CONFIG_NET
	global CONFIG_USB_ETH
	if {($CONFIG_USB_GADGET == 1) && ($CONFIG_USB_GADGET_CONTROLLER == 1 || $CONFIG_USB_GADGET_CONTROLLER == 2) && ($CONFIG_USB_GADGET_CONTROLLER == 1 || $CONFIG_USB_GADGET_CONTROLLER == 2 || $CONFIG_USB_GADGET_CONTROLLER == 4) && ($CONFIG_NET == 1 || $CONFIG_NET == 2 || $CONFIG_NET == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_USB_GADGET_CONTROLLER $CONFIG_NET]]; set CONFIG_USB_ETH [sync_tristate $CONFIG_USB_ETH $tmpvar_dep]; set CONFIG_USB_ETH [expr $CONFIG_USB_ETH&15]}
	if {($CONFIG_USB_GADGET == 1) && ($CONFIG_USB_GADGET_CONTROLLER == 1 || $CONFIG_USB_GADGET_CONTROLLER == 2) && ($CONFIG_USB_ETH == 1 || $CONFIG_USB_ETH == 2) && ($CONFIG_USB_NET2280 == 1 || $CONFIG_USB_NET2280 == 2)} then {	global CONSTANT_Y
set CONFIG_USB_ETH_NET2280 $CONSTANT_Y }
	if {($CONFIG_USB_GADGET == 1) && ($CONFIG_USB_GADGET_CONTROLLER == 1 || $CONFIG_USB_GADGET_CONTROLLER == 2) && ($CONFIG_USB_ETH == 1 || $CONFIG_USB_ETH == 2) && ($CONFIG_USB_NET2280 != 1 && $CONFIG_USB_NET2280 != 2)} then {	global CONSTANT_Y
set CONFIG_USB_ETH_PXA2XX $CONSTANT_Y }
	if {($CONFIG_USB_GADGET == 1) && ($CONFIG_USB_GADGET_CONTROLLER == 1 || $CONFIG_USB_GADGET_CONTROLLER == 2) && ($CONFIG_USB_ETH == 1 || $CONFIG_USB_ETH == 2) && ($CONFIG_USB_NET2280 == 1 && $CONFIG_USB_NET2280 == 2)} then {	global CONSTANT_Y
set CONFIG_USB_ETH_GOKU $CONSTANT_Y }
}


menu_option menu81 81 "Bluetooth support"
proc menu81 {w title} {
	set oldFocus [focus]
	catch {destroy $w; unregister_active 81}
	toplevel $w -class Dialog
	wm withdraw $w
	global active_menus
	set active_menus [lsort -integer [linsert $active_menus end 81]]
	message $w.m -width 400 -aspect 300 -text \
		"Bluetooth support"  -relief raised
	pack $w.m -pady 10 -side top -padx 10
	wm title $w "Bluetooth support" 

	bind $w <Escape> "catch {focus $oldFocus}; destroy $w; unregister_active 81; break"
	set nextscript "catch {focus $oldFocus}; menu82 .menu82 \"$title\""
	frame $w.f
	button $w.f.back -text "Main Menu" \
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 81"
	button $w.f.next -text "Next" -underline 0\
		-width 15 -command $nextscript
	bind all <Alt-n> $nextscript
	button $w.f.prev -text "Prev" -underline 0\
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 81; menu80 .menu80 \"$title\""
	bind $w <Alt-p> "catch {focus $oldFocus}; destroy $w; unregister_active 81; menu80 .menu80 \"$title\";break"
	pack $w.f.back $w.f.next $w.f.prev -side left -expand on
	pack $w.f -pady 10 -side bottom -anchor w -fill x
	frame $w.topline -relief ridge -borderwidth 2 -height 2
	pack $w.topline -side top -fill x

	frame $w.botline -relief ridge -borderwidth 2 -height 2
	pack $w.botline -side bottom -fill x

	frame $w.config
	pack $w.config -fill y -expand on

	scrollbar $w.config.vscroll -command "$w.config.canvas yview"
	pack $w.config.vscroll -side right -fill y

	canvas $w.config.canvas -height 1\
		-relief flat -borderwidth 0 -yscrollcommand "$w.config.vscroll set" \
		-width [expr [winfo screenwidth .] * 1 / 2] 
	frame $w.config.f
	bind $w <Key-Down> "$w.config.canvas yview scroll  1 unit;break;"
	bind $w <Key-Up> "$w.config.canvas yview scroll  -1 unit;break;"
	bind $w <Key-Next> "$w.config.canvas yview scroll  1 page;break;"
	bind $w <Key-Prior> "$w.config.canvas yview scroll  -1 page;break;"
	bind $w <Key-Home> "$w.config.canvas yview moveto 0;break;"
	bind $w <Key-End> "$w.config.canvas yview moveto 1 ;break;"
	pack $w.config.canvas -side right -fill y


	dep_tristate $w.config.f 81 0 "Bluetooth subsystem support" CONFIG_BLUEZ
	dep_tristate $w.config.f 81 1 "L2CAP protocol support" CONFIG_BLUEZ_L2CAP
	dep_tristate $w.config.f 81 2 "SCO links support" CONFIG_BLUEZ_SCO
	dep_tristate $w.config.f 81 3 "RFCOMM protocol support" CONFIG_BLUEZ_RFCOMM
	bool $w.config.f 81 4 "  RFCOMM TTY support" CONFIG_BLUEZ_RFCOMM_TTY
	dep_tristate $w.config.f 81 5 "BNEP protocol support" CONFIG_BLUEZ_BNEP
	bool $w.config.f 81 6 "  Multicast filter support" CONFIG_BLUEZ_BNEP_MC_FILTER
	bool $w.config.f 81 7 "  Protocol filter support" CONFIG_BLUEZ_BNEP_PROTO_FILTER
	dep_tristate $w.config.f 81 8 "CMTP protocol support" CONFIG_BLUEZ_CMTP
	submenu $w.config.f 81 9 "Bluetooth device drivers" 82



	focus $w
	update_active
	global winx; global winy
	set winx [expr [winfo x .]+30]; set winy [expr [winfo y .]+30]
	if {[winfo exists $w]} then {wm geometry $w +$winx+$winy}
	update idletasks
	if {[winfo exists $w]} then  {$w.config.canvas create window 0 0 -anchor nw -window $w.config.f

	$w.config.canvas configure \
		-width [expr [winfo reqwidth $w.config.f] + 1]\
		-scrollregion "-1 -1 [expr [winfo reqwidth $w.config.f] + 1] \
			 [expr [winfo reqheight $w.config.f] + 1]"

	set winy [expr [winfo reqh $w] - [winfo reqh $w.config.canvas]]
	set scry [expr [winfo screenh $w] / 2]
	set maxy [expr [winfo screenh $w] * 3 / 4]
	set canvtotal [expr [winfo reqh $w.config.f] + 2]
	if [expr $winy + $canvtotal < $maxy] {
		$w.config.canvas configure -height $canvtotal
	} else {
		$w.config.canvas configure -height [expr $scry - $winy]
		}
	}
	update idletasks
	if {[winfo exists $w]} then {
	wm maxsize $w [winfo width $w] [winfo screenheight $w]
	wm minsize $w [winfo width $w] 100

	wm deiconify $w
}
}

proc update_menu81 {} {
	global CONFIG_MODULES
	global CONFIG_EXPERIMENTAL
	global CONFIG_NET
	global CONFIG_BLUEZ
	if {($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_NET != 0) && ($CONFIG_NET == 1 || $CONFIG_NET == 2 || $CONFIG_NET == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_NET]];set CONFIG_BLUEZ [sync_tristate $CONFIG_BLUEZ $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu81.config.f.x0 disabled {y}} else {configure_entry .menu81.config.f.x0 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu81.config.f.x0 disabled {m}} else {configure_entry .menu81.config.f.x0 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu81.config.f.x0 normal {m}} else {configure_entry .menu81.config.f.x0 disabled {m}}; configure_entry .menu81.config.f.x0 normal {n l}} else {configure_entry .menu81.config.f.x0 disabled {y n m l}}
	global CONFIG_BLUEZ_L2CAP
	if {($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_NET != 0) && ($CONFIG_BLUEZ != 0) && ($CONFIG_BLUEZ == 1 || $CONFIG_BLUEZ == 2 || $CONFIG_BLUEZ == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BLUEZ]];set CONFIG_BLUEZ_L2CAP [sync_tristate $CONFIG_BLUEZ_L2CAP $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu81.config.f.x1 disabled {y}} else {configure_entry .menu81.config.f.x1 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu81.config.f.x1 disabled {m}} else {configure_entry .menu81.config.f.x1 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu81.config.f.x1 normal {m}} else {configure_entry .menu81.config.f.x1 disabled {m}}; configure_entry .menu81.config.f.x1 normal {n l}} else {configure_entry .menu81.config.f.x1 disabled {y n m l}}
	global CONFIG_BLUEZ_SCO
	if {($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_NET != 0) && ($CONFIG_BLUEZ != 0) && ($CONFIG_BLUEZ == 1 || $CONFIG_BLUEZ == 2 || $CONFIG_BLUEZ == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BLUEZ]];set CONFIG_BLUEZ_SCO [sync_tristate $CONFIG_BLUEZ_SCO $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu81.config.f.x2 disabled {y}} else {configure_entry .menu81.config.f.x2 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu81.config.f.x2 disabled {m}} else {configure_entry .menu81.config.f.x2 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu81.config.f.x2 normal {m}} else {configure_entry .menu81.config.f.x2 disabled {m}}; configure_entry .menu81.config.f.x2 normal {n l}} else {configure_entry .menu81.config.f.x2 disabled {y n m l}}
	global CONFIG_BLUEZ_RFCOMM
	if {($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_NET != 0) && ($CONFIG_BLUEZ != 0) && ($CONFIG_BLUEZ_L2CAP == 1 || $CONFIG_BLUEZ_L2CAP == 2 || $CONFIG_BLUEZ_L2CAP == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BLUEZ_L2CAP]];set CONFIG_BLUEZ_RFCOMM [sync_tristate $CONFIG_BLUEZ_RFCOMM $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu81.config.f.x3 disabled {y}} else {configure_entry .menu81.config.f.x3 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu81.config.f.x3 disabled {m}} else {configure_entry .menu81.config.f.x3 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu81.config.f.x3 normal {m}} else {configure_entry .menu81.config.f.x3 disabled {m}}; configure_entry .menu81.config.f.x3 normal {n l}} else {configure_entry .menu81.config.f.x3 disabled {y n m l}}
	global CONFIG_BLUEZ_RFCOMM_TTY
	if {($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_NET != 0) && ($CONFIG_BLUEZ != 0) && ($CONFIG_BLUEZ_RFCOMM != 0)} then {
	configure_entry .menu81.config.f.x4 normal {n l y}} else {configure_entry .menu81.config.f.x4 disabled {y n l}}
	global CONFIG_BLUEZ_BNEP
	if {($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_NET != 0) && ($CONFIG_BLUEZ != 0) && ($CONFIG_BLUEZ_L2CAP == 1 || $CONFIG_BLUEZ_L2CAP == 2 || $CONFIG_BLUEZ_L2CAP == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BLUEZ_L2CAP]];set CONFIG_BLUEZ_BNEP [sync_tristate $CONFIG_BLUEZ_BNEP $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu81.config.f.x5 disabled {y}} else {configure_entry .menu81.config.f.x5 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu81.config.f.x5 disabled {m}} else {configure_entry .menu81.config.f.x5 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu81.config.f.x5 normal {m}} else {configure_entry .menu81.config.f.x5 disabled {m}}; configure_entry .menu81.config.f.x5 normal {n l}} else {configure_entry .menu81.config.f.x5 disabled {y n m l}}
	global CONFIG_BLUEZ_BNEP_MC_FILTER
	if {($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_NET != 0) && ($CONFIG_BLUEZ != 0) && ($CONFIG_BLUEZ_BNEP != 0)} then {
	configure_entry .menu81.config.f.x6 normal {n l y}} else {configure_entry .menu81.config.f.x6 disabled {y n l}}
	global CONFIG_BLUEZ_BNEP_PROTO_FILTER
	if {($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_NET != 0) && ($CONFIG_BLUEZ != 0) && ($CONFIG_BLUEZ_BNEP != 0)} then {
	configure_entry .menu81.config.f.x7 normal {n l y}} else {configure_entry .menu81.config.f.x7 disabled {y n l}}
	global CONFIG_ISDN
	global CONFIG_ISDN_CAPI
	global CONFIG_BLUEZ_CMTP
	if {($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_NET != 0) && ($CONFIG_BLUEZ != 0) && ($CONFIG_ISDN == 1 || $CONFIG_ISDN == 2) && ($CONFIG_ISDN_CAPI == 1 || $CONFIG_ISDN_CAPI == 2 || $CONFIG_ISDN_CAPI == 4) && ($CONFIG_BLUEZ_L2CAP == 1 || $CONFIG_BLUEZ_L2CAP == 2 || $CONFIG_BLUEZ_L2CAP == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ISDN_CAPI $CONFIG_BLUEZ_L2CAP]];set CONFIG_BLUEZ_CMTP [sync_tristate $CONFIG_BLUEZ_CMTP $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu81.config.f.x8 disabled {y}} else {configure_entry .menu81.config.f.x8 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu81.config.f.x8 disabled {m}} else {configure_entry .menu81.config.f.x8 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu81.config.f.x8 normal {m}} else {configure_entry .menu81.config.f.x8 disabled {m}}; configure_entry .menu81.config.f.x8 normal {n l}} else {configure_entry .menu81.config.f.x8 disabled {y n m l}}
	if {($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_NET != 0) && ($CONFIG_BLUEZ != 0)} then {configure_entry .menu81.config.f.x9 normal {m}} else {configure_entry .menu81.config.f.x9 disabled {m}}
}


proc update_define_menu81 {} {
	update_define_mainmenu
	global CONFIG_MODULES
	global CONFIG_BLUEZ_RFCOMM_TTY
set CONFIG_BLUEZ_RFCOMM_TTY [expr $CONFIG_BLUEZ_RFCOMM_TTY|16]
	global CONFIG_BLUEZ_BNEP_MC_FILTER
set CONFIG_BLUEZ_BNEP_MC_FILTER [expr $CONFIG_BLUEZ_BNEP_MC_FILTER|16]
	global CONFIG_BLUEZ_BNEP_PROTO_FILTER
set CONFIG_BLUEZ_BNEP_PROTO_FILTER [expr $CONFIG_BLUEZ_BNEP_PROTO_FILTER|16]
	global CONFIG_EXPERIMENTAL
	global CONFIG_NET
	global CONFIG_BLUEZ
	if {($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_NET != 0) && ($CONFIG_NET == 1 || $CONFIG_NET == 2 || $CONFIG_NET == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_NET]]; set CONFIG_BLUEZ [sync_tristate $CONFIG_BLUEZ $tmpvar_dep]; set CONFIG_BLUEZ [expr $CONFIG_BLUEZ&15]}
	global CONFIG_BLUEZ_L2CAP
	if {($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_NET != 0) && ($CONFIG_BLUEZ != 0) && ($CONFIG_BLUEZ == 1 || $CONFIG_BLUEZ == 2 || $CONFIG_BLUEZ == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BLUEZ]]; set CONFIG_BLUEZ_L2CAP [sync_tristate $CONFIG_BLUEZ_L2CAP $tmpvar_dep]; set CONFIG_BLUEZ_L2CAP [expr $CONFIG_BLUEZ_L2CAP&15]}
	global CONFIG_BLUEZ_SCO
	if {($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_NET != 0) && ($CONFIG_BLUEZ != 0) && ($CONFIG_BLUEZ == 1 || $CONFIG_BLUEZ == 2 || $CONFIG_BLUEZ == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BLUEZ]]; set CONFIG_BLUEZ_SCO [sync_tristate $CONFIG_BLUEZ_SCO $tmpvar_dep]; set CONFIG_BLUEZ_SCO [expr $CONFIG_BLUEZ_SCO&15]}
	global CONFIG_BLUEZ_RFCOMM
	if {($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_NET != 0) && ($CONFIG_BLUEZ != 0) && ($CONFIG_BLUEZ_L2CAP == 1 || $CONFIG_BLUEZ_L2CAP == 2 || $CONFIG_BLUEZ_L2CAP == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BLUEZ_L2CAP]]; set CONFIG_BLUEZ_RFCOMM [sync_tristate $CONFIG_BLUEZ_RFCOMM $tmpvar_dep]; set CONFIG_BLUEZ_RFCOMM [expr $CONFIG_BLUEZ_RFCOMM&15]}
	if {($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_NET != 0) && ($CONFIG_BLUEZ != 0) && ($CONFIG_BLUEZ_RFCOMM != 0)} then {
	set CONFIG_BLUEZ_RFCOMM_TTY [expr $CONFIG_BLUEZ_RFCOMM_TTY&15]}
	global CONFIG_BLUEZ_BNEP
	if {($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_NET != 0) && ($CONFIG_BLUEZ != 0) && ($CONFIG_BLUEZ_L2CAP == 1 || $CONFIG_BLUEZ_L2CAP == 2 || $CONFIG_BLUEZ_L2CAP == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BLUEZ_L2CAP]]; set CONFIG_BLUEZ_BNEP [sync_tristate $CONFIG_BLUEZ_BNEP $tmpvar_dep]; set CONFIG_BLUEZ_BNEP [expr $CONFIG_BLUEZ_BNEP&15]}
	if {($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_NET != 0) && ($CONFIG_BLUEZ != 0) && ($CONFIG_BLUEZ_BNEP != 0)} then {
	set CONFIG_BLUEZ_BNEP_MC_FILTER [expr $CONFIG_BLUEZ_BNEP_MC_FILTER&15]}
	if {($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_NET != 0) && ($CONFIG_BLUEZ != 0) && ($CONFIG_BLUEZ_BNEP != 0)} then {
	set CONFIG_BLUEZ_BNEP_PROTO_FILTER [expr $CONFIG_BLUEZ_BNEP_PROTO_FILTER&15]}
	global CONFIG_ISDN
	global CONFIG_ISDN_CAPI
	global CONFIG_BLUEZ_CMTP
	if {($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_NET != 0) && ($CONFIG_BLUEZ != 0) && ($CONFIG_ISDN == 1 || $CONFIG_ISDN == 2) && ($CONFIG_ISDN_CAPI == 1 || $CONFIG_ISDN_CAPI == 2 || $CONFIG_ISDN_CAPI == 4) && ($CONFIG_BLUEZ_L2CAP == 1 || $CONFIG_BLUEZ_L2CAP == 2 || $CONFIG_BLUEZ_L2CAP == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_ISDN_CAPI $CONFIG_BLUEZ_L2CAP]]; set CONFIG_BLUEZ_CMTP [sync_tristate $CONFIG_BLUEZ_CMTP $tmpvar_dep]; set CONFIG_BLUEZ_CMTP [expr $CONFIG_BLUEZ_CMTP&15]}
}


proc menu82 {w title} {
	set oldFocus [focus]
	catch {focus .menu81}
	catch {destroy $w; unregister_active 82}
	toplevel $w -class Dialog
	wm withdraw $w
	global active_menus
	set active_menus [lsort -integer [linsert $active_menus end 82]]
	message $w.m -width 400 -aspect 300 -text \
		"Bluetooth device drivers"  -relief raised
	pack $w.m -pady 10 -side top -padx 10
	wm title $w "Bluetooth device drivers" 

	bind $w <Escape> "catch {focus $oldFocus}; destroy $w; unregister_active 82; break"
	set nextscript "catch {focus $oldFocus}; destroy $w; unregister_active 82; catch {destroy .menu81}; unregister_active 81; menu83 .menu83 \"$title\""
	frame $w.f
	button $w.f.back -text "OK" \
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 82"
	button $w.f.next -text "Next" -underline 0\
		-width 15 -command $nextscript
	bind all <Alt-n> $nextscript
	button $w.f.prev -text "Prev" -underline 0\
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 82; menu81 .menu81 \"$title\""
	bind $w <Alt-p> "catch {focus $oldFocus}; destroy $w; unregister_active 82; menu81 .menu81 \"$title\";break"
	pack $w.f.back $w.f.next $w.f.prev -side left -expand on
	pack $w.f -pady 10 -side bottom -anchor w -fill x
	frame $w.topline -relief ridge -borderwidth 2 -height 2
	pack $w.topline -side top -fill x

	frame $w.botline -relief ridge -borderwidth 2 -height 2
	pack $w.botline -side bottom -fill x

	frame $w.config
	pack $w.config -fill y -expand on

	scrollbar $w.config.vscroll -command "$w.config.canvas yview"
	pack $w.config.vscroll -side right -fill y

	canvas $w.config.canvas -height 1\
		-relief flat -borderwidth 0 -yscrollcommand "$w.config.vscroll set" \
		-width [expr [winfo screenwidth .] * 1 / 2] 
	frame $w.config.f
	bind $w <Key-Down> "$w.config.canvas yview scroll  1 unit;break;"
	bind $w <Key-Up> "$w.config.canvas yview scroll  -1 unit;break;"
	bind $w <Key-Next> "$w.config.canvas yview scroll  1 page;break;"
	bind $w <Key-Prior> "$w.config.canvas yview scroll  -1 page;break;"
	bind $w <Key-Home> "$w.config.canvas yview moveto 0;break;"
	bind $w <Key-End> "$w.config.canvas yview moveto 1 ;break;"
	pack $w.config.canvas -side right -fill y


	dep_tristate $w.config.f 82 0 "HCI USB driver" CONFIG_BLUEZ_HCIUSB
	bool $w.config.f 82 1 "  SCO (voice) support" CONFIG_BLUEZ_USB_SCO
	dep_tristate $w.config.f 82 2 "HCI UART driver" CONFIG_BLUEZ_HCIUART
	bool $w.config.f 82 3 "  UART (H4) protocol support" CONFIG_BLUEZ_HCIUART_H4
	bool $w.config.f 82 4 "  BCSP protocol support" CONFIG_BLUEZ_HCIUART_BCSP
	dep_bool $w.config.f 82 5 "  Transmit CRC with every BCSP packet" CONFIG_BLUEZ_HCIUART_BCSP_TXCRC
	dep_tristate $w.config.f 82 6 "HCI BlueFRITZ! USB driver" CONFIG_BLUEZ_HCIBFUSB
	dep_tristate $w.config.f 82 7 "HCI DTL1 (PC Card) driver" CONFIG_BLUEZ_HCIDTL1
	dep_tristate $w.config.f 82 8 "HCI BT3C (PC Card) driver" CONFIG_BLUEZ_HCIBT3C
	dep_tristate $w.config.f 82 9 "HCI BlueCard (PC Card) driver" CONFIG_BLUEZ_HCIBLUECARD
	dep_tristate $w.config.f 82 10 "HCI UART (PC Card) driver" CONFIG_BLUEZ_HCIBTUART
	dep_tristate $w.config.f 82 11 "HCI VHCI (Virtual HCI device) driver" CONFIG_BLUEZ_HCIVHCI



	focus $w
	update_active
	global winx; global winy
	if {[winfo exists .menu81] == 0} then {menu81 .menu81 "Bluetooth support"}
	set winx [expr [winfo x .menu81]+30]; set winy [expr [winfo y .menu81]+30]
	if {[winfo exists $w]} then {wm geometry $w +$winx+$winy}
	update idletasks
	if {[winfo exists $w]} then  {$w.config.canvas create window 0 0 -anchor nw -window $w.config.f

	$w.config.canvas configure \
		-width [expr [winfo reqwidth $w.config.f] + 1]\
		-scrollregion "-1 -1 [expr [winfo reqwidth $w.config.f] + 1] \
			 [expr [winfo reqheight $w.config.f] + 1]"

	set winy [expr [winfo reqh $w] - [winfo reqh $w.config.canvas]]
	set scry [expr [winfo screenh $w] / 2]
	set maxy [expr [winfo screenh $w] * 3 / 4]
	set canvtotal [expr [winfo reqh $w.config.f] + 2]
	if [expr $winy + $canvtotal < $maxy] {
		$w.config.canvas configure -height $canvtotal
	} else {
		$w.config.canvas configure -height [expr $scry - $winy]
		}
	}
	update idletasks
	if {[winfo exists $w]} then {
	wm maxsize $w [winfo width $w] [winfo screenheight $w]
	wm minsize $w [winfo width $w] 100

	wm deiconify $w
}
}

proc update_menu82 {} {
	global CONFIG_MODULES
	global CONFIG_EXPERIMENTAL
	global CONFIG_NET
	global CONFIG_BLUEZ
	global CONFIG_USB
	global CONFIG_BLUEZ_HCIUSB
	if {($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_NET != 0) && ($CONFIG_BLUEZ != 0) && ($CONFIG_BLUEZ == 1 || $CONFIG_BLUEZ == 2 || $CONFIG_BLUEZ == 4) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BLUEZ $CONFIG_USB]];set CONFIG_BLUEZ_HCIUSB [sync_tristate $CONFIG_BLUEZ_HCIUSB $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu82.config.f.x0 disabled {y}} else {configure_entry .menu82.config.f.x0 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu82.config.f.x0 disabled {m}} else {configure_entry .menu82.config.f.x0 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu82.config.f.x0 normal {m}} else {configure_entry .menu82.config.f.x0 disabled {m}}; configure_entry .menu82.config.f.x0 normal {n l}} else {configure_entry .menu82.config.f.x0 disabled {y n m l}}
	global CONFIG_BLUEZ_USB_SCO
	if {($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_NET != 0) && ($CONFIG_BLUEZ != 0) && ($CONFIG_BLUEZ_HCIUSB != 0)} then {
	configure_entry .menu82.config.f.x1 normal {n l y}} else {configure_entry .menu82.config.f.x1 disabled {y n l}}
	global CONFIG_BLUEZ_HCIUART
	if {($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_NET != 0) && ($CONFIG_BLUEZ != 0) && ($CONFIG_BLUEZ == 1 || $CONFIG_BLUEZ == 2 || $CONFIG_BLUEZ == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BLUEZ]];set CONFIG_BLUEZ_HCIUART [sync_tristate $CONFIG_BLUEZ_HCIUART $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu82.config.f.x2 disabled {y}} else {configure_entry .menu82.config.f.x2 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu82.config.f.x2 disabled {m}} else {configure_entry .menu82.config.f.x2 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu82.config.f.x2 normal {m}} else {configure_entry .menu82.config.f.x2 disabled {m}}; configure_entry .menu82.config.f.x2 normal {n l}} else {configure_entry .menu82.config.f.x2 disabled {y n m l}}
	global CONFIG_BLUEZ_HCIUART_H4
	if {($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_NET != 0) && ($CONFIG_BLUEZ != 0) && ($CONFIG_BLUEZ_HCIUART != 0)} then {
	configure_entry .menu82.config.f.x3 normal {n l y}} else {configure_entry .menu82.config.f.x3 disabled {y n l}}
	global CONFIG_BLUEZ_HCIUART_BCSP
	if {($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_NET != 0) && ($CONFIG_BLUEZ != 0) && ($CONFIG_BLUEZ_HCIUART != 0)} then {
	configure_entry .menu82.config.f.x4 normal {n l y}} else {configure_entry .menu82.config.f.x4 disabled {y n l}}
	global CONFIG_BLUEZ_HCIUART_BCSP_TXCRC
	if {($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_NET != 0) && ($CONFIG_BLUEZ != 0) && ($CONFIG_BLUEZ_HCIUART != 0) && ($CONFIG_BLUEZ_HCIUART_BCSP == 1 || $CONFIG_BLUEZ_HCIUART_BCSP == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BLUEZ_HCIUART_BCSP]];set CONFIG_BLUEZ_HCIUART_BCSP_TXCRC [sync_bool $CONFIG_BLUEZ_HCIUART_BCSP_TXCRC $tmpvar_dep 0];if {$tmpvar_dep != 1} then {configure_entry .menu82.config.f.x5 disabled {y};} else {configure_entry .menu82.config.f.x5 normal {y};}; configure_entry .menu82.config.f.x5 normal {n l}} else {configure_entry .menu82.config.f.x5 disabled {y n l}}
	global CONFIG_BLUEZ_HCIBFUSB
	if {($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_NET != 0) && ($CONFIG_BLUEZ != 0) && ($CONFIG_BLUEZ == 1 || $CONFIG_BLUEZ == 2 || $CONFIG_BLUEZ == 4) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BLUEZ $CONFIG_USB]];set CONFIG_BLUEZ_HCIBFUSB [sync_tristate $CONFIG_BLUEZ_HCIBFUSB $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu82.config.f.x6 disabled {y}} else {configure_entry .menu82.config.f.x6 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu82.config.f.x6 disabled {m}} else {configure_entry .menu82.config.f.x6 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu82.config.f.x6 normal {m}} else {configure_entry .menu82.config.f.x6 disabled {m}}; configure_entry .menu82.config.f.x6 normal {n l}} else {configure_entry .menu82.config.f.x6 disabled {y n m l}}
	global CONFIG_PCMCIA
	global CONFIG_BLUEZ_HCIDTL1
	if {($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_NET != 0) && ($CONFIG_BLUEZ != 0) && ($CONFIG_PCMCIA == 1 || $CONFIG_PCMCIA == 2 || $CONFIG_PCMCIA == 4) && ($CONFIG_BLUEZ == 1 || $CONFIG_BLUEZ == 2 || $CONFIG_BLUEZ == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PCMCIA $CONFIG_BLUEZ]];set CONFIG_BLUEZ_HCIDTL1 [sync_tristate $CONFIG_BLUEZ_HCIDTL1 $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu82.config.f.x7 disabled {y}} else {configure_entry .menu82.config.f.x7 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu82.config.f.x7 disabled {m}} else {configure_entry .menu82.config.f.x7 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu82.config.f.x7 normal {m}} else {configure_entry .menu82.config.f.x7 disabled {m}}; configure_entry .menu82.config.f.x7 normal {n l}} else {configure_entry .menu82.config.f.x7 disabled {y n m l}}
	global CONFIG_BLUEZ_HCIBT3C
	if {($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_NET != 0) && ($CONFIG_BLUEZ != 0) && ($CONFIG_PCMCIA == 1 || $CONFIG_PCMCIA == 2 || $CONFIG_PCMCIA == 4) && ($CONFIG_BLUEZ == 1 || $CONFIG_BLUEZ == 2 || $CONFIG_BLUEZ == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PCMCIA $CONFIG_BLUEZ]];set CONFIG_BLUEZ_HCIBT3C [sync_tristate $CONFIG_BLUEZ_HCIBT3C $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu82.config.f.x8 disabled {y}} else {configure_entry .menu82.config.f.x8 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu82.config.f.x8 disabled {m}} else {configure_entry .menu82.config.f.x8 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu82.config.f.x8 normal {m}} else {configure_entry .menu82.config.f.x8 disabled {m}}; configure_entry .menu82.config.f.x8 normal {n l}} else {configure_entry .menu82.config.f.x8 disabled {y n m l}}
	global CONFIG_BLUEZ_HCIBLUECARD
	if {($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_NET != 0) && ($CONFIG_BLUEZ != 0) && ($CONFIG_PCMCIA == 1 || $CONFIG_PCMCIA == 2 || $CONFIG_PCMCIA == 4) && ($CONFIG_BLUEZ == 1 || $CONFIG_BLUEZ == 2 || $CONFIG_BLUEZ == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PCMCIA $CONFIG_BLUEZ]];set CONFIG_BLUEZ_HCIBLUECARD [sync_tristate $CONFIG_BLUEZ_HCIBLUECARD $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu82.config.f.x9 disabled {y}} else {configure_entry .menu82.config.f.x9 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu82.config.f.x9 disabled {m}} else {configure_entry .menu82.config.f.x9 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu82.config.f.x9 normal {m}} else {configure_entry .menu82.config.f.x9 disabled {m}}; configure_entry .menu82.config.f.x9 normal {n l}} else {configure_entry .menu82.config.f.x9 disabled {y n m l}}
	global CONFIG_BLUEZ_HCIBTUART
	if {($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_NET != 0) && ($CONFIG_BLUEZ != 0) && ($CONFIG_PCMCIA == 1 || $CONFIG_PCMCIA == 2 || $CONFIG_PCMCIA == 4) && ($CONFIG_BLUEZ == 1 || $CONFIG_BLUEZ == 2 || $CONFIG_BLUEZ == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PCMCIA $CONFIG_BLUEZ]];set CONFIG_BLUEZ_HCIBTUART [sync_tristate $CONFIG_BLUEZ_HCIBTUART $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu82.config.f.x10 disabled {y}} else {configure_entry .menu82.config.f.x10 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu82.config.f.x10 disabled {m}} else {configure_entry .menu82.config.f.x10 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu82.config.f.x10 normal {m}} else {configure_entry .menu82.config.f.x10 disabled {m}}; configure_entry .menu82.config.f.x10 normal {n l}} else {configure_entry .menu82.config.f.x10 disabled {y n m l}}
	global CONFIG_BLUEZ_HCIVHCI
	if {($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_NET != 0) && ($CONFIG_BLUEZ != 0) && ($CONFIG_BLUEZ == 1 || $CONFIG_BLUEZ == 2 || $CONFIG_BLUEZ == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BLUEZ]];set CONFIG_BLUEZ_HCIVHCI [sync_tristate $CONFIG_BLUEZ_HCIVHCI $tmpvar_dep];	if {$tmpvar_dep != 1} then {configure_entry .menu82.config.f.x11 disabled {y}} else {configure_entry .menu82.config.f.x11 normal {y}}; if {$tmpvar_dep == 0} then {configure_entry .menu82.config.f.x11 disabled {m}} else {configure_entry .menu82.config.f.x11 normal {m}}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu82.config.f.x11 normal {m}} else {configure_entry .menu82.config.f.x11 disabled {m}}; configure_entry .menu82.config.f.x11 normal {n l}} else {configure_entry .menu82.config.f.x11 disabled {y n m l}}
}


proc update_define_menu82 {} {
	update_define_mainmenu
	global CONFIG_MODULES
	global CONFIG_BLUEZ_USB_SCO
set CONFIG_BLUEZ_USB_SCO [expr $CONFIG_BLUEZ_USB_SCO|16]
	global CONFIG_BLUEZ_HCIUART_H4
set CONFIG_BLUEZ_HCIUART_H4 [expr $CONFIG_BLUEZ_HCIUART_H4|16]
	global CONFIG_BLUEZ_HCIUART_BCSP
set CONFIG_BLUEZ_HCIUART_BCSP [expr $CONFIG_BLUEZ_HCIUART_BCSP|16]
	global CONFIG_EXPERIMENTAL
	global CONFIG_NET
	global CONFIG_BLUEZ
	global CONFIG_USB
	global CONFIG_BLUEZ_HCIUSB
	if {($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_NET != 0) && ($CONFIG_BLUEZ != 0) && ($CONFIG_BLUEZ == 1 || $CONFIG_BLUEZ == 2 || $CONFIG_BLUEZ == 4) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BLUEZ $CONFIG_USB]]; set CONFIG_BLUEZ_HCIUSB [sync_tristate $CONFIG_BLUEZ_HCIUSB $tmpvar_dep]; set CONFIG_BLUEZ_HCIUSB [expr $CONFIG_BLUEZ_HCIUSB&15]}
	if {($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_NET != 0) && ($CONFIG_BLUEZ != 0) && ($CONFIG_BLUEZ_HCIUSB != 0)} then {
	set CONFIG_BLUEZ_USB_SCO [expr $CONFIG_BLUEZ_USB_SCO&15]}
	global CONFIG_BLUEZ_HCIUART
	if {($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_NET != 0) && ($CONFIG_BLUEZ != 0) && ($CONFIG_BLUEZ == 1 || $CONFIG_BLUEZ == 2 || $CONFIG_BLUEZ == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BLUEZ]]; set CONFIG_BLUEZ_HCIUART [sync_tristate $CONFIG_BLUEZ_HCIUART $tmpvar_dep]; set CONFIG_BLUEZ_HCIUART [expr $CONFIG_BLUEZ_HCIUART&15]}
	if {($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_NET != 0) && ($CONFIG_BLUEZ != 0) && ($CONFIG_BLUEZ_HCIUART != 0)} then {
	set CONFIG_BLUEZ_HCIUART_H4 [expr $CONFIG_BLUEZ_HCIUART_H4&15]}
	if {($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_NET != 0) && ($CONFIG_BLUEZ != 0) && ($CONFIG_BLUEZ_HCIUART != 0)} then {
	set CONFIG_BLUEZ_HCIUART_BCSP [expr $CONFIG_BLUEZ_HCIUART_BCSP&15]}
	global CONFIG_BLUEZ_HCIUART_BCSP_TXCRC
	if {($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_NET != 0) && ($CONFIG_BLUEZ != 0) && ($CONFIG_BLUEZ_HCIUART != 0) && ($CONFIG_BLUEZ_HCIUART_BCSP == 1 || $CONFIG_BLUEZ_HCIUART_BCSP == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BLUEZ_HCIUART_BCSP]];set CONFIG_BLUEZ_HCIUART_BCSP_TXCRC [sync_bool $CONFIG_BLUEZ_HCIUART_BCSP_TXCRC $tmpvar_dep 0];set CONFIG_BLUEZ_HCIUART_BCSP_TXCRC [expr $CONFIG_BLUEZ_HCIUART_BCSP_TXCRC&15]}
	global CONFIG_BLUEZ_HCIBFUSB
	if {($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_NET != 0) && ($CONFIG_BLUEZ != 0) && ($CONFIG_BLUEZ == 1 || $CONFIG_BLUEZ == 2 || $CONFIG_BLUEZ == 4) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BLUEZ $CONFIG_USB]]; set CONFIG_BLUEZ_HCIBFUSB [sync_tristate $CONFIG_BLUEZ_HCIBFUSB $tmpvar_dep]; set CONFIG_BLUEZ_HCIBFUSB [expr $CONFIG_BLUEZ_HCIBFUSB&15]}
	global CONFIG_PCMCIA
	global CONFIG_BLUEZ_HCIDTL1
	if {($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_NET != 0) && ($CONFIG_BLUEZ != 0) && ($CONFIG_PCMCIA == 1 || $CONFIG_PCMCIA == 2 || $CONFIG_PCMCIA == 4) && ($CONFIG_BLUEZ == 1 || $CONFIG_BLUEZ == 2 || $CONFIG_BLUEZ == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PCMCIA $CONFIG_BLUEZ]]; set CONFIG_BLUEZ_HCIDTL1 [sync_tristate $CONFIG_BLUEZ_HCIDTL1 $tmpvar_dep]; set CONFIG_BLUEZ_HCIDTL1 [expr $CONFIG_BLUEZ_HCIDTL1&15]}
	global CONFIG_BLUEZ_HCIBT3C
	if {($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_NET != 0) && ($CONFIG_BLUEZ != 0) && ($CONFIG_PCMCIA == 1 || $CONFIG_PCMCIA == 2 || $CONFIG_PCMCIA == 4) && ($CONFIG_BLUEZ == 1 || $CONFIG_BLUEZ == 2 || $CONFIG_BLUEZ == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PCMCIA $CONFIG_BLUEZ]]; set CONFIG_BLUEZ_HCIBT3C [sync_tristate $CONFIG_BLUEZ_HCIBT3C $tmpvar_dep]; set CONFIG_BLUEZ_HCIBT3C [expr $CONFIG_BLUEZ_HCIBT3C&15]}
	global CONFIG_BLUEZ_HCIBLUECARD
	if {($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_NET != 0) && ($CONFIG_BLUEZ != 0) && ($CONFIG_PCMCIA == 1 || $CONFIG_PCMCIA == 2 || $CONFIG_PCMCIA == 4) && ($CONFIG_BLUEZ == 1 || $CONFIG_BLUEZ == 2 || $CONFIG_BLUEZ == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PCMCIA $CONFIG_BLUEZ]]; set CONFIG_BLUEZ_HCIBLUECARD [sync_tristate $CONFIG_BLUEZ_HCIBLUECARD $tmpvar_dep]; set CONFIG_BLUEZ_HCIBLUECARD [expr $CONFIG_BLUEZ_HCIBLUECARD&15]}
	global CONFIG_BLUEZ_HCIBTUART
	if {($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_NET != 0) && ($CONFIG_BLUEZ != 0) && ($CONFIG_PCMCIA == 1 || $CONFIG_PCMCIA == 2 || $CONFIG_PCMCIA == 4) && ($CONFIG_BLUEZ == 1 || $CONFIG_BLUEZ == 2 || $CONFIG_BLUEZ == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_PCMCIA $CONFIG_BLUEZ]]; set CONFIG_BLUEZ_HCIBTUART [sync_tristate $CONFIG_BLUEZ_HCIBTUART $tmpvar_dep]; set CONFIG_BLUEZ_HCIBTUART [expr $CONFIG_BLUEZ_HCIBTUART&15]}
	global CONFIG_BLUEZ_HCIVHCI
	if {($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_NET != 0) && ($CONFIG_BLUEZ != 0) && ($CONFIG_BLUEZ == 1 || $CONFIG_BLUEZ == 2 || $CONFIG_BLUEZ == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_BLUEZ]]; set CONFIG_BLUEZ_HCIVHCI [sync_tristate $CONFIG_BLUEZ_HCIVHCI $tmpvar_dep]; set CONFIG_BLUEZ_HCIVHCI [expr $CONFIG_BLUEZ_HCIVHCI&15]}
}


menu_option menu83 83 "Kernel hacking"
proc menu83 {w title} {
	set oldFocus [focus]
	catch {destroy $w; unregister_active 83}
	toplevel $w -class Dialog
	wm withdraw $w
	global active_menus
	set active_menus [lsort -integer [linsert $active_menus end 83]]
	message $w.m -width 400 -aspect 300 -text \
		"Kernel hacking"  -relief raised
	pack $w.m -pady 10 -side top -padx 10
	wm title $w "Kernel hacking" 

	bind $w <Escape> "catch {focus $oldFocus}; destroy $w; unregister_active 83; break"
	set nextscript "catch {focus $oldFocus}; destroy $w; unregister_active 83; menu84 .menu84 \"$title\""
	frame $w.f
	button $w.f.back -text "Main Menu" \
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 83"
	button $w.f.next -text "Next" -underline 0\
		-width 15 -command $nextscript
	bind all <Alt-n> $nextscript
	button $w.f.prev -text "Prev" -underline 0\
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 83; menu82 .menu82 \"$title\""
	bind $w <Alt-p> "catch {focus $oldFocus}; destroy $w; unregister_active 83; menu82 .menu82 \"$title\";break"
	pack $w.f.back $w.f.next $w.f.prev -side left -expand on
	pack $w.f -pady 10 -side bottom -anchor w -fill x
	frame $w.topline -relief ridge -borderwidth 2 -height 2
	pack $w.topline -side top -fill x

	frame $w.botline -relief ridge -borderwidth 2 -height 2
	pack $w.botline -side bottom -fill x

	frame $w.config
	pack $w.config -fill y -expand on

	scrollbar $w.config.vscroll -command "$w.config.canvas yview"
	pack $w.config.vscroll -side right -fill y

	canvas $w.config.canvas -height 1\
		-relief flat -borderwidth 0 -yscrollcommand "$w.config.vscroll set" \
		-width [expr [winfo screenwidth .] * 1 / 2] 
	frame $w.config.f
	bind $w <Key-Down> "$w.config.canvas yview scroll  1 unit;break;"
	bind $w <Key-Up> "$w.config.canvas yview scroll  -1 unit;break;"
	bind $w <Key-Next> "$w.config.canvas yview scroll  1 page;break;"
	bind $w <Key-Prior> "$w.config.canvas yview scroll  -1 page;break;"
	bind $w <Key-Home> "$w.config.canvas yview moveto 0;break;"
	bind $w <Key-End> "$w.config.canvas yview moveto 1 ;break;"
	pack $w.config.canvas -side right -fill y


	bool $w.config.f 83 0 "Verbose user fault messages" CONFIG_DEBUG_USER
	bool $w.config.f 83 1 "Include debugging information in kernel binary" CONFIG_DEBUG_INFO
	dep_bool $w.config.f 83 2 "Disable pgtable cache" CONFIG_NO_PGT_CACHE
	bool $w.config.f 83 3 "Kernel debugging" CONFIG_DEBUG_KERNEL
	dep_bool $w.config.f 83 4 "  Debug memory allocations" CONFIG_DEBUG_SLAB
	dep_bool $w.config.f 83 5 "  Magic SysRq key" CONFIG_MAGIC_SYSRQ
	dep_bool $w.config.f 83 6 "  Spinlock debugging" CONFIG_DEBUG_SPINLOCK
	dep_bool $w.config.f 83 7 "  Wait queue debugging" CONFIG_DEBUG_WAITQ
	dep_bool $w.config.f 83 8 "  Verbose BUG() reporting (adds 70K)" CONFIG_DEBUG_BUGVERBOSE
	dep_bool $w.config.f 83 9 "  Verbose kernel error messages" CONFIG_DEBUG_ERRORS
	dep_bool $w.config.f 83 10 "  Kernel low-level debugging functions" CONFIG_DEBUG_LL
	dep_bool $w.config.f 83 11 "    Kernel low-level debugging messages via footbridge serial port" CONFIG_DEBUG_DC21285_PORT
	dep_bool $w.config.f 83 12 "    Kernel low-level debugging messages via UART2" CONFIG_DEBUG_CLPS711X_UART2
	int $w.config.f 83 13 "Kernel messages buffer length shift (0 = default)" CONFIG_LOG_BUF_SHIFT



	focus $w
	update_active
	global winx; global winy
	set winx [expr [winfo x .]+30]; set winy [expr [winfo y .]+30]
	if {[winfo exists $w]} then {wm geometry $w +$winx+$winy}
	update idletasks
	if {[winfo exists $w]} then  {$w.config.canvas create window 0 0 -anchor nw -window $w.config.f

	$w.config.canvas configure \
		-width [expr [winfo reqwidth $w.config.f] + 1]\
		-scrollregion "-1 -1 [expr [winfo reqwidth $w.config.f] + 1] \
			 [expr [winfo reqheight $w.config.f] + 1]"

	set winy [expr [winfo reqh $w] - [winfo reqh $w.config.canvas]]
	set scry [expr [winfo screenh $w] / 2]
	set maxy [expr [winfo screenh $w] * 3 / 4]
	set canvtotal [expr [winfo reqh $w.config.f] + 2]
	if [expr $winy + $canvtotal < $maxy] {
		$w.config.canvas configure -height $canvtotal
	} else {
		$w.config.canvas configure -height [expr $scry - $winy]
		}
	}
	update idletasks
	if {[winfo exists $w]} then {
	wm maxsize $w [winfo width $w] [winfo screenheight $w]
	wm minsize $w [winfo width $w] 100

	wm deiconify $w
}
}

proc update_menu83 {} {
	global CONFIG_CPU_26
	global CONFIG_NO_PGT_CACHE
	if {($CONFIG_CPU_26 == 1 || $CONFIG_CPU_26 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_CPU_26]];set CONFIG_NO_PGT_CACHE [sync_bool $CONFIG_NO_PGT_CACHE $tmpvar_dep 0];if {$tmpvar_dep != 1} then {configure_entry .menu83.config.f.x2 disabled {y};} else {configure_entry .menu83.config.f.x2 normal {y};}; configure_entry .menu83.config.f.x2 normal {n l}} else {configure_entry .menu83.config.f.x2 disabled {y n l}}
	global CONFIG_DEBUG_KERNEL
	global CONFIG_DEBUG_SLAB
	if {($CONFIG_DEBUG_KERNEL == 1 || $CONFIG_DEBUG_KERNEL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_DEBUG_KERNEL]];set CONFIG_DEBUG_SLAB [sync_bool $CONFIG_DEBUG_SLAB $tmpvar_dep 0];if {$tmpvar_dep != 1} then {configure_entry .menu83.config.f.x4 disabled {y};} else {configure_entry .menu83.config.f.x4 normal {y};}; configure_entry .menu83.config.f.x4 normal {n l}} else {configure_entry .menu83.config.f.x4 disabled {y n l}}
	global CONFIG_MAGIC_SYSRQ
	if {($CONFIG_DEBUG_KERNEL == 1 || $CONFIG_DEBUG_KERNEL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_DEBUG_KERNEL]];set CONFIG_MAGIC_SYSRQ [sync_bool $CONFIG_MAGIC_SYSRQ $tmpvar_dep 0];if {$tmpvar_dep != 1} then {configure_entry .menu83.config.f.x5 disabled {y};} else {configure_entry .menu83.config.f.x5 normal {y};}; configure_entry .menu83.config.f.x5 normal {n l}} else {configure_entry .menu83.config.f.x5 disabled {y n l}}
	global CONFIG_DEBUG_SPINLOCK
	if {($CONFIG_DEBUG_KERNEL == 1 || $CONFIG_DEBUG_KERNEL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_DEBUG_KERNEL]];set CONFIG_DEBUG_SPINLOCK [sync_bool $CONFIG_DEBUG_SPINLOCK $tmpvar_dep 0];if {$tmpvar_dep != 1} then {configure_entry .menu83.config.f.x6 disabled {y};} else {configure_entry .menu83.config.f.x6 normal {y};}; configure_entry .menu83.config.f.x6 normal {n l}} else {configure_entry .menu83.config.f.x6 disabled {y n l}}
	global CONFIG_DEBUG_WAITQ
	if {($CONFIG_DEBUG_KERNEL == 1 || $CONFIG_DEBUG_KERNEL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_DEBUG_KERNEL]];set CONFIG_DEBUG_WAITQ [sync_bool $CONFIG_DEBUG_WAITQ $tmpvar_dep 0];if {$tmpvar_dep != 1} then {configure_entry .menu83.config.f.x7 disabled {y};} else {configure_entry .menu83.config.f.x7 normal {y};}; configure_entry .menu83.config.f.x7 normal {n l}} else {configure_entry .menu83.config.f.x7 disabled {y n l}}
	global CONFIG_DEBUG_BUGVERBOSE
	if {($CONFIG_DEBUG_KERNEL == 1 || $CONFIG_DEBUG_KERNEL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_DEBUG_KERNEL]];set CONFIG_DEBUG_BUGVERBOSE [sync_bool $CONFIG_DEBUG_BUGVERBOSE $tmpvar_dep 0];if {$tmpvar_dep != 1} then {configure_entry .menu83.config.f.x8 disabled {y};} else {configure_entry .menu83.config.f.x8 normal {y};}; configure_entry .menu83.config.f.x8 normal {n l}} else {configure_entry .menu83.config.f.x8 disabled {y n l}}
	global CONFIG_DEBUG_ERRORS
	if {($CONFIG_DEBUG_KERNEL == 1 || $CONFIG_DEBUG_KERNEL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_DEBUG_KERNEL]];set CONFIG_DEBUG_ERRORS [sync_bool $CONFIG_DEBUG_ERRORS $tmpvar_dep 0];if {$tmpvar_dep != 1} then {configure_entry .menu83.config.f.x9 disabled {y};} else {configure_entry .menu83.config.f.x9 normal {y};}; configure_entry .menu83.config.f.x9 normal {n l}} else {configure_entry .menu83.config.f.x9 disabled {y n l}}
	global CONFIG_DEBUG_LL
	if {($CONFIG_DEBUG_KERNEL == 1 || $CONFIG_DEBUG_KERNEL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_DEBUG_KERNEL]];set CONFIG_DEBUG_LL [sync_bool $CONFIG_DEBUG_LL $tmpvar_dep 0];if {$tmpvar_dep != 1} then {configure_entry .menu83.config.f.x10 disabled {y};} else {configure_entry .menu83.config.f.x10 normal {y};}; configure_entry .menu83.config.f.x10 normal {n l}} else {configure_entry .menu83.config.f.x10 disabled {y n l}}
	global CONFIG_FOOTBRIDGE
	global CONFIG_DEBUG_DC21285_PORT
	if {($CONFIG_DEBUG_LL == 1 || $CONFIG_DEBUG_LL == 4) && ($CONFIG_FOOTBRIDGE == 1 || $CONFIG_FOOTBRIDGE == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_DEBUG_LL $CONFIG_FOOTBRIDGE]];set CONFIG_DEBUG_DC21285_PORT [sync_bool $CONFIG_DEBUG_DC21285_PORT $tmpvar_dep 0];if {$tmpvar_dep != 1} then {configure_entry .menu83.config.f.x11 disabled {y};} else {configure_entry .menu83.config.f.x11 normal {y};}; configure_entry .menu83.config.f.x11 normal {n l}} else {configure_entry .menu83.config.f.x11 disabled {y n l}}
	global CONFIG_ARCH_CLPS711X
	global CONFIG_DEBUG_CLPS711X_UART2
	if {($CONFIG_DEBUG_LL == 1 || $CONFIG_DEBUG_LL == 4) && ($CONFIG_ARCH_CLPS711X == 1 || $CONFIG_ARCH_CLPS711X == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_DEBUG_LL $CONFIG_ARCH_CLPS711X]];set CONFIG_DEBUG_CLPS711X_UART2 [sync_bool $CONFIG_DEBUG_CLPS711X_UART2 $tmpvar_dep 0];if {$tmpvar_dep != 1} then {configure_entry .menu83.config.f.x12 disabled {y};} else {configure_entry .menu83.config.f.x12 normal {y};}; configure_entry .menu83.config.f.x12 normal {n l}} else {configure_entry .menu83.config.f.x12 disabled {y n l}}
}


proc update_define_menu83 {} {
	update_define_mainmenu
	global CONFIG_MODULES
	global CONFIG_FRAME_POINTER
	global CONFIG_ARCH_OMAHA
	if {($CONFIG_ARCH_OMAHA == 1)} then {	global CONSTANT_N
set CONFIG_FRAME_POINTER $CONSTANT_N }
	if {($CONFIG_ARCH_OMAHA != 1)} then {	global CONSTANT_Y
set CONFIG_FRAME_POINTER $CONSTANT_Y }
	global CONFIG_CPU_26
	global CONFIG_NO_PGT_CACHE
	if {($CONFIG_CPU_26 == 1 || $CONFIG_CPU_26 == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_CPU_26]];set CONFIG_NO_PGT_CACHE [sync_bool $CONFIG_NO_PGT_CACHE $tmpvar_dep 0];set CONFIG_NO_PGT_CACHE [expr $CONFIG_NO_PGT_CACHE&15]}
	global CONFIG_DEBUG_KERNEL
	global CONFIG_DEBUG_SLAB
	if {($CONFIG_DEBUG_KERNEL == 1 || $CONFIG_DEBUG_KERNEL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_DEBUG_KERNEL]];set CONFIG_DEBUG_SLAB [sync_bool $CONFIG_DEBUG_SLAB $tmpvar_dep 0];set CONFIG_DEBUG_SLAB [expr $CONFIG_DEBUG_SLAB&15]}
	global CONFIG_MAGIC_SYSRQ
	if {($CONFIG_DEBUG_KERNEL == 1 || $CONFIG_DEBUG_KERNEL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_DEBUG_KERNEL]];set CONFIG_MAGIC_SYSRQ [sync_bool $CONFIG_MAGIC_SYSRQ $tmpvar_dep 0];set CONFIG_MAGIC_SYSRQ [expr $CONFIG_MAGIC_SYSRQ&15]}
	global CONFIG_DEBUG_SPINLOCK
	if {($CONFIG_DEBUG_KERNEL == 1 || $CONFIG_DEBUG_KERNEL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_DEBUG_KERNEL]];set CONFIG_DEBUG_SPINLOCK [sync_bool $CONFIG_DEBUG_SPINLOCK $tmpvar_dep 0];set CONFIG_DEBUG_SPINLOCK [expr $CONFIG_DEBUG_SPINLOCK&15]}
	global CONFIG_DEBUG_WAITQ
	if {($CONFIG_DEBUG_KERNEL == 1 || $CONFIG_DEBUG_KERNEL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_DEBUG_KERNEL]];set CONFIG_DEBUG_WAITQ [sync_bool $CONFIG_DEBUG_WAITQ $tmpvar_dep 0];set CONFIG_DEBUG_WAITQ [expr $CONFIG_DEBUG_WAITQ&15]}
	global CONFIG_DEBUG_BUGVERBOSE
	if {($CONFIG_DEBUG_KERNEL == 1 || $CONFIG_DEBUG_KERNEL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_DEBUG_KERNEL]];set CONFIG_DEBUG_BUGVERBOSE [sync_bool $CONFIG_DEBUG_BUGVERBOSE $tmpvar_dep 0];set CONFIG_DEBUG_BUGVERBOSE [expr $CONFIG_DEBUG_BUGVERBOSE&15]}
	global CONFIG_DEBUG_ERRORS
	if {($CONFIG_DEBUG_KERNEL == 1 || $CONFIG_DEBUG_KERNEL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_DEBUG_KERNEL]];set CONFIG_DEBUG_ERRORS [sync_bool $CONFIG_DEBUG_ERRORS $tmpvar_dep 0];set CONFIG_DEBUG_ERRORS [expr $CONFIG_DEBUG_ERRORS&15]}
	global CONFIG_DEBUG_LL
	if {($CONFIG_DEBUG_KERNEL == 1 || $CONFIG_DEBUG_KERNEL == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_DEBUG_KERNEL]];set CONFIG_DEBUG_LL [sync_bool $CONFIG_DEBUG_LL $tmpvar_dep 0];set CONFIG_DEBUG_LL [expr $CONFIG_DEBUG_LL&15]}
	global CONFIG_FOOTBRIDGE
	global CONFIG_DEBUG_DC21285_PORT
	if {($CONFIG_DEBUG_LL == 1 || $CONFIG_DEBUG_LL == 4) && ($CONFIG_FOOTBRIDGE == 1 || $CONFIG_FOOTBRIDGE == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_DEBUG_LL $CONFIG_FOOTBRIDGE]];set CONFIG_DEBUG_DC21285_PORT [sync_bool $CONFIG_DEBUG_DC21285_PORT $tmpvar_dep 0];set CONFIG_DEBUG_DC21285_PORT [expr $CONFIG_DEBUG_DC21285_PORT&15]}
	global CONFIG_ARCH_CLPS711X
	global CONFIG_DEBUG_CLPS711X_UART2
	if {($CONFIG_DEBUG_LL == 1 || $CONFIG_DEBUG_LL == 4) && ($CONFIG_ARCH_CLPS711X == 1 || $CONFIG_ARCH_CLPS711X == 4)} then {
	set tmpvar_dep [effective_dep [list $CONFIG_DEBUG_LL $CONFIG_ARCH_CLPS711X]];set CONFIG_DEBUG_CLPS711X_UART2 [sync_bool $CONFIG_DEBUG_CLPS711X_UART2 $tmpvar_dep 0];set CONFIG_DEBUG_CLPS711X_UART2 [expr $CONFIG_DEBUG_CLPS711X_UART2&15]}
}


menu_option menu84 84 "Cryptographic options"
proc menu84 {w title} {
	set oldFocus [focus]
	catch {destroy $w; unregister_active 84}
	toplevel $w -class Dialog
	wm withdraw $w
	global active_menus
	set active_menus [lsort -integer [linsert $active_menus end 84]]
	message $w.m -width 400 -aspect 300 -text \
		"Cryptographic options"  -relief raised
	pack $w.m -pady 10 -side top -padx 10
	wm title $w "Cryptographic options" 

	bind $w <Escape> "catch {focus $oldFocus}; destroy $w; unregister_active 84; break"
	set nextscript "catch {focus $oldFocus}; destroy $w; unregister_active 84; menu85 .menu85 \"$title\""
	frame $w.f
	button $w.f.back -text "Main Menu" \
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 84"
	button $w.f.next -text "Next" -underline 0\
		-width 15 -command $nextscript
	bind all <Alt-n> $nextscript
	button $w.f.prev -text "Prev" -underline 0\
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 84; menu83 .menu83 \"$title\""
	bind $w <Alt-p> "catch {focus $oldFocus}; destroy $w; unregister_active 84; menu83 .menu83 \"$title\";break"
	pack $w.f.back $w.f.next $w.f.prev -side left -expand on
	pack $w.f -pady 10 -side bottom -anchor w -fill x
	frame $w.topline -relief ridge -borderwidth 2 -height 2
	pack $w.topline -side top -fill x

	frame $w.botline -relief ridge -borderwidth 2 -height 2
	pack $w.botline -side bottom -fill x

	frame $w.config
	pack $w.config -fill y -expand on

	scrollbar $w.config.vscroll -command "$w.config.canvas yview"
	pack $w.config.vscroll -side right -fill y

	canvas $w.config.canvas -height 1\
		-relief flat -borderwidth 0 -yscrollcommand "$w.config.vscroll set" \
		-width [expr [winfo screenwidth .] * 1 / 2] 
	frame $w.config.f
	bind $w <Key-Down> "$w.config.canvas yview scroll  1 unit;break;"
	bind $w <Key-Up> "$w.config.canvas yview scroll  -1 unit;break;"
	bind $w <Key-Next> "$w.config.canvas yview scroll  1 page;break;"
	bind $w <Key-Prior> "$w.config.canvas yview scroll  -1 page;break;"
	bind $w <Key-Home> "$w.config.canvas yview moveto 0;break;"
	bind $w <Key-End> "$w.config.canvas yview moveto 1 ;break;"
	pack $w.config.canvas -side right -fill y


	bool $w.config.f 84 0 "Cryptographic API" CONFIG_CRYPTO
	bool $w.config.f 84 1 "  HMAC support" CONFIG_CRYPTO_HMAC
	tristate $w.config.f 84 2 "  NULL algorithms" CONFIG_CRYPTO_NULL
	tristate $w.config.f 84 3 "  MD4 digest algorithm" CONFIG_CRYPTO_MD4
	tristate $w.config.f 84 4 "  MD5 digest algorithm" CONFIG_CRYPTO_MD5
	tristate $w.config.f 84 5 "  SHA1 digest algorithm" CONFIG_CRYPTO_SHA1
	tristate $w.config.f 84 6 "  SHA256 digest algorithm" CONFIG_CRYPTO_SHA256
	tristate $w.config.f 84 7 "  SHA384 and SHA512 digest algorithms" CONFIG_CRYPTO_SHA512
	tristate $w.config.f 84 8 "  DES and Triple DES EDE cipher algorithms" CONFIG_CRYPTO_DES
	tristate $w.config.f 84 9 "  Blowfish cipher algorithm" CONFIG_CRYPTO_BLOWFISH
	tristate $w.config.f 84 10 "  Twofish cipher algorithm" CONFIG_CRYPTO_TWOFISH
	tristate $w.config.f 84 11 "  Serpent cipher algorithm" CONFIG_CRYPTO_SERPENT
	tristate $w.config.f 84 12 "  AES cipher algorithms" CONFIG_CRYPTO_AES
	tristate $w.config.f 84 13 "  CAST5 (CAST-128) cipher algorithm" CONFIG_CRYPTO_CAST5
	tristate $w.config.f 84 14 "  Deflate compression algorithm" CONFIG_CRYPTO_DEFLATE
	tristate $w.config.f 84 15 "  Testing module" CONFIG_CRYPTO_TEST



	focus $w
	update_active
	global winx; global winy
	set winx [expr [winfo x .]+30]; set winy [expr [winfo y .]+30]
	if {[winfo exists $w]} then {wm geometry $w +$winx+$winy}
	update idletasks
	if {[winfo exists $w]} then  {$w.config.canvas create window 0 0 -anchor nw -window $w.config.f

	$w.config.canvas configure \
		-width [expr [winfo reqwidth $w.config.f] + 1]\
		-scrollregion "-1 -1 [expr [winfo reqwidth $w.config.f] + 1] \
			 [expr [winfo reqheight $w.config.f] + 1]"

	set winy [expr [winfo reqh $w] - [winfo reqh $w.config.canvas]]
	set scry [expr [winfo screenh $w] / 2]
	set maxy [expr [winfo screenh $w] * 3 / 4]
	set canvtotal [expr [winfo reqh $w.config.f] + 2]
	if [expr $winy + $canvtotal < $maxy] {
		$w.config.canvas configure -height $canvtotal
	} else {
		$w.config.canvas configure -height [expr $scry - $winy]
		}
	}
	update idletasks
	if {[winfo exists $w]} then {
	wm maxsize $w [winfo width $w] [winfo screenheight $w]
	wm minsize $w [winfo width $w] 100

	wm deiconify $w
}
}

proc update_menu84 {} {
	global CONFIG_CRYPTO
	global CONFIG_CRYPTO_HMAC
	if {($CONFIG_CRYPTO == 1)} then {
	configure_entry .menu84.config.f.x1 normal {n l y}} else {configure_entry .menu84.config.f.x1 disabled {y n l}}
	global CONFIG_MODULES
	global CONFIG_CRYPTO_NULL
	if {($CONFIG_CRYPTO == 1)} then {
	configure_entry .menu84.config.f.x2 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu84.config.f.x2 normal {m}} else {configure_entry .menu84.config.f.x2 disabled {m}}; configure_entry .menu84.config.f.x2 normal {n l}} else {configure_entry .menu84.config.f.x2 disabled {y n m l}}
	global CONFIG_CRYPTO_MD4
	if {($CONFIG_CRYPTO == 1)} then {
	configure_entry .menu84.config.f.x3 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu84.config.f.x3 normal {m}} else {configure_entry .menu84.config.f.x3 disabled {m}}; configure_entry .menu84.config.f.x3 normal {n l}} else {configure_entry .menu84.config.f.x3 disabled {y n m l}}
	global CONFIG_CRYPTO_MD5
	if {($CONFIG_CRYPTO == 1)} then {
	configure_entry .menu84.config.f.x4 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu84.config.f.x4 normal {m}} else {configure_entry .menu84.config.f.x4 disabled {m}}; configure_entry .menu84.config.f.x4 normal {n l}} else {configure_entry .menu84.config.f.x4 disabled {y n m l}}
	global CONFIG_CRYPTO_SHA1
	if {($CONFIG_CRYPTO == 1)} then {
	configure_entry .menu84.config.f.x5 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu84.config.f.x5 normal {m}} else {configure_entry .menu84.config.f.x5 disabled {m}}; configure_entry .menu84.config.f.x5 normal {n l}} else {configure_entry .menu84.config.f.x5 disabled {y n m l}}
	global CONFIG_CRYPTO_SHA256
	if {($CONFIG_CRYPTO == 1)} then {
	configure_entry .menu84.config.f.x6 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu84.config.f.x6 normal {m}} else {configure_entry .menu84.config.f.x6 disabled {m}}; configure_entry .menu84.config.f.x6 normal {n l}} else {configure_entry .menu84.config.f.x6 disabled {y n m l}}
	global CONFIG_CRYPTO_SHA512
	if {($CONFIG_CRYPTO == 1)} then {
	configure_entry .menu84.config.f.x7 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu84.config.f.x7 normal {m}} else {configure_entry .menu84.config.f.x7 disabled {m}}; configure_entry .menu84.config.f.x7 normal {n l}} else {configure_entry .menu84.config.f.x7 disabled {y n m l}}
	global CONFIG_CRYPTO_DES
	if {($CONFIG_CRYPTO == 1)} then {
	configure_entry .menu84.config.f.x8 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu84.config.f.x8 normal {m}} else {configure_entry .menu84.config.f.x8 disabled {m}}; configure_entry .menu84.config.f.x8 normal {n l}} else {configure_entry .menu84.config.f.x8 disabled {y n m l}}
	global CONFIG_CRYPTO_BLOWFISH
	if {($CONFIG_CRYPTO == 1)} then {
	configure_entry .menu84.config.f.x9 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu84.config.f.x9 normal {m}} else {configure_entry .menu84.config.f.x9 disabled {m}}; configure_entry .menu84.config.f.x9 normal {n l}} else {configure_entry .menu84.config.f.x9 disabled {y n m l}}
	global CONFIG_CRYPTO_TWOFISH
	if {($CONFIG_CRYPTO == 1)} then {
	configure_entry .menu84.config.f.x10 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu84.config.f.x10 normal {m}} else {configure_entry .menu84.config.f.x10 disabled {m}}; configure_entry .menu84.config.f.x10 normal {n l}} else {configure_entry .menu84.config.f.x10 disabled {y n m l}}
	global CONFIG_CRYPTO_SERPENT
	if {($CONFIG_CRYPTO == 1)} then {
	configure_entry .menu84.config.f.x11 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu84.config.f.x11 normal {m}} else {configure_entry .menu84.config.f.x11 disabled {m}}; configure_entry .menu84.config.f.x11 normal {n l}} else {configure_entry .menu84.config.f.x11 disabled {y n m l}}
	global CONFIG_CRYPTO_AES
	if {($CONFIG_CRYPTO == 1)} then {
	configure_entry .menu84.config.f.x12 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu84.config.f.x12 normal {m}} else {configure_entry .menu84.config.f.x12 disabled {m}}; configure_entry .menu84.config.f.x12 normal {n l}} else {configure_entry .menu84.config.f.x12 disabled {y n m l}}
	global CONFIG_CRYPTO_CAST5
	if {($CONFIG_CRYPTO == 1)} then {
	configure_entry .menu84.config.f.x13 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu84.config.f.x13 normal {m}} else {configure_entry .menu84.config.f.x13 disabled {m}}; configure_entry .menu84.config.f.x13 normal {n l}} else {configure_entry .menu84.config.f.x13 disabled {y n m l}}
	global CONFIG_CRYPTO_DEFLATE
	if {($CONFIG_CRYPTO == 1)} then {
	configure_entry .menu84.config.f.x14 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu84.config.f.x14 normal {m}} else {configure_entry .menu84.config.f.x14 disabled {m}}; configure_entry .menu84.config.f.x14 normal {n l}} else {configure_entry .menu84.config.f.x14 disabled {y n m l}}
	global CONFIG_CRYPTO_TEST
	if {($CONFIG_CRYPTO == 1)} then {
	configure_entry .menu84.config.f.x15 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu84.config.f.x15 normal {m}} else {configure_entry .menu84.config.f.x15 disabled {m}}; configure_entry .menu84.config.f.x15 normal {n l}} else {configure_entry .menu84.config.f.x15 disabled {y n m l}}
}


proc update_define_menu84 {} {
	update_define_mainmenu
	global CONFIG_MODULES
	global CONFIG_CRYPTO_NULL
	global CONFIG_CRYPTO_MD4
	global CONFIG_CRYPTO_MD5
	global CONFIG_CRYPTO_SHA1
	global CONFIG_CRYPTO_SHA256
	global CONFIG_CRYPTO_SHA512
	global CONFIG_CRYPTO_DES
	global CONFIG_CRYPTO_BLOWFISH
	global CONFIG_CRYPTO_TWOFISH
	global CONFIG_CRYPTO_SERPENT
	global CONFIG_CRYPTO_AES
	global CONFIG_CRYPTO_CAST5
	global CONFIG_CRYPTO_DEFLATE
	global CONFIG_CRYPTO_TEST
	global CONFIG_CRYPTO_HMAC
set CONFIG_CRYPTO_HMAC [expr $CONFIG_CRYPTO_HMAC|16]
set CONFIG_CRYPTO_NULL [expr $CONFIG_CRYPTO_NULL|16]
set CONFIG_CRYPTO_MD4 [expr $CONFIG_CRYPTO_MD4|16]
set CONFIG_CRYPTO_MD5 [expr $CONFIG_CRYPTO_MD5|16]
set CONFIG_CRYPTO_SHA1 [expr $CONFIG_CRYPTO_SHA1|16]
set CONFIG_CRYPTO_SHA256 [expr $CONFIG_CRYPTO_SHA256|16]
set CONFIG_CRYPTO_SHA512 [expr $CONFIG_CRYPTO_SHA512|16]
set CONFIG_CRYPTO_DES [expr $CONFIG_CRYPTO_DES|16]
set CONFIG_CRYPTO_BLOWFISH [expr $CONFIG_CRYPTO_BLOWFISH|16]
set CONFIG_CRYPTO_TWOFISH [expr $CONFIG_CRYPTO_TWOFISH|16]
set CONFIG_CRYPTO_SERPENT [expr $CONFIG_CRYPTO_SERPENT|16]
set CONFIG_CRYPTO_AES [expr $CONFIG_CRYPTO_AES|16]
set CONFIG_CRYPTO_CAST5 [expr $CONFIG_CRYPTO_CAST5|16]
set CONFIG_CRYPTO_DEFLATE [expr $CONFIG_CRYPTO_DEFLATE|16]
set CONFIG_CRYPTO_TEST [expr $CONFIG_CRYPTO_TEST|16]
	global CONFIG_CRYPTO
	if {($CONFIG_CRYPTO == 1)} then {
	set CONFIG_CRYPTO_HMAC [expr $CONFIG_CRYPTO_HMAC&15]}
	if {($CONFIG_CRYPTO == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_CRYPTO_NULL == 2)} then {set CONFIG_CRYPTO_NULL 1}; set CONFIG_CRYPTO_NULL [expr $CONFIG_CRYPTO_NULL&15]}
	if {($CONFIG_CRYPTO == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_CRYPTO_MD4 == 2)} then {set CONFIG_CRYPTO_MD4 1}; set CONFIG_CRYPTO_MD4 [expr $CONFIG_CRYPTO_MD4&15]}
	if {($CONFIG_CRYPTO == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_CRYPTO_MD5 == 2)} then {set CONFIG_CRYPTO_MD5 1}; set CONFIG_CRYPTO_MD5 [expr $CONFIG_CRYPTO_MD5&15]}
	if {($CONFIG_CRYPTO == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_CRYPTO_SHA1 == 2)} then {set CONFIG_CRYPTO_SHA1 1}; set CONFIG_CRYPTO_SHA1 [expr $CONFIG_CRYPTO_SHA1&15]}
	if {($CONFIG_CRYPTO == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_CRYPTO_SHA256 == 2)} then {set CONFIG_CRYPTO_SHA256 1}; set CONFIG_CRYPTO_SHA256 [expr $CONFIG_CRYPTO_SHA256&15]}
	if {($CONFIG_CRYPTO == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_CRYPTO_SHA512 == 2)} then {set CONFIG_CRYPTO_SHA512 1}; set CONFIG_CRYPTO_SHA512 [expr $CONFIG_CRYPTO_SHA512&15]}
	if {($CONFIG_CRYPTO == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_CRYPTO_DES == 2)} then {set CONFIG_CRYPTO_DES 1}; set CONFIG_CRYPTO_DES [expr $CONFIG_CRYPTO_DES&15]}
	if {($CONFIG_CRYPTO == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_CRYPTO_BLOWFISH == 2)} then {set CONFIG_CRYPTO_BLOWFISH 1}; set CONFIG_CRYPTO_BLOWFISH [expr $CONFIG_CRYPTO_BLOWFISH&15]}
	if {($CONFIG_CRYPTO == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_CRYPTO_TWOFISH == 2)} then {set CONFIG_CRYPTO_TWOFISH 1}; set CONFIG_CRYPTO_TWOFISH [expr $CONFIG_CRYPTO_TWOFISH&15]}
	if {($CONFIG_CRYPTO == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_CRYPTO_SERPENT == 2)} then {set CONFIG_CRYPTO_SERPENT 1}; set CONFIG_CRYPTO_SERPENT [expr $CONFIG_CRYPTO_SERPENT&15]}
	if {($CONFIG_CRYPTO == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_CRYPTO_AES == 2)} then {set CONFIG_CRYPTO_AES 1}; set CONFIG_CRYPTO_AES [expr $CONFIG_CRYPTO_AES&15]}
	if {($CONFIG_CRYPTO == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_CRYPTO_CAST5 == 2)} then {set CONFIG_CRYPTO_CAST5 1}; set CONFIG_CRYPTO_CAST5 [expr $CONFIG_CRYPTO_CAST5&15]}
	if {($CONFIG_CRYPTO == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_CRYPTO_DEFLATE == 2)} then {set CONFIG_CRYPTO_DEFLATE 1}; set CONFIG_CRYPTO_DEFLATE [expr $CONFIG_CRYPTO_DEFLATE&15]}
	if {($CONFIG_CRYPTO == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_CRYPTO_TEST == 2)} then {set CONFIG_CRYPTO_TEST 1}; set CONFIG_CRYPTO_TEST [expr $CONFIG_CRYPTO_TEST&15]}
}


menu_option menu85 85 "Library routines"
proc menu85 {w title} {
	set oldFocus [focus]
	catch {destroy $w; unregister_active 85}
	toplevel $w -class Dialog
	wm withdraw $w
	global active_menus
	set active_menus [lsort -integer [linsert $active_menus end 85]]
	message $w.m -width 400 -aspect 300 -text \
		"Library routines"  -relief raised
	pack $w.m -pady 10 -side top -padx 10
	wm title $w "Library routines" 

	bind $w <Escape> "catch {focus $oldFocus}; destroy $w; unregister_active 85; break"
	set nextscript "catch {focus $oldFocus}; menu86 .menu86 \"$title\""
	frame $w.f
	button $w.f.back -text "Main Menu" \
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 85"
	button $w.f.next -text "Next" -underline 0\
		-width 15 -command $nextscript
	$w.f.next configure -state disabled
	bind all <Alt-n> "puts \"no more menus\" "
	button $w.f.prev -text "Prev" -underline 0\
		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 85; menu84 .menu84 \"$title\""
	bind $w <Alt-p> "catch {focus $oldFocus}; destroy $w; unregister_active 85; menu84 .menu84 \"$title\";break"
	pack $w.f.back $w.f.next $w.f.prev -side left -expand on
	pack $w.f -pady 10 -side bottom -anchor w -fill x
	frame $w.topline -relief ridge -borderwidth 2 -height 2
	pack $w.topline -side top -fill x

	frame $w.botline -relief ridge -borderwidth 2 -height 2
	pack $w.botline -side bottom -fill x

	frame $w.config
	pack $w.config -fill y -expand on

	scrollbar $w.config.vscroll -command "$w.config.canvas yview"
	pack $w.config.vscroll -side right -fill y

	canvas $w.config.canvas -height 1\
		-relief flat -borderwidth 0 -yscrollcommand "$w.config.vscroll set" \
		-width [expr [winfo screenwidth .] * 1 / 2] 
	frame $w.config.f
	bind $w <Key-Down> "$w.config.canvas yview scroll  1 unit;break;"
	bind $w <Key-Up> "$w.config.canvas yview scroll  -1 unit;break;"
	bind $w <Key-Next> "$w.config.canvas yview scroll  1 page;break;"
	bind $w <Key-Prior> "$w.config.canvas yview scroll  -1 page;break;"
	bind $w <Key-Home> "$w.config.canvas yview moveto 0;break;"
	bind $w <Key-End> "$w.config.canvas yview moveto 1 ;break;"
	pack $w.config.canvas -side right -fill y


	tristate $w.config.f 85 0 "CRC32 functions" CONFIG_CRC32
	tristate $w.config.f 85 1 "zlib decompression support" CONFIG_ZLIB_INFLATE
	tristate $w.config.f 85 2 "zlib compression support" CONFIG_ZLIB_DEFLATE
	tristate $w.config.f 85 3 "Hotplug firmware loading support (EXPERIMENTAL)" CONFIG_FW_LOADER



	focus $w
	update_active
	global winx; global winy
	set winx [expr [winfo x .]+30]; set winy [expr [winfo y .]+30]
	if {[winfo exists $w]} then {wm geometry $w +$winx+$winy}
	update idletasks
	if {[winfo exists $w]} then  {$w.config.canvas create window 0 0 -anchor nw -window $w.config.f

	$w.config.canvas configure \
		-width [expr [winfo reqwidth $w.config.f] + 1]\
		-scrollregion "-1 -1 [expr [winfo reqwidth $w.config.f] + 1] \
			 [expr [winfo reqheight $w.config.f] + 1]"

	set winy [expr [winfo reqh $w] - [winfo reqh $w.config.canvas]]
	set scry [expr [winfo screenh $w] / 2]
	set maxy [expr [winfo screenh $w] * 3 / 4]
	set canvtotal [expr [winfo reqh $w.config.f] + 2]
	if [expr $winy + $canvtotal < $maxy] {
		$w.config.canvas configure -height $canvtotal
	} else {
		$w.config.canvas configure -height [expr $scry - $winy]
		}
	}
	update idletasks
	if {[winfo exists $w]} then {
	wm maxsize $w [winfo width $w] [winfo screenheight $w]
	wm minsize $w [winfo width $w] 100

	wm deiconify $w
}
}

proc update_menu85 {} {
	global CONFIG_CRC32
	global CONFIG_MODULES

	if {($CONFIG_MODULES == 1)} then {configure_entry .menu85.config.f.x0 normal {m}} else {configure_entry .menu85.config.f.x0 disabled {m}}
	global CONFIG_CRAMFS
	global CONFIG_PPP_DEFLATE
	global CONFIG_CRYPTO_DEFLATE
	global CONFIG_JFFS2_FS
	global CONFIG_BINFMT_ZFLAT
	global CONFIG_ZISOFS_FS
	global CONFIG_ZLIB_INFLATE
	if {($CONFIG_CRAMFS != 1 && $CONFIG_PPP_DEFLATE != 1 && $CONFIG_CRYPTO_DEFLATE != 1 && $CONFIG_JFFS2_FS != 1 && $CONFIG_BINFMT_ZFLAT != 1 && $CONFIG_ZISOFS_FS != 1) && ($CONFIG_CRAMFS != 2 && $CONFIG_PPP_DEFLATE != 2 && $CONFIG_CRYPTO_DEFLATE != 2 && $CONFIG_JFFS2_FS != 2 && $CONFIG_ZISOFS_FS != 2)} then {
	configure_entry .menu85.config.f.x1 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu85.config.f.x1 normal {m}} else {configure_entry .menu85.config.f.x1 disabled {m}}; configure_entry .menu85.config.f.x1 normal {n l}} else {configure_entry .menu85.config.f.x1 disabled {y n m l}}
	global CONFIG_ZLIB_DEFLATE
	if {($CONFIG_PPP_DEFLATE != 1 && $CONFIG_CRYPTO_DEFLATE != 1 && $CONFIG_JFFS2_FS != 1) && ($CONFIG_PPP_DEFLATE != 2 && $CONFIG_CRYPTO_DEFLATE != 2 && $CONFIG_JFFS2_FS != 2)} then {
	configure_entry .menu85.config.f.x2 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu85.config.f.x2 normal {m}} else {configure_entry .menu85.config.f.x2 disabled {m}}; configure_entry .menu85.config.f.x2 normal {n l}} else {configure_entry .menu85.config.f.x2 disabled {y n m l}}
	global CONFIG_EXPERIMENTAL
	global CONFIG_HOTPLUG
	global CONFIG_FW_LOADER
	if {($CONFIG_EXPERIMENTAL == 1 && $CONFIG_HOTPLUG == 1)} then {
	configure_entry .menu85.config.f.x3 normal {y}; if {($CONFIG_MODULES == 1)} then {configure_entry .menu85.config.f.x3 normal {m}} else {configure_entry .menu85.config.f.x3 disabled {m}}; configure_entry .menu85.config.f.x3 normal {n l}} else {configure_entry .menu85.config.f.x3 disabled {y n m l}}
}


proc update_define_menu85 {} {
	update_define_mainmenu
	global CONFIG_MODULES
	global CONFIG_CRC32
	global CONFIG_ZLIB_INFLATE
	global CONFIG_ZLIB_DEFLATE
	global CONFIG_FW_LOADER
set CONFIG_ZLIB_INFLATE [expr $CONFIG_ZLIB_INFLATE|16]
set CONFIG_ZLIB_DEFLATE [expr $CONFIG_ZLIB_DEFLATE|16]
set CONFIG_FW_LOADER [expr $CONFIG_FW_LOADER|16]

	if {($CONFIG_MODULES == 0)} then {if {($CONFIG_CRC32 == 2)} then {set CONFIG_CRC32 1}}
	global CONFIG_CRAMFS
	global CONFIG_PPP_DEFLATE
	global CONFIG_CRYPTO_DEFLATE
	global CONFIG_JFFS2_FS
	global CONFIG_BINFMT_ZFLAT
	global CONFIG_ZISOFS_FS
	if {($CONFIG_CRAMFS == 1 || $CONFIG_PPP_DEFLATE == 1 || $CONFIG_CRYPTO_DEFLATE == 1 || $CONFIG_JFFS2_FS == 1 || $CONFIG_BINFMT_ZFLAT == 1 || $CONFIG_ZISOFS_FS == 1)} then {	global CONSTANT_Y
set CONFIG_ZLIB_INFLATE $CONSTANT_Y }
	if {($CONFIG_CRAMFS != 1 && $CONFIG_PPP_DEFLATE != 1 && $CONFIG_CRYPTO_DEFLATE != 1 && $CONFIG_JFFS2_FS != 1 && $CONFIG_BINFMT_ZFLAT != 1 && $CONFIG_ZISOFS_FS != 1) && ($CONFIG_CRAMFS == 2 || $CONFIG_PPP_DEFLATE == 2 || $CONFIG_CRYPTO_DEFLATE == 2 || $CONFIG_JFFS2_FS == 2 || $CONFIG_ZISOFS_FS == 2)} then {	global CONSTANT_M
set CONFIG_ZLIB_INFLATE $CONSTANT_M }
	if {($CONFIG_CRAMFS != 1 && $CONFIG_PPP_DEFLATE != 1 && $CONFIG_CRYPTO_DEFLATE != 1 && $CONFIG_JFFS2_FS != 1 && $CONFIG_BINFMT_ZFLAT != 1 && $CONFIG_ZISOFS_FS != 1) && ($CONFIG_CRAMFS != 2 && $CONFIG_PPP_DEFLATE != 2 && $CONFIG_CRYPTO_DEFLATE != 2 && $CONFIG_JFFS2_FS != 2 && $CONFIG_ZISOFS_FS != 2)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_ZLIB_INFLATE == 2)} then {set CONFIG_ZLIB_INFLATE 1}; set CONFIG_ZLIB_INFLATE [expr $CONFIG_ZLIB_INFLATE&15]}
	if {($CONFIG_PPP_DEFLATE == 1 || $CONFIG_CRYPTO_DEFLATE == 1 || $CONFIG_JFFS2_FS == 1)} then {	global CONSTANT_Y
set CONFIG_ZLIB_DEFLATE $CONSTANT_Y }
	if {($CONFIG_PPP_DEFLATE != 1 && $CONFIG_CRYPTO_DEFLATE != 1 && $CONFIG_JFFS2_FS != 1) && ($CONFIG_PPP_DEFLATE == 2 || $CONFIG_CRYPTO_DEFLATE == 2 || $CONFIG_JFFS2_FS == 2)} then {	global CONSTANT_M
set CONFIG_ZLIB_DEFLATE $CONSTANT_M }
	if {($CONFIG_PPP_DEFLATE != 1 && $CONFIG_CRYPTO_DEFLATE != 1 && $CONFIG_JFFS2_FS != 1) && ($CONFIG_PPP_DEFLATE != 2 && $CONFIG_CRYPTO_DEFLATE != 2 && $CONFIG_JFFS2_FS != 2)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_ZLIB_DEFLATE == 2)} then {set CONFIG_ZLIB_DEFLATE 1}; set CONFIG_ZLIB_DEFLATE [expr $CONFIG_ZLIB_DEFLATE&15]}
	global CONFIG_EXPERIMENTAL
	global CONFIG_HOTPLUG
	if {($CONFIG_EXPERIMENTAL == 1 && $CONFIG_HOTPLUG == 1)} then {if {($CONFIG_MODULES == 0) && ($CONFIG_FW_LOADER == 2)} then {set CONFIG_FW_LOADER 1}; set CONFIG_FW_LOADER [expr $CONFIG_FW_LOADER&15]}
}


proc update_mainmenu {}  {
	global CONFIG_ALIGNMENT_TRAP
	if {($CONFIG_ALIGNMENT_TRAP == 1)} then {.f0.x17 configure -state normal } else { .f0.x17 configure -state disabled }
	global CONFIG_ARCH_ACORN
	if {($CONFIG_ARCH_ACORN == 1)} then {.f0.x25 configure -state normal } else { .f0.x25 configure -state disabled }
	global CONFIG_NET
	if {($CONFIG_NET == 1)} then {.f0.x26 configure -state normal } else { .f0.x26 configure -state disabled }
	if {($CONFIG_NET == 1)} then {.f0.x34 configure -state normal } else { .f0.x34 configure -state disabled }
	if {($CONFIG_NET == 1)} then {.f0.x42 configure -state normal } else { .f0.x42 configure -state disabled }
	if {($CONFIG_NET == 1) && ($CONFIG_NET != 0)} then {.f0.x44 configure -state normal } else { .f0.x44 configure -state disabled }
	global CONFIG_PCI
	global CONFIG_EXPERIMENTAL
	if {($CONFIG_PCI == 1 && $CONFIG_EXPERIMENTAL == 1)} then {.f0.x51 configure -state normal } else { .f0.x51 configure -state disabled }
	global CONFIG_VT
	if {($CONFIG_VT == 1)} then {.f0.x74 configure -state normal } else { .f0.x74 configure -state disabled }
	global CONFIG_ARCH_CLPS7500
	global CONFIG_ARCH_RISCSTATION
	global CONFIG_ARCH_TBOX
	global CONFIG_ARCH_SHARK
	global CONFIG_ARCH_SA1100
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1)} then {.f0.x76 configure -state normal } else { .f0.x76 configure -state disabled }
	if {($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_NET != 0)} then {.f0.x81 configure -state normal } else { .f0.x81 configure -state disabled }
}


set CONFIG_EXPERIMENTAL 0
set CONFIG_ADVANCED_OPTIONS 0
set CONFIG_OBSOLETE 0
set CONFIG_MODULES 0
set CONFIG_MODVERSIONS 0
set CONFIG_KMOD 0
set tmpvar_0 "(not set)"
set CONFIG_ARCH_ADIFCC 0
set CONFIG_ARCH_ANAKIN 0
set CONFIG_ARCH_ARCA5K 0
set CONFIG_ARCH_CLPS7500 0
set CONFIG_ARCH_CLPS711X 0
set CONFIG_ARCH_CO285 0
set CONFIG_ARCH_EBSA110 0
set CONFIG_ARCH_CAMELOT 0
set CONFIG_ARCH_FOOTBRIDGE 0
set CONFIG_ARCH_INTEGRATOR 0
set CONFIG_ARCH_KS8695 0
set CONFIG_ARCH_IOP3XX 0
set CONFIG_ARCH_IXP1200 0
set CONFIG_ARCH_IXP2000 0
set CONFIG_ARCH_IXP425 0
set CONFIG_ARCH_OMAHA 0
set CONFIG_ARCH_L7200 0
set CONFIG_ARCH_MX1ADS 0
set CONFIG_ARCH_RPC 0
set CONFIG_ARCH_RISCSTATION 0
set CONFIG_ARCH_SA1100 0
set CONFIG_ARCH_SHARK 0
set CONFIG_ARCH_AT91RM9200 0
set CONFIG_ARCH_ARC 0
set CONFIG_ARCH_A5K 0
set CONFIG_ARCH_CATS 0
set CONFIG_ARCH_PERSONAL_SERVER 0
set CONFIG_ARCH_EBSA285_ADDIN 0
set CONFIG_ARCH_EBSA285_HOST 0
set CONFIG_ARCH_NETWINDER 0
set CONFIG_SA1100_ACCELENT 0
set CONFIG_SA1100_ASSABET 0
set CONFIG_ASSABET_NEPONSET 0
set CONFIG_SA1100_ADSAGC 0
set CONFIG_SA1100_ADSBITSY 0
set CONFIG_SA1100_ADSBITSYPLUS 0
set CONFIG_SA1100_BRUTUS 0
set CONFIG_SA1100_CEP 0
set CONFIG_SA1100_CERF 0
set tmpvar_1 "(not set)"
set CONFIG_SA1100_CERF_8MB 0
set CONFIG_SA1100_CERF_16MB 0
set CONFIG_SA1100_CERF_32MB 0
set CONFIG_SA1100_CERF_64MB 0
set tmpvar_2 "(not set)"
set CONFIG_SA1100_CERF_FLASH_8MB 0
set CONFIG_SA1100_CERF_FLASH_16MB 0
set CONFIG_SA1100_CERF_FLASH_32MB 0
set CONFIG_SA1100_CERF_CPLD 0
set CONFIG_SA1100_H3100 0
set CONFIG_SA1100_H3600 0
set CONFIG_SA1100_H3800 0
set CONFIG_H3600_SLEEVE 0
set CONFIG_SA1100_EXTENEX1 0
set CONFIG_SA1100_EXTENEX1_16MB 0
set CONFIG_SA1100_FLEXANET 0
set CONFIG_SA1100_FREEBIRD 0
set CONFIG_SA1100_FRODO 0
set CONFIG_SA1100_GRAPHICSCLIENT 0
set CONFIG_SA1100_GRAPHICSMASTER 0
set CONFIG_SA1100_HACKKIT 0
set CONFIG_SA1100_BADGE4 0
set CONFIG_SA1100_JORNADA720 0
set CONFIG_SA1100_HUW_WEBPANEL 0
set CONFIG_SA1100_ITSY 0
set CONFIG_SA1100_LART 0
set CONFIG_SA1100_NANOENGINE 0
set CONFIG_SA1100_OMNIMETER 0
set CONFIG_SA1100_PANGOLIN 0
set CONFIG_SA1100_PLEB 0
set CONFIG_SA1100_PT_SYSTEM3 0
set CONFIG_SA1100_SHANNON 0
set CONFIG_SA1100_SHERMAN 0
set CONFIG_SA1100_SIMPAD 0
set CONFIG_SA1100_SIMPUTER 0
set CONFIG_SA1100_PFS168 0
set CONFIG_SA1100_VICTOR 0
set CONFIG_SA1100_XP860 0
set CONFIG_SA1100_YOPY 0
set CONFIG_SA1100_USB 0
set CONFIG_SA1100_USB_NETLINK 0
set CONFIG_SA1100_USB_CHAR 0
set CONFIG_SA1100_SSP 0
set tmpvar_3 "(not set)"
set CONFIG_ARCH_IQ80310 0
set CONFIG_ARCH_IQ80321 0
set CONFIG_IOP3XX_AAU 0
set CONFIG_IOP3XX_DMA 0
set CONFIG_IOP3XX_MU 0
set CONFIG_IOP3XX_PMON 0
set tmpvar_4 "(not set)"
set CONFIG_ARCH_IXDP425 0
set CONFIG_ARCH_IXCDP1100 0
set CONFIG_ARCH_PRPMC1100 0
set CONFIG_ARCH_ADI_COYOTE 0
set CONFIG_ARCH_SE4000 0
set CONFIG_IXP1200_SDRAM_BASE 0xc0000000
set CONFIG_IXP1200_SDRAM_SIZE 128
set tmpvar_5 "(not set)"
set CONFIG_ARCH_IXDP2400 0
set CONFIG_ARCH_IXDP2800 0
set CONFIG_IXP2000_PCI_IO_ERRATA 0
set tmpvar_6 "(not set)"
set CONFIG_MACH_KS8695 0
set CONFIG_MACH_LITE300 0
set CONFIG_ARCH_AT91RM9200DK 0
set CONFIG_ARCH_AUTCPU12 0
set CONFIG_ARCH_CDB89712 0
set CONFIG_ARCH_CLEP7312 0
set CONFIG_ARCH_EDB7211 0
set CONFIG_ARCH_FORTUNET 0
set CONFIG_ARCH_GUIDEA07 0
set CONFIG_ARCH_P720T 0
set CONFIG_EP72XX_ROM_BOOT 0
set tmpvar_7 "(not set)"
set CONFIG_ARCH_ADI_EVB 0
set CONFIG_ARCH_BRH 0
set tmpvar_8 "(not set)"
set CONFIG_EPXA10DB 0
set CONFIG_EPXA1DB 0
set tmpvar_9 "(not set)"
set CONFIG_EPXA10DB_R2 0
set CONFIG_EPXA10DB_R3 0
set CONFIG_PLD_HOTSWAP 0
set CONFIG_PAGESIZE_16 0
set CONFIG_CPU_ARM610 0
set CONFIG_CPU_ARM710 0
set CONFIG_CPU_ARM720T 0
set CONFIG_CPU_ARM920T 0
set CONFIG_CPU_ARM926T 0
set CONFIG_CPU_ARM1020 0
set CONFIG_CPU_ARM1026 0
set CONFIG_CPU_SA110 0
set CONFIG_XSCALE_PMU_TIMER 0
set CONFIG_XSCALE_CACHE_ERRATA 0
set CONFIG_XSCALE_BDI2000 0
set CONFIG_ARM_THUMB 0
set CONFIG_CPU_ICACHE_DISABLE 0
set CONFIG_CPU_DCACHE_DISABLE 0
set CONFIG_CPU_DCACHE_WRITETHROUGH 0
set CONFIG_CPU_CACHE_ROUND_ROBIN 0
set CONFIG_CPU_BPREDICT_DISABLE 0
set CONFIG_CPU_BIG_ENDIAN 0
set CONFIG_PCI_INTEGRATOR 0
set CONFIG_KERNEL_START_BOOL 0
set CONFIG_KERNEL_START 0xc0000000
set CONFIG_ZBOOT_ROM 0
set CONFIG_ZBOOT_ROM_TEXT 0
set CONFIG_ZBOOT_ROM_BSS 0
set CONFIG_CPU_FREQ 0
set CONFIG_PCI_NAMES 0
set CONFIG_HOTPLUG 0
set CONFIG_PCMCIA 0
set CONFIG_CARDBUS 0
set CONFIG_TCIC 0
set CONFIG_I82092 0
set CONFIG_I82365 0
set CONFIG_PCMCIA_SA1100 0
set CONFIG_SA_PCMCIA_SLOT_1 0
set CONFIG_NET 0
set CONFIG_SYSVIPC 0
set CONFIG_BSD_PROCESS_ACCT 0
set CONFIG_SYSCTL 0
set CONFIG_FPE_NWFPE 0
set CONFIG_FPE_NWFPE_XP 0
set CONFIG_FPE_FASTFPE 0
set tmpvar_10 "(not set)"
set CONFIG_KCORE_ELF 0
set CONFIG_KCORE_AOUT 0
set CONFIG_BINFMT_AOUT 0
set CONFIG_BINFMT_ELF 0
set CONFIG_BINFMT_MISC 0
set CONFIG_PM 0
set CONFIG_ARTHUR 0
set CONFIG_CMDLINE ""
set CONFIG_LEDS 0
set CONFIG_LEDS_TIMER 0
set CONFIG_LEDS_CPU 0
set CONFIG_ALIGNMENT_TRAP 0
set CONFIG_PARPORT 0
set CONFIG_PARPORT_PC 0
set CONFIG_PARPORT_SERIAL 0
set CONFIG_PARPORT_PC_FIFO 0
set CONFIG_PARPORT_PC_SUPERIO 0
set CONFIG_PARPORT_PC_PCMCIA 0
set CONFIG_PARPORT_ARC 0
set CONFIG_PARPORT_SUNBPP 0
set CONFIG_PARPORT_OTHER 0
set CONFIG_PARPORT_1284 0
set CONFIG_PARPORT_HD64465 0
set CONFIG_MTD 0
set CONFIG_MTD_DEBUG 0
set CONFIG_MTD_DEBUG_VERBOSE 0
set CONFIG_MTD_PARTITIONS 0
set CONFIG_MTD_CONCAT 0
set CONFIG_MTD_REDBOOT_PARTS 0
set CONFIG_MTD_CMDLINE_PARTS 0
set CONFIG_MTD_AFS_PARTS 0
set CONFIG_MTD_CHAR 0
set CONFIG_MTD_BLOCK 0
set CONFIG_MTD_BLOCK_RO 0
set CONFIG_FTL 0
set CONFIG_NFTL 0
set CONFIG_INFTL 0
set CONFIG_NFTL_RW 0
set CONFIG_MTD_CFI 0
set CONFIG_MTD_JEDECPROBE 0
set CONFIG_MTD_CFI_ADV_OPTIONS 0
set tmpvar_11 "(not set)"
set CONFIG_MTD_CFI_NOSWAP 0
set CONFIG_MTD_CFI_BE_BYTE_SWAP 0
set CONFIG_MTD_CFI_LE_BYTE_SWAP 0
set CONFIG_MTD_CFI_GEOMETRY 0
set CONFIG_MTD_CFI_B1 0
set CONFIG_MTD_CFI_B2 0
set CONFIG_MTD_CFI_B4 0
set CONFIG_MTD_CFI_B8 0
set CONFIG_MTD_CFI_I1 0
set CONFIG_MTD_CFI_I2 0
set CONFIG_MTD_CFI_I4 0
set CONFIG_MTD_CFI_I8 0
set CONFIG_MTD_CFI_INTELEXT 0
set CONFIG_MTD_CFI_AMDSTD 0
set CONFIG_MTD_CFI_STAA 0
set CONFIG_MTD_RAM 0
set CONFIG_MTD_ROM 0
set CONFIG_MTD_ABSENT 0
set CONFIG_MTD_OBSOLETE_CHIPS 0
set CONFIG_MTD_AMDSTD 0
set CONFIG_MTD_SHARP 0
set CONFIG_MTD_JEDEC 0
set CONFIG_MTD_PSD4256G 0
set CONFIG_MTD_PHYSMAP 0
set CONFIG_MTD_PHYSMAP_START 0x50000000
set CONFIG_MTD_PHYSMAP_LEN 0x200000
set CONFIG_MTD_PHYSMAP_BUSWIDTH 2
set CONFIG_MTD_DRAGONIX 0
set CONFIG_MTD_NETtel 0
set CONFIG_MTD_SNAPGEODE 0
set CONFIG_MTD_NETteluC 0
set tmpvar_12 "(not set)"
set CONFIG_FLASHAUTO 0
set CONFIG_FLASH128KB 0
set CONFIG_FLASH1MB 0
set CONFIG_FLASH2MB 0
set CONFIG_FLASH4MB 0
set CONFIG_FLASH6MB 0
set CONFIG_FLASH8MB 0
set CONFIG_FLASH16MB 0
set CONFIG_MTD_MBVANILLA 0
set tmpvar_13 "(not set)"
set CONFIG_MTD_KeyTechnology 0
set CONFIG_MTD_NORA 0
set CONFIG_MTD_ARM_INTEGRATOR 0
set CONFIG_MTD_CDB89712 0
set CONFIG_MTD_SA1100 0
set CONFIG_MTD_DC21285 0
set CONFIG_MTD_IQ80310 0
set CONFIG_MTD_EPXA10DB 0
set CONFIG_MTD_FORTUNET 0
set CONFIG_MTD_AUTCPU12 0
set CONFIG_MTD_IXP425 0
set CONFIG_MTD_SE4000 0
set CONFIG_MTD_SNAPARM 0
set CONFIG_MTD_EDB7312 0
set CONFIG_MTD_IMPA7 0
set CONFIG_MTD_CEIVA 0
set CONFIG_MTD_M5272C3 0
set CONFIG_MTD_PCI 0
set CONFIG_MTD_PCMCIA 0
set CONFIG_MTD_PMC551 0
set CONFIG_MTD_PMC551_BUGFIX 0
set CONFIG_MTD_PMC551_DEBUG 0
set CONFIG_MTD_SLRAM 0
set CONFIG_MTD_LART 0
set CONFIG_MTD_MTDRAM 0
set CONFIG_MTDRAM_TOTAL_SIZE 4096
set CONFIG_MTDRAM_ERASE_SIZE 128
set CONFIG_MTDRAM_ABS_POS 0
set CONFIG_MTD_BLKMTD 0
set CONFIG_MTD_DOC1000 0
set CONFIG_MTD_DOC2000 0
set CONFIG_MTD_DOC2001 0
set CONFIG_MTD_DOC2001PLUS 0
set CONFIG_MTD_DOCPROBE_ADVANCED 0
set CONFIG_MTD_DOCPROBE_ADDRESS 0x0000
set CONFIG_MTD_DOCPROBE_HIGH 0
set CONFIG_MTD_DOCPROBE_55AA 0
set CONFIG_MTD_NAND 0
set CONFIG_MTD_NAND_VERIFY_WRITE 0
set CONFIG_MTD_NAND_SPIA 0
set CONFIG_MTD_NAND_AUTCPU12 0
set CONFIG_PNP 0
set CONFIG_ISAPNP 0
set CONFIG_BLK_DEV_FD 0
set CONFIG_BLK_DEV_PS2 0
set CONFIG_BLK_DEV_XD 0
set CONFIG_PARIDE 0
set CONFIG_PARIDE_PD 0
set CONFIG_PARIDE_PCD 0
set CONFIG_PARIDE_PF 0
set CONFIG_PARIDE_PT 0
set CONFIG_PARIDE_PG 0
set CONFIG_PARIDE_ATEN 0
set CONFIG_PARIDE_BPCK 0
set CONFIG_PARIDE_BPCK6 0
set CONFIG_PARIDE_COMM 0
set CONFIG_PARIDE_DSTR 0
set CONFIG_PARIDE_FIT2 0
set CONFIG_PARIDE_FIT3 0
set CONFIG_PARIDE_EPAT 0
set CONFIG_PARIDE_EPATC8 0
set CONFIG_PARIDE_EPIA 0
set CONFIG_PARIDE_FRIQ 0
set CONFIG_PARIDE_FRPW 0
set CONFIG_PARIDE_KBIC 0
set CONFIG_PARIDE_KTTI 0
set CONFIG_PARIDE_ON20 0
set CONFIG_PARIDE_ON26 0
set CONFIG_BLK_CPQ_DA 0
set CONFIG_BLK_CPQ_CISS_DA 0
set CONFIG_CISS_SCSI_TAPE 0
set CONFIG_CISS_MONITOR_THREAD 0
set CONFIG_BLK_DEV_DAC960 0
set CONFIG_BLK_DEV_UMEM 0
set CONFIG_BLK_DEV_LOOP 0
set CONFIG_BLK_DEV_NBD 0
set CONFIG_BLK_DEV_RAM 0
set CONFIG_BLK_DEV_RAM_SIZE 4096
set CONFIG_BLK_DEV_INITRD 0
set CONFIG_BLK_DEV_RAMDISK_DATA 0
set CONFIG_BLK_DEV_BLKMEM 0
set tmpvar_14 "(not set)"
set CONFIG_NOFLASH 0
set CONFIG_AMDFLASH 0
set CONFIG_INTELFLASH 0
set tmpvar_15 "(not set)"
set tmpvar_16 "(not set)"
set CONFIG_FLASHAUTOBIT 0
set CONFIG_FLASH8BIT 0
set CONFIG_FLASH16BIT 0
set CONFIG_FLASH32bit 0
set CONFIG_EXTRA_FLASH 0
set CONFIG_BLK_STATS 0
set CONFIG_MD 0
set CONFIG_BLK_DEV_MD 0
set CONFIG_MD_LINEAR 0
set CONFIG_MD_RAID0 0
set CONFIG_MD_RAID1 0
set CONFIG_MD_RAID5 0
set CONFIG_MD_MULTIPATH 0
set CONFIG_BLK_DEV_LVM 0
set CONFIG_BLK_DEV_FD1772 0
set CONFIG_BLK_DEV_MFM 0
set CONFIG_BLK_DEV_MFM_AUTODETECT 0
set CONFIG_PACKET 0
set CONFIG_PACKET_MMAP 0
set CONFIG_NETLINK_DEV 0
set CONFIG_NETFILTER 0
set CONFIG_NETFILTER_DEBUG 0
set CONFIG_FILTER 0
set CONFIG_UNIX 0
set CONFIG_INET 0
set CONFIG_IP_MULTICAST 0
set CONFIG_IP_ADVANCED_ROUTER 0
set CONFIG_IP_MULTIPLE_TABLES 0
set CONFIG_IP_ROUTE_FWMARK 0
set CONFIG_IP_ROUTE_NAT 0
set CONFIG_IP_ROUTE_MULTIPATH 0
set CONFIG_IP_ROUTE_MULTIPATH_SEQUENTIAL 0
set CONFIG_IP_ROUTE_TOS 0
set CONFIG_IP_ROUTE_VERBOSE 0
set CONFIG_IP_PNP 0
set CONFIG_IP_PNP_DHCP 0
set CONFIG_IP_PNP_BOOTP 0
set CONFIG_IP_PNP_RARP 0
set CONFIG_NET_ARP_LIMIT 0
set CONFIG_ARP_LIMIT 20
set CONFIG_NET_IPIP 0
set CONFIG_NET_IPGRE 0
set CONFIG_NET_IPGRE_BROADCAST 0
set CONFIG_IP_MROUTE 0
set CONFIG_IP_PIMSM_V1 0
set CONFIG_IP_PIMSM_V2 0
set CONFIG_ARPD 0
set CONFIG_INET_ECN 0
set CONFIG_SYN_COOKIES 0
set CONFIG_IP_NF_CONNTRACK 0
set CONFIG_IP_NF_FTP 0
set CONFIG_IP_NF_CONNTRACK_MARK 0
set CONFIG_IP_NF_H323 0
set CONFIG_IP_NF_AMANDA 0
set CONFIG_IP_NF_TFTP 0
set CONFIG_IP_NF_IRC 0
set CONFIG_IP_NF_CT_PROTO_GRE 0
set CONFIG_IP_NF_PPTP 0
set CONFIG_IP_NF_QUEUE 0
set CONFIG_IP_NF_IPTABLES 0
set CONFIG_IP_NF_MATCH_LIMIT 0
set CONFIG_IP_NF_MATCH_IPRANGE 0
set CONFIG_IP_NF_MATCH_MAC 0
set CONFIG_IP_NF_MATCH_PKTTYPE 0
set CONFIG_IP_NF_MATCH_MARK 0
set CONFIG_IP_NF_MATCH_MULTIPORT 0
set CONFIG_IP_NF_MATCH_TOS 0
set CONFIG_IP_NF_MATCH_TIME 0
set CONFIG_IP_NF_MATCH_RECENT 0
set CONFIG_IP_NF_MATCH_ECN 0
set CONFIG_IP_NF_MATCH_DSCP 0
set CONFIG_IP_NF_MATCH_AH_ESP 0
set CONFIG_IP_NF_MATCH_LENGTH 0
set CONFIG_IP_NF_MATCH_TTL 0
set CONFIG_IP_NF_MATCH_TCPMSS 0
set CONFIG_IP_NF_MATCH_HELPER 0
set CONFIG_IP_NF_MATCH_STATE 0
set CONFIG_IP_NF_MATCH_CONNMARK 0
set CONFIG_IP_NF_MATCH_CONNTRACK 0
set CONFIG_IP_NF_MATCH_UNCLEAN 0
set CONFIG_IP_NF_MATCH_STRING 0
set CONFIG_IP_NF_MATCH_OWNER 0
set CONFIG_IP_NF_FILTER 0
set CONFIG_IP_NF_TARGET_REJECT 0
set CONFIG_IP_NF_TARGET_MIRROR 0
set CONFIG_IP_NF_NAT 0
set CONFIG_IP_NF_TARGET_MASQUERADE 0
set CONFIG_IP_NF_TARGET_REDIRECT 0
set CONFIG_IP_NF_TARGET_NETMAP 0
set CONFIG_IP_NF_NAT_LOCAL 0
set CONFIG_IP_NF_NAT_SNMP_BASIC 0
set CONFIG_IP_NF_MANGLE 0
set CONFIG_IP_NF_TARGET_TOS 0
set CONFIG_IP_NF_TARGET_ECN 0
set CONFIG_IP_NF_TARGET_DSCP 0
set CONFIG_IP_NF_TARGET_MARK 0
set CONFIG_IP_NF_TARGET_LOG 0
set CONFIG_IP_NF_TARGET_CONNMARK 0
set CONFIG_IP_NF_TARGET_ULOG 0
set CONFIG_IP_NF_TARGET_TCPMSS 0
set CONFIG_IP_NF_ARPTABLES 0
set CONFIG_IP_NF_ARPFILTER 0
set CONFIG_IP_NF_ARP_MANGLE 0
set CONFIG_IP_NF_COMPAT_IPCHAINS 0
set CONFIG_IP_NF_COMPAT_IPFWADM 0
set CONFIG_IP_VS 0
set CONFIG_IP_VS_DEBUG 0
set CONFIG_IP_VS_TAB_BITS 12
set CONFIG_IP_VS_RR 0
set CONFIG_IP_VS_WRR 0
set CONFIG_IP_VS_LC 0
set CONFIG_IP_VS_WLC 0
set CONFIG_IP_VS_LBLC 0
set CONFIG_IP_VS_LBLCR 0
set CONFIG_IP_VS_DH 0
set CONFIG_IP_VS_SH 0
set CONFIG_IP_VS_SED 0
set CONFIG_IP_VS_NQ 0
set CONFIG_IP_VS_FTP 0
set CONFIG_IPV6 0
set CONFIG_IP6_NF_QUEUE 0
set CONFIG_IP6_NF_IPTABLES 0
set CONFIG_IP6_NF_MATCH_LIMIT 0
set CONFIG_IP6_NF_MATCH_MAC 0
set CONFIG_IP6_NF_MATCH_RT 0
set CONFIG_IP6_NF_MATCH_OPTS 0
set CONFIG_IP6_NF_MATCH_FRAG 0
set CONFIG_IP6_NF_MATCH_HL 0
set CONFIG_IP6_NF_MATCH_MULTIPORT 0
set CONFIG_IP6_NF_MATCH_OWNER 0
set CONFIG_IP6_NF_MATCH_MARK 0
set CONFIG_IP6_NF_MATCH_IPV6HEADER 0
set CONFIG_IP6_NF_MATCH_AHESP 0
set CONFIG_IP6_NF_MATCH_LENGTH 0
set CONFIG_IP6_NF_MATCH_EUI64 0
set CONFIG_IP6_NF_FILTER 0
set CONFIG_IP6_NF_TARGET_LOG 0
set CONFIG_IP6_NF_MANGLE 0
set CONFIG_IP6_NF_TARGET_MARK 0
set CONFIG_KHTTPD 0
set CONFIG_IP_SCTP 0
set CONFIG_SCTP_ADLER32 0
set CONFIG_SCTP_DBG_MSG 0
set CONFIG_SCTP_DBG_OBJCNT 0
set CONFIG_ATM 0
set CONFIG_ATM_CLIP 0
set CONFIG_ATM_CLIP_NO_ICMP 0
set CONFIG_ATM_LANE 0
set CONFIG_ATM_MPOA 0
set CONFIG_ATM_BR2684 0
set CONFIG_ATM_BR2684_IPFILTER 0
set CONFIG_VLAN_8021Q 0
set CONFIG_IPX 0
set CONFIG_IPX_INTERN 0
set CONFIG_ATALK 0
set CONFIG_DEV_APPLETALK 0
set CONFIG_LTPC 0
set CONFIG_COPS 0
set CONFIG_COPS_DAYNA 0
set CONFIG_COPS_TANGENT 0
set CONFIG_IPDDP 0
set CONFIG_IPDDP_ENCAP 0
set CONFIG_IPDDP_DECAP 0
set CONFIG_DECNET 0
set CONFIG_DECNET_SIOCGIFCONF 0
set CONFIG_DECNET_ROUTER 0
set CONFIG_DECNET_ROUTE_FWMARK 0
set CONFIG_BRIDGE 0
set CONFIG_BRIDGE_NF_EBTABLES 0
set CONFIG_BRIDGE_EBT_T_FILTER 0
set CONFIG_BRIDGE_EBT_T_NAT 0
set CONFIG_BRIDGE_EBT_BROUTE 0
set CONFIG_BRIDGE_EBT_LOG 0
set CONFIG_BRIDGE_EBT_IPF 0
set CONFIG_BRIDGE_EBT_ARPF 0
set CONFIG_BRIDGE_EBT_VLANF 0
set CONFIG_BRIDGE_EBT_MARKF 0
set CONFIG_BRIDGE_EBT_SNAT 0
set CONFIG_BRIDGE_EBT_DNAT 0
set CONFIG_BRIDGE_EBT_REDIRECT 0
set CONFIG_BRIDGE_EBT_MARK_T 0
set CONFIG_X25 0
set CONFIG_LAPB 0
set CONFIG_LLC 0
set CONFIG_NET_DIVERT 0
set CONFIG_ECONET 0
set CONFIG_ECONET_AUNUDP 0
set CONFIG_ECONET_NATIVE 0
set CONFIG_WAN_ROUTER 0
set CONFIG_NET_FASTROUTE 0
set CONFIG_NET_HW_FLOWCONTROL 0
set CONFIG_NET_SCHED 0
set CONFIG_NET_SCH_CBQ 0
set CONFIG_NET_SCH_HTB 0
set CONFIG_NET_SCH_CSZ 0
set CONFIG_NET_SCH_ATM 0
set CONFIG_NET_SCH_PRIO 0
set CONFIG_NET_SCH_RED 0
set CONFIG_NET_SCH_SFQ 0
set CONFIG_NET_SCH_TEQL 0
set CONFIG_NET_SCH_TBF 0
set CONFIG_NET_SCH_GRED 0
set CONFIG_NET_SCH_DSMARK 0
set CONFIG_NET_SCH_INGRESS 0
set CONFIG_NET_QOS 0
set CONFIG_NET_ESTIMATOR 0
set CONFIG_NET_CLS 0
set CONFIG_NET_CLS_TCINDEX 0
set CONFIG_NET_CLS_ROUTE4 0
set CONFIG_NET_CLS_FW 0
set CONFIG_NET_CLS_U32 0
set CONFIG_NET_CLS_RSVP 0
set CONFIG_NET_CLS_RSVP6 0
set CONFIG_NET_CLS_POLICE 0
set CONFIG_IPSEC 0
set CONFIG_IPSEC_IPIP 0
set CONFIG_IPSEC_AH 0
set CONFIG_IPSEC_AUTH_HMAC_MD5 0
set CONFIG_IPSEC_AUTH_HMAC_SHA1 0
set CONFIG_IPSEC_ESP 0
set CONFIG_IPSEC_ENC_DES 0
set CONFIG_IPSEC_ENC_3DES 0
set CONFIG_IPSEC_IPCOMP 0
set CONFIG_IPSEC_IPCOMP_LZS 0
set CONFIG_IPSEC_DEBUG 0
set CONFIG_IPSEC_NAT_TRAVERSAL 0
set CONFIG_NET_PKTGEN 0
set CONFIG_NETDEVICES 0
set CONFIG_ARCNET 0
set CONFIG_ARCNET_1201 0
set CONFIG_ARCNET_1051 0
set CONFIG_ARCNET_RAW 0
set CONFIG_ARCNET_COM90xx 0
set CONFIG_ARCNET_COM90xxIO 0
set CONFIG_ARCNET_RIM_I 0
set CONFIG_ARCNET_COM20020 0
set CONFIG_ARCNET_COM20020_ISA 0
set CONFIG_ARCNET_COM20020_PCI 0
set CONFIG_DUMMY 0
set CONFIG_BONDING 0
set CONFIG_EQUALIZER 0
set CONFIG_TUN 0
set CONFIG_ETHERTAP 0
set CONFIG_NET_SB1000 0
set CONFIG_NET_ETHERNET 0
set CONFIG_IXP425_ETH 0
set CONFIG_KS8695 0
set CONFIG_CSUM_UNNECESSARY 0
set CONFIG_ARM_AM79C961A 0
set CONFIG_ARM_CIRRUS 0
set CONFIG_ARM_ETHER1 0
set CONFIG_ARM_ETHER3 0
set CONFIG_ARM_ETHERH 0
set CONFIG_ETHER00 0
set CONFIG_SUNLANCE 0
set CONFIG_HAPPYMEAL 0
set CONFIG_SUNBMAC 0
set CONFIG_SUNQE 0
set CONFIG_SUNGEM 0
set CONFIG_NET_VENDOR_3COM 0
set CONFIG_EL1 0
set CONFIG_EL2 0
set CONFIG_ELPLUS 0
set CONFIG_EL16 0
set CONFIG_EL3 0
set CONFIG_3C515 0
set CONFIG_ELMC 0
set CONFIG_ELMC_II 0
set CONFIG_VORTEX 0
set CONFIG_TYPHOON 0
set CONFIG_LANCE 0
set CONFIG_NET_VENDOR_SMC 0
set CONFIG_WD80x3 0
set CONFIG_ULTRAMCA 0
set CONFIG_ULTRA 0
set CONFIG_ULTRA32 0
set CONFIG_SMC9194 0
set CONFIG_SMC91111 0
set CONFIG_NET_VENDOR_RACAL 0
set CONFIG_NI5010 0
set CONFIG_NI52 0
set CONFIG_NI65 0
set CONFIG_AT1700 0
set CONFIG_DEPCA 0
set CONFIG_HP100 0
set CONFIG_NET_ISA 0
set CONFIG_E2100 0
set CONFIG_EWRK3 0
set CONFIG_EEXPRESS 0
set CONFIG_EEXPRESS_PRO 0
set CONFIG_FMV18X 0
set CONFIG_HPLAN_PLUS 0
set CONFIG_HPLAN 0
set CONFIG_LP486E 0
set CONFIG_ETH16I 0
set CONFIG_NE2000 0
set CONFIG_SEEQ8005 0
set CONFIG_SK_G16 0
set CONFIG_SKMC 0
set CONFIG_NE2_MCA 0
set CONFIG_IBMLANA 0
set CONFIG_NET_PCI 0
set CONFIG_PCNET32 0
set CONFIG_AMD8111_ETH 0
set CONFIG_ADAPTEC_STARFIRE 0
set CONFIG_AC3200 0
set CONFIG_APRICOT 0
set CONFIG_B44 0
set CONFIG_CS89x0 0
set CONFIG_TULIP 0
set CONFIG_TULIP_MWI 0
set CONFIG_TULIP_MMIO 0
set CONFIG_DE4X5 0
set CONFIG_DGRS 0
set CONFIG_DM9102 0
set CONFIG_EEPRO100 0
set CONFIG_EEPRO100_PIO 0
set CONFIG_E100 0
set CONFIG_LNE390 0
set CONFIG_FEALNX 0
set CONFIG_NATSEMI 0
set CONFIG_NE2K_PCI 0
set CONFIG_NE3210 0
set CONFIG_ES3210 0
set CONFIG_8139CP 0
set CONFIG_8139CP_EXTERNAL_PHY 0
set CONFIG_8139CP_PHY_NUM 32
set CONFIG_8139TOO 0
set CONFIG_8139TOO_PIO 0
set CONFIG_8139TOO_TUNE_TWISTER 0
set CONFIG_8139TOO_8129 0
set CONFIG_8139_OLD_RX_RESET 0
set CONFIG_RTL8139 0
set CONFIG_SIS900 0
set CONFIG_EPIC100 0
set CONFIG_SUNDANCE 0
set CONFIG_SUNDANCE_MMIO 0
set CONFIG_TLAN 0
set CONFIG_VIA_RHINE 0
set CONFIG_VIA_RHINE_FET 0
set CONFIG_VIA_RHINE_MMIO 0
set CONFIG_WINBOND_840 0
set CONFIG_ZNET 0
set CONFIG_LAN_SAA9730 0
set CONFIG_NET_POCKET 0
set CONFIG_ATP 0
set CONFIG_DE600 0
set CONFIG_DE620 0
set CONFIG_FEC 0
set CONFIG_FEC_IOCTL 0
set CONFIG_UC5272_PHY_INT 0
set CONFIG_FEC_KS8995M 0
set tmpvar_17 "(not set)"
set CONFIG_FEC_KS8995M_P5 0
set CONFIG_FEC_KS8995M_SW 0
set CONFIG_UCCS8900 0
set CONFIG_UCCS89x0_HW_SWAP 0
set CS8900A_HWADDR "00:00:00:00:00:00"
set CONFIG_ACENIC 0
set CONFIG_ACENIC_OMIT_TIGON_I 0
set CONFIG_DL2K 0
set CONFIG_E1000 0
set CONFIG_E1000_NAPI 0
set CONFIG_MYRI_SBUS 0
set CONFIG_NS83820 0
set CONFIG_HAMACHI 0
set CONFIG_YELLOWFIN 0
set CONFIG_R8169 0
set CONFIG_SK98LIN 0
set CONFIG_TIGON3 0
set CONFIG_FDDI 0
set CONFIG_DEFXX 0
set CONFIG_SKFP 0
set CONFIG_HIPPI 0
set CONFIG_ROADRUNNER 0
set CONFIG_ROADRUNNER_LARGE_RINGS 0
set CONFIG_PLIP 0
set CONFIG_PPP 0
set CONFIG_PPP_MULTILINK 0
set CONFIG_PPP_FILTER 0
set CONFIG_PPP_ASYNC 0
set CONFIG_PPP_SYNC_TTY 0
set CONFIG_PPP_DEFLATE 0
set CONFIG_PPP_BSDCOMP 0
set CONFIG_PPPOE 0
set CONFIG_PPPOATM 0
set CONFIG_SLIP 0
set CONFIG_SLIP_COMPRESSED 0
set CONFIG_SLIP_SMART 0
set CONFIG_SLIP_MODE_SLIP6 0
set CONFIG_NET_RADIO 0
set CONFIG_STRIP 0
set CONFIG_WAVELAN 0
set CONFIG_ARLAN 0
set CONFIG_AIRONET4500 0
set CONFIG_AIRONET4500_NONCS 0
set CONFIG_AIRONET4500_PNP 0
set CONFIG_AIRONET4500_PCI 0
set CONFIG_AIRONET4500_ISA 0
set CONFIG_AIRONET4500_I365 0
set CONFIG_AIRONET4500_PROC 0
set CONFIG_AIRO 0
set CONFIG_HERMES 0
set CONFIG_PLX_HERMES 0
set CONFIG_TMD_HERMES 0
set CONFIG_PCI_HERMES 0
set CONFIG_PCMCIA_HERMES 0
set CONFIG_AIRO_CS 0
set CONFIG_TR 0
set CONFIG_IBMTR 0
set CONFIG_IBMOL 0
set CONFIG_IBMLS 0
set CONFIG_3C359 0
set CONFIG_TMS380TR 0
set CONFIG_TMSPCI 0
set CONFIG_TMSISA 0
set CONFIG_ABYSS 0
set CONFIG_MADGEMC 0
set CONFIG_SMCTR 0
set CONFIG_NET_FC 0
set CONFIG_IPHASE5526 0
set CONFIG_RCPCI 0
set CONFIG_SHAPER 0
set CONFIG_WAN 0
set CONFIG_HOSTESS_SV11 0
set CONFIG_COSA 0
set CONFIG_COMX 0
set CONFIG_COMX_HW_COMX 0
set CONFIG_COMX_HW_LOCOMX 0
set CONFIG_COMX_HW_MIXCOM 0
set CONFIG_COMX_HW_MUNICH 0
set CONFIG_COMX_PROTO_PPP 0
set CONFIG_COMX_PROTO_LAPB 0
set CONFIG_COMX_PROTO_FR 0
set CONFIG_DSCC4 0
set CONFIG_DSCC4_PCISYNC 0
set CONFIG_DSCC4_PCI_RST 0
set CONFIG_LANMEDIA 0
set CONFIG_ATI_XX20 0
set CONFIG_SEALEVEL_4021 0
set CONFIG_SYNCLINK_SYNCPPP 0
set CONFIG_HDLC 0
set CONFIG_HDLC_RAW 0
set CONFIG_HDLC_RAW_ETH 0
set CONFIG_HDLC_CISCO 0
set CONFIG_HDLC_FR 0
set CONFIG_HDLC_PPP 0
set CONFIG_HDLC_X25 0
set CONFIG_N2 0
set CONFIG_C101 0
set CONFIG_CHINOOK 0
set CONFIG_FARSYNC 0
set CONFIG_HDLC_DEBUG_PKT 0
set CONFIG_HDLC_DEBUG_HARD_HEADER 0
set CONFIG_HDLC_DEBUG_ECN 0
set CONFIG_HDLC_DEBUG_RINGS 0
set CONFIG_DLCI 0
set CONFIG_DLCI_COUNT 24
set CONFIG_DLCI_MAX 8
set CONFIG_SDLA 0
set CONFIG_WAN_ROUTER_DRIVERS 0
set CONFIG_VENDOR_SANGOMA 0
set CONFIG_WANPIPE_CHDLC 0
set CONFIG_WANPIPE_FR 0
set CONFIG_WANPIPE_X25 0
set CONFIG_WANPIPE_PPP 0
set CONFIG_WANPIPE_MULTPPP 0
set CONFIG_CYCLADES_SYNC 0
set CONFIG_CYCLOMX_X25 0
set CONFIG_LAPBETHER 0
set CONFIG_X25_ASY 0
set CONFIG_NET_PCMCIA 0
set CONFIG_PCMCIA_3C589 0
set CONFIG_PCMCIA_3C574 0
set CONFIG_PCMCIA_FMVJ18X 0
set CONFIG_PCMCIA_PCNET 0
set CONFIG_PCMCIA_AXNET 0
set CONFIG_PCMCIA_NMCLAN 0
set CONFIG_PCMCIA_SMC91C92 0
set CONFIG_PCMCIA_XIRC2PS 0
set CONFIG_ARCNET_COM20020_CS 0
set CONFIG_PCMCIA_IBMTR 0
set CONFIG_PCMCIA_XIRCOM 0
set CONFIG_PCMCIA_XIRTULIP 0
set CONFIG_NET_PCMCIA_RADIO 0
set CONFIG_PCMCIA_RAYCS 0
set CONFIG_PCMCIA_NETWAVE 0
set CONFIG_PCMCIA_WAVELAN 0
set CONFIG_AIRONET4500_CS 0
set CONFIG_HAMRADIO 0
set CONFIG_AX25 0
set CONFIG_AX25_DAMA_SLAVE 0
set CONFIG_NETROM 0
set CONFIG_ROSE 0
set CONFIG_MKISS 0
set CONFIG_6PACK 0
set CONFIG_BPQETHER 0
set CONFIG_DMASCC 0
set CONFIG_SCC 0
set CONFIG_SCC_DELAY 0
set CONFIG_SCC_TRXECHO 0
set CONFIG_BAYCOM_SER_FDX 0
set CONFIG_BAYCOM_SER_HDX 0
set CONFIG_BAYCOM_PAR 0
set CONFIG_BAYCOM_EPP 0
set CONFIG_SOUNDMODEM 0
set CONFIG_SOUNDMODEM_SBC 0
set CONFIG_SOUNDMODEM_WSS 0
set CONFIG_SOUNDMODEM_AFSK1200 0
set CONFIG_SOUNDMODEM_AFSK2400_7 0
set CONFIG_SOUNDMODEM_AFSK2400_8 0
set CONFIG_SOUNDMODEM_AFSK2666 0
set CONFIG_SOUNDMODEM_HAPN4800 0
set CONFIG_SOUNDMODEM_PSK4800 0
set CONFIG_SOUNDMODEM_FSK9600 0
set CONFIG_YAM 0
set CONFIG_IRDA 0
set CONFIG_IRLAN 0
set CONFIG_IRNET 0
set CONFIG_IRCOMM 0
set CONFIG_IRDA_ULTRA 0
set CONFIG_IRDA_CACHE_LAST_LSAP 0
set CONFIG_IRDA_FAST_RR 0
set CONFIG_IRDA_DEBUG 0
set CONFIG_IRTTY_SIR 0
set CONFIG_IRPORT_SIR 0
set CONFIG_DONGLE 0
set CONFIG_ESI_DONGLE 0
set CONFIG_ACTISYS_DONGLE 0
set CONFIG_TEKRAM_DONGLE 0
set CONFIG_GIRBIL_DONGLE 0
set CONFIG_LITELINK_DONGLE 0
set CONFIG_MCP2120_DONGLE 0
set CONFIG_OLD_BELKIN_DONGLE 0
set CONFIG_EP7211_IR 0
set CONFIG_ACT200L_DONGLE 0
set CONFIG_MA600_DONGLE 0
set CONFIG_USB_IRDA 0
set CONFIG_NSC_FIR 0
set CONFIG_WINBOND_FIR 0
set CONFIG_TOSHIBA_OLD 0
set CONFIG_TOSHIBA_FIR 0
set CONFIG_SMC_IRCC_FIR 0
set CONFIG_SA1100_FIR 0
set CONFIG_ALI_FIR 0
set CONFIG_VLSI_FIR 0
set CONFIG_IDE 0
set CONFIG_BLK_DEV_IDE 0
set CONFIG_BLK_DEV_HD_IDE 0
set CONFIG_BLK_DEV_IDEDISK 0
set CONFIG_IDEDISK_MULTI_MODE 0
set CONFIG_IDEDISK_STROKE 0
set CONFIG_BLK_DEV_IDECS 0
set CONFIG_BLK_DEV_IDECD 0
set CONFIG_BLK_DEV_IDETAPE 0
set CONFIG_BLK_DEV_IDEFLOPPY 0
set CONFIG_BLK_DEV_IDESCSI 0
set CONFIG_IDE_TASK_IOCTL 0
set CONFIG_BLK_DEV_CMD640 0
set CONFIG_BLK_DEV_CMD640_ENHANCED 0
set CONFIG_BLK_DEV_ISAPNP 0
set CONFIG_BLK_DEV_IDEPCI 0
set CONFIG_BLK_DEV_GENERIC 0
set CONFIG_IDEPCI_SHARE_IRQ 0
set CONFIG_BLK_DEV_IDEDMA_PCI 0
set CONFIG_BLK_DEV_OFFBOARD 0
set CONFIG_BLK_DEV_IDEDMA_FORCED 0
set CONFIG_IDEDMA_PCI_AUTO 0
set CONFIG_IDEDMA_ONLYDISK 0
set CONFIG_IDEDMA_PCI_WIP 0
set CONFIG_BLK_DEV_ADMA100 0
set CONFIG_BLK_DEV_AEC62XX 0
set CONFIG_BLK_DEV_ALI15X3 0
set CONFIG_WDC_ALI15X3 0
set CONFIG_BLK_DEV_AMD74XX 0
set CONFIG_AMD74XX_OVERRIDE 0
set CONFIG_BLK_DEV_CMD64X 0
set CONFIG_BLK_DEV_TRIFLEX 0
set CONFIG_BLK_DEV_CY82C693 0
set CONFIG_BLK_DEV_CS5530 0
set CONFIG_BLK_DEV_HPT34X 0
set CONFIG_HPT34X_AUTODMA 0
set CONFIG_BLK_DEV_HPT366 0
set CONFIG_BLK_DEV_PIIX 0
set CONFIG_BLK_DEV_NS87415 0
set CONFIG_BLK_DEV_OPTI621 0
set CONFIG_BLK_DEV_PDC202XX_OLD 0
set CONFIG_PDC202XX_BURST 0
set CONFIG_BLK_DEV_PDC202XX_NEW 0
set CONFIG_PDC202XX_FORCE 0
set CONFIG_BLK_DEV_RZ1000 0
set CONFIG_BLK_DEV_SC1200 0
set CONFIG_BLK_DEV_SVWKS 0
set CONFIG_BLK_DEV_SIIMAGE 0
set CONFIG_BLK_DEV_SIS5513 0
set CONFIG_BLK_DEV_SLC90E66 0
set CONFIG_BLK_DEV_TRM290 0
set CONFIG_BLK_DEV_VIA82CXXX 0
set CONFIG_BLK_DEV_SL82C105 0
set CONFIG_BLK_DEV_IDE_ICSIDE 0
set CONFIG_BLK_DEV_IDEDMA_ICS 0
set CONFIG_IDEDMA_ICS_AUTO 0
set CONFIG_BLK_DEV_IDE_RAPIDE 0
set CONFIG_BLK_DEV_UCLINUX_IDE 0
set tmpvar_18 "(not set)"
set CONFIG_IDE_8xx_PCCARD 0
set CONFIG_IDE_8xx_DIRECT 0
set CONFIG_IDE_EXT_DIRECT 0
set CONFIG_IDE_CHIPSETS 0
set CONFIG_BLK_DEV_4DRIVES 0
set CONFIG_BLK_DEV_ALI14XX 0
set CONFIG_BLK_DEV_DTC2278 0
set CONFIG_BLK_DEV_HT6560B 0
set CONFIG_BLK_DEV_OCIDEC 0
set CONFIG_BLK_DEV_PDC4030 0
set CONFIG_BLK_DEV_QD65XX 0
set CONFIG_BLK_DEV_UMC8672 0
set CONFIG_BLK_DEV_HD_ONLY 0
set CONFIG_IDEDMA_IVB 0
set CONFIG_BLK_DEV_ATARAID 0
set CONFIG_BLK_DEV_ATARAID_PDC 0
set CONFIG_BLK_DEV_ATARAID_HPT 0
set CONFIG_BLK_DEV_ATARAID_SII 0
set CONFIG_SCSI 0
set CONFIG_BLK_DEV_SD 0
set CONFIG_SD_EXTRA_DEVS 40
set CONFIG_CHR_DEV_ST 0
set CONFIG_CHR_DEV_OSST 0
set CONFIG_BLK_DEV_SR 0
set CONFIG_BLK_DEV_SR_VENDOR 0
set CONFIG_SR_EXTRA_DEVS 2
set CONFIG_CHR_DEV_SG 0
set CONFIG_SCSI_DEBUG_QUEUES 0
set CONFIG_SCSI_MULTI_LUN 0
set CONFIG_SCSI_CONSTANTS 0
set CONFIG_SCSI_LOGGING 0
set CONFIG_BLK_DEV_3W_XXXX_RAID 0
set CONFIG_SCSI_7000FASST 0
set CONFIG_SCSI_ACARD 0
set CONFIG_SCSI_AHA152X 0
set CONFIG_SCSI_AHA1542 0
set CONFIG_SCSI_AHA1740 0
set CONFIG_SCSI_AACRAID 0
set CONFIG_SCSI_AIC7XXX 0
set CONFIG_AIC7XXX_CMDS_PER_DEVICE 32
set CONFIG_AIC7XXX_RESET_DELAY_MS 15000
set CONFIG_AIC7XXX_PROBE_EISA_VL 0
set CONFIG_AIC7XXX_BUILD_FIRMWARE 0
set CONFIG_AIC7XXX_DEBUG_ENABLE 0
set CONFIG_AIC7XXX_DEBUG_MASK 0
set CONFIG_AIC7XXX_REG_PRETTY_PRINT 0
set CONFIG_SCSI_AIC79XX 0
set CONFIG_AIC79XX_CMDS_PER_DEVICE 32
set CONFIG_AIC79XX_RESET_DELAY_MS 15000
set CONFIG_AIC79XX_BUILD_FIRMWARE 0
set CONFIG_AIC79XX_ENABLE_RD_STRM 0
set CONFIG_AIC79XX_DEBUG_ENABLE 0
set CONFIG_AIC79XX_DEBUG_MASK 0
set CONFIG_AIC79XX_REG_PRETTY_PRINT 0
set CONFIG_SCSI_AIC7XXX_OLD 0
set CONFIG_AIC7XXX_OLD_TCQ_ON_BY_DEFAULT 0
set CONFIG_AIC7XXX_OLD_CMDS_PER_DEVICE 8
set CONFIG_AIC7XXX_OLD_PROC_STATS 0
set CONFIG_SCSI_DPT_I2O 0
set CONFIG_SCSI_ADVANSYS 0
set CONFIG_SCSI_IN2000 0
set CONFIG_SCSI_AM53C974 0
set CONFIG_SCSI_MEGARAID 0
set CONFIG_SCSI_MEGARAID2 0
set CONFIG_SCSI_BUSLOGIC 0
set CONFIG_SCSI_OMIT_FLASHPOINT 0
set CONFIG_SCSI_CPQFCTS 0
set CONFIG_SCSI_DMX3191D 0
set CONFIG_SCSI_DTC3280 0
set CONFIG_SCSI_EATA 0
set CONFIG_SCSI_EATA_TAGGED_QUEUE 0
set CONFIG_SCSI_EATA_LINKED_COMMANDS 0
set CONFIG_SCSI_EATA_MAX_TAGS 16
set CONFIG_SCSI_EATA_DMA 0
set CONFIG_SCSI_EATA_PIO 0
set CONFIG_SCSI_FUTURE_DOMAIN 0
set CONFIG_SCSI_FD_MCS 0
set CONFIG_SCSI_GDTH 0
set CONFIG_SCSI_GENERIC_NCR5380 0
set CONFIG_SCSI_GENERIC_NCR53C400 0
set tmpvar_19 "(not set)"
set CONFIG_SCSI_G_NCR5380_PORT 0
set CONFIG_SCSI_G_NCR5380_MEM 0
set CONFIG_SCSI_IBMMCA 0
set CONFIG_IBMMCA_SCSI_ORDER_STANDARD 0
set CONFIG_IBMMCA_SCSI_DEV_RESET 0
set CONFIG_SCSI_INITIO 0
set CONFIG_SCSI_INIA100 0
set CONFIG_SCSI_PPA 0
set CONFIG_SCSI_IMM 0
set CONFIG_SCSI_IZIP_EPP16 0
set CONFIG_SCSI_IZIP_SLOW_CTR 0
set CONFIG_SCSI_NCR53C406A 0
set CONFIG_SCSI_NCR_D700 0
set CONFIG_SCSI_NCR53C7xx 0
set CONFIG_SCSI_NCR53C7xx_sync 0
set CONFIG_SCSI_NCR53C7xx_FAST 0
set CONFIG_SCSI_NCR53C7xx_DISCONNECT 0
set CONFIG_SCSI_SYM53C8XX_2 0
set CONFIG_SCSI_SYM53C8XX_DMA_ADDRESSING_MODE 1
set CONFIG_SCSI_SYM53C8XX_DEFAULT_TAGS 16
set CONFIG_SCSI_SYM53C8XX_MAX_TAGS 64
set CONFIG_SCSI_SYM53C8XX_IOMAPPED 0
set CONFIG_SCSI_NCR53C8XX 0
set CONFIG_SCSI_SYM53C8XX 0
set CONFIG_SCSI_NCR53C8XX_DEFAULT_TAGS 8
set CONFIG_SCSI_NCR53C8XX_MAX_TAGS 32
set CONFIG_SCSI_NCR53C8XX_SYNC 20
set CONFIG_SCSI_NCR53C8XX_PROFILE 0
set CONFIG_SCSI_NCR53C8XX_IOMAPPED 0
set CONFIG_SCSI_NCR53C8XX_PQS_PDS 0
set CONFIG_SCSI_NCR53C8XX_NO_DISCONNECT 0
set CONFIG_SCSI_NCR53C8XX_SYMBIOS_COMPAT 0
set CONFIG_SCSI_MCA_53C9X 0
set CONFIG_SCSI_PAS16 0
set CONFIG_SCSI_PCI2000 0
set CONFIG_SCSI_PCI2220I 0
set CONFIG_SCSI_PSI240I 0
set CONFIG_SCSI_QLOGIC_FAS 0
set CONFIG_SCSI_QLOGIC_ISP 0
set CONFIG_SCSI_QLOGIC_FC 0
set CONFIG_SCSI_QLOGIC_FC_FIRMWARE 0
set CONFIG_SCSI_QLOGIC_1280 0
set CONFIG_SCSI_SIM710 0
set CONFIG_SCSI_SYM53C416 0
set CONFIG_SCSI_DC390T 0
set CONFIG_SCSI_DC390T_NOGENSUPP 0
set CONFIG_SCSI_T128 0
set CONFIG_SCSI_U14_34F 0
set CONFIG_SCSI_U14_34F_LINKED_COMMANDS 0
set CONFIG_SCSI_U14_34F_MAX_TAGS 8
set CONFIG_SCSI_NSP32 0
set CONFIG_SCSI_DEBUG 0
set CONFIG_SCSI_ACORNSCSI_3 0
set CONFIG_SCSI_ACORNSCSI_TAGGED_QUEUE 0
set CONFIG_SCSI_ACORNSCSI_SYNC 0
set CONFIG_SCSI_ARXESCSI 0
set CONFIG_SCSI_CUMANA_2 0
set CONFIG_SCSI_EESOXSCSI 0
set CONFIG_SCSI_POWERTECSCSI 0
set CONFIG_SCSI_CUMANA_1 0
set CONFIG_SCSI_ECOSCSI 0
set CONFIG_SCSI_OAK1 0
set CONFIG_SCSI_PCMCIA 0
set CONFIG_PCMCIA_AHA152X 0
set CONFIG_PCMCIA_FDOMAIN 0
set CONFIG_PCMCIA_NINJA_SCSI 0
set CONFIG_PCMCIA_QLOGIC 0
set CONFIG_IEEE1394 0
set CONFIG_IEEE1394_PCILYNX 0
set CONFIG_IEEE1394_OHCI1394 0
set CONFIG_IEEE1394_VIDEO1394 0
set CONFIG_IEEE1394_SBP2 0
set CONFIG_IEEE1394_SBP2_PHYS_DMA 0
set CONFIG_IEEE1394_ETH1394 0
set CONFIG_IEEE1394_DV1394 0
set CONFIG_IEEE1394_RAWIO 0
set CONFIG_IEEE1394_CMP 0
set CONFIG_IEEE1394_AMDTP 0
set CONFIG_IEEE1394_VERBOSEDEBUG 0
set CONFIG_IEEE1394_OUI_DB 0
set CONFIG_I2O 0
set CONFIG_I2O_PCI 0
set CONFIG_I2O_BLOCK 0
set CONFIG_I2O_LAN 0
set CONFIG_I2O_SCSI 0
set CONFIG_I2O_PROC 0
set CONFIG_ISDN 0
set CONFIG_ISDN_PPP 0
set CONFIG_IPPP_FILTER 0
set CONFIG_ISDN_PPP_VJ 0
set CONFIG_ISDN_MPP 0
set CONFIG_ISDN_PPP_BSDCOMP 0
set CONFIG_ISDN_AUDIO 0
set CONFIG_ISDN_TTY_FAX 0
set CONFIG_ISDN_X25 0
set CONFIG_ISDN_DRV_LOOP 0
set CONFIG_ISDN_DIVERSION 0
set CONFIG_ISDN_DRV_HISAX 0
set CONFIG_HISAX_EURO 0
set CONFIG_DE_AOC 0
set CONFIG_HISAX_NO_SENDCOMPLETE 0
set CONFIG_HISAX_NO_LLC 0
set CONFIG_HISAX_NO_KEYPAD 0
set CONFIG_HISAX_1TR6 0
set CONFIG_HISAX_NI1 0
set CONFIG_HISAX_MAX_CARDS 8
set CONFIG_HISAX_16_0 0
set CONFIG_HISAX_16_3 0
set CONFIG_HISAX_AVM_A1 0
set CONFIG_HISAX_IX1MICROR2 0
set CONFIG_HISAX_ASUSCOM 0
set CONFIG_HISAX_TELEINT 0
set CONFIG_HISAX_HFCS 0
set CONFIG_HISAX_SPORTSTER 0
set CONFIG_HISAX_MIC 0
set CONFIG_HISAX_ISURF 0
set CONFIG_HISAX_HSTSAPHIR 0
set CONFIG_HISAX_TELESPCI 0
set CONFIG_HISAX_S0BOX 0
set CONFIG_HISAX_FRITZPCI 0
set CONFIG_HISAX_AVM_A1_PCMCIA 0
set CONFIG_HISAX_ELSA 0
set CONFIG_HISAX_DIEHLDIVA 0
set CONFIG_HISAX_SEDLBAUER 0
set CONFIG_HISAX_NETJET 0
set CONFIG_HISAX_NETJET_U 0
set CONFIG_HISAX_NICCY 0
set CONFIG_HISAX_BKM_A4T 0
set CONFIG_HISAX_SCT_QUADRO 0
set CONFIG_HISAX_GAZEL 0
set CONFIG_HISAX_HFC_PCI 0
set CONFIG_HISAX_W6692 0
set CONFIG_HISAX_HFC_SX 0
set CONFIG_HISAX_ENTERNOW_PCI 0
set CONFIG_HISAX_DEBUG 0
set CONFIG_HISAX_SEDLBAUER_CS 0
set CONFIG_HISAX_ELSA_CS 0
set CONFIG_HISAX_AVM_A1_CS 0
set CONFIG_HISAX_ST5481 0
set CONFIG_HISAX_FRITZ_PCIPNP 0
set CONFIG_USB_AUERISDN 0
set CONFIG_ISDN_DRV_ICN 0
set CONFIG_ISDN_DRV_PCBIT 0
set CONFIG_ISDN_DRV_SC 0
set CONFIG_ISDN_DRV_ACT2000 0
set CONFIG_ISDN_DRV_EICON 0
set CONFIG_ISDN_DRV_EICON_DIVAS 0
set CONFIG_ISDN_DRV_EICON_OLD 0
set CONFIG_ISDN_DRV_EICON_PCI 0
set CONFIG_ISDN_DRV_EICON_ISA 0
set CONFIG_ISDN_DRV_TPAM 0
set CONFIG_ISDN_CAPI 0
set CONFIG_ISDN_DRV_AVMB1_VERBOSE_REASON 0
set CONFIG_ISDN_CAPI_MIDDLEWARE 0
set CONFIG_ISDN_CAPI_CAPI20 0
set CONFIG_ISDN_CAPI_CAPIFS_BOOL 0
set CONFIG_ISDN_CAPI_CAPIDRV 0
set CONFIG_ISDN_DRV_AVMB1_B1ISA 0
set CONFIG_ISDN_DRV_AVMB1_B1PCI 0
set CONFIG_ISDN_DRV_AVMB1_B1PCIV4 0
set CONFIG_ISDN_DRV_AVMB1_T1ISA 0
set CONFIG_ISDN_DRV_AVMB1_B1PCMCIA 0
set CONFIG_ISDN_DRV_AVMB1_AVM_CS 0
set CONFIG_ISDN_DRV_AVMB1_T1PCI 0
set CONFIG_ISDN_DRV_AVMB1_C4 0
set CONFIG_HYSDN 0
set CONFIG_HYSDN_CAPI 0
set CONFIG_INPUT 0
set CONFIG_INPUT_KEYBDEV 0
set CONFIG_INPUT_MOUSEDEV 0
set CONFIG_INPUT_MOUSEDEV_SCREEN_X 1024
set CONFIG_INPUT_MOUSEDEV_SCREEN_Y 768
set CONFIG_INPUT_JOYDEV 0
set CONFIG_INPUT_EVDEV 0
set CONFIG_SERIAL_AMBA 0
set CONFIG_SERIAL_AMBA_CONSOLE 0
set CONFIG_SERIAL_KS8695 0
set CONFIG_SERIAL_CONSOLE 0
set CONFIG_LEDMAN 0
set CONFIG_DS1302 0
set CONFIG_VT 0
set CONFIG_VT_CONSOLE 0
set CONFIG_SERIAL 0
set CONFIG_ATOMWIDE_SERIAL 0
set CONFIG_DUALSP_SERIAL 0
set CONFIG_SERIAL_EXTENDED 0
set CONFIG_SERIAL_MANY_PORTS 0
set CONFIG_SERIAL_SHARE_IRQ 0
set CONFIG_SERIAL_DETECT_IRQ 0
set CONFIG_SERIAL_MULTIPORT 0
set CONFIG_HUB6 0
set CONFIG_SERIAL_NONSTANDARD 0
set CONFIG_COMPUTONE 0
set CONFIG_ROCKETPORT 0
set CONFIG_CYCLADES 0
set CONFIG_CYZ_INTR 0
set CONFIG_DIGIEPCA 0
set CONFIG_DIGI 0
set CONFIG_ESPSERIAL 0
set CONFIG_MOXA_INTELLIO 0
set CONFIG_MOXA_SMARTIO 0
set CONFIG_ISI 0
set CONFIG_SYNCLINK 0
set CONFIG_SYNCLINKMP 0
set CONFIG_N_HDLC 0
set CONFIG_RISCOM8 0
set CONFIG_SPECIALIX 0
set CONFIG_SPECIALIX_RTSCTS 0
set CONFIG_SX 0
set CONFIG_RIO 0
set CONFIG_RIO_OLDPCI 0
set CONFIG_STALDRV 0
set CONFIG_STALLION 0
set CONFIG_ISTALLION 0
set CONFIG_A2232 0
set CONFIG_SERIAL_21285 0
set CONFIG_SERIAL_21285_OLD 0
set CONFIG_SERIAL_21285_CONSOLE 0
set CONFIG_UNIX98_PTYS 0
set CONFIG_UNIX98_PTY_COUNT 256
set CONFIG_PRINTER 0
set CONFIG_LP_CONSOLE 0
set CONFIG_PPDEV 0
set CONFIG_TIPAR 0
set CONFIG_I2C 0
set CONFIG_I2C_ALGOBIT 0
set CONFIG_I2C_PHILIPSPAR 0
set CONFIG_I2C_ELV 0
set CONFIG_I2C_VELLEMAN 0
set CONFIG_I2C_MCF_GPIO 0
set CONFIG_SCx200_I2C 0
set CONFIG_SCx200_I2C_SCL 12
set CONFIG_SCx200_I2C_SDA 13
set CONFIG_SCx200_ACB 0
set CONFIG_I2C_ALGOPCF 0
set CONFIG_I2C_ELEKTOR 0
set CONFIG_I2C_CHARDEV 0
set CONFIG_I2C_PROC 0
set CONFIG_BUSMOUSE 0
set CONFIG_ATIXL_BUSMOUSE 0
set CONFIG_LOGIBUSMOUSE 0
set CONFIG_MS_BUSMOUSE 0
set CONFIG_MOUSE 0
set CONFIG_PSMOUSE 0
set CONFIG_82C710_MOUSE 0
set CONFIG_PC110_PAD 0
set CONFIG_MK712_MOUSE 0
set CONFIG_INPUT_GAMEPORT 0
set CONFIG_INPUT_NS558 0
set CONFIG_INPUT_LIGHTNING 0
set CONFIG_INPUT_PCIGAME 0
set CONFIG_INPUT_CS461X 0
set CONFIG_INPUT_EMU10K1 0
set CONFIG_INPUT_SERIO 0
set CONFIG_INPUT_SERPORT 0
set CONFIG_INPUT_ANALOG 0
set CONFIG_INPUT_A3D 0
set CONFIG_INPUT_ADI 0
set CONFIG_INPUT_COBRA 0
set CONFIG_INPUT_GF2K 0
set CONFIG_INPUT_GRIP 0
set CONFIG_INPUT_INTERACT 0
set CONFIG_INPUT_TMDC 0
set CONFIG_INPUT_SIDEWINDER 0
set CONFIG_INPUT_IFORCE_USB 0
set CONFIG_INPUT_IFORCE_232 0
set CONFIG_INPUT_WARRIOR 0
set CONFIG_INPUT_MAGELLAN 0
set CONFIG_INPUT_SPACEORB 0
set CONFIG_INPUT_SPACEBALL 0
set CONFIG_INPUT_STINGER 0
set CONFIG_INPUT_DB9 0
set CONFIG_INPUT_GAMECON 0
set CONFIG_INPUT_TURBOGRAFX 0
set CONFIG_QIC02_TAPE 0
set CONFIG_QIC02_DYNCONF 0
set CONFIG_IPMI_HANDLER 0
set CONFIG_IPMI_PANIC_EVENT 0
set CONFIG_IPMI_DEVICE_INTERFACE 0
set CONFIG_IPMI_KCS 0
set CONFIG_IPMI_WATCHDOG 0
set CONFIG_CAN4LINUX 0
set CONFIG_CAN_ATCANMINI 0
set CONFIG_CAN_CCPC104 0
set CONFIG_CAN_MCF5282 0
set CONFIG_CAN_CPC_PCI 0
set CONFIG_CAN_IME_SLIMLINE 0
set CONFIG_WATCHDOG 0
set CONFIG_WATCHDOG_NOWAYOUT 0
set CONFIG_ACQUIRE_WDT 0
set CONFIG_ADVANTECH_WDT 0
set CONFIG_ALIM1535_WDT 0
set CONFIG_ALIM7101_WDT 0
set CONFIG_SC520_WDT 0
set CONFIG_PCWATCHDOG 0
set CONFIG_21285_WATCHDOG 0
set CONFIG_977_WATCHDOG 0
set CONFIG_EUROTECH_WDT 0
set CONFIG_IB700_WDT 0
set CONFIG_WAFER_WDT 0
set CONFIG_I810_TCO 0
set CONFIG_MIXCOMWD 0
set CONFIG_60XX_WDT 0
set CONFIG_SC1200_WDT 0
set CONFIG_SCx200_WDT 0
set CONFIG_SOFT_WATCHDOG 0
set CONFIG_W83877F_WDT 0
set CONFIG_WDT 0
set CONFIG_WDTPCI 0
set CONFIG_WDT_501 0
set CONFIG_WDT_501_FAN 0
set CONFIG_MACHZ_WDT 0
set CONFIG_AMD7XX_TCO 0
set CONFIG_DS1620 0
set CONFIG_NWBUTTON 0
set CONFIG_NWBUTTON_REBOOT 0
set CONFIG_NWFLASH 0
set CONFIG_SCx200_GPIO 0
set CONFIG_AMD_PM768 0
set CONFIG_NVRAM 0
set CONFIG_RTC 0
set CONFIG_H8 0
set CONFIG_DTLK 0
set CONFIG_R3964 0
set CONFIG_APPLICOM 0
set CONFIG_SONYPI 0
set CONFIG_FTAPE 0
set CONFIG_ZFTAPE 0
set CONFIG_ZFT_DFLT_BLK_SZ 10240
set CONFIG_FT_NR_BUFFERS 3
set CONFIG_FT_PROC_FS 0
set tmpvar_33 "(not set)"
set CONFIG_FT_NORMAL_DEBUG 0
set CONFIG_FT_FULL_DEBUG 0
set CONFIG_FT_NO_TRACE 0
set CONFIG_FT_NO_TRACE_AT_ALL 0
set tmpvar_34 "(not set)"
set CONFIG_FT_STD_FDC 0
set CONFIG_FT_MACH2 0
set CONFIG_FT_PROBE_FC10 0
set CONFIG_FT_ALT_FDC 0
set CONFIG_FT_FDC_BASE 0
set CONFIG_FT_FDC_IRQ 0
set CONFIG_FT_FDC_DMA 0
set CONFIG_FT_FDC_THR 8
set CONFIG_FT_FDC_MAX_RATE 2000
set CONFIG_AGP 0
set CONFIG_AGP_INTEL 0
set CONFIG_AGP_I810 0
set CONFIG_AGP_VIA 0
set CONFIG_AGP_AMD 0
set CONFIG_AGP_AMD_K8 0
set CONFIG_AGP_SIS 0
set CONFIG_AGP_ALI 0
set CONFIG_AGP_SWORKS 0
set CONFIG_AGP_ATI 0
set CONFIG_DRM 0
set CONFIG_DRM_OLD 0
set CONFIG_DRM40_TDFX 0
set CONFIG_DRM40_GAMMA 0
set CONFIG_DRM40_R128 0
set CONFIG_DRM40_RADEON 0
set CONFIG_DRM40_I810 0
set CONFIG_DRM40_MGA 0
set CONFIG_DRM_TDFX 0
set CONFIG_DRM_GAMMA 0
set CONFIG_DRM_R128 0
set CONFIG_DRM_RADEON 0
set CONFIG_DRM_I810 0
set CONFIG_DRM_I810_XFREE_41 0
set CONFIG_DRM_I830 0
set CONFIG_DRM_MGA 0
set CONFIG_DRM_SIS 0
set CONFIG_PCMCIA_SERIAL_CS 0
set CONFIG_SYNCLINK_CS 0
set CONFIG_VIDEO_DEV 0
set CONFIG_VIDEO_PROC_FS 0
set CONFIG_I2C_PARPORT 0
set CONFIG_VIDEO_BT848 0
set CONFIG_VIDEO_PMS 0
set CONFIG_VIDEO_BWQCAM 0
set CONFIG_VIDEO_CQCAM 0
set CONFIG_VIDEO_W9966 0
set CONFIG_VIDEO_CPIA 0
set CONFIG_VIDEO_CPIA_PP 0
set CONFIG_VIDEO_CPIA_USB 0
set CONFIG_VIDEO_SAA5249 0
set CONFIG_TUNER_3036 0
set CONFIG_VIDEO_STRADIS 0
set CONFIG_VIDEO_ZORAN 0
set CONFIG_VIDEO_ZORAN_BUZ 0
set CONFIG_VIDEO_ZORAN_DC10 0
set CONFIG_VIDEO_ZORAN_LML33 0
set CONFIG_VIDEO_ZR36120 0
set CONFIG_VIDEO_CYBERPRO 0
set CONFIG_VIDEO_MEYE 0
set CONFIG_RADIO_CADET 0
set CONFIG_RADIO_RTRACK 0
set CONFIG_RADIO_RTRACK_PORT 20f
set CONFIG_RADIO_RTRACK2 0
set CONFIG_RADIO_RTRACK2_PORT 30c
set CONFIG_RADIO_AZTECH 0
set CONFIG_RADIO_AZTECH_PORT 350
set CONFIG_RADIO_GEMTEK 0
set CONFIG_RADIO_GEMTEK_PORT 34c
set CONFIG_RADIO_GEMTEK_PCI 0
set CONFIG_RADIO_MAXIRADIO 0
set CONFIG_RADIO_MAESTRO 0
set CONFIG_RADIO_MIROPCM20 0
set CONFIG_RADIO_MIROPCM20_RDS 0
set CONFIG_RADIO_SF16FMI 0
set CONFIG_RADIO_SF16FMR2 0
set CONFIG_RADIO_TERRATEC 0
set CONFIG_RADIO_TERRATEC_PORT 590
set CONFIG_RADIO_TRUST 0
set CONFIG_RADIO_TRUST_PORT 350
set CONFIG_RADIO_TYPHOON 0
set CONFIG_RADIO_TYPHOON_PROC_FS 0
set CONFIG_RADIO_TYPHOON_PORT 316
set CONFIG_RADIO_TYPHOON_MUTEFREQ 87500
set CONFIG_RADIO_ZOLTRIX 0
set CONFIG_RADIO_ZOLTRIX_PORT 20c
set CONFIG_QUOTA 0
set CONFIG_QFMT_V2 0
set CONFIG_AUTOFS_FS 0
set CONFIG_AUTOFS4_FS 0
set CONFIG_REISERFS_FS 0
set CONFIG_REISERFS_CHECK 0
set CONFIG_REISERFS_PROC_INFO 0
set CONFIG_ADFS_FS 0
set CONFIG_ADFS_FS_RW 0
set CONFIG_AFFS_FS 0
set CONFIG_HFS_FS 0
set CONFIG_HFSPLUS_FS 0
set CONFIG_BEFS_FS 0
set CONFIG_BEFS_DEBUG 0
set CONFIG_BFS_FS 0
set CONFIG_EXT3_FS 0
set CONFIG_JBD_DEBUG 0
set CONFIG_FAT_FS 0
set CONFIG_MSDOS_FS 0
set CONFIG_UMSDOS_FS 0
set CONFIG_VFAT_FS 0
set CONFIG_EFS_FS 0
set CONFIG_JFFS_FS 0
set CONFIG_JFFS_FS_VERBOSE 0
set CONFIG_JFFS_PROC_FS 0
set CONFIG_JFFS2_FS 0
set CONFIG_JFFS2_FS_DEBUG 0
set CONFIG_CRAMFS 0
set CONFIG_TMPFS 0
set CONFIG_ISO9660_FS 0
set CONFIG_JOLIET 0
set CONFIG_ZISOFS 0
set CONFIG_JFS_FS 0
set CONFIG_JFS_DEBUG 0
set CONFIG_JFS_STATISTICS 0
set CONFIG_MINIX_FS 0
set CONFIG_VXFS_FS 0
set CONFIG_NTFS_FS 0
set CONFIG_NTFS_RW 0
set CONFIG_HPFS_FS 0
set CONFIG_PROC_FS 0
set CONFIG_DEVFS_FS 0
set CONFIG_DEVFS_MOUNT 0
set CONFIG_DEVFS_DEBUG 0
set CONFIG_DEVPTS_FS 0
set CONFIG_QNX4FS_FS 0
set CONFIG_QNX4FS_RW 0
set CONFIG_ROMFS_FS 0
set CONFIG_EXT2_FS 0
set CONFIG_SYSV_FS 0
set CONFIG_UDF_FS 0
set CONFIG_UDF_RW 0
set CONFIG_UFS_FS 0
set CONFIG_UFS_FS_WRITE 0
set CONFIG_CODA_FS 0
set CONFIG_INTERMEZZO_FS 0
set CONFIG_NFS_FS 0
set CONFIG_NFS_V3 0
set CONFIG_NFS_DIRECTIO 0
set CONFIG_ROOT_NFS 0
set CONFIG_NFSD 0
set CONFIG_NFSD_V3 0
set CONFIG_NFSD_TCP 0
set CONFIG_SMB_FS 0
set CONFIG_SMB_NLS_DEFAULT 0
set CONFIG_SMB_NLS_REMOTE "cp437"
set CONFIG_NCP_FS 0
set CONFIG_NCPFS_PACKET_SIGNING 0
set CONFIG_NCPFS_IOCTL_LOCKING 0
set CONFIG_NCPFS_STRONG 0
set CONFIG_NCPFS_NFS_NS 0
set CONFIG_NCPFS_OS2_NS 0
set CONFIG_NCPFS_SMALLDOS 0
set CONFIG_NCPFS_NLS 0
set CONFIG_NCPFS_EXTRAS 0
set CONFIG_COREDUMP_PRINTK 0
set CONFIG_PARTITION_ADVANCED 0
set CONFIG_ACORN_PARTITION 0
set CONFIG_ACORN_PARTITION_ICS 0
set CONFIG_ACORN_PARTITION_ADFS 0
set CONFIG_ACORN_PARTITION_POWERTEC 0
set CONFIG_ACORN_PARTITION_RISCIX 0
set CONFIG_OSF_PARTITION 0
set CONFIG_AMIGA_PARTITION 0
set CONFIG_ATARI_PARTITION 0
set CONFIG_MAC_PARTITION 0
set CONFIG_MSDOS_PARTITION 0
set CONFIG_BSD_DISKLABEL 0
set CONFIG_MINIX_SUBPARTITION 0
set CONFIG_SOLARIS_X86_PARTITION 0
set CONFIG_UNIXWARE_DISKLABEL 0
set CONFIG_LDM_PARTITION 0
set CONFIG_LDM_DEBUG 0
set CONFIG_SGI_PARTITION 0
set CONFIG_ULTRIX_PARTITION 0
set CONFIG_SUN_PARTITION 0
set CONFIG_EFI_PARTITION 0
set CONFIG_NLS_DEFAULT "iso8859-1"
set CONFIG_NLS_CODEPAGE_437 0
set CONFIG_NLS_CODEPAGE_737 0
set CONFIG_NLS_CODEPAGE_775 0
set CONFIG_NLS_CODEPAGE_850 0
set CONFIG_NLS_CODEPAGE_852 0
set CONFIG_NLS_CODEPAGE_855 0
set CONFIG_NLS_CODEPAGE_857 0
set CONFIG_NLS_CODEPAGE_860 0
set CONFIG_NLS_CODEPAGE_861 0
set CONFIG_NLS_CODEPAGE_862 0
set CONFIG_NLS_CODEPAGE_863 0
set CONFIG_NLS_CODEPAGE_864 0
set CONFIG_NLS_CODEPAGE_865 0
set CONFIG_NLS_CODEPAGE_866 0
set CONFIG_NLS_CODEPAGE_869 0
set CONFIG_NLS_CODEPAGE_936 0
set CONFIG_NLS_CODEPAGE_950 0
set CONFIG_NLS_CODEPAGE_932 0
set CONFIG_NLS_CODEPAGE_949 0
set CONFIG_NLS_CODEPAGE_874 0
set CONFIG_NLS_ISO8859_8 0
set CONFIG_NLS_CODEPAGE_1250 0
set CONFIG_NLS_CODEPAGE_1251 0
set CONFIG_NLS_ISO8859_1 0
set CONFIG_NLS_ISO8859_2 0
set CONFIG_NLS_ISO8859_3 0
set CONFIG_NLS_ISO8859_4 0
set CONFIG_NLS_ISO8859_5 0
set CONFIG_NLS_ISO8859_6 0
set CONFIG_NLS_ISO8859_7 0
set CONFIG_NLS_ISO8859_9 0
set CONFIG_NLS_ISO8859_13 0
set CONFIG_NLS_ISO8859_14 0
set CONFIG_NLS_ISO8859_15 0
set CONFIG_NLS_KOI8_R 0
set CONFIG_NLS_KOI8_U 0
set CONFIG_NLS_UTF8 0
set CONFIG_VGA_CONSOLE 0
set CONFIG_FB 0
set CONFIG_FB_RIVA 0
set CONFIG_FB_CLGEN 0
set CONFIG_FB_PM2 0
set CONFIG_FB_PM2_FIFO_DISCONNECT 0
set CONFIG_FB_PM2_PCI 0
set CONFIG_FB_PM3 0
set CONFIG_FB_ACORN 0
set CONFIG_FB_CLPS711X 0
set CONFIG_FB_CYBER2000 0
set CONFIG_FB_SA1100 0
set CONFIG_FB_MATROX 0
set CONFIG_FB_MATROX_MILLENIUM 0
set CONFIG_FB_MATROX_MYSTIQUE 0
set CONFIG_FB_MATROX_G450 0
set CONFIG_FB_MATROX_G100A 0
set CONFIG_FB_MATROX_I2C 0
set CONFIG_FB_MATROX_MAVEN 0
set CONFIG_FB_MATROX_PROC 0
set CONFIG_FB_MATROX_MULTIHEAD 0
set CONFIG_FB_ATY 0
set CONFIG_FB_ATY_GX 0
set CONFIG_FB_ATY_CT 0
set CONFIG_FB_RADEON 0
set CONFIG_FB_ATY128 0
set CONFIG_FB_INTEL 0
set CONFIG_FB_SIS 0
set CONFIG_FB_SIS_300 0
set CONFIG_FB_SIS_315 0
set CONFIG_FB_NEOMAGIC 0
set CONFIG_FB_3DFX 0
set CONFIG_FB_VOODOO1 0
set CONFIG_FB_TRIDENT 0
set CONFIG_FB_VIRTUAL 0
set CONFIG_FB_VIRTUAL_SMALL 0
set CONFIG_FBCON_ADVANCED 0
set CONFIG_FBCON_MFB 0
set CONFIG_FBCON_CFB2 0
set CONFIG_FBCON_CFB4 0
set CONFIG_FBCON_CFB8 0
set CONFIG_FBCON_CFB16 0
set CONFIG_FBCON_CFB24 0
set CONFIG_FBCON_CFB32 0
set CONFIG_FBCON_AFB 0
set CONFIG_FBCON_ILBM 0
set CONFIG_FBCON_IPLAN2P2 0
set CONFIG_FBCON_IPLAN2P4 0
set CONFIG_FBCON_IPLAN2P8 0
set CONFIG_FBCON_MAC 0
set CONFIG_FBCON_VGA_PLANES 0
set CONFIG_FBCON_VGA 0
set CONFIG_FBCON_HGA 0
set CONFIG_FBCON_FONTWIDTH8_ONLY 0
set CONFIG_FBCON_FONTS 0
set CONFIG_FONT_8x8 0
set CONFIG_FONT_8x16 0
set CONFIG_FONT_SUN8x16 0
set CONFIG_FONT_SUN12x22 0
set CONFIG_FONT_6x11 0
set CONFIG_FONT_PEARL_8x8 0
set CONFIG_FONT_ACORN_8x8 0
set CONFIG_SOUND 0
set CONFIG_SOUND_ALI5455 0
set CONFIG_SOUND_ALI5455_CODECSPDIFOUT_PCMOUTSHARE 0
set CONFIG_SOUND_ALI5455_CODECSPDIFOUT_CODECINDEPENDENTDMA 0
set CONFIG_SOUND_ALI5455_CONTROLLERSPDIFOUT_PCMOUTSHARE 0
set CONFIG_SOUND_ALI5455_CONTROLLERSPDIFOUT_CONTROLLERINDEPENDENTDMA 0
set CONFIG_SOUND_BT878 0
set CONFIG_SOUND_CMPCI 0
set CONFIG_SOUND_CMPCI_FM 0
set CONFIG_SOUND_CMPCI_FMIO 388
set CONFIG_SOUND_CMPCI_MIDI 0
set CONFIG_SOUND_CMPCI_MPUIO 330
set CONFIG_SOUND_CMPCI_JOYSTICK 0
set CONFIG_SOUND_CMPCI_CM8738 0
set CONFIG_SOUND_CMPCI_SPDIFINVERSE 0
set CONFIG_SOUND_CMPCI_SPDIFLOOP 0
set CONFIG_SOUND_CMPCI_SPEAKERS 2
set CONFIG_SOUND_CMPCI_LINE_REAR 0
set CONFIG_SOUND_CMPCI_LINE_BASS 0
set CONFIG_SOUND_EMU10K1 0
set CONFIG_MIDI_EMU10K1 0
set CONFIG_SOUND_FUSION 0
set CONFIG_SOUND_CS4281 0
set CONFIG_SOUND_ES1370 0
set CONFIG_SOUND_ES1371 0
set CONFIG_SOUND_ESSSOLO1 0
set CONFIG_SOUND_MAESTRO 0
set CONFIG_SOUND_MAESTRO3 0
set CONFIG_SOUND_FORTE 0
set CONFIG_SOUND_ICH 0
set CONFIG_SOUND_RME96XX 0
set CONFIG_SOUND_SONICVIBES 0
set CONFIG_SOUND_TRIDENT 0
set CONFIG_SOUND_MSNDCLAS 0
set CONFIG_MSNDCLAS_INIT_FILE "/etc/sound/msndinit.bin"
set CONFIG_MSNDCLAS_PERM_FILE "/etc/sound/msndperm.bin"
set CONFIG_MSNDCLAS_IRQ 5
set CONFIG_MSNDCLAS_MEM D0000
set CONFIG_MSNDCLAS_IO 290
set CONFIG_SOUND_MSNDPIN 0
set CONFIG_MSNDPIN_INIT_FILE "/etc/sound/pndspini.bin"
set CONFIG_MSNDPIN_PERM_FILE "/etc/sound/pndsperm.bin"
set CONFIG_MSNDPIN_IRQ 5
set CONFIG_MSNDPIN_MEM D0000
set CONFIG_MSNDPIN_IO 290
set CONFIG_MSNDPIN_DIGITAL 0
set CONFIG_MSNDPIN_NONPNP 0
set CONFIG_MSNDPIN_CFG 250
set CONFIG_MSNDPIN_MPU_IO 0
set CONFIG_MSNDPIN_MPU_IRQ 0
set CONFIG_MSNDPIN_IDE_IO0 0
set CONFIG_MSNDPIN_IDE_IO1 0
set CONFIG_MSNDPIN_IDE_IRQ 0
set CONFIG_MSNDPIN_JOYSTICK_IO 0
set CONFIG_MSND_FIFOSIZE 128
set CONFIG_SOUND_VIA82CXXX 0
set CONFIG_MIDI_VIA82CXXX 0
set CONFIG_SOUND_OSS 0
set CONFIG_SOUND_TRACEINIT 0
set CONFIG_SOUND_DMAP 0
set CONFIG_SOUND_AD1816 0
set CONFIG_SOUND_AD1889 0
set CONFIG_SOUND_SGALAXY 0
set CONFIG_SOUND_ADLIB 0
set CONFIG_SOUND_ACI_MIXER 0
set CONFIG_SOUND_CS4232 0
set CONFIG_SOUND_SSCAPE 0
set CONFIG_SOUND_GUS 0
set CONFIG_SOUND_GUS16 0
set CONFIG_SOUND_GUSMAX 0
set CONFIG_SOUND_VMIDI 0
set CONFIG_SOUND_TRIX 0
set CONFIG_TRIX_HAVE_BOOT 0
set CONFIG_TRIX_BOOT_FILE "/etc/sound/trxpro.hex"
set CONFIG_SOUND_MSS 0
set CONFIG_SOUND_MPU401 0
set CONFIG_SOUND_NM256 0
set CONFIG_SOUND_MAD16 0
set CONFIG_MAD16_OLDCARD 0
set CONFIG_SOUND_PAS 0
set CONFIG_PAS_JOYSTICK 0
set CONFIG_SOUND_PSS 0
set CONFIG_PSS_MIXER 0
set CONFIG_PSS_HAVE_BOOT 0
set CONFIG_PSS_BOOT_FILE "/etc/sound/dsp001.ld"
set CONFIG_SOUND_SB 0
set CONFIG_SOUND_AWE32_SYNTH 0
set CONFIG_SOUND_KAHLUA 0
set CONFIG_SOUND_WAVEFRONT 0
set CONFIG_SOUND_MAUI 0
set CONFIG_MAUI_HAVE_BOOT 0
set CONFIG_MAUI_BOOT_FILE "/etc/sound/oswf.mot"
set CONFIG_SOUND_YM3812 0
set CONFIG_SOUND_OPL3SA1 0
set CONFIG_SOUND_OPL3SA2 0
set CONFIG_SOUND_YMFPCI 0
set CONFIG_SOUND_YMFPCI_LEGACY 0
set CONFIG_SOUND_UART6850 0
set CONFIG_SOUND_AEDSP16 0
set CONFIG_SC6600 0
set CONFIG_SC6600_JOY 0
set CONFIG_SC6600_CDROM 4
set CONFIG_SC6600_CDROMBASE 0
set CONFIG_AEDSP16_SBPRO 0
set CONFIG_AEDSP16_MSS 0
set CONFIG_AEDSP16_MPU401 0
set CONFIG_SOUND_VIDC 0
set CONFIG_SOUND_WAVEARTIST 0
set CONFIG_SOUND_TVMIXER 0
set CONFIG_SOUND_AD1980 0
set CONFIG_SOUND_WM97XX 0
set CONFIG_USB 0
set CONFIG_USB_DEBUG 0
set CONFIG_USB_DEVICEFS 0
set CONFIG_USB_BANDWIDTH 0
set CONFIG_USB_EHCI_HCD 0
set CONFIG_USB_UHCI 0
set CONFIG_USB_UHCI_ALT 0
set CONFIG_USB_OHCI 0
set CONFIG_USB_SL811HS_ALT 0
set CONFIG_USB_SL811HS 0
set CONFIG_USB_AUDIO 0
set CONFIG_USB_EMI26 0
set CONFIG_USB_BLUETOOTH 0
set CONFIG_USB_MIDI 0
set CONFIG_USB_STORAGE 0
set CONFIG_USB_STORAGE_DEBUG 0
set CONFIG_USB_STORAGE_DATAFAB 0
set CONFIG_USB_STORAGE_FREECOM 0
set CONFIG_USB_STORAGE_ISD200 0
set CONFIG_USB_STORAGE_DPCM 0
set CONFIG_USB_STORAGE_HP8200e 0
set CONFIG_USB_STORAGE_SDDR09 0
set CONFIG_USB_STORAGE_SDDR55 0
set CONFIG_USB_STORAGE_JUMPSHOT 0
set CONFIG_USB_ACM 0
set CONFIG_USB_PRINTER 0
set CONFIG_USB_HID 0
set CONFIG_USB_HIDINPUT 0
set CONFIG_USB_HIDDEV 0
set CONFIG_USB_KBD 0
set CONFIG_USB_MOUSE 0
set CONFIG_USB_AIPTEK 0
set CONFIG_USB_WACOM 0
set CONFIG_USB_KBTAB 0
set CONFIG_USB_POWERMATE 0
set CONFIG_USB_DC2XX 0
set CONFIG_USB_MDC800 0
set CONFIG_USB_SCANNER 0
set CONFIG_USB_MICROTEK 0
set CONFIG_USB_HPUSBSCSI 0
set CONFIG_USB_IBMCAM 0
set CONFIG_USB_KONICAWC 0
set CONFIG_USB_OV511 0
set CONFIG_USB_PWC 0
set CONFIG_USB_SE401 0
set CONFIG_USB_STV680 0
set CONFIG_USB_W9968CF 0
set CONFIG_USB_VICAM 0
set CONFIG_USB_DSBR 0
set CONFIG_USB_DABUSB 0
set CONFIG_USB_PEGASUS 0
set CONFIG_USB_RTL8150 0
set CONFIG_USB_KAWETH 0
set CONFIG_USB_CATC 0
set CONFIG_USB_AX8817X 0
set CONFIG_USB_CDCETHER 0
set CONFIG_USB_USBNET 0
set CONFIG_USB_USS720 0
set CONFIG_USB_SERIAL 0
set CONFIG_USB_SERIAL_DEBUG 0
set CONFIG_USB_SERIAL_GENERIC 0
set CONFIG_USB_SERIAL_BELKIN 0
set CONFIG_USB_SERIAL_WHITEHEAT 0
set CONFIG_USB_SERIAL_DIGI_ACCELEPORT 0
set CONFIG_USB_SERIAL_EMPEG 0
set CONFIG_USB_SERIAL_FTDI_SIO 0
set CONFIG_USB_SERIAL_VISOR 0
set CONFIG_USB_SERIAL_IPAQ 0
set CONFIG_USB_SERIAL_IR 0
set CONFIG_USB_SERIAL_EDGEPORT 0
set CONFIG_USB_SERIAL_EDGEPORT_TI 0
set CONFIG_USB_SERIAL_KEYSPAN_PDA 0
set CONFIG_USB_SERIAL_KEYSPAN 0
set CONFIG_USB_SERIAL_KEYSPAN_USA28 0
set CONFIG_USB_SERIAL_KEYSPAN_USA28X 0
set CONFIG_USB_SERIAL_KEYSPAN_USA28XA 0
set CONFIG_USB_SERIAL_KEYSPAN_USA28XB 0
set CONFIG_USB_SERIAL_KEYSPAN_USA19 0
set CONFIG_USB_SERIAL_KEYSPAN_USA18X 0
set CONFIG_USB_SERIAL_KEYSPAN_USA19W 0
set CONFIG_USB_SERIAL_KEYSPAN_USA19QW 0
set CONFIG_USB_SERIAL_KEYSPAN_USA19QI 0
set CONFIG_USB_SERIAL_KEYSPAN_MPR 0
set CONFIG_USB_SERIAL_KEYSPAN_USA49W 0
set CONFIG_USB_SERIAL_KEYSPAN_USA49WLC 0
set CONFIG_USB_SERIAL_MCT_U232 0
set CONFIG_USB_SERIAL_KLSI 0
set CONFIG_USB_SERIAL_KOBIL_SCT 0
set CONFIG_USB_SERIAL_PL2303 0
set CONFIG_USB_SERIAL_CYBERJACK 0
set CONFIG_USB_SERIAL_XIRCOM 0
set CONFIG_USB_SERIAL_OMNINET 0
set CONFIG_USB_RIO500 0
set CONFIG_USB_AUERSWALD 0
set CONFIG_USB_TIGL 0
set CONFIG_USB_BRLVGER 0
set CONFIG_USB_LCD 0
set CONFIG_USB_SPEEDTOUCH 0
set CONFIG_USB_GADGET 0
set CONFIG_USB_NET2280 0
set CONFIG_USB_ZERO 0
set CONFIG_USB_ETH 0
set CONFIG_BLUEZ 0
set CONFIG_BLUEZ_L2CAP 0
set CONFIG_BLUEZ_SCO 0
set CONFIG_BLUEZ_RFCOMM 0
set CONFIG_BLUEZ_RFCOMM_TTY 0
set CONFIG_BLUEZ_BNEP 0
set CONFIG_BLUEZ_BNEP_MC_FILTER 0
set CONFIG_BLUEZ_BNEP_PROTO_FILTER 0
set CONFIG_BLUEZ_CMTP 0
set CONFIG_BLUEZ_HCIUSB 0
set CONFIG_BLUEZ_USB_SCO 0
set CONFIG_BLUEZ_HCIUART 0
set CONFIG_BLUEZ_HCIUART_H4 0
set CONFIG_BLUEZ_HCIUART_BCSP 0
set CONFIG_BLUEZ_HCIUART_BCSP_TXCRC 0
set CONFIG_BLUEZ_HCIBFUSB 0
set CONFIG_BLUEZ_HCIDTL1 0
set CONFIG_BLUEZ_HCIBT3C 0
set CONFIG_BLUEZ_HCIBLUECARD 0
set CONFIG_BLUEZ_HCIBTUART 0
set CONFIG_BLUEZ_HCIVHCI 0
set CONFIG_DEBUG_USER 0
set CONFIG_DEBUG_INFO 0
set CONFIG_NO_PGT_CACHE 0
set CONFIG_DEBUG_KERNEL 0
set CONFIG_DEBUG_SLAB 0
set CONFIG_MAGIC_SYSRQ 0
set CONFIG_DEBUG_SPINLOCK 0
set CONFIG_DEBUG_WAITQ 0
set CONFIG_DEBUG_BUGVERBOSE 0
set CONFIG_DEBUG_ERRORS 0
set CONFIG_DEBUG_LL 0
set CONFIG_DEBUG_DC21285_PORT 0
set CONFIG_DEBUG_CLPS711X_UART2 0
set CONFIG_LOG_BUF_SHIFT 0
set CONFIG_CRYPTO 0
set CONFIG_CRYPTO_HMAC 0
set CONFIG_CRYPTO_NULL 0
set CONFIG_CRYPTO_MD4 0
set CONFIG_CRYPTO_MD5 0
set CONFIG_CRYPTO_SHA1 0
set CONFIG_CRYPTO_SHA256 0
set CONFIG_CRYPTO_SHA512 0
set CONFIG_CRYPTO_DES 0
set CONFIG_CRYPTO_BLOWFISH 0
set CONFIG_CRYPTO_TWOFISH 0
set CONFIG_CRYPTO_SERPENT 0
set CONFIG_CRYPTO_AES 0
set CONFIG_CRYPTO_CAST5 0
set CONFIG_CRYPTO_DEFLATE 0
set CONFIG_CRYPTO_TEST 0
set CONFIG_CRC32 0
set CONFIG_ZLIB_INFLATE 0
set CONFIG_ZLIB_DEFLATE 0
set CONFIG_FW_LOADER 0
set CONFIG_ARM 4
set CONFIG_EISA 4
set CONFIG_SBUS 4
set CONFIG_MCA 4
set CONFIG_UID16 4
set CONFIG_RWSEM_GENERIC_SPINLOCK 4
set CONFIG_RWSEM_XCHGADD_ALGORITHM 4
set CONFIG_GENERIC_BUST_SPINLOCK 4
set CONFIG_GENERIC_ISA_DMA 4
set CONFIG_SA1100_H3XXX 4
set CONFIG_ARCH_IOP310 4
set CONFIG_ARCH_IOP321 4
set CONFIG_IXP425_CSR 4
set CONFIG_ARCH_EP7211 4
set CONFIG_ARCH_EP7212 4
set CONFIG_ARCH_ACORN 4
set CONFIG_FOOTBRIDGE 4
set CONFIG_FOOTBRIDGE_HOST 4
set CONFIG_FOOTBRIDGE_ADDIN 4
set CONFIG_ARCH_EBSA285 4
set CONFIG_SA1100_CONSUS 4
set CONFIG_SA1111 4
set CONFIG_FORCE_MAX_ZONEORDER 4
set CONFIG_PLD 4
set CONFIG_CPU_32 4
set CONFIG_CPU_26 4
set CONFIG_CPU_ARM922T 4
set CONFIG_ARCH_TBOX 4
set CONFIG_ARCH_NEXUSPCI 4
set CONFIG_CPU_SA1100 4
set CONFIG_CPU_32v3 4
set CONFIG_CPU_32v4 4
set CONFIG_CPU_32v5 4
set CONFIG_CPU_XSCALE 4
set CONFIG_DISCONTIGMEM 4
set CONFIG_ARCH_FTVPCI 4
set CONFIG_PCI 4
set CONFIG_PCI_AUTOCONFIG 4
set CONFIG_ISA 4
set CONFIG_ISA_DMA 4
set CONFIG_HD64465 4
set CONFIG_HD64465_PCMCIA 4
set CONFIG_8xx 4
set CONFIG_PCMCIA_M8XX 4
set CONFIG_PARPORT_PC_CML1 4
set CONFIG_DRAGONIXVZ 4
set CONFIG_PARPORT_DRAGONIX 4
set CONFIG_AMIGA 4
set CONFIG_PARPORT_AMIGA 4
set CONFIG_ZORRO 4
set CONFIG_PARPORT_MFC3 4
set CONFIG_ATARI 4
set CONFIG_PARPORT_ATARI 4
set CONFIG_GSC_LASI 4
set CONFIG_PARPORT_GSC 4
set CONFIG_SH_HD64465 4
set CONFIG_MTD_GEN_PROBE 4
set CONFIG_UCLINUX 4
set CONFIG_SPARC 4
set CONFIG_SPARC64 4
set CONFIG_MTD_SUN_UFLASH 4
set CONFIG_X86 4
set CONFIG_MTD_PNC2000 4
set CONFIG_MTD_SC520CDP 4
set CONFIG_MTD_NETSC520 4
set CONFIG_MTD_SBC_GXX 4
set CONFIG_MTD_ELAN_104NC 4
set CONFIG_MTD_DILNETPC 4
set CONFIG_MTD_DILNETPC_BOOTSIZE 4
set CONFIG_MTD_MIXMEM 4
set CONFIG_MTD_OCTAGON 4
set CONFIG_MTD_VMAX 4
set CONFIG_MTD_ADVANTA 4
set CONFIG_MTD_SCx200_DOCFLASH 4
set CONFIG_MTD_L440GX 4
set CONFIG_MTD_AMD76XROM 4
set CONFIG_MTD_ICH2ROM 4
set CONFIG_MTD_SCB2_FLASH 4
set CONFIG_PPC 4
set CONFIG_MTD_TQM8XXL 4
set CONFIG_TQM8xxL 4
set CONFIG_MTD_RPXLITE 4
set CONFIG_MTD_MBX860 4
set CONFIG_MTD_DBOX2 4
set CONFIG_MTD_CFI_FLAGADM 4
set CONFIG_MTD_REDWOOD 4
set CONFIG_MIPS 4
set CONFIG_MTD_PB1000 4
set CONFIG_MIPS_PB1000 4
set CONFIG_MTD_PB1500 4
set CONFIG_MIPS_PB1500 4
set CONFIG_MTD_PB1100 4
set CONFIG_MIPS_PB1100 4
set CONFIG_MTD_PB1500_BOOT 4
set CONFIG_MTD_PB1500_USER 4
set CONFIG_MTD_CSTM_MIPS_IXX 4
set CONFIG_MTD_CSTM_MIPS_IXX_START 4
set CONFIG_MTD_CSTM_MIPS_IXX_LEN 4
set CONFIG_MTD_CSTM_MIPS_IXX_BUSWIDTH 4
set CONFIG_MTD_OCELOT 4
set CONFIG_MOMENCO_OCELOT 4
set CONFIG_MTD_LASAT 4
set CONFIG_LASAT 4
set CONFIG_SUPERH 4
set CONFIG_MTD_SOLUTIONENGINE 4
set CONFIG_MTD_SUPERH_RESERVE 4
set CONFIG_MTD_KEYWEST 4
set CONFIG_SA1100_FORTUNET 4
set CONFIG_ARCH_CEIVA 4
set CONFIG_COBRA5272 4
set CONFIG_MTD_COBRA5272 4
set CONFIG_M5272C3 4
set CONFIG_ALPHA 4
set CONFIG_MTD_TSUNAMI 4
set CONFIG_MTD_GENPROBE 4
set CONFIG_DNP5280 4
set CONFIG_MTD_DNP5280 4
set CONFIG_BLACKFIN 4
set CONFIG_MTD_BLACKFIN_533 4
set CONFIG_BLACKFIN_EZKIT 4
set CONFIG_MTD_UCLINUX 4
set CONFIG_DECSTATION 4
set CONFIG_MTD_MS02NV 4
set CONFIG_MTD_DOCPROBE 4
set CONFIG_ARCH_EDB7312 4
set CONFIG_MTD_NAND_EDB7312 4
set CONFIG_MTD_NAND_IDS 4
set CONFIG_AMIGA_FLOPPY 4
set CONFIG_ATARI_FLOPPY 4
set CONFIG_MAC 4
set CONFIG_BLK_DEV_SWIM_IOP 4
set CONFIG_AMIGA_Z2RAM 4
set CONFIG_ATARI_ACSI 4
set CONFIG_ACSI_MULTI_LUN 4
set CONFIG_ATARI_SLM 4
set CONFIG_PARIDE_PARPORT 4
set CONFIG_IP_NF_NAT_NEEDED 4
set CONFIG_IP_NF_NAT_H323 4
set CONFIG_IP_NF_NAT_AMANDA 4
set CONFIG_IP_NF_NAT_IRC 4
set CONFIG_IP_NF_NAT_FTP 4
set CONFIG_IP_NF_NAT_PPTP 4
set CONFIG_IP_NF_NAT_PROTO_GRE 4
set CONFIG_IP_NF_NAT_TFTP 4
set CONFIG_IPV6_SCTP__ 4
set CONFIG_NET_CLS_ROUTE 4
set CONFIG_IPSEC_ALG 4
set CONFIG_IPSEC_ALG_AES 4
set CONFIG_CPU_S3C2500 4
set CONFIG_ETH_S3C2500 4
set CONFIG_UCBOOTSTRAP 4
set S3C2500_HWADDR 4
set CONFIG_CPU_S3C4510 4
set CONFIG_ETH_S3C4510 4
set CONFIG_CPU_S3C4530 4
set CONFIG_ETH_S3C4530 4
set S3C4530_HWADDR 4
set CONFIG_ARCH_C5471 4
set CONFIG_C5471_NET 4
set C5471_LAN_RATE 4
set CONFIG_MACE 4
set CONFIG_ALL_PPC 4
set CONFIG_MACE_AAUI_PORT 4
set CONFIG_BMAC 4
set CONFIG_GMAC 4
set CONFIG_4xx 4
set CONFIG_STB03xxx 4
set CONFIG_403GCX 4
set CONFIG_OAKNET 4
set CONFIG_ARIADNE 4
set CONFIG_A2065 4
set CONFIG_HYDRA 4
set CONFIG_ZORRO8390 4
set CONFIG_PARISC 4
set CONFIG_LASI_82596 4
set CONFIG_MIPS_JAZZ 4
set CONFIG_MIPS_JAZZ_SONIC 4
set CONFIG_MIPS_GT96100 4
set CONFIG_MIPS_GT96100ETH 4
set CONFIG_SOC_AU1X00 4
set CONFIG_MIPS_AU1X00_ENET 4
set CONFIG_SIBYTE_SB1250 4
set CONFIG_NET_SB1250_MAC 4
set CONFIG_SGI_IP27 4
set CONFIG_SGI_IOC3_ETH 4
set CONFIG_SGI_IP32 4
set CONFIG_SGI_O2MACE_ETH 4
set CONFIG_IA64_SGI_SN1 4
set CONFIG_STNIC 4
set CONFIG_VISWS 4
set CONFIG_TOSHIBA_JMR3927 4
set CONFIG_TC35815 4
set CONFIG_BOARD_UC5272 4
set CONFIG_ARCH_NETARM 4
set CONFIG_ETHER_NETARM 4
set NETARM_OUI 4
set CONFIG_NETARM_NS7520 4
set CONFIG_ETHER_NS7520 4
set CONFIG_SGI_IP22 4
set CONFIG_SGISEEQ 4
set CONFIG_DECLANCE 4
set CONFIG_BAGET_MIPS 4
set CONFIG_BAGETLANCE 4
set CONFIG_NEC_OSPREY 4
set CONFIG_MOMENCO_OCELOT_C 4
set CONFIG_MOMENCO_JAGUAR_ATX 4
set CONFIG_MV64340_ETH 4
set CONFIG_MV64340_ETH_0 4
set CONFIG_MV64340_ETH_1 4
set CONFIG_MV64340_ETH_2 4
set CONFIG_PPC_ISERIES 4
set CONFIG_VETH 4
set CONFIG_IBM_OCP 4
set CONFIG_IBM_OCP_ENET 4
set CONFIG_IBM_OCP_ENET_ERROR_MSG 4
set CONFIG_IBM_OCP_ENET_RX_BUFF 4
set CONFIG_IBM_OCP_ENET_TX_BUFF 4
set CONFIG_IBM_OCP_ENET_GAP 4
set CONFIG_IBM_OCP_ENET_SKB_RES 4
set CONFIG_OCP_NET 4
set CONFIG_NP405H 4
set CONFIG_NP405L 4
set CONFIG_440 4
set CONFIG_IBM_OCP_MAL_CNT 4
set CONFIG_IBM_OCP_ZMII 4
set CONFIG_X86_64 4
set CONFIG_APPLE_AIRPORT 4
set CONFIG_NET_WIRELESS 4
set CONFIG_SBNI 4
set CONFIG_SBNI_MULTILINE 4
set CONFIG_AU1000_FIR 4
set CONFIG_BLK_DEV_HD 4
set CONFIG_BLK_DEV_IDEDMA 4
set CONFIG_MIPS_ITE8172 4
set CONFIG_MIPS_IVR 4
set CONFIG_BLK_DEV_IT8172 4
set CONFIG_IA64_GENERIC 4
set CONFIG_IA64_SGI_SN2 4
set CONFIG_BLK_DEV_SGIIOC4 4
set CONFIG_BLK_DEV_IDE_PMAC 4
set CONFIG_BLK_DEV_IDE_PMAC_ATA100FIRST 4
set CONFIG_BLK_DEV_IDEDMA_PMAC 4
set CONFIG_BLK_DEV_IDEDMA_PMAC_AUTO 4
set CONFIG_SIBYTE_GENBUS_IDE 4
set CONFIG_BLK_DEV_IDE_SIBYTE 4
set CONFIG_BLK_DEV_GAYLE 4
set CONFIG_BLK_DEV_IDEDOUBLER 4
set CONFIG_BLK_DEV_BUDDHA 4
set CONFIG_BLK_DEV_FALCON_IDE 4
set CONFIG_BLK_DEV_MAC_IDE 4
set CONFIG_Q40 4
set CONFIG_BLK_DEV_Q40IDE 4
set CONFIG_BLK_DEV_MPC8xx_IDE 4
set CONFIG_EXCALIBUR 4
set CONFIG_IDEDMA_AUTO 4
set CONFIG_BLK_DEV_TIVO 4
set CONFIG_DMA_NONPCI 4
set CONFIG_BLK_DEV_PDC202XX 4
set CONFIG_BLK_DEV_NFORCE 4
set CONFIG_BLK_DEV_IDE_MODES 4
set CONFIG_SGIWD93_SCSI 4
set CONFIG_SCSI_DECNCR 4
set CONFIG_TC 4
set CONFIG_SCSI_DECSII 4
set CONFIG_MIPS32 4
set CONFIG_SCSI_IPS 4
set CONFIG_53C700_IO_MAPPED 4
set CONFIG_SCSI_LASI700 4
set CONFIG_53C700_MEM_MAPPED 4
set CONFIG_53C700_LE_ON_BE 4
set CONFIG_53C700_USE_CONSISTENT 4
set CONFIG_SCSI_ZALON 4
set CONFIG_GSC 4
set CONFIG_SCSI_SEAGATE 4
set CONFIG_SCSI_ULTRASTOR 4
set CONFIG_SCSI_MESH 4
set CONFIG_SCSI_MESH_SYNC_RATE 4
set CONFIG_SCSI_MESH_RESET_DELAY_MS 4
set CONFIG_SCSI_MAC53C94 4
set CONFIG_JAZZ_ESP 4
set CONFIG_A3000_SCSI 4
set CONFIG_A4000T_SCSI 4
set CONFIG_A2091_SCSI 4
set CONFIG_GVP11_SCSI 4
set CONFIG_CYBERSTORM_SCSI 4
set CONFIG_CYBERSTORMII_SCSI 4
set CONFIG_BLZ2060_SCSI 4
set CONFIG_BLZ1230_SCSI 4
set CONFIG_FASTLANE_SCSI 4
set CONFIG_A4091_SCSI 4
set CONFIG_WARPENGINE_SCSI 4
set CONFIG_BLZ603EPLUS_SCSI 4
set CONFIG_OKTAGON_SCSI 4
set CONFIG_PCMCIA_SCSICARD 4
set CONFIG_ISDN_BOOL 4
set CONFIG_ISDN_HISAX 4
set ARCH 4
set CONFIG_HISAX_AMD7930 4
set CONFIG_ISDN_CAPI_CAPIFS 4
set CONFIG_NIOS_SERIAL 4
set CONFIG_NIOS_SPI 4
set CONFIG_M68328 4
set CONFIG_68328_SERIAL 4
set CONFIG_68328_SERIAL_RTS_CTS 4
set CONFIG_PILOT 4
set CONFIG_68328_DIGI 4
set CONFIG_M68EZ328 4
set CONFIG_M68EZ328ADS 4
set CONFIG_68681_SERIAL 4
set CONFIG_M68VZ328 4
set CONFIG_68328_SERIAL_UART2 4
set CONFIG_68328_SERIAL_UART2_RTS_CTS 4
set CONFIG_DRAGONIX_SPI 4
set CONFIG_DRAGEN2 4
set CONFIG_DRAGEN2_EEPROM 4
set CONFIG_DRAGEN2_TS 4
set CONFIG_DRAGEN2_FPGA 4
set CONFIG_M68332 4
set CONFIG_68332_SERIAL 4
set CONFIG_M68EN302 4
set CONFIG_68302_SERIAL 4
set CONFIG_360QUICC 4
set CONFIG_M68360_SMC_UART 4
set CONFIG_M68360_SCC_UART 4
set CONFIG_M68360_UART 4
set CONFIG_CONSOLE_9600 4
set CONFIG_CONSOLE_19200 4
set CONFIG_CONSOLE_115200 4
set CONFIG_COLDFIRE 4
set CONFIG_COLDFIRE_USB 4
set CONFIG_COLDFIRE_SERIAL 4
set CONFIG_DEVELER_CDB4 4
set CONFIG_SERIAL_CDB4 4
set CONFIG_MCF_MBUS 4
set CONFIG_MCF_QSPI 4
set CONFIG_LCDTXT 4
set CONFIG_LCDDMA 4
set CONFIG_DAC0800 4
set CONFIG_M5249AUDIO 4
set CONFIG_M5272AUDIO 4
set CONFIG_DACI2S 4
set CONFIG_T6963 4
set CONFIG_T6963_PIO 4
set CONFIG_T6963_DMA 4
set CONFIG_EXP 4
set CONFIG_RESETSWITCH 4
set CONFIG_MCFWATCHDOG 4
set CONFIG_SERIAL_INTEGRATOR 4
set CONFIG_BOARD_SNDS100 4
set CONFIG_SERIAL_SAMSUNG 4
set CONFIG_SERIAL_SAMSUNG_CONSOLE 4
set CONFIG_CPU_S3C3410 4
set CONFIG_SERIAL_S3C3410 4
set CONFIG_CONSOLE_NULL 4
set CONFIG_CONSOLE_UART 4
set CONFIG_SERIAL_S3C3410_CONSOLE 4
set CONFIG_INIT_CONSOLE_SPEED 4
set CONFIG_CPU_S3C44B0X 4
set CONFIG_SERIAL_S3C44B0X 4
set CONFIG_SERIAL_S3C44B0X_CONSOLE 4
set CONFIG_SERIAL_S3C4530 4
set CONFIG_CONSOLE_UARTA 4
set CONFIG_CONSOLE_UARTB 4
set CONFIG_SERIAL_S3C4530_CONSOLE 4
set CONFIG_SERIAL_S3C2500 4
set CONFIG_CONSOLE_CUART 4
set CONFIG_CONSOLE_HUART0 4
set CONFIG_CONSOLE_HUART1 4
set CONFIG_SERIAL_S3C2500_CONSOLE 4
set CONFIG_ARCH_CNXT 4
set CONFIG_SERIAL_CNXT 4
set CONFIG_SERIAL_SPIPE 4
set CONFIG_ARCH_DSC21 4
set CONFIG_SERIAL_DSC21 4
set CONFIG_SERIAL_DSC21_CONSOLE 4
set CONFIG_SERIAL_C5471 4
set CONFIG_SERIAL_C5471_CONSOLE 4
set CONFIG_C5471_WDT 4
set CONFIG_C5471_GIO 4
set CONFIG_SERIAL_NETARM 4
set CONFIG_SERIAL_NETARM_CONSOLE 4
set CONFIG_CPU_H8300H 4
set CONFIG_CPU_H8S 4
set CONFIG_SH_SCI 4
set CONFIG_SERIAL_BF533 4
set CONFIG_SERIAL_BF535 4
set CONFIG_GSC_PS2 4
set CONFIG_SERIAL_GSC 4
set CONFIG_IA64 4
set CONFIG_SERIAL_HCDP 4
set CONFIG_ARCH_TA7S 4
set CONFIG_ARCH_TA7V 4
set CONFIG_SERIAL_TA7 4
set CONFIG_PDC_CONSOLE 4
set CONFIG_SERIAL_MUX 4
set CONFIG_SERIAL_TX3912 4
set CONFIG_SERIAL_TX3912_CONSOLE 4
set CONFIG_AU1000_UART 4
set CONFIG_AU1000_SERIAL_CONSOLE 4
set CONFIG_TXX927_SERIAL 4
set CONFIG_TXX927_SERIAL_CONSOLE 4
set CONFIG_SIBYTE_SB1250_DUART 4
set CONFIG_SIBYTE_SB1250_DUART_CONSOLE 4
set CONFIG_SB1250_DUART_OUTPUT_BUF_SIZE 4
set CONFIG_SIBYTE_SB1250_DUART_NO_PORT_1 4
set CONFIG_SGI_L1_SERIAL 4
set CONFIG_SGI_L1_SERIAL_CONSOLE 4
set CONFIG_SGI_IOC4_SERIAL 4
set CONFIG_QTRONIX_KEYBOARD 4
set CONFIG_IT8172_CIR 4
set CONFIG_PC_KEYB 4
set CONFIG_IT8172_SCR0 4
set CONFIG_IT8172_SCR1 4
set CONFIG_PPC64 4
set CONFIG_HVC_CONSOLE 4
set CONFIG_BRIQ_PANEL 4
set CONFIG_M5204 4
set CONFIG_M5206 4
set CONFIG_M5206e 4
set CONFIG_I2C_MCF_GPIO_SDA_PP0 4
set CONFIG_I2C_MCF_GPIO_SDA_PP1 4
set CONFIG_I2C_MCF_GPIO_SDA_PP2 4
set CONFIG_I2C_MCF_GPIO_SDA_PP3 4
set CONFIG_I2C_MCF_GPIO_SDA_PP4 4
set CONFIG_I2C_MCF_GPIO_SDA_PP5 4
set CONFIG_I2C_MCF_GPIO_SDA_PP6 4
set CONFIG_I2C_MCF_GPIO_SDA_PP7 4
set CONFIG_I2C_MCF_GPIO_SCL_PP0 4
set CONFIG_I2C_MCF_GPIO_SCL_PP1 4
set CONFIG_I2C_MCF_GPIO_SCL_PP2 4
set CONFIG_I2C_MCF_GPIO_SCL_PP3 4
set CONFIG_I2C_MCF_GPIO_SCL_PP4 4
set CONFIG_I2C_MCF_GPIO_SCL_PP5 4
set CONFIG_I2C_MCF_GPIO_SCL_PP6 4
set CONFIG_I2C_MCF_GPIO_SCL_PP7 4
set CONFIG_M5249 4
set CONFIG_I2C_MCF_GPIO_SDA_GPIO0 4
set CONFIG_I2C_MCF_GPIO_SDA_GPIO1 4
set CONFIG_I2C_MCF_GPIO_SDA_GPIO2 4
set CONFIG_I2C_MCF_GPIO_SDA_GPIO3 4
set CONFIG_I2C_MCF_GPIO_SDA_GPIO4 4
set CONFIG_I2C_MCF_GPIO_SDA_GPIO5 4
set CONFIG_I2C_MCF_GPIO_SDA_GPIO6 4
set CONFIG_I2C_MCF_GPIO_SDA_GPIO7 4
set CONFIG_I2C_MCF_GPIO_SDA_GPIO9 4
set CONFIG_I2C_MCF_GPIO_SDA_GPIO10 4
set CONFIG_I2C_MCF_GPIO_SDA_GPIO11 4
set CONFIG_I2C_MCF_GPIO_SDA_GPIO12 4
set CONFIG_I2C_MCF_GPIO_SDA_GPIO13 4
set CONFIG_I2C_MCF_GPIO_SDA_GPIO14 4
set CONFIG_I2C_MCF_GPIO_SDA_GPIO15 4
set CONFIG_I2C_MCF_GPIO_SDA_GPIO16 4
set CONFIG_I2C_MCF_GPIO_SDA_GPIO17 4
set CONFIG_I2C_MCF_GPIO_SDA_GPIO18 4
set CONFIG_I2C_MCF_GPIO_SDA_GPIO19 4
set CONFIG_I2C_MCF_GPIO_SDA_GPIO20 4
set CONFIG_I2C_MCF_GPIO_SDA_GPIO21 4
set CONFIG_I2C_MCF_GPIO_SDA_GPIO22 4
set CONFIG_I2C_MCF_GPIO_SDA_GPIO23 4
set CONFIG_I2C_MCF_GPIO_SDA_GPIO24 4
set CONFIG_I2C_MCF_GPIO_SDA_GPIO25 4
set CONFIG_I2C_MCF_GPIO_SDA_GPIO26 4
set CONFIG_I2C_MCF_GPIO_SDA_GPIO29 4
set CONFIG_I2C_MCF_GPIO_SDA_GPIO33 4
set CONFIG_I2C_MCF_GPIO_SDA_GPIO34 4
set CONFIG_I2C_MCF_GPIO_SDA_GPIO44 4
set CONFIG_I2C_MCF_GPIO_SDA_GPIO45 4
set CONFIG_I2C_MCF_GPIO_SDA_GPIO46 4
set CONFIG_I2C_MCF_GPIO_SDA_GPIO48 4
set CONFIG_I2C_MCF_GPIO_SDA_GPIO49 4
set CONFIG_I2C_MCF_GPIO_SDA_GPIO50 4
set CONFIG_I2C_MCF_GPIO_SDA_GPIO51 4
set CONFIG_I2C_MCF_GPIO_SDA_GPIO52 4
set CONFIG_I2C_MCF_GPIO_SDA_GPIO53 4
set CONFIG_I2C_MCF_GPIO_SDA_GPIO54 4
set CONFIG_I2C_MCF_GPIO_SDA_GPIO55 4
set CONFIG_I2C_MCF_GPIO_SDA_GPIO56 4
set CONFIG_I2C_MCF_GPIO_SDA_GPIO57 4
set CONFIG_I2C_MCF_GPIO_SDA_GPIO58 4
set CONFIG_I2C_MCF_GPIO_SDA_GPIO59 4
set CONFIG_I2C_MCF_GPIO_SDA_GPIO60 4
set CONFIG_I2C_MCF_GPIO_SDA_GPIO61 4
set CONFIG_I2C_MCF_GPIO_SDA_GPIO62 4
set CONFIG_I2C_MCF_GPIO_SCL_GPIO0 4
set CONFIG_I2C_MCF_GPIO_SCL_GPIO1 4
set CONFIG_I2C_MCF_GPIO_SCL_GPIO2 4
set CONFIG_I2C_MCF_GPIO_SCL_GPIO3 4
set CONFIG_I2C_MCF_GPIO_SCL_GPIO4 4
set CONFIG_I2C_MCF_GPIO_SCL_GPIO5 4
set CONFIG_I2C_MCF_GPIO_SCL_GPIO6 4
set CONFIG_I2C_MCF_GPIO_SCL_GPIO7 4
set CONFIG_I2C_MCF_GPIO_SCL_GPIO9 4
set CONFIG_I2C_MCF_GPIO_SCL_GPIO10 4
set CONFIG_I2C_MCF_GPIO_SCL_GPIO11 4
set CONFIG_I2C_MCF_GPIO_SCL_GPIO12 4
set CONFIG_I2C_MCF_GPIO_SCL_GPIO13 4
set CONFIG_I2C_MCF_GPIO_SCL_GPIO14 4
set CONFIG_I2C_MCF_GPIO_SCL_GPIO15 4
set CONFIG_I2C_MCF_GPIO_SCL_GPIO16 4
set CONFIG_I2C_MCF_GPIO_SCL_GPIO17 4
set CONFIG_I2C_MCF_GPIO_SCL_GPIO18 4
set CONFIG_I2C_MCF_GPIO_SCL_GPIO19 4
set CONFIG_I2C_MCF_GPIO_SCL_GPIO20 4
set CONFIG_I2C_MCF_GPIO_SCL_GPIO21 4
set CONFIG_I2C_MCF_GPIO_SCL_GPIO22 4
set CONFIG_I2C_MCF_GPIO_SCL_GPIO23 4
set CONFIG_I2C_MCF_GPIO_SCL_GPIO24 4
set CONFIG_I2C_MCF_GPIO_SCL_GPIO25 4
set CONFIG_I2C_MCF_GPIO_SCL_GPIO26 4
set CONFIG_I2C_MCF_GPIO_SCL_GPIO29 4
set CONFIG_I2C_MCF_GPIO_SCL_GPIO33 4
set CONFIG_I2C_MCF_GPIO_SCL_GPIO34 4
set CONFIG_I2C_MCF_GPIO_SCL_GPIO44 4
set CONFIG_I2C_MCF_GPIO_SCL_GPIO45 4
set CONFIG_I2C_MCF_GPIO_SCL_GPIO46 4
set CONFIG_I2C_MCF_GPIO_SCL_GPIO48 4
set CONFIG_I2C_MCF_GPIO_SCL_GPIO49 4
set CONFIG_I2C_MCF_GPIO_SCL_GPIO50 4
set CONFIG_I2C_MCF_GPIO_SCL_GPIO51 4
set CONFIG_I2C_MCF_GPIO_SCL_GPIO52 4
set CONFIG_I2C_MCF_GPIO_SCL_GPIO53 4
set CONFIG_I2C_MCF_GPIO_SCL_GPIO54 4
set CONFIG_I2C_MCF_GPIO_SCL_GPIO55 4
set CONFIG_I2C_MCF_GPIO_SCL_GPIO56 4
set CONFIG_I2C_MCF_GPIO_SCL_GPIO57 4
set CONFIG_I2C_MCF_GPIO_SCL_GPIO58 4
set CONFIG_I2C_MCF_GPIO_SCL_GPIO59 4
set CONFIG_I2C_MCF_GPIO_SCL_GPIO60 4
set CONFIG_I2C_MCF_GPIO_SCL_GPIO61 4
set CONFIG_I2C_MCF_GPIO_SCL_GPIO62 4
set CONFIG_M5272 4
set CONFIG_I2C_MCF_GPIO_SDA_PA0 4
set CONFIG_I2C_MCF_GPIO_SDA_PA1 4
set CONFIG_I2C_MCF_GPIO_SDA_PA2 4
set CONFIG_I2C_MCF_GPIO_SDA_PA3 4
set CONFIG_I2C_MCF_GPIO_SDA_PA4 4
set CONFIG_I2C_MCF_GPIO_SDA_PA5 4
set CONFIG_I2C_MCF_GPIO_SDA_PA6 4
set CONFIG_I2C_MCF_GPIO_SDA_PA7 4
set CONFIG_I2C_MCF_GPIO_SDA_PA8 4
set CONFIG_I2C_MCF_GPIO_SDA_PA9 4
set CONFIG_I2C_MCF_GPIO_SDA_PA10 4
set CONFIG_I2C_MCF_GPIO_SDA_PA11 4
set CONFIG_I2C_MCF_GPIO_SDA_PA12 4
set CONFIG_I2C_MCF_GPIO_SDA_PA13 4
set CONFIG_I2C_MCF_GPIO_SDA_PA14 4
set CONFIG_I2C_MCF_GPIO_SDA_PA15 4
set CONFIG_I2C_MCF_GPIO_SDA_PB0 4
set CONFIG_I2C_MCF_GPIO_SDA_PB1 4
set CONFIG_I2C_MCF_GPIO_SDA_PB2 4
set CONFIG_I2C_MCF_GPIO_SDA_PB3 4
set CONFIG_I2C_MCF_GPIO_SDA_PB4 4
set CONFIG_I2C_MCF_GPIO_SDA_PB5 4
set CONFIG_I2C_MCF_GPIO_SDA_PB6 4
set CONFIG_I2C_MCF_GPIO_SDA_PB7 4
set CONFIG_I2C_MCF_GPIO_SDA_PB8 4
set CONFIG_I2C_MCF_GPIO_SDA_PB9 4
set CONFIG_I2C_MCF_GPIO_SDA_PB10 4
set CONFIG_I2C_MCF_GPIO_SDA_PB11 4
set CONFIG_I2C_MCF_GPIO_SDA_PB12 4
set CONFIG_I2C_MCF_GPIO_SDA_PB13 4
set CONFIG_I2C_MCF_GPIO_SDA_PB14 4
set CONFIG_I2C_MCF_GPIO_SDA_PB15 4
set CONFIG_I2C_MCF_GPIO_SDA_PC0 4
set CONFIG_I2C_MCF_GPIO_SDA_PC1 4
set CONFIG_I2C_MCF_GPIO_SDA_PC2 4
set CONFIG_I2C_MCF_GPIO_SDA_PC3 4
set CONFIG_I2C_MCF_GPIO_SDA_PC4 4
set CONFIG_I2C_MCF_GPIO_SDA_PC5 4
set CONFIG_I2C_MCF_GPIO_SDA_PC6 4
set CONFIG_I2C_MCF_GPIO_SDA_PC7 4
set CONFIG_I2C_MCF_GPIO_SDA_PC8 4
set CONFIG_I2C_MCF_GPIO_SDA_PC9 4
set CONFIG_I2C_MCF_GPIO_SDA_PC10 4
set CONFIG_I2C_MCF_GPIO_SDA_PC11 4
set CONFIG_I2C_MCF_GPIO_SDA_PC12 4
set CONFIG_I2C_MCF_GPIO_SDA_PC13 4
set CONFIG_I2C_MCF_GPIO_SDA_PC14 4
set CONFIG_I2C_MCF_GPIO_SDA_PC15 4
set CONFIG_I2C_MCF_GPIO_SCL_PA0 4
set CONFIG_I2C_MCF_GPIO_SCL_PA1 4
set CONFIG_I2C_MCF_GPIO_SCL_PA2 4
set CONFIG_I2C_MCF_GPIO_SCL_PA3 4
set CONFIG_I2C_MCF_GPIO_SCL_PA4 4
set CONFIG_I2C_MCF_GPIO_SCL_PA5 4
set CONFIG_I2C_MCF_GPIO_SCL_PA6 4
set CONFIG_I2C_MCF_GPIO_SCL_PA7 4
set CONFIG_I2C_MCF_GPIO_SCL_PA8 4
set CONFIG_I2C_MCF_GPIO_SCL_PA9 4
set CONFIG_I2C_MCF_GPIO_SCL_PA10 4
set CONFIG_I2C_MCF_GPIO_SCL_PA11 4
set CONFIG_I2C_MCF_GPIO_SCL_PA12 4
set CONFIG_I2C_MCF_GPIO_SCL_PA13 4
set CONFIG_I2C_MCF_GPIO_SCL_PA14 4
set CONFIG_I2C_MCF_GPIO_SCL_PA15 4
set CONFIG_I2C_MCF_GPIO_SCL_PB0 4
set CONFIG_I2C_MCF_GPIO_SCL_PB1 4
set CONFIG_I2C_MCF_GPIO_SCL_PB2 4
set CONFIG_I2C_MCF_GPIO_SCL_PB3 4
set CONFIG_I2C_MCF_GPIO_SCL_PB4 4
set CONFIG_I2C_MCF_GPIO_SCL_PB5 4
set CONFIG_I2C_MCF_GPIO_SCL_PB6 4
set CONFIG_I2C_MCF_GPIO_SCL_PB7 4
set CONFIG_I2C_MCF_GPIO_SCL_PB8 4
set CONFIG_I2C_MCF_GPIO_SCL_PB9 4
set CONFIG_I2C_MCF_GPIO_SCL_PB10 4
set CONFIG_I2C_MCF_GPIO_SCL_PB11 4
set CONFIG_I2C_MCF_GPIO_SCL_PB12 4
set CONFIG_I2C_MCF_GPIO_SCL_PB13 4
set CONFIG_I2C_MCF_GPIO_SCL_PB14 4
set CONFIG_I2C_MCF_GPIO_SCL_PB15 4
set CONFIG_I2C_MCF_GPIO_SCL_PC0 4
set CONFIG_I2C_MCF_GPIO_SCL_PC1 4
set CONFIG_I2C_MCF_GPIO_SCL_PC2 4
set CONFIG_I2C_MCF_GPIO_SCL_PC3 4
set CONFIG_I2C_MCF_GPIO_SCL_PC4 4
set CONFIG_I2C_MCF_GPIO_SCL_PC5 4
set CONFIG_I2C_MCF_GPIO_SCL_PC6 4
set CONFIG_I2C_MCF_GPIO_SCL_PC7 4
set CONFIG_I2C_MCF_GPIO_SCL_PC8 4
set CONFIG_I2C_MCF_GPIO_SCL_PC9 4
set CONFIG_I2C_MCF_GPIO_SCL_PC10 4
set CONFIG_I2C_MCF_GPIO_SCL_PC11 4
set CONFIG_I2C_MCF_GPIO_SCL_PC12 4
set CONFIG_I2C_MCF_GPIO_SCL_PC13 4
set CONFIG_I2C_MCF_GPIO_SCL_PC14 4
set CONFIG_I2C_MCF_GPIO_SCL_PC15 4
set CONFIG_M5307 4
set CONFIG_M5407 4
set CONFIG_I2C_MCF_GPIO_SDA_PP8 4
set CONFIG_I2C_MCF_GPIO_SDA_PP9 4
set CONFIG_I2C_MCF_GPIO_SDA_PP10 4
set CONFIG_I2C_MCF_GPIO_SDA_PP11 4
set CONFIG_I2C_MCF_GPIO_SDA_PP12 4
set CONFIG_I2C_MCF_GPIO_SDA_PP13 4
set CONFIG_I2C_MCF_GPIO_SDA_PP14 4
set CONFIG_I2C_MCF_GPIO_SDA_PP15 4
set CONFIG_I2C_MCF_GPIO_SCL_PP8 4
set CONFIG_I2C_MCF_GPIO_SCL_PP9 4
set CONFIG_I2C_MCF_GPIO_SCL_PP10 4
set CONFIG_I2C_MCF_GPIO_SCL_PP11 4
set CONFIG_I2C_MCF_GPIO_SCL_PP12 4
set CONFIG_I2C_MCF_GPIO_SCL_PP13 4
set CONFIG_I2C_MCF_GPIO_SCL_PP14 4
set CONFIG_I2C_MCF_GPIO_SCL_PP15 4
set CONFIG_M5282 4
set CONFIG_M5280 4
set CONFIG_SCx200 4
set CONFIG_ITE_I2C_ALGO 4
set CONFIG_ITE_I2C_ADAP 4
set CONFIG_I2C_ALGO8XX 4
set CONFIG_RPXLITE 4
set CONFIG_RPXCLASSIC 4
set CONFIG_I2C_RPXLITE 4
set CONFIG_405 4
set CONFIG_I2C_PPC405_ALGO 4
set CONFIG_I2C_PPC405_ADAP 4
set CONFIG_I2C_KEYWEST 4
set CONFIG_SIBYTE_SB1xxx_SOC 4
set CONFIG_I2C_ALGO_SIBYTE 4
set CONFIG_I2C_MAX1617 4
set CONFIG_ADB 4
set CONFIG_ADB_KEYBOARD 4
set CONFIG_ADBMOUSE 4
set CONFIG_MBA44B0_TOUCH 4
set CONFIG_INPUT_AMIJOY 4
set CONFIG_INDYDOG 4
set CONFIG_FETCHOP 4
set CONFIG_AMD_RNG 4
set CONFIG_INTEL_RNG 4
set CONFIG_HW_RANDOM 4
set CONFIG_EFI_RTC 4
set CONFIG_ALPHA_BOOK1 4
set CONFIG_ZFT_COMPRESSOR 4
set CONFIG_FT_ALPHA_CLOCK 4
set CONFIG_GART_IOMMU 4
set CONFIG_AGP_NVIDIA 4
set CONFIG_AGP_I460 4
set CONFIG_AGP_HP_ZX1 4
set CONFIG_DRM_NEW 4
set CONFIG_PCMCIA_CHRDEV 4
set CONFIG_MIPS_AU1000 4
set CONFIG_AU1000_GPIO 4
set CONFIG_TS_AU1000_ADS7846 4
set CONFIG_ITE_GPIO 4
set CONFIG_MWAVE 4
set CONFIG_KBDMOUSE 4
set CONFIG_RPCMOUSE 4
set CONFIG_VIDEO_PLANB 4
set CONFIG_SIBYTE_SWARM 4
set CONFIG_VIDEO_SWARM_7114H 4
set CONFIG_VIDEO_VINO 4
set CONFIG_JBD 4
set CONFIG_RAMFS 4
set CONFIG_SUNRPC 4
set CONFIG_LOCKD 4
set CONFIG_LOCKD_V4 4
set CONFIG_ZISOFS_FS 4
set CONFIG_ARCH_S390 4
set CONFIG_IBM_PARTITION 4
set CONFIG_SH_SNAPGEAR 4
set CONFIG_SPARC32 4
set CONFIG_SMB_NLS 4
set CONFIG_NLS 4
set CONFIG_KMI_KEYB 4
set CONFIG_KMI_MOUSE 4
set CONFIG_L7200_KEYB 4
set CONFIG_PC_KEYMAP 4
set CONFIG_SH_KEYWEST 4
set CONFIG_FB_MQ200 4
set CONFIG_DUMMY_CONSOLE 4
set CONFIG_FB_PM2_CVPPC 4
set CONFIG_FB_COBRA5272 4
set CONFIG_FB_S1D13706 4
set CONFIG_APOLLO 4
set CONFIG_FB_APOLLO 4
set CONFIG_FB_Q40 4
set CONFIG_FB_AMIGA 4
set CONFIG_FB_AMIGA_OCS 4
set CONFIG_FB_AMIGA_ECS 4
set CONFIG_FB_AMIGA_AGA 4
set CONFIG_FB_CYBER 4
set CONFIG_FB_VIRGE 4
set CONFIG_FB_RETINAZ3 4
set CONFIG_FB_FM2 4
set CONFIG_FB_ATARI 4
set CONFIG_FB_OF 4
set CONFIG_FB_CONTROL 4
set CONFIG_FB_PLATINUM 4
set CONFIG_FB_VALKYRIE 4
set CONFIG_FB_CT65550 4
set CONFIG_FB_IMSTT 4
set CONFIG_FB_S3TRIO 4
set CONFIG_FB_VGA16 4
set CONFIG_FB_STI 4
set CONFIG_FB_MAC 4
set CONFIG_HP300 4
set CONFIG_FB_HP300 4
set CONFIG_FB_TGA 4
set CONFIG_FB_VESA 4
set CONFIG_FB_HGA 4
set CONFIG_VIDEO_SELECT 4
set CONFIG_FB_SGIVW 4
set CONFIG_BUS_I2C 4
set CONFIG_SUN3 4
set CONFIG_SUN3X 4
set CONFIG_FB_SUN3 4
set CONFIG_FB_BWTWO 4
set CONFIG_FB_CGSIX 4
set CONFIG_SH_DREAMCAST 4
set CONFIG_FB_PVR2 4
set CONFIG_FB_PVR2_DEBUG 4
set CONFIG_FB_E1355 4
set CONFIG_E1355_REG_BASE 4
set CONFIG_E1355_FB_BASE 4
set CONFIG_FB_MATROX_G100 4
set CONFIG_FB_ATY_GENERIC_LCD 4
set CONFIG_FB_E1356 4
set CONFIG_PB1000_CRT 4
set CONFIG_PB1000_NTSC 4
set CONFIG_PB1000_TFT 4
set CONFIG_PB1500_CRT 4
set CONFIG_PB1500_TFT 4
set CONFIG_SOC_AU1100 4
set CONFIG_FB_AU1100 4
set CONFIG_FB_MC68X328 4
set CONFIG_FB_MC68X328_MONO10 4
set CONFIG_FB_MC68X328_MONO01 4
set CONFIG_FB_MC68X328_COLOUR 4
set CONFIG_FB_SBUS 4
set CONFIG_FB_CREATOR 4
set CONFIG_FB_CGTHREE 4
set CONFIG_FB_TCX 4
set CONFIG_FB_CGFOURTEEN 4
set CONFIG_FB_P9100 4
set CONFIG_FB_LEO 4
set CONFIG_FB_PCI 4
set CONFIG_FB_IGA 4
set CONFIG_HD64461 4
set CONFIG_FB_HIT 4
set CONFIG_FB_PMAG_BA 4
set CONFIG_FB_PMAGB_B 4
set CONFIG_FB_MAXINE 4
set CONFIG_NINO 4
set CONFIG_FB_TX3912 4
set CONFIG_FB_S3C44B0X 4
set CONFIG_FB_G364 4
set CONFIG_FB_TBOX 4
set CONFIG_FBCON_STI 4
set CONFIG_SOUND_BCM_CS4297A 4
set CONFIG_SOUND_HARMONY 4
set CONFIG_SOUND_IT8172 4
set CONFIG_SOUND_VWSND 4
set CONFIG_SOUND_HAL2 4
set CONFIG_DDB5477 4
set CONFIG_SOUND_VRC5477 4
set CONFIG_SOC_AU1500 4
set CONFIG_SOUND_AU1X00 4
set CONFIG_MSNDCLAS_HAVE_BOOT 4
set CONFIG_MSNDPIN_HAVE_BOOT 4
set CONFIG_USB_GADGET_CONTROLLER 4
set CONFIG_USB_ZERO_NET2280 4
set CONFIG_USB_ZERO_PXA2XX 4
set CONFIG_USB_ZERO_GOKU 4
set CONFIG_USB_ETH_NET2280 4
set CONFIG_USB_ETH_PXA2XX 4
set CONFIG_USB_ETH_GOKU 4
set CONFIG_FRAME_POINTER 4
set CONFIG_INET_AH 4
set CONFIG_INET_ESP 4
set CONFIG_INET6_AH 4
set CONFIG_INET6_ESP 4
set CONFIG_INET_IPCOMP 4
set CONFIG_INET6_IPCOMP 4
set CONFIG_BINFMT_ZFLAT 4
proc writeconfig {file1 file2} {
	set cfg [open $file1 w]
	set autocfg [open $file2 w]
	set notmod 1
	set notset 0
	puts $cfg "#"
	puts $cfg "# Automatically generated make config: don't edit"
	puts $cfg "#"
	puts $autocfg "/*"
	puts $autocfg " * Automatically generated C config: don't edit"
	puts $autocfg " */"
	puts $autocfg "#define AUTOCONF_INCLUDED"
	global CONFIG_ARM
	global CONSTANT_Y
	write_tristate $cfg $autocfg CONFIG_ARM $CONFIG_ARM [list $notmod] 2
	global CONFIG_EISA
	global CONSTANT_N
	write_tristate $cfg $autocfg CONFIG_EISA $CONFIG_EISA [list $notmod] 2
	global CONFIG_SBUS
	write_tristate $cfg $autocfg CONFIG_SBUS $CONFIG_SBUS [list $notmod] 2
	global CONFIG_MCA
	write_tristate $cfg $autocfg CONFIG_MCA $CONFIG_MCA [list $notmod] 2
	global CONFIG_UID16
	write_tristate $cfg $autocfg CONFIG_UID16 $CONFIG_UID16 [list $notmod] 2
	global CONFIG_RWSEM_GENERIC_SPINLOCK
	write_tristate $cfg $autocfg CONFIG_RWSEM_GENERIC_SPINLOCK $CONFIG_RWSEM_GENERIC_SPINLOCK [list $notmod] 2
	global CONFIG_RWSEM_XCHGADD_ALGORITHM
	write_tristate $cfg $autocfg CONFIG_RWSEM_XCHGADD_ALGORITHM $CONFIG_RWSEM_XCHGADD_ALGORITHM [list $notmod] 2
	global CONFIG_GENERIC_BUST_SPINLOCK
	write_tristate $cfg $autocfg CONFIG_GENERIC_BUST_SPINLOCK $CONFIG_GENERIC_BUST_SPINLOCK [list $notmod] 2
	global CONFIG_GENERIC_ISA_DMA
	write_tristate $cfg $autocfg CONFIG_GENERIC_ISA_DMA $CONFIG_GENERIC_ISA_DMA [list $notmod] 2
	write_comment $cfg $autocfg "Code maturity level options"
	global CONFIG_EXPERIMENTAL
	write_tristate $cfg $autocfg CONFIG_EXPERIMENTAL $CONFIG_EXPERIMENTAL [list $notmod] 2
	global CONFIG_ADVANCED_OPTIONS
	write_tristate $cfg $autocfg CONFIG_ADVANCED_OPTIONS $CONFIG_ADVANCED_OPTIONS [list $notmod] 2
	global CONFIG_OBSOLETE
	write_tristate $cfg $autocfg CONFIG_OBSOLETE $CONFIG_OBSOLETE [list $notmod] 2
	write_comment $cfg $autocfg "Loadable module support"
	global CONFIG_MODULES
	write_tristate $cfg $autocfg CONFIG_MODULES $CONFIG_MODULES [list $notmod] 2
	global CONFIG_MODVERSIONS
	if {($CONFIG_MODULES == 1 || $CONFIG_MODULES == 4)} then {write_tristate $cfg $autocfg CONFIG_MODVERSIONS $CONFIG_MODVERSIONS [list $CONFIG_MODULES] 2 }
	global CONFIG_KMOD
	if {($CONFIG_MODULES == 1 || $CONFIG_MODULES == 4)} then {write_tristate $cfg $autocfg CONFIG_KMOD $CONFIG_KMOD [list $CONFIG_MODULES] 2 }
	write_comment $cfg $autocfg "System Type"
	global tmpvar_0
	
	if { $tmpvar_0 == "ADIFCC-based" } then { write_tristate $cfg $autocfg CONFIG_ARCH_ADIFCC 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_ARCH_ADIFCC 0 [list $notmod] 2 }
	if { $tmpvar_0 == "Anakin" } then { write_tristate $cfg $autocfg CONFIG_ARCH_ANAKIN 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_ARCH_ANAKIN 0 [list $notmod] 2 }
	if { $tmpvar_0 == "Archimedes/A5000" } then { write_tristate $cfg $autocfg CONFIG_ARCH_ARCA5K 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_ARCH_ARCA5K 0 [list $notmod] 2 }
	if { $tmpvar_0 == "Cirrus-CL-PS7500FE" } then { write_tristate $cfg $autocfg CONFIG_ARCH_CLPS7500 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_ARCH_CLPS7500 0 [list $notmod] 2 }
	if { $tmpvar_0 == "CLPS711x/EP721x-based" } then { write_tristate $cfg $autocfg CONFIG_ARCH_CLPS711X 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_ARCH_CLPS711X 0 [list $notmod] 2 }
	if { $tmpvar_0 == "Co-EBSA285" } then { write_tristate $cfg $autocfg CONFIG_ARCH_CO285 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_ARCH_CO285 0 [list $notmod] 2 }
	if { $tmpvar_0 == "EBSA-110" } then { write_tristate $cfg $autocfg CONFIG_ARCH_EBSA110 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_ARCH_EBSA110 0 [list $notmod] 2 }
	if { $tmpvar_0 == "Excalibur-ARM" } then { write_tristate $cfg $autocfg CONFIG_ARCH_CAMELOT 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_ARCH_CAMELOT 0 [list $notmod] 2 }
	if { $tmpvar_0 == "FootBridge" } then { write_tristate $cfg $autocfg CONFIG_ARCH_FOOTBRIDGE 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_ARCH_FOOTBRIDGE 0 [list $notmod] 2 }
	if { $tmpvar_0 == "Integrator" } then { write_tristate $cfg $autocfg CONFIG_ARCH_INTEGRATOR 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_ARCH_INTEGRATOR 0 [list $notmod] 2 }
	if { $tmpvar_0 == "KS8695" } then { write_tristate $cfg $autocfg CONFIG_ARCH_KS8695 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_ARCH_KS8695 0 [list $notmod] 2 }
	if { $tmpvar_0 == "IOP3xx-based" } then { write_tristate $cfg $autocfg CONFIG_ARCH_IOP3XX 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_ARCH_IOP3XX 0 [list $notmod] 2 }
	if { $tmpvar_0 == "IXP1200-based" } then { write_tristate $cfg $autocfg CONFIG_ARCH_IXP1200 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_ARCH_IXP1200 0 [list $notmod] 2 }
	if { $tmpvar_0 == "IXP2000-based" } then { write_tristate $cfg $autocfg CONFIG_ARCH_IXP2000 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_ARCH_IXP2000 0 [list $notmod] 2 }
	if { $tmpvar_0 == "IXP425-based" } then { write_tristate $cfg $autocfg CONFIG_ARCH_IXP425 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_ARCH_IXP425 0 [list $notmod] 2 }
	if { $tmpvar_0 == "Omaha" } then { write_tristate $cfg $autocfg CONFIG_ARCH_OMAHA 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_ARCH_OMAHA 0 [list $notmod] 2 }
	if { $tmpvar_0 == "LinkUp-L7200" } then { write_tristate $cfg $autocfg CONFIG_ARCH_L7200 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_ARCH_L7200 0 [list $notmod] 2 }
	if { $tmpvar_0 == "Motorola-MX1ADS" } then { write_tristate $cfg $autocfg CONFIG_ARCH_MX1ADS 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_ARCH_MX1ADS 0 [list $notmod] 2 }
	if { $tmpvar_0 == "RiscPC" } then { write_tristate $cfg $autocfg CONFIG_ARCH_RPC 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_ARCH_RPC 0 [list $notmod] 2 }
	if { $tmpvar_0 == "RiscStation" } then { write_tristate $cfg $autocfg CONFIG_ARCH_RISCSTATION 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_ARCH_RISCSTATION 0 [list $notmod] 2 }
	if { $tmpvar_0 == "SA1100-based" } then { write_tristate $cfg $autocfg CONFIG_ARCH_SA1100 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_ARCH_SA1100 0 [list $notmod] 2 }
	if { $tmpvar_0 == "Shark" } then { write_tristate $cfg $autocfg CONFIG_ARCH_SHARK 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_ARCH_SHARK 0 [list $notmod] 2 }
	if { $tmpvar_0 == "AT91RM9200-based" } then { write_tristate $cfg $autocfg CONFIG_ARCH_AT91RM9200 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_ARCH_AT91RM9200 0 [list $notmod] 2 }
	write_comment $cfg $autocfg "Archimedes/A5000 Implementations"
	write_comment $cfg $autocfg "Archimedes/A5000 Implementations (select only ONE)"
	global CONFIG_ARCH_ARC
	global CONFIG_ARCH_ARCA5K
	if {($CONFIG_ARCH_ARCA5K == 1 || $CONFIG_ARCH_ARCA5K == 4)} then {write_tristate $cfg $autocfg CONFIG_ARCH_ARC $CONFIG_ARCH_ARC [list $CONFIG_ARCH_ARCA5K] 2 }
	global CONFIG_ARCH_A5K
	if {($CONFIG_ARCH_ARCA5K == 1 || $CONFIG_ARCH_ARCA5K == 4)} then {write_tristate $cfg $autocfg CONFIG_ARCH_A5K $CONFIG_ARCH_A5K [list $CONFIG_ARCH_ARCA5K] 2 }
	write_comment $cfg $autocfg "Footbridge Implementations"
	global CONFIG_ARCH_CATS
	global CONFIG_ARCH_FOOTBRIDGE
	if {($CONFIG_ARCH_FOOTBRIDGE == 1 || $CONFIG_ARCH_FOOTBRIDGE == 4)} then {write_tristate $cfg $autocfg CONFIG_ARCH_CATS $CONFIG_ARCH_CATS [list $CONFIG_ARCH_FOOTBRIDGE] 2 }
	global CONFIG_ARCH_PERSONAL_SERVER
	if {($CONFIG_ARCH_FOOTBRIDGE == 1 || $CONFIG_ARCH_FOOTBRIDGE == 4)} then {write_tristate $cfg $autocfg CONFIG_ARCH_PERSONAL_SERVER $CONFIG_ARCH_PERSONAL_SERVER [list $CONFIG_ARCH_FOOTBRIDGE] 2 }
	global CONFIG_ARCH_EBSA285_ADDIN
	if {($CONFIG_ARCH_FOOTBRIDGE == 1 || $CONFIG_ARCH_FOOTBRIDGE == 4)} then {write_tristate $cfg $autocfg CONFIG_ARCH_EBSA285_ADDIN $CONFIG_ARCH_EBSA285_ADDIN [list $CONFIG_ARCH_FOOTBRIDGE] 2 }
	global CONFIG_ARCH_EBSA285_HOST
	if {($CONFIG_ARCH_FOOTBRIDGE == 1 || $CONFIG_ARCH_FOOTBRIDGE == 4)} then {write_tristate $cfg $autocfg CONFIG_ARCH_EBSA285_HOST $CONFIG_ARCH_EBSA285_HOST [list $CONFIG_ARCH_FOOTBRIDGE] 2 }
	global CONFIG_ARCH_NETWINDER
	if {($CONFIG_ARCH_FOOTBRIDGE == 1 || $CONFIG_ARCH_FOOTBRIDGE == 4)} then {write_tristate $cfg $autocfg CONFIG_ARCH_NETWINDER $CONFIG_ARCH_NETWINDER [list $CONFIG_ARCH_FOOTBRIDGE] 2 }
	write_comment $cfg $autocfg "SA11x0 Implementations"
	global CONFIG_SA1100_ACCELENT
	global CONFIG_ARCH_SA1100
	if {($CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_SA1100 == 4)} then {write_tristate $cfg $autocfg CONFIG_SA1100_ACCELENT $CONFIG_SA1100_ACCELENT [list $CONFIG_ARCH_SA1100] 2 }
	global CONFIG_SA1100_ASSABET
	if {($CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_SA1100 == 4)} then {write_tristate $cfg $autocfg CONFIG_SA1100_ASSABET $CONFIG_SA1100_ASSABET [list $CONFIG_ARCH_SA1100] 2 }
	global CONFIG_ASSABET_NEPONSET
	if {($CONFIG_SA1100_ASSABET == 1 || $CONFIG_SA1100_ASSABET == 4)} then {write_tristate $cfg $autocfg CONFIG_ASSABET_NEPONSET $CONFIG_ASSABET_NEPONSET [list $CONFIG_SA1100_ASSABET] 2 }
	global CONFIG_SA1100_ADSAGC
	if {($CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_SA1100 == 4)} then {write_tristate $cfg $autocfg CONFIG_SA1100_ADSAGC $CONFIG_SA1100_ADSAGC [list $CONFIG_ARCH_SA1100] 2 }
	global CONFIG_SA1100_ADSBITSY
	if {($CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_SA1100 == 4)} then {write_tristate $cfg $autocfg CONFIG_SA1100_ADSBITSY $CONFIG_SA1100_ADSBITSY [list $CONFIG_ARCH_SA1100] 2 }
	global CONFIG_SA1100_ADSBITSYPLUS
	if {($CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_SA1100 == 4)} then {write_tristate $cfg $autocfg CONFIG_SA1100_ADSBITSYPLUS $CONFIG_SA1100_ADSBITSYPLUS [list $CONFIG_ARCH_SA1100] 2 }
	global CONFIG_SA1100_BRUTUS
	if {($CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_SA1100 == 4)} then {write_tristate $cfg $autocfg CONFIG_SA1100_BRUTUS $CONFIG_SA1100_BRUTUS [list $CONFIG_ARCH_SA1100] 2 }
	global CONFIG_SA1100_CEP
	if {($CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_SA1100 == 4)} then {write_tristate $cfg $autocfg CONFIG_SA1100_CEP $CONFIG_SA1100_CEP [list $CONFIG_ARCH_SA1100] 2 }
	global CONFIG_SA1100_CERF
	if {($CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_SA1100 == 4)} then {write_tristate $cfg $autocfg CONFIG_SA1100_CERF $CONFIG_SA1100_CERF [list $CONFIG_ARCH_SA1100] 2 }
	global tmpvar_1
	if {($CONFIG_SA1100_CERF == 1)} then {
	if { $tmpvar_1 == "8MB" } then { write_tristate $cfg $autocfg CONFIG_SA1100_CERF_8MB 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_SA1100_CERF_8MB 0 [list $notmod] 2 }
	if { $tmpvar_1 == "16MB" } then { write_tristate $cfg $autocfg CONFIG_SA1100_CERF_16MB 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_SA1100_CERF_16MB 0 [list $notmod] 2 }
	if { $tmpvar_1 == "32MB" } then { write_tristate $cfg $autocfg CONFIG_SA1100_CERF_32MB 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_SA1100_CERF_32MB 0 [list $notmod] 2 }
	if { $tmpvar_1 == "64MB" } then { write_tristate $cfg $autocfg CONFIG_SA1100_CERF_64MB 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_SA1100_CERF_64MB 0 [list $notmod] 2 }}
	global tmpvar_2
	if {($CONFIG_SA1100_CERF == 1)} then {
	if { $tmpvar_2 == "8MB" } then { write_tristate $cfg $autocfg CONFIG_SA1100_CERF_FLASH_8MB 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_SA1100_CERF_FLASH_8MB 0 [list $notmod] 2 }
	if { $tmpvar_2 == "16MB" } then { write_tristate $cfg $autocfg CONFIG_SA1100_CERF_FLASH_16MB 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_SA1100_CERF_FLASH_16MB 0 [list $notmod] 2 }
	if { $tmpvar_2 == "32MB" } then { write_tristate $cfg $autocfg CONFIG_SA1100_CERF_FLASH_32MB 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_SA1100_CERF_FLASH_32MB 0 [list $notmod] 2 }}
	global CONFIG_SA1100_CERF_CPLD
	if {($CONFIG_SA1100_CERF == 1)} then {write_tristate $cfg $autocfg CONFIG_SA1100_CERF_CPLD $CONFIG_SA1100_CERF_CPLD [list $notmod] 2 }
	global CONFIG_SA1100_H3100
	if {($CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_SA1100 == 4)} then {write_tristate $cfg $autocfg CONFIG_SA1100_H3100 $CONFIG_SA1100_H3100 [list $CONFIG_ARCH_SA1100] 2 }
	global CONFIG_SA1100_H3600
	if {($CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_SA1100 == 4)} then {write_tristate $cfg $autocfg CONFIG_SA1100_H3600 $CONFIG_SA1100_H3600 [list $CONFIG_ARCH_SA1100] 2 }
	global CONFIG_SA1100_H3800
	if {($CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_SA1100 == 4)} then {write_tristate $cfg $autocfg CONFIG_SA1100_H3800 $CONFIG_SA1100_H3800 [list $CONFIG_ARCH_SA1100] 2 }
	global CONFIG_SA1100_H3XXX
	if {($CONFIG_SA1100_H3100 == 1 || $CONFIG_SA1100_H3600 == 1 || $CONFIG_SA1100_H3800 == 1)} then {write_tristate $cfg $autocfg CONFIG_SA1100_H3XXX $CONSTANT_Y [list $notmod] 2 }
	if {($CONFIG_SA1100_H3100 != 1 && $CONFIG_SA1100_H3600 != 1 && $CONFIG_SA1100_H3800 != 1)} then {write_tristate $cfg $autocfg CONFIG_SA1100_H3XXX $CONSTANT_N [list $notmod] 2 }
	global CONFIG_H3600_SLEEVE
	if {($CONFIG_SA1100_H3600 == 1 || $CONFIG_SA1100_H3600 == 2 || $CONFIG_SA1100_H3600 == 4)} then {write_tristate $cfg $autocfg CONFIG_H3600_SLEEVE $CONFIG_H3600_SLEEVE [list $CONFIG_SA1100_H3600] 2 }
	global CONFIG_SA1100_EXTENEX1
	if {($CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_SA1100 == 4)} then {write_tristate $cfg $autocfg CONFIG_SA1100_EXTENEX1 $CONFIG_SA1100_EXTENEX1 [list $CONFIG_ARCH_SA1100] 2 }
	global CONFIG_SA1100_EXTENEX1_16MB
	if {($CONFIG_SA1100_EXTENEX1 == 1)} then {write_tristate $cfg $autocfg CONFIG_SA1100_EXTENEX1_16MB $CONFIG_SA1100_EXTENEX1_16MB [list $notmod] 2 }
	global CONFIG_SA1100_FLEXANET
	if {($CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_SA1100 == 4)} then {write_tristate $cfg $autocfg CONFIG_SA1100_FLEXANET $CONFIG_SA1100_FLEXANET [list $CONFIG_ARCH_SA1100] 2 }
	global CONFIG_SA1100_FREEBIRD
	if {($CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_SA1100 == 4)} then {write_tristate $cfg $autocfg CONFIG_SA1100_FREEBIRD $CONFIG_SA1100_FREEBIRD [list $CONFIG_ARCH_SA1100] 2 }
	global CONFIG_SA1100_FRODO
	if {($CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_SA1100 == 4)} then {write_tristate $cfg $autocfg CONFIG_SA1100_FRODO $CONFIG_SA1100_FRODO [list $CONFIG_ARCH_SA1100] 2 }
	global CONFIG_SA1100_GRAPHICSCLIENT
	if {($CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_SA1100 == 4)} then {write_tristate $cfg $autocfg CONFIG_SA1100_GRAPHICSCLIENT $CONFIG_SA1100_GRAPHICSCLIENT [list $CONFIG_ARCH_SA1100] 2 }
	global CONFIG_SA1100_GRAPHICSMASTER
	if {($CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_SA1100 == 4)} then {write_tristate $cfg $autocfg CONFIG_SA1100_GRAPHICSMASTER $CONFIG_SA1100_GRAPHICSMASTER [list $CONFIG_ARCH_SA1100] 2 }
	global CONFIG_SA1100_HACKKIT
	if {($CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_SA1100 == 4)} then {write_tristate $cfg $autocfg CONFIG_SA1100_HACKKIT $CONFIG_SA1100_HACKKIT [list $CONFIG_ARCH_SA1100] 2 }
	global CONFIG_SA1100_BADGE4
	if {($CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_SA1100 == 4)} then {write_tristate $cfg $autocfg CONFIG_SA1100_BADGE4 $CONFIG_SA1100_BADGE4 [list $CONFIG_ARCH_SA1100] 2 }
	global CONFIG_SA1100_JORNADA720
	if {($CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_SA1100 == 4)} then {write_tristate $cfg $autocfg CONFIG_SA1100_JORNADA720 $CONFIG_SA1100_JORNADA720 [list $CONFIG_ARCH_SA1100] 2 }
	global CONFIG_SA1100_HUW_WEBPANEL
	if {($CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_SA1100 == 4)} then {write_tristate $cfg $autocfg CONFIG_SA1100_HUW_WEBPANEL $CONFIG_SA1100_HUW_WEBPANEL [list $CONFIG_ARCH_SA1100] 2 }
	global CONFIG_SA1100_ITSY
	if {($CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_SA1100 == 4)} then {write_tristate $cfg $autocfg CONFIG_SA1100_ITSY $CONFIG_SA1100_ITSY [list $CONFIG_ARCH_SA1100] 2 }
	global CONFIG_SA1100_LART
	if {($CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_SA1100 == 4)} then {write_tristate $cfg $autocfg CONFIG_SA1100_LART $CONFIG_SA1100_LART [list $CONFIG_ARCH_SA1100] 2 }
	global CONFIG_SA1100_NANOENGINE
	if {($CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_SA1100 == 4)} then {write_tristate $cfg $autocfg CONFIG_SA1100_NANOENGINE $CONFIG_SA1100_NANOENGINE [list $CONFIG_ARCH_SA1100] 2 }
	global CONFIG_SA1100_OMNIMETER
	if {($CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_SA1100 == 4)} then {write_tristate $cfg $autocfg CONFIG_SA1100_OMNIMETER $CONFIG_SA1100_OMNIMETER [list $CONFIG_ARCH_SA1100] 2 }
	global CONFIG_SA1100_PANGOLIN
	if {($CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_SA1100 == 4)} then {write_tristate $cfg $autocfg CONFIG_SA1100_PANGOLIN $CONFIG_SA1100_PANGOLIN [list $CONFIG_ARCH_SA1100] 2 }
	global CONFIG_SA1100_PLEB
	if {($CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_SA1100 == 4)} then {write_tristate $cfg $autocfg CONFIG_SA1100_PLEB $CONFIG_SA1100_PLEB [list $CONFIG_ARCH_SA1100] 2 }
	global CONFIG_SA1100_PT_SYSTEM3
	if {($CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_SA1100 == 4)} then {write_tristate $cfg $autocfg CONFIG_SA1100_PT_SYSTEM3 $CONFIG_SA1100_PT_SYSTEM3 [list $CONFIG_ARCH_SA1100] 2 }
	global CONFIG_SA1100_SHANNON
	if {($CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_SA1100 == 4)} then {write_tristate $cfg $autocfg CONFIG_SA1100_SHANNON $CONFIG_SA1100_SHANNON [list $CONFIG_ARCH_SA1100] 2 }
	global CONFIG_SA1100_SHERMAN
	if {($CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_SA1100 == 4)} then {write_tristate $cfg $autocfg CONFIG_SA1100_SHERMAN $CONFIG_SA1100_SHERMAN [list $CONFIG_ARCH_SA1100] 2 }
	global CONFIG_SA1100_SIMPAD
	if {($CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_SA1100 == 4)} then {write_tristate $cfg $autocfg CONFIG_SA1100_SIMPAD $CONFIG_SA1100_SIMPAD [list $CONFIG_ARCH_SA1100] 2 }
	global CONFIG_SA1100_SIMPUTER
	if {($CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_SA1100 == 4)} then {write_tristate $cfg $autocfg CONFIG_SA1100_SIMPUTER $CONFIG_SA1100_SIMPUTER [list $CONFIG_ARCH_SA1100] 2 }
	global CONFIG_SA1100_PFS168
	if {($CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_SA1100 == 4)} then {write_tristate $cfg $autocfg CONFIG_SA1100_PFS168 $CONFIG_SA1100_PFS168 [list $CONFIG_ARCH_SA1100] 2 }
	global CONFIG_SA1100_VICTOR
	if {($CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_SA1100 == 4)} then {write_tristate $cfg $autocfg CONFIG_SA1100_VICTOR $CONFIG_SA1100_VICTOR [list $CONFIG_ARCH_SA1100] 2 }
	global CONFIG_SA1100_XP860
	if {($CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_SA1100 == 4)} then {write_tristate $cfg $autocfg CONFIG_SA1100_XP860 $CONFIG_SA1100_XP860 [list $CONFIG_ARCH_SA1100] 2 }
	global CONFIG_SA1100_YOPY
	if {($CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_SA1100 == 4)} then {write_tristate $cfg $autocfg CONFIG_SA1100_YOPY $CONFIG_SA1100_YOPY [list $CONFIG_ARCH_SA1100] 2 }
	global CONFIG_SA1100_USB
	if {($CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_SA1100 == 2 || $CONFIG_ARCH_SA1100 == 4)} then {write_tristate $cfg $autocfg CONFIG_SA1100_USB $CONFIG_SA1100_USB [list $CONFIG_ARCH_SA1100] 2 }
	global CONFIG_SA1100_USB_NETLINK
	if {($CONFIG_SA1100_USB == 1 || $CONFIG_SA1100_USB == 2 || $CONFIG_SA1100_USB == 4)} then {write_tristate $cfg $autocfg CONFIG_SA1100_USB_NETLINK $CONFIG_SA1100_USB_NETLINK [list $CONFIG_SA1100_USB] 2 }
	global CONFIG_SA1100_USB_CHAR
	if {($CONFIG_SA1100_USB == 1 || $CONFIG_SA1100_USB == 2 || $CONFIG_SA1100_USB == 4)} then {write_tristate $cfg $autocfg CONFIG_SA1100_USB_CHAR $CONFIG_SA1100_USB_CHAR [list $CONFIG_SA1100_USB] 2 }
	global CONFIG_SA1100_SSP
	if {($CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_SA1100 == 2 || $CONFIG_ARCH_SA1100 == 4)} then {write_tristate $cfg $autocfg CONFIG_SA1100_SSP $CONFIG_SA1100_SSP [list $CONFIG_ARCH_SA1100] 2 }
	global CONFIG_ARCH_IOP3XX
	if {($CONFIG_ARCH_IOP3XX == 1)} then {write_comment $cfg $autocfg "IOP3xx Implementation Options"}
	global tmpvar_3
	if {($CONFIG_ARCH_IOP3XX == 1)} then {
	if { $tmpvar_3 == "IQ80310" } then { write_tristate $cfg $autocfg CONFIG_ARCH_IQ80310 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_ARCH_IQ80310 0 [list $notmod] 2 }
	if { $tmpvar_3 == "IQ80321" } then { write_tristate $cfg $autocfg CONFIG_ARCH_IQ80321 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_ARCH_IQ80321 0 [list $notmod] 2 }}
	global CONFIG_ARCH_IOP310
	global CONFIG_ARCH_IQ80310
	if {($CONFIG_ARCH_IOP3XX == 1) && ($CONFIG_ARCH_IQ80310 == 1)} then {write_tristate $cfg $autocfg CONFIG_ARCH_IOP310 $CONSTANT_Y [list $notmod] 2 }
	if {($CONFIG_ARCH_IOP3XX == 1) && ($CONFIG_ARCH_IQ80310 != 1)} then {write_tristate $cfg $autocfg CONFIG_ARCH_IOP310 $CONSTANT_N [list $notmod] 2 }
	global CONFIG_ARCH_IOP321
	global CONFIG_ARCH_IQ80321
	if {($CONFIG_ARCH_IOP3XX == 1) && ($CONFIG_ARCH_IQ80321 == 1)} then {write_tristate $cfg $autocfg CONFIG_ARCH_IOP321 $CONSTANT_Y [list $notmod] 2 }
	if {($CONFIG_ARCH_IOP3XX == 1) && ($CONFIG_ARCH_IQ80321 != 1)} then {write_tristate $cfg $autocfg CONFIG_ARCH_IOP321 $CONSTANT_N [list $notmod] 2 }
	if {($CONFIG_ARCH_IOP3XX == 1)} then {write_comment $cfg $autocfg "IOP3xx Chipset Features"}
	global CONFIG_IOP3XX_AAU
	if {($CONFIG_ARCH_IOP3XX == 1) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 4)} then {write_tristate $cfg $autocfg CONFIG_IOP3XX_AAU $CONFIG_IOP3XX_AAU [list $CONFIG_EXPERIMENTAL] 2 }
	global CONFIG_IOP3XX_DMA
	if {($CONFIG_ARCH_IOP3XX == 1) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 4)} then {write_tristate $cfg $autocfg CONFIG_IOP3XX_DMA $CONFIG_IOP3XX_DMA [list $CONFIG_EXPERIMENTAL] 2 }
	global CONFIG_IOP3XX_MU
	if {($CONFIG_ARCH_IOP3XX == 1) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 4)} then {write_tristate $cfg $autocfg CONFIG_IOP3XX_MU $CONFIG_IOP3XX_MU [list $CONFIG_EXPERIMENTAL] 2 }
	global CONFIG_IOP3XX_PMON
	if {($CONFIG_ARCH_IOP3XX == 1) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 4)} then {write_tristate $cfg $autocfg CONFIG_IOP3XX_PMON $CONFIG_IOP3XX_PMON [list $CONFIG_EXPERIMENTAL] 2 }
	global CONFIG_ARCH_IXP425
	if {($CONFIG_ARCH_IXP425 == 1)} then {write_comment $cfg $autocfg "IXP425 Implementation Options"}
	global tmpvar_4
	if {($CONFIG_ARCH_IXP425 == 1)} then {
	if { $tmpvar_4 == "IXDP425" } then { write_tristate $cfg $autocfg CONFIG_ARCH_IXDP425 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_ARCH_IXDP425 0 [list $notmod] 2 }
	if { $tmpvar_4 == "IXCDP1100" } then { write_tristate $cfg $autocfg CONFIG_ARCH_IXCDP1100 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_ARCH_IXCDP1100 0 [list $notmod] 2 }
	if { $tmpvar_4 == "PrPMC1100" } then { write_tristate $cfg $autocfg CONFIG_ARCH_PRPMC1100 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_ARCH_PRPMC1100 0 [list $notmod] 2 }
	if { $tmpvar_4 == "COYOTE" } then { write_tristate $cfg $autocfg CONFIG_ARCH_ADI_COYOTE 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_ARCH_ADI_COYOTE 0 [list $notmod] 2 }
	if { $tmpvar_4 == "SE4000" } then { write_tristate $cfg $autocfg CONFIG_ARCH_SE4000 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_ARCH_SE4000 0 [list $notmod] 2 }}
	global CONFIG_IXP425_CSR
	global CONSTANT_M
	if {($CONFIG_ARCH_IXP425 == 1)} then {write_tristate $cfg $autocfg CONFIG_IXP425_CSR $CONSTANT_M [list $notmod] 2 }
	global CONFIG_ARCH_IXP1200
	if {($CONFIG_ARCH_IXP1200 == 1)} then {write_comment $cfg $autocfg "IXP1200 Implementation Options"}
	global CONFIG_IXP1200_SDRAM_BASE
	if {($CONFIG_ARCH_IXP1200 == 1)} then {write_hex $cfg $autocfg CONFIG_IXP1200_SDRAM_BASE $CONFIG_IXP1200_SDRAM_BASE $notmod }
	global CONFIG_IXP1200_SDRAM_SIZE
	if {($CONFIG_ARCH_IXP1200 == 1)} then {write_int $cfg $autocfg CONFIG_IXP1200_SDRAM_SIZE $CONFIG_IXP1200_SDRAM_SIZE $notmod }
	global tmpvar_5
	global CONFIG_ARCH_IXP2000
	if {($CONFIG_ARCH_IXP2000 == 1)} then {
	if { $tmpvar_5 == "IXDP2400" } then { write_tristate $cfg $autocfg CONFIG_ARCH_IXDP2400 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_ARCH_IXDP2400 0 [list $notmod] 2 }
	if { $tmpvar_5 == "IXDP2800" } then { write_tristate $cfg $autocfg CONFIG_ARCH_IXDP2800 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_ARCH_IXDP2800 0 [list $notmod] 2 }}
	global CONFIG_IXP2000_PCI_IO_ERRATA
	if {($CONFIG_ARCH_IXP2000 == 1)} then {write_tristate $cfg $autocfg CONFIG_IXP2000_PCI_IO_ERRATA $CONFIG_IXP2000_PCI_IO_ERRATA [list $notmod] 2 }
	global CONFIG_ARCH_KS8695
	if {($CONFIG_ARCH_KS8695 == 1)} then {write_comment $cfg $autocfg "KS8695 Implementation Options"}
	global tmpvar_6
	if {($CONFIG_ARCH_KS8695 == 1)} then {
	if { $tmpvar_6 == "KS8695" } then { write_tristate $cfg $autocfg CONFIG_MACH_KS8695 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_MACH_KS8695 0 [list $notmod] 2 }
	if { $tmpvar_6 == "LITE300" } then { write_tristate $cfg $autocfg CONFIG_MACH_LITE300 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_MACH_LITE300 0 [list $notmod] 2 }}
	write_comment $cfg $autocfg "AT91RM9200 Implementations"
	global CONFIG_ARCH_AT91RM9200DK
	global CONFIG_ARCH_AT91RM9200
	if {($CONFIG_ARCH_AT91RM9200 == 1 || $CONFIG_ARCH_AT91RM9200 == 4)} then {write_tristate $cfg $autocfg CONFIG_ARCH_AT91RM9200DK $CONFIG_ARCH_AT91RM9200DK [list $CONFIG_ARCH_AT91RM9200] 2 }
	write_comment $cfg $autocfg "CLPS711X/EP721X Implementations"
	global CONFIG_ARCH_AUTCPU12
	global CONFIG_ARCH_CLPS711X
	if {($CONFIG_ARCH_CLPS711X == 1 || $CONFIG_ARCH_CLPS711X == 4)} then {write_tristate $cfg $autocfg CONFIG_ARCH_AUTCPU12 $CONFIG_ARCH_AUTCPU12 [list $CONFIG_ARCH_CLPS711X] 2 }
	global CONFIG_ARCH_CDB89712
	if {($CONFIG_ARCH_CLPS711X == 1 || $CONFIG_ARCH_CLPS711X == 4)} then {write_tristate $cfg $autocfg CONFIG_ARCH_CDB89712 $CONFIG_ARCH_CDB89712 [list $CONFIG_ARCH_CLPS711X] 2 }
	global CONFIG_ARCH_CLEP7312
	if {($CONFIG_ARCH_CLPS711X == 1 || $CONFIG_ARCH_CLPS711X == 4)} then {write_tristate $cfg $autocfg CONFIG_ARCH_CLEP7312 $CONFIG_ARCH_CLEP7312 [list $CONFIG_ARCH_CLPS711X] 2 }
	global CONFIG_ARCH_EDB7211
	if {($CONFIG_ARCH_CLPS711X == 1 || $CONFIG_ARCH_CLPS711X == 4)} then {write_tristate $cfg $autocfg CONFIG_ARCH_EDB7211 $CONFIG_ARCH_EDB7211 [list $CONFIG_ARCH_CLPS711X] 2 }
	global CONFIG_ARCH_FORTUNET
	if {($CONFIG_ARCH_CLPS711X == 1 || $CONFIG_ARCH_CLPS711X == 4)} then {write_tristate $cfg $autocfg CONFIG_ARCH_FORTUNET $CONFIG_ARCH_FORTUNET [list $CONFIG_ARCH_CLPS711X] 2 }
	global CONFIG_ARCH_GUIDEA07
	if {($CONFIG_ARCH_CLPS711X == 1 || $CONFIG_ARCH_CLPS711X == 4)} then {write_tristate $cfg $autocfg CONFIG_ARCH_GUIDEA07 $CONFIG_ARCH_GUIDEA07 [list $CONFIG_ARCH_CLPS711X] 2 }
	global CONFIG_ARCH_P720T
	if {($CONFIG_ARCH_CLPS711X == 1 || $CONFIG_ARCH_CLPS711X == 4)} then {write_tristate $cfg $autocfg CONFIG_ARCH_P720T $CONFIG_ARCH_P720T [list $CONFIG_ARCH_CLPS711X] 2 }
	global CONFIG_ARCH_EP7211
	if {($CONFIG_ARCH_EDB7211 == 1)} then {write_tristate $cfg $autocfg CONFIG_ARCH_EP7211 $CONSTANT_Y [list $notmod] 2 }
	if {($CONFIG_ARCH_EDB7211 != 1)} then {write_tristate $cfg $autocfg CONFIG_ARCH_EP7211 $CONSTANT_N [list $notmod] 2 }
	global CONFIG_ARCH_EP7212
	if {($CONFIG_ARCH_P720T == 1)} then {write_tristate $cfg $autocfg CONFIG_ARCH_EP7212 $CONSTANT_Y [list $notmod] 2 }
	if {($CONFIG_ARCH_P720T != 1)} then {write_tristate $cfg $autocfg CONFIG_ARCH_EP7212 $CONSTANT_N [list $notmod] 2 }
	global CONFIG_EP72XX_ROM_BOOT
	if {($CONFIG_ARCH_EP7211 == 1 || $CONFIG_ARCH_EP7212 == 1)} then {write_tristate $cfg $autocfg CONFIG_EP72XX_ROM_BOOT $CONFIG_EP72XX_ROM_BOOT [list $notmod] 2 }
	if {($CONFIG_ARCH_GUIDEA07 == 1)} then {write_tristate $cfg $autocfg CONFIG_ARCH_CDB89712 $CONSTANT_Y [list $notmod] 2 }
	global CONFIG_ARCH_ADIFCC
	if {($CONFIG_ARCH_ADIFCC == 1)} then {write_comment $cfg $autocfg "ADI FCC Implementation Options"}
	global tmpvar_7
	if {($CONFIG_ARCH_ADIFCC == 1)} then {
	if { $tmpvar_7 == "80200EVB" } then { write_tristate $cfg $autocfg CONFIG_ARCH_ADI_EVB 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_ARCH_ADI_EVB 0 [list $notmod] 2 }
	if { $tmpvar_7 == "BRH" } then { write_tristate $cfg $autocfg CONFIG_ARCH_BRH 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_ARCH_BRH 0 [list $notmod] 2 }}
	global CONFIG_ARCH_ACORN
	global CONFIG_ARCH_RPC
	if {($CONFIG_ARCH_ARCA5K == 1 || $CONFIG_ARCH_RPC == 1)} then {write_tristate $cfg $autocfg CONFIG_ARCH_ACORN $CONSTANT_Y [list $notmod] 2 }
	if {($CONFIG_ARCH_ARCA5K != 1 && $CONFIG_ARCH_RPC != 1)} then {write_tristate $cfg $autocfg CONFIG_ARCH_ACORN $CONSTANT_N [list $notmod] 2 }
	global CONFIG_FOOTBRIDGE
	global CONFIG_ARCH_CO285
	if {($CONFIG_ARCH_CO285 == 1 || $CONFIG_ARCH_FOOTBRIDGE == 1)} then {write_tristate $cfg $autocfg CONFIG_FOOTBRIDGE $CONSTANT_Y [list $notmod] 2 }
	if {($CONFIG_ARCH_CO285 != 1 && $CONFIG_ARCH_FOOTBRIDGE != 1)} then {write_tristate $cfg $autocfg CONFIG_FOOTBRIDGE $CONSTANT_N [list $notmod] 2 }
	global CONFIG_FOOTBRIDGE_HOST
	if {($CONFIG_ARCH_CATS == 1 || $CONFIG_ARCH_EBSA285_HOST == 1 || $CONFIG_ARCH_NETWINDER == 1 || $CONFIG_ARCH_PERSONAL_SERVER == 1)} then {write_tristate $cfg $autocfg CONFIG_FOOTBRIDGE_HOST $CONSTANT_Y [list $notmod] 2 }
	if {($CONFIG_ARCH_CATS != 1 && $CONFIG_ARCH_EBSA285_HOST != 1 && $CONFIG_ARCH_NETWINDER != 1 && $CONFIG_ARCH_PERSONAL_SERVER != 1)} then {write_tristate $cfg $autocfg CONFIG_FOOTBRIDGE_HOST $CONSTANT_N [list $notmod] 2 }
	global CONFIG_FOOTBRIDGE_ADDIN
	if {($CONFIG_ARCH_CO285 == 1 || $CONFIG_ARCH_EBSA285_ADDIN == 1)} then {write_tristate $cfg $autocfg CONFIG_FOOTBRIDGE_ADDIN $CONSTANT_Y [list $notmod] 2 }
	if {($CONFIG_ARCH_CO285 != 1 && $CONFIG_ARCH_EBSA285_ADDIN != 1)} then {write_tristate $cfg $autocfg CONFIG_FOOTBRIDGE_ADDIN $CONSTANT_N [list $notmod] 2 }
	global CONFIG_ARCH_EBSA285
	if {($CONFIG_ARCH_EBSA285_HOST == 1 || $CONFIG_ARCH_EBSA285_ADDIN == 1)} then {write_tristate $cfg $autocfg CONFIG_ARCH_EBSA285 $CONSTANT_Y [list $notmod] 2 }
	global CONFIG_SA1111
	global CONFIG_SA1100_CONSUS
	if {($CONFIG_ASSABET_NEPONSET == 1 || $CONFIG_SA1100_ACCELENT == 1 || $CONFIG_SA1100_ADSAGC == 1 || $CONFIG_SA1100_ADSBITSY == 1 || $CONFIG_SA1100_ADSBITSYPLUS == 1 || $CONFIG_SA1100_BADGE4 == 1 || $CONFIG_SA1100_CONSUS == 1 || $CONFIG_SA1100_GRAPHICSMASTER == 1 || $CONFIG_SA1100_JORNADA720 == 1 || $CONFIG_SA1100_PFS168 == 1 || $CONFIG_SA1100_PT_SYSTEM3 == 1 || $CONFIG_SA1100_XP860 == 1)} then {write_tristate $cfg $autocfg CONFIG_SA1111 $CONSTANT_Y [list $notmod] 2 }
	global CONFIG_FORCE_MAX_ZONEORDER
	if {($CONFIG_ASSABET_NEPONSET == 1 || $CONFIG_SA1100_ACCELENT == 1 || $CONFIG_SA1100_ADSAGC == 1 || $CONFIG_SA1100_ADSBITSY == 1 || $CONFIG_SA1100_ADSBITSYPLUS == 1 || $CONFIG_SA1100_BADGE4 == 1 || $CONFIG_SA1100_CONSUS == 1 || $CONFIG_SA1100_GRAPHICSMASTER == 1 || $CONFIG_SA1100_JORNADA720 == 1 || $CONFIG_SA1100_PFS168 == 1 || $CONFIG_SA1100_PT_SYSTEM3 == 1 || $CONFIG_SA1100_XP860 == 1)} then {write_int $cfg $autocfg CONFIG_FORCE_MAX_ZONEORDER 9 $notmod }
	global tmpvar_8
	global CONFIG_ARCH_CAMELOT
	if {($CONFIG_ARCH_CAMELOT == 1)} then {
	if { $tmpvar_8 == "EPXA10DB" } then { write_tristate $cfg $autocfg CONFIG_EPXA10DB 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_EPXA10DB 0 [list $notmod] 2 }
	if { $tmpvar_8 == "EPXA1DB" } then { write_tristate $cfg $autocfg CONFIG_EPXA1DB 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_EPXA1DB 0 [list $notmod] 2 }}
	global tmpvar_9
	global CONFIG_EPXA10DB
	if {($CONFIG_ARCH_CAMELOT == 1) && ($CONFIG_EPXA10DB == 1)} then {
	if { $tmpvar_9 == "SDR" } then { write_tristate $cfg $autocfg CONFIG_EPXA10DB_R2 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_EPXA10DB_R2 0 [list $notmod] 2 }
	if { $tmpvar_9 == "DDR" } then { write_tristate $cfg $autocfg CONFIG_EPXA10DB_R3 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_EPXA10DB_R3 0 [list $notmod] 2 }}
	if {($CONFIG_ARCH_CAMELOT == 1)} then {write_comment $cfg $autocfg "PLD hotswap support"}
	global CONFIG_PLD
	if {($CONFIG_ARCH_CAMELOT == 1)} then {write_tristate $cfg $autocfg CONFIG_PLD $CONSTANT_Y [list $notmod] 2 }
	global CONFIG_PLD_HOTSWAP
	if {($CONFIG_ARCH_CAMELOT == 1) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 4)} then {write_tristate $cfg $autocfg CONFIG_PLD_HOTSWAP $CONFIG_PLD_HOTSWAP [list $CONFIG_EXPERIMENTAL] 2 }
	write_comment $cfg $autocfg "Processor Type"
	global CONFIG_CPU_32
	if {($CONFIG_ARCH_ARCA5K == 1)} then {write_tristate $cfg $autocfg CONFIG_CPU_32 $CONSTANT_N [list $notmod] 2 }
	global CONFIG_CPU_26
	if {($CONFIG_ARCH_ARCA5K == 1)} then {write_tristate $cfg $autocfg CONFIG_CPU_26 $CONSTANT_Y [list $notmod] 2 }
	global CONFIG_PAGESIZE_16
	if {($CONFIG_ARCH_ARCA5K == 1)} then {write_tristate $cfg $autocfg CONFIG_PAGESIZE_16 $CONFIG_PAGESIZE_16 [list $notmod] 2 }
	if {($CONFIG_ARCH_ARCA5K != 1)} then {write_tristate $cfg $autocfg CONFIG_CPU_32 $CONSTANT_Y [list $notmod] 2 }
	if {($CONFIG_ARCH_ARCA5K != 1)} then {write_tristate $cfg $autocfg CONFIG_CPU_26 $CONSTANT_N [list $notmod] 2 }
	global CONFIG_CPU_ARM610
	if {($CONFIG_ARCH_RPC == 1)} then {write_tristate $cfg $autocfg CONFIG_CPU_ARM610 $CONFIG_CPU_ARM610 [list $notmod] 2 }
	if {($CONFIG_ARCH_RPC != 1)} then {write_tristate $cfg $autocfg CONFIG_CPU_ARM610 $CONSTANT_N [list $notmod] 2 }
	global CONFIG_CPU_ARM710
	global CONFIG_ARCH_CLPS7500
	global CONFIG_ARCH_RISCSTATION
	if {($CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1)} then {write_tristate $cfg $autocfg CONFIG_CPU_ARM710 $CONSTANT_Y [list $notmod] 2 }
	if {($CONFIG_ARCH_CLPS7500 != 1 && $CONFIG_ARCH_RISCSTATION != 1) && ($CONFIG_ARCH_RPC == 1)} then {write_tristate $cfg $autocfg CONFIG_CPU_ARM710 $CONFIG_CPU_ARM710 [list $notmod] 2 }
	if {($CONFIG_ARCH_CLPS7500 != 1 && $CONFIG_ARCH_RISCSTATION != 1) && ($CONFIG_ARCH_RPC != 1)} then {write_tristate $cfg $autocfg CONFIG_CPU_ARM710 $CONSTANT_N [list $notmod] 2 }
	global CONFIG_CPU_ARM720T
	global CONFIG_ARCH_L7200
	if {($CONFIG_ARCH_CLPS711X == 1 || $CONFIG_ARCH_L7200 == 1 || $CONFIG_ARCH_CDB89712 == 1)} then {write_tristate $cfg $autocfg CONFIG_CPU_ARM720T $CONSTANT_Y [list $notmod] 2 }
	global CONFIG_ARCH_INTEGRATOR
	if {($CONFIG_ARCH_CLPS711X != 1 && $CONFIG_ARCH_L7200 != 1 && $CONFIG_ARCH_CDB89712 != 1) && ($CONFIG_ARCH_INTEGRATOR == 1)} then {write_tristate $cfg $autocfg CONFIG_CPU_ARM720T $CONFIG_CPU_ARM720T [list $notmod] 2 }
	if {($CONFIG_ARCH_CLPS711X != 1 && $CONFIG_ARCH_L7200 != 1 && $CONFIG_ARCH_CDB89712 != 1) && ($CONFIG_ARCH_INTEGRATOR != 1)} then {write_tristate $cfg $autocfg CONFIG_CPU_ARM720T $CONSTANT_N [list $notmod] 2 }
	global CONFIG_CPU_ARM920T
	global CONFIG_ARCH_MX1ADS
	if {($CONFIG_ARCH_MX1ADS == 1 || $CONFIG_ARCH_AT91RM9200 == 1)} then {write_tristate $cfg $autocfg CONFIG_CPU_ARM920T $CONSTANT_Y [list $notmod] 2 }
	global CONFIG_ARCH_OMAHA
	if {($CONFIG_ARCH_MX1ADS != 1 && $CONFIG_ARCH_AT91RM9200 != 1) && ($CONFIG_ARCH_INTEGRATOR == 1 || $CONFIG_ARCH_OMAHA == 1)} then {write_tristate $cfg $autocfg CONFIG_CPU_ARM920T $CONFIG_CPU_ARM920T [list $notmod] 2 }
	if {($CONFIG_ARCH_MX1ADS != 1 && $CONFIG_ARCH_AT91RM9200 != 1) && ($CONFIG_ARCH_INTEGRATOR != 1 && $CONFIG_ARCH_OMAHA != 1)} then {write_tristate $cfg $autocfg CONFIG_CPU_ARM920T $CONSTANT_N [list $notmod] 2 }
	global CONFIG_CPU_ARM922T
	if {($CONFIG_ARCH_CAMELOT == 1 || $CONFIG_ARCH_KS8695 == 1)} then {write_tristate $cfg $autocfg CONFIG_CPU_ARM922T $CONSTANT_Y [list $notmod] 2 }
	if {($CONFIG_ARCH_CAMELOT == 1 || $CONFIG_ARCH_KS8695 == 1)} then {write_tristate $cfg $autocfg CONFIG_PLD $CONSTANT_Y [list $notmod] 2 }
	if {($CONFIG_ARCH_CAMELOT != 1 && $CONFIG_ARCH_KS8695 != 1)} then {write_tristate $cfg $autocfg CONFIG_CPU_ARM922T $CONSTANT_N [list $notmod] 2 }
	if {($CONFIG_ARCH_CAMELOT != 1 && $CONFIG_ARCH_KS8695 != 1)} then {write_tristate $cfg $autocfg CONFIG_PLD $CONSTANT_N [list $notmod] 2 }
	global CONFIG_CPU_ARM926T
	if {($CONFIG_ARCH_INTEGRATOR == 1)} then {write_tristate $cfg $autocfg CONFIG_CPU_ARM926T $CONFIG_CPU_ARM926T [list $notmod] 2 }
	if {($CONFIG_ARCH_INTEGRATOR != 1)} then {write_tristate $cfg $autocfg CONFIG_CPU_ARM926T $CONSTANT_N [list $notmod] 2 }
	global CONFIG_CPU_ARM1020
	if {($CONFIG_ARCH_INTEGRATOR == 1)} then {write_tristate $cfg $autocfg CONFIG_CPU_ARM1020 $CONFIG_CPU_ARM1020 [list $notmod] 2 }
	if {($CONFIG_ARCH_INTEGRATOR != 1)} then {write_tristate $cfg $autocfg CONFIG_CPU_ARM1020 $CONSTANT_N [list $notmod] 2 }
	global CONFIG_CPU_ARM1026
	if {($CONFIG_ARCH_INTEGRATOR == 1)} then {write_tristate $cfg $autocfg CONFIG_CPU_ARM1026 $CONFIG_CPU_ARM1026 [list $notmod] 2 }
	if {($CONFIG_ARCH_INTEGRATOR != 1)} then {write_tristate $cfg $autocfg CONFIG_CPU_ARM1026 $CONSTANT_N [list $notmod] 2 }
	global CONFIG_CPU_SA110
	global CONFIG_ARCH_EBSA110
	global CONFIG_ARCH_TBOX
	global CONFIG_ARCH_SHARK
	global CONFIG_ARCH_NEXUSPCI
	global CONFIG_ARCH_ANAKIN
	if {($CONFIG_ARCH_EBSA110 == 1 || $CONFIG_FOOTBRIDGE == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_NEXUSPCI == 1 || $CONFIG_ARCH_ANAKIN == 1 || $CONFIG_ARCH_IXP1200 == 1)} then {write_tristate $cfg $autocfg CONFIG_CPU_SA110 $CONSTANT_Y [list $notmod] 2 }
	if {($CONFIG_ARCH_EBSA110 != 1 && $CONFIG_FOOTBRIDGE != 1 && $CONFIG_ARCH_TBOX != 1 && $CONFIG_ARCH_SHARK != 1 && $CONFIG_ARCH_NEXUSPCI != 1 && $CONFIG_ARCH_ANAKIN != 1 && $CONFIG_ARCH_IXP1200 != 1) && ($CONFIG_ARCH_RPC == 1)} then {write_tristate $cfg $autocfg CONFIG_CPU_SA110 $CONFIG_CPU_SA110 [list $notmod] 2 }
	if {($CONFIG_ARCH_EBSA110 != 1 && $CONFIG_FOOTBRIDGE != 1 && $CONFIG_ARCH_TBOX != 1 && $CONFIG_ARCH_SHARK != 1 && $CONFIG_ARCH_NEXUSPCI != 1 && $CONFIG_ARCH_ANAKIN != 1 && $CONFIG_ARCH_IXP1200 != 1) && ($CONFIG_ARCH_RPC != 1)} then {write_tristate $cfg $autocfg CONFIG_CPU_SA110 $CONSTANT_N [list $notmod] 2 }
	global CONFIG_CPU_SA1100
	if {($CONFIG_ARCH_SA1100 == 1)} then {write_tristate $cfg $autocfg CONFIG_CPU_SA1100 $CONSTANT_Y [list $notmod] 2 }
	if {($CONFIG_ARCH_SA1100 != 1)} then {write_tristate $cfg $autocfg CONFIG_CPU_SA1100 $CONSTANT_N [list $notmod] 2 }
	global CONFIG_CPU_32v3
	if {($CONFIG_ARCH_RPC == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_CLPS7500 == 1)} then {write_tristate $cfg $autocfg CONFIG_CPU_32v3 $CONSTANT_Y [list $notmod] 2 }
	if {($CONFIG_ARCH_RPC != 1 && $CONFIG_ARCH_RISCSTATION != 1 && $CONFIG_ARCH_CLPS7500 != 1)} then {write_tristate $cfg $autocfg CONFIG_CPU_32v3 $CONSTANT_N [list $notmod] 2 }
	global CONFIG_CPU_32v4
	if {($CONFIG_ARCH_EBSA110 == 1 || $CONFIG_FOOTBRIDGE == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_NEXUSPCI == 1 || $CONFIG_ARCH_CLPS711X == 1 || $CONFIG_ARCH_INTEGRATOR == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_L7200 == 1 || $CONFIG_ARCH_ANAKIN == 1 || $CONFIG_ARCH_CAMELOT == 1 || $CONFIG_ARCH_MX1ADS == 1 || $CONFIG_ARCH_OMAHA == 1 || $CONFIG_ARCH_AT91RM9200 == 1 || $CONFIG_ARCH_KS8695 == 1)} then {write_tristate $cfg $autocfg CONFIG_CPU_32v4 $CONSTANT_Y [list $notmod] 2 }
	if {($CONFIG_ARCH_EBSA110 != 1 && $CONFIG_FOOTBRIDGE != 1 && $CONFIG_ARCH_TBOX != 1 && $CONFIG_ARCH_SHARK != 1 && $CONFIG_ARCH_NEXUSPCI != 1 && $CONFIG_ARCH_CLPS711X != 1 && $CONFIG_ARCH_INTEGRATOR != 1 && $CONFIG_ARCH_SA1100 != 1 && $CONFIG_ARCH_L7200 != 1 && $CONFIG_ARCH_ANAKIN != 1 && $CONFIG_ARCH_CAMELOT != 1 && $CONFIG_ARCH_MX1ADS != 1 && $CONFIG_ARCH_OMAHA != 1 && $CONFIG_ARCH_AT91RM9200 != 1 && $CONFIG_ARCH_KS8695 != 1)} then {write_tristate $cfg $autocfg CONFIG_CPU_32v4 $CONSTANT_N [list $notmod] 2 }
	global CONFIG_CPU_32v5
	if {($CONFIG_ARCH_IOP3XX == 1 || $CONFIG_ARCH_ADIFCC == 1 || $CONFIG_ARCH_IXP425 == 1 || $CONFIG_ARCH_IXP2000 == 1)} then {write_tristate $cfg $autocfg CONFIG_CPU_32v5 $CONSTANT_Y [list $notmod] 2 }
	global CONFIG_CPU_XSCALE
	if {($CONFIG_ARCH_IOP3XX == 1 || $CONFIG_ARCH_ADIFCC == 1 || $CONFIG_ARCH_IXP425 == 1 || $CONFIG_ARCH_IXP2000 == 1)} then {write_tristate $cfg $autocfg CONFIG_CPU_XSCALE $CONSTANT_Y [list $notmod] 2 }
	global CONFIG_ARM_THUMB
	if {($CONFIG_ARCH_IOP3XX == 1 || $CONFIG_ARCH_ADIFCC == 1 || $CONFIG_ARCH_IXP425 == 1 || $CONFIG_ARCH_IXP2000 == 1)} then {write_tristate $cfg $autocfg CONFIG_ARM_THUMB $CONSTANT_Y [list $notmod] 2 }
	write_comment $cfg $autocfg "Processor Features"
	global CONFIG_XSCALE_PMU_TIMER
	if {($CONFIG_CPU_XSCALE == 1)} then {write_tristate $cfg $autocfg CONFIG_XSCALE_PMU_TIMER $CONFIG_XSCALE_PMU_TIMER [list $notmod] 2 }
	global CONFIG_XSCALE_CACHE_ERRATA
	if {($CONFIG_CPU_XSCALE == 1)} then {write_tristate $cfg $autocfg CONFIG_XSCALE_CACHE_ERRATA $CONFIG_XSCALE_CACHE_ERRATA [list $notmod] 2 }
	global CONFIG_XSCALE_BDI2000
	if {($CONFIG_CPU_XSCALE == 1)} then {write_tristate $cfg $autocfg CONFIG_XSCALE_BDI2000 $CONFIG_XSCALE_BDI2000 [list $notmod] 2 }
	if {($CONFIG_CPU_ARM720T == 1 || $CONFIG_CPU_ARM920T == 1 || $CONFIG_CPU_ARM922T == 1 || $CONFIG_CPU_ARM926T == 1 || $CONFIG_CPU_ARM1020 == 1 || $CONFIG_CPU_ARM1026 == 1) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 4)} then {write_tristate $cfg $autocfg CONFIG_ARM_THUMB $CONFIG_ARM_THUMB [list $CONFIG_EXPERIMENTAL] 2 }
	global CONFIG_CPU_ICACHE_DISABLE
	if {($CONFIG_CPU_ARM920T == 1 || $CONFIG_CPU_ARM922T == 1 || $CONFIG_CPU_ARM926T == 1 || $CONFIG_CPU_ARM1020 == 1 || $CONFIG_CPU_ARM1026 == 1)} then {write_tristate $cfg $autocfg CONFIG_CPU_ICACHE_DISABLE $CONFIG_CPU_ICACHE_DISABLE [list $notmod] 2 }
	global CONFIG_CPU_DCACHE_DISABLE
	if {($CONFIG_CPU_ARM920T == 1 || $CONFIG_CPU_ARM922T == 1 || $CONFIG_CPU_ARM926T == 1 || $CONFIG_CPU_ARM1020 == 1 || $CONFIG_CPU_ARM1026 == 1)} then {write_tristate $cfg $autocfg CONFIG_CPU_DCACHE_DISABLE $CONFIG_CPU_DCACHE_DISABLE [list $notmod] 2 }
	global CONFIG_CPU_DCACHE_WRITETHROUGH
	if {($CONFIG_CPU_ARM920T == 1 || $CONFIG_CPU_ARM922T == 1 || $CONFIG_CPU_ARM926T == 1 || $CONFIG_CPU_ARM1020 == 1 || $CONFIG_CPU_ARM1026 == 1) && ($CONFIG_CPU_DCACHE_DISABLE == 0)} then {write_tristate $cfg $autocfg CONFIG_CPU_DCACHE_WRITETHROUGH $CONFIG_CPU_DCACHE_WRITETHROUGH [list $notmod] 2 }
	global CONFIG_CPU_CACHE_ROUND_ROBIN
	if {($CONFIG_CPU_ARM926T == 1 || $CONFIG_CPU_ARM1020 == 1 || $CONFIG_CPU_ARM1026 == 1) && ($CONFIG_CPU_ICACHE_DISABLE == 0 || $CONFIG_CPU_DCACHE_DISABLE == 0)} then {write_tristate $cfg $autocfg CONFIG_CPU_CACHE_ROUND_ROBIN $CONFIG_CPU_CACHE_ROUND_ROBIN [list $notmod] 2 }
	global CONFIG_CPU_BPREDICT_DISABLE
	if {($CONFIG_CPU_ARM1020 == 1 || $CONFIG_CPU_ARM1026 == 1)} then {write_tristate $cfg $autocfg CONFIG_CPU_BPREDICT_DISABLE $CONFIG_CPU_BPREDICT_DISABLE [list $notmod] 2 }
	global CONFIG_DISCONTIGMEM
	if {($CONFIG_ARCH_EDB7211 == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_RISCSTATION == 1)} then {write_tristate $cfg $autocfg CONFIG_DISCONTIGMEM $CONSTANT_Y [list $notmod] 2 }
	if {($CONFIG_ARCH_EDB7211 != 1 && $CONFIG_ARCH_SA1100 != 1 && $CONFIG_ARCH_RISCSTATION != 1)} then {write_tristate $cfg $autocfg CONFIG_DISCONTIGMEM $CONSTANT_N [list $notmod] 2 }
	global CONFIG_CPU_BIG_ENDIAN
	write_tristate $cfg $autocfg CONFIG_CPU_BIG_ENDIAN $CONFIG_CPU_BIG_ENDIAN [list $notmod] 2
	write_comment $cfg $autocfg "General setup"
	global CONFIG_PCI
	global CONFIG_ARCH_BRH
	if {($CONFIG_ARCH_SHARK == 1 || $CONFIG_FOOTBRIDGE_HOST == 1 || $CONFIG_ARCH_IXP1200 == 1 || $CONFIG_ARCH_IOP3XX == 1 || $CONFIG_ARCH_BRH == 1 || $CONFIG_ARCH_IXP425 == 1 || $CONFIG_ARCH_IXP2000 == 1)} then {write_tristate $cfg $autocfg CONFIG_PCI $CONSTANT_Y [list $notmod] 2 }
	global CONFIG_PCI_INTEGRATOR
	if {($CONFIG_ARCH_SHARK != 1 && $CONFIG_FOOTBRIDGE_HOST != 1 && $CONFIG_ARCH_IXP1200 != 1 && $CONFIG_ARCH_IOP3XX != 1 && $CONFIG_ARCH_BRH != 1 && $CONFIG_ARCH_IXP425 != 1 && $CONFIG_ARCH_IXP2000 != 1) && ($CONFIG_ARCH_INTEGRATOR == 1 || $CONFIG_ARCH_KS8695 == 1)} then {write_tristate $cfg $autocfg CONFIG_PCI_INTEGRATOR $CONFIG_PCI_INTEGRATOR [list $notmod] 2 }
	if {($CONFIG_ARCH_SHARK != 1 && $CONFIG_FOOTBRIDGE_HOST != 1 && $CONFIG_ARCH_IXP1200 != 1 && $CONFIG_ARCH_IOP3XX != 1 && $CONFIG_ARCH_BRH != 1 && $CONFIG_ARCH_IXP425 != 1 && $CONFIG_ARCH_IXP2000 != 1) && ($CONFIG_ARCH_INTEGRATOR == 1 || $CONFIG_ARCH_KS8695 == 1)} then {write_tristate $cfg $autocfg CONFIG_PCI $CONFIG_PCI_INTEGRATOR [list $notmod] 2 }
	if {($CONFIG_ARCH_SHARK != 1 && $CONFIG_FOOTBRIDGE_HOST != 1 && $CONFIG_ARCH_IXP1200 != 1 && $CONFIG_ARCH_IOP3XX != 1 && $CONFIG_ARCH_BRH != 1 && $CONFIG_ARCH_IXP425 != 1 && $CONFIG_ARCH_IXP2000 != 1) && ($CONFIG_ARCH_INTEGRATOR != 1 && $CONFIG_ARCH_KS8695 != 1)} then {write_tristate $cfg $autocfg CONFIG_PCI $CONSTANT_N [list $notmod] 2 }
	global CONFIG_PCI_AUTOCONFIG
	if {($CONFIG_ARCH_IXP1200 == 1 || $CONFIG_ARCH_IOP3XX == 1 || $CONFIG_ARCH_BRH == 1 || $CONFIG_ARCH_IXP425 == 1 || $CONFIG_ARCH_IXP2000 == 1)} then {write_tristate $cfg $autocfg CONFIG_PCI_AUTOCONFIG $CONSTANT_Y [list $notmod] 2 }
	global CONFIG_ISA
	if {($CONFIG_FOOTBRIDGE_HOST == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_EBSA110 == 1 || $CONFIG_ARCH_CDB89712 == 1 || $CONFIG_ARCH_EDB7211 == 1 || $CONFIG_ARCH_SA1100 == 1)} then {write_tristate $cfg $autocfg CONFIG_ISA $CONSTANT_Y [list $notmod] 2 }
	if {($CONFIG_FOOTBRIDGE_HOST != 1 && $CONFIG_ARCH_SHARK != 1 && $CONFIG_ARCH_CLPS7500 != 1 && $CONFIG_ARCH_RISCSTATION != 1 && $CONFIG_ARCH_EBSA110 != 1 && $CONFIG_ARCH_CDB89712 != 1 && $CONFIG_ARCH_EDB7211 != 1 && $CONFIG_ARCH_SA1100 != 1)} then {write_tristate $cfg $autocfg CONFIG_ISA $CONSTANT_N [list $notmod] 2 }
	global CONFIG_ISA_DMA
	if {($CONFIG_FOOTBRIDGE_HOST == 1 || $CONFIG_ARCH_SHARK == 1)} then {write_tristate $cfg $autocfg CONFIG_ISA_DMA $CONSTANT_Y [list $notmod] 2 }
	if {($CONFIG_FOOTBRIDGE_HOST != 1 && $CONFIG_ARCH_SHARK != 1)} then {write_tristate $cfg $autocfg CONFIG_ISA_DMA $CONSTANT_N [list $notmod] 2 }
	global CONFIG_KERNEL_START_BOOL
	if {($CONFIG_ADVANCED_OPTIONS == 1 && $CONFIG_CPU_32 == 1 && $CONFIG_DISCONTIGMEM != 1)} then {write_tristate $cfg $autocfg CONFIG_KERNEL_START_BOOL $CONFIG_KERNEL_START_BOOL [list $notmod] 2 }
	global CONFIG_KERNEL_START
	if {($CONFIG_ADVANCED_OPTIONS == 1 && $CONFIG_CPU_32 == 1 && $CONFIG_DISCONTIGMEM != 1) && ($CONFIG_KERNEL_START_BOOL == 1)} then {write_hex $cfg $autocfg CONFIG_KERNEL_START $CONFIG_KERNEL_START $notmod }
	if {($CONFIG_KERNEL_START_BOOL != 1)} then {write_hex $cfg $autocfg CONFIG_KERNEL_START 0xc0000000 $notmod }
	global CONFIG_ZBOOT_ROM
	write_tristate $cfg $autocfg CONFIG_ZBOOT_ROM $CONFIG_ZBOOT_ROM [list $notmod] 2
	global CONFIG_ZBOOT_ROM_TEXT
	write_hex $cfg $autocfg CONFIG_ZBOOT_ROM_TEXT $CONFIG_ZBOOT_ROM_TEXT $notmod
	global CONFIG_ZBOOT_ROM_BSS
	write_hex $cfg $autocfg CONFIG_ZBOOT_ROM_BSS $CONFIG_ZBOOT_ROM_BSS $notmod
	global CONFIG_CPU_FREQ
	if {($CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_INTEGRATOR == 1 || $CONFIG_ARCH_KS8695 == 1) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 4)} then {write_tristate $cfg $autocfg CONFIG_CPU_FREQ $CONFIG_CPU_FREQ [list $CONFIG_EXPERIMENTAL] 2 }
	global CONFIG_PCI_NAMES
	if {($CONFIG_PCI == 1)} then {write_tristate $cfg $autocfg CONFIG_PCI_NAMES $CONFIG_PCI_NAMES [list $notmod] 2 }
	global CONFIG_HOTPLUG
	write_tristate $cfg $autocfg CONFIG_HOTPLUG $CONFIG_HOTPLUG [list $notmod] 2
	if {($CONFIG_HOTPLUG == 1)} then {write_comment $cfg $autocfg "PCMCIA/CardBus support"}
	global CONFIG_PCMCIA
	if {($CONFIG_HOTPLUG == 1)} then {write_tristate $cfg $autocfg CONFIG_PCMCIA $CONFIG_PCMCIA [list $notmod] 2 }
	global CONFIG_CARDBUS
	if {($CONFIG_HOTPLUG == 1) && ($CONFIG_PCMCIA != 0) && ($CONFIG_PCI != 0)} then {write_tristate $cfg $autocfg CONFIG_CARDBUS $CONFIG_CARDBUS [list $notmod] 2 }
	global CONFIG_TCIC
	if {($CONFIG_HOTPLUG == 1) && ($CONFIG_PCMCIA != 0)} then {write_tristate $cfg $autocfg CONFIG_TCIC $CONFIG_TCIC [list $notmod] 2 }
	global CONFIG_I82092
	if {($CONFIG_HOTPLUG == 1) && ($CONFIG_PCMCIA != 0) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 4)} then {write_tristate $cfg $autocfg CONFIG_I82092 $CONFIG_I82092 [list $CONFIG_PCI] 2 }
	global CONFIG_I82365
	if {($CONFIG_HOTPLUG == 1) && ($CONFIG_PCMCIA != 0)} then {write_tristate $cfg $autocfg CONFIG_I82365 $CONFIG_I82365 [list $notmod] 2 }
	global CONFIG_PCMCIA_SA1100
	if {($CONFIG_HOTPLUG == 1) && ($CONFIG_PCMCIA != 0) && ($CONFIG_ARCH_SA1100 == 1) && ($CONFIG_PCMCIA == 1 || $CONFIG_PCMCIA == 2 || $CONFIG_PCMCIA == 4)} then {write_tristate $cfg $autocfg CONFIG_PCMCIA_SA1100 $CONFIG_PCMCIA_SA1100 [list $CONFIG_PCMCIA] 2 }
	if {($CONFIG_HOTPLUG != 1)} then {write_tristate $cfg $autocfg CONFIG_PCMCIA $CONSTANT_N [list $notmod] 2 }
	global CONFIG_SA_PCMCIA_SLOT_1
	if {($CONFIG_SA1100_ACCELENT == 1) && ($CONFIG_PCMCIA != 0)} then {write_tristate $cfg $autocfg CONFIG_SA_PCMCIA_SLOT_1 $CONFIG_SA_PCMCIA_SLOT_1 [list $notmod] 2 }
	global CONFIG_NET
	write_tristate $cfg $autocfg CONFIG_NET $CONFIG_NET [list $notmod] 2
	global CONFIG_SYSVIPC
	write_tristate $cfg $autocfg CONFIG_SYSVIPC $CONFIG_SYSVIPC [list $notmod] 2
	global CONFIG_BSD_PROCESS_ACCT
	write_tristate $cfg $autocfg CONFIG_BSD_PROCESS_ACCT $CONFIG_BSD_PROCESS_ACCT [list $notmod] 2
	global CONFIG_SYSCTL
	write_tristate $cfg $autocfg CONFIG_SYSCTL $CONFIG_SYSCTL [list $notmod] 2
	write_comment $cfg $autocfg "At least one math emulation must be selected"
	global CONFIG_FPE_NWFPE
	write_tristate $cfg $autocfg CONFIG_FPE_NWFPE $CONFIG_FPE_NWFPE [list $notmod] 2
	global CONFIG_FPE_NWFPE_XP
	if {($CONFIG_FPE_NWFPE != 0)} then {write_tristate $cfg $autocfg CONFIG_FPE_NWFPE_XP $CONFIG_FPE_NWFPE_XP [list $notmod] 2 }
	global CONFIG_FPE_FASTFPE
	if {($CONFIG_CPU_26 == 0 && $CONFIG_CPU_32v3 == 0) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {write_tristate $cfg $autocfg CONFIG_FPE_FASTFPE $CONFIG_FPE_FASTFPE [list $CONFIG_EXPERIMENTAL] 2 }
	global tmpvar_10
	
	if { $tmpvar_10 == "ELF" } then { write_tristate $cfg $autocfg CONFIG_KCORE_ELF 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_KCORE_ELF 0 [list $notmod] 2 }
	if { $tmpvar_10 == "A.OUT" } then { write_tristate $cfg $autocfg CONFIG_KCORE_AOUT 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_KCORE_AOUT 0 [list $notmod] 2 }
	global CONFIG_BINFMT_AOUT
	write_tristate $cfg $autocfg CONFIG_BINFMT_AOUT $CONFIG_BINFMT_AOUT [list $notmod] 2
	global CONFIG_BINFMT_ELF
	write_tristate $cfg $autocfg CONFIG_BINFMT_ELF $CONFIG_BINFMT_ELF [list $notmod] 2
	global CONFIG_BINFMT_MISC
	write_tristate $cfg $autocfg CONFIG_BINFMT_MISC $CONFIG_BINFMT_MISC [list $notmod] 2
	global CONFIG_PM
	if {($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 4)} then {write_tristate $cfg $autocfg CONFIG_PM $CONFIG_PM [list $CONFIG_EXPERIMENTAL] 2 }
	global CONFIG_ARTHUR
	if {($CONFIG_CPU_32 == 1 || $CONFIG_CPU_32 == 2 || $CONFIG_CPU_32 == 4)} then {write_tristate $cfg $autocfg CONFIG_ARTHUR $CONFIG_ARTHUR [list $CONFIG_CPU_32] 2 }
	global CONFIG_CMDLINE
	write_string $cfg $autocfg CONFIG_CMDLINE "$CONFIG_CMDLINE" $notmod
	global CONFIG_LEDS
	global CONFIG_ARCH_FTVPCI
	global CONFIG_ARCH_IXDP2800
	if {($CONFIG_ARCH_NETWINDER == 1 || $CONFIG_ARCH_EBSA110 == 1 || $CONFIG_ARCH_EBSA285 == 1 || $CONFIG_ARCH_FTVPCI == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_CO285 == 1 || $CONFIG_ARCH_IXP1200 == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_INTEGRATOR == 1 || $CONFIG_ARCH_KS8695 == 1 || $CONFIG_ARCH_CDB89712 == 1 || $CONFIG_ARCH_P720T == 1 || $CONFIG_ARCH_OMAHA == 1 || $CONFIG_ARCH_IXDP2800 == 1)} then {write_tristate $cfg $autocfg CONFIG_LEDS $CONFIG_LEDS [list $notmod] 2 }
	global CONFIG_LEDS_TIMER
	if {($CONFIG_ARCH_NETWINDER == 1 || $CONFIG_ARCH_EBSA110 == 1 || $CONFIG_ARCH_EBSA285 == 1 || $CONFIG_ARCH_FTVPCI == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_CO285 == 1 || $CONFIG_ARCH_IXP1200 == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_INTEGRATOR == 1 || $CONFIG_ARCH_KS8695 == 1 || $CONFIG_ARCH_CDB89712 == 1 || $CONFIG_ARCH_P720T == 1 || $CONFIG_ARCH_OMAHA == 1 || $CONFIG_ARCH_IXDP2800 == 1) && ($CONFIG_LEDS == 1) && ($CONFIG_ARCH_NETWINDER == 1 || $CONFIG_ARCH_EBSA285 == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_CO285 == 1 || $CONFIG_ARCH_IXP1200 == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_INTEGRATOR == 1 || $CONFIG_ARCH_KS8695 == 1 || $CONFIG_ARCH_P720T == 1 || $CONFIG_ARCH_OMAHA == 1 || $CONFIG_ARCH_IXDP2800 == 1)} then {write_tristate $cfg $autocfg CONFIG_LEDS_TIMER $CONFIG_LEDS_TIMER [list $notmod] 2 }
	global CONFIG_LEDS_CPU
	if {($CONFIG_ARCH_NETWINDER == 1 || $CONFIG_ARCH_EBSA110 == 1 || $CONFIG_ARCH_EBSA285 == 1 || $CONFIG_ARCH_FTVPCI == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_CO285 == 1 || $CONFIG_ARCH_IXP1200 == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_INTEGRATOR == 1 || $CONFIG_ARCH_KS8695 == 1 || $CONFIG_ARCH_CDB89712 == 1 || $CONFIG_ARCH_P720T == 1 || $CONFIG_ARCH_OMAHA == 1 || $CONFIG_ARCH_IXDP2800 == 1) && ($CONFIG_LEDS == 1) && ($CONFIG_ARCH_NETWINDER == 1 || $CONFIG_ARCH_EBSA285 == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_CO285 == 1 || $CONFIG_ARCH_IXP1200 == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_INTEGRATOR == 1 || $CONFIG_ARCH_KS8695 == 1 || $CONFIG_ARCH_P720T == 1 || $CONFIG_ARCH_OMAHA == 1 || $CONFIG_ARCH_IXDP2800 == 1)} then {write_tristate $cfg $autocfg CONFIG_LEDS_CPU $CONFIG_LEDS_CPU [list $notmod] 2 }
	if {($CONFIG_ARCH_NETWINDER == 1 || $CONFIG_ARCH_EBSA110 == 1 || $CONFIG_ARCH_EBSA285 == 1 || $CONFIG_ARCH_FTVPCI == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_CO285 == 1 || $CONFIG_ARCH_IXP1200 == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_INTEGRATOR == 1 || $CONFIG_ARCH_KS8695 == 1 || $CONFIG_ARCH_CDB89712 == 1 || $CONFIG_ARCH_P720T == 1 || $CONFIG_ARCH_OMAHA == 1 || $CONFIG_ARCH_IXDP2800 == 1) && ($CONFIG_LEDS == 1) && ($CONFIG_ARCH_EBSA110 == 1)} then {write_tristate $cfg $autocfg CONFIG_LEDS_TIMER $CONSTANT_Y [list $notmod] 2 }
	global CONFIG_ALIGNMENT_TRAP
	if {($CONFIG_ARCH_SA1100 == 1)} then {write_tristate $cfg $autocfg CONFIG_ALIGNMENT_TRAP $CONSTANT_Y [list $notmod] 2 }
	if {($CONFIG_ARCH_SA1100 != 1) && ($CONFIG_CPU_32 == 1 && $CONFIG_ARCH_EBSA110 != 1)} then {write_tristate $cfg $autocfg CONFIG_ALIGNMENT_TRAP $CONFIG_ALIGNMENT_TRAP [list $notmod] 2 }
	if {($CONFIG_ARCH_SA1100 != 1) && ($CONFIG_CPU_32 != 1 || $CONFIG_ARCH_EBSA110 == 1)} then {write_tristate $cfg $autocfg CONFIG_ALIGNMENT_TRAP $CONSTANT_N [list $notmod] 2 }
	write_comment $cfg $autocfg "Parallel port support"
	global CONFIG_PARPORT
	write_tristate $cfg $autocfg CONFIG_PARPORT $CONFIG_PARPORT [list $notmod] 2
	global CONFIG_PARPORT_PC
	if {($CONFIG_PARPORT != 0) && ($CONFIG_PARPORT == 1 || $CONFIG_PARPORT == 2 || $CONFIG_PARPORT == 4)} then {write_tristate $cfg $autocfg CONFIG_PARPORT_PC $CONFIG_PARPORT_PC [list $CONFIG_PARPORT] 2 }
	global CONFIG_PARPORT_PC_CML1
	global CONFIG_SERIAL
	if {($CONFIG_PARPORT != 0) && ($CONFIG_PARPORT_PC != 0 && $CONFIG_SERIAL != 0) && ($CONFIG_SERIAL == 2)} then {write_tristate $cfg $autocfg CONFIG_PARPORT_PC_CML1 $CONSTANT_M [list $notmod] 2 }
	if {($CONFIG_PARPORT != 0) && ($CONFIG_PARPORT_PC != 0 && $CONFIG_SERIAL != 0) && ($CONFIG_SERIAL != 2)} then {write_tristate $cfg $autocfg CONFIG_PARPORT_PC_CML1 $CONFIG_PARPORT_PC [list $notmod] 2 }
	global CONFIG_PARPORT_SERIAL
	if {($CONFIG_PARPORT != 0) && ($CONFIG_PARPORT_PC != 0 && $CONFIG_SERIAL != 0) && ($CONFIG_PARPORT_PC_CML1 == 1 || $CONFIG_PARPORT_PC_CML1 == 2 || $CONFIG_PARPORT_PC_CML1 == 4)} then {write_tristate $cfg $autocfg CONFIG_PARPORT_SERIAL $CONFIG_PARPORT_SERIAL [list $CONFIG_PARPORT_PC_CML1] 2 }
	global CONFIG_PARPORT_PC_FIFO
	if {($CONFIG_PARPORT != 0) && ($CONFIG_PARPORT_PC != 0) && ($CONFIG_EXPERIMENTAL == 1)} then {write_tristate $cfg $autocfg CONFIG_PARPORT_PC_FIFO $CONFIG_PARPORT_PC_FIFO [list $notmod] 2 }
	global CONFIG_PARPORT_PC_SUPERIO
	if {($CONFIG_PARPORT != 0) && ($CONFIG_PARPORT_PC != 0) && ($CONFIG_EXPERIMENTAL == 1)} then {write_tristate $cfg $autocfg CONFIG_PARPORT_PC_SUPERIO $CONFIG_PARPORT_PC_SUPERIO [list $notmod] 2 }
	global CONFIG_PARPORT_PC_PCMCIA
	if {($CONFIG_PARPORT != 0) && ($CONFIG_PARPORT_PC != 0) && ($CONFIG_HOTPLUG == 1 && $CONFIG_PCMCIA != 0) && ($CONFIG_PARPORT_PC == 1) && ($CONFIG_PCMCIA == 1 || $CONFIG_PCMCIA == 2 || $CONFIG_PCMCIA == 4)} then {write_tristate $cfg $autocfg CONFIG_PARPORT_PC_PCMCIA $CONFIG_PARPORT_PC_PCMCIA [list $CONFIG_PCMCIA] 2 }
	if {($CONFIG_PARPORT != 0) && ($CONFIG_PARPORT_PC != 0) && ($CONFIG_HOTPLUG == 1 && $CONFIG_PCMCIA != 0) && ($CONFIG_PARPORT_PC != 1) && ($CONFIG_PARPORT_PC == 1 || $CONFIG_PARPORT_PC == 2 || $CONFIG_PARPORT_PC == 4)} then {write_tristate $cfg $autocfg CONFIG_PARPORT_PC_PCMCIA $CONFIG_PARPORT_PC_PCMCIA [list $CONFIG_PARPORT_PC] 2 }
	global CONFIG_PARPORT_ARC
	if {($CONFIG_PARPORT != 0) && ($CONFIG_ARM == 1) && ($CONFIG_PARPORT == 1 || $CONFIG_PARPORT == 2 || $CONFIG_PARPORT == 4)} then {write_tristate $cfg $autocfg CONFIG_PARPORT_ARC $CONFIG_PARPORT_ARC [list $CONFIG_PARPORT] 2 }
	global CONFIG_PARPORT_AMIGA
	if {($CONFIG_PARPORT != 0)} then {write_tristate $cfg $autocfg CONFIG_PARPORT_AMIGA $CONSTANT_N [list $notmod] 2 }
	global CONFIG_PARPORT_MFC3
	if {($CONFIG_PARPORT != 0)} then {write_tristate $cfg $autocfg CONFIG_PARPORT_MFC3 $CONSTANT_N [list $notmod] 2 }
	global CONFIG_PARPORT_ATARI
	if {($CONFIG_PARPORT != 0)} then {write_tristate $cfg $autocfg CONFIG_PARPORT_ATARI $CONSTANT_N [list $notmod] 2 }
	global CONFIG_PARPORT_GSC
	if {($CONFIG_PARPORT != 0)} then {write_tristate $cfg $autocfg CONFIG_PARPORT_GSC $CONSTANT_N [list $notmod] 2 }
	global CONFIG_PARPORT_SUNBPP
	if {($CONFIG_PARPORT != 0) && ($CONFIG_SBUS == 1 && $CONFIG_EXPERIMENTAL == 1) && ($CONFIG_PARPORT == 1 || $CONFIG_PARPORT == 2 || $CONFIG_PARPORT == 4)} then {write_tristate $cfg $autocfg CONFIG_PARPORT_SUNBPP $CONFIG_PARPORT_SUNBPP [list $CONFIG_PARPORT] 2 }
	if {($CONFIG_PARPORT != 0) && ($CONFIG_SBUS != 1 || $CONFIG_EXPERIMENTAL != 1)} then {write_tristate $cfg $autocfg CONFIG_PARPORT_SUNBPP $CONSTANT_N [list $notmod] 2 }
	global CONFIG_PARPORT_OTHER
	if {($CONFIG_PARPORT != 0)} then {write_tristate $cfg $autocfg CONFIG_PARPORT_OTHER $CONFIG_PARPORT_OTHER [list $notmod] 2 }
	global CONFIG_PARPORT_1284
	if {($CONFIG_PARPORT != 0)} then {write_tristate $cfg $autocfg CONFIG_PARPORT_1284 $CONFIG_PARPORT_1284 [list $notmod] 2 }
	global CONFIG_PARPORT_HD64465
	global CONFIG_SH_HD64465
	if {($CONFIG_PARPORT != 0) && ($CONFIG_SH_HD64465 != 0)} then {write_tristate $cfg $autocfg CONFIG_PARPORT_HD64465 $CONFIG_PARPORT_HD64465 [list $notmod] 2 }
	if {($CONFIG_ALIGNMENT_TRAP == 1)} then {write_comment $cfg $autocfg "Memory Technology Devices (MTD)"}
	global CONFIG_MTD
	if {($CONFIG_ALIGNMENT_TRAP == 1)} then {write_tristate $cfg $autocfg CONFIG_MTD $CONFIG_MTD [list $notmod] 2 }
	global CONFIG_MTD_DEBUG
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2)} then {write_tristate $cfg $autocfg CONFIG_MTD_DEBUG $CONFIG_MTD_DEBUG [list $notmod] 2 }
	global CONFIG_MTD_DEBUG_VERBOSE
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD_DEBUG == 1)} then {write_int $cfg $autocfg CONFIG_MTD_DEBUG_VERBOSE $CONFIG_MTD_DEBUG_VERBOSE $notmod }
	global CONFIG_MTD_PARTITIONS
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2 || $CONFIG_MTD == 4)} then {write_tristate $cfg $autocfg CONFIG_MTD_PARTITIONS $CONFIG_MTD_PARTITIONS [list $CONFIG_MTD] 2 }
	global CONFIG_MTD_CONCAT
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2 || $CONFIG_MTD == 4)} then {write_tristate $cfg $autocfg CONFIG_MTD_CONCAT $CONFIG_MTD_CONCAT [list $CONFIG_MTD] 2 }
	global CONFIG_MTD_REDBOOT_PARTS
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD_PARTITIONS == 1 || $CONFIG_MTD_PARTITIONS == 2 || $CONFIG_MTD_PARTITIONS == 4)} then {write_tristate $cfg $autocfg CONFIG_MTD_REDBOOT_PARTS $CONFIG_MTD_REDBOOT_PARTS [list $CONFIG_MTD_PARTITIONS] 2 }
	global CONFIG_MTD_CMDLINE_PARTS
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD_PARTITIONS == 1 || $CONFIG_MTD_PARTITIONS == 2 || $CONFIG_MTD_PARTITIONS == 4)} then {write_tristate $cfg $autocfg CONFIG_MTD_CMDLINE_PARTS $CONFIG_MTD_CMDLINE_PARTS [list $CONFIG_MTD_PARTITIONS] 2 }
	global CONFIG_MTD_AFS_PARTS
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_ARM == 1) && ($CONFIG_MTD_PARTITIONS == 1 || $CONFIG_MTD_PARTITIONS == 2 || $CONFIG_MTD_PARTITIONS == 4)} then {write_tristate $cfg $autocfg CONFIG_MTD_AFS_PARTS $CONFIG_MTD_AFS_PARTS [list $CONFIG_MTD_PARTITIONS] 2 }
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2)} then {write_comment $cfg $autocfg "User Modules And Translation Layers"}
	global CONFIG_MTD_CHAR
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2 || $CONFIG_MTD == 4)} then {write_tristate $cfg $autocfg CONFIG_MTD_CHAR $CONFIG_MTD_CHAR [list $CONFIG_MTD] 2 }
	global CONFIG_MTD_BLOCK
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2 || $CONFIG_MTD == 4)} then {write_tristate $cfg $autocfg CONFIG_MTD_BLOCK $CONFIG_MTD_BLOCK [list $CONFIG_MTD] 2 }
	global CONFIG_MTD_BLOCK_RO
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD_BLOCK == 0 || $CONFIG_MTD_BLOCK == 2) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2 || $CONFIG_MTD == 4)} then {write_tristate $cfg $autocfg CONFIG_MTD_BLOCK_RO $CONFIG_MTD_BLOCK_RO [list $CONFIG_MTD] 2 }
	global CONFIG_FTL
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2 || $CONFIG_MTD == 4)} then {write_tristate $cfg $autocfg CONFIG_FTL $CONFIG_FTL [list $CONFIG_MTD] 2 }
	global CONFIG_NFTL
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2 || $CONFIG_MTD == 4)} then {write_tristate $cfg $autocfg CONFIG_NFTL $CONFIG_NFTL [list $CONFIG_MTD] 2 }
	global CONFIG_INFTL
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2 || $CONFIG_MTD == 4)} then {write_tristate $cfg $autocfg CONFIG_INFTL $CONFIG_INFTL [list $CONFIG_MTD] 2 }
	global CONFIG_NFTL_RW
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_NFTL == 1 || $CONFIG_NFTL == 2)} then {write_tristate $cfg $autocfg CONFIG_NFTL_RW $CONFIG_NFTL_RW [list $notmod] 2 }
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2)} then {write_comment $cfg $autocfg "RAM/ROM/Flash chip drivers"}
	global CONFIG_MTD_CFI
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2 || $CONFIG_MTD == 4)} then {write_tristate $cfg $autocfg CONFIG_MTD_CFI $CONFIG_MTD_CFI [list $CONFIG_MTD] 2 }
	global CONFIG_MTD_JEDECPROBE
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2 || $CONFIG_MTD == 4)} then {write_tristate $cfg $autocfg CONFIG_MTD_JEDECPROBE $CONFIG_MTD_JEDECPROBE [list $CONFIG_MTD] 2 }
	global CONFIG_MTD_GEN_PROBE
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD_CFI == 1 || $CONFIG_MTD_JEDECPROBE == 1)} then {write_tristate $cfg $autocfg CONFIG_MTD_GEN_PROBE $CONSTANT_Y [list $notmod] 2 }
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD_CFI != 1 && $CONFIG_MTD_JEDECPROBE != 1) && ($CONFIG_MTD_CFI == 2 || $CONFIG_MTD_JEDECPROBE == 2)} then {write_tristate $cfg $autocfg CONFIG_MTD_GEN_PROBE $CONSTANT_M [list $notmod] 2 }
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD_CFI != 1 && $CONFIG_MTD_JEDECPROBE != 1) && ($CONFIG_MTD_CFI != 2 && $CONFIG_MTD_JEDECPROBE != 2)} then {write_tristate $cfg $autocfg CONFIG_MTD_GEN_PROBE $CONSTANT_N [list $notmod] 2 }
	global CONFIG_MTD_CFI_ADV_OPTIONS
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD_GEN_PROBE == 1 || $CONFIG_MTD_GEN_PROBE == 2)} then {write_tristate $cfg $autocfg CONFIG_MTD_CFI_ADV_OPTIONS $CONFIG_MTD_CFI_ADV_OPTIONS [list $notmod] 2 }
	global tmpvar_11
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD_GEN_PROBE == 1 || $CONFIG_MTD_GEN_PROBE == 2) && ($CONFIG_MTD_CFI_ADV_OPTIONS == 1)} then {
	if { $tmpvar_11 == "NO" } then { write_tristate $cfg $autocfg CONFIG_MTD_CFI_NOSWAP 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_MTD_CFI_NOSWAP 0 [list $notmod] 2 }
	if { $tmpvar_11 == "BIG_ENDIAN_BYTE" } then { write_tristate $cfg $autocfg CONFIG_MTD_CFI_BE_BYTE_SWAP 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_MTD_CFI_BE_BYTE_SWAP 0 [list $notmod] 2 }
	if { $tmpvar_11 == "LITTLE_ENDIAN_BYTE" } then { write_tristate $cfg $autocfg CONFIG_MTD_CFI_LE_BYTE_SWAP 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_MTD_CFI_LE_BYTE_SWAP 0 [list $notmod] 2 }}
	global CONFIG_MTD_CFI_GEOMETRY
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD_GEN_PROBE == 1 || $CONFIG_MTD_GEN_PROBE == 2) && ($CONFIG_MTD_CFI_ADV_OPTIONS == 1)} then {write_tristate $cfg $autocfg CONFIG_MTD_CFI_GEOMETRY $CONFIG_MTD_CFI_GEOMETRY [list $notmod] 2 }
	global CONFIG_MTD_CFI_B1
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD_GEN_PROBE == 1 || $CONFIG_MTD_GEN_PROBE == 2) && ($CONFIG_MTD_CFI_ADV_OPTIONS == 1) && ($CONFIG_MTD_CFI_GEOMETRY == 1)} then {write_tristate $cfg $autocfg CONFIG_MTD_CFI_B1 $CONFIG_MTD_CFI_B1 [list $notmod] 2 }
	global CONFIG_MTD_CFI_B2
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD_GEN_PROBE == 1 || $CONFIG_MTD_GEN_PROBE == 2) && ($CONFIG_MTD_CFI_ADV_OPTIONS == 1) && ($CONFIG_MTD_CFI_GEOMETRY == 1)} then {write_tristate $cfg $autocfg CONFIG_MTD_CFI_B2 $CONFIG_MTD_CFI_B2 [list $notmod] 2 }
	global CONFIG_MTD_CFI_B4
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD_GEN_PROBE == 1 || $CONFIG_MTD_GEN_PROBE == 2) && ($CONFIG_MTD_CFI_ADV_OPTIONS == 1) && ($CONFIG_MTD_CFI_GEOMETRY == 1)} then {write_tristate $cfg $autocfg CONFIG_MTD_CFI_B4 $CONFIG_MTD_CFI_B4 [list $notmod] 2 }
	global CONFIG_MTD_CFI_B8
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD_GEN_PROBE == 1 || $CONFIG_MTD_GEN_PROBE == 2) && ($CONFIG_MTD_CFI_ADV_OPTIONS == 1) && ($CONFIG_MTD_CFI_GEOMETRY == 1)} then {write_tristate $cfg $autocfg CONFIG_MTD_CFI_B8 $CONFIG_MTD_CFI_B8 [list $notmod] 2 }
	global CONFIG_MTD_CFI_I1
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD_GEN_PROBE == 1 || $CONFIG_MTD_GEN_PROBE == 2) && ($CONFIG_MTD_CFI_ADV_OPTIONS == 1) && ($CONFIG_MTD_CFI_GEOMETRY == 1) && ($CONFIG_MTD_CFI_B1 == 1)} then {write_tristate $cfg $autocfg CONFIG_MTD_CFI_I1 $CONSTANT_Y [list $notmod] 2 }
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD_GEN_PROBE == 1 || $CONFIG_MTD_GEN_PROBE == 2) && ($CONFIG_MTD_CFI_ADV_OPTIONS == 1) && ($CONFIG_MTD_CFI_GEOMETRY == 1) && ($CONFIG_MTD_CFI_B1 != 1)} then {write_tristate $cfg $autocfg CONFIG_MTD_CFI_I1 $CONFIG_MTD_CFI_I1 [list $notmod] 2 }
	global CONFIG_MTD_CFI_I2
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD_GEN_PROBE == 1 || $CONFIG_MTD_GEN_PROBE == 2) && ($CONFIG_MTD_CFI_ADV_OPTIONS == 1) && ($CONFIG_MTD_CFI_GEOMETRY == 1)} then {write_tristate $cfg $autocfg CONFIG_MTD_CFI_I2 $CONFIG_MTD_CFI_I2 [list $notmod] 2 }
	global CONFIG_MTD_CFI_I4
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD_GEN_PROBE == 1 || $CONFIG_MTD_GEN_PROBE == 2) && ($CONFIG_MTD_CFI_ADV_OPTIONS == 1) && ($CONFIG_MTD_CFI_GEOMETRY == 1)} then {write_tristate $cfg $autocfg CONFIG_MTD_CFI_I4 $CONFIG_MTD_CFI_I4 [list $notmod] 2 }
	global CONFIG_MTD_CFI_I8
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD_GEN_PROBE == 1 || $CONFIG_MTD_GEN_PROBE == 2) && ($CONFIG_MTD_CFI_ADV_OPTIONS == 1) && ($CONFIG_MTD_CFI_GEOMETRY == 1)} then {write_tristate $cfg $autocfg CONFIG_MTD_CFI_I8 $CONFIG_MTD_CFI_I8 [list $notmod] 2 }
	global CONFIG_MTD_CFI_INTELEXT
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD_GEN_PROBE == 1 || $CONFIG_MTD_GEN_PROBE == 2 || $CONFIG_MTD_GEN_PROBE == 4)} then {write_tristate $cfg $autocfg CONFIG_MTD_CFI_INTELEXT $CONFIG_MTD_CFI_INTELEXT [list $CONFIG_MTD_GEN_PROBE] 2 }
	global CONFIG_MTD_CFI_AMDSTD
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD_GEN_PROBE == 1 || $CONFIG_MTD_GEN_PROBE == 2 || $CONFIG_MTD_GEN_PROBE == 4)} then {write_tristate $cfg $autocfg CONFIG_MTD_CFI_AMDSTD $CONFIG_MTD_CFI_AMDSTD [list $CONFIG_MTD_GEN_PROBE] 2 }
	global CONFIG_MTD_CFI_STAA
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD_GEN_PROBE == 1 || $CONFIG_MTD_GEN_PROBE == 2 || $CONFIG_MTD_GEN_PROBE == 4)} then {write_tristate $cfg $autocfg CONFIG_MTD_CFI_STAA $CONFIG_MTD_CFI_STAA [list $CONFIG_MTD_GEN_PROBE] 2 }
	global CONFIG_MTD_RAM
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2 || $CONFIG_MTD == 4)} then {write_tristate $cfg $autocfg CONFIG_MTD_RAM $CONFIG_MTD_RAM [list $CONFIG_MTD] 2 }
	global CONFIG_MTD_ROM
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2 || $CONFIG_MTD == 4)} then {write_tristate $cfg $autocfg CONFIG_MTD_ROM $CONFIG_MTD_ROM [list $CONFIG_MTD] 2 }
	global CONFIG_MTD_ABSENT
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2 || $CONFIG_MTD == 4)} then {write_tristate $cfg $autocfg CONFIG_MTD_ABSENT $CONFIG_MTD_ABSENT [list $CONFIG_MTD] 2 }
	global CONFIG_MTD_OBSOLETE_CHIPS
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2)} then {write_tristate $cfg $autocfg CONFIG_MTD_OBSOLETE_CHIPS $CONFIG_MTD_OBSOLETE_CHIPS [list $notmod] 2 }
	global CONFIG_MTD_AMDSTD
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2 || $CONFIG_MTD == 4) && ($CONFIG_MTD_OBSOLETE_CHIPS == 1 || $CONFIG_MTD_OBSOLETE_CHIPS == 2 || $CONFIG_MTD_OBSOLETE_CHIPS == 4)} then {write_tristate $cfg $autocfg CONFIG_MTD_AMDSTD $CONFIG_MTD_AMDSTD [list $CONFIG_MTD $CONFIG_MTD_OBSOLETE_CHIPS] 2 }
	global CONFIG_MTD_SHARP
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2 || $CONFIG_MTD == 4) && ($CONFIG_MTD_OBSOLETE_CHIPS == 1 || $CONFIG_MTD_OBSOLETE_CHIPS == 2 || $CONFIG_MTD_OBSOLETE_CHIPS == 4)} then {write_tristate $cfg $autocfg CONFIG_MTD_SHARP $CONFIG_MTD_SHARP [list $CONFIG_MTD $CONFIG_MTD_OBSOLETE_CHIPS] 2 }
	global CONFIG_MTD_JEDEC
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2 || $CONFIG_MTD == 4) && ($CONFIG_MTD_OBSOLETE_CHIPS == 1 || $CONFIG_MTD_OBSOLETE_CHIPS == 2 || $CONFIG_MTD_OBSOLETE_CHIPS == 4)} then {write_tristate $cfg $autocfg CONFIG_MTD_JEDEC $CONFIG_MTD_JEDEC [list $CONFIG_MTD $CONFIG_MTD_OBSOLETE_CHIPS] 2 }
	global CONFIG_MTD_PSD4256G
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2 || $CONFIG_MTD == 4) && ($CONFIG_MTD_OBSOLETE_CHIPS == 1 || $CONFIG_MTD_OBSOLETE_CHIPS == 2 || $CONFIG_MTD_OBSOLETE_CHIPS == 4)} then {write_tristate $cfg $autocfg CONFIG_MTD_PSD4256G $CONFIG_MTD_PSD4256G [list $CONFIG_MTD $CONFIG_MTD_OBSOLETE_CHIPS] 2 }
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2)} then {write_comment $cfg $autocfg "Mapping drivers for chip access"}
	global CONFIG_MTD_PHYSMAP
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD_GEN_PROBE == 1 || $CONFIG_MTD_GEN_PROBE == 2 || $CONFIG_MTD_GEN_PROBE == 4)} then {write_tristate $cfg $autocfg CONFIG_MTD_PHYSMAP $CONFIG_MTD_PHYSMAP [list $CONFIG_MTD_GEN_PROBE] 2 }
	global CONFIG_MTD_PHYSMAP_START
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD_PHYSMAP == 1 || $CONFIG_MTD_PHYSMAP == 2)} then {write_hex $cfg $autocfg CONFIG_MTD_PHYSMAP_START $CONFIG_MTD_PHYSMAP_START $notmod }
	global CONFIG_MTD_PHYSMAP_LEN
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD_PHYSMAP == 1 || $CONFIG_MTD_PHYSMAP == 2)} then {write_hex $cfg $autocfg CONFIG_MTD_PHYSMAP_LEN $CONFIG_MTD_PHYSMAP_LEN $notmod }
	global CONFIG_MTD_PHYSMAP_BUSWIDTH
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD_PHYSMAP == 1 || $CONFIG_MTD_PHYSMAP == 2)} then {write_int $cfg $autocfg CONFIG_MTD_PHYSMAP_BUSWIDTH $CONFIG_MTD_PHYSMAP_BUSWIDTH $notmod }
	global CONFIG_MTD_DRAGONIX
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD_CFI_INTELEXT == 1 || $CONFIG_MTD_CFI_INTELEXT == 2 || $CONFIG_MTD_CFI_INTELEXT == 4) && ($CONFIG_MTD_CFI_AMDSTD == 1 || $CONFIG_MTD_CFI_AMDSTD == 2 || $CONFIG_MTD_CFI_AMDSTD == 4) && ($CONFIG_MTD_PARTITIONS == 1 || $CONFIG_MTD_PARTITIONS == 2 || $CONFIG_MTD_PARTITIONS == 4)} then {write_tristate $cfg $autocfg CONFIG_MTD_DRAGONIX $CONFIG_MTD_DRAGONIX [list $CONFIG_MTD_CFI_INTELEXT $CONFIG_MTD_CFI_AMDSTD $CONFIG_MTD_PARTITIONS] 2 }
	global CONFIG_MTD_NETtel
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD_PARTITIONS == 1 || $CONFIG_MTD_PARTITIONS == 2 || $CONFIG_MTD_PARTITIONS == 4)} then {write_tristate $cfg $autocfg CONFIG_MTD_NETtel $CONFIG_MTD_NETtel [list $CONFIG_MTD_PARTITIONS] 2 }
	global CONFIG_MTD_SNAPGEODE
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD_PARTITIONS == 1 || $CONFIG_MTD_PARTITIONS == 2 || $CONFIG_MTD_PARTITIONS == 4)} then {write_tristate $cfg $autocfg CONFIG_MTD_SNAPGEODE $CONFIG_MTD_SNAPGEODE [list $CONFIG_MTD_PARTITIONS] 2 }
	global CONFIG_MTD_NETteluC
	global CONFIG_UCLINUX
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_UCLINUX == 1 || $CONFIG_UCLINUX == 2 || $CONFIG_UCLINUX == 4) && ($CONFIG_MTD_PARTITIONS == 1 || $CONFIG_MTD_PARTITIONS == 2 || $CONFIG_MTD_PARTITIONS == 4)} then {write_tristate $cfg $autocfg CONFIG_MTD_NETteluC $CONFIG_MTD_NETteluC [list $CONFIG_UCLINUX $CONFIG_MTD_PARTITIONS] 2 }
	global tmpvar_12
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD_NETteluC == 1)} then {
	if { $tmpvar_12 == "AUTO" } then { write_tristate $cfg $autocfg CONFIG_FLASHAUTO 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_FLASHAUTO 0 [list $notmod] 2 }
	if { $tmpvar_12 == "128KB" } then { write_tristate $cfg $autocfg CONFIG_FLASH128KB 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_FLASH128KB 0 [list $notmod] 2 }
	if { $tmpvar_12 == "1MB" } then { write_tristate $cfg $autocfg CONFIG_FLASH1MB 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_FLASH1MB 0 [list $notmod] 2 }
	if { $tmpvar_12 == "2MB" } then { write_tristate $cfg $autocfg CONFIG_FLASH2MB 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_FLASH2MB 0 [list $notmod] 2 }
	if { $tmpvar_12 == "4MB" } then { write_tristate $cfg $autocfg CONFIG_FLASH4MB 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_FLASH4MB 0 [list $notmod] 2 }
	if { $tmpvar_12 == "6MB" } then { write_tristate $cfg $autocfg CONFIG_FLASH6MB 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_FLASH6MB 0 [list $notmod] 2 }
	if { $tmpvar_12 == "8MB" } then { write_tristate $cfg $autocfg CONFIG_FLASH8MB 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_FLASH8MB 0 [list $notmod] 2 }
	if { $tmpvar_12 == "16MB" } then { write_tristate $cfg $autocfg CONFIG_FLASH16MB 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_FLASH16MB 0 [list $notmod] 2 }}
	global CONFIG_MTD_MBVANILLA
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_UCLINUX == 1 || $CONFIG_UCLINUX == 2 || $CONFIG_UCLINUX == 4) && ($CONFIG_MTD_PARTITIONS == 1 || $CONFIG_MTD_PARTITIONS == 2 || $CONFIG_MTD_PARTITIONS == 4)} then {write_tristate $cfg $autocfg CONFIG_MTD_MBVANILLA $CONFIG_MTD_MBVANILLA [list $CONFIG_UCLINUX $CONFIG_MTD_PARTITIONS] 2 }
	global tmpvar_13
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD_MBVANILLA == 1)} then {
	if { $tmpvar_13 == "AUTO" } then { write_tristate $cfg $autocfg CONFIG_FLASHAUTO 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_FLASHAUTO 0 [list $notmod] 2 }
	if { $tmpvar_13 == "128KB" } then { write_tristate $cfg $autocfg CONFIG_FLASH128KB 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_FLASH128KB 0 [list $notmod] 2 }
	if { $tmpvar_13 == "1MB" } then { write_tristate $cfg $autocfg CONFIG_FLASH1MB 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_FLASH1MB 0 [list $notmod] 2 }
	if { $tmpvar_13 == "2MB" } then { write_tristate $cfg $autocfg CONFIG_FLASH2MB 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_FLASH2MB 0 [list $notmod] 2 }
	if { $tmpvar_13 == "4MB" } then { write_tristate $cfg $autocfg CONFIG_FLASH4MB 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_FLASH4MB 0 [list $notmod] 2 }
	if { $tmpvar_13 == "6MB" } then { write_tristate $cfg $autocfg CONFIG_FLASH6MB 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_FLASH6MB 0 [list $notmod] 2 }
	if { $tmpvar_13 == "8MB" } then { write_tristate $cfg $autocfg CONFIG_FLASH8MB 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_FLASH8MB 0 [list $notmod] 2 }}
	global CONFIG_MTD_KeyTechnology
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_UCLINUX == 1 || $CONFIG_UCLINUX == 2 || $CONFIG_UCLINUX == 4) && ($CONFIG_MTD_PARTITIONS == 1 || $CONFIG_MTD_PARTITIONS == 2 || $CONFIG_MTD_PARTITIONS == 4)} then {write_tristate $cfg $autocfg CONFIG_MTD_KeyTechnology $CONFIG_MTD_KeyTechnology [list $CONFIG_UCLINUX $CONFIG_MTD_PARTITIONS] 2 }
	global CONFIG_MTD_NORA
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_ARM == 1) && ($CONFIG_MTD_CFI == 1 || $CONFIG_MTD_CFI == 2 || $CONFIG_MTD_CFI == 4)} then {write_tristate $cfg $autocfg CONFIG_MTD_NORA $CONFIG_MTD_NORA [list $CONFIG_MTD_CFI] 2 }
	global CONFIG_MTD_ARM_INTEGRATOR
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_ARM == 1) && ($CONFIG_MTD_CFI == 1 || $CONFIG_MTD_CFI == 2 || $CONFIG_MTD_CFI == 4)} then {write_tristate $cfg $autocfg CONFIG_MTD_ARM_INTEGRATOR $CONFIG_MTD_ARM_INTEGRATOR [list $CONFIG_MTD_CFI] 2 }
	global CONFIG_MTD_CDB89712
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_ARM == 1) && ($CONFIG_MTD_CFI == 1 || $CONFIG_MTD_CFI == 2 || $CONFIG_MTD_CFI == 4) && ($CONFIG_ARCH_CDB89712 == 1 || $CONFIG_ARCH_CDB89712 == 2 || $CONFIG_ARCH_CDB89712 == 4)} then {write_tristate $cfg $autocfg CONFIG_MTD_CDB89712 $CONFIG_MTD_CDB89712 [list $CONFIG_MTD_CFI $CONFIG_ARCH_CDB89712] 2 }
	global CONFIG_MTD_SA1100
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_ARM == 1) && ($CONFIG_MTD_CFI == 1 || $CONFIG_MTD_CFI == 2 || $CONFIG_MTD_CFI == 4) && ($CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_SA1100 == 2 || $CONFIG_ARCH_SA1100 == 4) && ($CONFIG_MTD_PARTITIONS == 1 || $CONFIG_MTD_PARTITIONS == 2 || $CONFIG_MTD_PARTITIONS == 4)} then {write_tristate $cfg $autocfg CONFIG_MTD_SA1100 $CONFIG_MTD_SA1100 [list $CONFIG_MTD_CFI $CONFIG_ARCH_SA1100 $CONFIG_MTD_PARTITIONS] 2 }
	global CONFIG_MTD_DC21285
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_ARM == 1) && ($CONFIG_MTD_CFI == 1 || $CONFIG_MTD_CFI == 2 || $CONFIG_MTD_CFI == 4) && ($CONFIG_ARCH_FOOTBRIDGE == 1 || $CONFIG_ARCH_FOOTBRIDGE == 2 || $CONFIG_ARCH_FOOTBRIDGE == 4)} then {write_tristate $cfg $autocfg CONFIG_MTD_DC21285 $CONFIG_MTD_DC21285 [list $CONFIG_MTD_CFI $CONFIG_ARCH_FOOTBRIDGE] 2 }
	global CONFIG_MTD_IQ80310
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_ARM == 1) && ($CONFIG_MTD_CFI == 1 || $CONFIG_MTD_CFI == 2 || $CONFIG_MTD_CFI == 4) && ($CONFIG_ARCH_IQ80310 == 1 || $CONFIG_ARCH_IQ80310 == 2 || $CONFIG_ARCH_IQ80310 == 4)} then {write_tristate $cfg $autocfg CONFIG_MTD_IQ80310 $CONFIG_MTD_IQ80310 [list $CONFIG_MTD_CFI $CONFIG_ARCH_IQ80310] 2 }
	global CONFIG_MTD_EPXA10DB
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_ARM == 1) && ($CONFIG_MTD_CFI == 1 || $CONFIG_MTD_CFI == 2 || $CONFIG_MTD_CFI == 4) && ($CONFIG_MTD_PARTITIONS == 1 || $CONFIG_MTD_PARTITIONS == 2 || $CONFIG_MTD_PARTITIONS == 4) && ($CONFIG_ARCH_CAMELOT == 1 || $CONFIG_ARCH_CAMELOT == 2 || $CONFIG_ARCH_CAMELOT == 4)} then {write_tristate $cfg $autocfg CONFIG_MTD_EPXA10DB $CONFIG_MTD_EPXA10DB [list $CONFIG_MTD_CFI $CONFIG_MTD_PARTITIONS $CONFIG_ARCH_CAMELOT] 2 }
	global CONFIG_MTD_FORTUNET
	global CONFIG_SA1100_FORTUNET
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_ARM == 1) && ($CONFIG_MTD_CFI == 1 || $CONFIG_MTD_CFI == 2 || $CONFIG_MTD_CFI == 4) && ($CONFIG_MTD_PARTITIONS == 1 || $CONFIG_MTD_PARTITIONS == 2 || $CONFIG_MTD_PARTITIONS == 4) && ($CONFIG_SA1100_FORTUNET == 1 || $CONFIG_SA1100_FORTUNET == 2 || $CONFIG_SA1100_FORTUNET == 4)} then {write_tristate $cfg $autocfg CONFIG_MTD_FORTUNET $CONFIG_MTD_FORTUNET [list $CONFIG_MTD_CFI $CONFIG_MTD_PARTITIONS $CONFIG_SA1100_FORTUNET] 2 }
	global CONFIG_MTD_AUTCPU12
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_ARM == 1) && ($CONFIG_ARCH_AUTCPU12 == 1 || $CONFIG_ARCH_AUTCPU12 == 2 || $CONFIG_ARCH_AUTCPU12 == 4)} then {write_tristate $cfg $autocfg CONFIG_MTD_AUTCPU12 $CONFIG_MTD_AUTCPU12 [list $CONFIG_ARCH_AUTCPU12] 2 }
	global CONFIG_MTD_IXP425
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_ARM == 1) && ($CONFIG_MTD_CFI == 1 || $CONFIG_MTD_CFI == 2 || $CONFIG_MTD_CFI == 4) && ($CONFIG_MTD_PARTITIONS == 1 || $CONFIG_MTD_PARTITIONS == 2 || $CONFIG_MTD_PARTITIONS == 4)} then {write_tristate $cfg $autocfg CONFIG_MTD_IXP425 $CONFIG_MTD_IXP425 [list $CONFIG_MTD_CFI $CONFIG_MTD_PARTITIONS] 2 }
	global CONFIG_MTD_SE4000
	global CONFIG_ARCH_SE4000
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_ARM == 1) && ($CONFIG_MTD_CFI == 1 || $CONFIG_MTD_CFI == 2 || $CONFIG_MTD_CFI == 4) && ($CONFIG_ARCH_SE4000 == 1 || $CONFIG_ARCH_SE4000 == 2 || $CONFIG_ARCH_SE4000 == 4)} then {write_tristate $cfg $autocfg CONFIG_MTD_SE4000 $CONFIG_MTD_SE4000 [list $CONFIG_MTD_CFI $CONFIG_ARCH_SE4000] 2 }
	global CONFIG_MTD_SNAPARM
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_ARM == 1) && ($CONFIG_MTD_CFI == 1 || $CONFIG_MTD_CFI == 2 || $CONFIG_MTD_CFI == 4)} then {write_tristate $cfg $autocfg CONFIG_MTD_SNAPARM $CONFIG_MTD_SNAPARM [list $CONFIG_MTD_CFI] 2 }
	global CONFIG_MTD_EDB7312
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_ARM == 1) && ($CONFIG_MTD_CFI == 1 || $CONFIG_MTD_CFI == 2 || $CONFIG_MTD_CFI == 4)} then {write_tristate $cfg $autocfg CONFIG_MTD_EDB7312 $CONFIG_MTD_EDB7312 [list $CONFIG_MTD_CFI] 2 }
	global CONFIG_MTD_IMPA7
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_ARM == 1) && ($CONFIG_MTD_JEDECPROBE == 1 || $CONFIG_MTD_JEDECPROBE == 2 || $CONFIG_MTD_JEDECPROBE == 4)} then {write_tristate $cfg $autocfg CONFIG_MTD_IMPA7 $CONFIG_MTD_IMPA7 [list $CONFIG_MTD_JEDECPROBE] 2 }
	global CONFIG_MTD_CEIVA
	global CONFIG_ARCH_CEIVA
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_ARM == 1) && ($CONFIG_MTD_JEDECPROBE == 1 || $CONFIG_MTD_JEDECPROBE == 2 || $CONFIG_MTD_JEDECPROBE == 4) && ($CONFIG_ARCH_CEIVA == 1 || $CONFIG_ARCH_CEIVA == 2 || $CONFIG_ARCH_CEIVA == 4)} then {write_tristate $cfg $autocfg CONFIG_MTD_CEIVA $CONFIG_MTD_CEIVA [list $CONFIG_MTD_JEDECPROBE $CONFIG_ARCH_CEIVA] 2 }
	global CONFIG_MTD_M5272C3
	global CONFIG_M5272C3
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_M5272C3) && ($CONFIG_MTD_CFI == 1 || $CONFIG_MTD_CFI == 2 || $CONFIG_MTD_CFI == 4)} then {write_tristate $cfg $autocfg CONFIG_MTD_M5272C3 $CONFIG_MTD_M5272C3 [list $CONFIG_MTD_CFI] 2 }
	global CONFIG_MTD_PCI
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2 || $CONFIG_MTD == 4) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {write_tristate $cfg $autocfg CONFIG_MTD_PCI $CONFIG_MTD_PCI [list $CONFIG_MTD $CONFIG_PCI] 2 }
	global CONFIG_MTD_PCMCIA
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2 || $CONFIG_MTD == 4) && ($CONFIG_PCMCIA == 1 || $CONFIG_PCMCIA == 2 || $CONFIG_PCMCIA == 4)} then {write_tristate $cfg $autocfg CONFIG_MTD_PCMCIA $CONFIG_MTD_PCMCIA [list $CONFIG_MTD $CONFIG_PCMCIA] 2 }
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2)} then {write_comment $cfg $autocfg "Self-contained MTD device drivers"}
	global CONFIG_MTD_PMC551
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2 || $CONFIG_MTD == 4) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {write_tristate $cfg $autocfg CONFIG_MTD_PMC551 $CONFIG_MTD_PMC551 [list $CONFIG_MTD $CONFIG_PCI] 2 }
	global CONFIG_MTD_PMC551_BUGFIX
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD_PMC551 == 1 || $CONFIG_MTD_PMC551 == 2)} then {write_tristate $cfg $autocfg CONFIG_MTD_PMC551_BUGFIX $CONFIG_MTD_PMC551_BUGFIX [list $notmod] 2 }
	global CONFIG_MTD_PMC551_DEBUG
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD_PMC551 == 1 || $CONFIG_MTD_PMC551 == 2)} then {write_tristate $cfg $autocfg CONFIG_MTD_PMC551_DEBUG $CONFIG_MTD_PMC551_DEBUG [list $notmod] 2 }
	global CONFIG_MTD_SLRAM
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2 || $CONFIG_MTD == 4)} then {write_tristate $cfg $autocfg CONFIG_MTD_SLRAM $CONFIG_MTD_SLRAM [list $CONFIG_MTD] 2 }
	global CONFIG_MTD_LART
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_SA1100_LART == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2 || $CONFIG_MTD == 4)} then {write_tristate $cfg $autocfg CONFIG_MTD_LART $CONFIG_MTD_LART [list $CONFIG_MTD] 2 }
	global CONFIG_MTD_MTDRAM
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2 || $CONFIG_MTD == 4)} then {write_tristate $cfg $autocfg CONFIG_MTD_MTDRAM $CONFIG_MTD_MTDRAM [list $CONFIG_MTD] 2 }
	global CONFIG_MTDRAM_TOTAL_SIZE
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD_MTDRAM == 1 || $CONFIG_MTD_MTDRAM == 2)} then {write_int $cfg $autocfg CONFIG_MTDRAM_TOTAL_SIZE $CONFIG_MTDRAM_TOTAL_SIZE $notmod }
	global CONFIG_MTDRAM_ERASE_SIZE
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD_MTDRAM == 1 || $CONFIG_MTD_MTDRAM == 2)} then {write_int $cfg $autocfg CONFIG_MTDRAM_ERASE_SIZE $CONFIG_MTDRAM_ERASE_SIZE $notmod }
	global CONFIG_MTDRAM_ABS_POS
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD_MTDRAM == 1 || $CONFIG_MTD_MTDRAM == 2) && ($CONFIG_MTD_MTDRAM == 1)} then {write_hex $cfg $autocfg CONFIG_MTDRAM_ABS_POS $CONFIG_MTDRAM_ABS_POS $notmod }
	global CONFIG_MTD_BLKMTD
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2 || $CONFIG_MTD == 4)} then {write_tristate $cfg $autocfg CONFIG_MTD_BLKMTD $CONFIG_MTD_BLKMTD [list $CONFIG_MTD] 2 }
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2)} then {write_comment $cfg $autocfg "Disk-On-Chip Device Drivers"}
	global CONFIG_MTD_DOC1000
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2 || $CONFIG_MTD == 4)} then {write_tristate $cfg $autocfg CONFIG_MTD_DOC1000 $CONFIG_MTD_DOC1000 [list $CONFIG_MTD] 2 }
	global CONFIG_MTD_DOC2000
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2 || $CONFIG_MTD == 4)} then {write_tristate $cfg $autocfg CONFIG_MTD_DOC2000 $CONFIG_MTD_DOC2000 [list $CONFIG_MTD] 2 }
	global CONFIG_MTD_DOC2001
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2 || $CONFIG_MTD == 4)} then {write_tristate $cfg $autocfg CONFIG_MTD_DOC2001 $CONFIG_MTD_DOC2001 [list $CONFIG_MTD] 2 }
	global CONFIG_MTD_DOC2001PLUS
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2 || $CONFIG_MTD == 4)} then {write_tristate $cfg $autocfg CONFIG_MTD_DOC2001PLUS $CONFIG_MTD_DOC2001PLUS [list $CONFIG_MTD] 2 }
	global CONFIG_MTD_DOCPROBE
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD_DOC2001PLUS == 1 || $CONFIG_MTD_DOC2001 == 1 || $CONFIG_MTD_DOC2000 == 1)} then {write_tristate $cfg $autocfg CONFIG_MTD_DOCPROBE $CONSTANT_Y [list $notmod] 2 }
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD_DOC2001PLUS != 1 && $CONFIG_MTD_DOC2001 != 1 && $CONFIG_MTD_DOC2000 != 1) && ($CONFIG_MTD_DOC2001PLUS == 2 || $CONFIG_MTD_DOC2001 == 2 || $CONFIG_MTD_DOC2000 == 2)} then {write_tristate $cfg $autocfg CONFIG_MTD_DOCPROBE $CONSTANT_M [list $notmod] 2 }
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD_DOC2001PLUS != 1 && $CONFIG_MTD_DOC2001 != 1 && $CONFIG_MTD_DOC2000 != 1) && ($CONFIG_MTD_DOC2001PLUS != 2 && $CONFIG_MTD_DOC2001 != 2 && $CONFIG_MTD_DOC2000 != 2)} then {write_tristate $cfg $autocfg CONFIG_MTD_DOCPROBE $CONSTANT_N [list $notmod] 2 }
	global CONFIG_MTD_DOCPROBE_ADVANCED
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD_DOCPROBE == 1 || $CONFIG_MTD_DOCPROBE == 2)} then {write_tristate $cfg $autocfg CONFIG_MTD_DOCPROBE_ADVANCED $CONFIG_MTD_DOCPROBE_ADVANCED [list $notmod] 2 }
	global CONFIG_MTD_DOCPROBE_ADDRESS
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD_DOCPROBE == 1 || $CONFIG_MTD_DOCPROBE == 2) && ($CONFIG_MTD_DOCPROBE_ADVANCED == 0)} then {write_hex $cfg $autocfg CONFIG_MTD_DOCPROBE_ADDRESS 0 $notmod }
	global CONFIG_MTD_DOCPROBE_HIGH
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD_DOCPROBE == 1 || $CONFIG_MTD_DOCPROBE == 2) && ($CONFIG_MTD_DOCPROBE_ADVANCED == 0)} then {write_tristate $cfg $autocfg CONFIG_MTD_DOCPROBE_HIGH $CONSTANT_N [list $notmod] 2 }
	global CONFIG_MTD_DOCPROBE_55AA
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD_DOCPROBE == 1 || $CONFIG_MTD_DOCPROBE == 2) && ($CONFIG_MTD_DOCPROBE_ADVANCED == 0)} then {write_tristate $cfg $autocfg CONFIG_MTD_DOCPROBE_55AA $CONSTANT_N [list $notmod] 2 }
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD_DOCPROBE == 1 || $CONFIG_MTD_DOCPROBE == 2) && ($CONFIG_MTD_DOCPROBE_ADVANCED != 0)} then {write_hex $cfg $autocfg CONFIG_MTD_DOCPROBE_ADDRESS $CONFIG_MTD_DOCPROBE_ADDRESS $notmod }
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD_DOCPROBE == 1 || $CONFIG_MTD_DOCPROBE == 2) && ($CONFIG_MTD_DOCPROBE_ADVANCED != 0)} then {write_tristate $cfg $autocfg CONFIG_MTD_DOCPROBE_HIGH $CONFIG_MTD_DOCPROBE_HIGH [list $notmod] 2 }
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD_DOCPROBE == 1 || $CONFIG_MTD_DOCPROBE == 2) && ($CONFIG_MTD_DOCPROBE_ADVANCED != 0)} then {write_tristate $cfg $autocfg CONFIG_MTD_DOCPROBE_55AA $CONFIG_MTD_DOCPROBE_55AA [list $notmod] 2 }
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2)} then {write_comment $cfg $autocfg "NAND Flash Device Drivers"}
	global CONFIG_MTD_NAND
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2 || $CONFIG_MTD == 4)} then {write_tristate $cfg $autocfg CONFIG_MTD_NAND $CONFIG_MTD_NAND [list $CONFIG_MTD] 2 }
	global CONFIG_MTD_NAND_VERIFY_WRITE
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD_NAND == 1 || $CONFIG_MTD_NAND == 2)} then {write_tristate $cfg $autocfg CONFIG_MTD_NAND_VERIFY_WRITE $CONFIG_MTD_NAND_VERIFY_WRITE [list $notmod] 2 }
	global CONFIG_MTD_NAND_SPIA
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_ARM == 1 && $CONFIG_ARCH_P720T == 1) && ($CONFIG_MTD_NAND == 1 || $CONFIG_MTD_NAND == 2 || $CONFIG_MTD_NAND == 4)} then {write_tristate $cfg $autocfg CONFIG_MTD_NAND_SPIA $CONFIG_MTD_NAND_SPIA [list $CONFIG_MTD_NAND] 2 }
	global CONFIG_MTD_NAND_AUTCPU12
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_ARCH_AUTCPU12 == 1) && ($CONFIG_MTD_NAND == 1 || $CONFIG_MTD_NAND == 2 || $CONFIG_MTD_NAND == 4)} then {write_tristate $cfg $autocfg CONFIG_MTD_NAND_AUTCPU12 $CONFIG_MTD_NAND_AUTCPU12 [list $CONFIG_MTD_NAND] 2 }
	global CONFIG_MTD_NAND_IDS
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD_DOC2001 == 1 || $CONFIG_MTD_DOC2000 == 1 || $CONFIG_MTD_DOC2001PLUS == 1 || $CONFIG_MTD_NAND == 1)} then {write_tristate $cfg $autocfg CONFIG_MTD_NAND_IDS $CONSTANT_Y [list $notmod] 2 }
	if {($CONFIG_ALIGNMENT_TRAP == 1) && ($CONFIG_MTD == 1 || $CONFIG_MTD == 2) && ($CONFIG_MTD_NAND_IDS != 1) && ($CONFIG_MTD_DOC2001PLUS == 2 || $CONFIG_MTD_DOC2001 == 2 || $CONFIG_MTD_DOC2000 == 2 || $CONFIG_MTD_NAND == 2)} then {write_tristate $cfg $autocfg CONFIG_MTD_NAND_IDS $CONSTANT_M [list $notmod] 2 }
	if {($CONFIG_ALIGNMENT_TRAP != 1)} then {write_tristate $cfg $autocfg CONFIG_MTD $CONSTANT_N [list $notmod] 2 }
	write_comment $cfg $autocfg "Plug and Play configuration"
	global CONFIG_PNP
	write_tristate $cfg $autocfg CONFIG_PNP $CONFIG_PNP [list $notmod] 2
	global CONFIG_ISAPNP
	if {($CONFIG_PNP == 1 || $CONFIG_PNP == 2 || $CONFIG_PNP == 4)} then {write_tristate $cfg $autocfg CONFIG_ISAPNP $CONFIG_ISAPNP [list $CONFIG_PNP] 2 }
	write_comment $cfg $autocfg "Block devices"
	global CONFIG_BLK_DEV_FD
	write_tristate $cfg $autocfg CONFIG_BLK_DEV_FD $CONFIG_BLK_DEV_FD [list $notmod] 2
	global CONFIG_BLK_DEV_PS2
	if {($CONFIG_MCA == 1)} then {write_tristate $cfg $autocfg CONFIG_BLK_DEV_PS2 $CONFIG_BLK_DEV_PS2 [list $notmod] 2 }
	global CONFIG_BLK_DEV_XD
	if {($CONFIG_ISA == 1 || $CONFIG_ISA == 2 || $CONFIG_ISA == 4)} then {write_tristate $cfg $autocfg CONFIG_BLK_DEV_XD $CONFIG_BLK_DEV_XD [list $CONFIG_ISA] 2 }
	global CONFIG_PARIDE
	if {($CONFIG_PARPORT == 1 || $CONFIG_PARPORT == 2 || $CONFIG_PARPORT == 4)} then {write_tristate $cfg $autocfg CONFIG_PARIDE $CONFIG_PARIDE [list $CONFIG_PARPORT] 2 }
	global CONFIG_PARIDE_PARPORT
	if {($CONFIG_PARIDE == 1 || $CONFIG_PARIDE == 2) && ($CONFIG_PARPORT == 1 || $CONFIG_PARPORT == 0)} then {write_tristate $cfg $autocfg CONFIG_PARIDE_PARPORT $CONSTANT_Y [list $notmod] 2 }
	if {($CONFIG_PARIDE == 1 || $CONFIG_PARIDE == 2) && ($CONFIG_PARPORT != 1 && $CONFIG_PARPORT != 0)} then {write_tristate $cfg $autocfg CONFIG_PARIDE_PARPORT $CONSTANT_M [list $notmod] 2 }
	if {($CONFIG_PARIDE == 1 || $CONFIG_PARIDE == 2)} then {write_comment $cfg $autocfg "Parallel IDE high-level drivers"}
	global CONFIG_PARIDE_PD
	if {($CONFIG_PARIDE == 1 || $CONFIG_PARIDE == 2) && ($CONFIG_PARIDE == 1 || $CONFIG_PARIDE == 2 || $CONFIG_PARIDE == 4)} then {write_tristate $cfg $autocfg CONFIG_PARIDE_PD $CONFIG_PARIDE_PD [list $CONFIG_PARIDE] 2 }
	global CONFIG_PARIDE_PCD
	if {($CONFIG_PARIDE == 1 || $CONFIG_PARIDE == 2) && ($CONFIG_PARIDE == 1 || $CONFIG_PARIDE == 2 || $CONFIG_PARIDE == 4)} then {write_tristate $cfg $autocfg CONFIG_PARIDE_PCD $CONFIG_PARIDE_PCD [list $CONFIG_PARIDE] 2 }
	global CONFIG_PARIDE_PF
	if {($CONFIG_PARIDE == 1 || $CONFIG_PARIDE == 2) && ($CONFIG_PARIDE == 1 || $CONFIG_PARIDE == 2 || $CONFIG_PARIDE == 4)} then {write_tristate $cfg $autocfg CONFIG_PARIDE_PF $CONFIG_PARIDE_PF [list $CONFIG_PARIDE] 2 }
	global CONFIG_PARIDE_PT
	if {($CONFIG_PARIDE == 1 || $CONFIG_PARIDE == 2) && ($CONFIG_PARIDE == 1 || $CONFIG_PARIDE == 2 || $CONFIG_PARIDE == 4)} then {write_tristate $cfg $autocfg CONFIG_PARIDE_PT $CONFIG_PARIDE_PT [list $CONFIG_PARIDE] 2 }
	global CONFIG_PARIDE_PG
	if {($CONFIG_PARIDE == 1 || $CONFIG_PARIDE == 2) && ($CONFIG_PARIDE == 1 || $CONFIG_PARIDE == 2 || $CONFIG_PARIDE == 4)} then {write_tristate $cfg $autocfg CONFIG_PARIDE_PG $CONFIG_PARIDE_PG [list $CONFIG_PARIDE] 2 }
	if {($CONFIG_PARIDE == 1 || $CONFIG_PARIDE == 2)} then {write_comment $cfg $autocfg "Parallel IDE protocol modules"}
	global CONFIG_PARIDE_ATEN
	if {($CONFIG_PARIDE == 1 || $CONFIG_PARIDE == 2) && ($CONFIG_PARIDE == 1 || $CONFIG_PARIDE == 2 || $CONFIG_PARIDE == 4)} then {write_tristate $cfg $autocfg CONFIG_PARIDE_ATEN $CONFIG_PARIDE_ATEN [list $CONFIG_PARIDE] 2 }
	global CONFIG_PARIDE_BPCK
	if {($CONFIG_PARIDE == 1 || $CONFIG_PARIDE == 2) && ($CONFIG_PARIDE == 1 || $CONFIG_PARIDE == 2 || $CONFIG_PARIDE == 4)} then {write_tristate $cfg $autocfg CONFIG_PARIDE_BPCK $CONFIG_PARIDE_BPCK [list $CONFIG_PARIDE] 2 }
	global CONFIG_PARIDE_BPCK6
	if {($CONFIG_PARIDE == 1 || $CONFIG_PARIDE == 2) && ($CONFIG_PARIDE == 1 || $CONFIG_PARIDE == 2 || $CONFIG_PARIDE == 4)} then {write_tristate $cfg $autocfg CONFIG_PARIDE_BPCK6 $CONFIG_PARIDE_BPCK6 [list $CONFIG_PARIDE] 2 }
	global CONFIG_PARIDE_COMM
	if {($CONFIG_PARIDE == 1 || $CONFIG_PARIDE == 2) && ($CONFIG_PARIDE == 1 || $CONFIG_PARIDE == 2 || $CONFIG_PARIDE == 4)} then {write_tristate $cfg $autocfg CONFIG_PARIDE_COMM $CONFIG_PARIDE_COMM [list $CONFIG_PARIDE] 2 }
	global CONFIG_PARIDE_DSTR
	if {($CONFIG_PARIDE == 1 || $CONFIG_PARIDE == 2) && ($CONFIG_PARIDE == 1 || $CONFIG_PARIDE == 2 || $CONFIG_PARIDE == 4)} then {write_tristate $cfg $autocfg CONFIG_PARIDE_DSTR $CONFIG_PARIDE_DSTR [list $CONFIG_PARIDE] 2 }
	global CONFIG_PARIDE_FIT2
	if {($CONFIG_PARIDE == 1 || $CONFIG_PARIDE == 2) && ($CONFIG_PARIDE == 1 || $CONFIG_PARIDE == 2 || $CONFIG_PARIDE == 4)} then {write_tristate $cfg $autocfg CONFIG_PARIDE_FIT2 $CONFIG_PARIDE_FIT2 [list $CONFIG_PARIDE] 2 }
	global CONFIG_PARIDE_FIT3
	if {($CONFIG_PARIDE == 1 || $CONFIG_PARIDE == 2) && ($CONFIG_PARIDE == 1 || $CONFIG_PARIDE == 2 || $CONFIG_PARIDE == 4)} then {write_tristate $cfg $autocfg CONFIG_PARIDE_FIT3 $CONFIG_PARIDE_FIT3 [list $CONFIG_PARIDE] 2 }
	global CONFIG_PARIDE_EPAT
	if {($CONFIG_PARIDE == 1 || $CONFIG_PARIDE == 2) && ($CONFIG_PARIDE == 1 || $CONFIG_PARIDE == 2 || $CONFIG_PARIDE == 4)} then {write_tristate $cfg $autocfg CONFIG_PARIDE_EPAT $CONFIG_PARIDE_EPAT [list $CONFIG_PARIDE] 2 }
	global CONFIG_PARIDE_EPATC8
	if {($CONFIG_PARIDE == 1 || $CONFIG_PARIDE == 2) && ($CONFIG_PARIDE_EPAT != 0) && ($CONFIG_EXPERIMENTAL == 1)} then {write_tristate $cfg $autocfg CONFIG_PARIDE_EPATC8 $CONFIG_PARIDE_EPATC8 [list $notmod] 2 }
	global CONFIG_PARIDE_EPIA
	if {($CONFIG_PARIDE == 1 || $CONFIG_PARIDE == 2) && ($CONFIG_PARIDE == 1 || $CONFIG_PARIDE == 2 || $CONFIG_PARIDE == 4)} then {write_tristate $cfg $autocfg CONFIG_PARIDE_EPIA $CONFIG_PARIDE_EPIA [list $CONFIG_PARIDE] 2 }
	global CONFIG_PARIDE_FRIQ
	if {($CONFIG_PARIDE == 1 || $CONFIG_PARIDE == 2) && ($CONFIG_PARIDE == 1 || $CONFIG_PARIDE == 2 || $CONFIG_PARIDE == 4)} then {write_tristate $cfg $autocfg CONFIG_PARIDE_FRIQ $CONFIG_PARIDE_FRIQ [list $CONFIG_PARIDE] 2 }
	global CONFIG_PARIDE_FRPW
	if {($CONFIG_PARIDE == 1 || $CONFIG_PARIDE == 2) && ($CONFIG_PARIDE == 1 || $CONFIG_PARIDE == 2 || $CONFIG_PARIDE == 4)} then {write_tristate $cfg $autocfg CONFIG_PARIDE_FRPW $CONFIG_PARIDE_FRPW [list $CONFIG_PARIDE] 2 }
	global CONFIG_PARIDE_KBIC
	if {($CONFIG_PARIDE == 1 || $CONFIG_PARIDE == 2) && ($CONFIG_PARIDE == 1 || $CONFIG_PARIDE == 2 || $CONFIG_PARIDE == 4)} then {write_tristate $cfg $autocfg CONFIG_PARIDE_KBIC $CONFIG_PARIDE_KBIC [list $CONFIG_PARIDE] 2 }
	global CONFIG_PARIDE_KTTI
	if {($CONFIG_PARIDE == 1 || $CONFIG_PARIDE == 2) && ($CONFIG_PARIDE == 1 || $CONFIG_PARIDE == 2 || $CONFIG_PARIDE == 4)} then {write_tristate $cfg $autocfg CONFIG_PARIDE_KTTI $CONFIG_PARIDE_KTTI [list $CONFIG_PARIDE] 2 }
	global CONFIG_PARIDE_ON20
	if {($CONFIG_PARIDE == 1 || $CONFIG_PARIDE == 2) && ($CONFIG_PARIDE == 1 || $CONFIG_PARIDE == 2 || $CONFIG_PARIDE == 4)} then {write_tristate $cfg $autocfg CONFIG_PARIDE_ON20 $CONFIG_PARIDE_ON20 [list $CONFIG_PARIDE] 2 }
	global CONFIG_PARIDE_ON26
	if {($CONFIG_PARIDE == 1 || $CONFIG_PARIDE == 2) && ($CONFIG_PARIDE == 1 || $CONFIG_PARIDE == 2 || $CONFIG_PARIDE == 4)} then {write_tristate $cfg $autocfg CONFIG_PARIDE_ON26 $CONFIG_PARIDE_ON26 [list $CONFIG_PARIDE] 2 }
	global CONFIG_BLK_CPQ_DA
	if {($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {write_tristate $cfg $autocfg CONFIG_BLK_CPQ_DA $CONFIG_BLK_CPQ_DA [list $CONFIG_PCI] 2 }
	global CONFIG_BLK_CPQ_CISS_DA
	if {($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {write_tristate $cfg $autocfg CONFIG_BLK_CPQ_CISS_DA $CONFIG_BLK_CPQ_CISS_DA [list $CONFIG_PCI] 2 }
	global CONFIG_CISS_SCSI_TAPE
	global CONFIG_SCSI
	if {($CONFIG_BLK_CPQ_CISS_DA == 1 || $CONFIG_BLK_CPQ_CISS_DA == 2 || $CONFIG_BLK_CPQ_CISS_DA == 4) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {write_tristate $cfg $autocfg CONFIG_CISS_SCSI_TAPE $CONFIG_CISS_SCSI_TAPE [list $CONFIG_BLK_CPQ_CISS_DA $CONFIG_SCSI] 1 }
	global CONFIG_CISS_MONITOR_THREAD
	if {($CONFIG_BLK_CPQ_CISS_DA == 1 || $CONFIG_BLK_CPQ_CISS_DA == 2 || $CONFIG_BLK_CPQ_CISS_DA == 4)} then {write_tristate $cfg $autocfg CONFIG_CISS_MONITOR_THREAD $CONFIG_CISS_MONITOR_THREAD [list $CONFIG_BLK_CPQ_CISS_DA] 1 }
	global CONFIG_BLK_DEV_DAC960
	if {($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {write_tristate $cfg $autocfg CONFIG_BLK_DEV_DAC960 $CONFIG_BLK_DEV_DAC960 [list $CONFIG_PCI] 2 }
	global CONFIG_BLK_DEV_UMEM
	if {($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {write_tristate $cfg $autocfg CONFIG_BLK_DEV_UMEM $CONFIG_BLK_DEV_UMEM [list $CONFIG_PCI $CONFIG_EXPERIMENTAL] 2 }
	global CONFIG_BLK_DEV_LOOP
	write_tristate $cfg $autocfg CONFIG_BLK_DEV_LOOP $CONFIG_BLK_DEV_LOOP [list $notmod] 2
	global CONFIG_BLK_DEV_NBD
	if {($CONFIG_NET == 1 || $CONFIG_NET == 2 || $CONFIG_NET == 4)} then {write_tristate $cfg $autocfg CONFIG_BLK_DEV_NBD $CONFIG_BLK_DEV_NBD [list $CONFIG_NET] 2 }
	global CONFIG_BLK_DEV_RAM
	write_tristate $cfg $autocfg CONFIG_BLK_DEV_RAM $CONFIG_BLK_DEV_RAM [list $notmod] 2
	global CONFIG_BLK_DEV_RAM_SIZE
	if {($CONFIG_BLK_DEV_RAM == 1 || $CONFIG_BLK_DEV_RAM == 2)} then {write_int $cfg $autocfg CONFIG_BLK_DEV_RAM_SIZE $CONFIG_BLK_DEV_RAM_SIZE $notmod }
	global CONFIG_BLK_DEV_INITRD
	if {($CONFIG_BLK_DEV_RAM == 1 || $CONFIG_BLK_DEV_RAM == 4)} then {write_tristate $cfg $autocfg CONFIG_BLK_DEV_INITRD $CONFIG_BLK_DEV_INITRD [list $CONFIG_BLK_DEV_RAM] 2 }
	global CONFIG_BLK_DEV_RAMDISK_DATA
	if {($CONFIG_BLK_DEV_INITRD == 1 || $CONFIG_BLK_DEV_INITRD == 4)} then {write_tristate $cfg $autocfg CONFIG_BLK_DEV_RAMDISK_DATA $CONFIG_BLK_DEV_RAMDISK_DATA [list $CONFIG_BLK_DEV_INITRD] 2 }
	global CONFIG_BLK_DEV_BLKMEM
	write_tristate $cfg $autocfg CONFIG_BLK_DEV_BLKMEM $CONFIG_BLK_DEV_BLKMEM [list $notmod] 2
	global tmpvar_14
	if {($CONFIG_BLK_DEV_BLKMEM == 1 || $CONFIG_BLK_DEV_BLKMEM == 2)} then {
	if { $tmpvar_14 == "NONE" } then { write_tristate $cfg $autocfg CONFIG_NOFLASH 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_NOFLASH 0 [list $notmod] 2 }
	if { $tmpvar_14 == "AMD" } then { write_tristate $cfg $autocfg CONFIG_AMDFLASH 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_AMDFLASH 0 [list $notmod] 2 }
	if { $tmpvar_14 == "INTEL" } then { write_tristate $cfg $autocfg CONFIG_INTELFLASH 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_INTELFLASH 0 [list $notmod] 2 }}
	global tmpvar_15
	global CONFIG_AMDFLASH
	global CONFIG_INTELFLASH
	if {($CONFIG_BLK_DEV_BLKMEM == 1 || $CONFIG_BLK_DEV_BLKMEM == 2) && ($CONFIG_AMDFLASH == 1 || $CONFIG_INTELFLASH == 1)} then {
	if { $tmpvar_15 == "AUTO" } then { write_tristate $cfg $autocfg CONFIG_FLASHAUTO 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_FLASHAUTO 0 [list $notmod] 2 }
	if { $tmpvar_15 == "128KB" } then { write_tristate $cfg $autocfg CONFIG_FLASH128KB 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_FLASH128KB 0 [list $notmod] 2 }
	if { $tmpvar_15 == "1MB" } then { write_tristate $cfg $autocfg CONFIG_FLASH1MB 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_FLASH1MB 0 [list $notmod] 2 }
	if { $tmpvar_15 == "2MB" } then { write_tristate $cfg $autocfg CONFIG_FLASH2MB 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_FLASH2MB 0 [list $notmod] 2 }
	if { $tmpvar_15 == "4MB" } then { write_tristate $cfg $autocfg CONFIG_FLASH4MB 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_FLASH4MB 0 [list $notmod] 2 }
	if { $tmpvar_15 == "6MB" } then { write_tristate $cfg $autocfg CONFIG_FLASH6MB 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_FLASH6MB 0 [list $notmod] 2 }
	if { $tmpvar_15 == "8MB" } then { write_tristate $cfg $autocfg CONFIG_FLASH8MB 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_FLASH8MB 0 [list $notmod] 2 }
	if { $tmpvar_15 == "16MB" } then { write_tristate $cfg $autocfg CONFIG_FLASH16MB 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_FLASH16MB 0 [list $notmod] 2 }}
	global tmpvar_16
	if {($CONFIG_BLK_DEV_BLKMEM == 1 || $CONFIG_BLK_DEV_BLKMEM == 2) && ($CONFIG_AMDFLASH == 1 || $CONFIG_INTELFLASH == 1)} then {
	if { $tmpvar_16 == "AUTO" } then { write_tristate $cfg $autocfg CONFIG_FLASHAUTOBIT 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_FLASHAUTOBIT 0 [list $notmod] 2 }
	if { $tmpvar_16 == "8bit" } then { write_tristate $cfg $autocfg CONFIG_FLASH8BIT 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_FLASH8BIT 0 [list $notmod] 2 }
	if { $tmpvar_16 == "16bit" } then { write_tristate $cfg $autocfg CONFIG_FLASH16BIT 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_FLASH16BIT 0 [list $notmod] 2 }
	if { $tmpvar_16 == "32bit" } then { write_tristate $cfg $autocfg CONFIG_FLASH32bit 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_FLASH32bit 0 [list $notmod] 2 }}
	global CONFIG_EXTRA_FLASH
	if {($CONFIG_BLK_DEV_BLKMEM == 1 || $CONFIG_BLK_DEV_BLKMEM == 2) && ($CONFIG_AMDFLASH == 1 || $CONFIG_INTELFLASH == 1)} then {write_tristate $cfg $autocfg CONFIG_EXTRA_FLASH $CONFIG_EXTRA_FLASH [list $notmod] 2 }
	global CONFIG_BLK_STATS
	write_tristate $cfg $autocfg CONFIG_BLK_STATS $CONFIG_BLK_STATS [list $notmod] 2
	write_comment $cfg $autocfg "Multi-device support (RAID and LVM)"
	global CONFIG_MD
	write_tristate $cfg $autocfg CONFIG_MD $CONFIG_MD [list $notmod] 2
	global CONFIG_BLK_DEV_MD
	if {($CONFIG_MD == 1 || $CONFIG_MD == 2 || $CONFIG_MD == 4)} then {write_tristate $cfg $autocfg CONFIG_BLK_DEV_MD $CONFIG_BLK_DEV_MD [list $CONFIG_MD] 2 }
	global CONFIG_MD_LINEAR
	if {($CONFIG_BLK_DEV_MD == 1 || $CONFIG_BLK_DEV_MD == 2 || $CONFIG_BLK_DEV_MD == 4)} then {write_tristate $cfg $autocfg CONFIG_MD_LINEAR $CONFIG_MD_LINEAR [list $CONFIG_BLK_DEV_MD] 2 }
	global CONFIG_MD_RAID0
	if {($CONFIG_BLK_DEV_MD == 1 || $CONFIG_BLK_DEV_MD == 2 || $CONFIG_BLK_DEV_MD == 4)} then {write_tristate $cfg $autocfg CONFIG_MD_RAID0 $CONFIG_MD_RAID0 [list $CONFIG_BLK_DEV_MD] 2 }
	global CONFIG_MD_RAID1
	if {($CONFIG_BLK_DEV_MD == 1 || $CONFIG_BLK_DEV_MD == 2 || $CONFIG_BLK_DEV_MD == 4)} then {write_tristate $cfg $autocfg CONFIG_MD_RAID1 $CONFIG_MD_RAID1 [list $CONFIG_BLK_DEV_MD] 2 }
	global CONFIG_MD_RAID5
	if {($CONFIG_BLK_DEV_MD == 1 || $CONFIG_BLK_DEV_MD == 2 || $CONFIG_BLK_DEV_MD == 4)} then {write_tristate $cfg $autocfg CONFIG_MD_RAID5 $CONFIG_MD_RAID5 [list $CONFIG_BLK_DEV_MD] 2 }
	global CONFIG_MD_MULTIPATH
	if {($CONFIG_BLK_DEV_MD == 1 || $CONFIG_BLK_DEV_MD == 2 || $CONFIG_BLK_DEV_MD == 4)} then {write_tristate $cfg $autocfg CONFIG_MD_MULTIPATH $CONFIG_MD_MULTIPATH [list $CONFIG_BLK_DEV_MD] 2 }
	global CONFIG_BLK_DEV_LVM
	if {($CONFIG_MD == 1 || $CONFIG_MD == 2 || $CONFIG_MD == 4)} then {write_tristate $cfg $autocfg CONFIG_BLK_DEV_LVM $CONFIG_BLK_DEV_LVM [list $CONFIG_MD] 2 }
	if {($CONFIG_ARCH_ACORN == 1)} then {write_comment $cfg $autocfg "Acorn-specific block devices"}
	global CONFIG_BLK_DEV_FD1772
	if {($CONFIG_ARCH_ACORN == 1) && ($CONFIG_ARCH_ARC == 1 || $CONFIG_ARCH_A5K == 1)} then {write_tristate $cfg $autocfg CONFIG_BLK_DEV_FD1772 $CONFIG_BLK_DEV_FD1772 [list $notmod] 2 }
	global CONFIG_BLK_DEV_MFM
	if {($CONFIG_ARCH_ACORN == 1) && ($CONFIG_ARCH_ARC == 1 || $CONFIG_ARCH_A5K == 1)} then {write_tristate $cfg $autocfg CONFIG_BLK_DEV_MFM $CONFIG_BLK_DEV_MFM [list $notmod] 2 }
	global CONFIG_BLK_DEV_MFM_AUTODETECT
	if {($CONFIG_ARCH_ACORN == 1) && ($CONFIG_ARCH_ARC == 1 || $CONFIG_ARCH_A5K == 1) && ($CONFIG_BLK_DEV_MFM != 0)} then {write_tristate $cfg $autocfg CONFIG_BLK_DEV_MFM_AUTODETECT $CONFIG_BLK_DEV_MFM_AUTODETECT [list $notmod] 2 }
	if {($CONFIG_NET == 1)} then {write_comment $cfg $autocfg "Networking options"}
	global CONFIG_PACKET
	if {($CONFIG_NET == 1)} then {write_tristate $cfg $autocfg CONFIG_PACKET $CONFIG_PACKET [list $notmod] 2 }
	global CONFIG_PACKET_MMAP
	if {($CONFIG_NET == 1) && ($CONFIG_PACKET != 0)} then {write_tristate $cfg $autocfg CONFIG_PACKET_MMAP $CONFIG_PACKET_MMAP [list $notmod] 2 }
	global CONFIG_NETLINK_DEV
	if {($CONFIG_NET == 1)} then {write_tristate $cfg $autocfg CONFIG_NETLINK_DEV $CONFIG_NETLINK_DEV [list $notmod] 2 }
	global CONFIG_NETFILTER
	if {($CONFIG_NET == 1)} then {write_tristate $cfg $autocfg CONFIG_NETFILTER $CONFIG_NETFILTER [list $notmod] 2 }
	global CONFIG_NETFILTER_DEBUG
	if {($CONFIG_NET == 1) && ($CONFIG_NETFILTER == 1)} then {write_tristate $cfg $autocfg CONFIG_NETFILTER_DEBUG $CONFIG_NETFILTER_DEBUG [list $notmod] 2 }
	global CONFIG_FILTER
	if {($CONFIG_NET == 1)} then {write_tristate $cfg $autocfg CONFIG_FILTER $CONFIG_FILTER [list $notmod] 2 }
	global CONFIG_UNIX
	if {($CONFIG_NET == 1)} then {write_tristate $cfg $autocfg CONFIG_UNIX $CONFIG_UNIX [list $notmod] 2 }
	global CONFIG_INET
	if {($CONFIG_NET == 1)} then {write_tristate $cfg $autocfg CONFIG_INET $CONFIG_INET [list $notmod] 2 }
	global CONFIG_IP_MULTICAST
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1)} then {write_tristate $cfg $autocfg CONFIG_IP_MULTICAST $CONFIG_IP_MULTICAST [list $notmod] 2 }
	global CONFIG_IP_ADVANCED_ROUTER
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1)} then {write_tristate $cfg $autocfg CONFIG_IP_ADVANCED_ROUTER $CONFIG_IP_ADVANCED_ROUTER [list $notmod] 2 }
	global CONFIG_IP_MULTIPLE_TABLES
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_IP_ADVANCED_ROUTER == 1)} then {write_tristate $cfg $autocfg CONFIG_IP_MULTIPLE_TABLES $CONFIG_IP_MULTIPLE_TABLES [list $notmod] 2 }
	global CONFIG_IP_ROUTE_FWMARK
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_IP_ADVANCED_ROUTER == 1) && ($CONFIG_IP_MULTIPLE_TABLES == 1) && ($CONFIG_NETFILTER == 1)} then {write_tristate $cfg $autocfg CONFIG_IP_ROUTE_FWMARK $CONFIG_IP_ROUTE_FWMARK [list $notmod] 2 }
	global CONFIG_IP_ROUTE_NAT
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_IP_ADVANCED_ROUTER == 1) && ($CONFIG_IP_MULTIPLE_TABLES == 1)} then {write_tristate $cfg $autocfg CONFIG_IP_ROUTE_NAT $CONFIG_IP_ROUTE_NAT [list $notmod] 2 }
	global CONFIG_IP_ROUTE_MULTIPATH
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_IP_ADVANCED_ROUTER == 1)} then {write_tristate $cfg $autocfg CONFIG_IP_ROUTE_MULTIPATH $CONFIG_IP_ROUTE_MULTIPATH [list $notmod] 2 }
	global CONFIG_IP_ROUTE_MULTIPATH_SEQUENTIAL
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_IP_ADVANCED_ROUTER == 1) && ($CONFIG_IP_ROUTE_MULTIPATH == 1 || $CONFIG_IP_ROUTE_MULTIPATH == 4)} then {write_tristate $cfg $autocfg CONFIG_IP_ROUTE_MULTIPATH_SEQUENTIAL $CONFIG_IP_ROUTE_MULTIPATH_SEQUENTIAL [list $CONFIG_IP_ROUTE_MULTIPATH] 2 }
	global CONFIG_IP_ROUTE_TOS
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_IP_ADVANCED_ROUTER == 1)} then {write_tristate $cfg $autocfg CONFIG_IP_ROUTE_TOS $CONFIG_IP_ROUTE_TOS [list $notmod] 2 }
	global CONFIG_IP_ROUTE_VERBOSE
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_IP_ADVANCED_ROUTER == 1)} then {write_tristate $cfg $autocfg CONFIG_IP_ROUTE_VERBOSE $CONFIG_IP_ROUTE_VERBOSE [list $notmod] 2 }
	global CONFIG_IP_PNP
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1)} then {write_tristate $cfg $autocfg CONFIG_IP_PNP $CONFIG_IP_PNP [list $notmod] 2 }
	global CONFIG_IP_PNP_DHCP
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_IP_PNP == 1)} then {write_tristate $cfg $autocfg CONFIG_IP_PNP_DHCP $CONFIG_IP_PNP_DHCP [list $notmod] 2 }
	global CONFIG_IP_PNP_BOOTP
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_IP_PNP == 1)} then {write_tristate $cfg $autocfg CONFIG_IP_PNP_BOOTP $CONFIG_IP_PNP_BOOTP [list $notmod] 2 }
	global CONFIG_IP_PNP_RARP
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_IP_PNP == 1)} then {write_tristate $cfg $autocfg CONFIG_IP_PNP_RARP $CONFIG_IP_PNP_RARP [list $notmod] 2 }
	global CONFIG_NET_ARP_LIMIT
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1)} then {write_tristate $cfg $autocfg CONFIG_NET_ARP_LIMIT $CONFIG_NET_ARP_LIMIT [list $notmod] 2 }
	global CONFIG_ARP_LIMIT
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NET_ARP_LIMIT == 1)} then {write_int $cfg $autocfg CONFIG_ARP_LIMIT $CONFIG_ARP_LIMIT $notmod }
	global CONFIG_NET_IPIP
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1)} then {write_tristate $cfg $autocfg CONFIG_NET_IPIP $CONFIG_NET_IPIP [list $notmod] 2 }
	global CONFIG_NET_IPGRE
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1)} then {write_tristate $cfg $autocfg CONFIG_NET_IPGRE $CONFIG_NET_IPGRE [list $notmod] 2 }
	global CONFIG_NET_IPGRE_BROADCAST
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_IP_MULTICAST == 1) && ($CONFIG_NET_IPGRE != 0)} then {write_tristate $cfg $autocfg CONFIG_NET_IPGRE_BROADCAST $CONFIG_NET_IPGRE_BROADCAST [list $notmod] 2 }
	global CONFIG_IP_MROUTE
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_IP_MULTICAST == 1)} then {write_tristate $cfg $autocfg CONFIG_IP_MROUTE $CONFIG_IP_MROUTE [list $notmod] 2 }
	global CONFIG_IP_PIMSM_V1
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_IP_MULTICAST == 1) && ($CONFIG_IP_MROUTE == 1)} then {write_tristate $cfg $autocfg CONFIG_IP_PIMSM_V1 $CONFIG_IP_PIMSM_V1 [list $notmod] 2 }
	global CONFIG_IP_PIMSM_V2
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_IP_MULTICAST == 1) && ($CONFIG_IP_MROUTE == 1)} then {write_tristate $cfg $autocfg CONFIG_IP_PIMSM_V2 $CONFIG_IP_PIMSM_V2 [list $notmod] 2 }
	global CONFIG_ARPD
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_EXPERIMENTAL == 1)} then {write_tristate $cfg $autocfg CONFIG_ARPD $CONFIG_ARPD [list $notmod] 2 }
	global CONFIG_INET_ECN
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1)} then {write_tristate $cfg $autocfg CONFIG_INET_ECN $CONFIG_INET_ECN [list $notmod] 2 }
	global CONFIG_SYN_COOKIES
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1)} then {write_tristate $cfg $autocfg CONFIG_SYN_COOKIES $CONFIG_SYN_COOKIES [list $notmod] 2 }
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0)} then {write_comment $cfg $autocfg "  IP: Netfilter Configuration"}
	global CONFIG_IP_NF_CONNTRACK
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0)} then {write_tristate $cfg $autocfg CONFIG_IP_NF_CONNTRACK $CONFIG_IP_NF_CONNTRACK [list $notmod] 2 }
	global CONFIG_IP_NF_FTP
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_CONNTRACK != 0) && ($CONFIG_IP_NF_CONNTRACK == 1 || $CONFIG_IP_NF_CONNTRACK == 2 || $CONFIG_IP_NF_CONNTRACK == 4)} then {write_tristate $cfg $autocfg CONFIG_IP_NF_FTP $CONFIG_IP_NF_FTP [list $CONFIG_IP_NF_CONNTRACK] 2 }
	global CONFIG_IP_NF_CONNTRACK_MARK
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_CONNTRACK != 0)} then {write_tristate $cfg $autocfg CONFIG_IP_NF_CONNTRACK_MARK $CONFIG_IP_NF_CONNTRACK_MARK [list $notmod] 2 }
	global CONFIG_IP_NF_H323
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_CONNTRACK != 0) && ($CONFIG_IP_NF_CONNTRACK == 1 || $CONFIG_IP_NF_CONNTRACK == 2 || $CONFIG_IP_NF_CONNTRACK == 4)} then {write_tristate $cfg $autocfg CONFIG_IP_NF_H323 $CONFIG_IP_NF_H323 [list $CONFIG_IP_NF_CONNTRACK] 2 }
	global CONFIG_IP_NF_AMANDA
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_CONNTRACK != 0) && ($CONFIG_IP_NF_CONNTRACK == 1 || $CONFIG_IP_NF_CONNTRACK == 2 || $CONFIG_IP_NF_CONNTRACK == 4)} then {write_tristate $cfg $autocfg CONFIG_IP_NF_AMANDA $CONFIG_IP_NF_AMANDA [list $CONFIG_IP_NF_CONNTRACK] 2 }
	global CONFIG_IP_NF_TFTP
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_CONNTRACK != 0) && ($CONFIG_IP_NF_CONNTRACK == 1 || $CONFIG_IP_NF_CONNTRACK == 2 || $CONFIG_IP_NF_CONNTRACK == 4)} then {write_tristate $cfg $autocfg CONFIG_IP_NF_TFTP $CONFIG_IP_NF_TFTP [list $CONFIG_IP_NF_CONNTRACK] 2 }
	global CONFIG_IP_NF_IRC
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_CONNTRACK != 0) && ($CONFIG_IP_NF_CONNTRACK == 1 || $CONFIG_IP_NF_CONNTRACK == 2 || $CONFIG_IP_NF_CONNTRACK == 4)} then {write_tristate $cfg $autocfg CONFIG_IP_NF_IRC $CONFIG_IP_NF_IRC [list $CONFIG_IP_NF_CONNTRACK] 2 }
	global CONFIG_IP_NF_CT_PROTO_GRE
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_CONNTRACK != 0) && ($CONFIG_IP_NF_CONNTRACK == 1 || $CONFIG_IP_NF_CONNTRACK == 2 || $CONFIG_IP_NF_CONNTRACK == 4)} then {write_tristate $cfg $autocfg CONFIG_IP_NF_CT_PROTO_GRE $CONFIG_IP_NF_CT_PROTO_GRE [list $CONFIG_IP_NF_CONNTRACK] 2 }
	global CONFIG_IP_NF_PPTP
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_CONNTRACK != 0) && ($CONFIG_IP_NF_CT_PROTO_GRE == 1 || $CONFIG_IP_NF_CT_PROTO_GRE == 2 || $CONFIG_IP_NF_CT_PROTO_GRE == 4)} then {write_tristate $cfg $autocfg CONFIG_IP_NF_PPTP $CONFIG_IP_NF_PPTP [list $CONFIG_IP_NF_CT_PROTO_GRE] 2 }
	global CONFIG_IP_NF_QUEUE
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_EXPERIMENTAL == 1)} then {write_tristate $cfg $autocfg CONFIG_IP_NF_QUEUE $CONFIG_IP_NF_QUEUE [list $notmod] 2 }
	global CONFIG_IP_NF_IPTABLES
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0)} then {write_tristate $cfg $autocfg CONFIG_IP_NF_IPTABLES $CONFIG_IP_NF_IPTABLES [list $notmod] 2 }
	global CONFIG_IP_NF_MATCH_LIMIT
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_IPTABLES == 1 || $CONFIG_IP_NF_IPTABLES == 2 || $CONFIG_IP_NF_IPTABLES == 4)} then {write_tristate $cfg $autocfg CONFIG_IP_NF_MATCH_LIMIT $CONFIG_IP_NF_MATCH_LIMIT [list $CONFIG_IP_NF_IPTABLES] 2 }
	global CONFIG_IP_NF_MATCH_IPRANGE
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_IPTABLES == 1 || $CONFIG_IP_NF_IPTABLES == 2 || $CONFIG_IP_NF_IPTABLES == 4)} then {write_tristate $cfg $autocfg CONFIG_IP_NF_MATCH_IPRANGE $CONFIG_IP_NF_MATCH_IPRANGE [list $CONFIG_IP_NF_IPTABLES] 2 }
	global CONFIG_IP_NF_MATCH_MAC
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_IPTABLES == 1 || $CONFIG_IP_NF_IPTABLES == 2 || $CONFIG_IP_NF_IPTABLES == 4)} then {write_tristate $cfg $autocfg CONFIG_IP_NF_MATCH_MAC $CONFIG_IP_NF_MATCH_MAC [list $CONFIG_IP_NF_IPTABLES] 2 }
	global CONFIG_IP_NF_MATCH_PKTTYPE
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_IPTABLES == 1 || $CONFIG_IP_NF_IPTABLES == 2 || $CONFIG_IP_NF_IPTABLES == 4)} then {write_tristate $cfg $autocfg CONFIG_IP_NF_MATCH_PKTTYPE $CONFIG_IP_NF_MATCH_PKTTYPE [list $CONFIG_IP_NF_IPTABLES] 2 }
	global CONFIG_IP_NF_MATCH_MARK
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_IPTABLES == 1 || $CONFIG_IP_NF_IPTABLES == 2 || $CONFIG_IP_NF_IPTABLES == 4)} then {write_tristate $cfg $autocfg CONFIG_IP_NF_MATCH_MARK $CONFIG_IP_NF_MATCH_MARK [list $CONFIG_IP_NF_IPTABLES] 2 }
	global CONFIG_IP_NF_MATCH_MULTIPORT
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_IPTABLES == 1 || $CONFIG_IP_NF_IPTABLES == 2 || $CONFIG_IP_NF_IPTABLES == 4)} then {write_tristate $cfg $autocfg CONFIG_IP_NF_MATCH_MULTIPORT $CONFIG_IP_NF_MATCH_MULTIPORT [list $CONFIG_IP_NF_IPTABLES] 2 }
	global CONFIG_IP_NF_MATCH_TOS
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_IPTABLES == 1 || $CONFIG_IP_NF_IPTABLES == 2 || $CONFIG_IP_NF_IPTABLES == 4)} then {write_tristate $cfg $autocfg CONFIG_IP_NF_MATCH_TOS $CONFIG_IP_NF_MATCH_TOS [list $CONFIG_IP_NF_IPTABLES] 2 }
	global CONFIG_IP_NF_MATCH_TIME
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_IPTABLES == 1 || $CONFIG_IP_NF_IPTABLES == 2 || $CONFIG_IP_NF_IPTABLES == 4)} then {write_tristate $cfg $autocfg CONFIG_IP_NF_MATCH_TIME $CONFIG_IP_NF_MATCH_TIME [list $CONFIG_IP_NF_IPTABLES] 2 }
	global CONFIG_IP_NF_MATCH_RECENT
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_IPTABLES == 1 || $CONFIG_IP_NF_IPTABLES == 2 || $CONFIG_IP_NF_IPTABLES == 4)} then {write_tristate $cfg $autocfg CONFIG_IP_NF_MATCH_RECENT $CONFIG_IP_NF_MATCH_RECENT [list $CONFIG_IP_NF_IPTABLES] 2 }
	global CONFIG_IP_NF_MATCH_ECN
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_IPTABLES == 1 || $CONFIG_IP_NF_IPTABLES == 2 || $CONFIG_IP_NF_IPTABLES == 4)} then {write_tristate $cfg $autocfg CONFIG_IP_NF_MATCH_ECN $CONFIG_IP_NF_MATCH_ECN [list $CONFIG_IP_NF_IPTABLES] 2 }
	global CONFIG_IP_NF_MATCH_DSCP
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_IPTABLES == 1 || $CONFIG_IP_NF_IPTABLES == 2 || $CONFIG_IP_NF_IPTABLES == 4)} then {write_tristate $cfg $autocfg CONFIG_IP_NF_MATCH_DSCP $CONFIG_IP_NF_MATCH_DSCP [list $CONFIG_IP_NF_IPTABLES] 2 }
	global CONFIG_IP_NF_MATCH_AH_ESP
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_IPTABLES == 1 || $CONFIG_IP_NF_IPTABLES == 2 || $CONFIG_IP_NF_IPTABLES == 4)} then {write_tristate $cfg $autocfg CONFIG_IP_NF_MATCH_AH_ESP $CONFIG_IP_NF_MATCH_AH_ESP [list $CONFIG_IP_NF_IPTABLES] 2 }
	global CONFIG_IP_NF_MATCH_LENGTH
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_IPTABLES == 1 || $CONFIG_IP_NF_IPTABLES == 2 || $CONFIG_IP_NF_IPTABLES == 4)} then {write_tristate $cfg $autocfg CONFIG_IP_NF_MATCH_LENGTH $CONFIG_IP_NF_MATCH_LENGTH [list $CONFIG_IP_NF_IPTABLES] 2 }
	global CONFIG_IP_NF_MATCH_TTL
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_IPTABLES == 1 || $CONFIG_IP_NF_IPTABLES == 2 || $CONFIG_IP_NF_IPTABLES == 4)} then {write_tristate $cfg $autocfg CONFIG_IP_NF_MATCH_TTL $CONFIG_IP_NF_MATCH_TTL [list $CONFIG_IP_NF_IPTABLES] 2 }
	global CONFIG_IP_NF_MATCH_TCPMSS
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_IPTABLES == 1 || $CONFIG_IP_NF_IPTABLES == 2 || $CONFIG_IP_NF_IPTABLES == 4)} then {write_tristate $cfg $autocfg CONFIG_IP_NF_MATCH_TCPMSS $CONFIG_IP_NF_MATCH_TCPMSS [list $CONFIG_IP_NF_IPTABLES] 2 }
	global CONFIG_IP_NF_MATCH_HELPER
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_CONNTRACK != 0) && ($CONFIG_IP_NF_IPTABLES == 1 || $CONFIG_IP_NF_IPTABLES == 2 || $CONFIG_IP_NF_IPTABLES == 4)} then {write_tristate $cfg $autocfg CONFIG_IP_NF_MATCH_HELPER $CONFIG_IP_NF_MATCH_HELPER [list $CONFIG_IP_NF_IPTABLES] 2 }
	global CONFIG_IP_NF_MATCH_STATE
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_CONNTRACK != 0) && ($CONFIG_IP_NF_CONNTRACK == 1 || $CONFIG_IP_NF_CONNTRACK == 2 || $CONFIG_IP_NF_CONNTRACK == 4) && ($CONFIG_IP_NF_IPTABLES == 1 || $CONFIG_IP_NF_IPTABLES == 2 || $CONFIG_IP_NF_IPTABLES == 4)} then {write_tristate $cfg $autocfg CONFIG_IP_NF_MATCH_STATE $CONFIG_IP_NF_MATCH_STATE [list $CONFIG_IP_NF_CONNTRACK $CONFIG_IP_NF_IPTABLES] 2 }
	global CONFIG_IP_NF_MATCH_CONNMARK
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_CONNTRACK != 0) && ($CONFIG_IP_NF_CONNTRACK_MARK != 0) && ($CONFIG_IP_NF_IPTABLES == 1 || $CONFIG_IP_NF_IPTABLES == 2 || $CONFIG_IP_NF_IPTABLES == 4)} then {write_tristate $cfg $autocfg CONFIG_IP_NF_MATCH_CONNMARK $CONFIG_IP_NF_MATCH_CONNMARK [list $CONFIG_IP_NF_IPTABLES] 2 }
	global CONFIG_IP_NF_MATCH_CONNTRACK
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_CONNTRACK != 0) && ($CONFIG_IP_NF_CONNTRACK == 1 || $CONFIG_IP_NF_CONNTRACK == 2 || $CONFIG_IP_NF_CONNTRACK == 4) && ($CONFIG_IP_NF_IPTABLES == 1 || $CONFIG_IP_NF_IPTABLES == 2 || $CONFIG_IP_NF_IPTABLES == 4)} then {write_tristate $cfg $autocfg CONFIG_IP_NF_MATCH_CONNTRACK $CONFIG_IP_NF_MATCH_CONNTRACK [list $CONFIG_IP_NF_CONNTRACK $CONFIG_IP_NF_IPTABLES] 2 }
	global CONFIG_IP_NF_MATCH_UNCLEAN
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_IP_NF_IPTABLES == 1 || $CONFIG_IP_NF_IPTABLES == 2 || $CONFIG_IP_NF_IPTABLES == 4)} then {write_tristate $cfg $autocfg CONFIG_IP_NF_MATCH_UNCLEAN $CONFIG_IP_NF_MATCH_UNCLEAN [list $CONFIG_IP_NF_IPTABLES] 2 }
	global CONFIG_IP_NF_MATCH_STRING
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_IP_NF_IPTABLES == 1 || $CONFIG_IP_NF_IPTABLES == 2 || $CONFIG_IP_NF_IPTABLES == 4)} then {write_tristate $cfg $autocfg CONFIG_IP_NF_MATCH_STRING $CONFIG_IP_NF_MATCH_STRING [list $CONFIG_IP_NF_IPTABLES] 2 }
	global CONFIG_IP_NF_MATCH_OWNER
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_IP_NF_IPTABLES == 1 || $CONFIG_IP_NF_IPTABLES == 2 || $CONFIG_IP_NF_IPTABLES == 4)} then {write_tristate $cfg $autocfg CONFIG_IP_NF_MATCH_OWNER $CONFIG_IP_NF_MATCH_OWNER [list $CONFIG_IP_NF_IPTABLES] 2 }
	global CONFIG_IP_NF_FILTER
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_IPTABLES == 1 || $CONFIG_IP_NF_IPTABLES == 2 || $CONFIG_IP_NF_IPTABLES == 4)} then {write_tristate $cfg $autocfg CONFIG_IP_NF_FILTER $CONFIG_IP_NF_FILTER [list $CONFIG_IP_NF_IPTABLES] 2 }
	global CONFIG_IP_NF_TARGET_REJECT
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_FILTER != 0) && ($CONFIG_IP_NF_FILTER == 1 || $CONFIG_IP_NF_FILTER == 2 || $CONFIG_IP_NF_FILTER == 4)} then {write_tristate $cfg $autocfg CONFIG_IP_NF_TARGET_REJECT $CONFIG_IP_NF_TARGET_REJECT [list $CONFIG_IP_NF_FILTER] 2 }
	global CONFIG_IP_NF_TARGET_MIRROR
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_FILTER != 0) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_IP_NF_FILTER == 1 || $CONFIG_IP_NF_FILTER == 2 || $CONFIG_IP_NF_FILTER == 4)} then {write_tristate $cfg $autocfg CONFIG_IP_NF_TARGET_MIRROR $CONFIG_IP_NF_TARGET_MIRROR [list $CONFIG_IP_NF_FILTER] 2 }
	global CONFIG_IP_NF_NAT
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_CONNTRACK != 0) && ($CONFIG_IP_NF_IPTABLES == 1 || $CONFIG_IP_NF_IPTABLES == 2 || $CONFIG_IP_NF_IPTABLES == 4) && ($CONFIG_IP_NF_CONNTRACK == 1 || $CONFIG_IP_NF_CONNTRACK == 2 || $CONFIG_IP_NF_CONNTRACK == 4)} then {write_tristate $cfg $autocfg CONFIG_IP_NF_NAT $CONFIG_IP_NF_NAT [list $CONFIG_IP_NF_IPTABLES $CONFIG_IP_NF_CONNTRACK] 2 }
	global CONFIG_IP_NF_NAT_NEEDED
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_CONNTRACK != 0) && ($CONFIG_IP_NF_NAT != 0)} then {write_tristate $cfg $autocfg CONFIG_IP_NF_NAT_NEEDED $CONSTANT_Y [list $notmod] 2 }
	global CONFIG_IP_NF_TARGET_MASQUERADE
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_CONNTRACK != 0) && ($CONFIG_IP_NF_NAT != 0) && ($CONFIG_IP_NF_NAT == 1 || $CONFIG_IP_NF_NAT == 2 || $CONFIG_IP_NF_NAT == 4)} then {write_tristate $cfg $autocfg CONFIG_IP_NF_TARGET_MASQUERADE $CONFIG_IP_NF_TARGET_MASQUERADE [list $CONFIG_IP_NF_NAT] 2 }
	global CONFIG_IP_NF_TARGET_REDIRECT
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_CONNTRACK != 0) && ($CONFIG_IP_NF_NAT != 0) && ($CONFIG_IP_NF_NAT == 1 || $CONFIG_IP_NF_NAT == 2 || $CONFIG_IP_NF_NAT == 4)} then {write_tristate $cfg $autocfg CONFIG_IP_NF_TARGET_REDIRECT $CONFIG_IP_NF_TARGET_REDIRECT [list $CONFIG_IP_NF_NAT] 2 }
	global CONFIG_IP_NF_TARGET_NETMAP
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_CONNTRACK != 0) && ($CONFIG_IP_NF_NAT != 0) && ($CONFIG_IP_NF_NAT == 1 || $CONFIG_IP_NF_NAT == 2 || $CONFIG_IP_NF_NAT == 4)} then {write_tristate $cfg $autocfg CONFIG_IP_NF_TARGET_NETMAP $CONFIG_IP_NF_TARGET_NETMAP [list $CONFIG_IP_NF_NAT] 2 }
	global CONFIG_IP_NF_NAT_H323
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_CONNTRACK != 0) && ($CONFIG_IP_NF_NAT != 0) && ($CONFIG_IP_NF_H323 == 2)} then {write_tristate $cfg $autocfg CONFIG_IP_NF_NAT_H323 $CONSTANT_M [list $notmod] 2 }
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_CONNTRACK != 0) && ($CONFIG_IP_NF_NAT != 0) && ($CONFIG_IP_NF_H323 != 2) && ($CONFIG_IP_NF_H323 == 1)} then {write_tristate $cfg $autocfg CONFIG_IP_NF_NAT_H323 $CONFIG_IP_NF_NAT [list $notmod] 2 }
	global CONFIG_IP_NF_NAT_AMANDA
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_CONNTRACK != 0) && ($CONFIG_IP_NF_NAT != 0) && ($CONFIG_IP_NF_AMANDA == 2)} then {write_tristate $cfg $autocfg CONFIG_IP_NF_NAT_AMANDA $CONSTANT_M [list $notmod] 2 }
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_CONNTRACK != 0) && ($CONFIG_IP_NF_NAT != 0) && ($CONFIG_IP_NF_AMANDA != 2) && ($CONFIG_IP_NF_AMANDA == 1)} then {write_tristate $cfg $autocfg CONFIG_IP_NF_NAT_AMANDA $CONFIG_IP_NF_NAT [list $notmod] 2 }
	global CONFIG_IP_NF_NAT_LOCAL
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_CONNTRACK != 0) && ($CONFIG_IP_NF_NAT != 0)} then {write_tristate $cfg $autocfg CONFIG_IP_NF_NAT_LOCAL $CONFIG_IP_NF_NAT_LOCAL [list $notmod] 2 }
	global CONFIG_IP_NF_NAT_SNMP_BASIC
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_CONNTRACK != 0) && ($CONFIG_IP_NF_NAT != 0) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_IP_NF_NAT == 1 || $CONFIG_IP_NF_NAT == 2 || $CONFIG_IP_NF_NAT == 4)} then {write_tristate $cfg $autocfg CONFIG_IP_NF_NAT_SNMP_BASIC $CONFIG_IP_NF_NAT_SNMP_BASIC [list $CONFIG_IP_NF_NAT] 2 }
	global CONFIG_IP_NF_NAT_IRC
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_CONNTRACK != 0) && ($CONFIG_IP_NF_NAT != 0) && ($CONFIG_IP_NF_IRC == 2)} then {write_tristate $cfg $autocfg CONFIG_IP_NF_NAT_IRC $CONSTANT_M [list $notmod] 2 }
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_CONNTRACK != 0) && ($CONFIG_IP_NF_NAT != 0) && ($CONFIG_IP_NF_IRC != 2) && ($CONFIG_IP_NF_IRC == 1)} then {write_tristate $cfg $autocfg CONFIG_IP_NF_NAT_IRC $CONFIG_IP_NF_NAT [list $notmod] 2 }
	global CONFIG_IP_NF_NAT_FTP
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_CONNTRACK != 0) && ($CONFIG_IP_NF_NAT != 0) && ($CONFIG_IP_NF_FTP == 2)} then {write_tristate $cfg $autocfg CONFIG_IP_NF_NAT_FTP $CONSTANT_M [list $notmod] 2 }
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_CONNTRACK != 0) && ($CONFIG_IP_NF_NAT != 0) && ($CONFIG_IP_NF_FTP != 2) && ($CONFIG_IP_NF_FTP == 1)} then {write_tristate $cfg $autocfg CONFIG_IP_NF_NAT_FTP $CONFIG_IP_NF_NAT [list $notmod] 2 }
	global CONFIG_IP_NF_NAT_PPTP
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_CONNTRACK != 0) && ($CONFIG_IP_NF_NAT != 0) && ($CONFIG_IP_NF_PPTP == 2)} then {write_tristate $cfg $autocfg CONFIG_IP_NF_NAT_PPTP $CONSTANT_M [list $notmod] 2 }
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_CONNTRACK != 0) && ($CONFIG_IP_NF_NAT != 0) && ($CONFIG_IP_NF_PPTP != 2) && ($CONFIG_IP_NF_PPTP == 1)} then {write_tristate $cfg $autocfg CONFIG_IP_NF_NAT_PPTP $CONFIG_IP_NF_NAT [list $notmod] 2 }
	global CONFIG_IP_NF_NAT_PROTO_GRE
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_CONNTRACK != 0) && ($CONFIG_IP_NF_NAT != 0) && ($CONFIG_IP_NF_CT_PROTO_GRE == 2)} then {write_tristate $cfg $autocfg CONFIG_IP_NF_NAT_PROTO_GRE $CONSTANT_M [list $notmod] 2 }
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_CONNTRACK != 0) && ($CONFIG_IP_NF_NAT != 0) && ($CONFIG_IP_NF_CT_PROTO_GRE != 2) && ($CONFIG_IP_NF_CT_PROTO_GRE == 1)} then {write_tristate $cfg $autocfg CONFIG_IP_NF_NAT_PROTO_GRE $CONFIG_IP_NF_NAT [list $notmod] 2 }
	global CONFIG_IP_NF_NAT_TFTP
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_CONNTRACK != 0) && ($CONFIG_IP_NF_NAT != 0) && ($CONFIG_IP_NF_TFTP == 2)} then {write_tristate $cfg $autocfg CONFIG_IP_NF_NAT_TFTP $CONSTANT_M [list $notmod] 2 }
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_CONNTRACK != 0) && ($CONFIG_IP_NF_NAT != 0) && ($CONFIG_IP_NF_TFTP != 2) && ($CONFIG_IP_NF_TFTP == 1)} then {write_tristate $cfg $autocfg CONFIG_IP_NF_NAT_TFTP $CONFIG_IP_NF_NAT [list $notmod] 2 }
	global CONFIG_IP_NF_MANGLE
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_IPTABLES == 1 || $CONFIG_IP_NF_IPTABLES == 2 || $CONFIG_IP_NF_IPTABLES == 4)} then {write_tristate $cfg $autocfg CONFIG_IP_NF_MANGLE $CONFIG_IP_NF_MANGLE [list $CONFIG_IP_NF_IPTABLES] 2 }
	global CONFIG_IP_NF_TARGET_TOS
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_MANGLE != 0) && ($CONFIG_IP_NF_MANGLE == 1 || $CONFIG_IP_NF_MANGLE == 2 || $CONFIG_IP_NF_MANGLE == 4)} then {write_tristate $cfg $autocfg CONFIG_IP_NF_TARGET_TOS $CONFIG_IP_NF_TARGET_TOS [list $CONFIG_IP_NF_MANGLE] 2 }
	global CONFIG_IP_NF_TARGET_ECN
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_MANGLE != 0) && ($CONFIG_IP_NF_MANGLE == 1 || $CONFIG_IP_NF_MANGLE == 2 || $CONFIG_IP_NF_MANGLE == 4)} then {write_tristate $cfg $autocfg CONFIG_IP_NF_TARGET_ECN $CONFIG_IP_NF_TARGET_ECN [list $CONFIG_IP_NF_MANGLE] 2 }
	global CONFIG_IP_NF_TARGET_DSCP
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_MANGLE != 0) && ($CONFIG_IP_NF_MANGLE == 1 || $CONFIG_IP_NF_MANGLE == 2 || $CONFIG_IP_NF_MANGLE == 4)} then {write_tristate $cfg $autocfg CONFIG_IP_NF_TARGET_DSCP $CONFIG_IP_NF_TARGET_DSCP [list $CONFIG_IP_NF_MANGLE] 2 }
	global CONFIG_IP_NF_TARGET_MARK
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_MANGLE != 0) && ($CONFIG_IP_NF_MANGLE == 1 || $CONFIG_IP_NF_MANGLE == 2 || $CONFIG_IP_NF_MANGLE == 4)} then {write_tristate $cfg $autocfg CONFIG_IP_NF_TARGET_MARK $CONFIG_IP_NF_TARGET_MARK [list $CONFIG_IP_NF_MANGLE] 2 }
	global CONFIG_IP_NF_TARGET_LOG
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_IPTABLES == 1 || $CONFIG_IP_NF_IPTABLES == 2 || $CONFIG_IP_NF_IPTABLES == 4)} then {write_tristate $cfg $autocfg CONFIG_IP_NF_TARGET_LOG $CONFIG_IP_NF_TARGET_LOG [list $CONFIG_IP_NF_IPTABLES] 2 }
	global CONFIG_IP_NF_TARGET_CONNMARK
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_CONNTRACK_MARK != 0) && ($CONFIG_IP_NF_IPTABLES == 1 || $CONFIG_IP_NF_IPTABLES == 2 || $CONFIG_IP_NF_IPTABLES == 4)} then {write_tristate $cfg $autocfg CONFIG_IP_NF_TARGET_CONNMARK $CONFIG_IP_NF_TARGET_CONNMARK [list $CONFIG_IP_NF_IPTABLES] 2 }
	global CONFIG_IP_NF_TARGET_ULOG
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_IPTABLES == 1 || $CONFIG_IP_NF_IPTABLES == 2 || $CONFIG_IP_NF_IPTABLES == 4)} then {write_tristate $cfg $autocfg CONFIG_IP_NF_TARGET_ULOG $CONFIG_IP_NF_TARGET_ULOG [list $CONFIG_IP_NF_IPTABLES] 2 }
	global CONFIG_IP_NF_TARGET_TCPMSS
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_IPTABLES != 0) && ($CONFIG_IP_NF_IPTABLES == 1 || $CONFIG_IP_NF_IPTABLES == 2 || $CONFIG_IP_NF_IPTABLES == 4)} then {write_tristate $cfg $autocfg CONFIG_IP_NF_TARGET_TCPMSS $CONFIG_IP_NF_TARGET_TCPMSS [list $CONFIG_IP_NF_IPTABLES] 2 }
	global CONFIG_IP_NF_ARPTABLES
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0)} then {write_tristate $cfg $autocfg CONFIG_IP_NF_ARPTABLES $CONFIG_IP_NF_ARPTABLES [list $notmod] 2 }
	global CONFIG_IP_NF_ARPFILTER
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_ARPTABLES != 0) && ($CONFIG_IP_NF_ARPTABLES == 1 || $CONFIG_IP_NF_ARPTABLES == 2 || $CONFIG_IP_NF_ARPTABLES == 4)} then {write_tristate $cfg $autocfg CONFIG_IP_NF_ARPFILTER $CONFIG_IP_NF_ARPFILTER [list $CONFIG_IP_NF_ARPTABLES] 2 }
	global CONFIG_IP_NF_ARP_MANGLE
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_ARPTABLES != 0) && ($CONFIG_IP_NF_ARPTABLES == 1 || $CONFIG_IP_NF_ARPTABLES == 2 || $CONFIG_IP_NF_ARPTABLES == 4)} then {write_tristate $cfg $autocfg CONFIG_IP_NF_ARP_MANGLE $CONFIG_IP_NF_ARP_MANGLE [list $CONFIG_IP_NF_ARPTABLES] 2 }
	global CONFIG_IP_NF_COMPAT_IPCHAINS
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_CONNTRACK != 1) && ($CONFIG_IP_NF_IPTABLES != 1)} then {write_tristate $cfg $autocfg CONFIG_IP_NF_COMPAT_IPCHAINS $CONFIG_IP_NF_COMPAT_IPCHAINS [list $notmod] 2 }
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_CONNTRACK != 1) && ($CONFIG_IP_NF_IPTABLES != 1) && ($CONFIG_IP_NF_COMPAT_IPCHAINS != 0)} then {write_tristate $cfg $autocfg CONFIG_IP_NF_NAT_NEEDED $CONSTANT_Y [list $notmod] 2 }
	global CONFIG_IP_NF_COMPAT_IPFWADM
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_CONNTRACK != 1) && ($CONFIG_IP_NF_IPTABLES != 1) && ($CONFIG_IP_NF_COMPAT_IPCHAINS != 1)} then {write_tristate $cfg $autocfg CONFIG_IP_NF_COMPAT_IPFWADM $CONFIG_IP_NF_COMPAT_IPFWADM [list $notmod] 2 }
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_NF_CONNTRACK != 1) && ($CONFIG_IP_NF_IPTABLES != 1) && ($CONFIG_IP_NF_COMPAT_IPCHAINS != 1) && ($CONFIG_IP_NF_COMPAT_IPFWADM != 0)} then {write_tristate $cfg $autocfg CONFIG_IP_NF_NAT_NEEDED $CONSTANT_Y [list $notmod] 2 }
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0)} then {write_comment $cfg $autocfg "  IP: Virtual Server Configuration"}
	global CONFIG_IP_VS
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0)} then {write_tristate $cfg $autocfg CONFIG_IP_VS $CONFIG_IP_VS [list $notmod] 2 }
	global CONFIG_IP_VS_DEBUG
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_VS != 0)} then {write_tristate $cfg $autocfg CONFIG_IP_VS_DEBUG $CONFIG_IP_VS_DEBUG [list $notmod] 2 }
	global CONFIG_IP_VS_TAB_BITS
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_VS != 0)} then {write_int $cfg $autocfg CONFIG_IP_VS_TAB_BITS $CONFIG_IP_VS_TAB_BITS $notmod }
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_VS != 0)} then {write_comment $cfg $autocfg "IPVS scheduler"}
	global CONFIG_IP_VS_RR
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_VS != 0) && ($CONFIG_IP_VS == 1 || $CONFIG_IP_VS == 2 || $CONFIG_IP_VS == 4)} then {write_tristate $cfg $autocfg CONFIG_IP_VS_RR $CONFIG_IP_VS_RR [list $CONFIG_IP_VS] 2 }
	global CONFIG_IP_VS_WRR
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_VS != 0) && ($CONFIG_IP_VS == 1 || $CONFIG_IP_VS == 2 || $CONFIG_IP_VS == 4)} then {write_tristate $cfg $autocfg CONFIG_IP_VS_WRR $CONFIG_IP_VS_WRR [list $CONFIG_IP_VS] 2 }
	global CONFIG_IP_VS_LC
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_VS != 0) && ($CONFIG_IP_VS == 1 || $CONFIG_IP_VS == 2 || $CONFIG_IP_VS == 4)} then {write_tristate $cfg $autocfg CONFIG_IP_VS_LC $CONFIG_IP_VS_LC [list $CONFIG_IP_VS] 2 }
	global CONFIG_IP_VS_WLC
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_VS != 0) && ($CONFIG_IP_VS == 1 || $CONFIG_IP_VS == 2 || $CONFIG_IP_VS == 4)} then {write_tristate $cfg $autocfg CONFIG_IP_VS_WLC $CONFIG_IP_VS_WLC [list $CONFIG_IP_VS] 2 }
	global CONFIG_IP_VS_LBLC
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_VS != 0) && ($CONFIG_IP_VS == 1 || $CONFIG_IP_VS == 2 || $CONFIG_IP_VS == 4)} then {write_tristate $cfg $autocfg CONFIG_IP_VS_LBLC $CONFIG_IP_VS_LBLC [list $CONFIG_IP_VS] 2 }
	global CONFIG_IP_VS_LBLCR
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_VS != 0) && ($CONFIG_IP_VS == 1 || $CONFIG_IP_VS == 2 || $CONFIG_IP_VS == 4)} then {write_tristate $cfg $autocfg CONFIG_IP_VS_LBLCR $CONFIG_IP_VS_LBLCR [list $CONFIG_IP_VS] 2 }
	global CONFIG_IP_VS_DH
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_VS != 0) && ($CONFIG_IP_VS == 1 || $CONFIG_IP_VS == 2 || $CONFIG_IP_VS == 4)} then {write_tristate $cfg $autocfg CONFIG_IP_VS_DH $CONFIG_IP_VS_DH [list $CONFIG_IP_VS] 2 }
	global CONFIG_IP_VS_SH
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_VS != 0) && ($CONFIG_IP_VS == 1 || $CONFIG_IP_VS == 2 || $CONFIG_IP_VS == 4)} then {write_tristate $cfg $autocfg CONFIG_IP_VS_SH $CONFIG_IP_VS_SH [list $CONFIG_IP_VS] 2 }
	global CONFIG_IP_VS_SED
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_VS != 0) && ($CONFIG_IP_VS == 1 || $CONFIG_IP_VS == 2 || $CONFIG_IP_VS == 4)} then {write_tristate $cfg $autocfg CONFIG_IP_VS_SED $CONFIG_IP_VS_SED [list $CONFIG_IP_VS] 2 }
	global CONFIG_IP_VS_NQ
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_VS != 0) && ($CONFIG_IP_VS == 1 || $CONFIG_IP_VS == 2 || $CONFIG_IP_VS == 4)} then {write_tristate $cfg $autocfg CONFIG_IP_VS_NQ $CONFIG_IP_VS_NQ [list $CONFIG_IP_VS] 2 }
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_VS != 0)} then {write_comment $cfg $autocfg "IPVS application helper"}
	global CONFIG_IP_VS_FTP
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP_VS != 0) && ($CONFIG_IP_VS == 1 || $CONFIG_IP_VS == 2 || $CONFIG_IP_VS == 4)} then {write_tristate $cfg $autocfg CONFIG_IP_VS_FTP $CONFIG_IP_VS_FTP [list $CONFIG_IP_VS] 2 }
	global CONFIG_IPV6
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_EXPERIMENTAL == 1)} then {write_tristate $cfg $autocfg CONFIG_IPV6 $CONFIG_IPV6 [list $notmod] 2 }
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_IPV6 != 0) && ($CONFIG_NETFILTER != 0)} then {write_comment $cfg $autocfg "  IPv6: Netfilter Configuration"}
	global CONFIG_IP6_NF_QUEUE
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_IPV6 != 0) && ($CONFIG_NETFILTER != 0) && ($CONFIG_EXPERIMENTAL == 1)} then {write_tristate $cfg $autocfg CONFIG_IP6_NF_QUEUE $CONFIG_IP6_NF_QUEUE [list $notmod] 2 }
	global CONFIG_IP6_NF_IPTABLES
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_IPV6 != 0) && ($CONFIG_NETFILTER != 0)} then {write_tristate $cfg $autocfg CONFIG_IP6_NF_IPTABLES $CONFIG_IP6_NF_IPTABLES [list $notmod] 2 }
	global CONFIG_IP6_NF_MATCH_LIMIT
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_IPV6 != 0) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP6_NF_IPTABLES != 0) && ($CONFIG_IP6_NF_IPTABLES == 1 || $CONFIG_IP6_NF_IPTABLES == 2 || $CONFIG_IP6_NF_IPTABLES == 4)} then {write_tristate $cfg $autocfg CONFIG_IP6_NF_MATCH_LIMIT $CONFIG_IP6_NF_MATCH_LIMIT [list $CONFIG_IP6_NF_IPTABLES] 2 }
	global CONFIG_IP6_NF_MATCH_MAC
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_IPV6 != 0) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP6_NF_IPTABLES != 0) && ($CONFIG_IP6_NF_IPTABLES == 1 || $CONFIG_IP6_NF_IPTABLES == 2 || $CONFIG_IP6_NF_IPTABLES == 4)} then {write_tristate $cfg $autocfg CONFIG_IP6_NF_MATCH_MAC $CONFIG_IP6_NF_MATCH_MAC [list $CONFIG_IP6_NF_IPTABLES] 2 }
	global CONFIG_IP6_NF_MATCH_RT
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_IPV6 != 0) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP6_NF_IPTABLES != 0) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_IP6_NF_IPTABLES == 1 || $CONFIG_IP6_NF_IPTABLES == 2 || $CONFIG_IP6_NF_IPTABLES == 4)} then {write_tristate $cfg $autocfg CONFIG_IP6_NF_MATCH_RT $CONFIG_IP6_NF_MATCH_RT [list $CONFIG_IP6_NF_IPTABLES] 2 }
	global CONFIG_IP6_NF_MATCH_OPTS
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_IPV6 != 0) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP6_NF_IPTABLES != 0) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_IP6_NF_IPTABLES == 1 || $CONFIG_IP6_NF_IPTABLES == 2 || $CONFIG_IP6_NF_IPTABLES == 4)} then {write_tristate $cfg $autocfg CONFIG_IP6_NF_MATCH_OPTS $CONFIG_IP6_NF_MATCH_OPTS [list $CONFIG_IP6_NF_IPTABLES] 2 }
	global CONFIG_IP6_NF_MATCH_FRAG
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_IPV6 != 0) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP6_NF_IPTABLES != 0) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_IP6_NF_IPTABLES == 1 || $CONFIG_IP6_NF_IPTABLES == 2 || $CONFIG_IP6_NF_IPTABLES == 4)} then {write_tristate $cfg $autocfg CONFIG_IP6_NF_MATCH_FRAG $CONFIG_IP6_NF_MATCH_FRAG [list $CONFIG_IP6_NF_IPTABLES] 2 }
	global CONFIG_IP6_NF_MATCH_HL
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_IPV6 != 0) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP6_NF_IPTABLES != 0) && ($CONFIG_IP6_NF_IPTABLES == 1 || $CONFIG_IP6_NF_IPTABLES == 2 || $CONFIG_IP6_NF_IPTABLES == 4)} then {write_tristate $cfg $autocfg CONFIG_IP6_NF_MATCH_HL $CONFIG_IP6_NF_MATCH_HL [list $CONFIG_IP6_NF_IPTABLES] 2 }
	global CONFIG_IP6_NF_MATCH_MULTIPORT
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_IPV6 != 0) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP6_NF_IPTABLES != 0) && ($CONFIG_IP6_NF_IPTABLES == 1 || $CONFIG_IP6_NF_IPTABLES == 2 || $CONFIG_IP6_NF_IPTABLES == 4)} then {write_tristate $cfg $autocfg CONFIG_IP6_NF_MATCH_MULTIPORT $CONFIG_IP6_NF_MATCH_MULTIPORT [list $CONFIG_IP6_NF_IPTABLES] 2 }
	global CONFIG_IP6_NF_MATCH_OWNER
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_IPV6 != 0) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP6_NF_IPTABLES != 0) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_IP6_NF_IPTABLES == 1 || $CONFIG_IP6_NF_IPTABLES == 2 || $CONFIG_IP6_NF_IPTABLES == 4)} then {write_tristate $cfg $autocfg CONFIG_IP6_NF_MATCH_OWNER $CONFIG_IP6_NF_MATCH_OWNER [list $CONFIG_IP6_NF_IPTABLES] 2 }
	global CONFIG_IP6_NF_MATCH_MARK
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_IPV6 != 0) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP6_NF_IPTABLES != 0) && ($CONFIG_IP6_NF_IPTABLES == 1 || $CONFIG_IP6_NF_IPTABLES == 2 || $CONFIG_IP6_NF_IPTABLES == 4)} then {write_tristate $cfg $autocfg CONFIG_IP6_NF_MATCH_MARK $CONFIG_IP6_NF_MATCH_MARK [list $CONFIG_IP6_NF_IPTABLES] 2 }
	global CONFIG_IP6_NF_MATCH_IPV6HEADER
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_IPV6 != 0) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP6_NF_IPTABLES != 0) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_IP6_NF_IPTABLES == 1 || $CONFIG_IP6_NF_IPTABLES == 2 || $CONFIG_IP6_NF_IPTABLES == 4)} then {write_tristate $cfg $autocfg CONFIG_IP6_NF_MATCH_IPV6HEADER $CONFIG_IP6_NF_MATCH_IPV6HEADER [list $CONFIG_IP6_NF_IPTABLES] 2 }
	global CONFIG_IP6_NF_MATCH_AHESP
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_IPV6 != 0) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP6_NF_IPTABLES != 0) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_IP6_NF_IPTABLES == 1 || $CONFIG_IP6_NF_IPTABLES == 2 || $CONFIG_IP6_NF_IPTABLES == 4)} then {write_tristate $cfg $autocfg CONFIG_IP6_NF_MATCH_AHESP $CONFIG_IP6_NF_MATCH_AHESP [list $CONFIG_IP6_NF_IPTABLES] 2 }
	global CONFIG_IP6_NF_MATCH_LENGTH
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_IPV6 != 0) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP6_NF_IPTABLES != 0) && ($CONFIG_IP6_NF_IPTABLES == 1 || $CONFIG_IP6_NF_IPTABLES == 2 || $CONFIG_IP6_NF_IPTABLES == 4)} then {write_tristate $cfg $autocfg CONFIG_IP6_NF_MATCH_LENGTH $CONFIG_IP6_NF_MATCH_LENGTH [list $CONFIG_IP6_NF_IPTABLES] 2 }
	global CONFIG_IP6_NF_MATCH_EUI64
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_IPV6 != 0) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP6_NF_IPTABLES != 0) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_IP6_NF_IPTABLES == 1 || $CONFIG_IP6_NF_IPTABLES == 2 || $CONFIG_IP6_NF_IPTABLES == 4)} then {write_tristate $cfg $autocfg CONFIG_IP6_NF_MATCH_EUI64 $CONFIG_IP6_NF_MATCH_EUI64 [list $CONFIG_IP6_NF_IPTABLES] 2 }
	global CONFIG_IP6_NF_FILTER
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_IPV6 != 0) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP6_NF_IPTABLES != 0) && ($CONFIG_IP6_NF_IPTABLES == 1 || $CONFIG_IP6_NF_IPTABLES == 2 || $CONFIG_IP6_NF_IPTABLES == 4)} then {write_tristate $cfg $autocfg CONFIG_IP6_NF_FILTER $CONFIG_IP6_NF_FILTER [list $CONFIG_IP6_NF_IPTABLES] 2 }
	global CONFIG_IP6_NF_TARGET_LOG
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_IPV6 != 0) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP6_NF_IPTABLES != 0) && ($CONFIG_IP6_NF_FILTER != 0) && ($CONFIG_IP6_NF_FILTER == 1 || $CONFIG_IP6_NF_FILTER == 2 || $CONFIG_IP6_NF_FILTER == 4)} then {write_tristate $cfg $autocfg CONFIG_IP6_NF_TARGET_LOG $CONFIG_IP6_NF_TARGET_LOG [list $CONFIG_IP6_NF_FILTER] 2 }
	global CONFIG_IP6_NF_MANGLE
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_IPV6 != 0) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP6_NF_IPTABLES != 0) && ($CONFIG_IP6_NF_IPTABLES == 1 || $CONFIG_IP6_NF_IPTABLES == 2 || $CONFIG_IP6_NF_IPTABLES == 4)} then {write_tristate $cfg $autocfg CONFIG_IP6_NF_MANGLE $CONFIG_IP6_NF_MANGLE [list $CONFIG_IP6_NF_IPTABLES] 2 }
	global CONFIG_IP6_NF_TARGET_MARK
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_IPV6 != 0) && ($CONFIG_NETFILTER != 0) && ($CONFIG_IP6_NF_IPTABLES != 0) && ($CONFIG_IP6_NF_MANGLE != 0) && ($CONFIG_IP6_NF_MANGLE == 1 || $CONFIG_IP6_NF_MANGLE == 2 || $CONFIG_IP6_NF_MANGLE == 4)} then {write_tristate $cfg $autocfg CONFIG_IP6_NF_TARGET_MARK $CONFIG_IP6_NF_TARGET_MARK [list $CONFIG_IP6_NF_MANGLE] 2 }
	global CONFIG_KHTTPD
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_EXPERIMENTAL == 1)} then {write_tristate $cfg $autocfg CONFIG_KHTTPD $CONFIG_KHTTPD [list $notmod] 2 }
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_EXPERIMENTAL == 1)} then {write_comment $cfg $autocfg "   SCTP Configuration (EXPERIMENTAL)"}
	global CONFIG_IPV6_SCTP__
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_IPV6 != 0)} then {write_tristate $cfg $autocfg CONFIG_IPV6_SCTP__ $CONFIG_IPV6 [list $notmod] 2 }
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_IPV6 == 0)} then {write_tristate $cfg $autocfg CONFIG_IPV6_SCTP__ $CONSTANT_Y [list $notmod] 2 }
	global CONFIG_IP_SCTP
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_IPV6_SCTP__ == 1 || $CONFIG_IPV6_SCTP__ == 2 || $CONFIG_IPV6_SCTP__ == 4)} then {write_tristate $cfg $autocfg CONFIG_IP_SCTP $CONFIG_IP_SCTP [list $CONFIG_IPV6_SCTP__] 2 }
	global CONFIG_SCTP_ADLER32
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_IP_SCTP != 0)} then {write_tristate $cfg $autocfg CONFIG_SCTP_ADLER32 $CONFIG_SCTP_ADLER32 [list $notmod] 2 }
	global CONFIG_SCTP_DBG_MSG
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_IP_SCTP != 0)} then {write_tristate $cfg $autocfg CONFIG_SCTP_DBG_MSG $CONFIG_SCTP_DBG_MSG [list $notmod] 2 }
	global CONFIG_SCTP_DBG_OBJCNT
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_IP_SCTP != 0)} then {write_tristate $cfg $autocfg CONFIG_SCTP_DBG_OBJCNT $CONFIG_SCTP_DBG_OBJCNT [list $notmod] 2 }
	global CONFIG_ATM
	if {($CONFIG_NET == 1) && ($CONFIG_EXPERIMENTAL == 1)} then {write_tristate $cfg $autocfg CONFIG_ATM $CONFIG_ATM [list $notmod] 2 }
	global CONFIG_ATM_CLIP
	if {($CONFIG_NET == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_ATM == 1 || $CONFIG_ATM == 2) && ($CONFIG_INET == 1) && ($CONFIG_ATM == 1 || $CONFIG_ATM == 2 || $CONFIG_ATM == 4)} then {write_tristate $cfg $autocfg CONFIG_ATM_CLIP $CONFIG_ATM_CLIP [list $CONFIG_ATM] 2 }
	global CONFIG_ATM_CLIP_NO_ICMP
	if {($CONFIG_NET == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_ATM == 1 || $CONFIG_ATM == 2) && ($CONFIG_INET == 1) && ($CONFIG_ATM_CLIP != 0)} then {write_tristate $cfg $autocfg CONFIG_ATM_CLIP_NO_ICMP $CONFIG_ATM_CLIP_NO_ICMP [list $notmod] 2 }
	global CONFIG_ATM_LANE
	if {($CONFIG_NET == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_ATM == 1 || $CONFIG_ATM == 2) && ($CONFIG_ATM == 1 || $CONFIG_ATM == 2 || $CONFIG_ATM == 4)} then {write_tristate $cfg $autocfg CONFIG_ATM_LANE $CONFIG_ATM_LANE [list $CONFIG_ATM] 2 }
	global CONFIG_ATM_MPOA
	if {($CONFIG_NET == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_ATM == 1 || $CONFIG_ATM == 2) && ($CONFIG_INET == 1 && $CONFIG_ATM_LANE != 0)} then {write_tristate $cfg $autocfg CONFIG_ATM_MPOA $CONFIG_ATM_MPOA [list $notmod] 2 }
	global CONFIG_ATM_BR2684
	if {($CONFIG_NET == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_ATM == 1 || $CONFIG_ATM == 2) && ($CONFIG_ATM == 1 || $CONFIG_ATM == 2 || $CONFIG_ATM == 4)} then {write_tristate $cfg $autocfg CONFIG_ATM_BR2684 $CONFIG_ATM_BR2684 [list $CONFIG_ATM] 2 }
	global CONFIG_ATM_BR2684_IPFILTER
	if {($CONFIG_NET == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_ATM == 1 || $CONFIG_ATM == 2) && ($CONFIG_ATM_BR2684 != 0)} then {write_tristate $cfg $autocfg CONFIG_ATM_BR2684_IPFILTER $CONFIG_ATM_BR2684_IPFILTER [list $notmod] 2 }
	global CONFIG_VLAN_8021Q
	if {($CONFIG_NET == 1)} then {write_tristate $cfg $autocfg CONFIG_VLAN_8021Q $CONFIG_VLAN_8021Q [list $notmod] 2 }
	if {($CONFIG_NET == 1)} then {write_comment $cfg $autocfg " "}
	global CONFIG_IPX
	if {($CONFIG_NET == 1)} then {write_tristate $cfg $autocfg CONFIG_IPX $CONFIG_IPX [list $notmod] 2 }
	global CONFIG_IPX_INTERN
	if {($CONFIG_NET == 1) && ($CONFIG_IPX != 0)} then {write_tristate $cfg $autocfg CONFIG_IPX_INTERN $CONFIG_IPX_INTERN [list $notmod] 2 }
	global CONFIG_ATALK
	if {($CONFIG_NET == 1)} then {write_tristate $cfg $autocfg CONFIG_ATALK $CONFIG_ATALK [list $notmod] 2 }
	if {($CONFIG_NET == 1)} then {write_comment $cfg $autocfg "Appletalk devices"}
	global CONFIG_DEV_APPLETALK
	if {($CONFIG_NET == 1) && ($CONFIG_ATALK == 1 || $CONFIG_ATALK == 2 || $CONFIG_ATALK == 4)} then {write_tristate $cfg $autocfg CONFIG_DEV_APPLETALK $CONFIG_DEV_APPLETALK [list $CONFIG_ATALK] 1 }
	global CONFIG_LTPC
	if {($CONFIG_NET == 1) && ($CONFIG_DEV_APPLETALK == 1) && ($CONFIG_ISA == 1 || $CONFIG_EISA == 1)} then {write_tristate $cfg $autocfg CONFIG_LTPC $CONFIG_LTPC [list $notmod] 2 }
	global CONFIG_COPS
	if {($CONFIG_NET == 1) && ($CONFIG_DEV_APPLETALK == 1) && ($CONFIG_ISA == 1 || $CONFIG_EISA == 1)} then {write_tristate $cfg $autocfg CONFIG_COPS $CONFIG_COPS [list $notmod] 2 }
	global CONFIG_COPS_DAYNA
	if {($CONFIG_NET == 1) && ($CONFIG_DEV_APPLETALK == 1) && ($CONFIG_COPS != 0)} then {write_tristate $cfg $autocfg CONFIG_COPS_DAYNA $CONFIG_COPS_DAYNA [list $notmod] 2 }
	global CONFIG_COPS_TANGENT
	if {($CONFIG_NET == 1) && ($CONFIG_DEV_APPLETALK == 1) && ($CONFIG_COPS != 0)} then {write_tristate $cfg $autocfg CONFIG_COPS_TANGENT $CONFIG_COPS_TANGENT [list $notmod] 2 }
	global CONFIG_IPDDP
	if {($CONFIG_NET == 1) && ($CONFIG_DEV_APPLETALK == 1) && ($CONFIG_ATALK == 1 || $CONFIG_ATALK == 2 || $CONFIG_ATALK == 4)} then {write_tristate $cfg $autocfg CONFIG_IPDDP $CONFIG_IPDDP [list $CONFIG_ATALK] 2 }
	global CONFIG_IPDDP_ENCAP
	if {($CONFIG_NET == 1) && ($CONFIG_DEV_APPLETALK == 1) && ($CONFIG_IPDDP != 0)} then {write_tristate $cfg $autocfg CONFIG_IPDDP_ENCAP $CONFIG_IPDDP_ENCAP [list $notmod] 2 }
	global CONFIG_IPDDP_DECAP
	if {($CONFIG_NET == 1) && ($CONFIG_DEV_APPLETALK == 1) && ($CONFIG_IPDDP != 0)} then {write_tristate $cfg $autocfg CONFIG_IPDDP_DECAP $CONFIG_IPDDP_DECAP [list $notmod] 2 }
	global CONFIG_DECNET
	if {($CONFIG_NET == 1)} then {write_tristate $cfg $autocfg CONFIG_DECNET $CONFIG_DECNET [list $notmod] 2 }
	global CONFIG_DECNET_SIOCGIFCONF
	if {($CONFIG_NET == 1) && ($CONFIG_DECNET != 0)} then {write_tristate $cfg $autocfg CONFIG_DECNET_SIOCGIFCONF $CONFIG_DECNET_SIOCGIFCONF [list $notmod] 2 }
	global CONFIG_DECNET_ROUTER
	if {($CONFIG_NET == 1) && ($CONFIG_DECNET != 0) && ($CONFIG_EXPERIMENTAL == 1)} then {write_tristate $cfg $autocfg CONFIG_DECNET_ROUTER $CONFIG_DECNET_ROUTER [list $notmod] 2 }
	global CONFIG_DECNET_ROUTE_FWMARK
	if {($CONFIG_NET == 1) && ($CONFIG_DECNET != 0) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_DECNET_ROUTER == 1) && ($CONFIG_NETFILTER == 1)} then {write_tristate $cfg $autocfg CONFIG_DECNET_ROUTE_FWMARK $CONFIG_DECNET_ROUTE_FWMARK [list $notmod] 2 }
	global CONFIG_BRIDGE
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1 || $CONFIG_INET == 2 || $CONFIG_INET == 4)} then {write_tristate $cfg $autocfg CONFIG_BRIDGE $CONFIG_BRIDGE [list $CONFIG_INET] 2 }
	global CONFIG_BRIDGE_NF_EBTABLES
	if {($CONFIG_NET == 1) && ($CONFIG_BRIDGE != 0 && $CONFIG_NETFILTER != 0) && ($CONFIG_BRIDGE == 1 || $CONFIG_BRIDGE == 2 || $CONFIG_BRIDGE == 4)} then {write_tristate $cfg $autocfg CONFIG_BRIDGE_NF_EBTABLES $CONFIG_BRIDGE_NF_EBTABLES [list $CONFIG_BRIDGE] 2 }
	global CONFIG_BRIDGE_EBT_T_FILTER
	if {($CONFIG_NET == 1) && ($CONFIG_BRIDGE != 0 && $CONFIG_NETFILTER != 0) && ($CONFIG_BRIDGE_NF_EBTABLES == 1 || $CONFIG_BRIDGE_NF_EBTABLES == 2 || $CONFIG_BRIDGE_NF_EBTABLES == 4)} then {write_tristate $cfg $autocfg CONFIG_BRIDGE_EBT_T_FILTER $CONFIG_BRIDGE_EBT_T_FILTER [list $CONFIG_BRIDGE_NF_EBTABLES] 2 }
	global CONFIG_BRIDGE_EBT_T_NAT
	if {($CONFIG_NET == 1) && ($CONFIG_BRIDGE != 0 && $CONFIG_NETFILTER != 0) && ($CONFIG_BRIDGE_NF_EBTABLES == 1 || $CONFIG_BRIDGE_NF_EBTABLES == 2 || $CONFIG_BRIDGE_NF_EBTABLES == 4)} then {write_tristate $cfg $autocfg CONFIG_BRIDGE_EBT_T_NAT $CONFIG_BRIDGE_EBT_T_NAT [list $CONFIG_BRIDGE_NF_EBTABLES] 2 }
	global CONFIG_BRIDGE_EBT_BROUTE
	if {($CONFIG_NET == 1) && ($CONFIG_BRIDGE != 0 && $CONFIG_NETFILTER != 0) && ($CONFIG_BRIDGE_NF_EBTABLES == 1 || $CONFIG_BRIDGE_NF_EBTABLES == 2 || $CONFIG_BRIDGE_NF_EBTABLES == 4)} then {write_tristate $cfg $autocfg CONFIG_BRIDGE_EBT_BROUTE $CONFIG_BRIDGE_EBT_BROUTE [list $CONFIG_BRIDGE_NF_EBTABLES] 2 }
	global CONFIG_BRIDGE_EBT_LOG
	if {($CONFIG_NET == 1) && ($CONFIG_BRIDGE != 0 && $CONFIG_NETFILTER != 0) && ($CONFIG_BRIDGE_NF_EBTABLES == 1 || $CONFIG_BRIDGE_NF_EBTABLES == 2 || $CONFIG_BRIDGE_NF_EBTABLES == 4)} then {write_tristate $cfg $autocfg CONFIG_BRIDGE_EBT_LOG $CONFIG_BRIDGE_EBT_LOG [list $CONFIG_BRIDGE_NF_EBTABLES] 2 }
	global CONFIG_BRIDGE_EBT_IPF
	if {($CONFIG_NET == 1) && ($CONFIG_BRIDGE != 0 && $CONFIG_NETFILTER != 0) && ($CONFIG_BRIDGE_NF_EBTABLES == 1 || $CONFIG_BRIDGE_NF_EBTABLES == 2 || $CONFIG_BRIDGE_NF_EBTABLES == 4)} then {write_tristate $cfg $autocfg CONFIG_BRIDGE_EBT_IPF $CONFIG_BRIDGE_EBT_IPF [list $CONFIG_BRIDGE_NF_EBTABLES] 2 }
	global CONFIG_BRIDGE_EBT_ARPF
	if {($CONFIG_NET == 1) && ($CONFIG_BRIDGE != 0 && $CONFIG_NETFILTER != 0) && ($CONFIG_BRIDGE_NF_EBTABLES == 1 || $CONFIG_BRIDGE_NF_EBTABLES == 2 || $CONFIG_BRIDGE_NF_EBTABLES == 4)} then {write_tristate $cfg $autocfg CONFIG_BRIDGE_EBT_ARPF $CONFIG_BRIDGE_EBT_ARPF [list $CONFIG_BRIDGE_NF_EBTABLES] 2 }
	global CONFIG_BRIDGE_EBT_VLANF
	if {($CONFIG_NET == 1) && ($CONFIG_BRIDGE != 0 && $CONFIG_NETFILTER != 0) && ($CONFIG_BRIDGE_NF_EBTABLES == 1 || $CONFIG_BRIDGE_NF_EBTABLES == 2 || $CONFIG_BRIDGE_NF_EBTABLES == 4)} then {write_tristate $cfg $autocfg CONFIG_BRIDGE_EBT_VLANF $CONFIG_BRIDGE_EBT_VLANF [list $CONFIG_BRIDGE_NF_EBTABLES] 2 }
	global CONFIG_BRIDGE_EBT_MARKF
	if {($CONFIG_NET == 1) && ($CONFIG_BRIDGE != 0 && $CONFIG_NETFILTER != 0) && ($CONFIG_BRIDGE_NF_EBTABLES == 1 || $CONFIG_BRIDGE_NF_EBTABLES == 2 || $CONFIG_BRIDGE_NF_EBTABLES == 4)} then {write_tristate $cfg $autocfg CONFIG_BRIDGE_EBT_MARKF $CONFIG_BRIDGE_EBT_MARKF [list $CONFIG_BRIDGE_NF_EBTABLES] 2 }
	global CONFIG_BRIDGE_EBT_SNAT
	if {($CONFIG_NET == 1) && ($CONFIG_BRIDGE != 0 && $CONFIG_NETFILTER != 0) && ($CONFIG_BRIDGE_NF_EBTABLES == 1 || $CONFIG_BRIDGE_NF_EBTABLES == 2 || $CONFIG_BRIDGE_NF_EBTABLES == 4)} then {write_tristate $cfg $autocfg CONFIG_BRIDGE_EBT_SNAT $CONFIG_BRIDGE_EBT_SNAT [list $CONFIG_BRIDGE_NF_EBTABLES] 2 }
	global CONFIG_BRIDGE_EBT_DNAT
	if {($CONFIG_NET == 1) && ($CONFIG_BRIDGE != 0 && $CONFIG_NETFILTER != 0) && ($CONFIG_BRIDGE_NF_EBTABLES == 1 || $CONFIG_BRIDGE_NF_EBTABLES == 2 || $CONFIG_BRIDGE_NF_EBTABLES == 4)} then {write_tristate $cfg $autocfg CONFIG_BRIDGE_EBT_DNAT $CONFIG_BRIDGE_EBT_DNAT [list $CONFIG_BRIDGE_NF_EBTABLES] 2 }
	global CONFIG_BRIDGE_EBT_REDIRECT
	if {($CONFIG_NET == 1) && ($CONFIG_BRIDGE != 0 && $CONFIG_NETFILTER != 0) && ($CONFIG_BRIDGE_NF_EBTABLES == 1 || $CONFIG_BRIDGE_NF_EBTABLES == 2 || $CONFIG_BRIDGE_NF_EBTABLES == 4)} then {write_tristate $cfg $autocfg CONFIG_BRIDGE_EBT_REDIRECT $CONFIG_BRIDGE_EBT_REDIRECT [list $CONFIG_BRIDGE_NF_EBTABLES] 2 }
	global CONFIG_BRIDGE_EBT_MARK_T
	if {($CONFIG_NET == 1) && ($CONFIG_BRIDGE != 0 && $CONFIG_NETFILTER != 0) && ($CONFIG_BRIDGE_NF_EBTABLES == 1 || $CONFIG_BRIDGE_NF_EBTABLES == 2 || $CONFIG_BRIDGE_NF_EBTABLES == 4)} then {write_tristate $cfg $autocfg CONFIG_BRIDGE_EBT_MARK_T $CONFIG_BRIDGE_EBT_MARK_T [list $CONFIG_BRIDGE_NF_EBTABLES] 2 }
	global CONFIG_X25
	if {($CONFIG_NET == 1) && ($CONFIG_EXPERIMENTAL == 1)} then {write_tristate $cfg $autocfg CONFIG_X25 $CONFIG_X25 [list $notmod] 2 }
	global CONFIG_LAPB
	if {($CONFIG_NET == 1) && ($CONFIG_EXPERIMENTAL == 1)} then {write_tristate $cfg $autocfg CONFIG_LAPB $CONFIG_LAPB [list $notmod] 2 }
	global CONFIG_LLC
	if {($CONFIG_NET == 1) && ($CONFIG_EXPERIMENTAL == 1)} then {write_tristate $cfg $autocfg CONFIG_LLC $CONFIG_LLC [list $notmod] 2 }
	global CONFIG_NET_DIVERT
	if {($CONFIG_NET == 1) && ($CONFIG_EXPERIMENTAL == 1)} then {write_tristate $cfg $autocfg CONFIG_NET_DIVERT $CONFIG_NET_DIVERT [list $notmod] 2 }
	global CONFIG_ECONET
	if {($CONFIG_NET == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_INET == 1)} then {write_tristate $cfg $autocfg CONFIG_ECONET $CONFIG_ECONET [list $notmod] 2 }
	global CONFIG_ECONET_AUNUDP
	if {($CONFIG_NET == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_INET == 1) && ($CONFIG_ECONET != 0)} then {write_tristate $cfg $autocfg CONFIG_ECONET_AUNUDP $CONFIG_ECONET_AUNUDP [list $notmod] 2 }
	global CONFIG_ECONET_NATIVE
	if {($CONFIG_NET == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_INET == 1) && ($CONFIG_ECONET != 0)} then {write_tristate $cfg $autocfg CONFIG_ECONET_NATIVE $CONFIG_ECONET_NATIVE [list $notmod] 2 }
	global CONFIG_WAN_ROUTER
	if {($CONFIG_NET == 1) && ($CONFIG_EXPERIMENTAL == 1)} then {write_tristate $cfg $autocfg CONFIG_WAN_ROUTER $CONFIG_WAN_ROUTER [list $notmod] 2 }
	global CONFIG_NET_FASTROUTE
	if {($CONFIG_NET == 1) && ($CONFIG_EXPERIMENTAL == 1)} then {write_tristate $cfg $autocfg CONFIG_NET_FASTROUTE $CONFIG_NET_FASTROUTE [list $notmod] 2 }
	global CONFIG_NET_HW_FLOWCONTROL
	if {($CONFIG_NET == 1) && ($CONFIG_EXPERIMENTAL == 1)} then {write_tristate $cfg $autocfg CONFIG_NET_HW_FLOWCONTROL $CONFIG_NET_HW_FLOWCONTROL [list $notmod] 2 }
	if {($CONFIG_NET == 1)} then {write_comment $cfg $autocfg "QoS and/or fair queueing"}
	global CONFIG_NET_SCHED
	if {($CONFIG_NET == 1)} then {write_tristate $cfg $autocfg CONFIG_NET_SCHED $CONFIG_NET_SCHED [list $notmod] 2 }
	global CONFIG_NET_SCH_CBQ
	if {($CONFIG_NET == 1) && ($CONFIG_NET_SCHED == 1)} then {write_tristate $cfg $autocfg CONFIG_NET_SCH_CBQ $CONFIG_NET_SCH_CBQ [list $notmod] 2 }
	global CONFIG_NET_SCH_HTB
	if {($CONFIG_NET == 1) && ($CONFIG_NET_SCHED == 1)} then {write_tristate $cfg $autocfg CONFIG_NET_SCH_HTB $CONFIG_NET_SCH_HTB [list $notmod] 2 }
	global CONFIG_NET_SCH_CSZ
	if {($CONFIG_NET == 1) && ($CONFIG_NET_SCHED == 1)} then {write_tristate $cfg $autocfg CONFIG_NET_SCH_CSZ $CONFIG_NET_SCH_CSZ [list $notmod] 2 }
	global CONFIG_NET_SCH_ATM
	if {($CONFIG_NET == 1) && ($CONFIG_NET_SCHED == 1) && ($CONFIG_ATM == 1 || $CONFIG_ATM == 2) && ($CONFIG_ATM == 1 || $CONFIG_ATM == 2 || $CONFIG_ATM == 4)} then {write_tristate $cfg $autocfg CONFIG_NET_SCH_ATM $CONFIG_NET_SCH_ATM [list $CONFIG_ATM] 2 }
	global CONFIG_NET_SCH_PRIO
	if {($CONFIG_NET == 1) && ($CONFIG_NET_SCHED == 1)} then {write_tristate $cfg $autocfg CONFIG_NET_SCH_PRIO $CONFIG_NET_SCH_PRIO [list $notmod] 2 }
	global CONFIG_NET_SCH_RED
	if {($CONFIG_NET == 1) && ($CONFIG_NET_SCHED == 1)} then {write_tristate $cfg $autocfg CONFIG_NET_SCH_RED $CONFIG_NET_SCH_RED [list $notmod] 2 }
	global CONFIG_NET_SCH_SFQ
	if {($CONFIG_NET == 1) && ($CONFIG_NET_SCHED == 1)} then {write_tristate $cfg $autocfg CONFIG_NET_SCH_SFQ $CONFIG_NET_SCH_SFQ [list $notmod] 2 }
	global CONFIG_NET_SCH_TEQL
	if {($CONFIG_NET == 1) && ($CONFIG_NET_SCHED == 1)} then {write_tristate $cfg $autocfg CONFIG_NET_SCH_TEQL $CONFIG_NET_SCH_TEQL [list $notmod] 2 }
	global CONFIG_NET_SCH_TBF
	if {($CONFIG_NET == 1) && ($CONFIG_NET_SCHED == 1)} then {write_tristate $cfg $autocfg CONFIG_NET_SCH_TBF $CONFIG_NET_SCH_TBF [list $notmod] 2 }
	global CONFIG_NET_SCH_GRED
	if {($CONFIG_NET == 1) && ($CONFIG_NET_SCHED == 1)} then {write_tristate $cfg $autocfg CONFIG_NET_SCH_GRED $CONFIG_NET_SCH_GRED [list $notmod] 2 }
	global CONFIG_NET_SCH_DSMARK
	if {($CONFIG_NET == 1) && ($CONFIG_NET_SCHED == 1)} then {write_tristate $cfg $autocfg CONFIG_NET_SCH_DSMARK $CONFIG_NET_SCH_DSMARK [list $notmod] 2 }
	global CONFIG_NET_SCH_INGRESS
	if {($CONFIG_NET == 1) && ($CONFIG_NET_SCHED == 1) && ($CONFIG_NETFILTER == 1)} then {write_tristate $cfg $autocfg CONFIG_NET_SCH_INGRESS $CONFIG_NET_SCH_INGRESS [list $notmod] 2 }
	global CONFIG_NET_QOS
	if {($CONFIG_NET == 1) && ($CONFIG_NET_SCHED == 1)} then {write_tristate $cfg $autocfg CONFIG_NET_QOS $CONFIG_NET_QOS [list $notmod] 2 }
	global CONFIG_NET_ESTIMATOR
	if {($CONFIG_NET == 1) && ($CONFIG_NET_SCHED == 1) && ($CONFIG_NET_QOS == 1)} then {write_tristate $cfg $autocfg CONFIG_NET_ESTIMATOR $CONFIG_NET_ESTIMATOR [list $notmod] 2 }
	global CONFIG_NET_CLS
	if {($CONFIG_NET == 1) && ($CONFIG_NET_SCHED == 1)} then {write_tristate $cfg $autocfg CONFIG_NET_CLS $CONFIG_NET_CLS [list $notmod] 2 }
	global CONFIG_NET_CLS_TCINDEX
	if {($CONFIG_NET == 1) && ($CONFIG_NET_SCHED == 1) && ($CONFIG_NET_CLS == 1)} then {write_tristate $cfg $autocfg CONFIG_NET_CLS_TCINDEX $CONFIG_NET_CLS_TCINDEX [list $notmod] 2 }
	global CONFIG_NET_CLS_ROUTE4
	if {($CONFIG_NET == 1) && ($CONFIG_NET_SCHED == 1) && ($CONFIG_NET_CLS == 1)} then {write_tristate $cfg $autocfg CONFIG_NET_CLS_ROUTE4 $CONFIG_NET_CLS_ROUTE4 [list $notmod] 2 }
	global CONFIG_NET_CLS_ROUTE
	if {($CONFIG_NET == 1) && ($CONFIG_NET_SCHED == 1) && ($CONFIG_NET_CLS == 1) && ($CONFIG_NET_CLS_ROUTE4 != 0)} then {write_tristate $cfg $autocfg CONFIG_NET_CLS_ROUTE $CONSTANT_Y [list $notmod] 2 }
	global CONFIG_NET_CLS_FW
	if {($CONFIG_NET == 1) && ($CONFIG_NET_SCHED == 1) && ($CONFIG_NET_CLS == 1)} then {write_tristate $cfg $autocfg CONFIG_NET_CLS_FW $CONFIG_NET_CLS_FW [list $notmod] 2 }
	global CONFIG_NET_CLS_U32
	if {($CONFIG_NET == 1) && ($CONFIG_NET_SCHED == 1) && ($CONFIG_NET_CLS == 1)} then {write_tristate $cfg $autocfg CONFIG_NET_CLS_U32 $CONFIG_NET_CLS_U32 [list $notmod] 2 }
	global CONFIG_NET_CLS_RSVP
	if {($CONFIG_NET == 1) && ($CONFIG_NET_SCHED == 1) && ($CONFIG_NET_CLS == 1) && ($CONFIG_NET_QOS == 1)} then {write_tristate $cfg $autocfg CONFIG_NET_CLS_RSVP $CONFIG_NET_CLS_RSVP [list $notmod] 2 }
	global CONFIG_NET_CLS_RSVP6
	if {($CONFIG_NET == 1) && ($CONFIG_NET_SCHED == 1) && ($CONFIG_NET_CLS == 1) && ($CONFIG_NET_QOS == 1)} then {write_tristate $cfg $autocfg CONFIG_NET_CLS_RSVP6 $CONFIG_NET_CLS_RSVP6 [list $notmod] 2 }
	global CONFIG_NET_CLS_POLICE
	if {($CONFIG_NET == 1) && ($CONFIG_NET_SCHED == 1) && ($CONFIG_NET_CLS == 1) && ($CONFIG_NET_QOS == 1)} then {write_tristate $cfg $autocfg CONFIG_NET_CLS_POLICE $CONFIG_NET_CLS_POLICE [list $notmod] 2 }
	global CONFIG_IPSEC
	if {($CONFIG_NET == 1)} then {write_tristate $cfg $autocfg CONFIG_IPSEC $CONFIG_IPSEC [list $notmod] 2 }
	if {($CONFIG_NET == 1) && ($CONFIG_IPSEC != 0)} then {write_comment $cfg $autocfg "IPSec options (FreeS/WAN)"}
	global CONFIG_IPSEC_IPIP
	if {($CONFIG_NET == 1) && ($CONFIG_IPSEC != 0)} then {write_tristate $cfg $autocfg CONFIG_IPSEC_IPIP $CONFIG_IPSEC_IPIP [list $notmod] 2 }
	global CONFIG_IPSEC_ALG
	if {($CONFIG_NET == 1) && ($CONFIG_IPSEC != 0) && ($CONFIG_IPSEC_IPIP == 1)} then {write_tristate $cfg $autocfg CONFIG_IPSEC_ALG $CONSTANT_Y [list $notmod] 2 }
	global CONFIG_IPSEC_ALG_AES
	if {($CONFIG_NET == 1) && ($CONFIG_IPSEC != 0) && ($CONFIG_IPSEC_IPIP == 1)} then {write_tristate $cfg $autocfg CONFIG_IPSEC_ALG_AES $CONSTANT_Y [list $notmod] 2 }
	global CONFIG_IPSEC_AH
	if {($CONFIG_NET == 1) && ($CONFIG_IPSEC != 0)} then {write_tristate $cfg $autocfg CONFIG_IPSEC_AH $CONFIG_IPSEC_AH [list $notmod] 2 }
	global CONFIG_IPSEC_AUTH_HMAC_MD5
	global CONFIG_IPSEC_ESP
	if {($CONFIG_NET == 1) && ($CONFIG_IPSEC != 0) && ($CONFIG_IPSEC_AH == 1 || $CONFIG_IPSEC_ESP == 1)} then {write_tristate $cfg $autocfg CONFIG_IPSEC_AUTH_HMAC_MD5 $CONFIG_IPSEC_AUTH_HMAC_MD5 [list $notmod] 2 }
	global CONFIG_IPSEC_AUTH_HMAC_SHA1
	if {($CONFIG_NET == 1) && ($CONFIG_IPSEC != 0) && ($CONFIG_IPSEC_AH == 1 || $CONFIG_IPSEC_ESP == 1)} then {write_tristate $cfg $autocfg CONFIG_IPSEC_AUTH_HMAC_SHA1 $CONFIG_IPSEC_AUTH_HMAC_SHA1 [list $notmod] 2 }
	if {($CONFIG_NET == 1) && ($CONFIG_IPSEC != 0)} then {write_tristate $cfg $autocfg CONFIG_IPSEC_ESP $CONFIG_IPSEC_ESP [list $notmod] 2 }
	global CONFIG_IPSEC_ENC_DES
	if {($CONFIG_NET == 1) && ($CONFIG_IPSEC != 0) && ($CONFIG_IPSEC_ESP == 1)} then {write_tristate $cfg $autocfg CONFIG_IPSEC_ENC_DES $CONFIG_IPSEC_ENC_DES [list $notmod] 2 }
	global CONFIG_IPSEC_ENC_3DES
	if {($CONFIG_NET == 1) && ($CONFIG_IPSEC != 0) && ($CONFIG_IPSEC_ESP == 1)} then {write_tristate $cfg $autocfg CONFIG_IPSEC_ENC_3DES $CONFIG_IPSEC_ENC_3DES [list $notmod] 2 }
	global CONFIG_IPSEC_IPCOMP
	if {($CONFIG_NET == 1) && ($CONFIG_IPSEC != 0)} then {write_tristate $cfg $autocfg CONFIG_IPSEC_IPCOMP $CONFIG_IPSEC_IPCOMP [list $notmod] 2 }
	global CONFIG_IPSEC_IPCOMP_LZS
	if {($CONFIG_NET == 1) && ($CONFIG_IPSEC != 0) && ($CONFIG_IPSEC_IPCOMP == 1)} then {write_tristate $cfg $autocfg CONFIG_IPSEC_IPCOMP_LZS $CONFIG_IPSEC_IPCOMP_LZS [list $notmod] 2 }
	global CONFIG_IPSEC_DEBUG
	if {($CONFIG_NET == 1) && ($CONFIG_IPSEC != 0)} then {write_tristate $cfg $autocfg CONFIG_IPSEC_DEBUG $CONFIG_IPSEC_DEBUG [list $notmod] 2 }
	global CONFIG_IPSEC_NAT_TRAVERSAL
	if {($CONFIG_NET == 1) && ($CONFIG_IPSEC != 0)} then {write_tristate $cfg $autocfg CONFIG_IPSEC_NAT_TRAVERSAL $CONFIG_IPSEC_NAT_TRAVERSAL [list $notmod] 2 }
	if {($CONFIG_NET == 1)} then {write_comment $cfg $autocfg "Network testing"}
	global CONFIG_NET_PKTGEN
	if {($CONFIG_NET == 1)} then {write_tristate $cfg $autocfg CONFIG_NET_PKTGEN $CONFIG_NET_PKTGEN [list $notmod] 2 }
	if {($CONFIG_NET == 1)} then {write_comment $cfg $autocfg "Network device support"}
	global CONFIG_NETDEVICES
	if {($CONFIG_NET == 1)} then {write_tristate $cfg $autocfg CONFIG_NETDEVICES $CONFIG_NETDEVICES [list $notmod] 2 }
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1)} then {write_comment $cfg $autocfg "ARCnet devices"}
	global CONFIG_ARCNET
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1)} then {write_tristate $cfg $autocfg CONFIG_ARCNET $CONFIG_ARCNET [list $notmod] 2 }
	global CONFIG_ARCNET_1201
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_ARCNET != 0) && ($CONFIG_ARCNET == 1 || $CONFIG_ARCNET == 2 || $CONFIG_ARCNET == 4)} then {write_tristate $cfg $autocfg CONFIG_ARCNET_1201 $CONFIG_ARCNET_1201 [list $CONFIG_ARCNET] 2 }
	global CONFIG_ARCNET_1051
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_ARCNET != 0) && ($CONFIG_ARCNET == 1 || $CONFIG_ARCNET == 2 || $CONFIG_ARCNET == 4)} then {write_tristate $cfg $autocfg CONFIG_ARCNET_1051 $CONFIG_ARCNET_1051 [list $CONFIG_ARCNET] 2 }
	global CONFIG_ARCNET_RAW
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_ARCNET != 0) && ($CONFIG_ARCNET == 1 || $CONFIG_ARCNET == 2 || $CONFIG_ARCNET == 4)} then {write_tristate $cfg $autocfg CONFIG_ARCNET_RAW $CONFIG_ARCNET_RAW [list $CONFIG_ARCNET] 2 }
	global CONFIG_ARCNET_COM90xx
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_ARCNET != 0) && ($CONFIG_ARCNET == 1 || $CONFIG_ARCNET == 2 || $CONFIG_ARCNET == 4)} then {write_tristate $cfg $autocfg CONFIG_ARCNET_COM90xx $CONFIG_ARCNET_COM90xx [list $CONFIG_ARCNET] 2 }
	global CONFIG_ARCNET_COM90xxIO
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_ARCNET != 0) && ($CONFIG_ARCNET == 1 || $CONFIG_ARCNET == 2 || $CONFIG_ARCNET == 4)} then {write_tristate $cfg $autocfg CONFIG_ARCNET_COM90xxIO $CONFIG_ARCNET_COM90xxIO [list $CONFIG_ARCNET] 2 }
	global CONFIG_ARCNET_RIM_I
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_ARCNET != 0) && ($CONFIG_ARCNET == 1 || $CONFIG_ARCNET == 2 || $CONFIG_ARCNET == 4)} then {write_tristate $cfg $autocfg CONFIG_ARCNET_RIM_I $CONFIG_ARCNET_RIM_I [list $CONFIG_ARCNET] 2 }
	global CONFIG_ARCNET_COM20020
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_ARCNET != 0) && ($CONFIG_ARCNET == 1 || $CONFIG_ARCNET == 2 || $CONFIG_ARCNET == 4)} then {write_tristate $cfg $autocfg CONFIG_ARCNET_COM20020 $CONFIG_ARCNET_COM20020 [list $CONFIG_ARCNET] 2 }
	global CONFIG_ARCNET_COM20020_ISA
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_ARCNET != 0) && ($CONFIG_ARCNET_COM20020 == 1 || $CONFIG_ARCNET_COM20020 == 2 || $CONFIG_ARCNET_COM20020 == 4) && ($CONFIG_ISA == 1 || $CONFIG_ISA == 2 || $CONFIG_ISA == 4)} then {write_tristate $cfg $autocfg CONFIG_ARCNET_COM20020_ISA $CONFIG_ARCNET_COM20020_ISA [list $CONFIG_ARCNET_COM20020 $CONFIG_ISA] 2 }
	global CONFIG_ARCNET_COM20020_PCI
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_ARCNET != 0) && ($CONFIG_ARCNET_COM20020 == 1 || $CONFIG_ARCNET_COM20020 == 2 || $CONFIG_ARCNET_COM20020 == 4) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {write_tristate $cfg $autocfg CONFIG_ARCNET_COM20020_PCI $CONFIG_ARCNET_COM20020_PCI [list $CONFIG_ARCNET_COM20020 $CONFIG_PCI] 2 }
	global CONFIG_DUMMY
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1)} then {write_tristate $cfg $autocfg CONFIG_DUMMY $CONFIG_DUMMY [list $notmod] 2 }
	global CONFIG_BONDING
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1)} then {write_tristate $cfg $autocfg CONFIG_BONDING $CONFIG_BONDING [list $notmod] 2 }
	global CONFIG_EQUALIZER
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1)} then {write_tristate $cfg $autocfg CONFIG_EQUALIZER $CONFIG_EQUALIZER [list $notmod] 2 }
	global CONFIG_TUN
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1)} then {write_tristate $cfg $autocfg CONFIG_TUN $CONFIG_TUN [list $notmod] 2 }
	global CONFIG_ETHERTAP
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_EXPERIMENTAL == 1)} then {write_tristate $cfg $autocfg CONFIG_ETHERTAP $CONFIG_ETHERTAP [list $notmod] 2 }
	global CONFIG_NET_SB1000
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_ISAPNP == 1 || $CONFIG_ISAPNP == 2) && ($CONFIG_ISAPNP == 1 || $CONFIG_ISAPNP == 2 || $CONFIG_ISAPNP == 4)} then {write_tristate $cfg $autocfg CONFIG_NET_SB1000 $CONFIG_NET_SB1000 [list $CONFIG_ISAPNP] 2 }
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1)} then {write_comment $cfg $autocfg "Ethernet (10 or 100Mbit)"}
	global CONFIG_NET_ETHERNET
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1)} then {write_tristate $cfg $autocfg CONFIG_NET_ETHERNET $CONFIG_NET_ETHERNET [list $notmod] 2 }
	global CONFIG_IXP425_ETH
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_ARCH_IXP425 == 1) && ($CONFIG_IXP425_CSR == 1 || $CONFIG_IXP425_CSR == 2 || $CONFIG_IXP425_CSR == 4)} then {write_tristate $cfg $autocfg CONFIG_IXP425_ETH $CONFIG_IXP425_ETH [list $CONFIG_IXP425_CSR $CONSTANT_M] 2 }
	global CONFIG_KS8695
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_ARM == 1) && ($CONFIG_ARCH_KS8695 == 1)} then {write_tristate $cfg $autocfg CONFIG_KS8695 $CONFIG_KS8695 [list $notmod] 2 }
	global CONFIG_CSUM_UNNECESSARY
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_ARM == 1) && ($CONFIG_ARCH_KS8695 == 1) && ($CONFIG_KS8695 == 1 || $CONFIG_KS8695 == 2)} then {write_tristate $cfg $autocfg CONFIG_CSUM_UNNECESSARY $CONFIG_CSUM_UNNECESSARY [list $notmod] 2 }
	global CONFIG_ARM_AM79C961A
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_ARM == 1) && ($CONFIG_ARCH_EBSA110 == 1 || $CONFIG_ARCH_EBSA110 == 4)} then {write_tristate $cfg $autocfg CONFIG_ARM_AM79C961A $CONFIG_ARM_AM79C961A [list $CONFIG_ARCH_EBSA110] 2 }
	global CONFIG_ARM_CIRRUS
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_ARM == 1)} then {write_tristate $cfg $autocfg CONFIG_ARM_CIRRUS $CONFIG_ARM_CIRRUS [list $notmod] 2 }
	global CONFIG_ARM_ETHER1
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_ARM == 1) && ($CONFIG_ARCH_ACORN == 1)} then {write_tristate $cfg $autocfg CONFIG_ARM_ETHER1 $CONFIG_ARM_ETHER1 [list $notmod] 2 }
	global CONFIG_ARM_ETHER3
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_ARM == 1) && ($CONFIG_ARCH_ACORN == 1)} then {write_tristate $cfg $autocfg CONFIG_ARM_ETHER3 $CONFIG_ARM_ETHER3 [list $notmod] 2 }
	global CONFIG_ARM_ETHERH
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_ARM == 1) && ($CONFIG_ARCH_ACORN == 1)} then {write_tristate $cfg $autocfg CONFIG_ARM_ETHERH $CONFIG_ARM_ETHERH [list $notmod] 2 }
	global CONFIG_ETHER00
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_ARCH_CAMELOT == 1)} then {write_tristate $cfg $autocfg CONFIG_ETHER00 $CONFIG_ETHER00 [list $notmod] 2 }
	global CONFIG_SUNLANCE
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_SBUS == 1 || $CONFIG_SBUS == 2 || $CONFIG_SBUS == 4)} then {write_tristate $cfg $autocfg CONFIG_SUNLANCE $CONFIG_SUNLANCE [list $CONFIG_SBUS] 2 }
	global CONFIG_HAPPYMEAL
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_SBUS == 1 || $CONFIG_PCI == 1)} then {write_tristate $cfg $autocfg CONFIG_HAPPYMEAL $CONFIG_HAPPYMEAL [list $notmod] 2 }
	global CONFIG_SUNBMAC
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_SBUS == 1 || $CONFIG_SBUS == 2 || $CONFIG_SBUS == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {write_tristate $cfg $autocfg CONFIG_SUNBMAC $CONFIG_SUNBMAC [list $CONFIG_SBUS $CONFIG_EXPERIMENTAL] 2 }
	global CONFIG_SUNQE
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_SBUS == 1 || $CONFIG_SBUS == 2 || $CONFIG_SBUS == 4)} then {write_tristate $cfg $autocfg CONFIG_SUNQE $CONFIG_SUNQE [list $CONFIG_SBUS] 2 }
	global CONFIG_SUNGEM
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {write_tristate $cfg $autocfg CONFIG_SUNGEM $CONFIG_SUNGEM [list $CONFIG_PCI] 2 }
	global CONFIG_NET_VENDOR_3COM
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1)} then {write_tristate $cfg $autocfg CONFIG_NET_VENDOR_3COM $CONFIG_NET_VENDOR_3COM [list $notmod] 2 }
	global CONFIG_EL1
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_VENDOR_3COM == 1) && ($CONFIG_ISA == 1 || $CONFIG_ISA == 2 || $CONFIG_ISA == 4)} then {write_tristate $cfg $autocfg CONFIG_EL1 $CONFIG_EL1 [list $CONFIG_ISA] 2 }
	global CONFIG_EL2
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_VENDOR_3COM == 1) && ($CONFIG_ISA == 1 || $CONFIG_ISA == 2 || $CONFIG_ISA == 4)} then {write_tristate $cfg $autocfg CONFIG_EL2 $CONFIG_EL2 [list $CONFIG_ISA] 2 }
	global CONFIG_ELPLUS
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_VENDOR_3COM == 1) && ($CONFIG_ISA == 1 || $CONFIG_ISA == 2 || $CONFIG_ISA == 4)} then {write_tristate $cfg $autocfg CONFIG_ELPLUS $CONFIG_ELPLUS [list $CONFIG_ISA] 2 }
	global CONFIG_EL16
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_VENDOR_3COM == 1) && ($CONFIG_ISA == 1 || $CONFIG_ISA == 2 || $CONFIG_ISA == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {write_tristate $cfg $autocfg CONFIG_EL16 $CONFIG_EL16 [list $CONFIG_ISA $CONFIG_EXPERIMENTAL] 2 }
	global CONFIG_EL3
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_VENDOR_3COM == 1) && ($CONFIG_ISA == 1 || $CONFIG_EISA == 1 || $CONFIG_MCA == 1)} then {write_tristate $cfg $autocfg CONFIG_EL3 $CONFIG_EL3 [list $notmod] 2 }
	global CONFIG_3C515
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_VENDOR_3COM == 1) && ($CONFIG_ISA == 1 || $CONFIG_EISA == 1)} then {write_tristate $cfg $autocfg CONFIG_3C515 $CONFIG_3C515 [list $notmod] 2 }
	global CONFIG_ELMC
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_VENDOR_3COM == 1) && ($CONFIG_MCA == 1 || $CONFIG_MCA == 2 || $CONFIG_MCA == 4)} then {write_tristate $cfg $autocfg CONFIG_ELMC $CONFIG_ELMC [list $CONFIG_MCA] 2 }
	global CONFIG_ELMC_II
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_VENDOR_3COM == 1) && ($CONFIG_MCA == 1 || $CONFIG_MCA == 2 || $CONFIG_MCA == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {write_tristate $cfg $autocfg CONFIG_ELMC_II $CONFIG_ELMC_II [list $CONFIG_MCA $CONFIG_EXPERIMENTAL] 2 }
	global CONFIG_VORTEX
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_VENDOR_3COM == 1) && ($CONFIG_PCI == 1 || $CONFIG_EISA == 1)} then {write_tristate $cfg $autocfg CONFIG_VORTEX $CONFIG_VORTEX [list $notmod] 2 }
	global CONFIG_TYPHOON
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_VENDOR_3COM == 1) && ($CONFIG_PCI == 1)} then {write_tristate $cfg $autocfg CONFIG_TYPHOON $CONFIG_TYPHOON [list $notmod] 2 }
	global CONFIG_LANCE
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_ISA == 1 || $CONFIG_ISA == 2 || $CONFIG_ISA == 4)} then {write_tristate $cfg $autocfg CONFIG_LANCE $CONFIG_LANCE [list $CONFIG_ISA] 2 }
	global CONFIG_NET_VENDOR_SMC
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1)} then {write_tristate $cfg $autocfg CONFIG_NET_VENDOR_SMC $CONFIG_NET_VENDOR_SMC [list $notmod] 2 }
	global CONFIG_WD80x3
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_VENDOR_SMC == 1) && ($CONFIG_ISA == 1 || $CONFIG_ISA == 2 || $CONFIG_ISA == 4)} then {write_tristate $cfg $autocfg CONFIG_WD80x3 $CONFIG_WD80x3 [list $CONFIG_ISA] 2 }
	global CONFIG_ULTRAMCA
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_VENDOR_SMC == 1) && ($CONFIG_MCA == 1 || $CONFIG_MCA == 2 || $CONFIG_MCA == 4)} then {write_tristate $cfg $autocfg CONFIG_ULTRAMCA $CONFIG_ULTRAMCA [list $CONFIG_MCA] 2 }
	global CONFIG_ULTRA
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_VENDOR_SMC == 1) && ($CONFIG_ISA == 1 || $CONFIG_ISA == 2 || $CONFIG_ISA == 4)} then {write_tristate $cfg $autocfg CONFIG_ULTRA $CONFIG_ULTRA [list $CONFIG_ISA] 2 }
	global CONFIG_ULTRA32
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_VENDOR_SMC == 1) && ($CONFIG_EISA == 1 || $CONFIG_EISA == 2 || $CONFIG_EISA == 4)} then {write_tristate $cfg $autocfg CONFIG_ULTRA32 $CONFIG_ULTRA32 [list $CONFIG_EISA] 2 }
	global CONFIG_SMC9194
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_VENDOR_SMC == 1) && ($CONFIG_ISA == 1 || $CONFIG_ISA == 2 || $CONFIG_ISA == 4)} then {write_tristate $cfg $autocfg CONFIG_SMC9194 $CONFIG_SMC9194 [list $CONFIG_ISA] 2 }
	global CONFIG_SMC91111
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_VENDOR_SMC == 1)} then {write_tristate $cfg $autocfg CONFIG_SMC91111 $CONFIG_SMC91111 [list $notmod] 2 }
	global CONFIG_NET_VENDOR_RACAL
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1)} then {write_tristate $cfg $autocfg CONFIG_NET_VENDOR_RACAL $CONFIG_NET_VENDOR_RACAL [list $notmod] 2 }
	global CONFIG_NI5010
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_VENDOR_RACAL == 1) && ($CONFIG_ISA == 1 || $CONFIG_ISA == 2 || $CONFIG_ISA == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {write_tristate $cfg $autocfg CONFIG_NI5010 $CONFIG_NI5010 [list $CONFIG_ISA $CONFIG_EXPERIMENTAL] 2 }
	global CONFIG_NI52
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_VENDOR_RACAL == 1) && ($CONFIG_ISA == 1 || $CONFIG_ISA == 2 || $CONFIG_ISA == 4)} then {write_tristate $cfg $autocfg CONFIG_NI52 $CONFIG_NI52 [list $CONFIG_ISA] 2 }
	global CONFIG_NI65
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_VENDOR_RACAL == 1) && ($CONFIG_ISA == 1 || $CONFIG_ISA == 2 || $CONFIG_ISA == 4)} then {write_tristate $cfg $autocfg CONFIG_NI65 $CONFIG_NI65 [list $CONFIG_ISA] 2 }
	global CONFIG_AT1700
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_ISA == 1 || $CONFIG_MCA == 1) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {write_tristate $cfg $autocfg CONFIG_AT1700 $CONFIG_AT1700 [list $CONFIG_EXPERIMENTAL] 2 }
	global CONFIG_DEPCA
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_ISA == 1 || $CONFIG_EISA == 1 || $CONFIG_MCA == 1)} then {write_tristate $cfg $autocfg CONFIG_DEPCA $CONFIG_DEPCA [list $notmod] 2 }
	global CONFIG_HP100
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_ISA == 1 || $CONFIG_EISA == 1 || $CONFIG_PCI == 1)} then {write_tristate $cfg $autocfg CONFIG_HP100 $CONFIG_HP100 [list $notmod] 2 }
	global CONFIG_NET_ISA
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_ISA == 1 || $CONFIG_ISA == 4)} then {write_tristate $cfg $autocfg CONFIG_NET_ISA $CONFIG_NET_ISA [list $CONFIG_ISA] 2 }
	global CONFIG_E2100
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_ISA == 1)} then {write_tristate $cfg $autocfg CONFIG_E2100 $CONFIG_E2100 [list $notmod] 2 }
	global CONFIG_EWRK3
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_ISA == 1)} then {write_tristate $cfg $autocfg CONFIG_EWRK3 $CONFIG_EWRK3 [list $notmod] 2 }
	global CONFIG_EEXPRESS
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_ISA == 1)} then {write_tristate $cfg $autocfg CONFIG_EEXPRESS $CONFIG_EEXPRESS [list $notmod] 2 }
	global CONFIG_EEXPRESS_PRO
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_ISA == 1)} then {write_tristate $cfg $autocfg CONFIG_EEXPRESS_PRO $CONFIG_EEXPRESS_PRO [list $notmod] 2 }
	global CONFIG_FMV18X
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_ISA == 1) && ($CONFIG_OBSOLETE == 1)} then {write_tristate $cfg $autocfg CONFIG_FMV18X $CONFIG_FMV18X [list $notmod] 2 }
	global CONFIG_HPLAN_PLUS
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_ISA == 1)} then {write_tristate $cfg $autocfg CONFIG_HPLAN_PLUS $CONFIG_HPLAN_PLUS [list $notmod] 2 }
	global CONFIG_HPLAN
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_ISA == 1)} then {write_tristate $cfg $autocfg CONFIG_HPLAN $CONFIG_HPLAN [list $notmod] 2 }
	global CONFIG_LP486E
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_ISA == 1)} then {write_tristate $cfg $autocfg CONFIG_LP486E $CONFIG_LP486E [list $notmod] 2 }
	global CONFIG_ETH16I
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_ISA == 1)} then {write_tristate $cfg $autocfg CONFIG_ETH16I $CONFIG_ETH16I [list $notmod] 2 }
	global CONFIG_NE2000
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_ISA == 1)} then {write_tristate $cfg $autocfg CONFIG_NE2000 $CONFIG_NE2000 [list $notmod] 2 }
	global CONFIG_SEEQ8005
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_ISA == 1) && ($CONFIG_OBSOLETE == 1) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {write_tristate $cfg $autocfg CONFIG_SEEQ8005 $CONFIG_SEEQ8005 [list $CONFIG_EXPERIMENTAL] 2 }
	global CONFIG_SK_G16
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_ISA == 1) && ($CONFIG_OBSOLETE == 1)} then {write_tristate $cfg $autocfg CONFIG_SK_G16 $CONFIG_SK_G16 [list $notmod] 2 }
	global CONFIG_SKMC
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_MCA == 1)} then {write_tristate $cfg $autocfg CONFIG_SKMC $CONFIG_SKMC [list $notmod] 2 }
	global CONFIG_NE2_MCA
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_MCA == 1)} then {write_tristate $cfg $autocfg CONFIG_NE2_MCA $CONFIG_NE2_MCA [list $notmod] 2 }
	global CONFIG_IBMLANA
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_MCA == 1)} then {write_tristate $cfg $autocfg CONFIG_IBMLANA $CONFIG_IBMLANA [list $notmod] 2 }
	global CONFIG_NET_PCI
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_ISA == 1 || $CONFIG_EISA == 1 || $CONFIG_PCI == 1)} then {write_tristate $cfg $autocfg CONFIG_NET_PCI $CONFIG_NET_PCI [list $notmod] 2 }
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_ISA != 1 && $CONFIG_EISA != 1 && $CONFIG_PCI != 1)} then {write_tristate $cfg $autocfg CONFIG_NET_PCI $CONSTANT_N [list $notmod] 2 }
	global CONFIG_PCNET32
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_PCI == 1) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {write_tristate $cfg $autocfg CONFIG_PCNET32 $CONFIG_PCNET32 [list $CONFIG_PCI] 2 }
	global CONFIG_AMD8111_ETH
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_PCI == 1) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {write_tristate $cfg $autocfg CONFIG_AMD8111_ETH $CONFIG_AMD8111_ETH [list $CONFIG_PCI] 2 }
	global CONFIG_ADAPTEC_STARFIRE
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_PCI == 1) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {write_tristate $cfg $autocfg CONFIG_ADAPTEC_STARFIRE $CONFIG_ADAPTEC_STARFIRE [list $CONFIG_PCI] 2 }
	global CONFIG_AC3200
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_PCI == 1) && ($CONFIG_ISA == 1 || $CONFIG_EISA == 1) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {write_tristate $cfg $autocfg CONFIG_AC3200 $CONFIG_AC3200 [list $CONFIG_EXPERIMENTAL] 2 }
	global CONFIG_APRICOT
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_PCI == 1) && ($CONFIG_ISA == 1 || $CONFIG_ISA == 2 || $CONFIG_ISA == 4)} then {write_tristate $cfg $autocfg CONFIG_APRICOT $CONFIG_APRICOT [list $CONFIG_ISA] 2 }
	global CONFIG_B44
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_PCI == 1) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {write_tristate $cfg $autocfg CONFIG_B44 $CONFIG_B44 [list $CONFIG_PCI $CONFIG_EXPERIMENTAL] 2 }
	global CONFIG_CS89x0
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_PCI == 1) && ($CONFIG_ISA == 1 || $CONFIG_ISA == 2 || $CONFIG_ISA == 4)} then {write_tristate $cfg $autocfg CONFIG_CS89x0 $CONFIG_CS89x0 [list $CONFIG_ISA] 2 }
	global CONFIG_TULIP
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_PCI == 1) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {write_tristate $cfg $autocfg CONFIG_TULIP $CONFIG_TULIP [list $CONFIG_PCI] 2 }
	global CONFIG_TULIP_MWI
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_PCI == 1) && ($CONFIG_TULIP == 1 || $CONFIG_TULIP == 2) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 4)} then {write_tristate $cfg $autocfg CONFIG_TULIP_MWI $CONFIG_TULIP_MWI [list $CONFIG_EXPERIMENTAL] 2 }
	global CONFIG_TULIP_MMIO
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_PCI == 1) && ($CONFIG_TULIP == 1 || $CONFIG_TULIP == 2)} then {write_tristate $cfg $autocfg CONFIG_TULIP_MMIO $CONFIG_TULIP_MMIO [list $notmod] 2 }
	global CONFIG_DE4X5
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_PCI == 1) && ($CONFIG_PCI == 1 || $CONFIG_EISA == 1)} then {write_tristate $cfg $autocfg CONFIG_DE4X5 $CONFIG_DE4X5 [list $notmod] 2 }
	global CONFIG_DGRS
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_PCI == 1) && ($CONFIG_PCI == 1 || $CONFIG_EISA == 1)} then {write_tristate $cfg $autocfg CONFIG_DGRS $CONFIG_DGRS [list $notmod] 2 }
	global CONFIG_DM9102
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_PCI == 1) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {write_tristate $cfg $autocfg CONFIG_DM9102 $CONFIG_DM9102 [list $CONFIG_PCI] 2 }
	global CONFIG_EEPRO100
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_PCI == 1) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {write_tristate $cfg $autocfg CONFIG_EEPRO100 $CONFIG_EEPRO100 [list $CONFIG_PCI] 2 }
	global CONFIG_EEPRO100_PIO
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_PCI == 1) && ($CONFIG_EEPRO100 == 1 || $CONFIG_EEPRO100 == 2 || $CONFIG_EEPRO100 == 4)} then {write_tristate $cfg $autocfg CONFIG_EEPRO100_PIO $CONFIG_EEPRO100_PIO [list $CONFIG_EEPRO100] 1 }
	global CONFIG_E100
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_PCI == 1) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {write_tristate $cfg $autocfg CONFIG_E100 $CONFIG_E100 [list $CONFIG_PCI] 2 }
	global CONFIG_LNE390
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_PCI == 1) && ($CONFIG_EISA == 1 || $CONFIG_EISA == 2 || $CONFIG_EISA == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {write_tristate $cfg $autocfg CONFIG_LNE390 $CONFIG_LNE390 [list $CONFIG_EISA $CONFIG_EXPERIMENTAL] 2 }
	global CONFIG_FEALNX
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_PCI == 1) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {write_tristate $cfg $autocfg CONFIG_FEALNX $CONFIG_FEALNX [list $CONFIG_PCI] 2 }
	global CONFIG_NATSEMI
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_PCI == 1) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {write_tristate $cfg $autocfg CONFIG_NATSEMI $CONFIG_NATSEMI [list $CONFIG_PCI] 2 }
	global CONFIG_NE2K_PCI
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_PCI == 1) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {write_tristate $cfg $autocfg CONFIG_NE2K_PCI $CONFIG_NE2K_PCI [list $CONFIG_PCI] 2 }
	global CONFIG_NE3210
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_PCI == 1) && ($CONFIG_EISA == 1 || $CONFIG_EISA == 2 || $CONFIG_EISA == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {write_tristate $cfg $autocfg CONFIG_NE3210 $CONFIG_NE3210 [list $CONFIG_EISA $CONFIG_EXPERIMENTAL] 2 }
	global CONFIG_ES3210
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_PCI == 1) && ($CONFIG_EISA == 1 || $CONFIG_EISA == 2 || $CONFIG_EISA == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {write_tristate $cfg $autocfg CONFIG_ES3210 $CONFIG_ES3210 [list $CONFIG_EISA $CONFIG_EXPERIMENTAL] 2 }
	global CONFIG_8139CP
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_PCI == 1) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {write_tristate $cfg $autocfg CONFIG_8139CP $CONFIG_8139CP [list $CONFIG_PCI $CONFIG_EXPERIMENTAL] 2 }
	global CONFIG_8139CP_EXTERNAL_PHY
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_PCI == 1) && ($CONFIG_8139CP == 1 || $CONFIG_8139CP == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 4)} then {write_tristate $cfg $autocfg CONFIG_8139CP_EXTERNAL_PHY $CONFIG_8139CP_EXTERNAL_PHY [list $CONFIG_8139CP $CONFIG_EXPERIMENTAL] 2 }
	global CONFIG_8139CP_PHY_NUM
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_PCI == 1) && ($CONFIG_8139CP_EXTERNAL_PHY == 1)} then {write_int $cfg $autocfg CONFIG_8139CP_PHY_NUM $CONFIG_8139CP_PHY_NUM $notmod }
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_PCI == 1) && ($CONFIG_8139CP_EXTERNAL_PHY != 1)} then {write_int $cfg $autocfg CONFIG_8139CP_PHY_NUM 32 $notmod }
	global CONFIG_8139TOO
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_PCI == 1) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {write_tristate $cfg $autocfg CONFIG_8139TOO $CONFIG_8139TOO [list $CONFIG_PCI] 2 }
	global CONFIG_8139TOO_PIO
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_PCI == 1) && ($CONFIG_8139TOO == 1 || $CONFIG_8139TOO == 2 || $CONFIG_8139TOO == 4)} then {write_tristate $cfg $autocfg CONFIG_8139TOO_PIO $CONFIG_8139TOO_PIO [list $CONFIG_8139TOO] 1 }
	global CONFIG_8139TOO_TUNE_TWISTER
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_PCI == 1) && ($CONFIG_8139TOO == 1 || $CONFIG_8139TOO == 2 || $CONFIG_8139TOO == 4)} then {write_tristate $cfg $autocfg CONFIG_8139TOO_TUNE_TWISTER $CONFIG_8139TOO_TUNE_TWISTER [list $CONFIG_8139TOO] 1 }
	global CONFIG_8139TOO_8129
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_PCI == 1) && ($CONFIG_8139TOO == 1 || $CONFIG_8139TOO == 2 || $CONFIG_8139TOO == 4)} then {write_tristate $cfg $autocfg CONFIG_8139TOO_8129 $CONFIG_8139TOO_8129 [list $CONFIG_8139TOO] 1 }
	global CONFIG_8139_OLD_RX_RESET
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_PCI == 1) && ($CONFIG_8139TOO == 1 || $CONFIG_8139TOO == 2 || $CONFIG_8139TOO == 4)} then {write_tristate $cfg $autocfg CONFIG_8139_OLD_RX_RESET $CONFIG_8139_OLD_RX_RESET [list $CONFIG_8139TOO] 1 }
	global CONFIG_RTL8139
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_PCI == 1) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {write_tristate $cfg $autocfg CONFIG_RTL8139 $CONFIG_RTL8139 [list $CONFIG_PCI] 2 }
	global CONFIG_SIS900
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_PCI == 1) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {write_tristate $cfg $autocfg CONFIG_SIS900 $CONFIG_SIS900 [list $CONFIG_PCI] 2 }
	global CONFIG_EPIC100
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_PCI == 1) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {write_tristate $cfg $autocfg CONFIG_EPIC100 $CONFIG_EPIC100 [list $CONFIG_PCI] 2 }
	global CONFIG_SUNDANCE
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_PCI == 1) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {write_tristate $cfg $autocfg CONFIG_SUNDANCE $CONFIG_SUNDANCE [list $CONFIG_PCI] 2 }
	global CONFIG_SUNDANCE_MMIO
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_PCI == 1) && ($CONFIG_SUNDANCE == 1 || $CONFIG_SUNDANCE == 2 || $CONFIG_SUNDANCE == 4)} then {write_tristate $cfg $autocfg CONFIG_SUNDANCE_MMIO $CONFIG_SUNDANCE_MMIO [list $CONFIG_SUNDANCE] 1 }
	global CONFIG_TLAN
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_PCI == 1) && ($CONFIG_PCI == 1 || $CONFIG_EISA == 1)} then {write_tristate $cfg $autocfg CONFIG_TLAN $CONFIG_TLAN [list $notmod] 2 }
	global CONFIG_VIA_RHINE
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_PCI == 1) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {write_tristate $cfg $autocfg CONFIG_VIA_RHINE $CONFIG_VIA_RHINE [list $CONFIG_PCI] 2 }
	global CONFIG_VIA_RHINE_FET
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_PCI == 1) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {write_tristate $cfg $autocfg CONFIG_VIA_RHINE_FET $CONFIG_VIA_RHINE_FET [list $CONFIG_PCI] 2 }
	global CONFIG_VIA_RHINE_MMIO
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_PCI == 1) && ($CONFIG_VIA_RHINE == 1 || $CONFIG_VIA_RHINE == 2 || $CONFIG_VIA_RHINE == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {write_tristate $cfg $autocfg CONFIG_VIA_RHINE_MMIO $CONFIG_VIA_RHINE_MMIO [list $CONFIG_VIA_RHINE $CONFIG_EXPERIMENTAL] 1 }
	global CONFIG_WINBOND_840
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_PCI == 1) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {write_tristate $cfg $autocfg CONFIG_WINBOND_840 $CONFIG_WINBOND_840 [list $CONFIG_PCI] 2 }
	global CONFIG_ZNET
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_PCI == 1) && ($CONFIG_OBSOLETE == 1) && ($CONFIG_ISA == 1 || $CONFIG_ISA == 4)} then {write_tristate $cfg $autocfg CONFIG_ZNET $CONFIG_ZNET [list $CONFIG_ISA] 2 }
	global CONFIG_LAN_SAA9730
	global CONFIG_MIPS
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_PCI == 1) && ($CONFIG_EXPERIMENTAL == 1 && $CONFIG_MIPS == 1)} then {write_tristate $cfg $autocfg CONFIG_LAN_SAA9730 $CONFIG_LAN_SAA9730 [list $notmod] 2 }
	global CONFIG_NET_POCKET
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1)} then {write_tristate $cfg $autocfg CONFIG_NET_POCKET $CONFIG_NET_POCKET [list $notmod] 2 }
	global CONFIG_ATP
	global CONFIG_X86
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_POCKET == 1) && ($CONFIG_ISA == 1 && $CONFIG_X86 == 1)} then {write_tristate $cfg $autocfg CONFIG_ATP $CONFIG_ATP [list $notmod] 2 }
	global CONFIG_DE600
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_POCKET == 1) && ($CONFIG_ISA == 1 || $CONFIG_ISA == 2 || $CONFIG_ISA == 4)} then {write_tristate $cfg $autocfg CONFIG_DE600 $CONFIG_DE600 [list $CONFIG_ISA] 2 }
	global CONFIG_DE620
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_NET_POCKET == 1) && ($CONFIG_ISA == 1 || $CONFIG_ISA == 2 || $CONFIG_ISA == 4)} then {write_tristate $cfg $autocfg CONFIG_DE620 $CONFIG_DE620 [list $CONFIG_ISA] 2 }
	global CONFIG_FEC
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1)} then {write_tristate $cfg $autocfg CONFIG_FEC $CONFIG_FEC [list $notmod] 2 }
	global CONFIG_FEC_IOCTL
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_FEC == 1) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {write_tristate $cfg $autocfg CONFIG_FEC_IOCTL $CONFIG_FEC_IOCTL [list $CONFIG_EXPERIMENTAL] 1 }
	global CONFIG_UC5272_PHY_INT
	global CONFIG_BOARD_UC5272
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_FEC == 1) && ($CONFIG_BOARD_UC5272 == 1 || $CONFIG_BOARD_UC5272 == 2 || $CONFIG_BOARD_UC5272 == 4)} then {write_tristate $cfg $autocfg CONFIG_UC5272_PHY_INT $CONFIG_UC5272_PHY_INT [list $CONFIG_BOARD_UC5272] 1 }
	global CONFIG_FEC_KS8995M
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_FEC == 1)} then {write_tristate $cfg $autocfg CONFIG_FEC_KS8995M $CONFIG_FEC_KS8995M [list $notmod] 2 }
	global tmpvar_17
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_FEC == 1) && ($CONFIG_FEC_KS8995M == 1)} then {
	if { $tmpvar_17 == "MII-P5" } then { write_tristate $cfg $autocfg CONFIG_FEC_KS8995M_P5 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_FEC_KS8995M_P5 0 [list $notmod] 2 }
	if { $tmpvar_17 == "MII-SW" } then { write_tristate $cfg $autocfg CONFIG_FEC_KS8995M_SW 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_FEC_KS8995M_SW 0 [list $notmod] 2 }}
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1)} then {write_tristate $cfg $autocfg CONFIG_CS89x0 $CONFIG_CS89x0 [list $notmod] 2 }
	global CONFIG_UCCS8900
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1)} then {write_tristate $cfg $autocfg CONFIG_UCCS8900 $CONFIG_UCCS8900 [list $notmod] 2 }
	global CONFIG_UCCS89x0_HW_SWAP
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_CS89x0 == 1 || $CONFIG_UCCS8900 == 1)} then {write_tristate $cfg $autocfg CONFIG_UCCS89x0_HW_SWAP $CONFIG_UCCS89x0_HW_SWAP [list $notmod] 2 }
	global CS8900A_HWADDR
	global CONFIG_UCBOOTSTRAP
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_ETHERNET == 1) && ($CONFIG_UCCS8900 == 1 && $CONFIG_UCBOOTSTRAP != 1)} then {write_string $cfg $autocfg CS8900A_HWADDR "$CS8900A_HWADDR" $notmod }
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1)} then {write_comment $cfg $autocfg "Ethernet (1000 Mbit)"}
	global CONFIG_ACENIC
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {write_tristate $cfg $autocfg CONFIG_ACENIC $CONFIG_ACENIC [list $CONFIG_PCI] 2 }
	global CONFIG_ACENIC_OMIT_TIGON_I
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_ACENIC != 0)} then {write_tristate $cfg $autocfg CONFIG_ACENIC_OMIT_TIGON_I $CONFIG_ACENIC_OMIT_TIGON_I [list $notmod] 2 }
	global CONFIG_DL2K
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {write_tristate $cfg $autocfg CONFIG_DL2K $CONFIG_DL2K [list $CONFIG_PCI] 2 }
	global CONFIG_E1000
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {write_tristate $cfg $autocfg CONFIG_E1000 $CONFIG_E1000 [list $CONFIG_PCI] 2 }
	global CONFIG_E1000_NAPI
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_E1000 != 0)} then {write_tristate $cfg $autocfg CONFIG_E1000_NAPI $CONFIG_E1000_NAPI [list $notmod] 2 }
	global CONFIG_MYRI_SBUS
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_SBUS == 1 || $CONFIG_SBUS == 2 || $CONFIG_SBUS == 4)} then {write_tristate $cfg $autocfg CONFIG_MYRI_SBUS $CONFIG_MYRI_SBUS [list $CONFIG_SBUS] 2 }
	global CONFIG_NS83820
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {write_tristate $cfg $autocfg CONFIG_NS83820 $CONFIG_NS83820 [list $CONFIG_PCI] 2 }
	global CONFIG_HAMACHI
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {write_tristate $cfg $autocfg CONFIG_HAMACHI $CONFIG_HAMACHI [list $CONFIG_PCI] 2 }
	global CONFIG_YELLOWFIN
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {write_tristate $cfg $autocfg CONFIG_YELLOWFIN $CONFIG_YELLOWFIN [list $CONFIG_PCI $CONFIG_EXPERIMENTAL] 2 }
	global CONFIG_R8169
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {write_tristate $cfg $autocfg CONFIG_R8169 $CONFIG_R8169 [list $CONFIG_PCI] 2 }
	global CONFIG_SK98LIN
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {write_tristate $cfg $autocfg CONFIG_SK98LIN $CONFIG_SK98LIN [list $CONFIG_PCI] 2 }
	global CONFIG_TIGON3
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {write_tristate $cfg $autocfg CONFIG_TIGON3 $CONFIG_TIGON3 [list $CONFIG_PCI] 2 }
	global CONFIG_FDDI
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1)} then {write_tristate $cfg $autocfg CONFIG_FDDI $CONFIG_FDDI [list $notmod] 2 }
	global CONFIG_DEFXX
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_FDDI == 1) && ($CONFIG_PCI == 1 || $CONFIG_EISA == 1)} then {write_tristate $cfg $autocfg CONFIG_DEFXX $CONFIG_DEFXX [list $notmod] 2 }
	global CONFIG_SKFP
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_FDDI == 1) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {write_tristate $cfg $autocfg CONFIG_SKFP $CONFIG_SKFP [list $CONFIG_PCI] 2 }
	global CONFIG_HIPPI
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_INET == 1)} then {write_tristate $cfg $autocfg CONFIG_HIPPI $CONFIG_HIPPI [list $notmod] 2 }
	global CONFIG_ROADRUNNER
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_INET == 1) && ($CONFIG_HIPPI == 1 && $CONFIG_PCI == 1) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {write_tristate $cfg $autocfg CONFIG_ROADRUNNER $CONFIG_ROADRUNNER [list $CONFIG_PCI] 2 }
	global CONFIG_ROADRUNNER_LARGE_RINGS
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_INET == 1) && ($CONFIG_HIPPI == 1 && $CONFIG_PCI == 1) && ($CONFIG_ROADRUNNER != 0)} then {write_tristate $cfg $autocfg CONFIG_ROADRUNNER_LARGE_RINGS $CONFIG_ROADRUNNER_LARGE_RINGS [list $notmod] 2 }
	global CONFIG_PLIP
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_PARPORT == 1 || $CONFIG_PARPORT == 2 || $CONFIG_PARPORT == 4)} then {write_tristate $cfg $autocfg CONFIG_PLIP $CONFIG_PLIP [list $CONFIG_PARPORT] 2 }
	global CONFIG_PPP
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1)} then {write_tristate $cfg $autocfg CONFIG_PPP $CONFIG_PPP [list $notmod] 2 }
	global CONFIG_PPP_MULTILINK
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_PPP != 0) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 4)} then {write_tristate $cfg $autocfg CONFIG_PPP_MULTILINK $CONFIG_PPP_MULTILINK [list $CONFIG_EXPERIMENTAL] 2 }
	global CONFIG_PPP_FILTER
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_PPP != 0) && ($CONFIG_FILTER == 1 || $CONFIG_FILTER == 4)} then {write_tristate $cfg $autocfg CONFIG_PPP_FILTER $CONFIG_PPP_FILTER [list $CONFIG_FILTER] 2 }
	global CONFIG_PPP_ASYNC
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_PPP != 0) && ($CONFIG_PPP == 1 || $CONFIG_PPP == 2 || $CONFIG_PPP == 4)} then {write_tristate $cfg $autocfg CONFIG_PPP_ASYNC $CONFIG_PPP_ASYNC [list $CONFIG_PPP] 2 }
	global CONFIG_PPP_SYNC_TTY
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_PPP != 0) && ($CONFIG_PPP == 1 || $CONFIG_PPP == 2 || $CONFIG_PPP == 4)} then {write_tristate $cfg $autocfg CONFIG_PPP_SYNC_TTY $CONFIG_PPP_SYNC_TTY [list $CONFIG_PPP] 2 }
	global CONFIG_PPP_DEFLATE
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_PPP != 0) && ($CONFIG_PPP == 1 || $CONFIG_PPP == 2 || $CONFIG_PPP == 4)} then {write_tristate $cfg $autocfg CONFIG_PPP_DEFLATE $CONFIG_PPP_DEFLATE [list $CONFIG_PPP] 2 }
	global CONFIG_PPP_BSDCOMP
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_PPP != 0) && ($CONFIG_PPP == 1 || $CONFIG_PPP == 2 || $CONFIG_PPP == 4)} then {write_tristate $cfg $autocfg CONFIG_PPP_BSDCOMP $CONFIG_PPP_BSDCOMP [list $CONFIG_PPP] 2 }
	global CONFIG_PPPOE
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_PPP != 0) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_PPP == 1 || $CONFIG_PPP == 2 || $CONFIG_PPP == 4)} then {write_tristate $cfg $autocfg CONFIG_PPPOE $CONFIG_PPPOE [list $CONFIG_PPP] 2 }
	global CONFIG_PPPOATM
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_PPP != 0) && ($CONFIG_ATM == 1 || $CONFIG_ATM == 2) && ($CONFIG_PPP == 1 || $CONFIG_PPP == 2 || $CONFIG_PPP == 4) && ($CONFIG_ATM == 1 || $CONFIG_ATM == 2 || $CONFIG_ATM == 4)} then {write_tristate $cfg $autocfg CONFIG_PPPOATM $CONFIG_PPPOATM [list $CONFIG_PPP $CONFIG_ATM] 2 }
	global CONFIG_SLIP
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1)} then {write_tristate $cfg $autocfg CONFIG_SLIP $CONFIG_SLIP [list $notmod] 2 }
	global CONFIG_SLIP_COMPRESSED
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_SLIP != 0)} then {write_tristate $cfg $autocfg CONFIG_SLIP_COMPRESSED $CONFIG_SLIP_COMPRESSED [list $notmod] 2 }
	global CONFIG_SLIP_SMART
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_SLIP != 0)} then {write_tristate $cfg $autocfg CONFIG_SLIP_SMART $CONFIG_SLIP_SMART [list $notmod] 2 }
	global CONFIG_SLIP_MODE_SLIP6
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_SLIP != 0)} then {write_tristate $cfg $autocfg CONFIG_SLIP_MODE_SLIP6 $CONFIG_SLIP_MODE_SLIP6 [list $notmod] 2 }
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1)} then {write_comment $cfg $autocfg "Wireless LAN (non-hamradio)"}
	global CONFIG_NET_RADIO
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1)} then {write_tristate $cfg $autocfg CONFIG_NET_RADIO $CONFIG_NET_RADIO [list $notmod] 2 }
	global CONFIG_STRIP
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_RADIO == 1) && ($CONFIG_INET == 1 || $CONFIG_INET == 2 || $CONFIG_INET == 4)} then {write_tristate $cfg $autocfg CONFIG_STRIP $CONFIG_STRIP [list $CONFIG_INET] 2 }
	global CONFIG_WAVELAN
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_RADIO == 1)} then {write_tristate $cfg $autocfg CONFIG_WAVELAN $CONFIG_WAVELAN [list $notmod] 2 }
	global CONFIG_ARLAN
	global CONFIG_X86_64
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_RADIO == 1) && ($CONFIG_X86_64 != 1)} then {write_tristate $cfg $autocfg CONFIG_ARLAN $CONFIG_ARLAN [list $notmod] 2 }
	global CONFIG_AIRONET4500
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_RADIO == 1)} then {write_tristate $cfg $autocfg CONFIG_AIRONET4500 $CONFIG_AIRONET4500 [list $notmod] 2 }
	global CONFIG_AIRONET4500_NONCS
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_RADIO == 1) && ($CONFIG_AIRONET4500 == 1 || $CONFIG_AIRONET4500 == 2 || $CONFIG_AIRONET4500 == 4)} then {write_tristate $cfg $autocfg CONFIG_AIRONET4500_NONCS $CONFIG_AIRONET4500_NONCS [list $CONFIG_AIRONET4500] 2 }
	global CONFIG_AIRONET4500_PNP
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_RADIO == 1) && ($CONFIG_AIRONET4500 != 0 && $CONFIG_AIRONET4500_NONCS != 0)} then {write_tristate $cfg $autocfg CONFIG_AIRONET4500_PNP $CONFIG_AIRONET4500_PNP [list $notmod] 2 }
	global CONFIG_AIRONET4500_PCI
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_RADIO == 1) && ($CONFIG_AIRONET4500 != 0 && $CONFIG_AIRONET4500_NONCS != 0) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 4)} then {write_tristate $cfg $autocfg CONFIG_AIRONET4500_PCI $CONFIG_AIRONET4500_PCI [list $CONFIG_PCI] 2 }
	global CONFIG_AIRONET4500_ISA
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_RADIO == 1) && ($CONFIG_AIRONET4500 != 0 && $CONFIG_AIRONET4500_NONCS != 0) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 4)} then {write_tristate $cfg $autocfg CONFIG_AIRONET4500_ISA $CONFIG_AIRONET4500_ISA [list $CONFIG_EXPERIMENTAL] 2 }
	global CONFIG_AIRONET4500_I365
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_RADIO == 1) && ($CONFIG_AIRONET4500 != 0 && $CONFIG_AIRONET4500_NONCS != 0) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 4)} then {write_tristate $cfg $autocfg CONFIG_AIRONET4500_I365 $CONFIG_AIRONET4500_I365 [list $CONFIG_EXPERIMENTAL] 2 }
	global CONFIG_AIRONET4500_PROC
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_RADIO == 1) && ($CONFIG_AIRONET4500 == 1 || $CONFIG_AIRONET4500 == 2 || $CONFIG_AIRONET4500 == 4)} then {write_tristate $cfg $autocfg CONFIG_AIRONET4500_PROC $CONFIG_AIRONET4500_PROC [list $CONFIG_AIRONET4500 $CONSTANT_M] 2 }
	global CONFIG_AIRO
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_RADIO == 1) && ($CONFIG_ISA == 1 || $CONFIG_PCI == 1)} then {write_tristate $cfg $autocfg CONFIG_AIRO $CONFIG_AIRO [list $notmod] 2 }
	global CONFIG_HERMES
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_RADIO == 1)} then {write_tristate $cfg $autocfg CONFIG_HERMES $CONFIG_HERMES [list $notmod] 2 }
	global CONFIG_PLX_HERMES
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_RADIO == 1) && ($CONFIG_PCI == 1) && ($CONFIG_HERMES == 1 || $CONFIG_HERMES == 2 || $CONFIG_HERMES == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {write_tristate $cfg $autocfg CONFIG_PLX_HERMES $CONFIG_PLX_HERMES [list $CONFIG_HERMES $CONFIG_EXPERIMENTAL] 2 }
	global CONFIG_TMD_HERMES
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_RADIO == 1) && ($CONFIG_PCI == 1) && ($CONFIG_HERMES == 1 || $CONFIG_HERMES == 2 || $CONFIG_HERMES == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {write_tristate $cfg $autocfg CONFIG_TMD_HERMES $CONFIG_TMD_HERMES [list $CONFIG_HERMES $CONFIG_EXPERIMENTAL] 2 }
	global CONFIG_PCI_HERMES
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_RADIO == 1) && ($CONFIG_PCI == 1) && ($CONFIG_HERMES == 1 || $CONFIG_HERMES == 2 || $CONFIG_HERMES == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {write_tristate $cfg $autocfg CONFIG_PCI_HERMES $CONFIG_PCI_HERMES [list $CONFIG_HERMES $CONFIG_EXPERIMENTAL] 2 }
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_RADIO == 1) && ($CONFIG_PCMCIA != 0)} then {write_comment $cfg $autocfg "Wireless Pcmcia cards support"}
	global CONFIG_PCMCIA_HERMES
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_RADIO == 1) && ($CONFIG_PCMCIA != 0) && ($CONFIG_HERMES == 1 || $CONFIG_HERMES == 2 || $CONFIG_HERMES == 4)} then {write_tristate $cfg $autocfg CONFIG_PCMCIA_HERMES $CONFIG_PCMCIA_HERMES [list $CONFIG_HERMES] 2 }
	global CONFIG_AIRO_CS
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_RADIO == 1) && ($CONFIG_PCMCIA != 0)} then {write_tristate $cfg $autocfg CONFIG_AIRO_CS $CONFIG_AIRO_CS [list $notmod] 2 }
	global CONFIG_NET_WIRELESS
	global CONFIG_ALL_PPC
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_RADIO == 1) && ($CONFIG_ISA == 1 || $CONFIG_PCI == 1 || $CONFIG_ALL_PPC == 1 || $CONFIG_PCMCIA != 0)} then {write_tristate $cfg $autocfg CONFIG_NET_WIRELESS $CONSTANT_Y [list $notmod] 2 }
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_RADIO == 1) && ($CONFIG_ISA != 1 && $CONFIG_PCI != 1 && $CONFIG_ALL_PPC != 1 && $CONFIG_PCMCIA == 0)} then {write_tristate $cfg $autocfg CONFIG_NET_WIRELESS $CONSTANT_N [list $notmod] 2 }
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1)} then {write_comment $cfg $autocfg "Token Ring devices"}
	global CONFIG_TR
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_PCI == 1 || $CONFIG_ISA == 1 || $CONFIG_MCA == 1)} then {write_tristate $cfg $autocfg CONFIG_TR $CONFIG_TR [list $notmod] 2 }
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_PCI != 1 && $CONFIG_ISA != 1 && $CONFIG_MCA != 1)} then {write_tristate $cfg $autocfg CONFIG_TR $CONSTANT_N [list $notmod] 2 }
	global CONFIG_IBMTR
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_TR != 0) && ($CONFIG_ISA == 1 || $CONFIG_MCA == 1)} then {write_tristate $cfg $autocfg CONFIG_IBMTR $CONFIG_IBMTR [list $notmod] 2 }
	global CONFIG_IBMOL
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_TR != 0) && ($CONFIG_TR == 1 || $CONFIG_TR == 2 || $CONFIG_TR == 4) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {write_tristate $cfg $autocfg CONFIG_IBMOL $CONFIG_IBMOL [list $CONFIG_TR $CONFIG_PCI] 2 }
	global CONFIG_IBMLS
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_TR != 0) && ($CONFIG_TR == 1 || $CONFIG_TR == 2 || $CONFIG_TR == 4) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {write_tristate $cfg $autocfg CONFIG_IBMLS $CONFIG_IBMLS [list $CONFIG_TR $CONFIG_PCI] 2 }
	global CONFIG_3C359
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_TR != 0) && ($CONFIG_TR == 1 || $CONFIG_TR == 2 || $CONFIG_TR == 4) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {write_tristate $cfg $autocfg CONFIG_3C359 $CONFIG_3C359 [list $CONFIG_TR $CONFIG_PCI] 2 }
	global CONFIG_TMS380TR
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_TR != 0)} then {write_tristate $cfg $autocfg CONFIG_TMS380TR $CONFIG_TMS380TR [list $notmod] 2 }
	global CONFIG_TMSPCI
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_TR != 0) && ($CONFIG_TMS380TR != 0) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {write_tristate $cfg $autocfg CONFIG_TMSPCI $CONFIG_TMSPCI [list $CONFIG_PCI] 2 }
	global CONFIG_TMSISA
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_TR != 0) && ($CONFIG_TMS380TR != 0) && ($CONFIG_ISA == 1 || $CONFIG_ISA == 2 || $CONFIG_ISA == 4)} then {write_tristate $cfg $autocfg CONFIG_TMSISA $CONFIG_TMSISA [list $CONFIG_ISA] 2 }
	global CONFIG_ABYSS
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_TR != 0) && ($CONFIG_TMS380TR != 0) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {write_tristate $cfg $autocfg CONFIG_ABYSS $CONFIG_ABYSS [list $CONFIG_PCI] 2 }
	global CONFIG_MADGEMC
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_TR != 0) && ($CONFIG_TMS380TR != 0) && ($CONFIG_MCA == 1 || $CONFIG_MCA == 2 || $CONFIG_MCA == 4)} then {write_tristate $cfg $autocfg CONFIG_MADGEMC $CONFIG_MADGEMC [list $CONFIG_MCA] 2 }
	global CONFIG_SMCTR
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_TR != 0) && ($CONFIG_ISA == 1 || $CONFIG_MCA == 1)} then {write_tristate $cfg $autocfg CONFIG_SMCTR $CONFIG_SMCTR [list $notmod] 2 }
	global CONFIG_NET_FC
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1)} then {write_tristate $cfg $autocfg CONFIG_NET_FC $CONFIG_NET_FC [list $notmod] 2 }
	global CONFIG_IPHASE5526
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_NET_FC == 1) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {write_tristate $cfg $autocfg CONFIG_IPHASE5526 $CONFIG_IPHASE5526 [list $CONFIG_SCSI $CONFIG_PCI] 2 }
	global CONFIG_RCPCI
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {write_tristate $cfg $autocfg CONFIG_RCPCI $CONFIG_RCPCI [list $CONFIG_PCI] 2 }
	global CONFIG_SHAPER
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_EXPERIMENTAL == 1)} then {write_tristate $cfg $autocfg CONFIG_SHAPER $CONFIG_SHAPER [list $notmod] 2 }
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1)} then {write_comment $cfg $autocfg "Wan interfaces"}
	global CONFIG_WAN
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1)} then {write_tristate $cfg $autocfg CONFIG_WAN $CONFIG_WAN [list $notmod] 2 }
	global CONFIG_HOSTESS_SV11
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1) && ($CONFIG_ISA == 1)} then {write_tristate $cfg $autocfg CONFIG_HOSTESS_SV11 $CONFIG_HOSTESS_SV11 [list $CONSTANT_M] 2 }
	global CONFIG_COSA
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1) && ($CONFIG_ISA == 1)} then {write_tristate $cfg $autocfg CONFIG_COSA $CONFIG_COSA [list $CONSTANT_M] 2 }
	global CONFIG_COMX
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1)} then {write_tristate $cfg $autocfg CONFIG_COMX $CONFIG_COMX [list $notmod] 2 }
	global CONFIG_COMX_HW_COMX
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1) && ($CONFIG_COMX != 0) && ($CONFIG_COMX == 1 || $CONFIG_COMX == 2 || $CONFIG_COMX == 4)} then {write_tristate $cfg $autocfg CONFIG_COMX_HW_COMX $CONFIG_COMX_HW_COMX [list $CONFIG_COMX] 2 }
	global CONFIG_COMX_HW_LOCOMX
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1) && ($CONFIG_COMX != 0) && ($CONFIG_COMX == 1 || $CONFIG_COMX == 2 || $CONFIG_COMX == 4)} then {write_tristate $cfg $autocfg CONFIG_COMX_HW_LOCOMX $CONFIG_COMX_HW_LOCOMX [list $CONFIG_COMX] 2 }
	global CONFIG_COMX_HW_MIXCOM
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1) && ($CONFIG_COMX != 0) && ($CONFIG_COMX == 1 || $CONFIG_COMX == 2 || $CONFIG_COMX == 4)} then {write_tristate $cfg $autocfg CONFIG_COMX_HW_MIXCOM $CONFIG_COMX_HW_MIXCOM [list $CONFIG_COMX] 2 }
	global CONFIG_COMX_HW_MUNICH
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1) && ($CONFIG_COMX != 0) && ($CONFIG_COMX == 1 || $CONFIG_COMX == 2 || $CONFIG_COMX == 4)} then {write_tristate $cfg $autocfg CONFIG_COMX_HW_MUNICH $CONFIG_COMX_HW_MUNICH [list $CONFIG_COMX] 2 }
	global CONFIG_COMX_PROTO_PPP
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1) && ($CONFIG_COMX != 0) && ($CONFIG_COMX == 1 || $CONFIG_COMX == 2 || $CONFIG_COMX == 4)} then {write_tristate $cfg $autocfg CONFIG_COMX_PROTO_PPP $CONFIG_COMX_PROTO_PPP [list $CONFIG_COMX] 2 }
	global CONFIG_COMX_PROTO_LAPB
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1) && ($CONFIG_COMX != 0) && ($CONFIG_LAPB == 1) && ($CONFIG_COMX == 1 || $CONFIG_COMX == 2 || $CONFIG_COMX == 4)} then {write_tristate $cfg $autocfg CONFIG_COMX_PROTO_LAPB $CONFIG_COMX_PROTO_LAPB [list $CONFIG_COMX] 2 }
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1) && ($CONFIG_COMX != 0) && ($CONFIG_LAPB == 2) && ($CONFIG_LAPB == 1 || $CONFIG_LAPB == 2 || $CONFIG_LAPB == 4)} then {write_tristate $cfg $autocfg CONFIG_COMX_PROTO_LAPB $CONFIG_COMX_PROTO_LAPB [list $CONFIG_LAPB] 2 }
	global CONFIG_COMX_PROTO_FR
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1) && ($CONFIG_COMX != 0) && ($CONFIG_COMX == 1 || $CONFIG_COMX == 2 || $CONFIG_COMX == 4)} then {write_tristate $cfg $autocfg CONFIG_COMX_PROTO_FR $CONFIG_COMX_PROTO_FR [list $CONFIG_COMX] 2 }
	global CONFIG_DSCC4
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1)} then {write_tristate $cfg $autocfg CONFIG_DSCC4 $CONFIG_DSCC4 [list $CONSTANT_M] 2 }
	global CONFIG_DSCC4_PCISYNC
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1) && ($CONFIG_DSCC4 == 2)} then {write_tristate $cfg $autocfg CONFIG_DSCC4_PCISYNC $CONFIG_DSCC4_PCISYNC [list $notmod] 2 }
	global CONFIG_DSCC4_PCI_RST
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1) && ($CONFIG_DSCC4 == 2)} then {write_tristate $cfg $autocfg CONFIG_DSCC4_PCI_RST $CONFIG_DSCC4_PCI_RST [list $notmod] 2 }
	global CONFIG_LANMEDIA
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1)} then {write_tristate $cfg $autocfg CONFIG_LANMEDIA $CONFIG_LANMEDIA [list $notmod] 2 }
	global CONFIG_ATI_XX20
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1)} then {write_tristate $cfg $autocfg CONFIG_ATI_XX20 $CONFIG_ATI_XX20 [list $notmod] 2 }
	global CONFIG_SEALEVEL_4021
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1)} then {write_tristate $cfg $autocfg CONFIG_SEALEVEL_4021 $CONFIG_SEALEVEL_4021 [list $CONSTANT_M] 2 }
	global CONFIG_SYNCLINK_SYNCPPP
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1)} then {write_tristate $cfg $autocfg CONFIG_SYNCLINK_SYNCPPP $CONFIG_SYNCLINK_SYNCPPP [list $notmod] 2 }
	global CONFIG_HDLC
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1)} then {write_tristate $cfg $autocfg CONFIG_HDLC $CONFIG_HDLC [list $notmod] 2 }
	global CONFIG_HDLC_RAW
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1) && ($CONFIG_HDLC != 0)} then {write_tristate $cfg $autocfg CONFIG_HDLC_RAW $CONFIG_HDLC_RAW [list $notmod] 2 }
	global CONFIG_HDLC_RAW_ETH
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1) && ($CONFIG_HDLC != 0)} then {write_tristate $cfg $autocfg CONFIG_HDLC_RAW_ETH $CONFIG_HDLC_RAW_ETH [list $notmod] 2 }
	global CONFIG_HDLC_CISCO
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1) && ($CONFIG_HDLC != 0)} then {write_tristate $cfg $autocfg CONFIG_HDLC_CISCO $CONFIG_HDLC_CISCO [list $notmod] 2 }
	global CONFIG_HDLC_FR
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1) && ($CONFIG_HDLC != 0)} then {write_tristate $cfg $autocfg CONFIG_HDLC_FR $CONFIG_HDLC_FR [list $notmod] 2 }
	global CONFIG_HDLC_PPP
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1) && ($CONFIG_HDLC != 0)} then {write_tristate $cfg $autocfg CONFIG_HDLC_PPP $CONFIG_HDLC_PPP [list $notmod] 2 }
	global CONFIG_HDLC_X25
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1) && ($CONFIG_HDLC != 0) && ($CONFIG_LAPB == 2 && $CONFIG_HDLC == 2 || $CONFIG_LAPB == 1)} then {write_tristate $cfg $autocfg CONFIG_HDLC_X25 $CONFIG_HDLC_X25 [list $notmod] 2 }
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1) && ($CONFIG_HDLC != 0) && ($CONFIG_LAPB != 2 || $CONFIG_HDLC != 2 && $CONFIG_LAPB != 1)} then {write_comment $cfg $autocfg "    X.25/LAPB support is disabled"}
	global CONFIG_N2
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1) && ($CONFIG_HDLC != 0) && ($CONFIG_HDLC == 1 || $CONFIG_HDLC == 2 || $CONFIG_HDLC == 4)} then {write_tristate $cfg $autocfg CONFIG_N2 $CONFIG_N2 [list $CONFIG_HDLC] 2 }
	global CONFIG_C101
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1) && ($CONFIG_HDLC != 0) && ($CONFIG_HDLC == 1 || $CONFIG_HDLC == 2 || $CONFIG_HDLC == 4)} then {write_tristate $cfg $autocfg CONFIG_C101 $CONFIG_C101 [list $CONFIG_HDLC] 2 }
	global CONFIG_CHINOOK
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1) && ($CONFIG_HDLC != 0) && ($CONFIG_HDLC == 1 || $CONFIG_HDLC == 2 || $CONFIG_HDLC == 4)} then {write_tristate $cfg $autocfg CONFIG_CHINOOK $CONFIG_CHINOOK [list $CONFIG_HDLC] 2 }
	global CONFIG_FARSYNC
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1) && ($CONFIG_HDLC != 0) && ($CONFIG_HDLC == 1 || $CONFIG_HDLC == 2 || $CONFIG_HDLC == 4)} then {write_tristate $cfg $autocfg CONFIG_FARSYNC $CONFIG_FARSYNC [list $CONFIG_HDLC] 2 }
	global CONFIG_HDLC_DEBUG_PKT
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1) && ($CONFIG_HDLC != 0)} then {write_tristate $cfg $autocfg CONFIG_HDLC_DEBUG_PKT $CONFIG_HDLC_DEBUG_PKT [list $notmod] 2 }
	global CONFIG_HDLC_DEBUG_HARD_HEADER
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1) && ($CONFIG_HDLC != 0)} then {write_tristate $cfg $autocfg CONFIG_HDLC_DEBUG_HARD_HEADER $CONFIG_HDLC_DEBUG_HARD_HEADER [list $notmod] 2 }
	global CONFIG_HDLC_DEBUG_ECN
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1) && ($CONFIG_HDLC != 0)} then {write_tristate $cfg $autocfg CONFIG_HDLC_DEBUG_ECN $CONFIG_HDLC_DEBUG_ECN [list $notmod] 2 }
	global CONFIG_HDLC_DEBUG_RINGS
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1) && ($CONFIG_HDLC != 0)} then {write_tristate $cfg $autocfg CONFIG_HDLC_DEBUG_RINGS $CONFIG_HDLC_DEBUG_RINGS [list $notmod] 2 }
	global CONFIG_DLCI
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1)} then {write_tristate $cfg $autocfg CONFIG_DLCI $CONFIG_DLCI [list $notmod] 2 }
	global CONFIG_DLCI_COUNT
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1) && ($CONFIG_DLCI != 0)} then {write_int $cfg $autocfg CONFIG_DLCI_COUNT $CONFIG_DLCI_COUNT $notmod }
	global CONFIG_DLCI_MAX
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1) && ($CONFIG_DLCI != 0)} then {write_int $cfg $autocfg CONFIG_DLCI_MAX $CONFIG_DLCI_MAX $notmod }
	global CONFIG_SDLA
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1) && ($CONFIG_DLCI != 0) && ($CONFIG_DLCI == 1 || $CONFIG_DLCI == 2 || $CONFIG_DLCI == 4)} then {write_tristate $cfg $autocfg CONFIG_SDLA $CONFIG_SDLA [list $CONFIG_DLCI] 2 }
	global CONFIG_WAN_ROUTER_DRIVERS
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1) && ($CONFIG_WAN_ROUTER != 0)} then {write_tristate $cfg $autocfg CONFIG_WAN_ROUTER_DRIVERS $CONFIG_WAN_ROUTER_DRIVERS [list $notmod] 2 }
	global CONFIG_VENDOR_SANGOMA
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1) && ($CONFIG_WAN_ROUTER != 0) && ($CONFIG_WAN_ROUTER_DRIVERS == 1) && ($CONFIG_WAN_ROUTER == 1 || $CONFIG_WAN_ROUTER == 2 || $CONFIG_WAN_ROUTER == 4)} then {write_tristate $cfg $autocfg CONFIG_VENDOR_SANGOMA $CONFIG_VENDOR_SANGOMA [list $CONFIG_WAN_ROUTER] 2 }
	global CONFIG_WANPIPE_CHDLC
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1) && ($CONFIG_WAN_ROUTER != 0) && ($CONFIG_WAN_ROUTER_DRIVERS == 1) && ($CONFIG_VENDOR_SANGOMA != 0)} then {write_tristate $cfg $autocfg CONFIG_WANPIPE_CHDLC $CONFIG_WANPIPE_CHDLC [list $notmod] 2 }
	global CONFIG_WANPIPE_FR
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1) && ($CONFIG_WAN_ROUTER != 0) && ($CONFIG_WAN_ROUTER_DRIVERS == 1) && ($CONFIG_VENDOR_SANGOMA != 0)} then {write_tristate $cfg $autocfg CONFIG_WANPIPE_FR $CONFIG_WANPIPE_FR [list $notmod] 2 }
	global CONFIG_WANPIPE_X25
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1) && ($CONFIG_WAN_ROUTER != 0) && ($CONFIG_WAN_ROUTER_DRIVERS == 1) && ($CONFIG_VENDOR_SANGOMA != 0)} then {write_tristate $cfg $autocfg CONFIG_WANPIPE_X25 $CONFIG_WANPIPE_X25 [list $notmod] 2 }
	global CONFIG_WANPIPE_PPP
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1) && ($CONFIG_WAN_ROUTER != 0) && ($CONFIG_WAN_ROUTER_DRIVERS == 1) && ($CONFIG_VENDOR_SANGOMA != 0)} then {write_tristate $cfg $autocfg CONFIG_WANPIPE_PPP $CONFIG_WANPIPE_PPP [list $notmod] 2 }
	global CONFIG_WANPIPE_MULTPPP
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1) && ($CONFIG_WAN_ROUTER != 0) && ($CONFIG_WAN_ROUTER_DRIVERS == 1) && ($CONFIG_VENDOR_SANGOMA != 0)} then {write_tristate $cfg $autocfg CONFIG_WANPIPE_MULTPPP $CONFIG_WANPIPE_MULTPPP [list $notmod] 2 }
	global CONFIG_CYCLADES_SYNC
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1) && ($CONFIG_WAN_ROUTER != 0) && ($CONFIG_WAN_ROUTER_DRIVERS == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_WAN_ROUTER_DRIVERS == 1 || $CONFIG_WAN_ROUTER_DRIVERS == 2 || $CONFIG_WAN_ROUTER_DRIVERS == 4) && ($CONFIG_ISA == 1 || $CONFIG_ISA == 2 || $CONFIG_ISA == 4)} then {write_tristate $cfg $autocfg CONFIG_CYCLADES_SYNC $CONFIG_CYCLADES_SYNC [list $CONFIG_WAN_ROUTER_DRIVERS $CONFIG_ISA] 2 }
	global CONFIG_CYCLOMX_X25
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1) && ($CONFIG_WAN_ROUTER != 0) && ($CONFIG_WAN_ROUTER_DRIVERS == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_CYCLADES_SYNC != 0)} then {write_tristate $cfg $autocfg CONFIG_CYCLOMX_X25 $CONFIG_CYCLOMX_X25 [list $notmod] 2 }
	global CONFIG_LAPBETHER
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_LAPB == 1 || $CONFIG_LAPB == 2 || $CONFIG_LAPB == 4) && ($CONFIG_X25 == 1 || $CONFIG_X25 == 2 || $CONFIG_X25 == 4)} then {write_tristate $cfg $autocfg CONFIG_LAPBETHER $CONFIG_LAPBETHER [list $CONFIG_LAPB $CONFIG_X25] 2 }
	global CONFIG_X25_ASY
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_WAN == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_LAPB == 1 || $CONFIG_LAPB == 2 || $CONFIG_LAPB == 4) && ($CONFIG_X25 == 1 || $CONFIG_X25 == 2 || $CONFIG_X25 == 4)} then {write_tristate $cfg $autocfg CONFIG_X25_ASY $CONFIG_X25_ASY [list $CONFIG_LAPB $CONFIG_X25] 2 }
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_HOTPLUG == 1 && $CONFIG_PCMCIA != 0)} then {write_comment $cfg $autocfg "PCMCIA network device support"}
	global CONFIG_NET_PCMCIA
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_HOTPLUG == 1 && $CONFIG_PCMCIA != 0)} then {write_tristate $cfg $autocfg CONFIG_NET_PCMCIA $CONFIG_NET_PCMCIA [list $notmod] 2 }
	global CONFIG_PCMCIA_3C589
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_HOTPLUG == 1 && $CONFIG_PCMCIA != 0) && ($CONFIG_NET_PCMCIA == 1) && ($CONFIG_PCMCIA == 1 || $CONFIG_PCMCIA == 2 || $CONFIG_PCMCIA == 4)} then {write_tristate $cfg $autocfg CONFIG_PCMCIA_3C589 $CONFIG_PCMCIA_3C589 [list $CONFIG_PCMCIA] 2 }
	global CONFIG_PCMCIA_3C574
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_HOTPLUG == 1 && $CONFIG_PCMCIA != 0) && ($CONFIG_NET_PCMCIA == 1) && ($CONFIG_PCMCIA == 1 || $CONFIG_PCMCIA == 2 || $CONFIG_PCMCIA == 4)} then {write_tristate $cfg $autocfg CONFIG_PCMCIA_3C574 $CONFIG_PCMCIA_3C574 [list $CONFIG_PCMCIA] 2 }
	global CONFIG_PCMCIA_FMVJ18X
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_HOTPLUG == 1 && $CONFIG_PCMCIA != 0) && ($CONFIG_NET_PCMCIA == 1) && ($CONFIG_PCMCIA == 1 || $CONFIG_PCMCIA == 2 || $CONFIG_PCMCIA == 4)} then {write_tristate $cfg $autocfg CONFIG_PCMCIA_FMVJ18X $CONFIG_PCMCIA_FMVJ18X [list $CONFIG_PCMCIA] 2 }
	global CONFIG_PCMCIA_PCNET
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_HOTPLUG == 1 && $CONFIG_PCMCIA != 0) && ($CONFIG_NET_PCMCIA == 1) && ($CONFIG_PCMCIA == 1 || $CONFIG_PCMCIA == 2 || $CONFIG_PCMCIA == 4)} then {write_tristate $cfg $autocfg CONFIG_PCMCIA_PCNET $CONFIG_PCMCIA_PCNET [list $CONFIG_PCMCIA] 2 }
	global CONFIG_PCMCIA_AXNET
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_HOTPLUG == 1 && $CONFIG_PCMCIA != 0) && ($CONFIG_NET_PCMCIA == 1) && ($CONFIG_PCMCIA == 1 || $CONFIG_PCMCIA == 2 || $CONFIG_PCMCIA == 4)} then {write_tristate $cfg $autocfg CONFIG_PCMCIA_AXNET $CONFIG_PCMCIA_AXNET [list $CONFIG_PCMCIA] 2 }
	global CONFIG_PCMCIA_NMCLAN
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_HOTPLUG == 1 && $CONFIG_PCMCIA != 0) && ($CONFIG_NET_PCMCIA == 1) && ($CONFIG_PCMCIA == 1 || $CONFIG_PCMCIA == 2 || $CONFIG_PCMCIA == 4)} then {write_tristate $cfg $autocfg CONFIG_PCMCIA_NMCLAN $CONFIG_PCMCIA_NMCLAN [list $CONFIG_PCMCIA] 2 }
	global CONFIG_PCMCIA_SMC91C92
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_HOTPLUG == 1 && $CONFIG_PCMCIA != 0) && ($CONFIG_NET_PCMCIA == 1) && ($CONFIG_PCMCIA == 1 || $CONFIG_PCMCIA == 2 || $CONFIG_PCMCIA == 4)} then {write_tristate $cfg $autocfg CONFIG_PCMCIA_SMC91C92 $CONFIG_PCMCIA_SMC91C92 [list $CONFIG_PCMCIA] 2 }
	global CONFIG_PCMCIA_XIRC2PS
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_HOTPLUG == 1 && $CONFIG_PCMCIA != 0) && ($CONFIG_NET_PCMCIA == 1) && ($CONFIG_PCMCIA == 1 || $CONFIG_PCMCIA == 2 || $CONFIG_PCMCIA == 4)} then {write_tristate $cfg $autocfg CONFIG_PCMCIA_XIRC2PS $CONFIG_PCMCIA_XIRC2PS [list $CONFIG_PCMCIA] 2 }
	global CONFIG_ARCNET_COM20020_CS
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_HOTPLUG == 1 && $CONFIG_PCMCIA != 0) && ($CONFIG_NET_PCMCIA == 1) && ($CONFIG_ARCNET_COM20020 == 1 || $CONFIG_ARCNET_COM20020 == 2 || $CONFIG_ARCNET_COM20020 == 4) && ($CONFIG_ARCNET == 1 || $CONFIG_ARCNET == 2 || $CONFIG_ARCNET == 4) && ($CONFIG_PCMCIA == 1 || $CONFIG_PCMCIA == 2 || $CONFIG_PCMCIA == 4)} then {write_tristate $cfg $autocfg CONFIG_ARCNET_COM20020_CS $CONFIG_ARCNET_COM20020_CS [list $CONFIG_ARCNET_COM20020 $CONFIG_ARCNET $CONFIG_PCMCIA] 2 }
	global CONFIG_PCMCIA_IBMTR
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_HOTPLUG == 1 && $CONFIG_PCMCIA != 0) && ($CONFIG_NET_PCMCIA == 1) && ($CONFIG_IBMTR != 1) && ($CONFIG_TR == 1 || $CONFIG_TR == 2 || $CONFIG_TR == 4) && ($CONFIG_PCMCIA == 1 || $CONFIG_PCMCIA == 2 || $CONFIG_PCMCIA == 4)} then {write_tristate $cfg $autocfg CONFIG_PCMCIA_IBMTR $CONFIG_PCMCIA_IBMTR [list $CONFIG_TR $CONFIG_PCMCIA] 2 }
	global CONFIG_PCMCIA_XIRCOM
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_HOTPLUG == 1 && $CONFIG_PCMCIA != 0) && ($CONFIG_NET_PCMCIA == 1) && ($CONFIG_CARDBUS == 1)} then {write_tristate $cfg $autocfg CONFIG_PCMCIA_XIRCOM $CONFIG_PCMCIA_XIRCOM [list $notmod] 2 }
	global CONFIG_PCMCIA_XIRTULIP
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_HOTPLUG == 1 && $CONFIG_PCMCIA != 0) && ($CONFIG_NET_PCMCIA == 1) && ($CONFIG_CARDBUS == 1)} then {write_tristate $cfg $autocfg CONFIG_PCMCIA_XIRTULIP $CONFIG_PCMCIA_XIRTULIP [list $notmod] 2 }
	global CONFIG_NET_PCMCIA_RADIO
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_HOTPLUG == 1 && $CONFIG_PCMCIA != 0) && ($CONFIG_NET_PCMCIA == 1)} then {write_tristate $cfg $autocfg CONFIG_NET_PCMCIA_RADIO $CONFIG_NET_PCMCIA_RADIO [list $notmod] 2 }
	global CONFIG_PCMCIA_RAYCS
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_HOTPLUG == 1 && $CONFIG_PCMCIA != 0) && ($CONFIG_NET_PCMCIA == 1) && ($CONFIG_NET_PCMCIA_RADIO == 1) && ($CONFIG_PCMCIA == 1 || $CONFIG_PCMCIA == 2 || $CONFIG_PCMCIA == 4)} then {write_tristate $cfg $autocfg CONFIG_PCMCIA_RAYCS $CONFIG_PCMCIA_RAYCS [list $CONFIG_PCMCIA] 2 }
	global CONFIG_PCMCIA_NETWAVE
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_HOTPLUG == 1 && $CONFIG_PCMCIA != 0) && ($CONFIG_NET_PCMCIA == 1) && ($CONFIG_NET_PCMCIA_RADIO == 1) && ($CONFIG_PCMCIA == 1 || $CONFIG_PCMCIA == 2 || $CONFIG_PCMCIA == 4)} then {write_tristate $cfg $autocfg CONFIG_PCMCIA_NETWAVE $CONFIG_PCMCIA_NETWAVE [list $CONFIG_PCMCIA] 2 }
	global CONFIG_PCMCIA_WAVELAN
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_HOTPLUG == 1 && $CONFIG_PCMCIA != 0) && ($CONFIG_NET_PCMCIA == 1) && ($CONFIG_NET_PCMCIA_RADIO == 1) && ($CONFIG_PCMCIA == 1 || $CONFIG_PCMCIA == 2 || $CONFIG_PCMCIA == 4)} then {write_tristate $cfg $autocfg CONFIG_PCMCIA_WAVELAN $CONFIG_PCMCIA_WAVELAN [list $CONFIG_PCMCIA] 2 }
	global CONFIG_AIRONET4500_CS
	if {($CONFIG_NET == 1) && ($CONFIG_NETDEVICES == 1) && ($CONFIG_HOTPLUG == 1 && $CONFIG_PCMCIA != 0) && ($CONFIG_NET_PCMCIA == 1) && ($CONFIG_NET_PCMCIA_RADIO == 1) && ($CONFIG_AIRONET4500 == 1 || $CONFIG_AIRONET4500 == 2 || $CONFIG_AIRONET4500 == 4) && ($CONFIG_PCMCIA == 1 || $CONFIG_PCMCIA == 2 || $CONFIG_PCMCIA == 4)} then {write_tristate $cfg $autocfg CONFIG_AIRONET4500_CS $CONFIG_AIRONET4500_CS [list $CONFIG_AIRONET4500 $CONFIG_PCMCIA] 2 }
	if {($CONFIG_NET == 1)} then {write_comment $cfg $autocfg "Amateur Radio support"}
	global CONFIG_HAMRADIO
	if {($CONFIG_NET == 1)} then {write_tristate $cfg $autocfg CONFIG_HAMRADIO $CONFIG_HAMRADIO [list $notmod] 2 }
	if {($CONFIG_NET == 1) && ($CONFIG_HAMRADIO != 0) && ($CONFIG_NET != 0)} then {write_comment $cfg $autocfg "Packet Radio protocols"}
	global CONFIG_AX25
	if {($CONFIG_NET == 1) && ($CONFIG_HAMRADIO != 0) && ($CONFIG_NET != 0)} then {write_tristate $cfg $autocfg CONFIG_AX25 $CONFIG_AX25 [list $notmod] 2 }
	global CONFIG_AX25_DAMA_SLAVE
	if {($CONFIG_NET == 1) && ($CONFIG_HAMRADIO != 0) && ($CONFIG_NET != 0) && ($CONFIG_AX25 != 0)} then {write_tristate $cfg $autocfg CONFIG_AX25_DAMA_SLAVE $CONFIG_AX25_DAMA_SLAVE [list $notmod] 2 }
	global CONFIG_NETROM
	if {($CONFIG_NET == 1) && ($CONFIG_HAMRADIO != 0) && ($CONFIG_NET != 0) && ($CONFIG_AX25 != 0) && ($CONFIG_AX25 == 1 || $CONFIG_AX25 == 2 || $CONFIG_AX25 == 4)} then {write_tristate $cfg $autocfg CONFIG_NETROM $CONFIG_NETROM [list $CONFIG_AX25] 2 }
	global CONFIG_ROSE
	if {($CONFIG_NET == 1) && ($CONFIG_HAMRADIO != 0) && ($CONFIG_NET != 0) && ($CONFIG_AX25 != 0) && ($CONFIG_AX25 == 1 || $CONFIG_AX25 == 2 || $CONFIG_AX25 == 4)} then {write_tristate $cfg $autocfg CONFIG_ROSE $CONFIG_ROSE [list $CONFIG_AX25] 2 }
	if {($CONFIG_NET == 1) && ($CONFIG_HAMRADIO != 0) && ($CONFIG_NET != 0) && ($CONFIG_AX25 != 0)} then {write_comment $cfg $autocfg "AX.25 network device drivers"}
	if {($CONFIG_NET == 1) && ($CONFIG_HAMRADIO != 0) && ($CONFIG_NET != 0) && ($CONFIG_AX25 != 0)} then {write_comment $cfg $autocfg "AX.25 network device drivers"}
	global CONFIG_MKISS
	if {($CONFIG_NET == 1) && ($CONFIG_HAMRADIO != 0) && ($CONFIG_NET != 0) && ($CONFIG_AX25 != 0) && ($CONFIG_AX25 == 1 || $CONFIG_AX25 == 2 || $CONFIG_AX25 == 4)} then {write_tristate $cfg $autocfg CONFIG_MKISS $CONFIG_MKISS [list $CONFIG_AX25] 2 }
	global CONFIG_6PACK
	if {($CONFIG_NET == 1) && ($CONFIG_HAMRADIO != 0) && ($CONFIG_NET != 0) && ($CONFIG_AX25 != 0) && ($CONFIG_AX25 == 1 || $CONFIG_AX25 == 2 || $CONFIG_AX25 == 4)} then {write_tristate $cfg $autocfg CONFIG_6PACK $CONFIG_6PACK [list $CONFIG_AX25] 2 }
	global CONFIG_BPQETHER
	if {($CONFIG_NET == 1) && ($CONFIG_HAMRADIO != 0) && ($CONFIG_NET != 0) && ($CONFIG_AX25 != 0) && ($CONFIG_AX25 == 1 || $CONFIG_AX25 == 2 || $CONFIG_AX25 == 4)} then {write_tristate $cfg $autocfg CONFIG_BPQETHER $CONFIG_BPQETHER [list $CONFIG_AX25] 2 }
	global CONFIG_DMASCC
	if {($CONFIG_NET == 1) && ($CONFIG_HAMRADIO != 0) && ($CONFIG_NET != 0) && ($CONFIG_AX25 != 0) && ($CONFIG_ISA == 1) && ($CONFIG_AX25 == 1 || $CONFIG_AX25 == 2 || $CONFIG_AX25 == 4)} then {write_tristate $cfg $autocfg CONFIG_DMASCC $CONFIG_DMASCC [list $CONFIG_AX25] 2 }
	global CONFIG_SCC
	if {($CONFIG_NET == 1) && ($CONFIG_HAMRADIO != 0) && ($CONFIG_NET != 0) && ($CONFIG_AX25 != 0) && ($CONFIG_ISA == 1) && ($CONFIG_AX25 == 1 || $CONFIG_AX25 == 2 || $CONFIG_AX25 == 4)} then {write_tristate $cfg $autocfg CONFIG_SCC $CONFIG_SCC [list $CONFIG_AX25] 2 }
	global CONFIG_SCC_DELAY
	if {($CONFIG_NET == 1) && ($CONFIG_HAMRADIO != 0) && ($CONFIG_NET != 0) && ($CONFIG_AX25 != 0) && ($CONFIG_SCC != 0)} then {write_tristate $cfg $autocfg CONFIG_SCC_DELAY $CONFIG_SCC_DELAY [list $notmod] 2 }
	global CONFIG_SCC_TRXECHO
	if {($CONFIG_NET == 1) && ($CONFIG_HAMRADIO != 0) && ($CONFIG_NET != 0) && ($CONFIG_AX25 != 0) && ($CONFIG_SCC != 0)} then {write_tristate $cfg $autocfg CONFIG_SCC_TRXECHO $CONFIG_SCC_TRXECHO [list $notmod] 2 }
	global CONFIG_BAYCOM_SER_FDX
	if {($CONFIG_NET == 1) && ($CONFIG_HAMRADIO != 0) && ($CONFIG_NET != 0) && ($CONFIG_AX25 != 0) && ($CONFIG_AX25 == 1 || $CONFIG_AX25 == 2 || $CONFIG_AX25 == 4)} then {write_tristate $cfg $autocfg CONFIG_BAYCOM_SER_FDX $CONFIG_BAYCOM_SER_FDX [list $CONFIG_AX25] 2 }
	global CONFIG_BAYCOM_SER_HDX
	if {($CONFIG_NET == 1) && ($CONFIG_HAMRADIO != 0) && ($CONFIG_NET != 0) && ($CONFIG_AX25 != 0) && ($CONFIG_AX25 == 1 || $CONFIG_AX25 == 2 || $CONFIG_AX25 == 4)} then {write_tristate $cfg $autocfg CONFIG_BAYCOM_SER_HDX $CONFIG_BAYCOM_SER_HDX [list $CONFIG_AX25] 2 }
	global CONFIG_BAYCOM_PAR
	if {($CONFIG_NET == 1) && ($CONFIG_HAMRADIO != 0) && ($CONFIG_NET != 0) && ($CONFIG_AX25 != 0) && ($CONFIG_PARPORT == 1 || $CONFIG_PARPORT == 2 || $CONFIG_PARPORT == 4) && ($CONFIG_AX25 == 1 || $CONFIG_AX25 == 2 || $CONFIG_AX25 == 4)} then {write_tristate $cfg $autocfg CONFIG_BAYCOM_PAR $CONFIG_BAYCOM_PAR [list $CONFIG_PARPORT $CONFIG_AX25] 2 }
	global CONFIG_BAYCOM_EPP
	if {($CONFIG_NET == 1) && ($CONFIG_HAMRADIO != 0) && ($CONFIG_NET != 0) && ($CONFIG_AX25 != 0) && ($CONFIG_PARPORT == 1 || $CONFIG_PARPORT == 2 || $CONFIG_PARPORT == 4) && ($CONFIG_AX25 == 1 || $CONFIG_AX25 == 2 || $CONFIG_AX25 == 4)} then {write_tristate $cfg $autocfg CONFIG_BAYCOM_EPP $CONFIG_BAYCOM_EPP [list $CONFIG_PARPORT $CONFIG_AX25] 2 }
	global CONFIG_SOUNDMODEM
	if {($CONFIG_NET == 1) && ($CONFIG_HAMRADIO != 0) && ($CONFIG_NET != 0) && ($CONFIG_AX25 != 0) && ($CONFIG_PARPORT == 1 || $CONFIG_PARPORT == 2 || $CONFIG_PARPORT == 4) && ($CONFIG_AX25 == 1 || $CONFIG_AX25 == 2 || $CONFIG_AX25 == 4)} then {write_tristate $cfg $autocfg CONFIG_SOUNDMODEM $CONFIG_SOUNDMODEM [list $CONFIG_PARPORT $CONFIG_AX25] 2 }
	global CONFIG_SOUNDMODEM_SBC
	if {($CONFIG_NET == 1) && ($CONFIG_HAMRADIO != 0) && ($CONFIG_NET != 0) && ($CONFIG_AX25 != 0) && ($CONFIG_SOUNDMODEM != 0)} then {write_tristate $cfg $autocfg CONFIG_SOUNDMODEM_SBC $CONFIG_SOUNDMODEM_SBC [list $notmod] 2 }
	global CONFIG_SOUNDMODEM_WSS
	if {($CONFIG_NET == 1) && ($CONFIG_HAMRADIO != 0) && ($CONFIG_NET != 0) && ($CONFIG_AX25 != 0) && ($CONFIG_SOUNDMODEM != 0)} then {write_tristate $cfg $autocfg CONFIG_SOUNDMODEM_WSS $CONFIG_SOUNDMODEM_WSS [list $notmod] 2 }
	global CONFIG_SOUNDMODEM_AFSK1200
	if {($CONFIG_NET == 1) && ($CONFIG_HAMRADIO != 0) && ($CONFIG_NET != 0) && ($CONFIG_AX25 != 0) && ($CONFIG_SOUNDMODEM != 0)} then {write_tristate $cfg $autocfg CONFIG_SOUNDMODEM_AFSK1200 $CONFIG_SOUNDMODEM_AFSK1200 [list $notmod] 2 }
	global CONFIG_SOUNDMODEM_AFSK2400_7
	if {($CONFIG_NET == 1) && ($CONFIG_HAMRADIO != 0) && ($CONFIG_NET != 0) && ($CONFIG_AX25 != 0) && ($CONFIG_SOUNDMODEM != 0)} then {write_tristate $cfg $autocfg CONFIG_SOUNDMODEM_AFSK2400_7 $CONFIG_SOUNDMODEM_AFSK2400_7 [list $notmod] 2 }
	global CONFIG_SOUNDMODEM_AFSK2400_8
	if {($CONFIG_NET == 1) && ($CONFIG_HAMRADIO != 0) && ($CONFIG_NET != 0) && ($CONFIG_AX25 != 0) && ($CONFIG_SOUNDMODEM != 0)} then {write_tristate $cfg $autocfg CONFIG_SOUNDMODEM_AFSK2400_8 $CONFIG_SOUNDMODEM_AFSK2400_8 [list $notmod] 2 }
	global CONFIG_SOUNDMODEM_AFSK2666
	if {($CONFIG_NET == 1) && ($CONFIG_HAMRADIO != 0) && ($CONFIG_NET != 0) && ($CONFIG_AX25 != 0) && ($CONFIG_SOUNDMODEM != 0)} then {write_tristate $cfg $autocfg CONFIG_SOUNDMODEM_AFSK2666 $CONFIG_SOUNDMODEM_AFSK2666 [list $notmod] 2 }
	global CONFIG_SOUNDMODEM_HAPN4800
	if {($CONFIG_NET == 1) && ($CONFIG_HAMRADIO != 0) && ($CONFIG_NET != 0) && ($CONFIG_AX25 != 0) && ($CONFIG_SOUNDMODEM != 0)} then {write_tristate $cfg $autocfg CONFIG_SOUNDMODEM_HAPN4800 $CONFIG_SOUNDMODEM_HAPN4800 [list $notmod] 2 }
	global CONFIG_SOUNDMODEM_PSK4800
	if {($CONFIG_NET == 1) && ($CONFIG_HAMRADIO != 0) && ($CONFIG_NET != 0) && ($CONFIG_AX25 != 0) && ($CONFIG_SOUNDMODEM != 0)} then {write_tristate $cfg $autocfg CONFIG_SOUNDMODEM_PSK4800 $CONFIG_SOUNDMODEM_PSK4800 [list $notmod] 2 }
	global CONFIG_SOUNDMODEM_FSK9600
	if {($CONFIG_NET == 1) && ($CONFIG_HAMRADIO != 0) && ($CONFIG_NET != 0) && ($CONFIG_AX25 != 0) && ($CONFIG_SOUNDMODEM != 0)} then {write_tristate $cfg $autocfg CONFIG_SOUNDMODEM_FSK9600 $CONFIG_SOUNDMODEM_FSK9600 [list $notmod] 2 }
	global CONFIG_YAM
	if {($CONFIG_NET == 1) && ($CONFIG_HAMRADIO != 0) && ($CONFIG_NET != 0) && ($CONFIG_AX25 != 0) && ($CONFIG_AX25 == 1 || $CONFIG_AX25 == 2 || $CONFIG_AX25 == 4)} then {write_tristate $cfg $autocfg CONFIG_YAM $CONFIG_YAM [list $CONFIG_AX25] 2 }
	if {($CONFIG_NET == 1) && ($CONFIG_NET != 0)} then {write_comment $cfg $autocfg "IrDA (infrared) support"}
	global CONFIG_IRDA
	if {($CONFIG_NET == 1) && ($CONFIG_NET != 0) && ($CONFIG_NET == 1 || $CONFIG_NET == 2 || $CONFIG_NET == 4)} then {write_tristate $cfg $autocfg CONFIG_IRDA $CONFIG_IRDA [list $CONFIG_NET] 2 }
	if {($CONFIG_NET == 1) && ($CONFIG_NET != 0) && ($CONFIG_IRDA != 0)} then {write_comment $cfg $autocfg "IrDA protocols"}
	global CONFIG_IRLAN
	if {($CONFIG_NET == 1) && ($CONFIG_NET != 0) && ($CONFIG_IRDA != 0) && ($CONFIG_IRDA == 1 || $CONFIG_IRDA == 2 || $CONFIG_IRDA == 4)} then {write_tristate $cfg $autocfg CONFIG_IRLAN $CONFIG_IRLAN [list $CONFIG_IRDA] 2 }
	global CONFIG_IRNET
	if {($CONFIG_NET == 1) && ($CONFIG_NET != 0) && ($CONFIG_IRDA != 0) && ($CONFIG_NETDEVICES != 0) && ($CONFIG_IRDA == 1 || $CONFIG_IRDA == 2 || $CONFIG_IRDA == 4) && ($CONFIG_PPP == 1 || $CONFIG_PPP == 2 || $CONFIG_PPP == 4)} then {write_tristate $cfg $autocfg CONFIG_IRNET $CONFIG_IRNET [list $CONFIG_IRDA $CONFIG_PPP] 2 }
	global CONFIG_IRCOMM
	if {($CONFIG_NET == 1) && ($CONFIG_NET != 0) && ($CONFIG_IRDA != 0) && ($CONFIG_IRDA == 1 || $CONFIG_IRDA == 2 || $CONFIG_IRDA == 4)} then {write_tristate $cfg $autocfg CONFIG_IRCOMM $CONFIG_IRCOMM [list $CONFIG_IRDA] 2 }
	global CONFIG_IRDA_ULTRA
	if {($CONFIG_NET == 1) && ($CONFIG_NET != 0) && ($CONFIG_IRDA != 0)} then {write_tristate $cfg $autocfg CONFIG_IRDA_ULTRA $CONFIG_IRDA_ULTRA [list $notmod] 2 }
	if {($CONFIG_NET == 1) && ($CONFIG_NET != 0) && ($CONFIG_IRDA != 0)} then {write_comment $cfg $autocfg "IrDA options"}
	global CONFIG_IRDA_CACHE_LAST_LSAP
	if {($CONFIG_NET == 1) && ($CONFIG_NET != 0) && ($CONFIG_IRDA != 0)} then {write_tristate $cfg $autocfg CONFIG_IRDA_CACHE_LAST_LSAP $CONFIG_IRDA_CACHE_LAST_LSAP [list $notmod] 2 }
	global CONFIG_IRDA_FAST_RR
	if {($CONFIG_NET == 1) && ($CONFIG_NET != 0) && ($CONFIG_IRDA != 0)} then {write_tristate $cfg $autocfg CONFIG_IRDA_FAST_RR $CONFIG_IRDA_FAST_RR [list $notmod] 2 }
	global CONFIG_IRDA_DEBUG
	if {($CONFIG_NET == 1) && ($CONFIG_NET != 0) && ($CONFIG_IRDA != 0)} then {write_tristate $cfg $autocfg CONFIG_IRDA_DEBUG $CONFIG_IRDA_DEBUG [list $notmod] 2 }
	if {($CONFIG_NET == 1) && ($CONFIG_NET != 0) && ($CONFIG_IRDA != 0)} then {write_comment $cfg $autocfg "Infrared-port device drivers"}
	if {($CONFIG_NET == 1) && ($CONFIG_NET != 0) && ($CONFIG_IRDA != 0)} then {write_comment $cfg $autocfg "SIR device drivers"}
	global CONFIG_IRTTY_SIR
	if {($CONFIG_NET == 1) && ($CONFIG_NET != 0) && ($CONFIG_IRDA != 0) && ($CONFIG_IRDA == 1 || $CONFIG_IRDA == 2 || $CONFIG_IRDA == 4)} then {write_tristate $cfg $autocfg CONFIG_IRTTY_SIR $CONFIG_IRTTY_SIR [list $CONFIG_IRDA] 2 }
	global CONFIG_IRPORT_SIR
	if {($CONFIG_NET == 1) && ($CONFIG_NET != 0) && ($CONFIG_IRDA != 0) && ($CONFIG_IRDA == 1 || $CONFIG_IRDA == 2 || $CONFIG_IRDA == 4)} then {write_tristate $cfg $autocfg CONFIG_IRPORT_SIR $CONFIG_IRPORT_SIR [list $CONFIG_IRDA] 2 }
	if {($CONFIG_NET == 1) && ($CONFIG_NET != 0) && ($CONFIG_IRDA != 0)} then {write_comment $cfg $autocfg "Dongle support"}
	global CONFIG_DONGLE
	if {($CONFIG_NET == 1) && ($CONFIG_NET != 0) && ($CONFIG_IRDA != 0)} then {write_tristate $cfg $autocfg CONFIG_DONGLE $CONFIG_DONGLE [list $notmod] 2 }
	global CONFIG_ESI_DONGLE
	if {($CONFIG_NET == 1) && ($CONFIG_NET != 0) && ($CONFIG_IRDA != 0) && ($CONFIG_DONGLE != 0) && ($CONFIG_IRDA == 1 || $CONFIG_IRDA == 2 || $CONFIG_IRDA == 4)} then {write_tristate $cfg $autocfg CONFIG_ESI_DONGLE $CONFIG_ESI_DONGLE [list $CONFIG_IRDA] 2 }
	global CONFIG_ACTISYS_DONGLE
	if {($CONFIG_NET == 1) && ($CONFIG_NET != 0) && ($CONFIG_IRDA != 0) && ($CONFIG_DONGLE != 0) && ($CONFIG_IRDA == 1 || $CONFIG_IRDA == 2 || $CONFIG_IRDA == 4)} then {write_tristate $cfg $autocfg CONFIG_ACTISYS_DONGLE $CONFIG_ACTISYS_DONGLE [list $CONFIG_IRDA] 2 }
	global CONFIG_TEKRAM_DONGLE
	if {($CONFIG_NET == 1) && ($CONFIG_NET != 0) && ($CONFIG_IRDA != 0) && ($CONFIG_DONGLE != 0) && ($CONFIG_IRDA == 1 || $CONFIG_IRDA == 2 || $CONFIG_IRDA == 4)} then {write_tristate $cfg $autocfg CONFIG_TEKRAM_DONGLE $CONFIG_TEKRAM_DONGLE [list $CONFIG_IRDA] 2 }
	global CONFIG_GIRBIL_DONGLE
	if {($CONFIG_NET == 1) && ($CONFIG_NET != 0) && ($CONFIG_IRDA != 0) && ($CONFIG_DONGLE != 0) && ($CONFIG_IRDA == 1 || $CONFIG_IRDA == 2 || $CONFIG_IRDA == 4)} then {write_tristate $cfg $autocfg CONFIG_GIRBIL_DONGLE $CONFIG_GIRBIL_DONGLE [list $CONFIG_IRDA] 2 }
	global CONFIG_LITELINK_DONGLE
	if {($CONFIG_NET == 1) && ($CONFIG_NET != 0) && ($CONFIG_IRDA != 0) && ($CONFIG_DONGLE != 0) && ($CONFIG_IRDA == 1 || $CONFIG_IRDA == 2 || $CONFIG_IRDA == 4)} then {write_tristate $cfg $autocfg CONFIG_LITELINK_DONGLE $CONFIG_LITELINK_DONGLE [list $CONFIG_IRDA] 2 }
	global CONFIG_MCP2120_DONGLE
	if {($CONFIG_NET == 1) && ($CONFIG_NET != 0) && ($CONFIG_IRDA != 0) && ($CONFIG_DONGLE != 0) && ($CONFIG_IRDA == 1 || $CONFIG_IRDA == 2 || $CONFIG_IRDA == 4)} then {write_tristate $cfg $autocfg CONFIG_MCP2120_DONGLE $CONFIG_MCP2120_DONGLE [list $CONFIG_IRDA] 2 }
	global CONFIG_OLD_BELKIN_DONGLE
	if {($CONFIG_NET == 1) && ($CONFIG_NET != 0) && ($CONFIG_IRDA != 0) && ($CONFIG_DONGLE != 0) && ($CONFIG_IRDA == 1 || $CONFIG_IRDA == 2 || $CONFIG_IRDA == 4)} then {write_tristate $cfg $autocfg CONFIG_OLD_BELKIN_DONGLE $CONFIG_OLD_BELKIN_DONGLE [list $CONFIG_IRDA] 2 }
	global CONFIG_EP7211_IR
	if {($CONFIG_NET == 1) && ($CONFIG_NET != 0) && ($CONFIG_IRDA != 0) && ($CONFIG_DONGLE != 0) && ($CONFIG_ARCH_EP7211 == 1) && ($CONFIG_IRDA == 1 || $CONFIG_IRDA == 2 || $CONFIG_IRDA == 4)} then {write_tristate $cfg $autocfg CONFIG_EP7211_IR $CONFIG_EP7211_IR [list $CONFIG_IRDA] 2 }
	global CONFIG_ACT200L_DONGLE
	if {($CONFIG_NET == 1) && ($CONFIG_NET != 0) && ($CONFIG_IRDA != 0) && ($CONFIG_DONGLE != 0) && ($CONFIG_EXPERIMENTAL != 0) && ($CONFIG_IRDA == 1 || $CONFIG_IRDA == 2 || $CONFIG_IRDA == 4)} then {write_tristate $cfg $autocfg CONFIG_ACT200L_DONGLE $CONFIG_ACT200L_DONGLE [list $CONFIG_IRDA] 2 }
	global CONFIG_MA600_DONGLE
	if {($CONFIG_NET == 1) && ($CONFIG_NET != 0) && ($CONFIG_IRDA != 0) && ($CONFIG_DONGLE != 0) && ($CONFIG_EXPERIMENTAL != 0) && ($CONFIG_IRDA == 1 || $CONFIG_IRDA == 2 || $CONFIG_IRDA == 4)} then {write_tristate $cfg $autocfg CONFIG_MA600_DONGLE $CONFIG_MA600_DONGLE [list $CONFIG_IRDA] 2 }
	if {($CONFIG_NET == 1) && ($CONFIG_NET != 0) && ($CONFIG_IRDA != 0)} then {write_comment $cfg $autocfg "FIR device drivers"}
	global CONFIG_USB_IRDA
	global CONFIG_USB
	if {($CONFIG_NET == 1) && ($CONFIG_NET != 0) && ($CONFIG_IRDA != 0) && ($CONFIG_IRDA == 1 || $CONFIG_IRDA == 2 || $CONFIG_IRDA == 4) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {write_tristate $cfg $autocfg CONFIG_USB_IRDA $CONFIG_USB_IRDA [list $CONFIG_IRDA $CONFIG_USB $CONFIG_EXPERIMENTAL] 2 }
	global CONFIG_NSC_FIR
	if {($CONFIG_NET == 1) && ($CONFIG_NET != 0) && ($CONFIG_IRDA != 0) && ($CONFIG_IRDA == 1 || $CONFIG_IRDA == 2 || $CONFIG_IRDA == 4)} then {write_tristate $cfg $autocfg CONFIG_NSC_FIR $CONFIG_NSC_FIR [list $CONFIG_IRDA] 2 }
	global CONFIG_WINBOND_FIR
	if {($CONFIG_NET == 1) && ($CONFIG_NET != 0) && ($CONFIG_IRDA != 0) && ($CONFIG_IRDA == 1 || $CONFIG_IRDA == 2 || $CONFIG_IRDA == 4)} then {write_tristate $cfg $autocfg CONFIG_WINBOND_FIR $CONFIG_WINBOND_FIR [list $CONFIG_IRDA] 2 }
	global CONFIG_TOSHIBA_OLD
	if {($CONFIG_NET == 1) && ($CONFIG_NET != 0) && ($CONFIG_IRDA != 0) && ($CONFIG_IRDA == 1 || $CONFIG_IRDA == 2 || $CONFIG_IRDA == 4)} then {write_tristate $cfg $autocfg CONFIG_TOSHIBA_OLD $CONFIG_TOSHIBA_OLD [list $CONFIG_IRDA] 2 }
	global CONFIG_TOSHIBA_FIR
	if {($CONFIG_NET == 1) && ($CONFIG_NET != 0) && ($CONFIG_IRDA != 0) && ($CONFIG_IRDA == 1 || $CONFIG_IRDA == 2 || $CONFIG_IRDA == 4)} then {write_tristate $cfg $autocfg CONFIG_TOSHIBA_FIR $CONFIG_TOSHIBA_FIR [list $CONFIG_IRDA] 2 }
	global CONFIG_SMC_IRCC_FIR
	if {($CONFIG_NET == 1) && ($CONFIG_NET != 0) && ($CONFIG_IRDA != 0) && ($CONFIG_EXPERIMENTAL != 0) && ($CONFIG_IRDA == 1 || $CONFIG_IRDA == 2 || $CONFIG_IRDA == 4)} then {write_tristate $cfg $autocfg CONFIG_SMC_IRCC_FIR $CONFIG_SMC_IRCC_FIR [list $CONFIG_IRDA] 2 }
	global CONFIG_SA1100_FIR
	if {($CONFIG_NET == 1) && ($CONFIG_NET != 0) && ($CONFIG_IRDA != 0) && ($CONFIG_EXPERIMENTAL != 0) && ($CONFIG_ARCH_SA1100 == 1) && ($CONFIG_IRDA == 1 || $CONFIG_IRDA == 2 || $CONFIG_IRDA == 4)} then {write_tristate $cfg $autocfg CONFIG_SA1100_FIR $CONFIG_SA1100_FIR [list $CONFIG_IRDA] 2 }
	global CONFIG_ALI_FIR
	if {($CONFIG_NET == 1) && ($CONFIG_NET != 0) && ($CONFIG_IRDA != 0) && ($CONFIG_EXPERIMENTAL != 0) && ($CONFIG_IRDA == 1 || $CONFIG_IRDA == 2 || $CONFIG_IRDA == 4)} then {write_tristate $cfg $autocfg CONFIG_ALI_FIR $CONFIG_ALI_FIR [list $CONFIG_IRDA] 2 }
	global CONFIG_VLSI_FIR
	if {($CONFIG_NET == 1) && ($CONFIG_NET != 0) && ($CONFIG_IRDA != 0) && ($CONFIG_EXPERIMENTAL != 0) && ($CONFIG_IRDA == 1 || $CONFIG_IRDA == 2 || $CONFIG_IRDA == 4)} then {write_tristate $cfg $autocfg CONFIG_VLSI_FIR $CONFIG_VLSI_FIR [list $CONFIG_IRDA] 2 }
	if {($CONFIG_NET == 1) && ($CONFIG_NET != 0) && ($CONFIG_IRDA != 0) && ($CONFIG_ARCH_SA1100 == 1) && ($CONFIG_IRDA == 1 || $CONFIG_IRDA == 2 || $CONFIG_IRDA == 4)} then {write_tristate $cfg $autocfg CONFIG_SA1100_FIR $CONFIG_SA1100_FIR [list $CONFIG_IRDA] 2 }
	write_comment $cfg $autocfg "ATA/ATAPI/MFM/RLL support"
	global CONFIG_IDE
	write_tristate $cfg $autocfg CONFIG_IDE $CONFIG_IDE [list $notmod] 2
	if {($CONFIG_IDE != 0)} then {write_comment $cfg $autocfg "IDE, ATA and ATAPI Block devices"}
	global CONFIG_BLK_DEV_IDE
	if {($CONFIG_IDE != 0) && ($CONFIG_IDE == 1 || $CONFIG_IDE == 2 || $CONFIG_IDE == 4)} then {write_tristate $cfg $autocfg CONFIG_BLK_DEV_IDE $CONFIG_BLK_DEV_IDE [list $CONFIG_IDE] 2 }
	if {($CONFIG_IDE != 0)} then {write_comment $cfg $autocfg "Please see Documentation/ide.txt for help/info on IDE drives"}
	global CONFIG_BLK_DEV_HD_IDE
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_X86 == 1 || $CONFIG_X86 == 4)} then {write_tristate $cfg $autocfg CONFIG_BLK_DEV_HD_IDE $CONFIG_BLK_DEV_HD_IDE [list $CONFIG_X86] 2 }
	global CONFIG_BLK_DEV_HD
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0)} then {write_tristate $cfg $autocfg CONFIG_BLK_DEV_HD $CONFIG_BLK_DEV_HD_IDE [list $notmod] 2 }
	global CONFIG_BLK_DEV_IDEDISK
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_BLK_DEV_IDE == 1 || $CONFIG_BLK_DEV_IDE == 2 || $CONFIG_BLK_DEV_IDE == 4)} then {write_tristate $cfg $autocfg CONFIG_BLK_DEV_IDEDISK $CONFIG_BLK_DEV_IDEDISK [list $CONFIG_BLK_DEV_IDE] 2 }
	global CONFIG_IDEDISK_MULTI_MODE
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_BLK_DEV_IDEDISK == 1 || $CONFIG_BLK_DEV_IDEDISK == 2 || $CONFIG_BLK_DEV_IDEDISK == 4)} then {write_tristate $cfg $autocfg CONFIG_IDEDISK_MULTI_MODE $CONFIG_IDEDISK_MULTI_MODE [list $CONFIG_BLK_DEV_IDEDISK] 1 }
	global CONFIG_IDEDISK_STROKE
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_BLK_DEV_IDEDISK == 1 || $CONFIG_BLK_DEV_IDEDISK == 2 || $CONFIG_BLK_DEV_IDEDISK == 4)} then {write_tristate $cfg $autocfg CONFIG_IDEDISK_STROKE $CONFIG_IDEDISK_STROKE [list $CONFIG_BLK_DEV_IDEDISK] 1 }
	global CONFIG_BLK_DEV_IDECS
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_BLK_DEV_IDE == 1 || $CONFIG_BLK_DEV_IDE == 2 || $CONFIG_BLK_DEV_IDE == 4) && ($CONFIG_PCMCIA == 1 || $CONFIG_PCMCIA == 2 || $CONFIG_PCMCIA == 4)} then {write_tristate $cfg $autocfg CONFIG_BLK_DEV_IDECS $CONFIG_BLK_DEV_IDECS [list $CONFIG_BLK_DEV_IDE $CONFIG_PCMCIA] 2 }
	global CONFIG_BLK_DEV_IDECD
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_BLK_DEV_IDE == 1 || $CONFIG_BLK_DEV_IDE == 2 || $CONFIG_BLK_DEV_IDE == 4)} then {write_tristate $cfg $autocfg CONFIG_BLK_DEV_IDECD $CONFIG_BLK_DEV_IDECD [list $CONFIG_BLK_DEV_IDE] 2 }
	global CONFIG_BLK_DEV_IDETAPE
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_BLK_DEV_IDE == 1 || $CONFIG_BLK_DEV_IDE == 2 || $CONFIG_BLK_DEV_IDE == 4)} then {write_tristate $cfg $autocfg CONFIG_BLK_DEV_IDETAPE $CONFIG_BLK_DEV_IDETAPE [list $CONFIG_BLK_DEV_IDE] 2 }
	global CONFIG_BLK_DEV_IDEFLOPPY
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_BLK_DEV_IDE == 1 || $CONFIG_BLK_DEV_IDE == 2 || $CONFIG_BLK_DEV_IDE == 4)} then {write_tristate $cfg $autocfg CONFIG_BLK_DEV_IDEFLOPPY $CONFIG_BLK_DEV_IDEFLOPPY [list $CONFIG_BLK_DEV_IDE] 2 }
	global CONFIG_BLK_DEV_IDESCSI
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_BLK_DEV_IDE == 1 || $CONFIG_BLK_DEV_IDE == 2 || $CONFIG_BLK_DEV_IDE == 4) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {write_tristate $cfg $autocfg CONFIG_BLK_DEV_IDESCSI $CONFIG_BLK_DEV_IDESCSI [list $CONFIG_BLK_DEV_IDE $CONFIG_SCSI] 2 }
	global CONFIG_IDE_TASK_IOCTL
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0)} then {write_tristate $cfg $autocfg CONFIG_IDE_TASK_IOCTL $CONFIG_IDE_TASK_IOCTL [list $notmod] 2 }
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0)} then {write_comment $cfg $autocfg "IDE chipset support/bugfixes"}
	global CONFIG_BLK_DEV_CMD640
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_X86 == 1 || $CONFIG_X86 == 4)} then {write_tristate $cfg $autocfg CONFIG_BLK_DEV_CMD640 $CONFIG_BLK_DEV_CMD640 [list $CONFIG_X86] 2 }
	global CONFIG_BLK_DEV_CMD640_ENHANCED
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_BLK_DEV_CMD640 == 1 || $CONFIG_BLK_DEV_CMD640 == 4)} then {write_tristate $cfg $autocfg CONFIG_BLK_DEV_CMD640_ENHANCED $CONFIG_BLK_DEV_CMD640_ENHANCED [list $CONFIG_BLK_DEV_CMD640] 2 }
	global CONFIG_BLK_DEV_ISAPNP
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_ISAPNP == 1 || $CONFIG_ISAPNP == 4)} then {write_tristate $cfg $autocfg CONFIG_BLK_DEV_ISAPNP $CONFIG_BLK_DEV_ISAPNP [list $CONFIG_ISAPNP] 2 }
	global CONFIG_BLK_DEV_IDEPCI
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_PCI == 1)} then {write_tristate $cfg $autocfg CONFIG_BLK_DEV_IDEPCI $CONFIG_BLK_DEV_IDEPCI [list $notmod] 2 }
	global CONFIG_BLK_DEV_GENERIC
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_PCI == 1) && ($CONFIG_BLK_DEV_IDEPCI == 1) && ($CONFIG_BLK_DEV_IDEPCI == 1 || $CONFIG_BLK_DEV_IDEPCI == 4)} then {write_tristate $cfg $autocfg CONFIG_BLK_DEV_GENERIC $CONFIG_BLK_DEV_GENERIC [list $CONFIG_BLK_DEV_IDEPCI] 2 }
	global CONFIG_IDEPCI_SHARE_IRQ
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_PCI == 1) && ($CONFIG_BLK_DEV_IDEPCI == 1)} then {write_tristate $cfg $autocfg CONFIG_IDEPCI_SHARE_IRQ $CONFIG_IDEPCI_SHARE_IRQ [list $notmod] 2 }
	global CONFIG_BLK_DEV_IDEDMA_PCI
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_PCI == 1) && ($CONFIG_BLK_DEV_IDEPCI == 1)} then {write_tristate $cfg $autocfg CONFIG_BLK_DEV_IDEDMA_PCI $CONFIG_BLK_DEV_IDEDMA_PCI [list $notmod] 2 }
	global CONFIG_BLK_DEV_OFFBOARD
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_PCI == 1) && ($CONFIG_BLK_DEV_IDEPCI == 1)} then {write_tristate $cfg $autocfg CONFIG_BLK_DEV_OFFBOARD $CONFIG_BLK_DEV_OFFBOARD [list $notmod] 2 }
	global CONFIG_BLK_DEV_IDEDMA_FORCED
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_PCI == 1) && ($CONFIG_BLK_DEV_IDEPCI == 1) && ($CONFIG_BLK_DEV_IDEDMA_PCI == 1 || $CONFIG_BLK_DEV_IDEDMA_PCI == 4)} then {write_tristate $cfg $autocfg CONFIG_BLK_DEV_IDEDMA_FORCED $CONFIG_BLK_DEV_IDEDMA_FORCED [list $CONFIG_BLK_DEV_IDEDMA_PCI] 2 }
	global CONFIG_IDEDMA_PCI_AUTO
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_PCI == 1) && ($CONFIG_BLK_DEV_IDEPCI == 1) && ($CONFIG_BLK_DEV_IDEDMA_PCI == 1 || $CONFIG_BLK_DEV_IDEDMA_PCI == 4)} then {write_tristate $cfg $autocfg CONFIG_IDEDMA_PCI_AUTO $CONFIG_IDEDMA_PCI_AUTO [list $CONFIG_BLK_DEV_IDEDMA_PCI] 2 }
	global CONFIG_IDEDMA_ONLYDISK
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_PCI == 1) && ($CONFIG_BLK_DEV_IDEPCI == 1) && ($CONFIG_IDEDMA_PCI_AUTO == 1 || $CONFIG_IDEDMA_PCI_AUTO == 4)} then {write_tristate $cfg $autocfg CONFIG_IDEDMA_ONLYDISK $CONFIG_IDEDMA_ONLYDISK [list $CONFIG_IDEDMA_PCI_AUTO] 2 }
	global CONFIG_BLK_DEV_IDEDMA
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_PCI == 1) && ($CONFIG_BLK_DEV_IDEPCI == 1)} then {write_tristate $cfg $autocfg CONFIG_BLK_DEV_IDEDMA $CONFIG_BLK_DEV_IDEDMA_PCI [list $notmod] 2 }
	global CONFIG_IDEDMA_PCI_WIP
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_PCI == 1) && ($CONFIG_BLK_DEV_IDEPCI == 1) && ($CONFIG_BLK_DEV_IDEDMA_PCI == 1 || $CONFIG_BLK_DEV_IDEDMA_PCI == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 4)} then {write_tristate $cfg $autocfg CONFIG_IDEDMA_PCI_WIP $CONFIG_IDEDMA_PCI_WIP [list $CONFIG_BLK_DEV_IDEDMA_PCI $CONFIG_EXPERIMENTAL] 2 }
	global CONFIG_BLK_DEV_ADMA100
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_PCI == 1) && ($CONFIG_BLK_DEV_IDEPCI == 1) && ($CONFIG_BLK_DEV_IDEDMA_PCI == 1 || $CONFIG_BLK_DEV_IDEDMA_PCI == 2 || $CONFIG_BLK_DEV_IDEDMA_PCI == 4)} then {write_tristate $cfg $autocfg CONFIG_BLK_DEV_ADMA100 $CONFIG_BLK_DEV_ADMA100 [list $CONFIG_BLK_DEV_IDEDMA_PCI] 2 }
	global CONFIG_BLK_DEV_AEC62XX
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_PCI == 1) && ($CONFIG_BLK_DEV_IDEPCI == 1) && ($CONFIG_BLK_DEV_IDEDMA_PCI == 1 || $CONFIG_BLK_DEV_IDEDMA_PCI == 2 || $CONFIG_BLK_DEV_IDEDMA_PCI == 4)} then {write_tristate $cfg $autocfg CONFIG_BLK_DEV_AEC62XX $CONFIG_BLK_DEV_AEC62XX [list $CONFIG_BLK_DEV_IDEDMA_PCI] 2 }
	global CONFIG_BLK_DEV_ALI15X3
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_PCI == 1) && ($CONFIG_BLK_DEV_IDEPCI == 1) && ($CONFIG_BLK_DEV_IDEDMA_PCI == 1 || $CONFIG_BLK_DEV_IDEDMA_PCI == 2 || $CONFIG_BLK_DEV_IDEDMA_PCI == 4)} then {write_tristate $cfg $autocfg CONFIG_BLK_DEV_ALI15X3 $CONFIG_BLK_DEV_ALI15X3 [list $CONFIG_BLK_DEV_IDEDMA_PCI] 2 }
	global CONFIG_WDC_ALI15X3
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_PCI == 1) && ($CONFIG_BLK_DEV_IDEPCI == 1) && ($CONFIG_BLK_DEV_ALI15X3 == 1 || $CONFIG_BLK_DEV_ALI15X3 == 2 || $CONFIG_BLK_DEV_ALI15X3 == 4)} then {write_tristate $cfg $autocfg CONFIG_WDC_ALI15X3 $CONFIG_WDC_ALI15X3 [list $CONFIG_BLK_DEV_ALI15X3] 1 }
	global CONFIG_BLK_DEV_AMD74XX
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_PCI == 1) && ($CONFIG_BLK_DEV_IDEPCI == 1) && ($CONFIG_BLK_DEV_IDEDMA_PCI == 1 || $CONFIG_BLK_DEV_IDEDMA_PCI == 2 || $CONFIG_BLK_DEV_IDEDMA_PCI == 4)} then {write_tristate $cfg $autocfg CONFIG_BLK_DEV_AMD74XX $CONFIG_BLK_DEV_AMD74XX [list $CONFIG_BLK_DEV_IDEDMA_PCI] 2 }
	global CONFIG_AMD74XX_OVERRIDE
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_PCI == 1) && ($CONFIG_BLK_DEV_IDEPCI == 1) && ($CONFIG_BLK_DEV_AMD74XX == 1 || $CONFIG_BLK_DEV_AMD74XX == 2 || $CONFIG_BLK_DEV_AMD74XX == 4)} then {write_tristate $cfg $autocfg CONFIG_AMD74XX_OVERRIDE $CONFIG_AMD74XX_OVERRIDE [list $CONFIG_BLK_DEV_AMD74XX] 1 }
	global CONFIG_BLK_DEV_CMD64X
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_PCI == 1) && ($CONFIG_BLK_DEV_IDEPCI == 1) && ($CONFIG_BLK_DEV_IDEDMA_PCI == 1 || $CONFIG_BLK_DEV_IDEDMA_PCI == 2 || $CONFIG_BLK_DEV_IDEDMA_PCI == 4)} then {write_tristate $cfg $autocfg CONFIG_BLK_DEV_CMD64X $CONFIG_BLK_DEV_CMD64X [list $CONFIG_BLK_DEV_IDEDMA_PCI] 2 }
	global CONFIG_BLK_DEV_TRIFLEX
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_PCI == 1) && ($CONFIG_BLK_DEV_IDEPCI == 1) && ($CONFIG_BLK_DEV_IDEDMA_PCI == 1 || $CONFIG_BLK_DEV_IDEDMA_PCI == 2 || $CONFIG_BLK_DEV_IDEDMA_PCI == 4)} then {write_tristate $cfg $autocfg CONFIG_BLK_DEV_TRIFLEX $CONFIG_BLK_DEV_TRIFLEX [list $CONFIG_BLK_DEV_IDEDMA_PCI] 2 }
	global CONFIG_BLK_DEV_CY82C693
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_PCI == 1) && ($CONFIG_BLK_DEV_IDEPCI == 1) && ($CONFIG_BLK_DEV_IDEDMA_PCI == 1 || $CONFIG_BLK_DEV_IDEDMA_PCI == 2 || $CONFIG_BLK_DEV_IDEDMA_PCI == 4)} then {write_tristate $cfg $autocfg CONFIG_BLK_DEV_CY82C693 $CONFIG_BLK_DEV_CY82C693 [list $CONFIG_BLK_DEV_IDEDMA_PCI] 2 }
	global CONFIG_BLK_DEV_CS5530
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_PCI == 1) && ($CONFIG_BLK_DEV_IDEPCI == 1) && ($CONFIG_BLK_DEV_IDEDMA_PCI == 1 || $CONFIG_BLK_DEV_IDEDMA_PCI == 2 || $CONFIG_BLK_DEV_IDEDMA_PCI == 4)} then {write_tristate $cfg $autocfg CONFIG_BLK_DEV_CS5530 $CONFIG_BLK_DEV_CS5530 [list $CONFIG_BLK_DEV_IDEDMA_PCI] 2 }
	global CONFIG_BLK_DEV_HPT34X
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_PCI == 1) && ($CONFIG_BLK_DEV_IDEPCI == 1) && ($CONFIG_BLK_DEV_IDEDMA_PCI == 1 || $CONFIG_BLK_DEV_IDEDMA_PCI == 2 || $CONFIG_BLK_DEV_IDEDMA_PCI == 4)} then {write_tristate $cfg $autocfg CONFIG_BLK_DEV_HPT34X $CONFIG_BLK_DEV_HPT34X [list $CONFIG_BLK_DEV_IDEDMA_PCI] 2 }
	global CONFIG_HPT34X_AUTODMA
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_PCI == 1) && ($CONFIG_BLK_DEV_IDEPCI == 1) && ($CONFIG_BLK_DEV_HPT34X == 1 || $CONFIG_BLK_DEV_HPT34X == 2 || $CONFIG_BLK_DEV_HPT34X == 4) && ($CONFIG_IDEDMA_PCI_WIP == 1 || $CONFIG_IDEDMA_PCI_WIP == 2 || $CONFIG_IDEDMA_PCI_WIP == 4)} then {write_tristate $cfg $autocfg CONFIG_HPT34X_AUTODMA $CONFIG_HPT34X_AUTODMA [list $CONFIG_BLK_DEV_HPT34X $CONFIG_IDEDMA_PCI_WIP] 1 }
	global CONFIG_BLK_DEV_HPT366
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_PCI == 1) && ($CONFIG_BLK_DEV_IDEPCI == 1) && ($CONFIG_BLK_DEV_IDEDMA_PCI == 1 || $CONFIG_BLK_DEV_IDEDMA_PCI == 2 || $CONFIG_BLK_DEV_IDEDMA_PCI == 4)} then {write_tristate $cfg $autocfg CONFIG_BLK_DEV_HPT366 $CONFIG_BLK_DEV_HPT366 [list $CONFIG_BLK_DEV_IDEDMA_PCI] 2 }
	global CONFIG_BLK_DEV_PIIX
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_PCI == 1) && ($CONFIG_BLK_DEV_IDEPCI == 1) && ($CONFIG_BLK_DEV_IDEDMA_PCI == 1 || $CONFIG_BLK_DEV_IDEDMA_PCI == 2 || $CONFIG_BLK_DEV_IDEDMA_PCI == 4)} then {write_tristate $cfg $autocfg CONFIG_BLK_DEV_PIIX $CONFIG_BLK_DEV_PIIX [list $CONFIG_BLK_DEV_IDEDMA_PCI] 2 }
	global CONFIG_BLK_DEV_NS87415
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_PCI == 1) && ($CONFIG_BLK_DEV_IDEPCI == 1) && ($CONFIG_BLK_DEV_IDEDMA_PCI == 1 || $CONFIG_BLK_DEV_IDEDMA_PCI == 2 || $CONFIG_BLK_DEV_IDEDMA_PCI == 4)} then {write_tristate $cfg $autocfg CONFIG_BLK_DEV_NS87415 $CONFIG_BLK_DEV_NS87415 [list $CONFIG_BLK_DEV_IDEDMA_PCI] 2 }
	global CONFIG_BLK_DEV_OPTI621
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_PCI == 1) && ($CONFIG_BLK_DEV_IDEPCI == 1) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {write_tristate $cfg $autocfg CONFIG_BLK_DEV_OPTI621 $CONFIG_BLK_DEV_OPTI621 [list $CONFIG_EXPERIMENTAL] 2 }
	global CONFIG_BLK_DEV_PDC202XX_OLD
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_PCI == 1) && ($CONFIG_BLK_DEV_IDEPCI == 1) && ($CONFIG_BLK_DEV_IDEDMA_PCI == 1 || $CONFIG_BLK_DEV_IDEDMA_PCI == 2 || $CONFIG_BLK_DEV_IDEDMA_PCI == 4)} then {write_tristate $cfg $autocfg CONFIG_BLK_DEV_PDC202XX_OLD $CONFIG_BLK_DEV_PDC202XX_OLD [list $CONFIG_BLK_DEV_IDEDMA_PCI] 2 }
	global CONFIG_PDC202XX_BURST
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_PCI == 1) && ($CONFIG_BLK_DEV_IDEPCI == 1) && ($CONFIG_BLK_DEV_PDC202XX_OLD == 1 || $CONFIG_BLK_DEV_PDC202XX_OLD == 2 || $CONFIG_BLK_DEV_PDC202XX_OLD == 4) && ($CONFIG_BLK_DEV_IDEDMA_PCI == 1 || $CONFIG_BLK_DEV_IDEDMA_PCI == 2 || $CONFIG_BLK_DEV_IDEDMA_PCI == 4)} then {write_tristate $cfg $autocfg CONFIG_PDC202XX_BURST $CONFIG_PDC202XX_BURST [list $CONFIG_BLK_DEV_PDC202XX_OLD $CONFIG_BLK_DEV_IDEDMA_PCI] 1 }
	global CONFIG_BLK_DEV_PDC202XX_NEW
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_PCI == 1) && ($CONFIG_BLK_DEV_IDEPCI == 1) && ($CONFIG_BLK_DEV_IDEDMA_PCI == 1 || $CONFIG_BLK_DEV_IDEDMA_PCI == 2 || $CONFIG_BLK_DEV_IDEDMA_PCI == 4)} then {write_tristate $cfg $autocfg CONFIG_BLK_DEV_PDC202XX_NEW $CONFIG_BLK_DEV_PDC202XX_NEW [list $CONFIG_BLK_DEV_IDEDMA_PCI] 2 }
	global CONFIG_PDC202XX_FORCE
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_PCI == 1) && ($CONFIG_BLK_DEV_IDEPCI == 1) && ($CONFIG_BLK_DEV_PDC202XX_OLD == 1 || $CONFIG_BLK_DEV_PDC202XX_OLD == 2 || $CONFIG_BLK_DEV_PDC202XX_NEW == 1 || $CONFIG_BLK_DEV_PDC202XX_NEW == 2)} then {write_tristate $cfg $autocfg CONFIG_PDC202XX_FORCE $CONFIG_PDC202XX_FORCE [list $notmod] 2 }
	global CONFIG_BLK_DEV_RZ1000
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_PCI == 1) && ($CONFIG_BLK_DEV_IDEPCI == 1) && ($CONFIG_X86 == 1 || $CONFIG_X86 == 2 || $CONFIG_X86 == 4)} then {write_tristate $cfg $autocfg CONFIG_BLK_DEV_RZ1000 $CONFIG_BLK_DEV_RZ1000 [list $CONFIG_X86] 2 }
	global CONFIG_BLK_DEV_SC1200
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_PCI == 1) && ($CONFIG_BLK_DEV_IDEPCI == 1) && ($CONFIG_BLK_DEV_IDEDMA_PCI == 1 || $CONFIG_BLK_DEV_IDEDMA_PCI == 2 || $CONFIG_BLK_DEV_IDEDMA_PCI == 4)} then {write_tristate $cfg $autocfg CONFIG_BLK_DEV_SC1200 $CONFIG_BLK_DEV_SC1200 [list $CONFIG_BLK_DEV_IDEDMA_PCI] 2 }
	global CONFIG_BLK_DEV_SVWKS
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_PCI == 1) && ($CONFIG_BLK_DEV_IDEPCI == 1) && ($CONFIG_BLK_DEV_IDEDMA_PCI == 1 || $CONFIG_BLK_DEV_IDEDMA_PCI == 2 || $CONFIG_BLK_DEV_IDEDMA_PCI == 4)} then {write_tristate $cfg $autocfg CONFIG_BLK_DEV_SVWKS $CONFIG_BLK_DEV_SVWKS [list $CONFIG_BLK_DEV_IDEDMA_PCI] 2 }
	global CONFIG_BLK_DEV_SIIMAGE
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_PCI == 1) && ($CONFIG_BLK_DEV_IDEPCI == 1) && ($CONFIG_BLK_DEV_IDEDMA_PCI == 1 || $CONFIG_BLK_DEV_IDEDMA_PCI == 2 || $CONFIG_BLK_DEV_IDEDMA_PCI == 4)} then {write_tristate $cfg $autocfg CONFIG_BLK_DEV_SIIMAGE $CONFIG_BLK_DEV_SIIMAGE [list $CONFIG_BLK_DEV_IDEDMA_PCI] 2 }
	global CONFIG_BLK_DEV_SIS5513
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_PCI == 1) && ($CONFIG_BLK_DEV_IDEPCI == 1) && ($CONFIG_BLK_DEV_IDEDMA_PCI == 1 || $CONFIG_BLK_DEV_IDEDMA_PCI == 2 || $CONFIG_BLK_DEV_IDEDMA_PCI == 4) && ($CONFIG_X86 == 1 || $CONFIG_X86 == 2 || $CONFIG_X86 == 4)} then {write_tristate $cfg $autocfg CONFIG_BLK_DEV_SIS5513 $CONFIG_BLK_DEV_SIS5513 [list $CONFIG_BLK_DEV_IDEDMA_PCI $CONFIG_X86] 2 }
	global CONFIG_BLK_DEV_SLC90E66
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_PCI == 1) && ($CONFIG_BLK_DEV_IDEPCI == 1) && ($CONFIG_BLK_DEV_IDEDMA_PCI == 1 || $CONFIG_BLK_DEV_IDEDMA_PCI == 2 || $CONFIG_BLK_DEV_IDEDMA_PCI == 4)} then {write_tristate $cfg $autocfg CONFIG_BLK_DEV_SLC90E66 $CONFIG_BLK_DEV_SLC90E66 [list $CONFIG_BLK_DEV_IDEDMA_PCI] 2 }
	global CONFIG_BLK_DEV_TRM290
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_PCI == 1) && ($CONFIG_BLK_DEV_IDEPCI == 1) && ($CONFIG_BLK_DEV_IDEDMA_PCI == 1 || $CONFIG_BLK_DEV_IDEDMA_PCI == 2 || $CONFIG_BLK_DEV_IDEDMA_PCI == 4)} then {write_tristate $cfg $autocfg CONFIG_BLK_DEV_TRM290 $CONFIG_BLK_DEV_TRM290 [list $CONFIG_BLK_DEV_IDEDMA_PCI] 2 }
	global CONFIG_BLK_DEV_VIA82CXXX
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_PCI == 1) && ($CONFIG_BLK_DEV_IDEPCI == 1) && ($CONFIG_BLK_DEV_IDEDMA_PCI == 1 || $CONFIG_BLK_DEV_IDEDMA_PCI == 2 || $CONFIG_BLK_DEV_IDEDMA_PCI == 4)} then {write_tristate $cfg $autocfg CONFIG_BLK_DEV_VIA82CXXX $CONFIG_BLK_DEV_VIA82CXXX [list $CONFIG_BLK_DEV_IDEDMA_PCI] 2 }
	global CONFIG_BLK_DEV_SL82C105
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_PCI == 1) && ($CONFIG_BLK_DEV_IDEPCI == 1) && ($CONFIG_ARM == 1) && ($CONFIG_BLK_DEV_IDEPCI == 1 || $CONFIG_BLK_DEV_IDEPCI == 2 || $CONFIG_BLK_DEV_IDEPCI == 4)} then {write_tristate $cfg $autocfg CONFIG_BLK_DEV_SL82C105 $CONFIG_BLK_DEV_SL82C105 [list $CONFIG_BLK_DEV_IDEPCI] 2 }
	global CONFIG_BLK_DEV_IDE_ICSIDE
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_ARCH_ACORN == 1) && ($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_ACORN == 4)} then {write_tristate $cfg $autocfg CONFIG_BLK_DEV_IDE_ICSIDE $CONFIG_BLK_DEV_IDE_ICSIDE [list $CONFIG_ARCH_ACORN] 2 }
	global CONFIG_BLK_DEV_IDEDMA_ICS
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_ARCH_ACORN == 1) && ($CONFIG_BLK_DEV_IDE_ICSIDE == 1 || $CONFIG_BLK_DEV_IDE_ICSIDE == 4)} then {write_tristate $cfg $autocfg CONFIG_BLK_DEV_IDEDMA_ICS $CONFIG_BLK_DEV_IDEDMA_ICS [list $CONFIG_BLK_DEV_IDE_ICSIDE] 2 }
	global CONFIG_IDEDMA_ICS_AUTO
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_ARCH_ACORN == 1) && ($CONFIG_BLK_DEV_IDEDMA_ICS == 1 || $CONFIG_BLK_DEV_IDEDMA_ICS == 4)} then {write_tristate $cfg $autocfg CONFIG_IDEDMA_ICS_AUTO $CONFIG_IDEDMA_ICS_AUTO [list $CONFIG_BLK_DEV_IDEDMA_ICS] 2 }
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_ARCH_ACORN == 1)} then {write_tristate $cfg $autocfg CONFIG_BLK_DEV_IDEDMA $CONFIG_BLK_DEV_IDEDMA_ICS [list $notmod] 2 }
	global CONFIG_BLK_DEV_IDE_RAPIDE
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_ARCH_ACORN == 1) && ($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_ACORN == 4)} then {write_tristate $cfg $autocfg CONFIG_BLK_DEV_IDE_RAPIDE $CONFIG_BLK_DEV_IDE_RAPIDE [list $CONFIG_ARCH_ACORN] 2 }
	global CONFIG_BLK_DEV_UCLINUX_IDE
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_UCLINUX == 1 || $CONFIG_UCLINUX == 4)} then {write_tristate $cfg $autocfg CONFIG_BLK_DEV_UCLINUX_IDE $CONFIG_BLK_DEV_UCLINUX_IDE [list $CONFIG_UCLINUX] 2 }
	global tmpvar_18
	global CONFIG_BLK_DEV_MPC8xx_IDE
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_BLK_DEV_MPC8xx_IDE == 1)} then {
	if { $tmpvar_18 == "8xx_PCCARD" } then { write_tristate $cfg $autocfg CONFIG_IDE_8xx_PCCARD 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_IDE_8xx_PCCARD 0 [list $notmod] 2 }
	if { $tmpvar_18 == "8xx_DIRECT" } then { write_tristate $cfg $autocfg CONFIG_IDE_8xx_DIRECT 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_IDE_8xx_DIRECT 0 [list $notmod] 2 }
	if { $tmpvar_18 == "EXT_DIRECT" } then { write_tristate $cfg $autocfg CONFIG_IDE_EXT_DIRECT 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_IDE_EXT_DIRECT 0 [list $notmod] 2 }}
	global CONFIG_IDE_CHIPSETS
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_ISA == 1 || $CONFIG_ISA == 4)} then {write_tristate $cfg $autocfg CONFIG_IDE_CHIPSETS $CONFIG_IDE_CHIPSETS [list $CONFIG_ISA] 2 }
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_IDE_CHIPSETS == 1)} then {write_comment $cfg $autocfg "Note: most of these also require special kernel boot parameters"}
	global CONFIG_BLK_DEV_4DRIVES
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_IDE_CHIPSETS == 1)} then {write_tristate $cfg $autocfg CONFIG_BLK_DEV_4DRIVES $CONFIG_BLK_DEV_4DRIVES [list $notmod] 2 }
	global CONFIG_BLK_DEV_ALI14XX
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_IDE_CHIPSETS == 1) && ($CONFIG_BLK_DEV_IDE == 1 || $CONFIG_BLK_DEV_IDE == 2 || $CONFIG_BLK_DEV_IDE == 4)} then {write_tristate $cfg $autocfg CONFIG_BLK_DEV_ALI14XX $CONFIG_BLK_DEV_ALI14XX [list $CONFIG_BLK_DEV_IDE] 2 }
	global CONFIG_BLK_DEV_DTC2278
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_IDE_CHIPSETS == 1) && ($CONFIG_BLK_DEV_IDE == 1 || $CONFIG_BLK_DEV_IDE == 2 || $CONFIG_BLK_DEV_IDE == 4)} then {write_tristate $cfg $autocfg CONFIG_BLK_DEV_DTC2278 $CONFIG_BLK_DEV_DTC2278 [list $CONFIG_BLK_DEV_IDE] 2 }
	global CONFIG_BLK_DEV_HT6560B
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_IDE_CHIPSETS == 1) && ($CONFIG_BLK_DEV_IDE == 1 || $CONFIG_BLK_DEV_IDE == 2 || $CONFIG_BLK_DEV_IDE == 4)} then {write_tristate $cfg $autocfg CONFIG_BLK_DEV_HT6560B $CONFIG_BLK_DEV_HT6560B [list $CONFIG_BLK_DEV_IDE] 2 }
	global CONFIG_BLK_DEV_OCIDEC
	global CONFIG_EXCALIBUR
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_IDE_CHIPSETS == 1) && ($CONFIG_BLK_DEV_IDE == 1 || $CONFIG_BLK_DEV_IDE == 4) && ($CONFIG_EXCALIBUR == 1 || $CONFIG_EXCALIBUR == 4)} then {write_tristate $cfg $autocfg CONFIG_BLK_DEV_OCIDEC $CONFIG_BLK_DEV_OCIDEC [list $CONFIG_BLK_DEV_IDE $CONFIG_EXCALIBUR] 2 }
	global CONFIG_BLK_DEV_PDC4030
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_IDE_CHIPSETS == 1) && ($CONFIG_BLK_DEV_IDEDISK == 1 || $CONFIG_BLK_DEV_IDEDISK == 2 || $CONFIG_BLK_DEV_IDEDISK == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {write_tristate $cfg $autocfg CONFIG_BLK_DEV_PDC4030 $CONFIG_BLK_DEV_PDC4030 [list $CONFIG_BLK_DEV_IDEDISK $CONFIG_EXPERIMENTAL] 2 }
	global CONFIG_BLK_DEV_QD65XX
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_IDE_CHIPSETS == 1) && ($CONFIG_BLK_DEV_IDE == 1 || $CONFIG_BLK_DEV_IDE == 2 || $CONFIG_BLK_DEV_IDE == 4)} then {write_tristate $cfg $autocfg CONFIG_BLK_DEV_QD65XX $CONFIG_BLK_DEV_QD65XX [list $CONFIG_BLK_DEV_IDE] 2 }
	global CONFIG_BLK_DEV_UMC8672
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE != 0) && ($CONFIG_IDE_CHIPSETS == 1) && ($CONFIG_BLK_DEV_IDE == 1 || $CONFIG_BLK_DEV_IDE == 2 || $CONFIG_BLK_DEV_IDE == 4)} then {write_tristate $cfg $autocfg CONFIG_BLK_DEV_UMC8672 $CONFIG_BLK_DEV_UMC8672 [list $CONFIG_BLK_DEV_IDE] 2 }
	global CONFIG_BLK_DEV_HD_ONLY
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE == 0)} then {write_tristate $cfg $autocfg CONFIG_BLK_DEV_HD_ONLY $CONFIG_BLK_DEV_HD_ONLY [list $notmod] 2 }
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE == 0)} then {write_tristate $cfg $autocfg CONFIG_BLK_DEV_HD $CONFIG_BLK_DEV_HD_ONLY [list $notmod] 2 }
	global CONFIG_IDEDMA_AUTO
	global CONFIG_BLK_DEV_IDEDMA_PMAC_AUTO
	if {($CONFIG_IDE != 0) && ($CONFIG_IDEDMA_PCI_AUTO == 1 || $CONFIG_BLK_DEV_IDEDMA_PMAC_AUTO == 1 || $CONFIG_IDEDMA_ICS_AUTO == 1)} then {write_tristate $cfg $autocfg CONFIG_IDEDMA_AUTO $CONSTANT_Y [list $notmod] 2 }
	if {($CONFIG_IDE != 0) && ($CONFIG_IDEDMA_PCI_AUTO != 1 && $CONFIG_BLK_DEV_IDEDMA_PMAC_AUTO != 1 && $CONFIG_IDEDMA_ICS_AUTO != 1)} then {write_tristate $cfg $autocfg CONFIG_IDEDMA_AUTO $CONSTANT_N [list $notmod] 2 }
	global CONFIG_IDEDMA_IVB
	global CONFIG_BLK_DEV_IDEDMA_PMAC
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDEDMA_PCI == 1 || $CONFIG_BLK_DEV_IDEDMA_PMAC == 1 || $CONFIG_BLK_DEV_IDEDMA_ICS == 1)} then {write_tristate $cfg $autocfg CONFIG_IDEDMA_IVB $CONFIG_IDEDMA_IVB [list $notmod] 2 }
	global CONFIG_DMA_NONPCI
	if {($CONFIG_IDE != 0)} then {write_tristate $cfg $autocfg CONFIG_DMA_NONPCI $CONSTANT_N [list $notmod] 2 }
	global CONFIG_BLK_DEV_PDC202XX
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDEDMA_PCI == 1) && ($CONFIG_BLK_DEV_PDC202XX_OLD != 0 || $CONFIG_BLK_DEV_PDC202XX_NEW != 0)} then {write_tristate $cfg $autocfg CONFIG_BLK_DEV_PDC202XX $CONSTANT_Y [list $notmod] 2 }
	global CONFIG_BLK_DEV_IDE_MODES
	global CONFIG_BLK_DEV_IDE_PMAC
	global CONFIG_BLK_DEV_IT8172
	global CONFIG_BLK_DEV_NFORCE
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_4DRIVES == 1 || $CONFIG_BLK_DEV_ALI14XX != 0 || $CONFIG_BLK_DEV_DTC2278 != 0 || $CONFIG_BLK_DEV_HT6560B != 0 || $CONFIG_BLK_DEV_PDC4030 != 0 || $CONFIG_BLK_DEV_QD65XX != 0 || $CONFIG_BLK_DEV_UMC8672 != 0 || $CONFIG_BLK_DEV_AEC62XX == 1 || $CONFIG_BLK_DEV_ALI15X3 == 1 || $CONFIG_BLK_DEV_AMD74XX == 1 || $CONFIG_BLK_DEV_CMD640 == 1 || $CONFIG_BLK_DEV_CMD64X == 1 || $CONFIG_BLK_DEV_CS5530 == 1 || $CONFIG_BLK_DEV_CY82C693 == 1 || $CONFIG_BLK_DEV_HPT34X == 1 || $CONFIG_BLK_DEV_HPT366 == 1 || $CONFIG_BLK_DEV_IDE_PMAC == 1 || $CONFIG_BLK_DEV_OCIDEC == 1 || $CONFIG_BLK_DEV_IT8172 == 1 || $CONFIG_BLK_DEV_MPC8xx_IDE == 1 || $CONFIG_BLK_DEV_NFORCE == 1 || $CONFIG_BLK_DEV_OPTI621 == 1 || $CONFIG_BLK_DEV_SVWKS == 1 || $CONFIG_BLK_DEV_PDC202XX == 1 || $CONFIG_BLK_DEV_PIIX == 1 || $CONFIG_BLK_DEV_SVWKS == 1 || $CONFIG_BLK_DEV_SIIMAGE == 1 || $CONFIG_BLK_DEV_SIS5513 == 1 || $CONFIG_BLK_DEV_SL82C105 == 1 || $CONFIG_BLK_DEV_SLC90E66 == 1 || $CONFIG_BLK_DEV_VIA82CXXX == 1)} then {write_tristate $cfg $autocfg CONFIG_BLK_DEV_IDE_MODES $CONSTANT_Y [list $notmod] 2 }
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_4DRIVES != 1 && $CONFIG_BLK_DEV_ALI14XX == 0 && $CONFIG_BLK_DEV_DTC2278 == 0 && $CONFIG_BLK_DEV_HT6560B == 0 && $CONFIG_BLK_DEV_PDC4030 == 0 && $CONFIG_BLK_DEV_QD65XX == 0 && $CONFIG_BLK_DEV_UMC8672 == 0 && $CONFIG_BLK_DEV_AEC62XX != 1 && $CONFIG_BLK_DEV_ALI15X3 != 1 && $CONFIG_BLK_DEV_AMD74XX != 1 && $CONFIG_BLK_DEV_CMD640 != 1 && $CONFIG_BLK_DEV_CMD64X != 1 && $CONFIG_BLK_DEV_CS5530 != 1 && $CONFIG_BLK_DEV_CY82C693 != 1 && $CONFIG_BLK_DEV_HPT34X != 1 && $CONFIG_BLK_DEV_HPT366 != 1 && $CONFIG_BLK_DEV_IDE_PMAC != 1 && $CONFIG_BLK_DEV_OCIDEC != 1 && $CONFIG_BLK_DEV_IT8172 != 1 && $CONFIG_BLK_DEV_MPC8xx_IDE != 1 && $CONFIG_BLK_DEV_NFORCE != 1 && $CONFIG_BLK_DEV_OPTI621 != 1 && $CONFIG_BLK_DEV_SVWKS != 1 && $CONFIG_BLK_DEV_PDC202XX != 1 && $CONFIG_BLK_DEV_PIIX != 1 && $CONFIG_BLK_DEV_SVWKS != 1 && $CONFIG_BLK_DEV_SIIMAGE != 1 && $CONFIG_BLK_DEV_SIS5513 != 1 && $CONFIG_BLK_DEV_SL82C105 != 1 && $CONFIG_BLK_DEV_SLC90E66 != 1 && $CONFIG_BLK_DEV_VIA82CXXX != 1)} then {write_tristate $cfg $autocfg CONFIG_BLK_DEV_IDE_MODES $CONSTANT_N [list $notmod] 2 }
	global CONFIG_BLK_DEV_ATARAID
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE == 1 || $CONFIG_BLK_DEV_IDE == 2 || $CONFIG_BLK_DEV_IDE == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {write_tristate $cfg $autocfg CONFIG_BLK_DEV_ATARAID $CONFIG_BLK_DEV_ATARAID [list $CONFIG_BLK_DEV_IDE $CONFIG_EXPERIMENTAL] 2 }
	global CONFIG_BLK_DEV_ATARAID_PDC
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE == 1 || $CONFIG_BLK_DEV_IDE == 2 || $CONFIG_BLK_DEV_IDE == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4) && ($CONFIG_BLK_DEV_ATARAID == 1 || $CONFIG_BLK_DEV_ATARAID == 2 || $CONFIG_BLK_DEV_ATARAID == 4)} then {write_tristate $cfg $autocfg CONFIG_BLK_DEV_ATARAID_PDC $CONFIG_BLK_DEV_ATARAID_PDC [list $CONFIG_BLK_DEV_IDE $CONFIG_EXPERIMENTAL $CONFIG_BLK_DEV_ATARAID] 2 }
	global CONFIG_BLK_DEV_ATARAID_HPT
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE == 1 || $CONFIG_BLK_DEV_IDE == 2 || $CONFIG_BLK_DEV_IDE == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4) && ($CONFIG_BLK_DEV_ATARAID == 1 || $CONFIG_BLK_DEV_ATARAID == 2 || $CONFIG_BLK_DEV_ATARAID == 4)} then {write_tristate $cfg $autocfg CONFIG_BLK_DEV_ATARAID_HPT $CONFIG_BLK_DEV_ATARAID_HPT [list $CONFIG_BLK_DEV_IDE $CONFIG_EXPERIMENTAL $CONFIG_BLK_DEV_ATARAID] 2 }
	global CONFIG_BLK_DEV_ATARAID_SII
	if {($CONFIG_IDE != 0) && ($CONFIG_BLK_DEV_IDE == 1 || $CONFIG_BLK_DEV_IDE == 2 || $CONFIG_BLK_DEV_IDE == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4) && ($CONFIG_BLK_DEV_ATARAID == 1 || $CONFIG_BLK_DEV_ATARAID == 2 || $CONFIG_BLK_DEV_ATARAID == 4)} then {write_tristate $cfg $autocfg CONFIG_BLK_DEV_ATARAID_SII $CONFIG_BLK_DEV_ATARAID_SII [list $CONFIG_BLK_DEV_IDE $CONFIG_EXPERIMENTAL $CONFIG_BLK_DEV_ATARAID] 2 }
	if {($CONFIG_IDE == 0)} then {write_tristate $cfg $autocfg CONFIG_BLK_DEV_IDE_MODES $CONSTANT_N [list $notmod] 2 }
	if {($CONFIG_IDE == 0)} then {write_tristate $cfg $autocfg CONFIG_BLK_DEV_HD $CONSTANT_N [list $notmod] 2 }
	write_comment $cfg $autocfg "SCSI support"
	write_tristate $cfg $autocfg CONFIG_SCSI $CONFIG_SCSI [list $notmod] 2
	if {($CONFIG_SCSI != 0)} then {write_comment $cfg $autocfg "SCSI support type (disk, tape, CD-ROM)"}
	global CONFIG_BLK_DEV_SD
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {write_tristate $cfg $autocfg CONFIG_BLK_DEV_SD $CONFIG_BLK_DEV_SD [list $CONFIG_SCSI] 2 }
	global CONFIG_SD_EXTRA_DEVS
	if {($CONFIG_SCSI != 0) && ($CONFIG_BLK_DEV_SD != 0)} then {write_int $cfg $autocfg CONFIG_SD_EXTRA_DEVS $CONFIG_SD_EXTRA_DEVS $notmod }
	global CONFIG_CHR_DEV_ST
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {write_tristate $cfg $autocfg CONFIG_CHR_DEV_ST $CONFIG_CHR_DEV_ST [list $CONFIG_SCSI] 2 }
	global CONFIG_CHR_DEV_OSST
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {write_tristate $cfg $autocfg CONFIG_CHR_DEV_OSST $CONFIG_CHR_DEV_OSST [list $CONFIG_SCSI] 2 }
	global CONFIG_BLK_DEV_SR
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {write_tristate $cfg $autocfg CONFIG_BLK_DEV_SR $CONFIG_BLK_DEV_SR [list $CONFIG_SCSI] 2 }
	global CONFIG_BLK_DEV_SR_VENDOR
	if {($CONFIG_SCSI != 0) && ($CONFIG_BLK_DEV_SR != 0)} then {write_tristate $cfg $autocfg CONFIG_BLK_DEV_SR_VENDOR $CONFIG_BLK_DEV_SR_VENDOR [list $notmod] 2 }
	global CONFIG_SR_EXTRA_DEVS
	if {($CONFIG_SCSI != 0) && ($CONFIG_BLK_DEV_SR != 0)} then {write_int $cfg $autocfg CONFIG_SR_EXTRA_DEVS $CONFIG_SR_EXTRA_DEVS $notmod }
	global CONFIG_CHR_DEV_SG
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {write_tristate $cfg $autocfg CONFIG_CHR_DEV_SG $CONFIG_CHR_DEV_SG [list $CONFIG_SCSI] 2 }
	if {($CONFIG_SCSI != 0)} then {write_comment $cfg $autocfg "Some SCSI devices (e.g. CD jukebox) support multiple LUNs"}
	global CONFIG_SCSI_DEBUG_QUEUES
	if {($CONFIG_SCSI != 0)} then {write_tristate $cfg $autocfg CONFIG_SCSI_DEBUG_QUEUES $CONFIG_SCSI_DEBUG_QUEUES [list $notmod] 2 }
	global CONFIG_SCSI_MULTI_LUN
	if {($CONFIG_SCSI != 0)} then {write_tristate $cfg $autocfg CONFIG_SCSI_MULTI_LUN $CONFIG_SCSI_MULTI_LUN [list $notmod] 2 }
	global CONFIG_SCSI_CONSTANTS
	if {($CONFIG_SCSI != 0)} then {write_tristate $cfg $autocfg CONFIG_SCSI_CONSTANTS $CONFIG_SCSI_CONSTANTS [list $notmod] 2 }
	global CONFIG_SCSI_LOGGING
	if {($CONFIG_SCSI != 0)} then {write_tristate $cfg $autocfg CONFIG_SCSI_LOGGING $CONFIG_SCSI_LOGGING [list $notmod] 2 }
	if {($CONFIG_SCSI != 0)} then {write_comment $cfg $autocfg "SCSI low-level drivers"}
	global CONFIG_BLK_DEV_3W_XXXX_RAID
	if {($CONFIG_SCSI != 0) && ($CONFIG_PCI == 1) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {write_tristate $cfg $autocfg CONFIG_BLK_DEV_3W_XXXX_RAID $CONFIG_BLK_DEV_3W_XXXX_RAID [list $CONFIG_SCSI] 2 }
	global CONFIG_SCSI_7000FASST
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {write_tristate $cfg $autocfg CONFIG_SCSI_7000FASST $CONFIG_SCSI_7000FASST [list $CONFIG_SCSI] 2 }
	global CONFIG_SCSI_ACARD
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {write_tristate $cfg $autocfg CONFIG_SCSI_ACARD $CONFIG_SCSI_ACARD [list $CONFIG_SCSI] 2 }
	global CONFIG_SCSI_AHA152X
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {write_tristate $cfg $autocfg CONFIG_SCSI_AHA152X $CONFIG_SCSI_AHA152X [list $CONFIG_SCSI] 2 }
	global CONFIG_SCSI_AHA1542
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {write_tristate $cfg $autocfg CONFIG_SCSI_AHA1542 $CONFIG_SCSI_AHA1542 [list $CONFIG_SCSI] 2 }
	global CONFIG_SCSI_AHA1740
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {write_tristate $cfg $autocfg CONFIG_SCSI_AHA1740 $CONFIG_SCSI_AHA1740 [list $CONFIG_SCSI] 2 }
	global CONFIG_SCSI_AACRAID
	if {($CONFIG_SCSI != 0) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {write_tristate $cfg $autocfg CONFIG_SCSI_AACRAID $CONFIG_SCSI_AACRAID [list $CONFIG_SCSI $CONFIG_PCI] 2 }
	global CONFIG_SCSI_AIC7XXX
	global CONFIG_SCSI_AIC7XXX_OLD
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI_AIC7XXX_OLD != 1) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {write_tristate $cfg $autocfg CONFIG_SCSI_AIC7XXX $CONFIG_SCSI_AIC7XXX [list $CONFIG_SCSI] 2 }
	global CONFIG_AIC7XXX_CMDS_PER_DEVICE
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI_AIC7XXX_OLD != 1) && ($CONFIG_SCSI_AIC7XXX != 0)} then {write_int $cfg $autocfg CONFIG_AIC7XXX_CMDS_PER_DEVICE $CONFIG_AIC7XXX_CMDS_PER_DEVICE $notmod }
	global CONFIG_AIC7XXX_RESET_DELAY_MS
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI_AIC7XXX_OLD != 1) && ($CONFIG_SCSI_AIC7XXX != 0)} then {write_int $cfg $autocfg CONFIG_AIC7XXX_RESET_DELAY_MS $CONFIG_AIC7XXX_RESET_DELAY_MS $notmod }
	global CONFIG_AIC7XXX_PROBE_EISA_VL
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI_AIC7XXX_OLD != 1) && ($CONFIG_SCSI_AIC7XXX != 0)} then {write_tristate $cfg $autocfg CONFIG_AIC7XXX_PROBE_EISA_VL $CONFIG_AIC7XXX_PROBE_EISA_VL [list $notmod] 2 }
	global CONFIG_AIC7XXX_BUILD_FIRMWARE
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI_AIC7XXX_OLD != 1) && ($CONFIG_SCSI_AIC7XXX != 0)} then {write_tristate $cfg $autocfg CONFIG_AIC7XXX_BUILD_FIRMWARE $CONFIG_AIC7XXX_BUILD_FIRMWARE [list $notmod] 2 }
	global CONFIG_AIC7XXX_DEBUG_ENABLE
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI_AIC7XXX_OLD != 1) && ($CONFIG_SCSI_AIC7XXX != 0)} then {write_tristate $cfg $autocfg CONFIG_AIC7XXX_DEBUG_ENABLE $CONFIG_AIC7XXX_DEBUG_ENABLE [list $notmod] 2 }
	global CONFIG_AIC7XXX_DEBUG_MASK
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI_AIC7XXX_OLD != 1) && ($CONFIG_SCSI_AIC7XXX != 0)} then {write_int $cfg $autocfg CONFIG_AIC7XXX_DEBUG_MASK $CONFIG_AIC7XXX_DEBUG_MASK $notmod }
	global CONFIG_AIC7XXX_REG_PRETTY_PRINT
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI_AIC7XXX_OLD != 1) && ($CONFIG_SCSI_AIC7XXX != 0)} then {write_tristate $cfg $autocfg CONFIG_AIC7XXX_REG_PRETTY_PRINT $CONFIG_AIC7XXX_REG_PRETTY_PRINT [list $notmod] 2 }
	global CONFIG_SCSI_AIC79XX
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {write_tristate $cfg $autocfg CONFIG_SCSI_AIC79XX $CONFIG_SCSI_AIC79XX [list $CONFIG_SCSI] 2 }
	global CONFIG_AIC79XX_CMDS_PER_DEVICE
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI_AIC79XX != 0)} then {write_int $cfg $autocfg CONFIG_AIC79XX_CMDS_PER_DEVICE $CONFIG_AIC79XX_CMDS_PER_DEVICE $notmod }
	global CONFIG_AIC79XX_RESET_DELAY_MS
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI_AIC79XX != 0)} then {write_int $cfg $autocfg CONFIG_AIC79XX_RESET_DELAY_MS $CONFIG_AIC79XX_RESET_DELAY_MS $notmod }
	global CONFIG_AIC79XX_BUILD_FIRMWARE
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI_AIC79XX != 0)} then {write_tristate $cfg $autocfg CONFIG_AIC79XX_BUILD_FIRMWARE $CONFIG_AIC79XX_BUILD_FIRMWARE [list $notmod] 2 }
	global CONFIG_AIC79XX_ENABLE_RD_STRM
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI_AIC79XX != 0)} then {write_tristate $cfg $autocfg CONFIG_AIC79XX_ENABLE_RD_STRM $CONFIG_AIC79XX_ENABLE_RD_STRM [list $notmod] 2 }
	global CONFIG_AIC79XX_DEBUG_ENABLE
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI_AIC79XX != 0)} then {write_tristate $cfg $autocfg CONFIG_AIC79XX_DEBUG_ENABLE $CONFIG_AIC79XX_DEBUG_ENABLE [list $notmod] 2 }
	global CONFIG_AIC79XX_DEBUG_MASK
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI_AIC79XX != 0)} then {write_int $cfg $autocfg CONFIG_AIC79XX_DEBUG_MASK $CONFIG_AIC79XX_DEBUG_MASK $notmod }
	global CONFIG_AIC79XX_REG_PRETTY_PRINT
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI_AIC79XX != 0)} then {write_tristate $cfg $autocfg CONFIG_AIC79XX_REG_PRETTY_PRINT $CONFIG_AIC79XX_REG_PRETTY_PRINT [list $notmod] 2 }
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI_AIC7XXX != 1) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {write_tristate $cfg $autocfg CONFIG_SCSI_AIC7XXX_OLD $CONFIG_SCSI_AIC7XXX_OLD [list $CONFIG_SCSI] 2 }
	global CONFIG_AIC7XXX_OLD_TCQ_ON_BY_DEFAULT
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI_AIC7XXX != 1) && ($CONFIG_SCSI_AIC7XXX_OLD != 0)} then {write_tristate $cfg $autocfg CONFIG_AIC7XXX_OLD_TCQ_ON_BY_DEFAULT $CONFIG_AIC7XXX_OLD_TCQ_ON_BY_DEFAULT [list $notmod] 2 }
	global CONFIG_AIC7XXX_OLD_CMDS_PER_DEVICE
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI_AIC7XXX != 1) && ($CONFIG_SCSI_AIC7XXX_OLD != 0)} then {write_int $cfg $autocfg CONFIG_AIC7XXX_OLD_CMDS_PER_DEVICE $CONFIG_AIC7XXX_OLD_CMDS_PER_DEVICE $notmod }
	global CONFIG_AIC7XXX_OLD_PROC_STATS
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI_AIC7XXX != 1) && ($CONFIG_SCSI_AIC7XXX_OLD != 0)} then {write_tristate $cfg $autocfg CONFIG_AIC7XXX_OLD_PROC_STATS $CONFIG_AIC7XXX_OLD_PROC_STATS [list $notmod] 2 }
	global CONFIG_SCSI_DPT_I2O
	if {($CONFIG_SCSI != 0) && ($CONFIG_X86_64 != 1) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {write_tristate $cfg $autocfg CONFIG_SCSI_DPT_I2O $CONFIG_SCSI_DPT_I2O [list $CONFIG_SCSI] 2 }
	global CONFIG_SCSI_ADVANSYS
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {write_tristate $cfg $autocfg CONFIG_SCSI_ADVANSYS $CONFIG_SCSI_ADVANSYS [list $CONFIG_SCSI] 2 }
	global CONFIG_SCSI_IN2000
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {write_tristate $cfg $autocfg CONFIG_SCSI_IN2000 $CONFIG_SCSI_IN2000 [list $CONFIG_SCSI] 2 }
	global CONFIG_SCSI_AM53C974
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {write_tristate $cfg $autocfg CONFIG_SCSI_AM53C974 $CONFIG_SCSI_AM53C974 [list $CONFIG_SCSI $CONFIG_PCI] 2 }
	global CONFIG_SCSI_MEGARAID
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {write_tristate $cfg $autocfg CONFIG_SCSI_MEGARAID $CONFIG_SCSI_MEGARAID [list $CONFIG_SCSI] 2 }
	global CONFIG_SCSI_MEGARAID2
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {write_tristate $cfg $autocfg CONFIG_SCSI_MEGARAID2 $CONFIG_SCSI_MEGARAID2 [list $CONFIG_SCSI] 2 }
	global CONFIG_SCSI_BUSLOGIC
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {write_tristate $cfg $autocfg CONFIG_SCSI_BUSLOGIC $CONFIG_SCSI_BUSLOGIC [list $CONFIG_SCSI] 2 }
	global CONFIG_SCSI_OMIT_FLASHPOINT
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI_BUSLOGIC != 0)} then {write_tristate $cfg $autocfg CONFIG_SCSI_OMIT_FLASHPOINT $CONFIG_SCSI_OMIT_FLASHPOINT [list $notmod] 2 }
	global CONFIG_SCSI_CPQFCTS
	if {($CONFIG_SCSI != 0) && ($CONFIG_PCI == 1) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {write_tristate $cfg $autocfg CONFIG_SCSI_CPQFCTS $CONFIG_SCSI_CPQFCTS [list $CONFIG_SCSI] 2 }
	global CONFIG_SCSI_DMX3191D
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {write_tristate $cfg $autocfg CONFIG_SCSI_DMX3191D $CONFIG_SCSI_DMX3191D [list $CONFIG_SCSI $CONFIG_PCI] 2 }
	global CONFIG_SCSI_DTC3280
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {write_tristate $cfg $autocfg CONFIG_SCSI_DTC3280 $CONFIG_SCSI_DTC3280 [list $CONFIG_SCSI] 2 }
	global CONFIG_SCSI_EATA
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {write_tristate $cfg $autocfg CONFIG_SCSI_EATA $CONFIG_SCSI_EATA [list $CONFIG_SCSI] 2 }
	global CONFIG_SCSI_EATA_TAGGED_QUEUE
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI_EATA != 0)} then {write_tristate $cfg $autocfg CONFIG_SCSI_EATA_TAGGED_QUEUE $CONFIG_SCSI_EATA_TAGGED_QUEUE [list $notmod] 2 }
	global CONFIG_SCSI_EATA_LINKED_COMMANDS
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI_EATA != 0)} then {write_tristate $cfg $autocfg CONFIG_SCSI_EATA_LINKED_COMMANDS $CONFIG_SCSI_EATA_LINKED_COMMANDS [list $notmod] 2 }
	global CONFIG_SCSI_EATA_MAX_TAGS
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI_EATA != 0)} then {write_int $cfg $autocfg CONFIG_SCSI_EATA_MAX_TAGS $CONFIG_SCSI_EATA_MAX_TAGS $notmod }
	global CONFIG_SCSI_EATA_DMA
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {write_tristate $cfg $autocfg CONFIG_SCSI_EATA_DMA $CONFIG_SCSI_EATA_DMA [list $CONFIG_SCSI] 2 }
	global CONFIG_SCSI_EATA_PIO
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {write_tristate $cfg $autocfg CONFIG_SCSI_EATA_PIO $CONFIG_SCSI_EATA_PIO [list $CONFIG_SCSI] 2 }
	global CONFIG_SCSI_FUTURE_DOMAIN
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {write_tristate $cfg $autocfg CONFIG_SCSI_FUTURE_DOMAIN $CONFIG_SCSI_FUTURE_DOMAIN [list $CONFIG_SCSI] 2 }
	global CONFIG_SCSI_FD_MCS
	if {($CONFIG_SCSI != 0) && ($CONFIG_MCA == 1) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {write_tristate $cfg $autocfg CONFIG_SCSI_FD_MCS $CONFIG_SCSI_FD_MCS [list $CONFIG_SCSI] 2 }
	global CONFIG_SCSI_GDTH
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {write_tristate $cfg $autocfg CONFIG_SCSI_GDTH $CONFIG_SCSI_GDTH [list $CONFIG_SCSI] 2 }
	global CONFIG_SCSI_GENERIC_NCR5380
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {write_tristate $cfg $autocfg CONFIG_SCSI_GENERIC_NCR5380 $CONFIG_SCSI_GENERIC_NCR5380 [list $CONFIG_SCSI] 2 }
	global CONFIG_SCSI_GENERIC_NCR53C400
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI_GENERIC_NCR5380 != 0)} then {write_tristate $cfg $autocfg CONFIG_SCSI_GENERIC_NCR53C400 $CONFIG_SCSI_GENERIC_NCR53C400 [list $notmod] 2 }
	global tmpvar_19
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI_GENERIC_NCR5380 != 0)} then {
	if { $tmpvar_19 == "Port" } then { write_tristate $cfg $autocfg CONFIG_SCSI_G_NCR5380_PORT 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_SCSI_G_NCR5380_PORT 0 [list $notmod] 2 }
	if { $tmpvar_19 == "Memory" } then { write_tristate $cfg $autocfg CONFIG_SCSI_G_NCR5380_MEM 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_SCSI_G_NCR5380_MEM 0 [list $notmod] 2 }}
	global CONFIG_SCSI_IBMMCA
	if {($CONFIG_SCSI != 0) && ($CONFIG_MCA == 1) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {write_tristate $cfg $autocfg CONFIG_SCSI_IBMMCA $CONFIG_SCSI_IBMMCA [list $CONFIG_SCSI] 2 }
	global CONFIG_IBMMCA_SCSI_ORDER_STANDARD
	if {($CONFIG_SCSI != 0) && ($CONFIG_MCA == 1) && ($CONFIG_SCSI_IBMMCA != 0)} then {write_tristate $cfg $autocfg CONFIG_IBMMCA_SCSI_ORDER_STANDARD $CONFIG_IBMMCA_SCSI_ORDER_STANDARD [list $notmod] 2 }
	global CONFIG_IBMMCA_SCSI_DEV_RESET
	if {($CONFIG_SCSI != 0) && ($CONFIG_MCA == 1) && ($CONFIG_SCSI_IBMMCA != 0)} then {write_tristate $cfg $autocfg CONFIG_IBMMCA_SCSI_DEV_RESET $CONFIG_IBMMCA_SCSI_DEV_RESET [list $notmod] 2 }
	global CONFIG_SCSI_INITIO
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {write_tristate $cfg $autocfg CONFIG_SCSI_INITIO $CONFIG_SCSI_INITIO [list $CONFIG_SCSI $CONFIG_PCI] 2 }
	global CONFIG_SCSI_INIA100
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {write_tristate $cfg $autocfg CONFIG_SCSI_INIA100 $CONFIG_SCSI_INIA100 [list $CONFIG_SCSI $CONFIG_PCI] 2 }
	global CONFIG_SCSI_PPA
	if {($CONFIG_SCSI != 0) && ($CONFIG_PARPORT != 0) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4) && ($CONFIG_PARPORT == 1 || $CONFIG_PARPORT == 2 || $CONFIG_PARPORT == 4)} then {write_tristate $cfg $autocfg CONFIG_SCSI_PPA $CONFIG_SCSI_PPA [list $CONFIG_SCSI $CONFIG_PARPORT] 2 }
	global CONFIG_SCSI_IMM
	if {($CONFIG_SCSI != 0) && ($CONFIG_PARPORT != 0) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4) && ($CONFIG_PARPORT == 1 || $CONFIG_PARPORT == 2 || $CONFIG_PARPORT == 4)} then {write_tristate $cfg $autocfg CONFIG_SCSI_IMM $CONFIG_SCSI_IMM [list $CONFIG_SCSI $CONFIG_PARPORT] 2 }
	global CONFIG_SCSI_IZIP_EPP16
	if {($CONFIG_SCSI != 0) && ($CONFIG_PARPORT != 0) && ($CONFIG_SCSI_PPA != 0 || $CONFIG_SCSI_IMM != 0)} then {write_tristate $cfg $autocfg CONFIG_SCSI_IZIP_EPP16 $CONFIG_SCSI_IZIP_EPP16 [list $notmod] 2 }
	global CONFIG_SCSI_IZIP_SLOW_CTR
	if {($CONFIG_SCSI != 0) && ($CONFIG_PARPORT != 0) && ($CONFIG_SCSI_PPA != 0 || $CONFIG_SCSI_IMM != 0)} then {write_tristate $cfg $autocfg CONFIG_SCSI_IZIP_SLOW_CTR $CONFIG_SCSI_IZIP_SLOW_CTR [list $notmod] 2 }
	global CONFIG_SCSI_NCR53C406A
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {write_tristate $cfg $autocfg CONFIG_SCSI_NCR53C406A $CONFIG_SCSI_NCR53C406A [list $CONFIG_SCSI] 2 }
	global CONFIG_SCSI_NCR_D700
	if {($CONFIG_SCSI != 0) && ($CONFIG_MCA == 1) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {write_tristate $cfg $autocfg CONFIG_SCSI_NCR_D700 $CONFIG_SCSI_NCR_D700 [list $CONFIG_SCSI] 2 }
	global CONFIG_53C700_IO_MAPPED
	if {($CONFIG_SCSI != 0) && ($CONFIG_MCA == 1) && ($CONFIG_SCSI_NCR_D700 != 0)} then {write_tristate $cfg $autocfg CONFIG_53C700_IO_MAPPED $CONSTANT_Y [list $notmod] 2 }
	global CONFIG_SCSI_NCR53C7xx
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {write_tristate $cfg $autocfg CONFIG_SCSI_NCR53C7xx $CONFIG_SCSI_NCR53C7xx [list $CONFIG_SCSI $CONFIG_PCI] 2 }
	global CONFIG_SCSI_NCR53C7xx_sync
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI_NCR53C7xx != 0)} then {write_tristate $cfg $autocfg CONFIG_SCSI_NCR53C7xx_sync $CONFIG_SCSI_NCR53C7xx_sync [list $notmod] 2 }
	global CONFIG_SCSI_NCR53C7xx_FAST
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI_NCR53C7xx != 0)} then {write_tristate $cfg $autocfg CONFIG_SCSI_NCR53C7xx_FAST $CONFIG_SCSI_NCR53C7xx_FAST [list $notmod] 2 }
	global CONFIG_SCSI_NCR53C7xx_DISCONNECT
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI_NCR53C7xx != 0)} then {write_tristate $cfg $autocfg CONFIG_SCSI_NCR53C7xx_DISCONNECT $CONFIG_SCSI_NCR53C7xx_DISCONNECT [list $notmod] 2 }
	global CONFIG_SCSI_SYM53C8XX_2
	if {($CONFIG_SCSI != 0) && ($CONFIG_PCI == 1) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {write_tristate $cfg $autocfg CONFIG_SCSI_SYM53C8XX_2 $CONFIG_SCSI_SYM53C8XX_2 [list $CONFIG_SCSI] 2 }
	global CONFIG_SCSI_SYM53C8XX_DMA_ADDRESSING_MODE
	if {($CONFIG_SCSI != 0) && ($CONFIG_PCI == 1) && ($CONFIG_SCSI_SYM53C8XX_2 != 0)} then {write_int $cfg $autocfg CONFIG_SCSI_SYM53C8XX_DMA_ADDRESSING_MODE $CONFIG_SCSI_SYM53C8XX_DMA_ADDRESSING_MODE $notmod }
	global CONFIG_SCSI_SYM53C8XX_DEFAULT_TAGS
	if {($CONFIG_SCSI != 0) && ($CONFIG_PCI == 1) && ($CONFIG_SCSI_SYM53C8XX_2 != 0)} then {write_int $cfg $autocfg CONFIG_SCSI_SYM53C8XX_DEFAULT_TAGS $CONFIG_SCSI_SYM53C8XX_DEFAULT_TAGS $notmod }
	global CONFIG_SCSI_SYM53C8XX_MAX_TAGS
	if {($CONFIG_SCSI != 0) && ($CONFIG_PCI == 1) && ($CONFIG_SCSI_SYM53C8XX_2 != 0)} then {write_int $cfg $autocfg CONFIG_SCSI_SYM53C8XX_MAX_TAGS $CONFIG_SCSI_SYM53C8XX_MAX_TAGS $notmod }
	global CONFIG_SCSI_SYM53C8XX_IOMAPPED
	if {($CONFIG_SCSI != 0) && ($CONFIG_PCI == 1) && ($CONFIG_SCSI_SYM53C8XX_2 != 0)} then {write_tristate $cfg $autocfg CONFIG_SCSI_SYM53C8XX_IOMAPPED $CONFIG_SCSI_SYM53C8XX_IOMAPPED [list $notmod] 2 }
	global CONFIG_SCSI_NCR53C8XX
	if {($CONFIG_SCSI != 0) && ($CONFIG_PCI == 1 && $CONFIG_SCSI_SYM53C8XX_2 != 1) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {write_tristate $cfg $autocfg CONFIG_SCSI_NCR53C8XX $CONFIG_SCSI_NCR53C8XX [list $CONFIG_SCSI] 2 }
	global CONFIG_SCSI_SYM53C8XX
	if {($CONFIG_SCSI != 0) && ($CONFIG_PCI == 1 && $CONFIG_SCSI_SYM53C8XX_2 != 1) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {write_tristate $cfg $autocfg CONFIG_SCSI_SYM53C8XX $CONFIG_SCSI_SYM53C8XX [list $CONFIG_SCSI] 2 }
	global CONFIG_SCSI_NCR53C8XX_DEFAULT_TAGS
	global CONFIG_SCSI_ZALON
	if {($CONFIG_SCSI != 0) && ($CONFIG_PCI == 1 && $CONFIG_SCSI_SYM53C8XX_2 != 1) && ($CONFIG_SCSI_NCR53C8XX != 0 || $CONFIG_SCSI_ZALON == 1 || $CONFIG_SCSI_ZALON == 2 || $CONFIG_SCSI_SYM53C8XX != 0)} then {write_int $cfg $autocfg CONFIG_SCSI_NCR53C8XX_DEFAULT_TAGS $CONFIG_SCSI_NCR53C8XX_DEFAULT_TAGS $notmod }
	global CONFIG_SCSI_NCR53C8XX_MAX_TAGS
	if {($CONFIG_SCSI != 0) && ($CONFIG_PCI == 1 && $CONFIG_SCSI_SYM53C8XX_2 != 1) && ($CONFIG_SCSI_NCR53C8XX != 0 || $CONFIG_SCSI_ZALON == 1 || $CONFIG_SCSI_ZALON == 2 || $CONFIG_SCSI_SYM53C8XX != 0)} then {write_int $cfg $autocfg CONFIG_SCSI_NCR53C8XX_MAX_TAGS $CONFIG_SCSI_NCR53C8XX_MAX_TAGS $notmod }
	global CONFIG_SCSI_NCR53C8XX_SYNC
	if {($CONFIG_SCSI != 0) && ($CONFIG_PCI == 1 && $CONFIG_SCSI_SYM53C8XX_2 != 1) && ($CONFIG_SCSI_NCR53C8XX != 0 || $CONFIG_SCSI_ZALON == 1 || $CONFIG_SCSI_ZALON == 2 || $CONFIG_SCSI_SYM53C8XX != 0)} then {write_int $cfg $autocfg CONFIG_SCSI_NCR53C8XX_SYNC $CONFIG_SCSI_NCR53C8XX_SYNC $notmod }
	global CONFIG_SCSI_NCR53C8XX_PROFILE
	if {($CONFIG_SCSI != 0) && ($CONFIG_PCI == 1 && $CONFIG_SCSI_SYM53C8XX_2 != 1) && ($CONFIG_SCSI_NCR53C8XX != 0 || $CONFIG_SCSI_ZALON == 1 || $CONFIG_SCSI_ZALON == 2 || $CONFIG_SCSI_SYM53C8XX != 0)} then {write_tristate $cfg $autocfg CONFIG_SCSI_NCR53C8XX_PROFILE $CONFIG_SCSI_NCR53C8XX_PROFILE [list $notmod] 2 }
	global CONFIG_SCSI_NCR53C8XX_IOMAPPED
	if {($CONFIG_SCSI != 0) && ($CONFIG_PCI == 1 && $CONFIG_SCSI_SYM53C8XX_2 != 1) && ($CONFIG_SCSI_NCR53C8XX != 0 || $CONFIG_SCSI_ZALON == 1 || $CONFIG_SCSI_ZALON == 2 || $CONFIG_SCSI_SYM53C8XX != 0)} then {write_tristate $cfg $autocfg CONFIG_SCSI_NCR53C8XX_IOMAPPED $CONFIG_SCSI_NCR53C8XX_IOMAPPED [list $notmod] 2 }
	global CONFIG_SCSI_NCR53C8XX_PQS_PDS
	if {($CONFIG_SCSI != 0) && ($CONFIG_PCI == 1 && $CONFIG_SCSI_SYM53C8XX_2 != 1) && ($CONFIG_SCSI_NCR53C8XX != 0 || $CONFIG_SCSI_ZALON == 1 || $CONFIG_SCSI_ZALON == 2 || $CONFIG_SCSI_SYM53C8XX != 0) && ($CONFIG_SCSI_SYM53C8XX != 0)} then {write_tristate $cfg $autocfg CONFIG_SCSI_NCR53C8XX_PQS_PDS $CONFIG_SCSI_NCR53C8XX_PQS_PDS [list $notmod] 2 }
	global CONFIG_SCSI_NCR53C8XX_NO_DISCONNECT
	if {($CONFIG_SCSI != 0) && ($CONFIG_PCI == 1 && $CONFIG_SCSI_SYM53C8XX_2 != 1) && ($CONFIG_SCSI_NCR53C8XX != 0 || $CONFIG_SCSI_ZALON == 1 || $CONFIG_SCSI_ZALON == 2 || $CONFIG_SCSI_SYM53C8XX != 0) && ($CONFIG_SCSI_NCR53C8XX_DEFAULT_TAGS == "0")} then {write_tristate $cfg $autocfg CONFIG_SCSI_NCR53C8XX_NO_DISCONNECT $CONFIG_SCSI_NCR53C8XX_NO_DISCONNECT [list $notmod] 2 }
	global CONFIG_SCSI_NCR53C8XX_SYMBIOS_COMPAT
	if {($CONFIG_SCSI != 0) && ($CONFIG_PCI == 1 && $CONFIG_SCSI_SYM53C8XX_2 != 1) && ($CONFIG_SCSI_NCR53C8XX != 0 || $CONFIG_SCSI_ZALON == 1 || $CONFIG_SCSI_ZALON == 2 || $CONFIG_SCSI_SYM53C8XX != 0) && ($CONFIG_EXPERIMENTAL == 1)} then {write_tristate $cfg $autocfg CONFIG_SCSI_NCR53C8XX_SYMBIOS_COMPAT $CONFIG_SCSI_NCR53C8XX_SYMBIOS_COMPAT [list $notmod] 2 }
	global CONFIG_SCSI_MCA_53C9X
	if {($CONFIG_SCSI != 0) && ($CONFIG_MCA == 1) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {write_tristate $cfg $autocfg CONFIG_SCSI_MCA_53C9X $CONFIG_SCSI_MCA_53C9X [list $CONFIG_SCSI] 2 }
	global CONFIG_SCSI_PAS16
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {write_tristate $cfg $autocfg CONFIG_SCSI_PAS16 $CONFIG_SCSI_PAS16 [list $CONFIG_SCSI] 2 }
	global CONFIG_SCSI_PCI2000
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {write_tristate $cfg $autocfg CONFIG_SCSI_PCI2000 $CONFIG_SCSI_PCI2000 [list $CONFIG_SCSI] 2 }
	global CONFIG_SCSI_PCI2220I
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {write_tristate $cfg $autocfg CONFIG_SCSI_PCI2220I $CONFIG_SCSI_PCI2220I [list $CONFIG_SCSI] 2 }
	global CONFIG_SCSI_PSI240I
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {write_tristate $cfg $autocfg CONFIG_SCSI_PSI240I $CONFIG_SCSI_PSI240I [list $CONFIG_SCSI] 2 }
	global CONFIG_SCSI_QLOGIC_FAS
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {write_tristate $cfg $autocfg CONFIG_SCSI_QLOGIC_FAS $CONFIG_SCSI_QLOGIC_FAS [list $CONFIG_SCSI] 2 }
	global CONFIG_SCSI_QLOGIC_ISP
	if {($CONFIG_SCSI != 0) && ($CONFIG_PCI == 1) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {write_tristate $cfg $autocfg CONFIG_SCSI_QLOGIC_ISP $CONFIG_SCSI_QLOGIC_ISP [list $CONFIG_SCSI] 2 }
	global CONFIG_SCSI_QLOGIC_FC
	if {($CONFIG_SCSI != 0) && ($CONFIG_PCI == 1) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {write_tristate $cfg $autocfg CONFIG_SCSI_QLOGIC_FC $CONFIG_SCSI_QLOGIC_FC [list $CONFIG_SCSI] 2 }
	global CONFIG_SCSI_QLOGIC_FC_FIRMWARE
	if {($CONFIG_SCSI != 0) && ($CONFIG_PCI == 1) && ($CONFIG_SCSI_QLOGIC_FC != 0)} then {write_tristate $cfg $autocfg CONFIG_SCSI_QLOGIC_FC_FIRMWARE $CONFIG_SCSI_QLOGIC_FC_FIRMWARE [list $notmod] 2 }
	global CONFIG_SCSI_QLOGIC_1280
	if {($CONFIG_SCSI != 0) && ($CONFIG_PCI == 1) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {write_tristate $cfg $autocfg CONFIG_SCSI_QLOGIC_1280 $CONFIG_SCSI_QLOGIC_1280 [list $CONFIG_SCSI] 2 }
	global CONFIG_SCSI_SIM710
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {write_tristate $cfg $autocfg CONFIG_SCSI_SIM710 $CONFIG_SCSI_SIM710 [list $CONFIG_SCSI] 2 }
	global CONFIG_SCSI_SYM53C416
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {write_tristate $cfg $autocfg CONFIG_SCSI_SYM53C416 $CONFIG_SCSI_SYM53C416 [list $CONFIG_SCSI] 2 }
	global CONFIG_SCSI_DC390T
	if {($CONFIG_SCSI != 0) && ($CONFIG_PCI == 1) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {write_tristate $cfg $autocfg CONFIG_SCSI_DC390T $CONFIG_SCSI_DC390T [list $CONFIG_SCSI] 2 }
	global CONFIG_SCSI_DC390T_NOGENSUPP
	if {($CONFIG_SCSI != 0) && ($CONFIG_PCI == 1) && ($CONFIG_SCSI_DC390T != 0)} then {write_tristate $cfg $autocfg CONFIG_SCSI_DC390T_NOGENSUPP $CONFIG_SCSI_DC390T_NOGENSUPP [list $notmod] 2 }
	global CONFIG_SCSI_T128
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {write_tristate $cfg $autocfg CONFIG_SCSI_T128 $CONFIG_SCSI_T128 [list $CONFIG_SCSI] 2 }
	global CONFIG_SCSI_U14_34F
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {write_tristate $cfg $autocfg CONFIG_SCSI_U14_34F $CONFIG_SCSI_U14_34F [list $CONFIG_SCSI] 2 }
	global CONFIG_SCSI_U14_34F_LINKED_COMMANDS
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI_U14_34F != 0)} then {write_tristate $cfg $autocfg CONFIG_SCSI_U14_34F_LINKED_COMMANDS $CONFIG_SCSI_U14_34F_LINKED_COMMANDS [list $notmod] 2 }
	global CONFIG_SCSI_U14_34F_MAX_TAGS
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI_U14_34F != 0)} then {write_int $cfg $autocfg CONFIG_SCSI_U14_34F_MAX_TAGS $CONFIG_SCSI_U14_34F_MAX_TAGS $notmod }
	global CONFIG_SCSI_NSP32
	if {($CONFIG_SCSI != 0) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {write_tristate $cfg $autocfg CONFIG_SCSI_NSP32 $CONFIG_SCSI_NSP32 [list $CONFIG_SCSI] 2 }
	global CONFIG_SCSI_DEBUG
	if {($CONFIG_SCSI != 0) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {write_tristate $cfg $autocfg CONFIG_SCSI_DEBUG $CONFIG_SCSI_DEBUG [list $CONFIG_SCSI] 2 }
	global CONFIG_SCSI_ACORNSCSI_3
	if {($CONFIG_SCSI != 0) && ($CONFIG_ARCH_ACORN == 1) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {write_tristate $cfg $autocfg CONFIG_SCSI_ACORNSCSI_3 $CONFIG_SCSI_ACORNSCSI_3 [list $CONFIG_SCSI] 2 }
	global CONFIG_SCSI_ACORNSCSI_TAGGED_QUEUE
	if {($CONFIG_SCSI != 0) && ($CONFIG_ARCH_ACORN == 1) && ($CONFIG_SCSI_ACORNSCSI_3 != 0)} then {write_tristate $cfg $autocfg CONFIG_SCSI_ACORNSCSI_TAGGED_QUEUE $CONFIG_SCSI_ACORNSCSI_TAGGED_QUEUE [list $notmod] 2 }
	global CONFIG_SCSI_ACORNSCSI_SYNC
	if {($CONFIG_SCSI != 0) && ($CONFIG_ARCH_ACORN == 1) && ($CONFIG_SCSI_ACORNSCSI_3 != 0)} then {write_tristate $cfg $autocfg CONFIG_SCSI_ACORNSCSI_SYNC $CONFIG_SCSI_ACORNSCSI_SYNC [list $notmod] 2 }
	global CONFIG_SCSI_ARXESCSI
	if {($CONFIG_SCSI != 0) && ($CONFIG_ARCH_ACORN == 1) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {write_tristate $cfg $autocfg CONFIG_SCSI_ARXESCSI $CONFIG_SCSI_ARXESCSI [list $CONFIG_SCSI] 2 }
	global CONFIG_SCSI_CUMANA_2
	if {($CONFIG_SCSI != 0) && ($CONFIG_ARCH_ACORN == 1) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {write_tristate $cfg $autocfg CONFIG_SCSI_CUMANA_2 $CONFIG_SCSI_CUMANA_2 [list $CONFIG_SCSI] 2 }
	global CONFIG_SCSI_EESOXSCSI
	if {($CONFIG_SCSI != 0) && ($CONFIG_ARCH_ACORN == 1) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {write_tristate $cfg $autocfg CONFIG_SCSI_EESOXSCSI $CONFIG_SCSI_EESOXSCSI [list $CONFIG_SCSI] 2 }
	global CONFIG_SCSI_POWERTECSCSI
	if {($CONFIG_SCSI != 0) && ($CONFIG_ARCH_ACORN == 1) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {write_tristate $cfg $autocfg CONFIG_SCSI_POWERTECSCSI $CONFIG_SCSI_POWERTECSCSI [list $CONFIG_SCSI] 2 }
	if {($CONFIG_SCSI != 0) && ($CONFIG_ARCH_ACORN == 1) && ($CONFIG_EXPERIMENTAL == 1)} then {write_comment $cfg $autocfg "The following drivers are not fully supported"}
	global CONFIG_SCSI_CUMANA_1
	if {($CONFIG_SCSI != 0) && ($CONFIG_ARCH_ACORN == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {write_tristate $cfg $autocfg CONFIG_SCSI_CUMANA_1 $CONFIG_SCSI_CUMANA_1 [list $CONFIG_SCSI] 2 }
	global CONFIG_SCSI_ECOSCSI
	if {($CONFIG_SCSI != 0) && ($CONFIG_ARCH_ACORN == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_ARCH_ARC == 1 || $CONFIG_ARCH_A5K == 1) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {write_tristate $cfg $autocfg CONFIG_SCSI_ECOSCSI $CONFIG_SCSI_ECOSCSI [list $CONFIG_SCSI] 2 }
	global CONFIG_SCSI_OAK1
	if {($CONFIG_SCSI != 0) && ($CONFIG_ARCH_ACORN == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {write_tristate $cfg $autocfg CONFIG_SCSI_OAK1 $CONFIG_SCSI_OAK1 [list $CONFIG_SCSI] 2 }
	if {($CONFIG_SCSI != 0) && ($CONFIG_HOTPLUG == 1 && $CONFIG_PCMCIA != 0)} then {write_comment $cfg $autocfg "PCMCIA SCSI adapter support"}
	global CONFIG_SCSI_PCMCIA
	if {($CONFIG_SCSI != 0) && ($CONFIG_HOTPLUG == 1 && $CONFIG_PCMCIA != 0)} then {write_tristate $cfg $autocfg CONFIG_SCSI_PCMCIA $CONFIG_SCSI_PCMCIA [list $notmod] 2 }
	global CONFIG_PCMCIA_AHA152X
	if {($CONFIG_SCSI != 0) && ($CONFIG_HOTPLUG == 1 && $CONFIG_PCMCIA != 0) && ($CONFIG_SCSI_PCMCIA == 1)} then {write_tristate $cfg $autocfg CONFIG_PCMCIA_AHA152X $CONFIG_PCMCIA_AHA152X [list $CONSTANT_M] 2 }
	global CONFIG_PCMCIA_FDOMAIN
	if {($CONFIG_SCSI != 0) && ($CONFIG_HOTPLUG == 1 && $CONFIG_PCMCIA != 0) && ($CONFIG_SCSI_PCMCIA == 1)} then {write_tristate $cfg $autocfg CONFIG_PCMCIA_FDOMAIN $CONFIG_PCMCIA_FDOMAIN [list $CONSTANT_M] 2 }
	global CONFIG_PCMCIA_NINJA_SCSI
	if {($CONFIG_SCSI != 0) && ($CONFIG_HOTPLUG == 1 && $CONFIG_PCMCIA != 0) && ($CONFIG_SCSI_PCMCIA == 1)} then {write_tristate $cfg $autocfg CONFIG_PCMCIA_NINJA_SCSI $CONFIG_PCMCIA_NINJA_SCSI [list $CONSTANT_M] 2 }
	global CONFIG_PCMCIA_QLOGIC
	if {($CONFIG_SCSI != 0) && ($CONFIG_HOTPLUG == 1 && $CONFIG_PCMCIA != 0) && ($CONFIG_SCSI_PCMCIA == 1)} then {write_tristate $cfg $autocfg CONFIG_PCMCIA_QLOGIC $CONFIG_PCMCIA_QLOGIC [list $CONSTANT_M] 2 }
	global CONFIG_PCMCIA_SCSICARD
	if {($CONFIG_SCSI != 0) && ($CONFIG_HOTPLUG == 1 && $CONFIG_PCMCIA != 0) && ($CONFIG_PCMCIA_QLOGIC == 1 || $CONFIG_PCMCIA_AHA152X == 1 || $CONFIG_PCMCIA_FDOMAIN == 1 || $CONFIG_PCMCIA_NINJA_SCSI == 1)} then {write_tristate $cfg $autocfg CONFIG_PCMCIA_SCSICARD $CONSTANT_Y [list $notmod] 2 }
	if {($CONFIG_PCI == 1 && $CONFIG_EXPERIMENTAL == 1)} then {write_comment $cfg $autocfg "IEEE 1394 (FireWire) support (EXPERIMENTAL)"}
	global CONFIG_IEEE1394
	if {($CONFIG_PCI == 1 && $CONFIG_EXPERIMENTAL == 1) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {write_tristate $cfg $autocfg CONFIG_IEEE1394 $CONFIG_IEEE1394 [list $CONFIG_PCI] 2 }
	if {($CONFIG_PCI == 1 && $CONFIG_EXPERIMENTAL == 1) && ($CONFIG_IEEE1394 != 0)} then {write_comment $cfg $autocfg "Device Drivers"}
	global CONFIG_I2C
	global CONFIG_I2C_ALGOBIT
	if {($CONFIG_PCI == 1 && $CONFIG_EXPERIMENTAL == 1) && ($CONFIG_IEEE1394 != 0) && ($CONFIG_I2C == 0 || $CONFIG_I2C_ALGOBIT == 0)} then {write_comment $cfg $autocfg "  Texas Instruments PCILynx requires I2C bit-banging"}
	global CONFIG_IEEE1394_PCILYNX
	if {($CONFIG_PCI == 1 && $CONFIG_EXPERIMENTAL == 1) && ($CONFIG_IEEE1394 != 0) && ($CONFIG_I2C != 0 && $CONFIG_I2C_ALGOBIT != 0) && ($CONFIG_IEEE1394 == 1 || $CONFIG_IEEE1394 == 2 || $CONFIG_IEEE1394 == 4) && ($CONFIG_I2C == 1 || $CONFIG_I2C == 2 || $CONFIG_I2C == 4) && ($CONFIG_I2C_ALGOBIT == 1 || $CONFIG_I2C_ALGOBIT == 2 || $CONFIG_I2C_ALGOBIT == 4)} then {write_tristate $cfg $autocfg CONFIG_IEEE1394_PCILYNX $CONFIG_IEEE1394_PCILYNX [list $CONFIG_IEEE1394 $CONFIG_I2C $CONFIG_I2C_ALGOBIT] 2 }
	global CONFIG_IEEE1394_OHCI1394
	if {($CONFIG_PCI == 1 && $CONFIG_EXPERIMENTAL == 1) && ($CONFIG_IEEE1394 != 0) && ($CONFIG_IEEE1394 == 1 || $CONFIG_IEEE1394 == 2 || $CONFIG_IEEE1394 == 4)} then {write_tristate $cfg $autocfg CONFIG_IEEE1394_OHCI1394 $CONFIG_IEEE1394_OHCI1394 [list $CONFIG_IEEE1394] 2 }
	if {($CONFIG_PCI == 1 && $CONFIG_EXPERIMENTAL == 1) && ($CONFIG_IEEE1394 != 0)} then {write_comment $cfg $autocfg "Protocol Drivers"}
	global CONFIG_IEEE1394_VIDEO1394
	if {($CONFIG_PCI == 1 && $CONFIG_EXPERIMENTAL == 1) && ($CONFIG_IEEE1394 != 0) && ($CONFIG_IEEE1394_OHCI1394 == 1 || $CONFIG_IEEE1394_OHCI1394 == 2 || $CONFIG_IEEE1394_OHCI1394 == 4)} then {write_tristate $cfg $autocfg CONFIG_IEEE1394_VIDEO1394 $CONFIG_IEEE1394_VIDEO1394 [list $CONFIG_IEEE1394_OHCI1394] 2 }
	global CONFIG_IEEE1394_SBP2
	if {($CONFIG_PCI == 1 && $CONFIG_EXPERIMENTAL == 1) && ($CONFIG_IEEE1394 != 0) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4) && ($CONFIG_IEEE1394 == 1 || $CONFIG_IEEE1394 == 2 || $CONFIG_IEEE1394 == 4)} then {write_tristate $cfg $autocfg CONFIG_IEEE1394_SBP2 $CONFIG_IEEE1394_SBP2 [list $CONFIG_SCSI $CONFIG_IEEE1394] 2 }
	global CONFIG_IEEE1394_SBP2_PHYS_DMA
	if {($CONFIG_PCI == 1 && $CONFIG_EXPERIMENTAL == 1) && ($CONFIG_IEEE1394 != 0) && ($CONFIG_IEEE1394_SBP2 != 0)} then {write_tristate $cfg $autocfg CONFIG_IEEE1394_SBP2_PHYS_DMA $CONFIG_IEEE1394_SBP2_PHYS_DMA [list $notmod] 2 }
	global CONFIG_IEEE1394_ETH1394
	if {($CONFIG_PCI == 1 && $CONFIG_EXPERIMENTAL == 1) && ($CONFIG_IEEE1394 != 0) && ($CONFIG_IEEE1394 == 1 || $CONFIG_IEEE1394 == 2 || $CONFIG_IEEE1394 == 4)} then {write_tristate $cfg $autocfg CONFIG_IEEE1394_ETH1394 $CONFIG_IEEE1394_ETH1394 [list $CONFIG_IEEE1394] 2 }
	global CONFIG_IEEE1394_DV1394
	if {($CONFIG_PCI == 1 && $CONFIG_EXPERIMENTAL == 1) && ($CONFIG_IEEE1394 != 0) && ($CONFIG_IEEE1394_OHCI1394 == 1 || $CONFIG_IEEE1394_OHCI1394 == 2 || $CONFIG_IEEE1394_OHCI1394 == 4)} then {write_tristate $cfg $autocfg CONFIG_IEEE1394_DV1394 $CONFIG_IEEE1394_DV1394 [list $CONFIG_IEEE1394_OHCI1394] 2 }
	global CONFIG_IEEE1394_RAWIO
	if {($CONFIG_PCI == 1 && $CONFIG_EXPERIMENTAL == 1) && ($CONFIG_IEEE1394 != 0) && ($CONFIG_IEEE1394 == 1 || $CONFIG_IEEE1394 == 2 || $CONFIG_IEEE1394 == 4)} then {write_tristate $cfg $autocfg CONFIG_IEEE1394_RAWIO $CONFIG_IEEE1394_RAWIO [list $CONFIG_IEEE1394] 2 }
	global CONFIG_IEEE1394_CMP
	if {($CONFIG_PCI == 1 && $CONFIG_EXPERIMENTAL == 1) && ($CONFIG_IEEE1394 != 0) && ($CONFIG_IEEE1394 == 1 || $CONFIG_IEEE1394 == 2 || $CONFIG_IEEE1394 == 4)} then {write_tristate $cfg $autocfg CONFIG_IEEE1394_CMP $CONFIG_IEEE1394_CMP [list $CONFIG_IEEE1394] 2 }
	global CONFIG_IEEE1394_AMDTP
	if {($CONFIG_PCI == 1 && $CONFIG_EXPERIMENTAL == 1) && ($CONFIG_IEEE1394 != 0) && ($CONFIG_IEEE1394_CMP != 0) && ($CONFIG_IEEE1394_OHCI1394 == 1 || $CONFIG_IEEE1394_OHCI1394 == 2 || $CONFIG_IEEE1394_OHCI1394 == 4) && ($CONFIG_IEEE1394_CMP == 1 || $CONFIG_IEEE1394_CMP == 2 || $CONFIG_IEEE1394_CMP == 4)} then {write_tristate $cfg $autocfg CONFIG_IEEE1394_AMDTP $CONFIG_IEEE1394_AMDTP [list $CONFIG_IEEE1394_OHCI1394 $CONFIG_IEEE1394_CMP] 2 }
	global CONFIG_IEEE1394_VERBOSEDEBUG
	if {($CONFIG_PCI == 1 && $CONFIG_EXPERIMENTAL == 1) && ($CONFIG_IEEE1394 != 0)} then {write_tristate $cfg $autocfg CONFIG_IEEE1394_VERBOSEDEBUG $CONFIG_IEEE1394_VERBOSEDEBUG [list $notmod] 2 }
	global CONFIG_IEEE1394_OUI_DB
	if {($CONFIG_PCI == 1 && $CONFIG_EXPERIMENTAL == 1) && ($CONFIG_IEEE1394 != 0)} then {write_tristate $cfg $autocfg CONFIG_IEEE1394_OUI_DB $CONFIG_IEEE1394_OUI_DB [list $notmod] 2 }
	write_comment $cfg $autocfg "I2O device support"
	global CONFIG_I2O
	write_tristate $cfg $autocfg CONFIG_I2O $CONFIG_I2O [list $notmod] 2
	global CONFIG_I2O_PCI
	if {($CONFIG_PCI == 1) && ($CONFIG_I2O == 1 || $CONFIG_I2O == 2 || $CONFIG_I2O == 4)} then {write_tristate $cfg $autocfg CONFIG_I2O_PCI $CONFIG_I2O_PCI [list $CONFIG_I2O] 2 }
	global CONFIG_I2O_BLOCK
	if {($CONFIG_I2O == 1 || $CONFIG_I2O == 2 || $CONFIG_I2O == 4)} then {write_tristate $cfg $autocfg CONFIG_I2O_BLOCK $CONFIG_I2O_BLOCK [list $CONFIG_I2O] 2 }
	global CONFIG_I2O_LAN
	if {($CONFIG_NET == 1) && ($CONFIG_I2O == 1 || $CONFIG_I2O == 2 || $CONFIG_I2O == 4)} then {write_tristate $cfg $autocfg CONFIG_I2O_LAN $CONFIG_I2O_LAN [list $CONFIG_I2O] 2 }
	global CONFIG_I2O_SCSI
	if {($CONFIG_I2O == 1 || $CONFIG_I2O == 2 || $CONFIG_I2O == 4) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {write_tristate $cfg $autocfg CONFIG_I2O_SCSI $CONFIG_I2O_SCSI [list $CONFIG_I2O $CONFIG_SCSI] 2 }
	global CONFIG_I2O_PROC
	if {($CONFIG_I2O == 1 || $CONFIG_I2O == 2 || $CONFIG_I2O == 4)} then {write_tristate $cfg $autocfg CONFIG_I2O_PROC $CONFIG_I2O_PROC [list $CONFIG_I2O] 2 }
	write_comment $cfg $autocfg "ISDN subsystem"
	global CONFIG_ISDN
	write_tristate $cfg $autocfg CONFIG_ISDN $CONFIG_ISDN [list $notmod] 2
	global CONFIG_ISDN_BOOL
	if {($CONFIG_ISDN != 0)} then {write_tristate $cfg $autocfg CONFIG_ISDN_BOOL $CONSTANT_Y [list $notmod] 2 }
	global CONFIG_ISDN_PPP
	if {($CONFIG_ISDN != 0) && ($CONFIG_INET != 0)} then {write_tristate $cfg $autocfg CONFIG_ISDN_PPP $CONFIG_ISDN_PPP [list $notmod] 2 }
	global CONFIG_IPPP_FILTER
	if {($CONFIG_ISDN != 0) && ($CONFIG_INET != 0) && ($CONFIG_ISDN_PPP != 0) && ($CONFIG_FILTER == 1 || $CONFIG_FILTER == 4)} then {write_tristate $cfg $autocfg CONFIG_IPPP_FILTER $CONFIG_IPPP_FILTER [list $CONFIG_FILTER] 2 }
	global CONFIG_ISDN_PPP_VJ
	if {($CONFIG_ISDN != 0) && ($CONFIG_INET != 0) && ($CONFIG_ISDN_PPP != 0)} then {write_tristate $cfg $autocfg CONFIG_ISDN_PPP_VJ $CONFIG_ISDN_PPP_VJ [list $notmod] 2 }
	global CONFIG_ISDN_MPP
	if {($CONFIG_ISDN != 0) && ($CONFIG_INET != 0) && ($CONFIG_ISDN_PPP != 0)} then {write_tristate $cfg $autocfg CONFIG_ISDN_MPP $CONFIG_ISDN_MPP [list $notmod] 2 }
	global CONFIG_ISDN_PPP_BSDCOMP
	if {($CONFIG_ISDN != 0) && ($CONFIG_INET != 0) && ($CONFIG_ISDN_PPP != 0) && ($CONFIG_ISDN == 1 || $CONFIG_ISDN == 2 || $CONFIG_ISDN == 4)} then {write_tristate $cfg $autocfg CONFIG_ISDN_PPP_BSDCOMP $CONFIG_ISDN_PPP_BSDCOMP [list $CONFIG_ISDN] 2 }
	global CONFIG_ISDN_AUDIO
	if {($CONFIG_ISDN != 0)} then {write_tristate $cfg $autocfg CONFIG_ISDN_AUDIO $CONFIG_ISDN_AUDIO [list $notmod] 2 }
	global CONFIG_ISDN_TTY_FAX
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_AUDIO != 0)} then {write_tristate $cfg $autocfg CONFIG_ISDN_TTY_FAX $CONFIG_ISDN_TTY_FAX [list $notmod] 2 }
	global CONFIG_ISDN_X25
	if {($CONFIG_ISDN != 0) && ($CONFIG_X25 != 0)} then {write_tristate $cfg $autocfg CONFIG_ISDN_X25 $CONFIG_ISDN_X25 [list $notmod] 2 }
	if {($CONFIG_ISDN != 0)} then {write_comment $cfg $autocfg "ISDN feature submodules"}
	global CONFIG_ISDN_DRV_LOOP
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN == 1 || $CONFIG_ISDN == 2 || $CONFIG_ISDN == 4)} then {write_tristate $cfg $autocfg CONFIG_ISDN_DRV_LOOP $CONFIG_ISDN_DRV_LOOP [list $CONFIG_ISDN] 2 }
	global CONFIG_ISDN_DIVERSION
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN == 1 || $CONFIG_ISDN == 2 || $CONFIG_ISDN == 4)} then {write_tristate $cfg $autocfg CONFIG_ISDN_DIVERSION $CONFIG_ISDN_DIVERSION [list $CONFIG_ISDN] 2 }
	if {($CONFIG_ISDN != 0)} then {write_comment $cfg $autocfg "low-level hardware drivers"}
	if {($CONFIG_ISDN != 0)} then {write_comment $cfg $autocfg "Passive ISDN cards"}
	global CONFIG_ISDN_DRV_HISAX
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN == 1 || $CONFIG_ISDN == 2 || $CONFIG_ISDN == 4)} then {write_tristate $cfg $autocfg CONFIG_ISDN_DRV_HISAX $CONFIG_ISDN_DRV_HISAX [list $CONFIG_ISDN] 2 }
	global CONFIG_ISDN_HISAX
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_HISAX != 0)} then {write_tristate $cfg $autocfg CONFIG_ISDN_HISAX $CONSTANT_Y [list $notmod] 2 }
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_HISAX != 0)} then {write_comment $cfg $autocfg "  D-channel protocol features"}
	global CONFIG_HISAX_EURO
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_HISAX != 0)} then {write_tristate $cfg $autocfg CONFIG_HISAX_EURO $CONFIG_HISAX_EURO [list $notmod] 2 }
	global CONFIG_DE_AOC
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_HISAX != 0) && ($CONFIG_HISAX_EURO != 0)} then {write_tristate $cfg $autocfg CONFIG_DE_AOC $CONFIG_DE_AOC [list $notmod] 2 }
	global CONFIG_HISAX_NO_SENDCOMPLETE
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_HISAX != 0) && ($CONFIG_HISAX_EURO != 0)} then {write_tristate $cfg $autocfg CONFIG_HISAX_NO_SENDCOMPLETE $CONFIG_HISAX_NO_SENDCOMPLETE [list $notmod] 2 }
	global CONFIG_HISAX_NO_LLC
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_HISAX != 0) && ($CONFIG_HISAX_EURO != 0)} then {write_tristate $cfg $autocfg CONFIG_HISAX_NO_LLC $CONFIG_HISAX_NO_LLC [list $notmod] 2 }
	global CONFIG_HISAX_NO_KEYPAD
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_HISAX != 0) && ($CONFIG_HISAX_EURO != 0)} then {write_tristate $cfg $autocfg CONFIG_HISAX_NO_KEYPAD $CONFIG_HISAX_NO_KEYPAD [list $notmod] 2 }
	global CONFIG_HISAX_1TR6
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_HISAX != 0)} then {write_tristate $cfg $autocfg CONFIG_HISAX_1TR6 $CONFIG_HISAX_1TR6 [list $notmod] 2 }
	global CONFIG_HISAX_NI1
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_HISAX != 0)} then {write_tristate $cfg $autocfg CONFIG_HISAX_NI1 $CONFIG_HISAX_NI1 [list $notmod] 2 }
	global CONFIG_HISAX_MAX_CARDS
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_HISAX != 0)} then {write_int $cfg $autocfg CONFIG_HISAX_MAX_CARDS $CONFIG_HISAX_MAX_CARDS $notmod }
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_HISAX != 0)} then {write_comment $cfg $autocfg "  HiSax supported cards"}
	global CONFIG_HISAX_16_0
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_HISAX != 0) && ($CONFIG_ISA != 0)} then {write_tristate $cfg $autocfg CONFIG_HISAX_16_0 $CONFIG_HISAX_16_0 [list $notmod] 2 }
	global CONFIG_HISAX_16_3
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_HISAX != 0) && ($CONFIG_ISA != 0)} then {write_tristate $cfg $autocfg CONFIG_HISAX_16_3 $CONFIG_HISAX_16_3 [list $notmod] 2 }
	global CONFIG_HISAX_AVM_A1
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_HISAX != 0) && ($CONFIG_ISA != 0)} then {write_tristate $cfg $autocfg CONFIG_HISAX_AVM_A1 $CONFIG_HISAX_AVM_A1 [list $notmod] 2 }
	global CONFIG_HISAX_IX1MICROR2
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_HISAX != 0) && ($CONFIG_ISA != 0)} then {write_tristate $cfg $autocfg CONFIG_HISAX_IX1MICROR2 $CONFIG_HISAX_IX1MICROR2 [list $notmod] 2 }
	global CONFIG_HISAX_ASUSCOM
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_HISAX != 0) && ($CONFIG_ISA != 0)} then {write_tristate $cfg $autocfg CONFIG_HISAX_ASUSCOM $CONFIG_HISAX_ASUSCOM [list $notmod] 2 }
	global CONFIG_HISAX_TELEINT
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_HISAX != 0) && ($CONFIG_ISA != 0)} then {write_tristate $cfg $autocfg CONFIG_HISAX_TELEINT $CONFIG_HISAX_TELEINT [list $notmod] 2 }
	global CONFIG_HISAX_HFCS
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_HISAX != 0) && ($CONFIG_ISA != 0)} then {write_tristate $cfg $autocfg CONFIG_HISAX_HFCS $CONFIG_HISAX_HFCS [list $notmod] 2 }
	global CONFIG_HISAX_SPORTSTER
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_HISAX != 0) && ($CONFIG_ISA != 0)} then {write_tristate $cfg $autocfg CONFIG_HISAX_SPORTSTER $CONFIG_HISAX_SPORTSTER [list $notmod] 2 }
	global CONFIG_HISAX_MIC
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_HISAX != 0) && ($CONFIG_ISA != 0)} then {write_tristate $cfg $autocfg CONFIG_HISAX_MIC $CONFIG_HISAX_MIC [list $notmod] 2 }
	global CONFIG_HISAX_ISURF
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_HISAX != 0) && ($CONFIG_ISA != 0)} then {write_tristate $cfg $autocfg CONFIG_HISAX_ISURF $CONFIG_HISAX_ISURF [list $notmod] 2 }
	global CONFIG_HISAX_HSTSAPHIR
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_HISAX != 0) && ($CONFIG_ISA != 0)} then {write_tristate $cfg $autocfg CONFIG_HISAX_HSTSAPHIR $CONFIG_HISAX_HSTSAPHIR [list $notmod] 2 }
	global CONFIG_HISAX_TELESPCI
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_HISAX != 0)} then {write_tristate $cfg $autocfg CONFIG_HISAX_TELESPCI $CONFIG_HISAX_TELESPCI [list $notmod] 2 }
	global CONFIG_HISAX_S0BOX
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_HISAX != 0)} then {write_tristate $cfg $autocfg CONFIG_HISAX_S0BOX $CONFIG_HISAX_S0BOX [list $notmod] 2 }
	global CONFIG_HISAX_FRITZPCI
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_HISAX != 0)} then {write_tristate $cfg $autocfg CONFIG_HISAX_FRITZPCI $CONFIG_HISAX_FRITZPCI [list $notmod] 2 }
	global CONFIG_HISAX_AVM_A1_PCMCIA
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_HISAX != 0)} then {write_tristate $cfg $autocfg CONFIG_HISAX_AVM_A1_PCMCIA $CONFIG_HISAX_AVM_A1_PCMCIA [list $notmod] 2 }
	global CONFIG_HISAX_ELSA
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_HISAX != 0)} then {write_tristate $cfg $autocfg CONFIG_HISAX_ELSA $CONFIG_HISAX_ELSA [list $notmod] 2 }
	global CONFIG_HISAX_DIEHLDIVA
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_HISAX != 0)} then {write_tristate $cfg $autocfg CONFIG_HISAX_DIEHLDIVA $CONFIG_HISAX_DIEHLDIVA [list $notmod] 2 }
	global CONFIG_HISAX_SEDLBAUER
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_HISAX != 0)} then {write_tristate $cfg $autocfg CONFIG_HISAX_SEDLBAUER $CONFIG_HISAX_SEDLBAUER [list $notmod] 2 }
	global CONFIG_HISAX_NETJET
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_HISAX != 0)} then {write_tristate $cfg $autocfg CONFIG_HISAX_NETJET $CONFIG_HISAX_NETJET [list $notmod] 2 }
	global CONFIG_HISAX_NETJET_U
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_HISAX != 0)} then {write_tristate $cfg $autocfg CONFIG_HISAX_NETJET_U $CONFIG_HISAX_NETJET_U [list $notmod] 2 }
	global CONFIG_HISAX_NICCY
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_HISAX != 0)} then {write_tristate $cfg $autocfg CONFIG_HISAX_NICCY $CONFIG_HISAX_NICCY [list $notmod] 2 }
	global CONFIG_HISAX_BKM_A4T
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_HISAX != 0)} then {write_tristate $cfg $autocfg CONFIG_HISAX_BKM_A4T $CONFIG_HISAX_BKM_A4T [list $notmod] 2 }
	global CONFIG_HISAX_SCT_QUADRO
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_HISAX != 0)} then {write_tristate $cfg $autocfg CONFIG_HISAX_SCT_QUADRO $CONFIG_HISAX_SCT_QUADRO [list $notmod] 2 }
	global CONFIG_HISAX_GAZEL
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_HISAX != 0)} then {write_tristate $cfg $autocfg CONFIG_HISAX_GAZEL $CONFIG_HISAX_GAZEL [list $notmod] 2 }
	global CONFIG_HISAX_HFC_PCI
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_HISAX != 0)} then {write_tristate $cfg $autocfg CONFIG_HISAX_HFC_PCI $CONFIG_HISAX_HFC_PCI [list $notmod] 2 }
	global CONFIG_HISAX_W6692
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_HISAX != 0)} then {write_tristate $cfg $autocfg CONFIG_HISAX_W6692 $CONFIG_HISAX_W6692 [list $notmod] 2 }
	global CONFIG_HISAX_HFC_SX
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_HISAX != 0)} then {write_tristate $cfg $autocfg CONFIG_HISAX_HFC_SX $CONFIG_HISAX_HFC_SX [list $notmod] 2 }
	global CONFIG_HISAX_ENTERNOW_PCI
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_HISAX != 0) && ($CONFIG_EXPERIMENTAL != 0)} then {write_tristate $cfg $autocfg CONFIG_HISAX_ENTERNOW_PCI $CONFIG_HISAX_ENTERNOW_PCI [list $notmod] 2 }
	global CONFIG_HISAX_DEBUG
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_HISAX != 0)} then {write_tristate $cfg $autocfg CONFIG_HISAX_DEBUG $CONFIG_HISAX_DEBUG [list $notmod] 2 }
	global CONFIG_HISAX_SEDLBAUER_CS
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_HISAX != 0) && ($CONFIG_ISDN_DRV_HISAX == 1 || $CONFIG_ISDN_DRV_HISAX == 2 || $CONFIG_ISDN_DRV_HISAX == 4) && ($CONFIG_PCMCIA == 1 || $CONFIG_PCMCIA == 2 || $CONFIG_PCMCIA == 4)} then {write_tristate $cfg $autocfg CONFIG_HISAX_SEDLBAUER_CS $CONFIG_HISAX_SEDLBAUER_CS [list $CONFIG_ISDN_DRV_HISAX $CONFIG_PCMCIA] 2 }
	global CONFIG_HISAX_ELSA_CS
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_HISAX != 0) && ($CONFIG_ISDN_DRV_HISAX == 1 || $CONFIG_ISDN_DRV_HISAX == 2 || $CONFIG_ISDN_DRV_HISAX == 4) && ($CONFIG_PCMCIA == 1 || $CONFIG_PCMCIA == 2 || $CONFIG_PCMCIA == 4)} then {write_tristate $cfg $autocfg CONFIG_HISAX_ELSA_CS $CONFIG_HISAX_ELSA_CS [list $CONFIG_ISDN_DRV_HISAX $CONFIG_PCMCIA] 2 }
	global CONFIG_HISAX_AVM_A1_CS
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_HISAX != 0) && ($CONFIG_ISDN_DRV_HISAX == 1 || $CONFIG_ISDN_DRV_HISAX == 2 || $CONFIG_ISDN_DRV_HISAX == 4) && ($CONFIG_PCMCIA == 1 || $CONFIG_PCMCIA == 2 || $CONFIG_PCMCIA == 4) && ($CONFIG_HISAX_AVM_A1_PCMCIA == 1 || $CONFIG_HISAX_AVM_A1_PCMCIA == 2 || $CONFIG_HISAX_AVM_A1_PCMCIA == 4)} then {write_tristate $cfg $autocfg CONFIG_HISAX_AVM_A1_CS $CONFIG_HISAX_AVM_A1_CS [list $CONFIG_ISDN_DRV_HISAX $CONFIG_PCMCIA $CONFIG_HISAX_AVM_A1_PCMCIA] 2 }
	global CONFIG_HISAX_ST5481
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_HISAX != 0) && ($CONFIG_ISDN_DRV_HISAX == 1 || $CONFIG_ISDN_DRV_HISAX == 2 || $CONFIG_ISDN_DRV_HISAX == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {write_tristate $cfg $autocfg CONFIG_HISAX_ST5481 $CONFIG_HISAX_ST5481 [list $CONFIG_ISDN_DRV_HISAX $CONFIG_EXPERIMENTAL] 2 }
	global CONFIG_HISAX_FRITZ_PCIPNP
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_HISAX != 0) && ($CONFIG_ISDN_DRV_HISAX == 1 || $CONFIG_ISDN_DRV_HISAX == 2 || $CONFIG_ISDN_DRV_HISAX == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {write_tristate $cfg $autocfg CONFIG_HISAX_FRITZ_PCIPNP $CONFIG_HISAX_FRITZ_PCIPNP [list $CONFIG_ISDN_DRV_HISAX $CONFIG_EXPERIMENTAL] 2 }
	global CONFIG_USB_AUERISDN
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_HISAX != 0) && ($CONFIG_ISDN_DRV_HISAX == 1 || $CONFIG_ISDN_DRV_HISAX == 2 || $CONFIG_ISDN_DRV_HISAX == 4)} then {write_tristate $cfg $autocfg CONFIG_USB_AUERISDN $CONFIG_USB_AUERISDN [list $CONFIG_ISDN_DRV_HISAX] 2 }
	if {($CONFIG_ISDN != 0)} then {write_comment $cfg $autocfg "Active ISDN cards"}
	global CONFIG_ISDN_DRV_ICN
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN == 1 || $CONFIG_ISDN == 2 || $CONFIG_ISDN == 4)} then {write_tristate $cfg $autocfg CONFIG_ISDN_DRV_ICN $CONFIG_ISDN_DRV_ICN [list $CONFIG_ISDN] 2 }
	global CONFIG_ISDN_DRV_PCBIT
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN == 1 || $CONFIG_ISDN == 2 || $CONFIG_ISDN == 4)} then {write_tristate $cfg $autocfg CONFIG_ISDN_DRV_PCBIT $CONFIG_ISDN_DRV_PCBIT [list $CONFIG_ISDN] 2 }
	global CONFIG_ISDN_DRV_SC
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN == 1 || $CONFIG_ISDN == 2 || $CONFIG_ISDN == 4)} then {write_tristate $cfg $autocfg CONFIG_ISDN_DRV_SC $CONFIG_ISDN_DRV_SC [list $CONFIG_ISDN] 2 }
	global CONFIG_ISDN_DRV_ACT2000
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN == 1 || $CONFIG_ISDN == 2 || $CONFIG_ISDN == 4)} then {write_tristate $cfg $autocfg CONFIG_ISDN_DRV_ACT2000 $CONFIG_ISDN_DRV_ACT2000 [list $CONFIG_ISDN] 2 }
	global CONFIG_ISDN_DRV_EICON
	if {($CONFIG_ISDN != 0)} then {write_tristate $cfg $autocfg CONFIG_ISDN_DRV_EICON $CONFIG_ISDN_DRV_EICON [list $notmod] 2 }
	global CONFIG_ISDN_DRV_EICON_DIVAS
	global CONFIG_ISDN_DRV_EICON_OLD
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_EICON != 0) && ($CONFIG_ISDN_DRV_EICON_OLD != 1) && ($CONFIG_ISDN == 1 || $CONFIG_ISDN == 2 || $CONFIG_ISDN == 4) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {write_tristate $cfg $autocfg CONFIG_ISDN_DRV_EICON_DIVAS $CONFIG_ISDN_DRV_EICON_DIVAS [list $CONFIG_ISDN $CONFIG_PCI] 2 }
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_EICON != 0) && ($CONFIG_ISDN_DRV_EICON_DIVAS != 1) && ($CONFIG_ISDN == 1 || $CONFIG_ISDN == 2 || $CONFIG_ISDN == 4)} then {write_tristate $cfg $autocfg CONFIG_ISDN_DRV_EICON_OLD $CONFIG_ISDN_DRV_EICON_OLD [list $CONFIG_ISDN] 2 }
	global CONFIG_ISDN_DRV_EICON_PCI
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_EICON != 0) && ($CONFIG_ISDN_DRV_EICON_DIVAS != 1) && ($CONFIG_ISDN_DRV_EICON_OLD != 0) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 4)} then {write_tristate $cfg $autocfg CONFIG_ISDN_DRV_EICON_PCI $CONFIG_ISDN_DRV_EICON_PCI [list $CONFIG_PCI] 2 }
	global CONFIG_ISDN_DRV_EICON_ISA
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_DRV_EICON != 0) && ($CONFIG_ISDN_DRV_EICON_DIVAS != 1) && ($CONFIG_ISDN_DRV_EICON_OLD != 0)} then {write_tristate $cfg $autocfg CONFIG_ISDN_DRV_EICON_ISA $CONFIG_ISDN_DRV_EICON_ISA [list $notmod] 2 }
	global CONFIG_ISDN_DRV_TPAM
	if {($CONFIG_ISDN != 0) && ($CONFIG_EXPERIMENTAL != 0) && ($CONFIG_ISDN == 1 || $CONFIG_ISDN == 2 || $CONFIG_ISDN == 4) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {write_tristate $cfg $autocfg CONFIG_ISDN_DRV_TPAM $CONFIG_ISDN_DRV_TPAM [list $CONFIG_ISDN $CONFIG_PCI] 2 }
	global CONFIG_ISDN_CAPI
	if {($CONFIG_ISDN != 0)} then {write_tristate $cfg $autocfg CONFIG_ISDN_CAPI $CONFIG_ISDN_CAPI [list $notmod] 2 }
	global CONFIG_ISDN_DRV_AVMB1_VERBOSE_REASON
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_CAPI != 0)} then {write_tristate $cfg $autocfg CONFIG_ISDN_DRV_AVMB1_VERBOSE_REASON $CONFIG_ISDN_DRV_AVMB1_VERBOSE_REASON [list $notmod] 2 }
	global CONFIG_ISDN_CAPI_MIDDLEWARE
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_CAPI != 0) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 4)} then {write_tristate $cfg $autocfg CONFIG_ISDN_CAPI_MIDDLEWARE $CONFIG_ISDN_CAPI_MIDDLEWARE [list $CONFIG_EXPERIMENTAL] 2 }
	global CONFIG_ISDN_CAPI_CAPI20
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_CAPI != 0) && ($CONFIG_ISDN_CAPI == 1 || $CONFIG_ISDN_CAPI == 2 || $CONFIG_ISDN_CAPI == 4)} then {write_tristate $cfg $autocfg CONFIG_ISDN_CAPI_CAPI20 $CONFIG_ISDN_CAPI_CAPI20 [list $CONFIG_ISDN_CAPI] 2 }
	global CONFIG_ISDN_CAPI_CAPIFS_BOOL
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_CAPI != 0) && ($CONFIG_ISDN_CAPI_MIDDLEWARE == 1) && ($CONFIG_ISDN_CAPI_CAPI20 == 1 || $CONFIG_ISDN_CAPI_CAPI20 == 2 || $CONFIG_ISDN_CAPI_CAPI20 == 4)} then {write_tristate $cfg $autocfg CONFIG_ISDN_CAPI_CAPIFS_BOOL $CONFIG_ISDN_CAPI_CAPIFS_BOOL [list $CONFIG_ISDN_CAPI_CAPI20] 1 }
	global CONFIG_ISDN_CAPI_CAPIFS
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_CAPI != 0) && ($CONFIG_ISDN_CAPI_MIDDLEWARE == 1) && ($CONFIG_ISDN_CAPI_CAPIFS_BOOL == 1)} then {write_tristate $cfg $autocfg CONFIG_ISDN_CAPI_CAPIFS $CONFIG_ISDN_CAPI_CAPI20 [list $notmod] 2 }
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_CAPI != 0) && ($CONFIG_ISDN_CAPI_MIDDLEWARE == 1) && ($CONFIG_ISDN_CAPI_CAPIFS_BOOL != 1)} then {write_tristate $cfg $autocfg CONFIG_ISDN_CAPI_CAPIFS $CONSTANT_N [list $notmod] 2 }
	global CONFIG_ISDN_CAPI_CAPIDRV
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_CAPI != 0) && ($CONFIG_ISDN_CAPI == 1 || $CONFIG_ISDN_CAPI == 2 || $CONFIG_ISDN_CAPI == 4) && ($CONFIG_ISDN == 1 || $CONFIG_ISDN == 2 || $CONFIG_ISDN == 4)} then {write_tristate $cfg $autocfg CONFIG_ISDN_CAPI_CAPIDRV $CONFIG_ISDN_CAPI_CAPIDRV [list $CONFIG_ISDN_CAPI $CONFIG_ISDN] 2 }
	global CONFIG_ISDN_DRV_AVMB1_B1ISA
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_CAPI != 0) && ($CONFIG_ISDN_CAPI == 1 || $CONFIG_ISDN_CAPI == 2 || $CONFIG_ISDN_CAPI == 4)} then {write_tristate $cfg $autocfg CONFIG_ISDN_DRV_AVMB1_B1ISA $CONFIG_ISDN_DRV_AVMB1_B1ISA [list $CONFIG_ISDN_CAPI] 2 }
	global CONFIG_ISDN_DRV_AVMB1_B1PCI
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_CAPI != 0) && ($CONFIG_ISDN_CAPI == 1 || $CONFIG_ISDN_CAPI == 2 || $CONFIG_ISDN_CAPI == 4) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {write_tristate $cfg $autocfg CONFIG_ISDN_DRV_AVMB1_B1PCI $CONFIG_ISDN_DRV_AVMB1_B1PCI [list $CONFIG_ISDN_CAPI $CONFIG_PCI] 2 }
	global CONFIG_ISDN_DRV_AVMB1_B1PCIV4
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_CAPI != 0) && ($CONFIG_ISDN_DRV_AVMB1_B1PCI == 1 || $CONFIG_ISDN_DRV_AVMB1_B1PCI == 2 || $CONFIG_ISDN_DRV_AVMB1_B1PCI == 4)} then {write_tristate $cfg $autocfg CONFIG_ISDN_DRV_AVMB1_B1PCIV4 $CONFIG_ISDN_DRV_AVMB1_B1PCIV4 [list $CONFIG_ISDN_DRV_AVMB1_B1PCI] 1 }
	global CONFIG_ISDN_DRV_AVMB1_T1ISA
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_CAPI != 0) && ($CONFIG_ISDN_CAPI == 1 || $CONFIG_ISDN_CAPI == 2 || $CONFIG_ISDN_CAPI == 4)} then {write_tristate $cfg $autocfg CONFIG_ISDN_DRV_AVMB1_T1ISA $CONFIG_ISDN_DRV_AVMB1_T1ISA [list $CONFIG_ISDN_CAPI] 2 }
	global CONFIG_ISDN_DRV_AVMB1_B1PCMCIA
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_CAPI != 0) && ($CONFIG_ISDN_CAPI == 1 || $CONFIG_ISDN_CAPI == 2 || $CONFIG_ISDN_CAPI == 4)} then {write_tristate $cfg $autocfg CONFIG_ISDN_DRV_AVMB1_B1PCMCIA $CONFIG_ISDN_DRV_AVMB1_B1PCMCIA [list $CONFIG_ISDN_CAPI] 2 }
	global CONFIG_ISDN_DRV_AVMB1_AVM_CS
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_CAPI != 0) && ($CONFIG_ISDN_DRV_AVMB1_B1PCMCIA == 1 || $CONFIG_ISDN_DRV_AVMB1_B1PCMCIA == 2 || $CONFIG_ISDN_DRV_AVMB1_B1PCMCIA == 4) && ($CONFIG_PCMCIA == 1 || $CONFIG_PCMCIA == 2 || $CONFIG_PCMCIA == 4)} then {write_tristate $cfg $autocfg CONFIG_ISDN_DRV_AVMB1_AVM_CS $CONFIG_ISDN_DRV_AVMB1_AVM_CS [list $CONFIG_ISDN_DRV_AVMB1_B1PCMCIA $CONFIG_PCMCIA] 2 }
	global CONFIG_ISDN_DRV_AVMB1_T1PCI
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_CAPI != 0) && ($CONFIG_ISDN_CAPI == 1 || $CONFIG_ISDN_CAPI == 2 || $CONFIG_ISDN_CAPI == 4) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {write_tristate $cfg $autocfg CONFIG_ISDN_DRV_AVMB1_T1PCI $CONFIG_ISDN_DRV_AVMB1_T1PCI [list $CONFIG_ISDN_CAPI $CONFIG_PCI] 2 }
	global CONFIG_ISDN_DRV_AVMB1_C4
	if {($CONFIG_ISDN != 0) && ($CONFIG_ISDN_CAPI != 0) && ($CONFIG_ISDN_CAPI == 1 || $CONFIG_ISDN_CAPI == 2 || $CONFIG_ISDN_CAPI == 4) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {write_tristate $cfg $autocfg CONFIG_ISDN_DRV_AVMB1_C4 $CONFIG_ISDN_DRV_AVMB1_C4 [list $CONFIG_ISDN_CAPI $CONFIG_PCI] 2 }
	global CONFIG_HYSDN
	global CONFIG_PROC_FS
	if {($CONFIG_ISDN != 0) && ($CONFIG_PROC_FS == 1 || $CONFIG_PROC_FS == 2 || $CONFIG_PROC_FS == 4)} then {write_tristate $cfg $autocfg CONFIG_HYSDN $CONFIG_HYSDN [list $CONSTANT_M $CONFIG_PROC_FS] 2 }
	global CONFIG_HYSDN_CAPI
	if {($CONFIG_ISDN != 0) && ($CONFIG_HYSDN == 1 || $CONFIG_HYSDN == 2 || $CONFIG_HYSDN == 4) && ($CONFIG_ISDN_CAPI == 1 || $CONFIG_ISDN_CAPI == 2 || $CONFIG_ISDN_CAPI == 4)} then {write_tristate $cfg $autocfg CONFIG_HYSDN_CAPI $CONFIG_HYSDN_CAPI [list $CONFIG_HYSDN $CONFIG_ISDN_CAPI] 1 }
	write_comment $cfg $autocfg "Input core support"
	global CONFIG_INPUT
	write_tristate $cfg $autocfg CONFIG_INPUT $CONFIG_INPUT [list $notmod] 2
	global CONFIG_INPUT_KEYBDEV
	if {($CONFIG_INPUT == 1 || $CONFIG_INPUT == 2 || $CONFIG_INPUT == 4)} then {write_tristate $cfg $autocfg CONFIG_INPUT_KEYBDEV $CONFIG_INPUT_KEYBDEV [list $CONFIG_INPUT] 2 }
	global CONFIG_INPUT_MOUSEDEV
	if {($CONFIG_INPUT == 1 || $CONFIG_INPUT == 2 || $CONFIG_INPUT == 4)} then {write_tristate $cfg $autocfg CONFIG_INPUT_MOUSEDEV $CONFIG_INPUT_MOUSEDEV [list $CONFIG_INPUT] 2 }
	global CONFIG_INPUT_MOUSEDEV_SCREEN_X
	if {($CONFIG_INPUT_MOUSEDEV != 0)} then {write_int $cfg $autocfg CONFIG_INPUT_MOUSEDEV_SCREEN_X $CONFIG_INPUT_MOUSEDEV_SCREEN_X $notmod }
	global CONFIG_INPUT_MOUSEDEV_SCREEN_Y
	if {($CONFIG_INPUT_MOUSEDEV != 0)} then {write_int $cfg $autocfg CONFIG_INPUT_MOUSEDEV_SCREEN_Y $CONFIG_INPUT_MOUSEDEV_SCREEN_Y $notmod }
	global CONFIG_INPUT_JOYDEV
	if {($CONFIG_INPUT == 1 || $CONFIG_INPUT == 2 || $CONFIG_INPUT == 4)} then {write_tristate $cfg $autocfg CONFIG_INPUT_JOYDEV $CONFIG_INPUT_JOYDEV [list $CONFIG_INPUT] 2 }
	global CONFIG_INPUT_EVDEV
	if {($CONFIG_INPUT == 1 || $CONFIG_INPUT == 2 || $CONFIG_INPUT == 4)} then {write_tristate $cfg $autocfg CONFIG_INPUT_EVDEV $CONFIG_INPUT_EVDEV [list $CONFIG_INPUT] 2 }
	write_comment $cfg $autocfg "Character devices"
	global CONFIG_SERIAL_AMBA
	if {($CONFIG_ARCH_INTEGRATOR == 1)} then {write_tristate $cfg $autocfg CONFIG_SERIAL_AMBA $CONFIG_SERIAL_AMBA [list $notmod] 2 }
	global CONFIG_SERIAL_INTEGRATOR
	if {($CONFIG_ARCH_INTEGRATOR == 1) && ($CONFIG_SERIAL_AMBA == 1)} then {write_tristate $cfg $autocfg CONFIG_SERIAL_INTEGRATOR $CONSTANT_Y [list $notmod] 2 }
	global CONFIG_SERIAL_AMBA_CONSOLE
	if {($CONFIG_ARCH_INTEGRATOR == 1) && ($CONFIG_SERIAL_AMBA == 1)} then {write_tristate $cfg $autocfg CONFIG_SERIAL_AMBA_CONSOLE $CONFIG_SERIAL_AMBA_CONSOLE [list $notmod] 2 }
	global CONFIG_SERIAL_KS8695
	if {($CONFIG_ARCH_KS8695 == 1)} then {write_tristate $cfg $autocfg CONFIG_SERIAL_KS8695 $CONFIG_SERIAL_KS8695 [list $notmod] 2 }
	global CONFIG_SERIAL_CONSOLE
	if {($CONFIG_ARCH_KS8695 == 1) && ($CONFIG_SERIAL_KS8695 == 1)} then {write_tristate $cfg $autocfg CONFIG_SERIAL_CONSOLE $CONFIG_SERIAL_CONSOLE [list $notmod] 2 }
	global CONFIG_LEDMAN
	write_tristate $cfg $autocfg CONFIG_LEDMAN $CONFIG_LEDMAN [list $notmod] 2
	global CONFIG_DS1302
	write_tristate $cfg $autocfg CONFIG_DS1302 $CONFIG_DS1302 [list $notmod] 2
	global CONFIG_VT
	write_tristate $cfg $autocfg CONFIG_VT $CONFIG_VT [list $notmod] 2
	global CONFIG_VT_CONSOLE
	if {($CONFIG_VT == 1)} then {write_tristate $cfg $autocfg CONFIG_VT_CONSOLE $CONFIG_VT_CONSOLE [list $notmod] 2 }
	write_tristate $cfg $autocfg CONFIG_SERIAL $CONFIG_SERIAL [list $notmod] 2
	if {($CONFIG_SERIAL == 1)} then {write_tristate $cfg $autocfg CONFIG_SERIAL_CONSOLE $CONFIG_SERIAL_CONSOLE [list $notmod] 2 }
	global CONFIG_ATOMWIDE_SERIAL
	if {($CONFIG_SERIAL == 1) && ($CONFIG_ARCH_ACORN == 1)} then {write_tristate $cfg $autocfg CONFIG_ATOMWIDE_SERIAL $CONFIG_ATOMWIDE_SERIAL [list $notmod] 2 }
	global CONFIG_DUALSP_SERIAL
	if {($CONFIG_SERIAL == 1) && ($CONFIG_ARCH_ACORN == 1)} then {write_tristate $cfg $autocfg CONFIG_DUALSP_SERIAL $CONFIG_DUALSP_SERIAL [list $notmod] 2 }
	global CONFIG_SERIAL_EXTENDED
	if {($CONFIG_SERIAL == 1 || $CONFIG_SERIAL == 2 || $CONFIG_SERIAL == 4)} then {write_tristate $cfg $autocfg CONFIG_SERIAL_EXTENDED $CONFIG_SERIAL_EXTENDED [list $CONFIG_SERIAL] 1 }
	global CONFIG_SERIAL_MANY_PORTS
	if {($CONFIG_SERIAL_EXTENDED == 1)} then {write_tristate $cfg $autocfg CONFIG_SERIAL_MANY_PORTS $CONFIG_SERIAL_MANY_PORTS [list $notmod] 2 }
	global CONFIG_SERIAL_SHARE_IRQ
	if {($CONFIG_SERIAL_EXTENDED == 1)} then {write_tristate $cfg $autocfg CONFIG_SERIAL_SHARE_IRQ $CONFIG_SERIAL_SHARE_IRQ [list $notmod] 2 }
	global CONFIG_SERIAL_DETECT_IRQ
	if {($CONFIG_SERIAL_EXTENDED == 1)} then {write_tristate $cfg $autocfg CONFIG_SERIAL_DETECT_IRQ $CONFIG_SERIAL_DETECT_IRQ [list $notmod] 2 }
	global CONFIG_SERIAL_MULTIPORT
	if {($CONFIG_SERIAL_EXTENDED == 1)} then {write_tristate $cfg $autocfg CONFIG_SERIAL_MULTIPORT $CONFIG_SERIAL_MULTIPORT [list $notmod] 2 }
	global CONFIG_HUB6
	if {($CONFIG_SERIAL_EXTENDED == 1)} then {write_tristate $cfg $autocfg CONFIG_HUB6 $CONFIG_HUB6 [list $notmod] 2 }
	global CONFIG_SERIAL_NONSTANDARD
	write_tristate $cfg $autocfg CONFIG_SERIAL_NONSTANDARD $CONFIG_SERIAL_NONSTANDARD [list $notmod] 2
	global CONFIG_COMPUTONE
	if {($CONFIG_SERIAL_NONSTANDARD == 1)} then {write_tristate $cfg $autocfg CONFIG_COMPUTONE $CONFIG_COMPUTONE [list $notmod] 2 }
	global CONFIG_ROCKETPORT
	if {($CONFIG_SERIAL_NONSTANDARD == 1)} then {write_tristate $cfg $autocfg CONFIG_ROCKETPORT $CONFIG_ROCKETPORT [list $notmod] 2 }
	global CONFIG_CYCLADES
	if {($CONFIG_SERIAL_NONSTANDARD == 1)} then {write_tristate $cfg $autocfg CONFIG_CYCLADES $CONFIG_CYCLADES [list $notmod] 2 }
	global CONFIG_CYZ_INTR
	if {($CONFIG_SERIAL_NONSTANDARD == 1) && ($CONFIG_EXPERIMENTAL == 1 && $CONFIG_CYCLADES != 0)} then {write_tristate $cfg $autocfg CONFIG_CYZ_INTR $CONFIG_CYZ_INTR [list $notmod] 2 }
	global CONFIG_DIGIEPCA
	if {($CONFIG_SERIAL_NONSTANDARD == 1) && ($CONFIG_X86_64 != 1)} then {write_tristate $cfg $autocfg CONFIG_DIGIEPCA $CONFIG_DIGIEPCA [list $notmod] 2 }
	global CONFIG_DIGI
	if {($CONFIG_SERIAL_NONSTANDARD == 1) && ($CONFIG_X86_64 != 1) && ($CONFIG_DIGIEPCA == 0)} then {write_tristate $cfg $autocfg CONFIG_DIGI $CONFIG_DIGI [list $notmod] 2 }
	global CONFIG_ESPSERIAL
	if {($CONFIG_SERIAL_NONSTANDARD == 1) && ($CONFIG_ISA == 1 || $CONFIG_ISA == 2 || $CONFIG_ISA == 4)} then {write_tristate $cfg $autocfg CONFIG_ESPSERIAL $CONFIG_ESPSERIAL [list $CONFIG_ISA] 2 }
	global CONFIG_MOXA_INTELLIO
	if {($CONFIG_SERIAL_NONSTANDARD == 1)} then {write_tristate $cfg $autocfg CONFIG_MOXA_INTELLIO $CONFIG_MOXA_INTELLIO [list $notmod] 2 }
	global CONFIG_MOXA_SMARTIO
	if {($CONFIG_SERIAL_NONSTANDARD == 1)} then {write_tristate $cfg $autocfg CONFIG_MOXA_SMARTIO $CONFIG_MOXA_SMARTIO [list $notmod] 2 }
	global CONFIG_ISI
	if {($CONFIG_SERIAL_NONSTANDARD == 1) && ($CONFIG_EXPERIMENTAL == 1)} then {write_tristate $cfg $autocfg CONFIG_ISI $CONFIG_ISI [list $CONSTANT_M] 2 }
	global CONFIG_SYNCLINK
	if {($CONFIG_SERIAL_NONSTANDARD == 1)} then {write_tristate $cfg $autocfg CONFIG_SYNCLINK $CONFIG_SYNCLINK [list $notmod] 2 }
	global CONFIG_SYNCLINKMP
	if {($CONFIG_SERIAL_NONSTANDARD == 1)} then {write_tristate $cfg $autocfg CONFIG_SYNCLINKMP $CONFIG_SYNCLINKMP [list $notmod] 2 }
	global CONFIG_N_HDLC
	if {($CONFIG_SERIAL_NONSTANDARD == 1)} then {write_tristate $cfg $autocfg CONFIG_N_HDLC $CONFIG_N_HDLC [list $notmod] 2 }
	global CONFIG_RISCOM8
	if {($CONFIG_SERIAL_NONSTANDARD == 1)} then {write_tristate $cfg $autocfg CONFIG_RISCOM8 $CONFIG_RISCOM8 [list $notmod] 2 }
	global CONFIG_SPECIALIX
	if {($CONFIG_SERIAL_NONSTANDARD == 1) && ($CONFIG_X86_64 != 1)} then {write_tristate $cfg $autocfg CONFIG_SPECIALIX $CONFIG_SPECIALIX [list $notmod] 2 }
	global CONFIG_SPECIALIX_RTSCTS
	if {($CONFIG_SERIAL_NONSTANDARD == 1) && ($CONFIG_X86_64 != 1) && ($CONFIG_SPECIALIX != 0)} then {write_tristate $cfg $autocfg CONFIG_SPECIALIX_RTSCTS $CONFIG_SPECIALIX_RTSCTS [list $notmod] 2 }
	global CONFIG_SX
	if {($CONFIG_SERIAL_NONSTANDARD == 1) && ($CONFIG_X86_64 != 1)} then {write_tristate $cfg $autocfg CONFIG_SX $CONFIG_SX [list $notmod] 2 }
	global CONFIG_RIO
	if {($CONFIG_SERIAL_NONSTANDARD == 1) && ($CONFIG_X86_64 != 1)} then {write_tristate $cfg $autocfg CONFIG_RIO $CONFIG_RIO [list $notmod] 2 }
	global CONFIG_RIO_OLDPCI
	if {($CONFIG_SERIAL_NONSTANDARD == 1) && ($CONFIG_X86_64 != 1) && ($CONFIG_RIO != 0)} then {write_tristate $cfg $autocfg CONFIG_RIO_OLDPCI $CONFIG_RIO_OLDPCI [list $notmod] 2 }
	global CONFIG_STALDRV
	if {($CONFIG_SERIAL_NONSTANDARD == 1)} then {write_tristate $cfg $autocfg CONFIG_STALDRV $CONFIG_STALDRV [list $notmod] 2 }
	global CONFIG_STALLION
	if {($CONFIG_SERIAL_NONSTANDARD == 1) && ($CONFIG_STALDRV == 1)} then {write_tristate $cfg $autocfg CONFIG_STALLION $CONFIG_STALLION [list $notmod] 2 }
	global CONFIG_ISTALLION
	if {($CONFIG_SERIAL_NONSTANDARD == 1) && ($CONFIG_STALDRV == 1)} then {write_tristate $cfg $autocfg CONFIG_ISTALLION $CONFIG_ISTALLION [list $notmod] 2 }
	global CONFIG_A2232
	global CONFIG_ZORRO
	if {($CONFIG_EXPERIMENTAL == 1 && $CONFIG_ZORRO == 1)} then {write_tristate $cfg $autocfg CONFIG_A2232 $CONFIG_A2232 [list $notmod] 2 }
	global CONFIG_SERIAL_21285
	if {($CONFIG_FOOTBRIDGE == 1)} then {write_tristate $cfg $autocfg CONFIG_SERIAL_21285 $CONFIG_SERIAL_21285 [list $notmod] 2 }
	global CONFIG_SERIAL_21285_OLD
	if {($CONFIG_FOOTBRIDGE == 1) && ($CONFIG_SERIAL_21285 == 1) && ($CONFIG_OBSOLETE == 1)} then {write_tristate $cfg $autocfg CONFIG_SERIAL_21285_OLD $CONFIG_SERIAL_21285_OLD [list $notmod] 2 }
	global CONFIG_SERIAL_21285_CONSOLE
	if {($CONFIG_FOOTBRIDGE == 1) && ($CONFIG_SERIAL_21285 == 1)} then {write_tristate $cfg $autocfg CONFIG_SERIAL_21285_CONSOLE $CONFIG_SERIAL_21285_CONSOLE [list $notmod] 2 }
	global CONFIG_UNIX98_PTYS
	write_tristate $cfg $autocfg CONFIG_UNIX98_PTYS $CONFIG_UNIX98_PTYS [list $notmod] 2
	global CONFIG_UNIX98_PTY_COUNT
	if {($CONFIG_UNIX98_PTYS == 1)} then {write_int $cfg $autocfg CONFIG_UNIX98_PTY_COUNT $CONFIG_UNIX98_PTY_COUNT $notmod }
	global CONFIG_PRINTER
	if {($CONFIG_PARPORT != 0) && ($CONFIG_PARPORT == 1 || $CONFIG_PARPORT == 2 || $CONFIG_PARPORT == 4)} then {write_tristate $cfg $autocfg CONFIG_PRINTER $CONFIG_PRINTER [list $CONFIG_PARPORT] 2 }
	global CONFIG_LP_CONSOLE
	if {($CONFIG_PARPORT != 0) && ($CONFIG_PRINTER != 0)} then {write_tristate $cfg $autocfg CONFIG_LP_CONSOLE $CONFIG_LP_CONSOLE [list $notmod] 2 }
	global CONFIG_PPDEV
	if {($CONFIG_PARPORT != 0) && ($CONFIG_PARPORT == 1 || $CONFIG_PARPORT == 2 || $CONFIG_PARPORT == 4)} then {write_tristate $cfg $autocfg CONFIG_PPDEV $CONFIG_PPDEV [list $CONFIG_PARPORT] 2 }
	global CONFIG_TIPAR
	if {($CONFIG_PARPORT != 0) && ($CONFIG_PARPORT == 1 || $CONFIG_PARPORT == 2 || $CONFIG_PARPORT == 4)} then {write_tristate $cfg $autocfg CONFIG_TIPAR $CONFIG_TIPAR [list $CONFIG_PARPORT] 2 }
	write_comment $cfg $autocfg "I2C support"
	write_tristate $cfg $autocfg CONFIG_I2C $CONFIG_I2C [list $notmod] 2
	if {($CONFIG_I2C != 0) && ($CONFIG_I2C == 1 || $CONFIG_I2C == 2 || $CONFIG_I2C == 4)} then {write_tristate $cfg $autocfg CONFIG_I2C_ALGOBIT $CONFIG_I2C_ALGOBIT [list $CONFIG_I2C] 2 }
	global CONFIG_I2C_PHILIPSPAR
	if {($CONFIG_I2C != 0) && ($CONFIG_I2C_ALGOBIT != 0) && ($CONFIG_I2C_ALGOBIT == 1 || $CONFIG_I2C_ALGOBIT == 2 || $CONFIG_I2C_ALGOBIT == 4) && ($CONFIG_PARPORT == 1 || $CONFIG_PARPORT == 2 || $CONFIG_PARPORT == 4)} then {write_tristate $cfg $autocfg CONFIG_I2C_PHILIPSPAR $CONFIG_I2C_PHILIPSPAR [list $CONFIG_I2C_ALGOBIT $CONFIG_PARPORT] 2 }
	global CONFIG_I2C_ELV
	if {($CONFIG_I2C != 0) && ($CONFIG_I2C_ALGOBIT != 0) && ($CONFIG_I2C_ALGOBIT == 1 || $CONFIG_I2C_ALGOBIT == 2 || $CONFIG_I2C_ALGOBIT == 4)} then {write_tristate $cfg $autocfg CONFIG_I2C_ELV $CONFIG_I2C_ELV [list $CONFIG_I2C_ALGOBIT] 2 }
	global CONFIG_I2C_VELLEMAN
	if {($CONFIG_I2C != 0) && ($CONFIG_I2C_ALGOBIT != 0) && ($CONFIG_I2C_ALGOBIT == 1 || $CONFIG_I2C_ALGOBIT == 2 || $CONFIG_I2C_ALGOBIT == 4)} then {write_tristate $cfg $autocfg CONFIG_I2C_VELLEMAN $CONFIG_I2C_VELLEMAN [list $CONFIG_I2C_ALGOBIT] 2 }
	global CONFIG_I2C_MCF_GPIO
	global CONFIG_COLDFIRE
	if {($CONFIG_I2C != 0) && ($CONFIG_I2C_ALGOBIT != 0) && ($CONFIG_I2C_ALGOBIT == 1 || $CONFIG_I2C_ALGOBIT == 2 || $CONFIG_I2C_ALGOBIT == 4) && ($CONFIG_COLDFIRE == 1 || $CONFIG_COLDFIRE == 2 || $CONFIG_COLDFIRE == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {write_tristate $cfg $autocfg CONFIG_I2C_MCF_GPIO $CONFIG_I2C_MCF_GPIO [list $CONFIG_I2C_ALGOBIT $CONFIG_COLDFIRE $CONFIG_EXPERIMENTAL] 2 }
	global CONFIG_SCx200_I2C
	global CONFIG_SCx200
	if {($CONFIG_I2C != 0) && ($CONFIG_I2C_ALGOBIT != 0) && ($CONFIG_SCx200 == 1 || $CONFIG_SCx200 == 2 || $CONFIG_SCx200 == 4) && ($CONFIG_I2C_ALGOBIT == 1 || $CONFIG_I2C_ALGOBIT == 2 || $CONFIG_I2C_ALGOBIT == 4)} then {write_tristate $cfg $autocfg CONFIG_SCx200_I2C $CONFIG_SCx200_I2C [list $CONFIG_SCx200 $CONFIG_I2C_ALGOBIT] 2 }
	global CONFIG_SCx200_I2C_SCL
	if {($CONFIG_I2C != 0) && ($CONFIG_I2C_ALGOBIT != 0) && ($CONFIG_SCx200_I2C != 0)} then {write_int $cfg $autocfg CONFIG_SCx200_I2C_SCL $CONFIG_SCx200_I2C_SCL $notmod }
	global CONFIG_SCx200_I2C_SDA
	if {($CONFIG_I2C != 0) && ($CONFIG_I2C_ALGOBIT != 0) && ($CONFIG_SCx200_I2C != 0)} then {write_int $cfg $autocfg CONFIG_SCx200_I2C_SDA $CONFIG_SCx200_I2C_SDA $notmod }
	global CONFIG_SCx200_ACB
	if {($CONFIG_I2C != 0) && ($CONFIG_I2C_ALGOBIT != 0) && ($CONFIG_I2C == 1 || $CONFIG_I2C == 2 || $CONFIG_I2C == 4)} then {write_tristate $cfg $autocfg CONFIG_SCx200_ACB $CONFIG_SCx200_ACB [list $CONFIG_I2C] 2 }
	global CONFIG_I2C_ALGOPCF
	if {($CONFIG_I2C != 0) && ($CONFIG_I2C == 1 || $CONFIG_I2C == 2 || $CONFIG_I2C == 4)} then {write_tristate $cfg $autocfg CONFIG_I2C_ALGOPCF $CONFIG_I2C_ALGOPCF [list $CONFIG_I2C] 2 }
	global CONFIG_I2C_ELEKTOR
	if {($CONFIG_I2C != 0) && ($CONFIG_I2C_ALGOPCF != 0) && ($CONFIG_I2C_ALGOPCF == 1 || $CONFIG_I2C_ALGOPCF == 2 || $CONFIG_I2C_ALGOPCF == 4)} then {write_tristate $cfg $autocfg CONFIG_I2C_ELEKTOR $CONFIG_I2C_ELEKTOR [list $CONFIG_I2C_ALGOPCF] 2 }
	global CONFIG_I2C_CHARDEV
	if {($CONFIG_I2C != 0) && ($CONFIG_I2C == 1 || $CONFIG_I2C == 2 || $CONFIG_I2C == 4)} then {write_tristate $cfg $autocfg CONFIG_I2C_CHARDEV $CONFIG_I2C_CHARDEV [list $CONFIG_I2C] 2 }
	global CONFIG_I2C_PROC
	if {($CONFIG_I2C != 0) && ($CONFIG_I2C == 1 || $CONFIG_I2C == 2 || $CONFIG_I2C == 4)} then {write_tristate $cfg $autocfg CONFIG_I2C_PROC $CONFIG_I2C_PROC [list $CONFIG_I2C] 2 }
	write_comment $cfg $autocfg "Mice"
	global CONFIG_BUSMOUSE
	write_tristate $cfg $autocfg CONFIG_BUSMOUSE $CONFIG_BUSMOUSE [list $notmod] 2
	global CONFIG_ATIXL_BUSMOUSE
	if {($CONFIG_BUSMOUSE != 0) && ($CONFIG_BUSMOUSE == 1 || $CONFIG_BUSMOUSE == 2 || $CONFIG_BUSMOUSE == 4)} then {write_tristate $cfg $autocfg CONFIG_ATIXL_BUSMOUSE $CONFIG_ATIXL_BUSMOUSE [list $CONFIG_BUSMOUSE] 2 }
	global CONFIG_LOGIBUSMOUSE
	if {($CONFIG_BUSMOUSE != 0) && ($CONFIG_BUSMOUSE == 1 || $CONFIG_BUSMOUSE == 2 || $CONFIG_BUSMOUSE == 4)} then {write_tristate $cfg $autocfg CONFIG_LOGIBUSMOUSE $CONFIG_LOGIBUSMOUSE [list $CONFIG_BUSMOUSE] 2 }
	global CONFIG_MS_BUSMOUSE
	if {($CONFIG_BUSMOUSE != 0) && ($CONFIG_BUSMOUSE == 1 || $CONFIG_BUSMOUSE == 2 || $CONFIG_BUSMOUSE == 4)} then {write_tristate $cfg $autocfg CONFIG_MS_BUSMOUSE $CONFIG_MS_BUSMOUSE [list $CONFIG_BUSMOUSE] 2 }
	global CONFIG_MOUSE
	write_tristate $cfg $autocfg CONFIG_MOUSE $CONFIG_MOUSE [list $notmod] 2
	global CONFIG_PSMOUSE
	if {($CONFIG_MOUSE != 0)} then {write_tristate $cfg $autocfg CONFIG_PSMOUSE $CONFIG_PSMOUSE [list $notmod] 2 }
	global CONFIG_82C710_MOUSE
	if {($CONFIG_MOUSE != 0)} then {write_tristate $cfg $autocfg CONFIG_82C710_MOUSE $CONFIG_82C710_MOUSE [list $notmod] 2 }
	global CONFIG_PC110_PAD
	if {($CONFIG_MOUSE != 0)} then {write_tristate $cfg $autocfg CONFIG_PC110_PAD $CONFIG_PC110_PAD [list $notmod] 2 }
	global CONFIG_MK712_MOUSE
	if {($CONFIG_MOUSE != 0)} then {write_tristate $cfg $autocfg CONFIG_MK712_MOUSE $CONFIG_MK712_MOUSE [list $notmod] 2 }
	write_comment $cfg $autocfg "Joysticks"
	global CONFIG_INPUT_GAMEPORT
	if {($CONFIG_INPUT != 0) && ($CONFIG_INPUT == 1 || $CONFIG_INPUT == 2 || $CONFIG_INPUT == 4)} then {write_tristate $cfg $autocfg CONFIG_INPUT_GAMEPORT $CONFIG_INPUT_GAMEPORT [list $CONFIG_INPUT] 2 }
	global CONFIG_INPUT_NS558
	if {($CONFIG_INPUT != 0) && ($CONFIG_INPUT_GAMEPORT == 1 || $CONFIG_INPUT_GAMEPORT == 2 || $CONFIG_INPUT_GAMEPORT == 4)} then {write_tristate $cfg $autocfg CONFIG_INPUT_NS558 $CONFIG_INPUT_NS558 [list $CONFIG_INPUT_GAMEPORT] 2 }
	global CONFIG_INPUT_LIGHTNING
	if {($CONFIG_INPUT != 0) && ($CONFIG_INPUT_GAMEPORT == 1 || $CONFIG_INPUT_GAMEPORT == 2 || $CONFIG_INPUT_GAMEPORT == 4)} then {write_tristate $cfg $autocfg CONFIG_INPUT_LIGHTNING $CONFIG_INPUT_LIGHTNING [list $CONFIG_INPUT_GAMEPORT] 2 }
	global CONFIG_INPUT_PCIGAME
	if {($CONFIG_INPUT != 0) && ($CONFIG_INPUT_GAMEPORT == 1 || $CONFIG_INPUT_GAMEPORT == 2 || $CONFIG_INPUT_GAMEPORT == 4)} then {write_tristate $cfg $autocfg CONFIG_INPUT_PCIGAME $CONFIG_INPUT_PCIGAME [list $CONFIG_INPUT_GAMEPORT] 2 }
	global CONFIG_INPUT_CS461X
	if {($CONFIG_INPUT != 0) && ($CONFIG_INPUT_GAMEPORT == 1 || $CONFIG_INPUT_GAMEPORT == 2 || $CONFIG_INPUT_GAMEPORT == 4)} then {write_tristate $cfg $autocfg CONFIG_INPUT_CS461X $CONFIG_INPUT_CS461X [list $CONFIG_INPUT_GAMEPORT] 2 }
	global CONFIG_INPUT_EMU10K1
	if {($CONFIG_INPUT != 0) && ($CONFIG_INPUT_GAMEPORT == 1 || $CONFIG_INPUT_GAMEPORT == 2 || $CONFIG_INPUT_GAMEPORT == 4)} then {write_tristate $cfg $autocfg CONFIG_INPUT_EMU10K1 $CONFIG_INPUT_EMU10K1 [list $CONFIG_INPUT_GAMEPORT] 2 }
	global CONFIG_INPUT_SERIO
	if {($CONFIG_INPUT != 0)} then {write_tristate $cfg $autocfg CONFIG_INPUT_SERIO $CONFIG_INPUT_SERIO [list $notmod] 2 }
	global CONFIG_INPUT_SERPORT
	if {($CONFIG_INPUT != 0) && ($CONFIG_INPUT_SERIO == 1 || $CONFIG_INPUT_SERIO == 2 || $CONFIG_INPUT_SERIO == 4)} then {write_tristate $cfg $autocfg CONFIG_INPUT_SERPORT $CONFIG_INPUT_SERPORT [list $CONFIG_INPUT_SERIO] 2 }
	if {($CONFIG_INPUT == 0)} then {write_tristate $cfg $autocfg CONFIG_INPUT_GAMEPORT $CONSTANT_N [list $notmod] 2 }
	if {($CONFIG_INPUT == 0)} then {write_comment $cfg $autocfg "Input core support is needed for gameports"}
	if {($CONFIG_INPUT != 0)} then {write_comment $cfg $autocfg "Joysticks"}
	global CONFIG_INPUT_ANALOG
	if {($CONFIG_INPUT != 0) && ($CONFIG_INPUT == 1 || $CONFIG_INPUT == 2 || $CONFIG_INPUT == 4) && ($CONFIG_INPUT_GAMEPORT == 1 || $CONFIG_INPUT_GAMEPORT == 2 || $CONFIG_INPUT_GAMEPORT == 4)} then {write_tristate $cfg $autocfg CONFIG_INPUT_ANALOG $CONFIG_INPUT_ANALOG [list $CONFIG_INPUT $CONFIG_INPUT_GAMEPORT] 2 }
	global CONFIG_INPUT_A3D
	if {($CONFIG_INPUT != 0) && ($CONFIG_INPUT == 1 || $CONFIG_INPUT == 2 || $CONFIG_INPUT == 4) && ($CONFIG_INPUT_GAMEPORT == 1 || $CONFIG_INPUT_GAMEPORT == 2 || $CONFIG_INPUT_GAMEPORT == 4)} then {write_tristate $cfg $autocfg CONFIG_INPUT_A3D $CONFIG_INPUT_A3D [list $CONFIG_INPUT $CONFIG_INPUT_GAMEPORT] 2 }
	global CONFIG_INPUT_ADI
	if {($CONFIG_INPUT != 0) && ($CONFIG_INPUT == 1 || $CONFIG_INPUT == 2 || $CONFIG_INPUT == 4) && ($CONFIG_INPUT_GAMEPORT == 1 || $CONFIG_INPUT_GAMEPORT == 2 || $CONFIG_INPUT_GAMEPORT == 4)} then {write_tristate $cfg $autocfg CONFIG_INPUT_ADI $CONFIG_INPUT_ADI [list $CONFIG_INPUT $CONFIG_INPUT_GAMEPORT] 2 }
	global CONFIG_INPUT_COBRA
	if {($CONFIG_INPUT != 0) && ($CONFIG_INPUT == 1 || $CONFIG_INPUT == 2 || $CONFIG_INPUT == 4) && ($CONFIG_INPUT_GAMEPORT == 1 || $CONFIG_INPUT_GAMEPORT == 2 || $CONFIG_INPUT_GAMEPORT == 4)} then {write_tristate $cfg $autocfg CONFIG_INPUT_COBRA $CONFIG_INPUT_COBRA [list $CONFIG_INPUT $CONFIG_INPUT_GAMEPORT] 2 }
	global CONFIG_INPUT_GF2K
	if {($CONFIG_INPUT != 0) && ($CONFIG_INPUT == 1 || $CONFIG_INPUT == 2 || $CONFIG_INPUT == 4) && ($CONFIG_INPUT_GAMEPORT == 1 || $CONFIG_INPUT_GAMEPORT == 2 || $CONFIG_INPUT_GAMEPORT == 4)} then {write_tristate $cfg $autocfg CONFIG_INPUT_GF2K $CONFIG_INPUT_GF2K [list $CONFIG_INPUT $CONFIG_INPUT_GAMEPORT] 2 }
	global CONFIG_INPUT_GRIP
	if {($CONFIG_INPUT != 0) && ($CONFIG_INPUT == 1 || $CONFIG_INPUT == 2 || $CONFIG_INPUT == 4) && ($CONFIG_INPUT_GAMEPORT == 1 || $CONFIG_INPUT_GAMEPORT == 2 || $CONFIG_INPUT_GAMEPORT == 4)} then {write_tristate $cfg $autocfg CONFIG_INPUT_GRIP $CONFIG_INPUT_GRIP [list $CONFIG_INPUT $CONFIG_INPUT_GAMEPORT] 2 }
	global CONFIG_INPUT_INTERACT
	if {($CONFIG_INPUT != 0) && ($CONFIG_INPUT == 1 || $CONFIG_INPUT == 2 || $CONFIG_INPUT == 4) && ($CONFIG_INPUT_GAMEPORT == 1 || $CONFIG_INPUT_GAMEPORT == 2 || $CONFIG_INPUT_GAMEPORT == 4)} then {write_tristate $cfg $autocfg CONFIG_INPUT_INTERACT $CONFIG_INPUT_INTERACT [list $CONFIG_INPUT $CONFIG_INPUT_GAMEPORT] 2 }
	global CONFIG_INPUT_TMDC
	if {($CONFIG_INPUT != 0) && ($CONFIG_INPUT == 1 || $CONFIG_INPUT == 2 || $CONFIG_INPUT == 4) && ($CONFIG_INPUT_GAMEPORT == 1 || $CONFIG_INPUT_GAMEPORT == 2 || $CONFIG_INPUT_GAMEPORT == 4)} then {write_tristate $cfg $autocfg CONFIG_INPUT_TMDC $CONFIG_INPUT_TMDC [list $CONFIG_INPUT $CONFIG_INPUT_GAMEPORT] 2 }
	global CONFIG_INPUT_SIDEWINDER
	if {($CONFIG_INPUT != 0) && ($CONFIG_INPUT == 1 || $CONFIG_INPUT == 2 || $CONFIG_INPUT == 4) && ($CONFIG_INPUT_GAMEPORT == 1 || $CONFIG_INPUT_GAMEPORT == 2 || $CONFIG_INPUT_GAMEPORT == 4)} then {write_tristate $cfg $autocfg CONFIG_INPUT_SIDEWINDER $CONFIG_INPUT_SIDEWINDER [list $CONFIG_INPUT $CONFIG_INPUT_GAMEPORT] 2 }
	global CONFIG_INPUT_IFORCE_USB
	if {($CONFIG_INPUT != 0) && ($CONFIG_INPUT == 1 || $CONFIG_INPUT == 2 || $CONFIG_INPUT == 4) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4)} then {write_tristate $cfg $autocfg CONFIG_INPUT_IFORCE_USB $CONFIG_INPUT_IFORCE_USB [list $CONFIG_INPUT $CONFIG_USB] 2 }
	global CONFIG_INPUT_IFORCE_232
	if {($CONFIG_INPUT != 0) && ($CONFIG_INPUT == 1 || $CONFIG_INPUT == 2 || $CONFIG_INPUT == 4) && ($CONFIG_INPUT_SERIO == 1 || $CONFIG_INPUT_SERIO == 2 || $CONFIG_INPUT_SERIO == 4)} then {write_tristate $cfg $autocfg CONFIG_INPUT_IFORCE_232 $CONFIG_INPUT_IFORCE_232 [list $CONFIG_INPUT $CONFIG_INPUT_SERIO] 2 }
	global CONFIG_INPUT_WARRIOR
	if {($CONFIG_INPUT != 0) && ($CONFIG_INPUT == 1 || $CONFIG_INPUT == 2 || $CONFIG_INPUT == 4) && ($CONFIG_INPUT_SERIO == 1 || $CONFIG_INPUT_SERIO == 2 || $CONFIG_INPUT_SERIO == 4)} then {write_tristate $cfg $autocfg CONFIG_INPUT_WARRIOR $CONFIG_INPUT_WARRIOR [list $CONFIG_INPUT $CONFIG_INPUT_SERIO] 2 }
	global CONFIG_INPUT_MAGELLAN
	if {($CONFIG_INPUT != 0) && ($CONFIG_INPUT == 1 || $CONFIG_INPUT == 2 || $CONFIG_INPUT == 4) && ($CONFIG_INPUT_SERIO == 1 || $CONFIG_INPUT_SERIO == 2 || $CONFIG_INPUT_SERIO == 4)} then {write_tristate $cfg $autocfg CONFIG_INPUT_MAGELLAN $CONFIG_INPUT_MAGELLAN [list $CONFIG_INPUT $CONFIG_INPUT_SERIO] 2 }
	global CONFIG_INPUT_SPACEORB
	if {($CONFIG_INPUT != 0) && ($CONFIG_INPUT == 1 || $CONFIG_INPUT == 2 || $CONFIG_INPUT == 4) && ($CONFIG_INPUT_SERIO == 1 || $CONFIG_INPUT_SERIO == 2 || $CONFIG_INPUT_SERIO == 4)} then {write_tristate $cfg $autocfg CONFIG_INPUT_SPACEORB $CONFIG_INPUT_SPACEORB [list $CONFIG_INPUT $CONFIG_INPUT_SERIO] 2 }
	global CONFIG_INPUT_SPACEBALL
	if {($CONFIG_INPUT != 0) && ($CONFIG_INPUT == 1 || $CONFIG_INPUT == 2 || $CONFIG_INPUT == 4) && ($CONFIG_INPUT_SERIO == 1 || $CONFIG_INPUT_SERIO == 2 || $CONFIG_INPUT_SERIO == 4)} then {write_tristate $cfg $autocfg CONFIG_INPUT_SPACEBALL $CONFIG_INPUT_SPACEBALL [list $CONFIG_INPUT $CONFIG_INPUT_SERIO] 2 }
	global CONFIG_INPUT_STINGER
	if {($CONFIG_INPUT != 0) && ($CONFIG_INPUT == 1 || $CONFIG_INPUT == 2 || $CONFIG_INPUT == 4) && ($CONFIG_INPUT_SERIO == 1 || $CONFIG_INPUT_SERIO == 2 || $CONFIG_INPUT_SERIO == 4)} then {write_tristate $cfg $autocfg CONFIG_INPUT_STINGER $CONFIG_INPUT_STINGER [list $CONFIG_INPUT $CONFIG_INPUT_SERIO] 2 }
	global CONFIG_INPUT_DB9
	if {($CONFIG_INPUT != 0) && ($CONFIG_INPUT == 1 || $CONFIG_INPUT == 2 || $CONFIG_INPUT == 4) && ($CONFIG_PARPORT == 1 || $CONFIG_PARPORT == 2 || $CONFIG_PARPORT == 4)} then {write_tristate $cfg $autocfg CONFIG_INPUT_DB9 $CONFIG_INPUT_DB9 [list $CONFIG_INPUT $CONFIG_PARPORT] 2 }
	global CONFIG_INPUT_GAMECON
	if {($CONFIG_INPUT != 0) && ($CONFIG_INPUT == 1 || $CONFIG_INPUT == 2 || $CONFIG_INPUT == 4) && ($CONFIG_PARPORT == 1 || $CONFIG_PARPORT == 2 || $CONFIG_PARPORT == 4)} then {write_tristate $cfg $autocfg CONFIG_INPUT_GAMECON $CONFIG_INPUT_GAMECON [list $CONFIG_INPUT $CONFIG_PARPORT] 2 }
	global CONFIG_INPUT_TURBOGRAFX
	if {($CONFIG_INPUT != 0) && ($CONFIG_INPUT == 1 || $CONFIG_INPUT == 2 || $CONFIG_INPUT == 4) && ($CONFIG_PARPORT == 1 || $CONFIG_PARPORT == 2 || $CONFIG_PARPORT == 4)} then {write_tristate $cfg $autocfg CONFIG_INPUT_TURBOGRAFX $CONFIG_INPUT_TURBOGRAFX [list $CONFIG_INPUT $CONFIG_PARPORT] 2 }
	if {($CONFIG_INPUT == 0)} then {write_comment $cfg $autocfg "Input core support is needed for joysticks"}
	global CONFIG_QIC02_TAPE
	write_tristate $cfg $autocfg CONFIG_QIC02_TAPE $CONFIG_QIC02_TAPE [list $notmod] 2
	global CONFIG_QIC02_DYNCONF
	if {($CONFIG_QIC02_TAPE != 0)} then {write_tristate $cfg $autocfg CONFIG_QIC02_DYNCONF $CONFIG_QIC02_DYNCONF [list $notmod] 2 }
	if {($CONFIG_QIC02_TAPE != 0) && ($CONFIG_QIC02_DYNCONF != 1)} then {write_comment $cfg $autocfg "  Edit configuration parameters in ./include/linux/tpqic02.h!"}
	if {($CONFIG_QIC02_TAPE != 0) && ($CONFIG_QIC02_DYNCONF == 1)} then {write_comment $cfg $autocfg "  Setting runtime QIC-02 configuration is done with qic02conf"}
	if {($CONFIG_QIC02_TAPE != 0) && ($CONFIG_QIC02_DYNCONF == 1)} then {write_comment $cfg $autocfg "  from the tpqic02-support package.  It is available at"}
	if {($CONFIG_QIC02_TAPE != 0) && ($CONFIG_QIC02_DYNCONF == 1)} then {write_comment $cfg $autocfg "  metalab.unc.edu or ftp://titus.cfw.com/pub/Linux/util/"}
	global CONFIG_IPMI_HANDLER
	write_tristate $cfg $autocfg CONFIG_IPMI_HANDLER $CONFIG_IPMI_HANDLER [list $notmod] 2
	global CONFIG_IPMI_PANIC_EVENT
	if {($CONFIG_IPMI_HANDLER == 1 || $CONFIG_IPMI_HANDLER == 2 || $CONFIG_IPMI_HANDLER == 4)} then {write_tristate $cfg $autocfg CONFIG_IPMI_PANIC_EVENT $CONFIG_IPMI_PANIC_EVENT [list $CONFIG_IPMI_HANDLER] 1 }
	global CONFIG_IPMI_DEVICE_INTERFACE
	if {($CONFIG_IPMI_HANDLER == 1 || $CONFIG_IPMI_HANDLER == 2 || $CONFIG_IPMI_HANDLER == 4)} then {write_tristate $cfg $autocfg CONFIG_IPMI_DEVICE_INTERFACE $CONFIG_IPMI_DEVICE_INTERFACE [list $CONFIG_IPMI_HANDLER] 2 }
	global CONFIG_IPMI_KCS
	if {($CONFIG_IPMI_HANDLER == 1 || $CONFIG_IPMI_HANDLER == 2 || $CONFIG_IPMI_HANDLER == 4)} then {write_tristate $cfg $autocfg CONFIG_IPMI_KCS $CONFIG_IPMI_KCS [list $CONFIG_IPMI_HANDLER] 2 }
	global CONFIG_IPMI_WATCHDOG
	if {($CONFIG_IPMI_HANDLER == 1 || $CONFIG_IPMI_HANDLER == 2 || $CONFIG_IPMI_HANDLER == 4)} then {write_tristate $cfg $autocfg CONFIG_IPMI_WATCHDOG $CONFIG_IPMI_WATCHDOG [list $CONFIG_IPMI_HANDLER] 2 }
	write_comment $cfg $autocfg "Controller Area Network Cards/Chips"
	global CONFIG_CAN4LINUX
	write_tristate $cfg $autocfg CONFIG_CAN4LINUX $CONFIG_CAN4LINUX [list $notmod] 2
	global CONFIG_CAN_ATCANMINI
	if {($CONFIG_CAN4LINUX != 0)} then {write_tristate $cfg $autocfg CONFIG_CAN_ATCANMINI $CONFIG_CAN_ATCANMINI [list $notmod] 2 }
	global CONFIG_CAN_CCPC104
	if {($CONFIG_CAN4LINUX != 0)} then {write_tristate $cfg $autocfg CONFIG_CAN_CCPC104 $CONFIG_CAN_CCPC104 [list $notmod] 2 }
	global CONFIG_CAN_MCF5282
	if {($CONFIG_CAN4LINUX != 0)} then {write_tristate $cfg $autocfg CONFIG_CAN_MCF5282 $CONFIG_CAN_MCF5282 [list $notmod] 2 }
	global CONFIG_CAN_CPC_PCI
	if {($CONFIG_CAN4LINUX != 0)} then {write_tristate $cfg $autocfg CONFIG_CAN_CPC_PCI $CONFIG_CAN_CPC_PCI [list $notmod] 2 }
	global CONFIG_CAN_IME_SLIMLINE
	if {($CONFIG_CAN4LINUX != 0)} then {write_tristate $cfg $autocfg CONFIG_CAN_IME_SLIMLINE $CONFIG_CAN_IME_SLIMLINE [list $notmod] 2 }
	write_comment $cfg $autocfg "Watchdog Cards"
	global CONFIG_WATCHDOG
	write_tristate $cfg $autocfg CONFIG_WATCHDOG $CONFIG_WATCHDOG [list $notmod] 2
	global CONFIG_WATCHDOG_NOWAYOUT
	if {($CONFIG_WATCHDOG != 0)} then {write_tristate $cfg $autocfg CONFIG_WATCHDOG_NOWAYOUT $CONFIG_WATCHDOG_NOWAYOUT [list $notmod] 2 }
	global CONFIG_ACQUIRE_WDT
	if {($CONFIG_WATCHDOG != 0)} then {write_tristate $cfg $autocfg CONFIG_ACQUIRE_WDT $CONFIG_ACQUIRE_WDT [list $notmod] 2 }
	global CONFIG_ADVANTECH_WDT
	if {($CONFIG_WATCHDOG != 0)} then {write_tristate $cfg $autocfg CONFIG_ADVANTECH_WDT $CONFIG_ADVANTECH_WDT [list $notmod] 2 }
	global CONFIG_ALIM1535_WDT
	if {($CONFIG_WATCHDOG != 0)} then {write_tristate $cfg $autocfg CONFIG_ALIM1535_WDT $CONFIG_ALIM1535_WDT [list $notmod] 2 }
	global CONFIG_ALIM7101_WDT
	if {($CONFIG_WATCHDOG != 0)} then {write_tristate $cfg $autocfg CONFIG_ALIM7101_WDT $CONFIG_ALIM7101_WDT [list $notmod] 2 }
	global CONFIG_SC520_WDT
	if {($CONFIG_WATCHDOG != 0)} then {write_tristate $cfg $autocfg CONFIG_SC520_WDT $CONFIG_SC520_WDT [list $notmod] 2 }
	global CONFIG_PCWATCHDOG
	if {($CONFIG_WATCHDOG != 0)} then {write_tristate $cfg $autocfg CONFIG_PCWATCHDOG $CONFIG_PCWATCHDOG [list $notmod] 2 }
	global CONFIG_21285_WATCHDOG
	if {($CONFIG_WATCHDOG != 0) && ($CONFIG_FOOTBRIDGE == 1)} then {write_tristate $cfg $autocfg CONFIG_21285_WATCHDOG $CONFIG_21285_WATCHDOG [list $notmod] 2 }
	global CONFIG_977_WATCHDOG
	if {($CONFIG_WATCHDOG != 0) && ($CONFIG_FOOTBRIDGE == 1) && ($CONFIG_ARCH_NETWINDER == 1)} then {write_tristate $cfg $autocfg CONFIG_977_WATCHDOG $CONFIG_977_WATCHDOG [list $notmod] 2 }
	global CONFIG_EUROTECH_WDT
	if {($CONFIG_WATCHDOG != 0)} then {write_tristate $cfg $autocfg CONFIG_EUROTECH_WDT $CONFIG_EUROTECH_WDT [list $notmod] 2 }
	global CONFIG_IB700_WDT
	if {($CONFIG_WATCHDOG != 0)} then {write_tristate $cfg $autocfg CONFIG_IB700_WDT $CONFIG_IB700_WDT [list $notmod] 2 }
	global CONFIG_WAFER_WDT
	if {($CONFIG_WATCHDOG != 0)} then {write_tristate $cfg $autocfg CONFIG_WAFER_WDT $CONFIG_WAFER_WDT [list $notmod] 2 }
	global CONFIG_I810_TCO
	if {($CONFIG_WATCHDOG != 0)} then {write_tristate $cfg $autocfg CONFIG_I810_TCO $CONFIG_I810_TCO [list $notmod] 2 }
	global CONFIG_MIXCOMWD
	if {($CONFIG_WATCHDOG != 0)} then {write_tristate $cfg $autocfg CONFIG_MIXCOMWD $CONFIG_MIXCOMWD [list $notmod] 2 }
	global CONFIG_60XX_WDT
	if {($CONFIG_WATCHDOG != 0)} then {write_tristate $cfg $autocfg CONFIG_60XX_WDT $CONFIG_60XX_WDT [list $notmod] 2 }
	global CONFIG_SC1200_WDT
	if {($CONFIG_WATCHDOG != 0) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {write_tristate $cfg $autocfg CONFIG_SC1200_WDT $CONFIG_SC1200_WDT [list $CONFIG_EXPERIMENTAL] 2 }
	global CONFIG_SCx200_WDT
	if {($CONFIG_WATCHDOG != 0)} then {write_tristate $cfg $autocfg CONFIG_SCx200_WDT $CONFIG_SCx200_WDT [list $notmod] 2 }
	global CONFIG_SOFT_WATCHDOG
	if {($CONFIG_WATCHDOG != 0)} then {write_tristate $cfg $autocfg CONFIG_SOFT_WATCHDOG $CONFIG_SOFT_WATCHDOG [list $notmod] 2 }
	global CONFIG_W83877F_WDT
	if {($CONFIG_WATCHDOG != 0)} then {write_tristate $cfg $autocfg CONFIG_W83877F_WDT $CONFIG_W83877F_WDT [list $notmod] 2 }
	global CONFIG_WDT
	if {($CONFIG_WATCHDOG != 0)} then {write_tristate $cfg $autocfg CONFIG_WDT $CONFIG_WDT [list $notmod] 2 }
	global CONFIG_WDTPCI
	if {($CONFIG_WATCHDOG != 0)} then {write_tristate $cfg $autocfg CONFIG_WDTPCI $CONFIG_WDTPCI [list $notmod] 2 }
	global CONFIG_WDT_501
	if {($CONFIG_WATCHDOG != 0) && ($CONFIG_WDT != 0)} then {write_tristate $cfg $autocfg CONFIG_WDT_501 $CONFIG_WDT_501 [list $notmod] 2 }
	global CONFIG_WDT_501_FAN
	if {($CONFIG_WATCHDOG != 0) && ($CONFIG_WDT != 0) && ($CONFIG_WDT_501 == 1)} then {write_tristate $cfg $autocfg CONFIG_WDT_501_FAN $CONFIG_WDT_501_FAN [list $notmod] 2 }
	global CONFIG_MACHZ_WDT
	if {($CONFIG_WATCHDOG != 0)} then {write_tristate $cfg $autocfg CONFIG_MACHZ_WDT $CONFIG_MACHZ_WDT [list $notmod] 2 }
	global CONFIG_AMD7XX_TCO
	if {($CONFIG_WATCHDOG != 0) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {write_tristate $cfg $autocfg CONFIG_AMD7XX_TCO $CONFIG_AMD7XX_TCO [list $CONFIG_EXPERIMENTAL] 2 }
	global CONFIG_DS1620
	if {($CONFIG_ARCH_NETWINDER == 1)} then {write_tristate $cfg $autocfg CONFIG_DS1620 $CONFIG_DS1620 [list $notmod] 2 }
	global CONFIG_NWBUTTON
	if {($CONFIG_ARCH_NETWINDER == 1)} then {write_tristate $cfg $autocfg CONFIG_NWBUTTON $CONFIG_NWBUTTON [list $notmod] 2 }
	global CONFIG_NWBUTTON_REBOOT
	if {($CONFIG_ARCH_NETWINDER == 1) && ($CONFIG_NWBUTTON != 0)} then {write_tristate $cfg $autocfg CONFIG_NWBUTTON_REBOOT $CONFIG_NWBUTTON_REBOOT [list $notmod] 2 }
	global CONFIG_NWFLASH
	if {($CONFIG_ARCH_NETWINDER == 1)} then {write_tristate $cfg $autocfg CONFIG_NWFLASH $CONFIG_NWFLASH [list $notmod] 2 }
	global CONFIG_SCx200_GPIO
	if {($CONFIG_SCx200 == 1 || $CONFIG_SCx200 == 2 || $CONFIG_SCx200 == 4)} then {write_tristate $cfg $autocfg CONFIG_SCx200_GPIO $CONFIG_SCx200_GPIO [list $CONFIG_SCx200] 2 }
	global CONFIG_AMD_PM768
	if {($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {write_tristate $cfg $autocfg CONFIG_AMD_PM768 $CONFIG_AMD_PM768 [list $CONFIG_PCI] 2 }
	global CONFIG_NVRAM
	write_tristate $cfg $autocfg CONFIG_NVRAM $CONFIG_NVRAM [list $notmod] 2
	global CONFIG_RTC
	write_tristate $cfg $autocfg CONFIG_RTC $CONFIG_RTC [list $notmod] 2
	global CONFIG_H8
	global CONFIG_ALPHA_BOOK1
	if {($CONFIG_OBSOLETE == 1 && $CONFIG_ALPHA_BOOK1 == 1)} then {write_tristate $cfg $autocfg CONFIG_H8 $CONFIG_H8 [list $notmod] 2 }
	global CONFIG_DTLK
	write_tristate $cfg $autocfg CONFIG_DTLK $CONFIG_DTLK [list $notmod] 2
	global CONFIG_R3964
	write_tristate $cfg $autocfg CONFIG_R3964 $CONFIG_R3964 [list $notmod] 2
	global CONFIG_APPLICOM
	write_tristate $cfg $autocfg CONFIG_APPLICOM $CONFIG_APPLICOM [list $notmod] 2
	global CONFIG_SONYPI
	if {($CONFIG_EXPERIMENTAL == 1 && $CONFIG_X86 == 1 && $CONFIG_X86_64 != 1) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {write_tristate $cfg $autocfg CONFIG_SONYPI $CONFIG_SONYPI [list $CONFIG_PCI] 2 }
	write_comment $cfg $autocfg "Ftape, the floppy tape device driver"
	global CONFIG_FTAPE
	write_tristate $cfg $autocfg CONFIG_FTAPE $CONFIG_FTAPE [list $notmod] 2
	global CONFIG_ZFTAPE
	if {($CONFIG_FTAPE != 0) && ($CONFIG_FTAPE == 1 || $CONFIG_FTAPE == 2 || $CONFIG_FTAPE == 4)} then {write_tristate $cfg $autocfg CONFIG_ZFTAPE $CONFIG_ZFTAPE [list $CONFIG_FTAPE] 2 }
	global CONFIG_ZFT_DFLT_BLK_SZ
	if {($CONFIG_FTAPE != 0) && ($CONFIG_ZFTAPE != 0)} then {write_int $cfg $autocfg CONFIG_ZFT_DFLT_BLK_SZ $CONFIG_ZFT_DFLT_BLK_SZ $notmod }
	if {($CONFIG_FTAPE != 0) && ($CONFIG_ZFTAPE != 0)} then {write_comment $cfg $autocfg "  The compressor will be built as a module only!"}
	global CONFIG_ZFT_COMPRESSOR
	if {($CONFIG_FTAPE != 0) && ($CONFIG_ZFTAPE != 0)} then {write_tristate $cfg $autocfg CONFIG_ZFT_COMPRESSOR $CONSTANT_M [list $notmod] 2 }
	global CONFIG_FT_NR_BUFFERS
	if {($CONFIG_FTAPE != 0) && ($CONFIG_EXPERIMENTAL == 1)} then {write_int $cfg $autocfg CONFIG_FT_NR_BUFFERS $CONFIG_FT_NR_BUFFERS $notmod }
	global CONFIG_FT_PROC_FS
	if {($CONFIG_FTAPE != 0) && ($CONFIG_PROC_FS == 1)} then {write_tristate $cfg $autocfg CONFIG_FT_PROC_FS $CONFIG_FT_PROC_FS [list $notmod] 2 }
	global tmpvar_33
	if {($CONFIG_FTAPE != 0)} then {
	if { $tmpvar_33 == "Normal" } then { write_tristate $cfg $autocfg CONFIG_FT_NORMAL_DEBUG 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_FT_NORMAL_DEBUG 0 [list $notmod] 2 }
	if { $tmpvar_33 == "Excessive" } then { write_tristate $cfg $autocfg CONFIG_FT_FULL_DEBUG 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_FT_FULL_DEBUG 0 [list $notmod] 2 }
	if { $tmpvar_33 == "Reduced" } then { write_tristate $cfg $autocfg CONFIG_FT_NO_TRACE 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_FT_NO_TRACE 0 [list $notmod] 2 }
	if { $tmpvar_33 == "None" } then { write_tristate $cfg $autocfg CONFIG_FT_NO_TRACE_AT_ALL 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_FT_NO_TRACE_AT_ALL 0 [list $notmod] 2 }}
	if {($CONFIG_FTAPE != 0)} then {write_comment $cfg $autocfg "Hardware configuration"}
	global tmpvar_34
	if {($CONFIG_FTAPE != 0)} then {
	if { $tmpvar_34 == "Standard" } then { write_tristate $cfg $autocfg CONFIG_FT_STD_FDC 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_FT_STD_FDC 0 [list $notmod] 2 }
	if { $tmpvar_34 == "MACH-2" } then { write_tristate $cfg $autocfg CONFIG_FT_MACH2 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_FT_MACH2 0 [list $notmod] 2 }
	if { $tmpvar_34 == "FC-10/FC-20" } then { write_tristate $cfg $autocfg CONFIG_FT_PROBE_FC10 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_FT_PROBE_FC10 0 [list $notmod] 2 }
	if { $tmpvar_34 == "Alt/82078" } then { write_tristate $cfg $autocfg CONFIG_FT_ALT_FDC 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_FT_ALT_FDC 0 [list $notmod] 2 }}
	global CONFIG_FT_STD_FDC
	if {($CONFIG_FTAPE != 0) && ($CONFIG_FT_STD_FDC != 1)} then {write_comment $cfg $autocfg "   Consult the manuals of your tape drive for the correct settings!"}
	global CONFIG_FT_FDC_BASE
	if {($CONFIG_FTAPE != 0) && ($CONFIG_FT_STD_FDC != 1)} then {write_hex $cfg $autocfg CONFIG_FT_FDC_BASE $CONFIG_FT_FDC_BASE $notmod }
	global CONFIG_FT_FDC_IRQ
	if {($CONFIG_FTAPE != 0) && ($CONFIG_FT_STD_FDC != 1)} then {write_int $cfg $autocfg CONFIG_FT_FDC_IRQ $CONFIG_FT_FDC_IRQ $notmod }
	global CONFIG_FT_FDC_DMA
	if {($CONFIG_FTAPE != 0) && ($CONFIG_FT_STD_FDC != 1)} then {write_int $cfg $autocfg CONFIG_FT_FDC_DMA $CONFIG_FT_FDC_DMA $notmod }
	global CONFIG_FT_FDC_THR
	if {($CONFIG_FTAPE != 0) && ($CONFIG_EXPERIMENTAL == 1)} then {write_int $cfg $autocfg CONFIG_FT_FDC_THR $CONFIG_FT_FDC_THR $notmod }
	global CONFIG_FT_FDC_MAX_RATE
	if {($CONFIG_FTAPE != 0) && ($CONFIG_EXPERIMENTAL == 1)} then {write_int $cfg $autocfg CONFIG_FT_FDC_MAX_RATE $CONFIG_FT_FDC_MAX_RATE $notmod }
	global CONFIG_FT_ALPHA_CLOCK
	if {($CONFIG_FTAPE != 0)} then {write_int $cfg $autocfg CONFIG_FT_ALPHA_CLOCK 0 $notmod }
	global CONFIG_AGP
	write_tristate $cfg $autocfg CONFIG_AGP $CONFIG_AGP [list $notmod] 2
	global CONFIG_AGP_INTEL
	if {($CONFIG_AGP != 0)} then {write_tristate $cfg $autocfg CONFIG_AGP_INTEL $CONFIG_AGP_INTEL [list $notmod] 2 }
	global CONFIG_AGP_I810
	if {($CONFIG_AGP != 0)} then {write_tristate $cfg $autocfg CONFIG_AGP_I810 $CONFIG_AGP_I810 [list $notmod] 2 }
	global CONFIG_AGP_VIA
	if {($CONFIG_AGP != 0)} then {write_tristate $cfg $autocfg CONFIG_AGP_VIA $CONFIG_AGP_VIA [list $notmod] 2 }
	global CONFIG_AGP_AMD
	if {($CONFIG_AGP != 0)} then {write_tristate $cfg $autocfg CONFIG_AGP_AMD $CONFIG_AGP_AMD [list $notmod] 2 }
	global CONFIG_AGP_AMD_K8
	global CONFIG_GART_IOMMU
	if {($CONFIG_AGP != 0) && ($CONFIG_GART_IOMMU != 1)} then {write_tristate $cfg $autocfg CONFIG_AGP_AMD_K8 $CONFIG_AGP_AMD_K8 [list $notmod] 2 }
	global CONFIG_AGP_SIS
	if {($CONFIG_AGP != 0)} then {write_tristate $cfg $autocfg CONFIG_AGP_SIS $CONFIG_AGP_SIS [list $notmod] 2 }
	global CONFIG_AGP_ALI
	if {($CONFIG_AGP != 0)} then {write_tristate $cfg $autocfg CONFIG_AGP_ALI $CONFIG_AGP_ALI [list $notmod] 2 }
	global CONFIG_AGP_SWORKS
	if {($CONFIG_AGP != 0)} then {write_tristate $cfg $autocfg CONFIG_AGP_SWORKS $CONFIG_AGP_SWORKS [list $notmod] 2 }
	global CONFIG_AGP_ATI
	if {($CONFIG_AGP != 0)} then {write_tristate $cfg $autocfg CONFIG_AGP_ATI $CONFIG_AGP_ATI [list $notmod] 2 }
	write_comment $cfg $autocfg "Direct Rendering Manager (XFree86 DRI support)"
	global CONFIG_DRM
	write_tristate $cfg $autocfg CONFIG_DRM $CONFIG_DRM [list $notmod] 2
	global CONFIG_DRM_OLD
	if {($CONFIG_DRM == 1)} then {write_tristate $cfg $autocfg CONFIG_DRM_OLD $CONFIG_DRM_OLD [list $notmod] 2 }
	if {($CONFIG_DRM == 1) && ($CONFIG_DRM_OLD == 1)} then {write_comment $cfg $autocfg "DRM 4.0 drivers"}
	global CONFIG_DRM40_TDFX
	if {($CONFIG_DRM == 1) && ($CONFIG_DRM_OLD == 1)} then {write_tristate $cfg $autocfg CONFIG_DRM40_TDFX $CONFIG_DRM40_TDFX [list $notmod] 2 }
	global CONFIG_DRM40_GAMMA
	if {($CONFIG_DRM == 1) && ($CONFIG_DRM_OLD == 1)} then {write_tristate $cfg $autocfg CONFIG_DRM40_GAMMA $CONFIG_DRM40_GAMMA [list $notmod] 2 }
	global CONFIG_DRM40_R128
	if {($CONFIG_DRM == 1) && ($CONFIG_DRM_OLD == 1) && ($CONFIG_AGP == 1 || $CONFIG_AGP == 2 || $CONFIG_AGP == 4)} then {write_tristate $cfg $autocfg CONFIG_DRM40_R128 $CONFIG_DRM40_R128 [list $CONFIG_AGP] 2 }
	global CONFIG_DRM40_RADEON
	if {($CONFIG_DRM == 1) && ($CONFIG_DRM_OLD == 1) && ($CONFIG_AGP == 1 || $CONFIG_AGP == 2 || $CONFIG_AGP == 4)} then {write_tristate $cfg $autocfg CONFIG_DRM40_RADEON $CONFIG_DRM40_RADEON [list $CONFIG_AGP] 2 }
	global CONFIG_DRM40_I810
	if {($CONFIG_DRM == 1) && ($CONFIG_DRM_OLD == 1) && ($CONFIG_AGP == 1 || $CONFIG_AGP == 2 || $CONFIG_AGP == 4)} then {write_tristate $cfg $autocfg CONFIG_DRM40_I810 $CONFIG_DRM40_I810 [list $CONFIG_AGP] 2 }
	global CONFIG_DRM40_MGA
	if {($CONFIG_DRM == 1) && ($CONFIG_DRM_OLD == 1) && ($CONFIG_AGP == 1 || $CONFIG_AGP == 2 || $CONFIG_AGP == 4)} then {write_tristate $cfg $autocfg CONFIG_DRM40_MGA $CONFIG_DRM40_MGA [list $CONFIG_AGP] 2 }
	if {($CONFIG_DRM == 1) && ($CONFIG_DRM_OLD != 1)} then {write_comment $cfg $autocfg "DRM 4.1 drivers"}
	global CONFIG_DRM_NEW
	if {($CONFIG_DRM == 1) && ($CONFIG_DRM_OLD != 1)} then {write_tristate $cfg $autocfg CONFIG_DRM_NEW $CONSTANT_Y [list $notmod] 2 }
	global CONFIG_DRM_TDFX
	if {($CONFIG_DRM == 1) && ($CONFIG_DRM_OLD != 1)} then {write_tristate $cfg $autocfg CONFIG_DRM_TDFX $CONFIG_DRM_TDFX [list $notmod] 2 }
	global CONFIG_DRM_GAMMA
	if {($CONFIG_DRM == 1) && ($CONFIG_DRM_OLD != 1)} then {write_tristate $cfg $autocfg CONFIG_DRM_GAMMA $CONFIG_DRM_GAMMA [list $notmod] 2 }
	global CONFIG_DRM_R128
	if {($CONFIG_DRM == 1) && ($CONFIG_DRM_OLD != 1)} then {write_tristate $cfg $autocfg CONFIG_DRM_R128 $CONFIG_DRM_R128 [list $notmod] 2 }
	global CONFIG_DRM_RADEON
	if {($CONFIG_DRM == 1) && ($CONFIG_DRM_OLD != 1)} then {write_tristate $cfg $autocfg CONFIG_DRM_RADEON $CONFIG_DRM_RADEON [list $notmod] 2 }
	global CONFIG_DRM_I810
	if {($CONFIG_DRM == 1) && ($CONFIG_DRM_OLD != 1) && ($CONFIG_AGP == 1 || $CONFIG_AGP == 2 || $CONFIG_AGP == 4)} then {write_tristate $cfg $autocfg CONFIG_DRM_I810 $CONFIG_DRM_I810 [list $CONFIG_AGP] 2 }
	global CONFIG_DRM_I810_XFREE_41
	if {($CONFIG_DRM == 1) && ($CONFIG_DRM_OLD != 1) && ($CONFIG_DRM_I810 == 1 || $CONFIG_DRM_I810 == 2 || $CONFIG_DRM_I810 == 4)} then {write_tristate $cfg $autocfg CONFIG_DRM_I810_XFREE_41 $CONFIG_DRM_I810_XFREE_41 [list $CONFIG_DRM_I810] 1 }
	global CONFIG_DRM_I830
	if {($CONFIG_DRM == 1) && ($CONFIG_DRM_OLD != 1) && ($CONFIG_AGP == 1 || $CONFIG_AGP == 2 || $CONFIG_AGP == 4)} then {write_tristate $cfg $autocfg CONFIG_DRM_I830 $CONFIG_DRM_I830 [list $CONFIG_AGP] 2 }
	global CONFIG_DRM_MGA
	if {($CONFIG_DRM == 1) && ($CONFIG_DRM_OLD != 1) && ($CONFIG_AGP == 1 || $CONFIG_AGP == 2 || $CONFIG_AGP == 4)} then {write_tristate $cfg $autocfg CONFIG_DRM_MGA $CONFIG_DRM_MGA [list $CONFIG_AGP] 2 }
	global CONFIG_DRM_SIS
	if {($CONFIG_DRM == 1) && ($CONFIG_DRM_OLD != 1) && ($CONFIG_AGP == 1 || $CONFIG_AGP == 2 || $CONFIG_AGP == 4)} then {write_tristate $cfg $autocfg CONFIG_DRM_SIS $CONFIG_DRM_SIS [list $CONFIG_AGP] 2 }
	if {($CONFIG_HOTPLUG == 1 && $CONFIG_PCMCIA != 0)} then {write_comment $cfg $autocfg "PCMCIA character devices"}
	global CONFIG_PCMCIA_SERIAL_CS
	if {($CONFIG_HOTPLUG == 1 && $CONFIG_PCMCIA != 0) && ($CONFIG_SERIAL == 1 || $CONFIG_SERIAL == 2 || $CONFIG_SERIAL == 4)} then {write_tristate $cfg $autocfg CONFIG_PCMCIA_SERIAL_CS $CONFIG_PCMCIA_SERIAL_CS [list $CONFIG_SERIAL] 2 }
	global CONFIG_PCMCIA_CHRDEV
	if {($CONFIG_HOTPLUG == 1 && $CONFIG_PCMCIA != 0) && ($CONFIG_PCMCIA_SERIAL_CS == 1)} then {write_tristate $cfg $autocfg CONFIG_PCMCIA_CHRDEV $CONSTANT_Y [list $notmod] 2 }
	global CONFIG_SYNCLINK_CS
	if {($CONFIG_HOTPLUG == 1 && $CONFIG_PCMCIA != 0)} then {write_tristate $cfg $autocfg CONFIG_SYNCLINK_CS $CONFIG_SYNCLINK_CS [list $notmod] 2 }
	global CONFIG_KBDMOUSE
	if {($CONFIG_ARCH_ACORN == 1 && $CONFIG_BUSMOUSE == 1) && ($CONFIG_ARCH_RPC != 1)} then {write_tristate $cfg $autocfg CONFIG_KBDMOUSE $CONSTANT_Y [list $notmod] 2 }
	global CONFIG_RPCMOUSE
	if {($CONFIG_ARCH_ACORN == 1 && $CONFIG_BUSMOUSE == 1) && ($CONFIG_ARCH_RPC == 1)} then {write_tristate $cfg $autocfg CONFIG_RPCMOUSE $CONSTANT_Y [list $notmod] 2 }
	write_comment $cfg $autocfg "Multimedia devices"
	global CONFIG_VIDEO_DEV
	write_tristate $cfg $autocfg CONFIG_VIDEO_DEV $CONFIG_VIDEO_DEV [list $notmod] 2
	if {($CONFIG_VIDEO_DEV != 0)} then {write_comment $cfg $autocfg "Video For Linux"}
	global CONFIG_VIDEO_PROC_FS
	if {($CONFIG_VIDEO_DEV != 0)} then {write_tristate $cfg $autocfg CONFIG_VIDEO_PROC_FS $CONFIG_VIDEO_PROC_FS [list $notmod] 2 }
	global CONFIG_I2C_PARPORT
	if {($CONFIG_VIDEO_DEV != 0) && ($CONFIG_PARPORT == 1 || $CONFIG_PARPORT == 2 || $CONFIG_PARPORT == 4) && ($CONFIG_I2C == 1 || $CONFIG_I2C == 2 || $CONFIG_I2C == 4)} then {write_tristate $cfg $autocfg CONFIG_I2C_PARPORT $CONFIG_I2C_PARPORT [list $CONFIG_PARPORT $CONFIG_I2C] 2 }
	if {($CONFIG_VIDEO_DEV != 0)} then {write_comment $cfg $autocfg "Video Adapters"}
	global CONFIG_VIDEO_BT848
	global CONFIG_SOUND
	if {($CONFIG_VIDEO_DEV != 0) && ($CONFIG_VIDEO_DEV == 1 || $CONFIG_VIDEO_DEV == 2 || $CONFIG_VIDEO_DEV == 4) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4) && ($CONFIG_I2C_ALGOBIT == 1 || $CONFIG_I2C_ALGOBIT == 2 || $CONFIG_I2C_ALGOBIT == 4) && ($CONFIG_SOUND == 1 || $CONFIG_SOUND == 2 || $CONFIG_SOUND == 4)} then {write_tristate $cfg $autocfg CONFIG_VIDEO_BT848 $CONFIG_VIDEO_BT848 [list $CONFIG_VIDEO_DEV $CONFIG_PCI $CONFIG_I2C_ALGOBIT $CONFIG_SOUND] 2 }
	global CONFIG_VIDEO_PMS
	if {($CONFIG_VIDEO_DEV != 0) && ($CONFIG_VIDEO_DEV == 1 || $CONFIG_VIDEO_DEV == 2 || $CONFIG_VIDEO_DEV == 4)} then {write_tristate $cfg $autocfg CONFIG_VIDEO_PMS $CONFIG_VIDEO_PMS [list $CONFIG_VIDEO_DEV] 2 }
	global CONFIG_VIDEO_BWQCAM
	if {($CONFIG_VIDEO_DEV != 0) && ($CONFIG_PARPORT != 0) && ($CONFIG_VIDEO_DEV == 1 || $CONFIG_VIDEO_DEV == 2 || $CONFIG_VIDEO_DEV == 4) && ($CONFIG_PARPORT == 1 || $CONFIG_PARPORT == 2 || $CONFIG_PARPORT == 4)} then {write_tristate $cfg $autocfg CONFIG_VIDEO_BWQCAM $CONFIG_VIDEO_BWQCAM [list $CONFIG_VIDEO_DEV $CONFIG_PARPORT] 2 }
	global CONFIG_VIDEO_CQCAM
	if {($CONFIG_VIDEO_DEV != 0) && ($CONFIG_PARPORT != 0) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_VIDEO_DEV == 1 || $CONFIG_VIDEO_DEV == 2 || $CONFIG_VIDEO_DEV == 4) && ($CONFIG_PARPORT == 1 || $CONFIG_PARPORT == 2 || $CONFIG_PARPORT == 4)} then {write_tristate $cfg $autocfg CONFIG_VIDEO_CQCAM $CONFIG_VIDEO_CQCAM [list $CONFIG_VIDEO_DEV $CONFIG_PARPORT] 2 }
	global CONFIG_VIDEO_W9966
	if {($CONFIG_VIDEO_DEV != 0) && ($CONFIG_PARPORT != 0) && ($CONFIG_PARPORT_1284 != 0) && ($CONFIG_VIDEO_DEV == 1 || $CONFIG_VIDEO_DEV == 2 || $CONFIG_VIDEO_DEV == 4) && ($CONFIG_PARPORT == 1 || $CONFIG_PARPORT == 2 || $CONFIG_PARPORT == 4)} then {write_tristate $cfg $autocfg CONFIG_VIDEO_W9966 $CONFIG_VIDEO_W9966 [list $CONFIG_VIDEO_DEV $CONFIG_PARPORT] 2 }
	global CONFIG_VIDEO_CPIA
	if {($CONFIG_VIDEO_DEV != 0) && ($CONFIG_VIDEO_DEV == 1 || $CONFIG_VIDEO_DEV == 2 || $CONFIG_VIDEO_DEV == 4)} then {write_tristate $cfg $autocfg CONFIG_VIDEO_CPIA $CONFIG_VIDEO_CPIA [list $CONFIG_VIDEO_DEV] 2 }
	global CONFIG_VIDEO_CPIA_PP
	if {($CONFIG_VIDEO_DEV != 0) && ($CONFIG_VIDEO_CPIA != 0) && ($CONFIG_PARPORT_1284 != 0) && ($CONFIG_VIDEO_CPIA == 1 || $CONFIG_VIDEO_CPIA == 2 || $CONFIG_VIDEO_CPIA == 4) && ($CONFIG_PARPORT == 1 || $CONFIG_PARPORT == 2 || $CONFIG_PARPORT == 4)} then {write_tristate $cfg $autocfg CONFIG_VIDEO_CPIA_PP $CONFIG_VIDEO_CPIA_PP [list $CONFIG_VIDEO_CPIA $CONFIG_PARPORT] 2 }
	global CONFIG_VIDEO_CPIA_USB
	if {($CONFIG_VIDEO_DEV != 0) && ($CONFIG_VIDEO_CPIA != 0) && ($CONFIG_USB != 0) && ($CONFIG_VIDEO_CPIA == 1 || $CONFIG_VIDEO_CPIA == 2 || $CONFIG_VIDEO_CPIA == 4) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4)} then {write_tristate $cfg $autocfg CONFIG_VIDEO_CPIA_USB $CONFIG_VIDEO_CPIA_USB [list $CONFIG_VIDEO_CPIA $CONFIG_USB] 2 }
	global CONFIG_VIDEO_SAA5249
	if {($CONFIG_VIDEO_DEV != 0) && ($CONFIG_VIDEO_DEV == 1 || $CONFIG_VIDEO_DEV == 2 || $CONFIG_VIDEO_DEV == 4) && ($CONFIG_I2C == 1 || $CONFIG_I2C == 2 || $CONFIG_I2C == 4)} then {write_tristate $cfg $autocfg CONFIG_VIDEO_SAA5249 $CONFIG_VIDEO_SAA5249 [list $CONFIG_VIDEO_DEV $CONFIG_I2C] 2 }
	global CONFIG_TUNER_3036
	if {($CONFIG_VIDEO_DEV != 0) && ($CONFIG_VIDEO_DEV == 1 || $CONFIG_VIDEO_DEV == 2 || $CONFIG_VIDEO_DEV == 4) && ($CONFIG_I2C == 1 || $CONFIG_I2C == 2 || $CONFIG_I2C == 4)} then {write_tristate $cfg $autocfg CONFIG_TUNER_3036 $CONFIG_TUNER_3036 [list $CONFIG_VIDEO_DEV $CONFIG_I2C] 2 }
	global CONFIG_VIDEO_STRADIS
	if {($CONFIG_VIDEO_DEV != 0) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_VIDEO_DEV == 1 || $CONFIG_VIDEO_DEV == 2 || $CONFIG_VIDEO_DEV == 4) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {write_tristate $cfg $autocfg CONFIG_VIDEO_STRADIS $CONFIG_VIDEO_STRADIS [list $CONFIG_VIDEO_DEV $CONFIG_PCI] 2 }
	global CONFIG_VIDEO_ZORAN
	if {($CONFIG_VIDEO_DEV != 0) && ($CONFIG_VIDEO_DEV == 1 || $CONFIG_VIDEO_DEV == 2 || $CONFIG_VIDEO_DEV == 4) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4) && ($CONFIG_I2C == 1 || $CONFIG_I2C == 2 || $CONFIG_I2C == 4)} then {write_tristate $cfg $autocfg CONFIG_VIDEO_ZORAN $CONFIG_VIDEO_ZORAN [list $CONFIG_VIDEO_DEV $CONFIG_PCI $CONFIG_I2C] 2 }
	global CONFIG_VIDEO_ZORAN_BUZ
	if {($CONFIG_VIDEO_DEV != 0) && ($CONFIG_VIDEO_ZORAN == 1 || $CONFIG_VIDEO_ZORAN == 2 || $CONFIG_VIDEO_ZORAN == 4) && ($CONFIG_VIDEO_DEV == 1 || $CONFIG_VIDEO_DEV == 2 || $CONFIG_VIDEO_DEV == 4) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4) && ($CONFIG_I2C == 1 || $CONFIG_I2C == 2 || $CONFIG_I2C == 4)} then {write_tristate $cfg $autocfg CONFIG_VIDEO_ZORAN_BUZ $CONFIG_VIDEO_ZORAN_BUZ [list $CONFIG_VIDEO_ZORAN $CONFIG_VIDEO_DEV $CONFIG_PCI $CONFIG_I2C] 2 }
	global CONFIG_VIDEO_ZORAN_DC10
	if {($CONFIG_VIDEO_DEV != 0) && ($CONFIG_VIDEO_ZORAN == 1 || $CONFIG_VIDEO_ZORAN == 2 || $CONFIG_VIDEO_ZORAN == 4) && ($CONFIG_VIDEO_DEV == 1 || $CONFIG_VIDEO_DEV == 2 || $CONFIG_VIDEO_DEV == 4) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4) && ($CONFIG_I2C == 1 || $CONFIG_I2C == 2 || $CONFIG_I2C == 4)} then {write_tristate $cfg $autocfg CONFIG_VIDEO_ZORAN_DC10 $CONFIG_VIDEO_ZORAN_DC10 [list $CONFIG_VIDEO_ZORAN $CONFIG_VIDEO_DEV $CONFIG_PCI $CONFIG_I2C] 2 }
	global CONFIG_VIDEO_ZORAN_LML33
	if {($CONFIG_VIDEO_DEV != 0) && ($CONFIG_VIDEO_ZORAN == 1 || $CONFIG_VIDEO_ZORAN == 2 || $CONFIG_VIDEO_ZORAN == 4) && ($CONFIG_VIDEO_DEV == 1 || $CONFIG_VIDEO_DEV == 2 || $CONFIG_VIDEO_DEV == 4) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4) && ($CONFIG_I2C == 1 || $CONFIG_I2C == 2 || $CONFIG_I2C == 4)} then {write_tristate $cfg $autocfg CONFIG_VIDEO_ZORAN_LML33 $CONFIG_VIDEO_ZORAN_LML33 [list $CONFIG_VIDEO_ZORAN $CONFIG_VIDEO_DEV $CONFIG_PCI $CONFIG_I2C] 2 }
	global CONFIG_VIDEO_ZR36120
	if {($CONFIG_VIDEO_DEV != 0) && ($CONFIG_VIDEO_DEV == 1 || $CONFIG_VIDEO_DEV == 2 || $CONFIG_VIDEO_DEV == 4) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4) && ($CONFIG_I2C == 1 || $CONFIG_I2C == 2 || $CONFIG_I2C == 4)} then {write_tristate $cfg $autocfg CONFIG_VIDEO_ZR36120 $CONFIG_VIDEO_ZR36120 [list $CONFIG_VIDEO_DEV $CONFIG_PCI $CONFIG_I2C] 2 }
	global CONFIG_VIDEO_CYBERPRO
	if {($CONFIG_VIDEO_DEV != 0) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_ARCH_NETWINDER == 1) && ($CONFIG_VIDEO_DEV == 1 || $CONFIG_VIDEO_DEV == 2 || $CONFIG_VIDEO_DEV == 4)} then {write_tristate $cfg $autocfg CONFIG_VIDEO_CYBERPRO $CONFIG_VIDEO_CYBERPRO [list $CONFIG_VIDEO_DEV] 2 }
	global CONFIG_VIDEO_MEYE
	if {($CONFIG_VIDEO_DEV != 0) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_VIDEO_DEV == 1 || $CONFIG_VIDEO_DEV == 2 || $CONFIG_VIDEO_DEV == 4) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4) && ($CONFIG_SONYPI == 1 || $CONFIG_SONYPI == 2 || $CONFIG_SONYPI == 4)} then {write_tristate $cfg $autocfg CONFIG_VIDEO_MEYE $CONFIG_VIDEO_MEYE [list $CONFIG_VIDEO_DEV $CONFIG_PCI $CONFIG_SONYPI] 2 }
	if {($CONFIG_VIDEO_DEV != 0)} then {write_comment $cfg $autocfg "Radio Adapters"}
	global CONFIG_RADIO_CADET
	if {($CONFIG_VIDEO_DEV != 0) && ($CONFIG_ISA == 1) && ($CONFIG_VIDEO_DEV == 1 || $CONFIG_VIDEO_DEV == 2 || $CONFIG_VIDEO_DEV == 4)} then {write_tristate $cfg $autocfg CONFIG_RADIO_CADET $CONFIG_RADIO_CADET [list $CONFIG_VIDEO_DEV] 2 }
	global CONFIG_RADIO_RTRACK
	if {($CONFIG_VIDEO_DEV != 0) && ($CONFIG_ISA == 1) && ($CONFIG_VIDEO_DEV == 1 || $CONFIG_VIDEO_DEV == 2 || $CONFIG_VIDEO_DEV == 4)} then {write_tristate $cfg $autocfg CONFIG_RADIO_RTRACK $CONFIG_RADIO_RTRACK [list $CONFIG_VIDEO_DEV] 2 }
	global CONFIG_RADIO_RTRACK_PORT
	if {($CONFIG_VIDEO_DEV != 0) && ($CONFIG_ISA == 1) && ($CONFIG_RADIO_RTRACK == 1)} then {write_hex $cfg $autocfg CONFIG_RADIO_RTRACK_PORT $CONFIG_RADIO_RTRACK_PORT $notmod }
	global CONFIG_RADIO_RTRACK2
	if {($CONFIG_VIDEO_DEV != 0) && ($CONFIG_ISA == 1) && ($CONFIG_VIDEO_DEV == 1 || $CONFIG_VIDEO_DEV == 2 || $CONFIG_VIDEO_DEV == 4)} then {write_tristate $cfg $autocfg CONFIG_RADIO_RTRACK2 $CONFIG_RADIO_RTRACK2 [list $CONFIG_VIDEO_DEV] 2 }
	global CONFIG_RADIO_RTRACK2_PORT
	if {($CONFIG_VIDEO_DEV != 0) && ($CONFIG_ISA == 1) && ($CONFIG_RADIO_RTRACK2 == 1)} then {write_hex $cfg $autocfg CONFIG_RADIO_RTRACK2_PORT $CONFIG_RADIO_RTRACK2_PORT $notmod }
	global CONFIG_RADIO_AZTECH
	if {($CONFIG_VIDEO_DEV != 0) && ($CONFIG_ISA == 1) && ($CONFIG_VIDEO_DEV == 1 || $CONFIG_VIDEO_DEV == 2 || $CONFIG_VIDEO_DEV == 4)} then {write_tristate $cfg $autocfg CONFIG_RADIO_AZTECH $CONFIG_RADIO_AZTECH [list $CONFIG_VIDEO_DEV] 2 }
	global CONFIG_RADIO_AZTECH_PORT
	if {($CONFIG_VIDEO_DEV != 0) && ($CONFIG_ISA == 1) && ($CONFIG_RADIO_AZTECH == 1)} then {write_hex $cfg $autocfg CONFIG_RADIO_AZTECH_PORT $CONFIG_RADIO_AZTECH_PORT $notmod }
	global CONFIG_RADIO_GEMTEK
	if {($CONFIG_VIDEO_DEV != 0) && ($CONFIG_ISA == 1) && ($CONFIG_VIDEO_DEV == 1 || $CONFIG_VIDEO_DEV == 2 || $CONFIG_VIDEO_DEV == 4)} then {write_tristate $cfg $autocfg CONFIG_RADIO_GEMTEK $CONFIG_RADIO_GEMTEK [list $CONFIG_VIDEO_DEV] 2 }
	global CONFIG_RADIO_GEMTEK_PORT
	if {($CONFIG_VIDEO_DEV != 0) && ($CONFIG_ISA == 1) && ($CONFIG_RADIO_GEMTEK == 1)} then {write_hex $cfg $autocfg CONFIG_RADIO_GEMTEK_PORT $CONFIG_RADIO_GEMTEK_PORT $notmod }
	global CONFIG_RADIO_GEMTEK_PCI
	if {($CONFIG_VIDEO_DEV != 0) && ($CONFIG_VIDEO_DEV == 1 || $CONFIG_VIDEO_DEV == 2 || $CONFIG_VIDEO_DEV == 4) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {write_tristate $cfg $autocfg CONFIG_RADIO_GEMTEK_PCI $CONFIG_RADIO_GEMTEK_PCI [list $CONFIG_VIDEO_DEV $CONFIG_PCI] 2 }
	global CONFIG_RADIO_MAXIRADIO
	if {($CONFIG_VIDEO_DEV != 0) && ($CONFIG_VIDEO_DEV == 1 || $CONFIG_VIDEO_DEV == 2 || $CONFIG_VIDEO_DEV == 4)} then {write_tristate $cfg $autocfg CONFIG_RADIO_MAXIRADIO $CONFIG_RADIO_MAXIRADIO [list $CONFIG_VIDEO_DEV] 2 }
	global CONFIG_RADIO_MAESTRO
	if {($CONFIG_VIDEO_DEV != 0) && ($CONFIG_VIDEO_DEV == 1 || $CONFIG_VIDEO_DEV == 2 || $CONFIG_VIDEO_DEV == 4)} then {write_tristate $cfg $autocfg CONFIG_RADIO_MAESTRO $CONFIG_RADIO_MAESTRO [list $CONFIG_VIDEO_DEV] 2 }
	global CONFIG_RADIO_MIROPCM20
	global CONFIG_SOUND_ACI_MIXER
	if {($CONFIG_VIDEO_DEV != 0) && ($CONFIG_VIDEO_DEV == 1 || $CONFIG_VIDEO_DEV == 2 || $CONFIG_VIDEO_DEV == 4) && ($CONFIG_SOUND_ACI_MIXER == 1 || $CONFIG_SOUND_ACI_MIXER == 2 || $CONFIG_SOUND_ACI_MIXER == 4)} then {write_tristate $cfg $autocfg CONFIG_RADIO_MIROPCM20 $CONFIG_RADIO_MIROPCM20 [list $CONFIG_VIDEO_DEV $CONFIG_SOUND_ACI_MIXER] 2 }
	global CONFIG_RADIO_MIROPCM20_RDS
	if {($CONFIG_VIDEO_DEV != 0) && ($CONFIG_ISA == 1) && ($CONFIG_RADIO_MIROPCM20 == 1 || $CONFIG_RADIO_MIROPCM20 == 2 || $CONFIG_RADIO_MIROPCM20 == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {write_tristate $cfg $autocfg CONFIG_RADIO_MIROPCM20_RDS $CONFIG_RADIO_MIROPCM20_RDS [list $CONFIG_RADIO_MIROPCM20 $CONFIG_EXPERIMENTAL] 2 }
	global CONFIG_RADIO_SF16FMI
	if {($CONFIG_VIDEO_DEV != 0) && ($CONFIG_ISA == 1) && ($CONFIG_VIDEO_DEV == 1 || $CONFIG_VIDEO_DEV == 2 || $CONFIG_VIDEO_DEV == 4)} then {write_tristate $cfg $autocfg CONFIG_RADIO_SF16FMI $CONFIG_RADIO_SF16FMI [list $CONFIG_VIDEO_DEV] 2 }
	global CONFIG_RADIO_SF16FMR2
	if {($CONFIG_VIDEO_DEV != 0) && ($CONFIG_ISA == 1) && ($CONFIG_VIDEO_DEV == 1 || $CONFIG_VIDEO_DEV == 2 || $CONFIG_VIDEO_DEV == 4)} then {write_tristate $cfg $autocfg CONFIG_RADIO_SF16FMR2 $CONFIG_RADIO_SF16FMR2 [list $CONFIG_VIDEO_DEV] 2 }
	global CONFIG_RADIO_TERRATEC
	if {($CONFIG_VIDEO_DEV != 0) && ($CONFIG_ISA == 1) && ($CONFIG_VIDEO_DEV == 1 || $CONFIG_VIDEO_DEV == 2 || $CONFIG_VIDEO_DEV == 4)} then {write_tristate $cfg $autocfg CONFIG_RADIO_TERRATEC $CONFIG_RADIO_TERRATEC [list $CONFIG_VIDEO_DEV] 2 }
	global CONFIG_RADIO_TERRATEC_PORT
	if {($CONFIG_VIDEO_DEV != 0) && ($CONFIG_ISA == 1) && ($CONFIG_RADIO_TERRATEC == 1)} then {write_hex $cfg $autocfg CONFIG_RADIO_TERRATEC_PORT $CONFIG_RADIO_TERRATEC_PORT $notmod }
	global CONFIG_RADIO_TRUST
	if {($CONFIG_VIDEO_DEV != 0) && ($CONFIG_ISA == 1) && ($CONFIG_VIDEO_DEV == 1 || $CONFIG_VIDEO_DEV == 2 || $CONFIG_VIDEO_DEV == 4)} then {write_tristate $cfg $autocfg CONFIG_RADIO_TRUST $CONFIG_RADIO_TRUST [list $CONFIG_VIDEO_DEV] 2 }
	global CONFIG_RADIO_TRUST_PORT
	if {($CONFIG_VIDEO_DEV != 0) && ($CONFIG_ISA == 1) && ($CONFIG_RADIO_TRUST == 1)} then {write_hex $cfg $autocfg CONFIG_RADIO_TRUST_PORT $CONFIG_RADIO_TRUST_PORT $notmod }
	global CONFIG_RADIO_TYPHOON
	if {($CONFIG_VIDEO_DEV != 0) && ($CONFIG_ISA == 1) && ($CONFIG_VIDEO_DEV == 1 || $CONFIG_VIDEO_DEV == 2 || $CONFIG_VIDEO_DEV == 4)} then {write_tristate $cfg $autocfg CONFIG_RADIO_TYPHOON $CONFIG_RADIO_TYPHOON [list $CONFIG_VIDEO_DEV] 2 }
	global CONFIG_RADIO_TYPHOON_PROC_FS
	if {($CONFIG_VIDEO_DEV != 0) && ($CONFIG_ISA == 1) && ($CONFIG_PROC_FS == 1) && ($CONFIG_RADIO_TYPHOON != 0)} then {write_tristate $cfg $autocfg CONFIG_RADIO_TYPHOON_PROC_FS $CONFIG_RADIO_TYPHOON_PROC_FS [list $notmod] 2 }
	global CONFIG_RADIO_TYPHOON_PORT
	if {($CONFIG_VIDEO_DEV != 0) && ($CONFIG_ISA == 1) && ($CONFIG_RADIO_TYPHOON == 1)} then {write_hex $cfg $autocfg CONFIG_RADIO_TYPHOON_PORT $CONFIG_RADIO_TYPHOON_PORT $notmod }
	global CONFIG_RADIO_TYPHOON_MUTEFREQ
	if {($CONFIG_VIDEO_DEV != 0) && ($CONFIG_ISA == 1) && ($CONFIG_RADIO_TYPHOON == 1)} then {write_int $cfg $autocfg CONFIG_RADIO_TYPHOON_MUTEFREQ $CONFIG_RADIO_TYPHOON_MUTEFREQ $notmod }
	global CONFIG_RADIO_ZOLTRIX
	if {($CONFIG_VIDEO_DEV != 0) && ($CONFIG_ISA == 1) && ($CONFIG_VIDEO_DEV == 1 || $CONFIG_VIDEO_DEV == 2 || $CONFIG_VIDEO_DEV == 4)} then {write_tristate $cfg $autocfg CONFIG_RADIO_ZOLTRIX $CONFIG_RADIO_ZOLTRIX [list $CONFIG_VIDEO_DEV] 2 }
	global CONFIG_RADIO_ZOLTRIX_PORT
	if {($CONFIG_VIDEO_DEV != 0) && ($CONFIG_ISA == 1) && ($CONFIG_RADIO_ZOLTRIX == 1)} then {write_hex $cfg $autocfg CONFIG_RADIO_ZOLTRIX_PORT $CONFIG_RADIO_ZOLTRIX_PORT $notmod }
	write_comment $cfg $autocfg "File systems"
	global CONFIG_QUOTA
	write_tristate $cfg $autocfg CONFIG_QUOTA $CONFIG_QUOTA [list $notmod] 2
	global CONFIG_QFMT_V2
	if {($CONFIG_QUOTA == 1 || $CONFIG_QUOTA == 2 || $CONFIG_QUOTA == 4)} then {write_tristate $cfg $autocfg CONFIG_QFMT_V2 $CONFIG_QFMT_V2 [list $CONFIG_QUOTA] 2 }
	global CONFIG_AUTOFS_FS
	write_tristate $cfg $autocfg CONFIG_AUTOFS_FS $CONFIG_AUTOFS_FS [list $notmod] 2
	global CONFIG_AUTOFS4_FS
	write_tristate $cfg $autocfg CONFIG_AUTOFS4_FS $CONFIG_AUTOFS4_FS [list $notmod] 2
	global CONFIG_REISERFS_FS
	write_tristate $cfg $autocfg CONFIG_REISERFS_FS $CONFIG_REISERFS_FS [list $notmod] 2
	global CONFIG_REISERFS_CHECK
	if {($CONFIG_REISERFS_FS == 1 || $CONFIG_REISERFS_FS == 2 || $CONFIG_REISERFS_FS == 4)} then {write_tristate $cfg $autocfg CONFIG_REISERFS_CHECK $CONFIG_REISERFS_CHECK [list $CONFIG_REISERFS_FS] 1 }
	global CONFIG_REISERFS_PROC_INFO
	if {($CONFIG_REISERFS_FS == 1 || $CONFIG_REISERFS_FS == 2 || $CONFIG_REISERFS_FS == 4)} then {write_tristate $cfg $autocfg CONFIG_REISERFS_PROC_INFO $CONFIG_REISERFS_PROC_INFO [list $CONFIG_REISERFS_FS] 1 }
	global CONFIG_ADFS_FS
	if {($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {write_tristate $cfg $autocfg CONFIG_ADFS_FS $CONFIG_ADFS_FS [list $CONFIG_EXPERIMENTAL] 2 }
	global CONFIG_ADFS_FS_RW
	if {($CONFIG_ADFS_FS == 1 || $CONFIG_ADFS_FS == 2 || $CONFIG_ADFS_FS == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {write_tristate $cfg $autocfg CONFIG_ADFS_FS_RW $CONFIG_ADFS_FS_RW [list $CONFIG_ADFS_FS $CONFIG_EXPERIMENTAL] 1 }
	global CONFIG_AFFS_FS
	if {($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {write_tristate $cfg $autocfg CONFIG_AFFS_FS $CONFIG_AFFS_FS [list $CONFIG_EXPERIMENTAL] 2 }
	global CONFIG_HFS_FS
	if {($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {write_tristate $cfg $autocfg CONFIG_HFS_FS $CONFIG_HFS_FS [list $CONFIG_EXPERIMENTAL] 2 }
	global CONFIG_HFSPLUS_FS
	if {($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {write_tristate $cfg $autocfg CONFIG_HFSPLUS_FS $CONFIG_HFSPLUS_FS [list $CONFIG_EXPERIMENTAL] 2 }
	global CONFIG_BEFS_FS
	if {($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {write_tristate $cfg $autocfg CONFIG_BEFS_FS $CONFIG_BEFS_FS [list $CONFIG_EXPERIMENTAL] 2 }
	global CONFIG_BEFS_DEBUG
	if {($CONFIG_BEFS_FS == 1 || $CONFIG_BEFS_FS == 2 || $CONFIG_BEFS_FS == 4)} then {write_tristate $cfg $autocfg CONFIG_BEFS_DEBUG $CONFIG_BEFS_DEBUG [list $CONFIG_BEFS_FS] 1 }
	global CONFIG_BFS_FS
	if {($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {write_tristate $cfg $autocfg CONFIG_BFS_FS $CONFIG_BFS_FS [list $CONFIG_EXPERIMENTAL] 2 }
	global CONFIG_EXT3_FS
	write_tristate $cfg $autocfg CONFIG_EXT3_FS $CONFIG_EXT3_FS [list $notmod] 2
	global CONFIG_JBD
	write_tristate $cfg $autocfg CONFIG_JBD $CONFIG_JBD [list $notmod] 2
	global CONFIG_JBD_DEBUG
	if {($CONFIG_JBD == 1 || $CONFIG_JBD == 2 || $CONFIG_JBD == 4)} then {write_tristate $cfg $autocfg CONFIG_JBD_DEBUG $CONFIG_JBD_DEBUG [list $CONFIG_JBD] 1 }
	global CONFIG_FAT_FS
	write_tristate $cfg $autocfg CONFIG_FAT_FS $CONFIG_FAT_FS [list $notmod] 2
	global CONFIG_MSDOS_FS
	if {($CONFIG_FAT_FS == 1 || $CONFIG_FAT_FS == 2 || $CONFIG_FAT_FS == 4)} then {write_tristate $cfg $autocfg CONFIG_MSDOS_FS $CONFIG_MSDOS_FS [list $CONFIG_FAT_FS] 2 }
	global CONFIG_UMSDOS_FS
	if {($CONFIG_MSDOS_FS == 1 || $CONFIG_MSDOS_FS == 2 || $CONFIG_MSDOS_FS == 4)} then {write_tristate $cfg $autocfg CONFIG_UMSDOS_FS $CONFIG_UMSDOS_FS [list $CONFIG_MSDOS_FS] 2 }
	global CONFIG_VFAT_FS
	if {($CONFIG_FAT_FS == 1 || $CONFIG_FAT_FS == 2 || $CONFIG_FAT_FS == 4)} then {write_tristate $cfg $autocfg CONFIG_VFAT_FS $CONFIG_VFAT_FS [list $CONFIG_FAT_FS] 2 }
	global CONFIG_EFS_FS
	if {($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {write_tristate $cfg $autocfg CONFIG_EFS_FS $CONFIG_EFS_FS [list $CONFIG_EXPERIMENTAL] 2 }
	global CONFIG_JFFS_FS
	if {($CONFIG_MTD == 1 || $CONFIG_MTD == 2 || $CONFIG_MTD == 4)} then {write_tristate $cfg $autocfg CONFIG_JFFS_FS $CONFIG_JFFS_FS [list $CONFIG_MTD] 2 }
	global CONFIG_JFFS_FS_VERBOSE
	if {($CONFIG_JFFS_FS == 1 || $CONFIG_JFFS_FS == 2)} then {write_int $cfg $autocfg CONFIG_JFFS_FS_VERBOSE $CONFIG_JFFS_FS_VERBOSE $notmod }
	global CONFIG_JFFS_PROC_FS
	if {($CONFIG_JFFS_FS == 1 || $CONFIG_JFFS_FS == 2)} then {write_tristate $cfg $autocfg CONFIG_JFFS_PROC_FS $CONFIG_JFFS_PROC_FS [list $notmod] 2 }
	global CONFIG_JFFS2_FS
	if {($CONFIG_MTD == 1 || $CONFIG_MTD == 2 || $CONFIG_MTD == 4)} then {write_tristate $cfg $autocfg CONFIG_JFFS2_FS $CONFIG_JFFS2_FS [list $CONFIG_MTD] 2 }
	global CONFIG_JFFS2_FS_DEBUG
	if {($CONFIG_JFFS2_FS == 1 || $CONFIG_JFFS2_FS == 2)} then {write_int $cfg $autocfg CONFIG_JFFS2_FS_DEBUG $CONFIG_JFFS2_FS_DEBUG $notmod }
	global CONFIG_CRAMFS
	write_tristate $cfg $autocfg CONFIG_CRAMFS $CONFIG_CRAMFS [list $notmod] 2
	global CONFIG_TMPFS
	write_tristate $cfg $autocfg CONFIG_TMPFS $CONFIG_TMPFS [list $notmod] 2
	global CONFIG_RAMFS
	write_tristate $cfg $autocfg CONFIG_RAMFS $CONFIG_RAMFS [list $notmod] 2
	global CONFIG_ISO9660_FS
	write_tristate $cfg $autocfg CONFIG_ISO9660_FS $CONFIG_ISO9660_FS [list $notmod] 2
	global CONFIG_JOLIET
	if {($CONFIG_ISO9660_FS == 1 || $CONFIG_ISO9660_FS == 2 || $CONFIG_ISO9660_FS == 4)} then {write_tristate $cfg $autocfg CONFIG_JOLIET $CONFIG_JOLIET [list $CONFIG_ISO9660_FS] 1 }
	global CONFIG_ZISOFS
	if {($CONFIG_ISO9660_FS == 1 || $CONFIG_ISO9660_FS == 2 || $CONFIG_ISO9660_FS == 4)} then {write_tristate $cfg $autocfg CONFIG_ZISOFS $CONFIG_ZISOFS [list $CONFIG_ISO9660_FS] 1 }
	global CONFIG_JFS_FS
	write_tristate $cfg $autocfg CONFIG_JFS_FS $CONFIG_JFS_FS [list $notmod] 2
	global CONFIG_JFS_DEBUG
	if {($CONFIG_JFS_FS == 1 || $CONFIG_JFS_FS == 2 || $CONFIG_JFS_FS == 4)} then {write_tristate $cfg $autocfg CONFIG_JFS_DEBUG $CONFIG_JFS_DEBUG [list $CONFIG_JFS_FS] 1 }
	global CONFIG_JFS_STATISTICS
	if {($CONFIG_JFS_FS == 1 || $CONFIG_JFS_FS == 2 || $CONFIG_JFS_FS == 4)} then {write_tristate $cfg $autocfg CONFIG_JFS_STATISTICS $CONFIG_JFS_STATISTICS [list $CONFIG_JFS_FS] 1 }
	global CONFIG_MINIX_FS
	write_tristate $cfg $autocfg CONFIG_MINIX_FS $CONFIG_MINIX_FS [list $notmod] 2
	global CONFIG_VXFS_FS
	write_tristate $cfg $autocfg CONFIG_VXFS_FS $CONFIG_VXFS_FS [list $notmod] 2
	global CONFIG_NTFS_FS
	write_tristate $cfg $autocfg CONFIG_NTFS_FS $CONFIG_NTFS_FS [list $notmod] 2
	global CONFIG_NTFS_RW
	if {($CONFIG_NTFS_FS == 1 || $CONFIG_NTFS_FS == 2 || $CONFIG_NTFS_FS == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {write_tristate $cfg $autocfg CONFIG_NTFS_RW $CONFIG_NTFS_RW [list $CONFIG_NTFS_FS $CONFIG_EXPERIMENTAL] 1 }
	global CONFIG_HPFS_FS
	write_tristate $cfg $autocfg CONFIG_HPFS_FS $CONFIG_HPFS_FS [list $notmod] 2
	write_tristate $cfg $autocfg CONFIG_PROC_FS $CONFIG_PROC_FS [list $notmod] 2
	global CONFIG_DEVFS_FS
	if {($CONFIG_X86_64 != 1) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 4)} then {write_tristate $cfg $autocfg CONFIG_DEVFS_FS $CONFIG_DEVFS_FS [list $CONFIG_EXPERIMENTAL] 2 }
	global CONFIG_DEVFS_MOUNT
	if {($CONFIG_X86_64 != 1) && ($CONFIG_DEVFS_FS == 1 || $CONFIG_DEVFS_FS == 4)} then {write_tristate $cfg $autocfg CONFIG_DEVFS_MOUNT $CONFIG_DEVFS_MOUNT [list $CONFIG_DEVFS_FS] 2 }
	global CONFIG_DEVFS_DEBUG
	if {($CONFIG_X86_64 != 1) && ($CONFIG_DEVFS_FS == 1 || $CONFIG_DEVFS_FS == 4)} then {write_tristate $cfg $autocfg CONFIG_DEVFS_DEBUG $CONFIG_DEVFS_DEBUG [list $CONFIG_DEVFS_FS] 2 }
	global CONFIG_DEVPTS_FS
	if {($CONFIG_UNIX98_PTYS == 1 || $CONFIG_UNIX98_PTYS == 4)} then {write_tristate $cfg $autocfg CONFIG_DEVPTS_FS $CONFIG_DEVPTS_FS [list $CONFIG_UNIX98_PTYS] 2 }
	global CONFIG_QNX4FS_FS
	write_tristate $cfg $autocfg CONFIG_QNX4FS_FS $CONFIG_QNX4FS_FS [list $notmod] 2
	global CONFIG_QNX4FS_RW
	if {($CONFIG_QNX4FS_FS == 1 || $CONFIG_QNX4FS_FS == 2 || $CONFIG_QNX4FS_FS == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {write_tristate $cfg $autocfg CONFIG_QNX4FS_RW $CONFIG_QNX4FS_RW [list $CONFIG_QNX4FS_FS $CONFIG_EXPERIMENTAL] 1 }
	global CONFIG_ROMFS_FS
	write_tristate $cfg $autocfg CONFIG_ROMFS_FS $CONFIG_ROMFS_FS [list $notmod] 2
	global CONFIG_EXT2_FS
	write_tristate $cfg $autocfg CONFIG_EXT2_FS $CONFIG_EXT2_FS [list $notmod] 2
	global CONFIG_SYSV_FS
	write_tristate $cfg $autocfg CONFIG_SYSV_FS $CONFIG_SYSV_FS [list $notmod] 2
	global CONFIG_UDF_FS
	write_tristate $cfg $autocfg CONFIG_UDF_FS $CONFIG_UDF_FS [list $notmod] 2
	global CONFIG_UDF_RW
	if {($CONFIG_UDF_FS == 1 || $CONFIG_UDF_FS == 2 || $CONFIG_UDF_FS == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {write_tristate $cfg $autocfg CONFIG_UDF_RW $CONFIG_UDF_RW [list $CONFIG_UDF_FS $CONFIG_EXPERIMENTAL] 1 }
	global CONFIG_UFS_FS
	write_tristate $cfg $autocfg CONFIG_UFS_FS $CONFIG_UFS_FS [list $notmod] 2
	global CONFIG_UFS_FS_WRITE
	if {($CONFIG_UFS_FS == 1 || $CONFIG_UFS_FS == 2 || $CONFIG_UFS_FS == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {write_tristate $cfg $autocfg CONFIG_UFS_FS_WRITE $CONFIG_UFS_FS_WRITE [list $CONFIG_UFS_FS $CONFIG_EXPERIMENTAL] 1 }
	if {($CONFIG_NET == 1)} then {write_comment $cfg $autocfg "Network File Systems"}
	global CONFIG_CODA_FS
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1 || $CONFIG_INET == 2 || $CONFIG_INET == 4)} then {write_tristate $cfg $autocfg CONFIG_CODA_FS $CONFIG_CODA_FS [list $CONFIG_INET] 2 }
	global CONFIG_INTERMEZZO_FS
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1 || $CONFIG_INET == 2 || $CONFIG_INET == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {write_tristate $cfg $autocfg CONFIG_INTERMEZZO_FS $CONFIG_INTERMEZZO_FS [list $CONFIG_INET $CONFIG_EXPERIMENTAL] 2 }
	global CONFIG_NFS_FS
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1 || $CONFIG_INET == 2 || $CONFIG_INET == 4)} then {write_tristate $cfg $autocfg CONFIG_NFS_FS $CONFIG_NFS_FS [list $CONFIG_INET] 2 }
	global CONFIG_NFS_V3
	if {($CONFIG_NET == 1) && ($CONFIG_NFS_FS == 1 || $CONFIG_NFS_FS == 2 || $CONFIG_NFS_FS == 4)} then {write_tristate $cfg $autocfg CONFIG_NFS_V3 $CONFIG_NFS_V3 [list $CONFIG_NFS_FS] 1 }
	global CONFIG_NFS_DIRECTIO
	if {($CONFIG_NET == 1) && ($CONFIG_NFS_FS == 1 || $CONFIG_NFS_FS == 2 || $CONFIG_NFS_FS == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {write_tristate $cfg $autocfg CONFIG_NFS_DIRECTIO $CONFIG_NFS_DIRECTIO [list $CONFIG_NFS_FS $CONFIG_EXPERIMENTAL] 1 }
	global CONFIG_ROOT_NFS
	if {($CONFIG_NET == 1) && ($CONFIG_NFS_FS == 1 || $CONFIG_NFS_FS == 4) && ($CONFIG_IP_PNP == 1 || $CONFIG_IP_PNP == 4)} then {write_tristate $cfg $autocfg CONFIG_ROOT_NFS $CONFIG_ROOT_NFS [list $CONFIG_NFS_FS $CONFIG_IP_PNP] 2 }
	global CONFIG_NFSD
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1 || $CONFIG_INET == 2 || $CONFIG_INET == 4)} then {write_tristate $cfg $autocfg CONFIG_NFSD $CONFIG_NFSD [list $CONFIG_INET] 2 }
	global CONFIG_NFSD_V3
	if {($CONFIG_NET == 1) && ($CONFIG_NFSD == 1 || $CONFIG_NFSD == 2 || $CONFIG_NFSD == 4)} then {write_tristate $cfg $autocfg CONFIG_NFSD_V3 $CONFIG_NFSD_V3 [list $CONFIG_NFSD] 1 }
	global CONFIG_NFSD_TCP
	if {($CONFIG_NET == 1) && ($CONFIG_NFSD == 1 || $CONFIG_NFSD == 2 || $CONFIG_NFSD == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {write_tristate $cfg $autocfg CONFIG_NFSD_TCP $CONFIG_NFSD_TCP [list $CONFIG_NFSD $CONFIG_EXPERIMENTAL] 1 }
	global CONFIG_SUNRPC
	if {($CONFIG_NET == 1) && ($CONFIG_NFS_FS == 1 || $CONFIG_NFSD == 1)} then {write_tristate $cfg $autocfg CONFIG_SUNRPC $CONSTANT_Y [list $notmod] 2 }
	global CONFIG_LOCKD
	if {($CONFIG_NET == 1) && ($CONFIG_NFS_FS == 1 || $CONFIG_NFSD == 1)} then {write_tristate $cfg $autocfg CONFIG_LOCKD $CONSTANT_Y [list $notmod] 2 }
	if {($CONFIG_NET == 1) && ($CONFIG_NFS_FS != 1 && $CONFIG_NFSD != 1) && ($CONFIG_NFS_FS == 2 || $CONFIG_NFSD == 2)} then {write_tristate $cfg $autocfg CONFIG_SUNRPC $CONSTANT_M [list $notmod] 2 }
	if {($CONFIG_NET == 1) && ($CONFIG_NFS_FS != 1 && $CONFIG_NFSD != 1) && ($CONFIG_NFS_FS == 2 || $CONFIG_NFSD == 2)} then {write_tristate $cfg $autocfg CONFIG_LOCKD $CONSTANT_M [list $notmod] 2 }
	if {($CONFIG_NET == 1) && ($CONFIG_NFS_FS != 1 && $CONFIG_NFSD != 1) && ($CONFIG_NFS_FS != 2 && $CONFIG_NFSD != 2)} then {write_tristate $cfg $autocfg CONFIG_SUNRPC $CONSTANT_N [list $notmod] 2 }
	if {($CONFIG_NET == 1) && ($CONFIG_NFS_FS != 1 && $CONFIG_NFSD != 1) && ($CONFIG_NFS_FS != 2 && $CONFIG_NFSD != 2)} then {write_tristate $cfg $autocfg CONFIG_LOCKD $CONSTANT_N [list $notmod] 2 }
	global CONFIG_LOCKD_V4
	if {($CONFIG_NET == 1) && ($CONFIG_NFSD_V3 == 1 || $CONFIG_NFS_V3 == 1)} then {write_tristate $cfg $autocfg CONFIG_LOCKD_V4 $CONSTANT_Y [list $notmod] 2 }
	global CONFIG_SMB_FS
	if {($CONFIG_NET == 1) && ($CONFIG_INET == 1 || $CONFIG_INET == 2 || $CONFIG_INET == 4)} then {write_tristate $cfg $autocfg CONFIG_SMB_FS $CONFIG_SMB_FS [list $CONFIG_INET] 2 }
	global CONFIG_SMB_NLS_DEFAULT
	if {($CONFIG_NET == 1) && ($CONFIG_SMB_FS != 0)} then {write_tristate $cfg $autocfg CONFIG_SMB_NLS_DEFAULT $CONFIG_SMB_NLS_DEFAULT [list $notmod] 2 }
	global CONFIG_SMB_NLS_REMOTE
	if {($CONFIG_NET == 1) && ($CONFIG_SMB_FS != 0) && ($CONFIG_SMB_NLS_DEFAULT == 1)} then {write_string $cfg $autocfg CONFIG_SMB_NLS_REMOTE "$CONFIG_SMB_NLS_REMOTE" $notmod }
	global CONFIG_NCP_FS
	if {($CONFIG_NET == 1) && ($CONFIG_IPX != 0 || $CONFIG_INET != 0)} then {write_tristate $cfg $autocfg CONFIG_NCP_FS $CONFIG_NCP_FS [list $notmod] 2 }
	global CONFIG_NCPFS_PACKET_SIGNING
	if {($CONFIG_NET == 1) && ($CONFIG_IPX != 0 || $CONFIG_INET != 0) && ($CONFIG_NCP_FS == 1 || $CONFIG_NCP_FS == 2 || $CONFIG_NCP_FS == 4)} then {write_tristate $cfg $autocfg CONFIG_NCPFS_PACKET_SIGNING $CONFIG_NCPFS_PACKET_SIGNING [list $CONFIG_NCP_FS] 1 }
	global CONFIG_NCPFS_IOCTL_LOCKING
	if {($CONFIG_NET == 1) && ($CONFIG_IPX != 0 || $CONFIG_INET != 0) && ($CONFIG_NCP_FS == 1 || $CONFIG_NCP_FS == 2 || $CONFIG_NCP_FS == 4)} then {write_tristate $cfg $autocfg CONFIG_NCPFS_IOCTL_LOCKING $CONFIG_NCPFS_IOCTL_LOCKING [list $CONFIG_NCP_FS] 1 }
	global CONFIG_NCPFS_STRONG
	if {($CONFIG_NET == 1) && ($CONFIG_IPX != 0 || $CONFIG_INET != 0) && ($CONFIG_NCP_FS == 1 || $CONFIG_NCP_FS == 2 || $CONFIG_NCP_FS == 4)} then {write_tristate $cfg $autocfg CONFIG_NCPFS_STRONG $CONFIG_NCPFS_STRONG [list $CONFIG_NCP_FS] 1 }
	global CONFIG_NCPFS_NFS_NS
	if {($CONFIG_NET == 1) && ($CONFIG_IPX != 0 || $CONFIG_INET != 0) && ($CONFIG_NCP_FS == 1 || $CONFIG_NCP_FS == 2 || $CONFIG_NCP_FS == 4)} then {write_tristate $cfg $autocfg CONFIG_NCPFS_NFS_NS $CONFIG_NCPFS_NFS_NS [list $CONFIG_NCP_FS] 1 }
	global CONFIG_NCPFS_OS2_NS
	if {($CONFIG_NET == 1) && ($CONFIG_IPX != 0 || $CONFIG_INET != 0) && ($CONFIG_NCP_FS == 1 || $CONFIG_NCP_FS == 2 || $CONFIG_NCP_FS == 4)} then {write_tristate $cfg $autocfg CONFIG_NCPFS_OS2_NS $CONFIG_NCPFS_OS2_NS [list $CONFIG_NCP_FS] 1 }
	global CONFIG_NCPFS_SMALLDOS
	if {($CONFIG_NET == 1) && ($CONFIG_IPX != 0 || $CONFIG_INET != 0) && ($CONFIG_NCP_FS == 1 || $CONFIG_NCP_FS == 2 || $CONFIG_NCP_FS == 4)} then {write_tristate $cfg $autocfg CONFIG_NCPFS_SMALLDOS $CONFIG_NCPFS_SMALLDOS [list $CONFIG_NCP_FS] 1 }
	global CONFIG_NCPFS_NLS
	if {($CONFIG_NET == 1) && ($CONFIG_IPX != 0 || $CONFIG_INET != 0) && ($CONFIG_NCP_FS == 1 || $CONFIG_NCP_FS == 2 || $CONFIG_NCP_FS == 4)} then {write_tristate $cfg $autocfg CONFIG_NCPFS_NLS $CONFIG_NCPFS_NLS [list $CONFIG_NCP_FS] 1 }
	global CONFIG_NCPFS_EXTRAS
	if {($CONFIG_NET == 1) && ($CONFIG_IPX != 0 || $CONFIG_INET != 0) && ($CONFIG_NCP_FS == 1 || $CONFIG_NCP_FS == 2 || $CONFIG_NCP_FS == 4)} then {write_tristate $cfg $autocfg CONFIG_NCPFS_EXTRAS $CONFIG_NCPFS_EXTRAS [list $CONFIG_NCP_FS] 1 }
	if {($CONFIG_NET == 1) && ($CONFIG_IPX == 0 && $CONFIG_INET == 0)} then {write_tristate $cfg $autocfg CONFIG_NCPFS_NLS $CONSTANT_N [list $notmod] 2 }
	if {($CONFIG_NET != 1)} then {write_tristate $cfg $autocfg CONFIG_NCPFS_NLS $CONSTANT_N [list $notmod] 2 }
	if {($CONFIG_NET != 1)} then {write_tristate $cfg $autocfg CONFIG_SMB_FS $CONSTANT_N [list $notmod] 2 }
	global CONFIG_ZISOFS_FS
	if {($CONFIG_ZISOFS == 1)} then {write_tristate $cfg $autocfg CONFIG_ZISOFS_FS $CONFIG_ISO9660_FS [list $notmod] 2 }
	if {($CONFIG_ZISOFS != 1)} then {write_tristate $cfg $autocfg CONFIG_ZISOFS_FS $CONSTANT_N [list $notmod] 2 }
	global CONFIG_COREDUMP_PRINTK
	if {($CONFIG_UCLINUX != 1)} then {write_tristate $cfg $autocfg CONFIG_COREDUMP_PRINTK $CONFIG_COREDUMP_PRINTK [list $notmod] 2 }
	write_comment $cfg $autocfg "Partition Types"
	global CONFIG_PARTITION_ADVANCED
	write_tristate $cfg $autocfg CONFIG_PARTITION_ADVANCED $CONFIG_PARTITION_ADVANCED [list $notmod] 2
	global CONFIG_ACORN_PARTITION
	if {($CONFIG_PARTITION_ADVANCED == 1)} then {write_tristate $cfg $autocfg CONFIG_ACORN_PARTITION $CONFIG_ACORN_PARTITION [list $notmod] 2 }
	global CONFIG_ACORN_PARTITION_ICS
	if {($CONFIG_PARTITION_ADVANCED == 1) && ($CONFIG_ACORN_PARTITION != 0)} then {write_tristate $cfg $autocfg CONFIG_ACORN_PARTITION_ICS $CONFIG_ACORN_PARTITION_ICS [list $notmod] 2 }
	global CONFIG_ACORN_PARTITION_ADFS
	if {($CONFIG_PARTITION_ADVANCED == 1) && ($CONFIG_ACORN_PARTITION != 0)} then {write_tristate $cfg $autocfg CONFIG_ACORN_PARTITION_ADFS $CONFIG_ACORN_PARTITION_ADFS [list $notmod] 2 }
	global CONFIG_ACORN_PARTITION_POWERTEC
	if {($CONFIG_PARTITION_ADVANCED == 1) && ($CONFIG_ACORN_PARTITION != 0)} then {write_tristate $cfg $autocfg CONFIG_ACORN_PARTITION_POWERTEC $CONFIG_ACORN_PARTITION_POWERTEC [list $notmod] 2 }
	global CONFIG_ACORN_PARTITION_RISCIX
	if {($CONFIG_PARTITION_ADVANCED == 1) && ($CONFIG_ACORN_PARTITION != 0)} then {write_tristate $cfg $autocfg CONFIG_ACORN_PARTITION_RISCIX $CONFIG_ACORN_PARTITION_RISCIX [list $notmod] 2 }
	global CONFIG_OSF_PARTITION
	if {($CONFIG_PARTITION_ADVANCED == 1)} then {write_tristate $cfg $autocfg CONFIG_OSF_PARTITION $CONFIG_OSF_PARTITION [list $notmod] 2 }
	global CONFIG_AMIGA_PARTITION
	if {($CONFIG_PARTITION_ADVANCED == 1)} then {write_tristate $cfg $autocfg CONFIG_AMIGA_PARTITION $CONFIG_AMIGA_PARTITION [list $notmod] 2 }
	global CONFIG_ATARI_PARTITION
	if {($CONFIG_PARTITION_ADVANCED == 1)} then {write_tristate $cfg $autocfg CONFIG_ATARI_PARTITION $CONFIG_ATARI_PARTITION [list $notmod] 2 }
	global CONFIG_MAC_PARTITION
	if {($CONFIG_PARTITION_ADVANCED == 1)} then {write_tristate $cfg $autocfg CONFIG_MAC_PARTITION $CONFIG_MAC_PARTITION [list $notmod] 2 }
	global CONFIG_MSDOS_PARTITION
	if {($CONFIG_PARTITION_ADVANCED == 1)} then {write_tristate $cfg $autocfg CONFIG_MSDOS_PARTITION $CONFIG_MSDOS_PARTITION [list $notmod] 2 }
	global CONFIG_BSD_DISKLABEL
	if {($CONFIG_PARTITION_ADVANCED == 1) && ($CONFIG_MSDOS_PARTITION == 1)} then {write_tristate $cfg $autocfg CONFIG_BSD_DISKLABEL $CONFIG_BSD_DISKLABEL [list $notmod] 2 }
	global CONFIG_MINIX_SUBPARTITION
	if {($CONFIG_PARTITION_ADVANCED == 1) && ($CONFIG_MSDOS_PARTITION == 1)} then {write_tristate $cfg $autocfg CONFIG_MINIX_SUBPARTITION $CONFIG_MINIX_SUBPARTITION [list $notmod] 2 }
	global CONFIG_SOLARIS_X86_PARTITION
	if {($CONFIG_PARTITION_ADVANCED == 1) && ($CONFIG_MSDOS_PARTITION == 1)} then {write_tristate $cfg $autocfg CONFIG_SOLARIS_X86_PARTITION $CONFIG_SOLARIS_X86_PARTITION [list $notmod] 2 }
	global CONFIG_UNIXWARE_DISKLABEL
	if {($CONFIG_PARTITION_ADVANCED == 1) && ($CONFIG_MSDOS_PARTITION == 1)} then {write_tristate $cfg $autocfg CONFIG_UNIXWARE_DISKLABEL $CONFIG_UNIXWARE_DISKLABEL [list $notmod] 2 }
	global CONFIG_LDM_PARTITION
	if {($CONFIG_PARTITION_ADVANCED == 1) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 4)} then {write_tristate $cfg $autocfg CONFIG_LDM_PARTITION $CONFIG_LDM_PARTITION [list $CONFIG_EXPERIMENTAL] 2 }
	global CONFIG_LDM_DEBUG
	if {($CONFIG_PARTITION_ADVANCED == 1) && ($CONFIG_LDM_PARTITION == 1)} then {write_tristate $cfg $autocfg CONFIG_LDM_DEBUG $CONFIG_LDM_DEBUG [list $notmod] 2 }
	global CONFIG_SGI_PARTITION
	if {($CONFIG_PARTITION_ADVANCED == 1)} then {write_tristate $cfg $autocfg CONFIG_SGI_PARTITION $CONFIG_SGI_PARTITION [list $notmod] 2 }
	global CONFIG_ULTRIX_PARTITION
	if {($CONFIG_PARTITION_ADVANCED == 1)} then {write_tristate $cfg $autocfg CONFIG_ULTRIX_PARTITION $CONFIG_ULTRIX_PARTITION [list $notmod] 2 }
	global CONFIG_SUN_PARTITION
	if {($CONFIG_PARTITION_ADVANCED == 1)} then {write_tristate $cfg $autocfg CONFIG_SUN_PARTITION $CONFIG_SUN_PARTITION [list $notmod] 2 }
	global CONFIG_EFI_PARTITION
	if {($CONFIG_PARTITION_ADVANCED == 1)} then {write_tristate $cfg $autocfg CONFIG_EFI_PARTITION $CONFIG_EFI_PARTITION [list $notmod] 2 }
	global CONFIG_AMIGA
	global CONFIG_ATARI
	global CONFIG_MAC
	global CONFIG_SGI_IP22
	global CONFIG_SH_SNAPGEAR
	global CONFIG_SGI_IP27
	if {($CONFIG_PARTITION_ADVANCED != 1) && ($CONFIG_AMIGA != 1 && $CONFIG_ATARI != 1 && $CONFIG_MAC != 1 && $CONFIG_SGI_IP22 != 1 && $CONFIG_UCLINUX != 1 && $CONFIG_SH_SNAPGEAR != 1 && $CONFIG_SGI_IP27 != 1)} then {write_tristate $cfg $autocfg CONFIG_MSDOS_PARTITION $CONSTANT_Y [list $notmod] 2 }
	if {($CONFIG_PARTITION_ADVANCED != 1) && ($CONFIG_AFFS_FS == 1)} then {write_tristate $cfg $autocfg CONFIG_AMIGA_PARTITION $CONSTANT_Y [list $notmod] 2 }
	if {($CONFIG_PARTITION_ADVANCED != 1) && ($CONFIG_ARCH_ACORN == 1)} then {write_tristate $cfg $autocfg CONFIG_ACORN_PARTITION $CONSTANT_Y [list $notmod] 2 }
	if {($CONFIG_PARTITION_ADVANCED != 1) && ($CONFIG_ARCH_ACORN == 1)} then {write_tristate $cfg $autocfg CONFIG_ACORN_PARTITION_ADFS $CONSTANT_Y [list $notmod] 2 }
	if {($CONFIG_PARTITION_ADVANCED != 1) && ($CONFIG_ARCH_ACORN == 1)} then {write_tristate $cfg $autocfg CONFIG_ACORN_PARTITION_ICS $CONSTANT_Y [list $notmod] 2 }
	if {($CONFIG_PARTITION_ADVANCED != 1) && ($CONFIG_ARCH_ACORN == 1)} then {write_tristate $cfg $autocfg CONFIG_ACORN_PARTITION_POWERTEC $CONSTANT_Y [list $notmod] 2 }
	if {($CONFIG_PARTITION_ADVANCED != 1) && ($CONFIG_ARCH_ACORN == 1)} then {write_tristate $cfg $autocfg CONFIG_ACORN_PARTITION_RISCIX $CONSTANT_Y [list $notmod] 2 }
	global CONFIG_SMB_NLS
	if {($CONFIG_SMB_FS == 2 || $CONFIG_SMB_FS == 1)} then {write_tristate $cfg $autocfg CONFIG_SMB_NLS $CONSTANT_Y [list $notmod] 2 }
	if {($CONFIG_SMB_FS != 2 && $CONFIG_SMB_FS != 1)} then {write_tristate $cfg $autocfg CONFIG_SMB_NLS $CONSTANT_N [list $notmod] 2 }
	global CONFIG_NLS
	if {($CONFIG_JOLIET == 1 || $CONFIG_FAT_FS != 0 || $CONFIG_NTFS_FS != 0 || $CONFIG_NCPFS_NLS == 1 || $CONFIG_SMB_NLS == 1 || $CONFIG_JFS_FS != 0 || $CONFIG_BEFS_FS != 0 || $CONFIG_HFSPLUS_FS != 0)} then {write_tristate $cfg $autocfg CONFIG_NLS $CONSTANT_Y [list $notmod] 2 }
	if {($CONFIG_JOLIET != 1 && $CONFIG_FAT_FS == 0 && $CONFIG_NTFS_FS == 0 && $CONFIG_NCPFS_NLS != 1 && $CONFIG_SMB_NLS != 1 && $CONFIG_JFS_FS == 0 && $CONFIG_BEFS_FS == 0 && $CONFIG_HFSPLUS_FS == 0)} then {write_tristate $cfg $autocfg CONFIG_NLS $CONSTANT_N [list $notmod] 2 }
	if {($CONFIG_NLS == 1)} then {write_comment $cfg $autocfg "Native Language Support"}
	global CONFIG_NLS_DEFAULT
	if {($CONFIG_NLS == 1)} then {write_string $cfg $autocfg CONFIG_NLS_DEFAULT "$CONFIG_NLS_DEFAULT" $notmod }
	global CONFIG_NLS_CODEPAGE_437
	if {($CONFIG_NLS == 1)} then {write_tristate $cfg $autocfg CONFIG_NLS_CODEPAGE_437 $CONFIG_NLS_CODEPAGE_437 [list $notmod] 2 }
	global CONFIG_NLS_CODEPAGE_737
	if {($CONFIG_NLS == 1)} then {write_tristate $cfg $autocfg CONFIG_NLS_CODEPAGE_737 $CONFIG_NLS_CODEPAGE_737 [list $notmod] 2 }
	global CONFIG_NLS_CODEPAGE_775
	if {($CONFIG_NLS == 1)} then {write_tristate $cfg $autocfg CONFIG_NLS_CODEPAGE_775 $CONFIG_NLS_CODEPAGE_775 [list $notmod] 2 }
	global CONFIG_NLS_CODEPAGE_850
	if {($CONFIG_NLS == 1)} then {write_tristate $cfg $autocfg CONFIG_NLS_CODEPAGE_850 $CONFIG_NLS_CODEPAGE_850 [list $notmod] 2 }
	global CONFIG_NLS_CODEPAGE_852
	if {($CONFIG_NLS == 1)} then {write_tristate $cfg $autocfg CONFIG_NLS_CODEPAGE_852 $CONFIG_NLS_CODEPAGE_852 [list $notmod] 2 }
	global CONFIG_NLS_CODEPAGE_855
	if {($CONFIG_NLS == 1)} then {write_tristate $cfg $autocfg CONFIG_NLS_CODEPAGE_855 $CONFIG_NLS_CODEPAGE_855 [list $notmod] 2 }
	global CONFIG_NLS_CODEPAGE_857
	if {($CONFIG_NLS == 1)} then {write_tristate $cfg $autocfg CONFIG_NLS_CODEPAGE_857 $CONFIG_NLS_CODEPAGE_857 [list $notmod] 2 }
	global CONFIG_NLS_CODEPAGE_860
	if {($CONFIG_NLS == 1)} then {write_tristate $cfg $autocfg CONFIG_NLS_CODEPAGE_860 $CONFIG_NLS_CODEPAGE_860 [list $notmod] 2 }
	global CONFIG_NLS_CODEPAGE_861
	if {($CONFIG_NLS == 1)} then {write_tristate $cfg $autocfg CONFIG_NLS_CODEPAGE_861 $CONFIG_NLS_CODEPAGE_861 [list $notmod] 2 }
	global CONFIG_NLS_CODEPAGE_862
	if {($CONFIG_NLS == 1)} then {write_tristate $cfg $autocfg CONFIG_NLS_CODEPAGE_862 $CONFIG_NLS_CODEPAGE_862 [list $notmod] 2 }
	global CONFIG_NLS_CODEPAGE_863
	if {($CONFIG_NLS == 1)} then {write_tristate $cfg $autocfg CONFIG_NLS_CODEPAGE_863 $CONFIG_NLS_CODEPAGE_863 [list $notmod] 2 }
	global CONFIG_NLS_CODEPAGE_864
	if {($CONFIG_NLS == 1)} then {write_tristate $cfg $autocfg CONFIG_NLS_CODEPAGE_864 $CONFIG_NLS_CODEPAGE_864 [list $notmod] 2 }
	global CONFIG_NLS_CODEPAGE_865
	if {($CONFIG_NLS == 1)} then {write_tristate $cfg $autocfg CONFIG_NLS_CODEPAGE_865 $CONFIG_NLS_CODEPAGE_865 [list $notmod] 2 }
	global CONFIG_NLS_CODEPAGE_866
	if {($CONFIG_NLS == 1)} then {write_tristate $cfg $autocfg CONFIG_NLS_CODEPAGE_866 $CONFIG_NLS_CODEPAGE_866 [list $notmod] 2 }
	global CONFIG_NLS_CODEPAGE_869
	if {($CONFIG_NLS == 1)} then {write_tristate $cfg $autocfg CONFIG_NLS_CODEPAGE_869 $CONFIG_NLS_CODEPAGE_869 [list $notmod] 2 }
	global CONFIG_NLS_CODEPAGE_936
	if {($CONFIG_NLS == 1)} then {write_tristate $cfg $autocfg CONFIG_NLS_CODEPAGE_936 $CONFIG_NLS_CODEPAGE_936 [list $notmod] 2 }
	global CONFIG_NLS_CODEPAGE_950
	if {($CONFIG_NLS == 1)} then {write_tristate $cfg $autocfg CONFIG_NLS_CODEPAGE_950 $CONFIG_NLS_CODEPAGE_950 [list $notmod] 2 }
	global CONFIG_NLS_CODEPAGE_932
	if {($CONFIG_NLS == 1)} then {write_tristate $cfg $autocfg CONFIG_NLS_CODEPAGE_932 $CONFIG_NLS_CODEPAGE_932 [list $notmod] 2 }
	global CONFIG_NLS_CODEPAGE_949
	if {($CONFIG_NLS == 1)} then {write_tristate $cfg $autocfg CONFIG_NLS_CODEPAGE_949 $CONFIG_NLS_CODEPAGE_949 [list $notmod] 2 }
	global CONFIG_NLS_CODEPAGE_874
	if {($CONFIG_NLS == 1)} then {write_tristate $cfg $autocfg CONFIG_NLS_CODEPAGE_874 $CONFIG_NLS_CODEPAGE_874 [list $notmod] 2 }
	global CONFIG_NLS_ISO8859_8
	if {($CONFIG_NLS == 1)} then {write_tristate $cfg $autocfg CONFIG_NLS_ISO8859_8 $CONFIG_NLS_ISO8859_8 [list $notmod] 2 }
	global CONFIG_NLS_CODEPAGE_1250
	if {($CONFIG_NLS == 1)} then {write_tristate $cfg $autocfg CONFIG_NLS_CODEPAGE_1250 $CONFIG_NLS_CODEPAGE_1250 [list $notmod] 2 }
	global CONFIG_NLS_CODEPAGE_1251
	if {($CONFIG_NLS == 1)} then {write_tristate $cfg $autocfg CONFIG_NLS_CODEPAGE_1251 $CONFIG_NLS_CODEPAGE_1251 [list $notmod] 2 }
	global CONFIG_NLS_ISO8859_1
	if {($CONFIG_NLS == 1)} then {write_tristate $cfg $autocfg CONFIG_NLS_ISO8859_1 $CONFIG_NLS_ISO8859_1 [list $notmod] 2 }
	global CONFIG_NLS_ISO8859_2
	if {($CONFIG_NLS == 1)} then {write_tristate $cfg $autocfg CONFIG_NLS_ISO8859_2 $CONFIG_NLS_ISO8859_2 [list $notmod] 2 }
	global CONFIG_NLS_ISO8859_3
	if {($CONFIG_NLS == 1)} then {write_tristate $cfg $autocfg CONFIG_NLS_ISO8859_3 $CONFIG_NLS_ISO8859_3 [list $notmod] 2 }
	global CONFIG_NLS_ISO8859_4
	if {($CONFIG_NLS == 1)} then {write_tristate $cfg $autocfg CONFIG_NLS_ISO8859_4 $CONFIG_NLS_ISO8859_4 [list $notmod] 2 }
	global CONFIG_NLS_ISO8859_5
	if {($CONFIG_NLS == 1)} then {write_tristate $cfg $autocfg CONFIG_NLS_ISO8859_5 $CONFIG_NLS_ISO8859_5 [list $notmod] 2 }
	global CONFIG_NLS_ISO8859_6
	if {($CONFIG_NLS == 1)} then {write_tristate $cfg $autocfg CONFIG_NLS_ISO8859_6 $CONFIG_NLS_ISO8859_6 [list $notmod] 2 }
	global CONFIG_NLS_ISO8859_7
	if {($CONFIG_NLS == 1)} then {write_tristate $cfg $autocfg CONFIG_NLS_ISO8859_7 $CONFIG_NLS_ISO8859_7 [list $notmod] 2 }
	global CONFIG_NLS_ISO8859_9
	if {($CONFIG_NLS == 1)} then {write_tristate $cfg $autocfg CONFIG_NLS_ISO8859_9 $CONFIG_NLS_ISO8859_9 [list $notmod] 2 }
	global CONFIG_NLS_ISO8859_13
	if {($CONFIG_NLS == 1)} then {write_tristate $cfg $autocfg CONFIG_NLS_ISO8859_13 $CONFIG_NLS_ISO8859_13 [list $notmod] 2 }
	global CONFIG_NLS_ISO8859_14
	if {($CONFIG_NLS == 1)} then {write_tristate $cfg $autocfg CONFIG_NLS_ISO8859_14 $CONFIG_NLS_ISO8859_14 [list $notmod] 2 }
	global CONFIG_NLS_ISO8859_15
	if {($CONFIG_NLS == 1)} then {write_tristate $cfg $autocfg CONFIG_NLS_ISO8859_15 $CONFIG_NLS_ISO8859_15 [list $notmod] 2 }
	global CONFIG_NLS_KOI8_R
	if {($CONFIG_NLS == 1)} then {write_tristate $cfg $autocfg CONFIG_NLS_KOI8_R $CONFIG_NLS_KOI8_R [list $notmod] 2 }
	global CONFIG_NLS_KOI8_U
	if {($CONFIG_NLS == 1)} then {write_tristate $cfg $autocfg CONFIG_NLS_KOI8_U $CONFIG_NLS_KOI8_U [list $notmod] 2 }
	global CONFIG_NLS_UTF8
	if {($CONFIG_NLS == 1)} then {write_tristate $cfg $autocfg CONFIG_NLS_UTF8 $CONFIG_NLS_UTF8 [list $notmod] 2 }
	if {($CONFIG_VT == 1)} then {write_comment $cfg $autocfg "Console drivers"}
	global CONFIG_PC_KEYB
	if {($CONFIG_VT == 1) && ($CONFIG_FOOTBRIDGE_HOST == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_SHARK == 1)} then {write_tristate $cfg $autocfg CONFIG_PC_KEYB $CONSTANT_Y [list $notmod] 2 }
	global CONFIG_KMI_KEYB
	if {($CONFIG_VT == 1) && ($CONFIG_ARCH_INTEGRATOR == 1)} then {write_tristate $cfg $autocfg CONFIG_KMI_KEYB $CONSTANT_Y [list $notmod] 2 }
	global CONFIG_KMI_MOUSE
	if {($CONFIG_VT == 1) && ($CONFIG_ARCH_INTEGRATOR == 1)} then {write_tristate $cfg $autocfg CONFIG_KMI_MOUSE $CONSTANT_Y [list $notmod] 2 }
	global CONFIG_L7200_KEYB
	if {($CONFIG_VT == 1) && ($CONFIG_ARCH_L7200 == 1)} then {write_tristate $cfg $autocfg CONFIG_L7200_KEYB $CONSTANT_Y [list $notmod] 2 }
	global CONFIG_PC_KEYMAP
	if {($CONFIG_VT == 1) && ($CONFIG_FOOTBRIDGE_HOST == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_INTEGRATOR == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_P720T == 1 || $CONFIG_ARCH_ANAKIN == 1 || $CONFIG_ARCH_MX1ADS == 1)} then {write_tristate $cfg $autocfg CONFIG_PC_KEYMAP $CONSTANT_Y [list $notmod] 2 }
	global CONFIG_VGA_CONSOLE
	if {($CONFIG_VT == 1) && ($CONFIG_ARCH_ACORN != 1 && $CONFIG_ARCH_EBSA110 != 1 && $CONFIG_ARCH_RISCSTATION != 1)} then {write_tristate $cfg $autocfg CONFIG_VGA_CONSOLE $CONFIG_VGA_CONSOLE [list $notmod] 2 }
	if {($CONFIG_VT == 1)} then {write_comment $cfg $autocfg "Frame-buffer support"}
	global CONFIG_FB
	if {($CONFIG_VT == 1)} then {write_tristate $cfg $autocfg CONFIG_FB $CONFIG_FB [list $notmod] 2 }
	global CONFIG_DUMMY_CONSOLE
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1)} then {write_tristate $cfg $autocfg CONFIG_DUMMY_CONSOLE $CONSTANT_Y [list $notmod] 2 }
	global CONFIG_FB_RIVA
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_PCI == 1)} then {write_tristate $cfg $autocfg CONFIG_FB_RIVA $CONFIG_FB_RIVA [list $notmod] 2 }
	global CONFIG_FB_CLGEN
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_PCI == 1)} then {write_tristate $cfg $autocfg CONFIG_FB_CLGEN $CONFIG_FB_CLGEN [list $notmod] 2 }
	global CONFIG_FB_PM2
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_PCI == 1)} then {write_tristate $cfg $autocfg CONFIG_FB_PM2 $CONFIG_FB_PM2 [list $notmod] 2 }
	global CONFIG_FB_PM2_FIFO_DISCONNECT
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_FB_PM2 == 1 || $CONFIG_FB_PM2 == 2) && ($CONFIG_PCI == 1)} then {write_tristate $cfg $autocfg CONFIG_FB_PM2_FIFO_DISCONNECT $CONFIG_FB_PM2_FIFO_DISCONNECT [list $notmod] 2 }
	global CONFIG_FB_PM2_PCI
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_FB_PM2 == 1 || $CONFIG_FB_PM2 == 2) && ($CONFIG_PCI == 1)} then {write_tristate $cfg $autocfg CONFIG_FB_PM2_PCI $CONFIG_FB_PM2_PCI [list $notmod] 2 }
	global CONFIG_FB_PM3
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_PCI == 1)} then {write_tristate $cfg $autocfg CONFIG_FB_PM3 $CONFIG_FB_PM3 [list $notmod] 2 }
	global CONFIG_FB_ACORN
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_ARCH_ACORN == 1)} then {write_tristate $cfg $autocfg CONFIG_FB_ACORN $CONFIG_FB_ACORN [list $notmod] 2 }
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_ACORN == 4)} then {write_tristate $cfg $autocfg CONFIG_FB_ACORN $CONFIG_FB_ACORN [list $CONFIG_ARCH_ACORN] 2 }
	global CONFIG_FB_CLPS711X
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_ARCH_CLPS711X == 1 || $CONFIG_ARCH_CLPS711X == 4)} then {write_tristate $cfg $autocfg CONFIG_FB_CLPS711X $CONFIG_FB_CLPS711X [list $CONFIG_ARCH_CLPS711X] 2 }
	global CONFIG_FB_CYBER2000
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {write_tristate $cfg $autocfg CONFIG_FB_CYBER2000 $CONFIG_FB_CYBER2000 [list $CONFIG_PCI] 2 }
	global CONFIG_FB_SA1100
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_ARCH_SA1100 == 1 || $CONFIG_ARCH_SA1100 == 4)} then {write_tristate $cfg $autocfg CONFIG_FB_SA1100 $CONFIG_FB_SA1100 [list $CONFIG_ARCH_SA1100] 2 }
	global CONFIG_FB_MATROX
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_PCI != 0)} then {write_tristate $cfg $autocfg CONFIG_FB_MATROX $CONFIG_FB_MATROX [list $notmod] 2 }
	global CONFIG_FB_MATROX_MILLENIUM
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_PCI != 0) && ($CONFIG_FB_MATROX != 0)} then {write_tristate $cfg $autocfg CONFIG_FB_MATROX_MILLENIUM $CONFIG_FB_MATROX_MILLENIUM [list $notmod] 2 }
	global CONFIG_FB_MATROX_MYSTIQUE
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_PCI != 0) && ($CONFIG_FB_MATROX != 0)} then {write_tristate $cfg $autocfg CONFIG_FB_MATROX_MYSTIQUE $CONFIG_FB_MATROX_MYSTIQUE [list $notmod] 2 }
	global CONFIG_FB_MATROX_G450
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_PCI != 0) && ($CONFIG_FB_MATROX != 0)} then {write_tristate $cfg $autocfg CONFIG_FB_MATROX_G450 $CONFIG_FB_MATROX_G450 [list $notmod] 2 }
	global CONFIG_FB_MATROX_G100A
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_PCI != 0) && ($CONFIG_FB_MATROX != 0) && ($CONFIG_FB_MATROX_G450 == 0)} then {write_tristate $cfg $autocfg CONFIG_FB_MATROX_G100A $CONFIG_FB_MATROX_G100A [list $notmod] 2 }
	global CONFIG_FB_MATROX_G100
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_PCI != 0) && ($CONFIG_FB_MATROX != 0) && ($CONFIG_FB_MATROX_G450 == 1 || $CONFIG_FB_MATROX_G100A == 1)} then {write_tristate $cfg $autocfg CONFIG_FB_MATROX_G100 $CONSTANT_Y [list $notmod] 2 }
	global CONFIG_FB_MATROX_I2C
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_PCI != 0) && ($CONFIG_FB_MATROX != 0) && ($CONFIG_I2C != 0) && ($CONFIG_FB_MATROX == 1 || $CONFIG_FB_MATROX == 2 || $CONFIG_FB_MATROX == 4) && ($CONFIG_I2C_ALGOBIT == 1 || $CONFIG_I2C_ALGOBIT == 2 || $CONFIG_I2C_ALGOBIT == 4)} then {write_tristate $cfg $autocfg CONFIG_FB_MATROX_I2C $CONFIG_FB_MATROX_I2C [list $CONFIG_FB_MATROX $CONFIG_I2C_ALGOBIT] 2 }
	global CONFIG_FB_MATROX_MAVEN
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_PCI != 0) && ($CONFIG_FB_MATROX != 0) && ($CONFIG_I2C != 0) && ($CONFIG_FB_MATROX_G100 == 1) && ($CONFIG_FB_MATROX_I2C == 1 || $CONFIG_FB_MATROX_I2C == 2 || $CONFIG_FB_MATROX_I2C == 4)} then {write_tristate $cfg $autocfg CONFIG_FB_MATROX_MAVEN $CONFIG_FB_MATROX_MAVEN [list $CONFIG_FB_MATROX_I2C] 2 }
	global CONFIG_FB_MATROX_PROC
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_PCI != 0) && ($CONFIG_FB_MATROX != 0) && ($CONFIG_FB_MATROX == 1 || $CONFIG_FB_MATROX == 2 || $CONFIG_FB_MATROX == 4)} then {write_tristate $cfg $autocfg CONFIG_FB_MATROX_PROC $CONFIG_FB_MATROX_PROC [list $CONFIG_FB_MATROX] 2 }
	global CONFIG_FB_MATROX_MULTIHEAD
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_PCI != 0) && ($CONFIG_FB_MATROX != 0)} then {write_tristate $cfg $autocfg CONFIG_FB_MATROX_MULTIHEAD $CONFIG_FB_MATROX_MULTIHEAD [list $notmod] 2 }
	global CONFIG_FB_ATY
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_PCI != 0)} then {write_tristate $cfg $autocfg CONFIG_FB_ATY $CONFIG_FB_ATY [list $notmod] 2 }
	global CONFIG_FB_ATY_GX
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_PCI != 0) && ($CONFIG_FB_ATY != 0)} then {write_tristate $cfg $autocfg CONFIG_FB_ATY_GX $CONFIG_FB_ATY_GX [list $notmod] 2 }
	global CONFIG_FB_ATY_CT
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_PCI != 0) && ($CONFIG_FB_ATY != 0)} then {write_tristate $cfg $autocfg CONFIG_FB_ATY_CT $CONFIG_FB_ATY_CT [list $notmod] 2 }
	global CONFIG_FB_RADEON
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_PCI != 0)} then {write_tristate $cfg $autocfg CONFIG_FB_RADEON $CONFIG_FB_RADEON [list $notmod] 2 }
	global CONFIG_FB_ATY128
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_PCI != 0)} then {write_tristate $cfg $autocfg CONFIG_FB_ATY128 $CONFIG_FB_ATY128 [list $notmod] 2 }
	global CONFIG_FB_INTEL
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_PCI != 0)} then {write_tristate $cfg $autocfg CONFIG_FB_INTEL $CONFIG_FB_INTEL [list $notmod] 2 }
	global CONFIG_FB_SIS
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_PCI != 0)} then {write_tristate $cfg $autocfg CONFIG_FB_SIS $CONFIG_FB_SIS [list $notmod] 2 }
	global CONFIG_FB_SIS_300
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_PCI != 0) && ($CONFIG_FB_SIS != 0)} then {write_tristate $cfg $autocfg CONFIG_FB_SIS_300 $CONFIG_FB_SIS_300 [list $notmod] 2 }
	global CONFIG_FB_SIS_315
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_PCI != 0) && ($CONFIG_FB_SIS != 0)} then {write_tristate $cfg $autocfg CONFIG_FB_SIS_315 $CONFIG_FB_SIS_315 [list $notmod] 2 }
	global CONFIG_FB_NEOMAGIC
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_PCI != 0)} then {write_tristate $cfg $autocfg CONFIG_FB_NEOMAGIC $CONFIG_FB_NEOMAGIC [list $notmod] 2 }
	global CONFIG_FB_3DFX
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_PCI != 0)} then {write_tristate $cfg $autocfg CONFIG_FB_3DFX $CONFIG_FB_3DFX [list $notmod] 2 }
	global CONFIG_FB_VOODOO1
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_PCI != 0)} then {write_tristate $cfg $autocfg CONFIG_FB_VOODOO1 $CONFIG_FB_VOODOO1 [list $notmod] 2 }
	global CONFIG_FB_TRIDENT
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_PCI != 0)} then {write_tristate $cfg $autocfg CONFIG_FB_TRIDENT $CONFIG_FB_TRIDENT [list $notmod] 2 }
	global CONFIG_FB_VIRTUAL
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_EXPERIMENTAL == 1)} then {write_tristate $cfg $autocfg CONFIG_FB_VIRTUAL $CONFIG_FB_VIRTUAL [list $notmod] 2 }
	global CONFIG_FB_VIRTUAL_SMALL
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_EXPERIMENTAL == 1)} then {write_tristate $cfg $autocfg CONFIG_FB_VIRTUAL_SMALL $CONFIG_FB_VIRTUAL_SMALL [list $notmod] 2 }
	global CONFIG_FBCON_ADVANCED
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1)} then {write_tristate $cfg $autocfg CONFIG_FBCON_ADVANCED $CONFIG_FBCON_ADVANCED [list $notmod] 2 }
	global CONFIG_FBCON_MFB
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_FBCON_ADVANCED == 1)} then {write_tristate $cfg $autocfg CONFIG_FBCON_MFB $CONFIG_FBCON_MFB [list $notmod] 2 }
	global CONFIG_FBCON_CFB2
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_FBCON_ADVANCED == 1)} then {write_tristate $cfg $autocfg CONFIG_FBCON_CFB2 $CONFIG_FBCON_CFB2 [list $notmod] 2 }
	global CONFIG_FBCON_CFB4
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_FBCON_ADVANCED == 1)} then {write_tristate $cfg $autocfg CONFIG_FBCON_CFB4 $CONFIG_FBCON_CFB4 [list $notmod] 2 }
	global CONFIG_FBCON_CFB8
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_FBCON_ADVANCED == 1)} then {write_tristate $cfg $autocfg CONFIG_FBCON_CFB8 $CONFIG_FBCON_CFB8 [list $notmod] 2 }
	global CONFIG_FBCON_CFB16
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_FBCON_ADVANCED == 1)} then {write_tristate $cfg $autocfg CONFIG_FBCON_CFB16 $CONFIG_FBCON_CFB16 [list $notmod] 2 }
	global CONFIG_FBCON_CFB24
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_FBCON_ADVANCED == 1)} then {write_tristate $cfg $autocfg CONFIG_FBCON_CFB24 $CONFIG_FBCON_CFB24 [list $notmod] 2 }
	global CONFIG_FBCON_CFB32
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_FBCON_ADVANCED == 1)} then {write_tristate $cfg $autocfg CONFIG_FBCON_CFB32 $CONFIG_FBCON_CFB32 [list $notmod] 2 }
	global CONFIG_FBCON_AFB
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_FBCON_ADVANCED == 1)} then {write_tristate $cfg $autocfg CONFIG_FBCON_AFB $CONFIG_FBCON_AFB [list $notmod] 2 }
	global CONFIG_FBCON_ILBM
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_FBCON_ADVANCED == 1)} then {write_tristate $cfg $autocfg CONFIG_FBCON_ILBM $CONFIG_FBCON_ILBM [list $notmod] 2 }
	global CONFIG_FBCON_IPLAN2P2
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_FBCON_ADVANCED == 1)} then {write_tristate $cfg $autocfg CONFIG_FBCON_IPLAN2P2 $CONFIG_FBCON_IPLAN2P2 [list $notmod] 2 }
	global CONFIG_FBCON_IPLAN2P4
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_FBCON_ADVANCED == 1)} then {write_tristate $cfg $autocfg CONFIG_FBCON_IPLAN2P4 $CONFIG_FBCON_IPLAN2P4 [list $notmod] 2 }
	global CONFIG_FBCON_IPLAN2P8
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_FBCON_ADVANCED == 1)} then {write_tristate $cfg $autocfg CONFIG_FBCON_IPLAN2P8 $CONFIG_FBCON_IPLAN2P8 [list $notmod] 2 }
	global CONFIG_FBCON_MAC
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_FBCON_ADVANCED == 1)} then {write_tristate $cfg $autocfg CONFIG_FBCON_MAC $CONFIG_FBCON_MAC [list $notmod] 2 }
	global CONFIG_FBCON_VGA_PLANES
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_FBCON_ADVANCED == 1)} then {write_tristate $cfg $autocfg CONFIG_FBCON_VGA_PLANES $CONFIG_FBCON_VGA_PLANES [list $notmod] 2 }
	global CONFIG_FBCON_VGA
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_FBCON_ADVANCED == 1)} then {write_tristate $cfg $autocfg CONFIG_FBCON_VGA $CONFIG_FBCON_VGA [list $notmod] 2 }
	global CONFIG_FBCON_HGA
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_FBCON_ADVANCED == 1)} then {write_tristate $cfg $autocfg CONFIG_FBCON_HGA $CONFIG_FBCON_HGA [list $notmod] 2 }
	global CONFIG_FB_AMIGA
	global CONFIG_FB_ATARI
	global CONFIG_FB_CYBER
	global CONFIG_FB_MAC
	global CONFIG_FB_RETINAZ3
	global CONFIG_FB_VIRGE
	global CONFIG_FB_BWTWO
	global CONFIG_FB_TX3912
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_FBCON_ADVANCED != 1) && ($CONFIG_FB_ACORN == 1 || $CONFIG_FB_AMIGA == 1 || $CONFIG_FB_ATARI == 1 || $CONFIG_FB_CYBER == 1 || $CONFIG_FB_MAC == 1 || $CONFIG_FB_RETINAZ3 == 1 || $CONFIG_FB_VIRGE == 1 || $CONFIG_FB_VIRTUAL == 1 || $CONFIG_FB_BWTWO == 1 || $CONFIG_FB_CLGEN == 1 || $CONFIG_FB_TX3912 == 1)} then {write_tristate $cfg $autocfg CONFIG_FBCON_MFB $CONSTANT_Y [list $notmod] 2 }
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_FBCON_ADVANCED != 1) && ($CONFIG_FB_ACORN != 1 && $CONFIG_FB_AMIGA != 1 && $CONFIG_FB_ATARI != 1 && $CONFIG_FB_CYBER != 1 && $CONFIG_FB_MAC != 1 && $CONFIG_FB_RETINAZ3 != 1 && $CONFIG_FB_VIRGE != 1 && $CONFIG_FB_VIRTUAL != 1 && $CONFIG_FB_BWTWO != 1 && $CONFIG_FB_CLGEN != 1 && $CONFIG_FB_TX3912 != 1) && ($CONFIG_FB_ACORN == 2 || $CONFIG_FB_AMIGA == 2 || $CONFIG_FB_ATARI == 2 || $CONFIG_FB_CYBER == 2 || $CONFIG_FB_MAC == 2 || $CONFIG_FB_RETINAZ3 == 2 || $CONFIG_FB_VIRGE == 2 || $CONFIG_FB_VIRTUAL == 2 || $CONFIG_FB_BWTWO == 2 || $CONFIG_FB_CLGEN == 2 || $CONFIG_FB_TX3912 == 2)} then {write_tristate $cfg $autocfg CONFIG_FBCON_MFB $CONSTANT_M [list $notmod] 2 }
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_FBCON_ADVANCED != 1) && ($CONFIG_FB_ACORN == 1 || $CONFIG_FB_MAC == 1 || $CONFIG_FB_SA1100 == 1 || $CONFIG_FB_VIRTUAL == 1 || $CONFIG_FB_TX3912 == 1)} then {write_tristate $cfg $autocfg CONFIG_FBCON_CFB2 $CONSTANT_Y [list $notmod] 2 }
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_FBCON_ADVANCED != 1) && ($CONFIG_FB_ACORN == 1 || $CONFIG_FB_MAC == 1 || $CONFIG_FB_SA1100 == 1 || $CONFIG_FB_VIRTUAL == 1 || $CONFIG_FB_TX3912 == 1)} then {write_tristate $cfg $autocfg CONFIG_FBCON_CFB4 $CONSTANT_Y [list $notmod] 2 }
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_FBCON_ADVANCED != 1) && ($CONFIG_FB_ACORN != 1 && $CONFIG_FB_MAC != 1 && $CONFIG_FB_SA1100 != 1 && $CONFIG_FB_VIRTUAL != 1 && $CONFIG_FB_TX3912 != 1) && ($CONFIG_FB_ACORN == 2 || $CONFIG_FB_MAC == 2 || $CONFIG_FB_SA1100 == 2 || $CONFIG_FB_VIRTUAL == 2 || $CONFIG_FB_TX3912 == 2)} then {write_tristate $cfg $autocfg CONFIG_FBCON_CFB2 $CONSTANT_M [list $notmod] 2 }
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_FBCON_ADVANCED != 1) && ($CONFIG_FB_ACORN != 1 && $CONFIG_FB_MAC != 1 && $CONFIG_FB_SA1100 != 1 && $CONFIG_FB_VIRTUAL != 1 && $CONFIG_FB_TX3912 != 1) && ($CONFIG_FB_ACORN == 2 || $CONFIG_FB_MAC == 2 || $CONFIG_FB_SA1100 == 2 || $CONFIG_FB_VIRTUAL == 2 || $CONFIG_FB_TX3912 == 2)} then {write_tristate $cfg $autocfg CONFIG_FBCON_CFB4 $CONSTANT_M [list $notmod] 2 }
	global CONFIG_FB_OF
	global CONFIG_FB_TGA
	global CONFIG_FB_VESA
	global CONFIG_FB_TCX
	global CONFIG_FB_CGTHREE
	global CONFIG_FB_CONTROL
	global CONFIG_FB_CGFOURTEEN
	global CONFIG_FB_G364
	global CONFIG_FB_VALKYRIE
	global CONFIG_FB_PLATINUM
	global CONFIG_FB_IGA
	global CONFIG_FB_CT65550
	global CONFIG_FB_P9100
	global CONFIG_FB_SGIVW
	global CONFIG_FB_PMAG_BA
	global CONFIG_FB_PMAGB_B
	global CONFIG_FB_MAXINE
	global CONFIG_FB_STI
	global CONFIG_FB_HP300
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_FBCON_ADVANCED != 1) && ($CONFIG_FB_ACORN == 1 || $CONFIG_FB_ATARI == 1 || $CONFIG_FB_ATY == 1 || $CONFIG_FB_MAC == 1 || $CONFIG_FB_OF == 1 || $CONFIG_FB_TGA == 1 || $CONFIG_FB_VESA == 1 || $CONFIG_FB_VIRTUAL == 1 || $CONFIG_FB_TCX == 1 || $CONFIG_FB_CGTHREE == 1 || $CONFIG_FB_CONTROL == 1 || $CONFIG_FB_CLGEN == 1 || $CONFIG_FB_CGFOURTEEN == 1 || $CONFIG_FB_G364 == 1 || $CONFIG_FB_VIRGE == 1 || $CONFIG_FB_CYBER == 1 || $CONFIG_FB_VALKYRIE == 1 || $CONFIG_FB_PLATINUM == 1 || $CONFIG_FB_IGA == 1 || $CONFIG_FB_MATROX == 1 || $CONFIG_FB_CT65550 == 1 || $CONFIG_FB_PM2 == 1 || $CONFIG_FB_PM3 == 1 || $CONFIG_FB_TRIDENT == 1 || $CONFIG_FB_P9100 == 1 || $CONFIG_FB_ATY128 == 1 || $CONFIG_FB_RIVA == 1 || $CONFIG_FB_RADEON == 1 || $CONFIG_FB_INTEL == 1 || $CONFIG_FB_SGIVW == 1 || $CONFIG_FB_CYBER2000 == 1 || $CONFIG_FB_SA1100 == 1 || $CONFIG_FB_3DFX == 1 || $CONFIG_FB_PMAG_BA == 1 || $CONFIG_FB_PMAGB_B == 1 || $CONFIG_FB_MAXINE == 1 || $CONFIG_FB_TX3912 == 1 || $CONFIG_FB_SIS == 1 || $CONFIG_FB_NEOMAGIC == 1 || $CONFIG_FB_STI == 1 || $CONFIG_FB_HP300 == 1 || $CONFIG_FB_INTEL == 1)} then {write_tristate $cfg $autocfg CONFIG_FBCON_CFB8 $CONSTANT_Y [list $notmod] 2 }
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_FBCON_ADVANCED != 1) && ($CONFIG_FB_ACORN != 1 && $CONFIG_FB_ATARI != 1 && $CONFIG_FB_ATY != 1 && $CONFIG_FB_MAC != 1 && $CONFIG_FB_OF != 1 && $CONFIG_FB_TGA != 1 && $CONFIG_FB_VESA != 1 && $CONFIG_FB_VIRTUAL != 1 && $CONFIG_FB_TCX != 1 && $CONFIG_FB_CGTHREE != 1 && $CONFIG_FB_CONTROL != 1 && $CONFIG_FB_CLGEN != 1 && $CONFIG_FB_CGFOURTEEN != 1 && $CONFIG_FB_G364 != 1 && $CONFIG_FB_VIRGE != 1 && $CONFIG_FB_CYBER != 1 && $CONFIG_FB_VALKYRIE != 1 && $CONFIG_FB_PLATINUM != 1 && $CONFIG_FB_IGA != 1 && $CONFIG_FB_MATROX != 1 && $CONFIG_FB_CT65550 != 1 && $CONFIG_FB_PM2 != 1 && $CONFIG_FB_PM3 != 1 && $CONFIG_FB_TRIDENT != 1 && $CONFIG_FB_P9100 != 1 && $CONFIG_FB_ATY128 != 1 && $CONFIG_FB_RIVA != 1 && $CONFIG_FB_RADEON != 1 && $CONFIG_FB_INTEL != 1 && $CONFIG_FB_SGIVW != 1 && $CONFIG_FB_CYBER2000 != 1 && $CONFIG_FB_SA1100 != 1 && $CONFIG_FB_3DFX != 1 && $CONFIG_FB_PMAG_BA != 1 && $CONFIG_FB_PMAGB_B != 1 && $CONFIG_FB_MAXINE != 1 && $CONFIG_FB_TX3912 != 1 && $CONFIG_FB_SIS != 1 && $CONFIG_FB_NEOMAGIC != 1 && $CONFIG_FB_STI != 1 && $CONFIG_FB_HP300 != 1 && $CONFIG_FB_INTEL != 1) && ($CONFIG_FB_ACORN == 2 || $CONFIG_FB_ATARI == 2 || $CONFIG_FB_ATY == 2 || $CONFIG_FB_MAC == 2 || $CONFIG_FB_OF == 2 || $CONFIG_FB_TGA == 2 || $CONFIG_FB_VESA == 2 || $CONFIG_FB_VIRTUAL == 2 || $CONFIG_FB_TCX == 2 || $CONFIG_FB_CGTHREE == 2 || $CONFIG_FB_CONTROL == 2 || $CONFIG_FB_CLGEN == 2 || $CONFIG_FB_CGFOURTEEN == 2 || $CONFIG_FB_G364 == 2 || $CONFIG_FB_VIRGE == 2 || $CONFIG_FB_CYBER == 2 || $CONFIG_FB_VALKYRIE == 2 || $CONFIG_FB_PLATINUM == 2 || $CONFIG_FB_IGA == 2 || $CONFIG_FB_MATROX == 2 || $CONFIG_FB_CT65550 == 2 || $CONFIG_FB_PM2 == 2 || $CONFIG_FB_PM3 == 2 || $CONFIG_FB_TRIDENT == 2 || $CONFIG_FB_P9100 == 2 || $CONFIG_FB_ATY128 == 2 || $CONFIG_FB_RIVA == 2 || $CONFIG_FB_3DFX == 2 || $CONFIG_FB_SGIVW == 2 || $CONFIG_FB_CYBER2000 == 2 || $CONFIG_FB_PMAG_BA == 2 || $CONFIG_FB_PMAGB_B == 2 || $CONFIG_FB_MAXINE == 2 || $CONFIG_FB_RADEON == 2 || $CONFIG_FB_INTEL == 2 || $CONFIG_FB_SA1100 == 2 || $CONFIG_FB_SIS == 2 || $CONFIG_FB_TX3912 == 2 || $CONFIG_FB_NEOMAGIC == 2 || $CONFIG_FB_STI == 2 || $CONFIG_FB_INTEL == 2)} then {write_tristate $cfg $autocfg CONFIG_FBCON_CFB8 $CONSTANT_M [list $notmod] 2 }
	global CONFIG_FB_TBOX
	global CONFIG_FB_Q40
	global CONFIG_FB_PVR2
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_FBCON_ADVANCED != 1) && ($CONFIG_FB_ATARI == 1 || $CONFIG_FB_ATY == 1 || $CONFIG_FB_MAC == 1 || $CONFIG_FB_VESA == 1 || $CONFIG_FB_VIRTUAL == 1 || $CONFIG_FB_TBOX == 1 || $CONFIG_FB_Q40 == 1 || $CONFIG_FB_RADEON == 1 || $CONFIG_FB_INTEL == 1 || $CONFIG_FB_CONTROL == 1 || $CONFIG_FB_CLGEN == 1 || $CONFIG_FB_VIRGE == 1 || $CONFIG_FB_CYBER == 1 || $CONFIG_FB_VALKYRIE == 1 || $CONFIG_FB_PLATINUM == 1 || $CONFIG_FB_CT65550 == 1 || $CONFIG_FB_MATROX == 1 || $CONFIG_FB_PM2 == 1 || $CONFIG_FB_SGIVW == 1 || $CONFIG_FB_PM3 == 1 || $CONFIG_FB_TRIDENT == 1 || $CONFIG_FB_RIVA == 1 || $CONFIG_FB_ATY128 == 1 || $CONFIG_FB_CYBER2000 == 1 || $CONFIG_FB_3DFX == 1 || $CONFIG_FB_SIS == 1 || $CONFIG_FB_SA1100 == 1 || $CONFIG_FB_PVR2 == 1 || $CONFIG_FB_VOODOO1 == 1 || $CONFIG_FB_NEOMAGIC == 1 || $CONFIG_FB_INTEL == 1)} then {write_tristate $cfg $autocfg CONFIG_FBCON_CFB16 $CONSTANT_Y [list $notmod] 2 }
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_FBCON_ADVANCED != 1) && ($CONFIG_FB_ATARI != 1 && $CONFIG_FB_ATY != 1 && $CONFIG_FB_MAC != 1 && $CONFIG_FB_VESA != 1 && $CONFIG_FB_VIRTUAL != 1 && $CONFIG_FB_TBOX != 1 && $CONFIG_FB_Q40 != 1 && $CONFIG_FB_RADEON != 1 && $CONFIG_FB_INTEL != 1 && $CONFIG_FB_CONTROL != 1 && $CONFIG_FB_CLGEN != 1 && $CONFIG_FB_VIRGE != 1 && $CONFIG_FB_CYBER != 1 && $CONFIG_FB_VALKYRIE != 1 && $CONFIG_FB_PLATINUM != 1 && $CONFIG_FB_CT65550 != 1 && $CONFIG_FB_MATROX != 1 && $CONFIG_FB_PM2 != 1 && $CONFIG_FB_SGIVW != 1 && $CONFIG_FB_PM3 != 1 && $CONFIG_FB_TRIDENT != 1 && $CONFIG_FB_RIVA != 1 && $CONFIG_FB_ATY128 != 1 && $CONFIG_FB_CYBER2000 != 1 && $CONFIG_FB_3DFX != 1 && $CONFIG_FB_SIS != 1 && $CONFIG_FB_SA1100 != 1 && $CONFIG_FB_PVR2 != 1 && $CONFIG_FB_VOODOO1 != 1 && $CONFIG_FB_NEOMAGIC != 1 && $CONFIG_FB_INTEL != 1) && ($CONFIG_FB_ATARI == 2 || $CONFIG_FB_ATY == 2 || $CONFIG_FB_MAC == 2 || $CONFIG_FB_VESA == 2 || $CONFIG_FB_VIRTUAL == 2 || $CONFIG_FB_TBOX == 2 || $CONFIG_FB_Q40 == 2 || $CONFIG_FB_3DFX == 2 || $CONFIG_FB_CONTROL == 2 || $CONFIG_FB_CLGEN == 2 || $CONFIG_FB_VIRGE == 2 || $CONFIG_FB_CYBER == 2 || $CONFIG_FB_VALKYRIE == 2 || $CONFIG_FB_PLATINUM == 2 || $CONFIG_FB_CT65550 == 2 || $CONFIG_FB_MATROX == 2 || $CONFIG_FB_PM2 == 2 || $CONFIG_FB_SGIVW == 2 || $CONFIG_FB_PM3 == 2 || $CONFIG_FB_TRIDENT == 2 || $CONFIG_FB_RIVA == 2 || $CONFIG_FB_ATY128 == 2 || $CONFIG_FB_CYBER2000 == 2 || $CONFIG_FB_SIS == 2 || $CONFIG_FB_SA1100 == 2 || $CONFIG_FB_RADEON == 2 || $CONFIG_FB_INTEL == 2 || $CONFIG_FB_PVR2 == 2 || $CONFIG_FB_VOODOO1 == 2 || $CONFIG_FB_NEOMAGIC == 2 || $CONFIG_FB_INTEL == 2)} then {write_tristate $cfg $autocfg CONFIG_FBCON_CFB16 $CONSTANT_M [list $notmod] 2 }
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_FBCON_ADVANCED != 1) && ($CONFIG_FB_ATY == 1 || $CONFIG_FB_VIRTUAL == 1 || $CONFIG_FB_CLGEN == 1 || $CONFIG_FB_VESA == 1 || $CONFIG_FB_MATROX == 1 || $CONFIG_FB_PM2 == 1 || $CONFIG_FB_ATY128 == 1 || $CONFIG_FB_RADEON == 1 || $CONFIG_FB_CYBER2000 == 1 || $CONFIG_FB_PVR2 == 1 || $CONFIG_FB_VOODOO1 == 1 || $CONFIG_FB_NEOMAGIC == 1)} then {write_tristate $cfg $autocfg CONFIG_FBCON_CFB24 $CONSTANT_Y [list $notmod] 2 }
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_FBCON_ADVANCED != 1) && ($CONFIG_FB_ATY != 1 && $CONFIG_FB_VIRTUAL != 1 && $CONFIG_FB_CLGEN != 1 && $CONFIG_FB_VESA != 1 && $CONFIG_FB_MATROX != 1 && $CONFIG_FB_PM2 != 1 && $CONFIG_FB_ATY128 != 1 && $CONFIG_FB_RADEON != 1 && $CONFIG_FB_CYBER2000 != 1 && $CONFIG_FB_PVR2 != 1 && $CONFIG_FB_VOODOO1 != 1 && $CONFIG_FB_NEOMAGIC != 1) && ($CONFIG_FB_ATY == 2 || $CONFIG_FB_VIRTUAL == 2 || $CONFIG_FB_CLGEN == 2 || $CONFIG_FB_VESA == 2 || $CONFIG_FB_MATROX == 2 || $CONFIG_FB_PM2 == 2 || $CONFIG_FB_ATY128 == 2 || $CONFIG_FB_RADEON == 2 || $CONFIG_FB_CYBER2000 == 2 || $CONFIG_FB_PVR2 == 2 || $CONFIG_FB_VOODOO1 == 2 || $CONFIG_FB_NEOMAGIC == 2)} then {write_tristate $cfg $autocfg CONFIG_FBCON_CFB24 $CONSTANT_M [list $notmod] 2 }
	global CONFIG_FB_FM2
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_FBCON_ADVANCED != 1) && ($CONFIG_FB_ATARI == 1 || $CONFIG_FB_ATY == 1 || $CONFIG_FB_VESA == 1 || $CONFIG_FB_VIRTUAL == 1 || $CONFIG_FB_CONTROL == 1 || $CONFIG_FB_CLGEN == 1 || $CONFIG_FB_TGA == 1 || $CONFIG_FB_PLATINUM == 1 || $CONFIG_FB_MATROX == 1 || $CONFIG_FB_PM2 == 1 || $CONFIG_FB_PM3 == 1 || $CONFIG_FB_TRIDENT == 1 || $CONFIG_FB_RIVA == 1 || $CONFIG_FB_ATY128 == 1 || $CONFIG_FB_FM2 == 1 || $CONFIG_FB_SGIVW == 1 || $CONFIG_FB_RADEON == 1 || $CONFIG_FB_PVR2 == 1 || $CONFIG_FB_INTEL == 1 || $CONFIG_FB_3DFX == 1 || $CONFIG_FB_SIS == 1 || $CONFIG_FB_VOODOO1 == 1 || $CONFIG_FB_CYBER2000 == 1 || $CONFIG_FB_STI == 1 || $CONFIG_FB_INTEL == 1)} then {write_tristate $cfg $autocfg CONFIG_FBCON_CFB32 $CONSTANT_Y [list $notmod] 2 }
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_FBCON_ADVANCED != 1) && ($CONFIG_FB_ATARI != 1 && $CONFIG_FB_ATY != 1 && $CONFIG_FB_VESA != 1 && $CONFIG_FB_VIRTUAL != 1 && $CONFIG_FB_CONTROL != 1 && $CONFIG_FB_CLGEN != 1 && $CONFIG_FB_TGA != 1 && $CONFIG_FB_PLATINUM != 1 && $CONFIG_FB_MATROX != 1 && $CONFIG_FB_PM2 != 1 && $CONFIG_FB_PM3 != 1 && $CONFIG_FB_TRIDENT != 1 && $CONFIG_FB_RIVA != 1 && $CONFIG_FB_ATY128 != 1 && $CONFIG_FB_FM2 != 1 && $CONFIG_FB_SGIVW != 1 && $CONFIG_FB_RADEON != 1 && $CONFIG_FB_PVR2 != 1 && $CONFIG_FB_INTEL != 1 && $CONFIG_FB_3DFX != 1 && $CONFIG_FB_SIS != 1 && $CONFIG_FB_VOODOO1 != 1 && $CONFIG_FB_CYBER2000 != 1 && $CONFIG_FB_STI != 1 && $CONFIG_FB_INTEL != 1) && ($CONFIG_FB_ATARI == 2 || $CONFIG_FB_ATY == 2 || $CONFIG_FB_VESA == 2 || $CONFIG_FB_VIRTUAL == 2 || $CONFIG_FB_CONTROL == 2 || $CONFIG_FB_CLGEN == 2 || $CONFIG_FB_TGA == 2 || $CONFIG_FB_PLATINUM == 2 || $CONFIG_FB_MATROX == 2 || $CONFIG_FB_PM2 == 2 || $CONFIG_FB_PM3 == 2 || $CONFIG_FB_TRIDENT == 2 || $CONFIG_FB_RIVA == 2 || $CONFIG_FB_ATY128 == 2 || $CONFIG_FB_3DFX == 2 || $CONFIG_FB_RADEON == 2 || $CONFIG_FB_INTEL == 2 || $CONFIG_FB_SGIVW == 2 || $CONFIG_FB_SIS == 2 || $CONFIG_FB_PVR2 == 2 || $CONFIG_FB_VOODOO1 == 2 || $CONFIG_FB_CYBER2000 == 2 || $CONFIG_FB_STI == 2)} then {write_tristate $cfg $autocfg CONFIG_FBCON_CFB32 $CONSTANT_M [list $notmod] 2 }
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_FBCON_ADVANCED != 1) && ($CONFIG_FB_AMIGA == 1)} then {write_tristate $cfg $autocfg CONFIG_FBCON_AFB $CONSTANT_Y [list $notmod] 2 }
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_FBCON_ADVANCED != 1) && ($CONFIG_FB_AMIGA == 1)} then {write_tristate $cfg $autocfg CONFIG_FBCON_ILBM $CONSTANT_Y [list $notmod] 2 }
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_FBCON_ADVANCED != 1) && ($CONFIG_FB_AMIGA != 1) && ($CONFIG_FB_AMIGA == 2)} then {write_tristate $cfg $autocfg CONFIG_FBCON_AFB $CONSTANT_M [list $notmod] 2 }
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_FBCON_ADVANCED != 1) && ($CONFIG_FB_AMIGA != 1) && ($CONFIG_FB_AMIGA == 2)} then {write_tristate $cfg $autocfg CONFIG_FBCON_ILBM $CONSTANT_M [list $notmod] 2 }
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_FBCON_ADVANCED != 1) && ($CONFIG_FB_ATARI == 1)} then {write_tristate $cfg $autocfg CONFIG_FBCON_IPLAN2P2 $CONSTANT_Y [list $notmod] 2 }
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_FBCON_ADVANCED != 1) && ($CONFIG_FB_ATARI == 1)} then {write_tristate $cfg $autocfg CONFIG_FBCON_IPLAN2P4 $CONSTANT_Y [list $notmod] 2 }
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_FBCON_ADVANCED != 1) && ($CONFIG_FB_ATARI == 1)} then {write_tristate $cfg $autocfg CONFIG_FBCON_IPLAN2P8 $CONSTANT_Y [list $notmod] 2 }
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_FBCON_ADVANCED != 1) && ($CONFIG_FB_ATARI != 1) && ($CONFIG_FB_ATARI == 2)} then {write_tristate $cfg $autocfg CONFIG_FBCON_IPLAN2P2 $CONSTANT_M [list $notmod] 2 }
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_FBCON_ADVANCED != 1) && ($CONFIG_FB_ATARI != 1) && ($CONFIG_FB_ATARI == 2)} then {write_tristate $cfg $autocfg CONFIG_FBCON_IPLAN2P4 $CONSTANT_M [list $notmod] 2 }
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_FBCON_ADVANCED != 1) && ($CONFIG_FB_ATARI != 1) && ($CONFIG_FB_ATARI == 2)} then {write_tristate $cfg $autocfg CONFIG_FBCON_IPLAN2P8 $CONSTANT_M [list $notmod] 2 }
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_FBCON_ADVANCED != 1) && ($CONFIG_FB_MAC == 1 || $CONFIG_FB_VIRTUAL == 1)} then {write_tristate $cfg $autocfg CONFIG_FBCON_MAC $CONSTANT_Y [list $notmod] 2 }
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_FBCON_ADVANCED != 1) && ($CONFIG_FB_MAC != 1 && $CONFIG_FB_VIRTUAL != 1) && ($CONFIG_FB_MAC == 2 || $CONFIG_FB_VIRTUAL == 2)} then {write_tristate $cfg $autocfg CONFIG_FBCON_MAC $CONSTANT_M [list $notmod] 2 }
	global CONFIG_FB_VGA16
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_FBCON_ADVANCED != 1) && ($CONFIG_FB_VGA16 == 1)} then {write_tristate $cfg $autocfg CONFIG_FBCON_VGA_PLANES $CONSTANT_Y [list $notmod] 2 }
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_FBCON_ADVANCED != 1) && ($CONFIG_FB_VGA16 != 1) && ($CONFIG_FB_VGA16 == 2)} then {write_tristate $cfg $autocfg CONFIG_FBCON_VGA_PLANES $CONSTANT_M [list $notmod] 2 }
	global CONFIG_FB_HGA
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_FBCON_ADVANCED != 1) && ($CONFIG_FB_HGA == 1)} then {write_tristate $cfg $autocfg CONFIG_FBCON_HGA $CONSTANT_Y [list $notmod] 2 }
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_FBCON_ADVANCED != 1) && ($CONFIG_FB_HGA != 1) && ($CONFIG_FB_HGA == 2)} then {write_tristate $cfg $autocfg CONFIG_FBCON_HGA $CONSTANT_M [list $notmod] 2 }
	global CONFIG_FBCON_STI
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_FB_STI == 1)} then {write_tristate $cfg $autocfg CONFIG_FBCON_STI $CONSTANT_Y [list $notmod] 2 }
	global CONFIG_FBCON_FONTWIDTH8_ONLY
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1)} then {write_tristate $cfg $autocfg CONFIG_FBCON_FONTWIDTH8_ONLY $CONFIG_FBCON_FONTWIDTH8_ONLY [list $notmod] 2 }
	global CONFIG_FBCON_FONTS
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1)} then {write_tristate $cfg $autocfg CONFIG_FBCON_FONTS $CONFIG_FBCON_FONTS [list $notmod] 2 }
	global CONFIG_FONT_8x8
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_FBCON_FONTS == 1)} then {write_tristate $cfg $autocfg CONFIG_FONT_8x8 $CONFIG_FONT_8x8 [list $notmod] 2 }
	global CONFIG_FONT_8x16
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_FBCON_FONTS == 1)} then {write_tristate $cfg $autocfg CONFIG_FONT_8x16 $CONFIG_FONT_8x16 [list $notmod] 2 }
	global CONFIG_FONT_SUN8x16
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_FBCON_FONTS == 1)} then {write_tristate $cfg $autocfg CONFIG_FONT_SUN8x16 $CONFIG_FONT_SUN8x16 [list $notmod] 2 }
	global CONFIG_FONT_SUN12x22
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_FBCON_FONTS == 1) && ($CONFIG_FBCON_FONTWIDTH8_ONLY == 0)} then {write_tristate $cfg $autocfg CONFIG_FONT_SUN12x22 $CONFIG_FONT_SUN12x22 [list $notmod] 2 }
	global CONFIG_FONT_6x11
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_FBCON_FONTS == 1) && ($CONFIG_FBCON_FONTWIDTH8_ONLY == 0)} then {write_tristate $cfg $autocfg CONFIG_FONT_6x11 $CONFIG_FONT_6x11 [list $notmod] 2 }
	global CONFIG_FONT_PEARL_8x8
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_FBCON_FONTS == 1)} then {write_tristate $cfg $autocfg CONFIG_FONT_PEARL_8x8 $CONFIG_FONT_PEARL_8x8 [list $notmod] 2 }
	global CONFIG_FONT_ACORN_8x8
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_FBCON_FONTS == 1)} then {write_tristate $cfg $autocfg CONFIG_FONT_ACORN_8x8 $CONFIG_FONT_ACORN_8x8 [list $notmod] 2 }
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_FBCON_FONTS != 1)} then {write_tristate $cfg $autocfg CONFIG_FONT_8x8 $CONSTANT_Y [list $notmod] 2 }
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_FBCON_FONTS != 1)} then {write_tristate $cfg $autocfg CONFIG_FONT_8x16 $CONSTANT_Y [list $notmod] 2 }
	if {($CONFIG_VT == 1) && ($CONFIG_FB == 1) && ($CONFIG_FBCON_FONTS != 1) && ($CONFIG_ARM == 1 && $CONFIG_ARCH_ACORN == 1)} then {write_tristate $cfg $autocfg CONFIG_FONT_ACORN_8x8 $CONSTANT_Y [list $notmod] 2 }
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1)} then {write_comment $cfg $autocfg "Sound"}
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1)} then {write_tristate $cfg $autocfg CONFIG_SOUND $CONFIG_SOUND [list $notmod] 2 }
	global CONFIG_SOUND_ALI5455
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND == 1 || $CONFIG_SOUND == 2 || $CONFIG_SOUND == 4) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {write_tristate $cfg $autocfg CONFIG_SOUND_ALI5455 $CONFIG_SOUND_ALI5455 [list $CONFIG_SOUND $CONFIG_PCI] 2 }
	global CONFIG_SOUND_ALI5455_CODECSPDIFOUT_PCMOUTSHARE
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_ALI5455 == 1 || $CONFIG_SOUND_ALI5455 == 2)} then {write_tristate $cfg $autocfg CONFIG_SOUND_ALI5455_CODECSPDIFOUT_PCMOUTSHARE $CONFIG_SOUND_ALI5455_CODECSPDIFOUT_PCMOUTSHARE [list $notmod] 2 }
	global CONFIG_SOUND_ALI5455_CODECSPDIFOUT_CODECINDEPENDENTDMA
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_ALI5455 == 1 || $CONFIG_SOUND_ALI5455 == 2)} then {write_tristate $cfg $autocfg CONFIG_SOUND_ALI5455_CODECSPDIFOUT_CODECINDEPENDENTDMA $CONFIG_SOUND_ALI5455_CODECSPDIFOUT_CODECINDEPENDENTDMA [list $notmod] 2 }
	global CONFIG_SOUND_ALI5455_CONTROLLERSPDIFOUT_PCMOUTSHARE
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_ALI5455 == 1 || $CONFIG_SOUND_ALI5455 == 2)} then {write_tristate $cfg $autocfg CONFIG_SOUND_ALI5455_CONTROLLERSPDIFOUT_PCMOUTSHARE $CONFIG_SOUND_ALI5455_CONTROLLERSPDIFOUT_PCMOUTSHARE [list $notmod] 2 }
	global CONFIG_SOUND_ALI5455_CONTROLLERSPDIFOUT_CONTROLLERINDEPENDENTDMA
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_ALI5455 == 1 || $CONFIG_SOUND_ALI5455 == 2)} then {write_tristate $cfg $autocfg CONFIG_SOUND_ALI5455_CONTROLLERSPDIFOUT_CONTROLLERINDEPENDENTDMA $CONFIG_SOUND_ALI5455_CONTROLLERSPDIFOUT_CONTROLLERINDEPENDENTDMA [list $notmod] 2 }
	global CONFIG_SOUND_BT878
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND == 1 || $CONFIG_SOUND == 2 || $CONFIG_SOUND == 4) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {write_tristate $cfg $autocfg CONFIG_SOUND_BT878 $CONFIG_SOUND_BT878 [list $CONFIG_SOUND $CONFIG_PCI] 2 }
	global CONFIG_SOUND_CMPCI
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND == 1 || $CONFIG_SOUND == 2 || $CONFIG_SOUND == 4) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {write_tristate $cfg $autocfg CONFIG_SOUND_CMPCI $CONFIG_SOUND_CMPCI [list $CONFIG_SOUND $CONFIG_PCI] 2 }
	global CONFIG_SOUND_CMPCI_FM
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_CMPCI == 1 || $CONFIG_SOUND_CMPCI == 2)} then {write_tristate $cfg $autocfg CONFIG_SOUND_CMPCI_FM $CONFIG_SOUND_CMPCI_FM [list $notmod] 2 }
	global CONFIG_SOUND_CMPCI_FMIO
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_CMPCI == 1 || $CONFIG_SOUND_CMPCI == 2) && ($CONFIG_SOUND_CMPCI_FM == 1)} then {write_hex $cfg $autocfg CONFIG_SOUND_CMPCI_FMIO 388 $notmod }
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_CMPCI == 1 || $CONFIG_SOUND_CMPCI == 2) && ($CONFIG_SOUND_CMPCI_FM == 1)} then {write_hex $cfg $autocfg CONFIG_SOUND_CMPCI_FMIO $CONFIG_SOUND_CMPCI_FMIO $notmod }
	global CONFIG_SOUND_CMPCI_MIDI
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_CMPCI == 1 || $CONFIG_SOUND_CMPCI == 2)} then {write_tristate $cfg $autocfg CONFIG_SOUND_CMPCI_MIDI $CONFIG_SOUND_CMPCI_MIDI [list $notmod] 2 }
	global CONFIG_SOUND_CMPCI_MPUIO
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_CMPCI == 1 || $CONFIG_SOUND_CMPCI == 2) && ($CONFIG_SOUND_CMPCI_MIDI == 1)} then {write_hex $cfg $autocfg CONFIG_SOUND_CMPCI_MPUIO $CONFIG_SOUND_CMPCI_MPUIO $notmod }
	global CONFIG_SOUND_CMPCI_JOYSTICK
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_CMPCI == 1 || $CONFIG_SOUND_CMPCI == 2)} then {write_tristate $cfg $autocfg CONFIG_SOUND_CMPCI_JOYSTICK $CONFIG_SOUND_CMPCI_JOYSTICK [list $notmod] 2 }
	global CONFIG_SOUND_CMPCI_CM8738
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_CMPCI == 1 || $CONFIG_SOUND_CMPCI == 2)} then {write_tristate $cfg $autocfg CONFIG_SOUND_CMPCI_CM8738 $CONFIG_SOUND_CMPCI_CM8738 [list $notmod] 2 }
	global CONFIG_SOUND_CMPCI_SPDIFINVERSE
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_CMPCI == 1 || $CONFIG_SOUND_CMPCI == 2) && ($CONFIG_SOUND_CMPCI_CM8738 == 1)} then {write_tristate $cfg $autocfg CONFIG_SOUND_CMPCI_SPDIFINVERSE $CONFIG_SOUND_CMPCI_SPDIFINVERSE [list $notmod] 2 }
	global CONFIG_SOUND_CMPCI_SPDIFLOOP
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_CMPCI == 1 || $CONFIG_SOUND_CMPCI == 2) && ($CONFIG_SOUND_CMPCI_CM8738 == 1)} then {write_tristate $cfg $autocfg CONFIG_SOUND_CMPCI_SPDIFLOOP $CONFIG_SOUND_CMPCI_SPDIFLOOP [list $notmod] 2 }
	global CONFIG_SOUND_CMPCI_SPEAKERS
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_CMPCI == 1 || $CONFIG_SOUND_CMPCI == 2) && ($CONFIG_SOUND_CMPCI_CM8738 == 1)} then {write_int $cfg $autocfg CONFIG_SOUND_CMPCI_SPEAKERS $CONFIG_SOUND_CMPCI_SPEAKERS $notmod }
	global CONFIG_SOUND_CMPCI_LINE_REAR
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_CMPCI == 1 || $CONFIG_SOUND_CMPCI == 2) && ($CONFIG_SOUND_CMPCI_CM8738 == 1) && ($CONFIG_SOUND_CMPCI_SPEAKERS != "2")} then {write_tristate $cfg $autocfg CONFIG_SOUND_CMPCI_LINE_REAR $CONFIG_SOUND_CMPCI_LINE_REAR [list $notmod] 2 }
	global CONFIG_SOUND_CMPCI_LINE_BASS
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_CMPCI == 1 || $CONFIG_SOUND_CMPCI == 2) && ($CONFIG_SOUND_CMPCI_CM8738 == 1) && ($CONFIG_SOUND_CMPCI_SPEAKERS != "2")} then {write_tristate $cfg $autocfg CONFIG_SOUND_CMPCI_LINE_BASS $CONFIG_SOUND_CMPCI_LINE_BASS [list $notmod] 2 }
	global CONFIG_SOUND_EMU10K1
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND == 1 || $CONFIG_SOUND == 2 || $CONFIG_SOUND == 4) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {write_tristate $cfg $autocfg CONFIG_SOUND_EMU10K1 $CONFIG_SOUND_EMU10K1 [list $CONFIG_SOUND $CONFIG_PCI] 2 }
	global CONFIG_MIDI_EMU10K1
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_EMU10K1 == 1 || $CONFIG_SOUND_EMU10K1 == 2 || $CONFIG_SOUND_EMU10K1 == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {write_tristate $cfg $autocfg CONFIG_MIDI_EMU10K1 $CONFIG_MIDI_EMU10K1 [list $CONFIG_SOUND_EMU10K1 $CONFIG_EXPERIMENTAL] 1 }
	global CONFIG_SOUND_FUSION
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND == 1 || $CONFIG_SOUND == 2 || $CONFIG_SOUND == 4) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {write_tristate $cfg $autocfg CONFIG_SOUND_FUSION $CONFIG_SOUND_FUSION [list $CONFIG_SOUND $CONFIG_PCI] 2 }
	global CONFIG_SOUND_CS4281
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND == 1 || $CONFIG_SOUND == 2 || $CONFIG_SOUND == 4) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {write_tristate $cfg $autocfg CONFIG_SOUND_CS4281 $CONFIG_SOUND_CS4281 [list $CONFIG_SOUND $CONFIG_PCI] 2 }
	global CONFIG_SOUND_ES1370
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND == 1 || $CONFIG_SOUND == 2 || $CONFIG_SOUND == 4) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {write_tristate $cfg $autocfg CONFIG_SOUND_ES1370 $CONFIG_SOUND_ES1370 [list $CONFIG_SOUND $CONFIG_PCI] 2 }
	global CONFIG_SOUND_ES1371
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND == 1 || $CONFIG_SOUND == 2 || $CONFIG_SOUND == 4) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {write_tristate $cfg $autocfg CONFIG_SOUND_ES1371 $CONFIG_SOUND_ES1371 [list $CONFIG_SOUND $CONFIG_PCI] 2 }
	global CONFIG_SOUND_ESSSOLO1
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND == 1 || $CONFIG_SOUND == 2 || $CONFIG_SOUND == 4) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {write_tristate $cfg $autocfg CONFIG_SOUND_ESSSOLO1 $CONFIG_SOUND_ESSSOLO1 [list $CONFIG_SOUND $CONFIG_PCI] 2 }
	global CONFIG_SOUND_MAESTRO
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND == 1 || $CONFIG_SOUND == 2 || $CONFIG_SOUND == 4) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {write_tristate $cfg $autocfg CONFIG_SOUND_MAESTRO $CONFIG_SOUND_MAESTRO [list $CONFIG_SOUND $CONFIG_PCI] 2 }
	global CONFIG_SOUND_MAESTRO3
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND == 1 || $CONFIG_SOUND == 2 || $CONFIG_SOUND == 4) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {write_tristate $cfg $autocfg CONFIG_SOUND_MAESTRO3 $CONFIG_SOUND_MAESTRO3 [list $CONFIG_SOUND $CONFIG_PCI $CONFIG_EXPERIMENTAL] 2 }
	global CONFIG_SOUND_FORTE
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND == 1 || $CONFIG_SOUND == 2 || $CONFIG_SOUND == 4) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {write_tristate $cfg $autocfg CONFIG_SOUND_FORTE $CONFIG_SOUND_FORTE [list $CONFIG_SOUND $CONFIG_PCI $CONFIG_EXPERIMENTAL] 2 }
	global CONFIG_SOUND_ICH
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {write_tristate $cfg $autocfg CONFIG_SOUND_ICH $CONFIG_SOUND_ICH [list $CONFIG_PCI] 2 }
	global CONFIG_SOUND_RME96XX
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND == 1 || $CONFIG_SOUND == 2 || $CONFIG_SOUND == 4) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {write_tristate $cfg $autocfg CONFIG_SOUND_RME96XX $CONFIG_SOUND_RME96XX [list $CONFIG_SOUND $CONFIG_PCI $CONFIG_EXPERIMENTAL] 2 }
	global CONFIG_SOUND_SONICVIBES
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND == 1 || $CONFIG_SOUND == 2 || $CONFIG_SOUND == 4) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {write_tristate $cfg $autocfg CONFIG_SOUND_SONICVIBES $CONFIG_SOUND_SONICVIBES [list $CONFIG_SOUND $CONFIG_PCI] 2 }
	global CONFIG_SOUND_TRIDENT
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND == 1 || $CONFIG_SOUND == 2 || $CONFIG_SOUND == 4) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {write_tristate $cfg $autocfg CONFIG_SOUND_TRIDENT $CONFIG_SOUND_TRIDENT [list $CONFIG_SOUND $CONFIG_PCI] 2 }
	global CONFIG_SOUND_MSNDCLAS
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND == 1 || $CONFIG_SOUND == 2 || $CONFIG_SOUND == 4)} then {write_tristate $cfg $autocfg CONFIG_SOUND_MSNDCLAS $CONFIG_SOUND_MSNDCLAS [list $CONFIG_SOUND] 2 }
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_MSNDCLAS == 1 || $CONFIG_SOUND_MSNDCLAS == 2) && ($CONFIG_SOUND_MSNDCLAS == 1)} then {write_comment $cfg $autocfg "  Compiled-in MSND Classic support requires firmware during compilation."}
	global CONFIG_MSNDCLAS_HAVE_BOOT
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_MSNDCLAS == 1 || $CONFIG_SOUND_MSNDCLAS == 2) && ($CONFIG_SOUND_MSNDCLAS == 1)} then {write_tristate $cfg $autocfg CONFIG_MSNDCLAS_HAVE_BOOT $CONSTANT_Y [list $notmod] 2 }
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_MSNDCLAS == 1 || $CONFIG_SOUND_MSNDCLAS == 2) && ($CONFIG_SOUND_MSNDCLAS != 1)} then {write_tristate $cfg $autocfg CONFIG_MSNDCLAS_HAVE_BOOT $CONSTANT_N [list $notmod] 2 }
	global CONFIG_MSNDCLAS_INIT_FILE
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_MSNDCLAS == 1 || $CONFIG_SOUND_MSNDCLAS == 2)} then {write_string $cfg $autocfg CONFIG_MSNDCLAS_INIT_FILE "$CONFIG_MSNDCLAS_INIT_FILE" $notmod }
	global CONFIG_MSNDCLAS_PERM_FILE
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_MSNDCLAS == 1 || $CONFIG_SOUND_MSNDCLAS == 2)} then {write_string $cfg $autocfg CONFIG_MSNDCLAS_PERM_FILE "$CONFIG_MSNDCLAS_PERM_FILE" $notmod }
	global CONFIG_MSNDCLAS_IRQ
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_MSNDCLAS == 1)} then {write_int $cfg $autocfg CONFIG_MSNDCLAS_IRQ $CONFIG_MSNDCLAS_IRQ $notmod }
	global CONFIG_MSNDCLAS_MEM
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_MSNDCLAS == 1)} then {write_hex $cfg $autocfg CONFIG_MSNDCLAS_MEM $CONFIG_MSNDCLAS_MEM $notmod }
	global CONFIG_MSNDCLAS_IO
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_MSNDCLAS == 1)} then {write_hex $cfg $autocfg CONFIG_MSNDCLAS_IO $CONFIG_MSNDCLAS_IO $notmod }
	global CONFIG_SOUND_MSNDPIN
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND == 1 || $CONFIG_SOUND == 2 || $CONFIG_SOUND == 4)} then {write_tristate $cfg $autocfg CONFIG_SOUND_MSNDPIN $CONFIG_SOUND_MSNDPIN [list $CONFIG_SOUND] 2 }
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_MSNDPIN == 1 || $CONFIG_SOUND_MSNDPIN == 2) && ($CONFIG_SOUND_MSNDPIN == 1)} then {write_comment $cfg $autocfg "Compiled-in MSND Pinnacle support requires firmware during compilation."}
	global CONFIG_MSNDPIN_HAVE_BOOT
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_MSNDPIN == 1 || $CONFIG_SOUND_MSNDPIN == 2) && ($CONFIG_SOUND_MSNDPIN == 1)} then {write_tristate $cfg $autocfg CONFIG_MSNDPIN_HAVE_BOOT $CONSTANT_Y [list $notmod] 2 }
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_MSNDPIN == 1 || $CONFIG_SOUND_MSNDPIN == 2) && ($CONFIG_SOUND_MSNDPIN != 1)} then {write_tristate $cfg $autocfg CONFIG_MSNDPIN_HAVE_BOOT $CONSTANT_N [list $notmod] 2 }
	global CONFIG_MSNDPIN_INIT_FILE
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_MSNDPIN == 1 || $CONFIG_SOUND_MSNDPIN == 2)} then {write_string $cfg $autocfg CONFIG_MSNDPIN_INIT_FILE "$CONFIG_MSNDPIN_INIT_FILE" $notmod }
	global CONFIG_MSNDPIN_PERM_FILE
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_MSNDPIN == 1 || $CONFIG_SOUND_MSNDPIN == 2)} then {write_string $cfg $autocfg CONFIG_MSNDPIN_PERM_FILE "$CONFIG_MSNDPIN_PERM_FILE" $notmod }
	global CONFIG_MSNDPIN_IRQ
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_MSNDPIN == 1)} then {write_int $cfg $autocfg CONFIG_MSNDPIN_IRQ $CONFIG_MSNDPIN_IRQ $notmod }
	global CONFIG_MSNDPIN_MEM
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_MSNDPIN == 1)} then {write_hex $cfg $autocfg CONFIG_MSNDPIN_MEM $CONFIG_MSNDPIN_MEM $notmod }
	global CONFIG_MSNDPIN_IO
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_MSNDPIN == 1)} then {write_hex $cfg $autocfg CONFIG_MSNDPIN_IO $CONFIG_MSNDPIN_IO $notmod }
	global CONFIG_MSNDPIN_DIGITAL
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_MSNDPIN == 1)} then {write_tristate $cfg $autocfg CONFIG_MSNDPIN_DIGITAL $CONFIG_MSNDPIN_DIGITAL [list $notmod] 2 }
	global CONFIG_MSNDPIN_NONPNP
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_MSNDPIN == 1)} then {write_tristate $cfg $autocfg CONFIG_MSNDPIN_NONPNP $CONFIG_MSNDPIN_NONPNP [list $notmod] 2 }
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_MSNDPIN == 1) && ($CONFIG_MSNDPIN_NONPNP == 1)} then {write_comment $cfg $autocfg "MSND Pinnacle DSP section will be configured to above parameters."}
	global CONFIG_MSNDPIN_CFG
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_MSNDPIN == 1) && ($CONFIG_MSNDPIN_NONPNP == 1)} then {write_hex $cfg $autocfg CONFIG_MSNDPIN_CFG $CONFIG_MSNDPIN_CFG $notmod }
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_MSNDPIN == 1) && ($CONFIG_MSNDPIN_NONPNP == 1)} then {write_comment $cfg $autocfg "Pinnacle-specific Device Configuration (0 disables)"}
	global CONFIG_MSNDPIN_MPU_IO
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_MSNDPIN == 1) && ($CONFIG_MSNDPIN_NONPNP == 1)} then {write_hex $cfg $autocfg CONFIG_MSNDPIN_MPU_IO $CONFIG_MSNDPIN_MPU_IO $notmod }
	global CONFIG_MSNDPIN_MPU_IRQ
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_MSNDPIN == 1) && ($CONFIG_MSNDPIN_NONPNP == 1)} then {write_int $cfg $autocfg CONFIG_MSNDPIN_MPU_IRQ $CONFIG_MSNDPIN_MPU_IRQ $notmod }
	global CONFIG_MSNDPIN_IDE_IO0
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_MSNDPIN == 1) && ($CONFIG_MSNDPIN_NONPNP == 1)} then {write_hex $cfg $autocfg CONFIG_MSNDPIN_IDE_IO0 $CONFIG_MSNDPIN_IDE_IO0 $notmod }
	global CONFIG_MSNDPIN_IDE_IO1
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_MSNDPIN == 1) && ($CONFIG_MSNDPIN_NONPNP == 1)} then {write_hex $cfg $autocfg CONFIG_MSNDPIN_IDE_IO1 $CONFIG_MSNDPIN_IDE_IO1 $notmod }
	global CONFIG_MSNDPIN_IDE_IRQ
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_MSNDPIN == 1) && ($CONFIG_MSNDPIN_NONPNP == 1)} then {write_int $cfg $autocfg CONFIG_MSNDPIN_IDE_IRQ $CONFIG_MSNDPIN_IDE_IRQ $notmod }
	global CONFIG_MSNDPIN_JOYSTICK_IO
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_MSNDPIN == 1) && ($CONFIG_MSNDPIN_NONPNP == 1)} then {write_hex $cfg $autocfg CONFIG_MSNDPIN_JOYSTICK_IO $CONFIG_MSNDPIN_JOYSTICK_IO $notmod }
	global CONFIG_MSND_FIFOSIZE
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_MSNDPIN == 1 || $CONFIG_SOUND_MSNDCLAS == 1)} then {write_int $cfg $autocfg CONFIG_MSND_FIFOSIZE $CONFIG_MSND_FIFOSIZE $notmod }
	global CONFIG_SOUND_VIA82CXXX
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {write_tristate $cfg $autocfg CONFIG_SOUND_VIA82CXXX $CONFIG_SOUND_VIA82CXXX [list $CONFIG_PCI] 2 }
	global CONFIG_MIDI_VIA82CXXX
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_VIA82CXXX == 1 || $CONFIG_SOUND_VIA82CXXX == 2 || $CONFIG_SOUND_VIA82CXXX == 4)} then {write_tristate $cfg $autocfg CONFIG_MIDI_VIA82CXXX $CONFIG_MIDI_VIA82CXXX [list $CONFIG_SOUND_VIA82CXXX] 1 }
	global CONFIG_SOUND_OSS
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND == 1 || $CONFIG_SOUND == 2 || $CONFIG_SOUND == 4)} then {write_tristate $cfg $autocfg CONFIG_SOUND_OSS $CONFIG_SOUND_OSS [list $CONFIG_SOUND] 2 }
	global CONFIG_SOUND_TRACEINIT
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2)} then {write_tristate $cfg $autocfg CONFIG_SOUND_TRACEINIT $CONFIG_SOUND_TRACEINIT [list $notmod] 2 }
	global CONFIG_SOUND_DMAP
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2)} then {write_tristate $cfg $autocfg CONFIG_SOUND_DMAP $CONFIG_SOUND_DMAP [list $notmod] 2 }
	global CONFIG_SOUND_AD1816
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2 || $CONFIG_SOUND_OSS == 4)} then {write_tristate $cfg $autocfg CONFIG_SOUND_AD1816 $CONFIG_SOUND_AD1816 [list $CONFIG_SOUND_OSS] 2 }
	global CONFIG_SOUND_AD1889
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2 || $CONFIG_SOUND_OSS == 4)} then {write_tristate $cfg $autocfg CONFIG_SOUND_AD1889 $CONFIG_SOUND_AD1889 [list $CONFIG_SOUND_OSS] 2 }
	global CONFIG_SOUND_SGALAXY
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2 || $CONFIG_SOUND_OSS == 4)} then {write_tristate $cfg $autocfg CONFIG_SOUND_SGALAXY $CONFIG_SOUND_SGALAXY [list $CONFIG_SOUND_OSS] 2 }
	global CONFIG_SOUND_ADLIB
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2 || $CONFIG_SOUND_OSS == 4)} then {write_tristate $cfg $autocfg CONFIG_SOUND_ADLIB $CONFIG_SOUND_ADLIB [list $CONFIG_SOUND_OSS] 2 }
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2 || $CONFIG_SOUND_OSS == 4)} then {write_tristate $cfg $autocfg CONFIG_SOUND_ACI_MIXER $CONFIG_SOUND_ACI_MIXER [list $CONFIG_SOUND_OSS] 2 }
	global CONFIG_SOUND_CS4232
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2 || $CONFIG_SOUND_OSS == 4)} then {write_tristate $cfg $autocfg CONFIG_SOUND_CS4232 $CONFIG_SOUND_CS4232 [list $CONFIG_SOUND_OSS] 2 }
	global CONFIG_SOUND_SSCAPE
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2 || $CONFIG_SOUND_OSS == 4)} then {write_tristate $cfg $autocfg CONFIG_SOUND_SSCAPE $CONFIG_SOUND_SSCAPE [list $CONFIG_SOUND_OSS] 2 }
	global CONFIG_SOUND_GUS
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2 || $CONFIG_SOUND_OSS == 4)} then {write_tristate $cfg $autocfg CONFIG_SOUND_GUS $CONFIG_SOUND_GUS [list $CONFIG_SOUND_OSS] 2 }
	global CONFIG_SOUND_GUS16
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_SOUND_GUS != 0)} then {write_tristate $cfg $autocfg CONFIG_SOUND_GUS16 $CONFIG_SOUND_GUS16 [list $notmod] 2 }
	global CONFIG_SOUND_GUSMAX
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_SOUND_GUS != 0)} then {write_tristate $cfg $autocfg CONFIG_SOUND_GUSMAX $CONFIG_SOUND_GUSMAX [list $notmod] 2 }
	global CONFIG_SOUND_VMIDI
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2 || $CONFIG_SOUND_OSS == 4)} then {write_tristate $cfg $autocfg CONFIG_SOUND_VMIDI $CONFIG_SOUND_VMIDI [list $CONFIG_SOUND_OSS] 2 }
	global CONFIG_SOUND_TRIX
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2 || $CONFIG_SOUND_OSS == 4)} then {write_tristate $cfg $autocfg CONFIG_SOUND_TRIX $CONFIG_SOUND_TRIX [list $CONFIG_SOUND_OSS] 2 }
	global CONFIG_TRIX_HAVE_BOOT
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_SOUND_TRIX == 1)} then {write_tristate $cfg $autocfg CONFIG_TRIX_HAVE_BOOT $CONFIG_TRIX_HAVE_BOOT [list $notmod] 2 }
	global CONFIG_TRIX_BOOT_FILE
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_SOUND_TRIX == 1) && ($CONFIG_TRIX_HAVE_BOOT == 1)} then {write_string $cfg $autocfg CONFIG_TRIX_BOOT_FILE "$CONFIG_TRIX_BOOT_FILE" $notmod }
	global CONFIG_SOUND_MSS
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2 || $CONFIG_SOUND_OSS == 4)} then {write_tristate $cfg $autocfg CONFIG_SOUND_MSS $CONFIG_SOUND_MSS [list $CONFIG_SOUND_OSS] 2 }
	global CONFIG_SOUND_MPU401
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2 || $CONFIG_SOUND_OSS == 4)} then {write_tristate $cfg $autocfg CONFIG_SOUND_MPU401 $CONFIG_SOUND_MPU401 [list $CONFIG_SOUND_OSS] 2 }
	global CONFIG_SOUND_NM256
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2 || $CONFIG_SOUND_OSS == 4)} then {write_tristate $cfg $autocfg CONFIG_SOUND_NM256 $CONFIG_SOUND_NM256 [list $CONFIG_SOUND_OSS] 2 }
	global CONFIG_SOUND_MAD16
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2 || $CONFIG_SOUND_OSS == 4)} then {write_tristate $cfg $autocfg CONFIG_SOUND_MAD16 $CONFIG_SOUND_MAD16 [list $CONFIG_SOUND_OSS] 2 }
	global CONFIG_MAD16_OLDCARD
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_SOUND_MAD16 == 1 || $CONFIG_SOUND_MAD16 == 2)} then {write_tristate $cfg $autocfg CONFIG_MAD16_OLDCARD $CONFIG_MAD16_OLDCARD [list $notmod] 2 }
	global CONFIG_SOUND_PAS
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2 || $CONFIG_SOUND_OSS == 4)} then {write_tristate $cfg $autocfg CONFIG_SOUND_PAS $CONFIG_SOUND_PAS [list $CONFIG_SOUND_OSS] 2 }
	global CONFIG_PAS_JOYSTICK
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_SOUND_PAS == 1 || $CONFIG_SOUND_PAS == 4)} then {write_tristate $cfg $autocfg CONFIG_PAS_JOYSTICK $CONFIG_PAS_JOYSTICK [list $CONFIG_SOUND_PAS] 2 }
	global CONFIG_SOUND_PSS
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2 || $CONFIG_SOUND_OSS == 4)} then {write_tristate $cfg $autocfg CONFIG_SOUND_PSS $CONFIG_SOUND_PSS [list $CONFIG_SOUND_OSS] 2 }
	global CONFIG_PSS_MIXER
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_SOUND_PSS == 1 || $CONFIG_SOUND_PSS == 2)} then {write_tristate $cfg $autocfg CONFIG_PSS_MIXER $CONFIG_PSS_MIXER [list $notmod] 2 }
	global CONFIG_PSS_HAVE_BOOT
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_SOUND_PSS == 1 || $CONFIG_SOUND_PSS == 2)} then {write_tristate $cfg $autocfg CONFIG_PSS_HAVE_BOOT $CONFIG_PSS_HAVE_BOOT [list $notmod] 2 }
	global CONFIG_PSS_BOOT_FILE
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_SOUND_PSS == 1 || $CONFIG_SOUND_PSS == 2) && ($CONFIG_PSS_HAVE_BOOT == 1)} then {write_string $cfg $autocfg CONFIG_PSS_BOOT_FILE "$CONFIG_PSS_BOOT_FILE" $notmod }
	global CONFIG_SOUND_SB
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2 || $CONFIG_SOUND_OSS == 4)} then {write_tristate $cfg $autocfg CONFIG_SOUND_SB $CONFIG_SOUND_SB [list $CONFIG_SOUND_OSS] 2 }
	global CONFIG_SOUND_AWE32_SYNTH
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2 || $CONFIG_SOUND_OSS == 4)} then {write_tristate $cfg $autocfg CONFIG_SOUND_AWE32_SYNTH $CONFIG_SOUND_AWE32_SYNTH [list $CONFIG_SOUND_OSS] 2 }
	global CONFIG_SOUND_KAHLUA
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_SOUND_SB == 1 || $CONFIG_SOUND_SB == 2 || $CONFIG_SOUND_SB == 4) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2 || $CONFIG_SOUND_OSS == 4)} then {write_tristate $cfg $autocfg CONFIG_SOUND_KAHLUA $CONFIG_SOUND_KAHLUA [list $CONFIG_SOUND_SB $CONFIG_SOUND_OSS] 2 }
	global CONFIG_SOUND_WAVEFRONT
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2 || $CONFIG_SOUND_OSS == 4)} then {write_tristate $cfg $autocfg CONFIG_SOUND_WAVEFRONT $CONFIG_SOUND_WAVEFRONT [list $CONFIG_SOUND_OSS $CONSTANT_M] 2 }
	global CONFIG_SOUND_MAUI
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2 || $CONFIG_SOUND_OSS == 4)} then {write_tristate $cfg $autocfg CONFIG_SOUND_MAUI $CONFIG_SOUND_MAUI [list $CONFIG_SOUND_OSS] 2 }
	global CONFIG_MAUI_HAVE_BOOT
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_SOUND_MAUI == 1)} then {write_tristate $cfg $autocfg CONFIG_MAUI_HAVE_BOOT $CONFIG_MAUI_HAVE_BOOT [list $notmod] 2 }
	global CONFIG_MAUI_BOOT_FILE
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_SOUND_MAUI == 1) && ($CONFIG_MAUI_HAVE_BOOT == 1)} then {write_string $cfg $autocfg CONFIG_MAUI_BOOT_FILE "$CONFIG_MAUI_BOOT_FILE" $notmod }
	global CONFIG_SOUND_YM3812
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2 || $CONFIG_SOUND_OSS == 4)} then {write_tristate $cfg $autocfg CONFIG_SOUND_YM3812 $CONFIG_SOUND_YM3812 [list $CONFIG_SOUND_OSS] 2 }
	global CONFIG_SOUND_OPL3SA1
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2 || $CONFIG_SOUND_OSS == 4)} then {write_tristate $cfg $autocfg CONFIG_SOUND_OPL3SA1 $CONFIG_SOUND_OPL3SA1 [list $CONFIG_SOUND_OSS] 2 }
	global CONFIG_SOUND_OPL3SA2
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2 || $CONFIG_SOUND_OSS == 4)} then {write_tristate $cfg $autocfg CONFIG_SOUND_OPL3SA2 $CONFIG_SOUND_OPL3SA2 [list $CONFIG_SOUND_OSS] 2 }
	global CONFIG_SOUND_YMFPCI
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2 || $CONFIG_SOUND_OSS == 4) && ($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {write_tristate $cfg $autocfg CONFIG_SOUND_YMFPCI $CONFIG_SOUND_YMFPCI [list $CONFIG_SOUND_OSS $CONFIG_PCI] 2 }
	global CONFIG_SOUND_YMFPCI_LEGACY
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_SOUND_YMFPCI == 1 || $CONFIG_SOUND_YMFPCI == 2 || $CONFIG_SOUND_YMFPCI == 4)} then {write_tristate $cfg $autocfg CONFIG_SOUND_YMFPCI_LEGACY $CONFIG_SOUND_YMFPCI_LEGACY [list $CONFIG_SOUND_YMFPCI] 1 }
	global CONFIG_SOUND_UART6850
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2 || $CONFIG_SOUND_OSS == 4)} then {write_tristate $cfg $autocfg CONFIG_SOUND_UART6850 $CONFIG_SOUND_UART6850 [list $CONFIG_SOUND_OSS] 2 }
	global CONFIG_SOUND_AEDSP16
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2 || $CONFIG_SOUND_OSS == 4)} then {write_tristate $cfg $autocfg CONFIG_SOUND_AEDSP16 $CONFIG_SOUND_AEDSP16 [list $CONFIG_SOUND_OSS] 2 }
	global CONFIG_SC6600
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_SOUND_AEDSP16 == 1 || $CONFIG_SOUND_AEDSP16 == 2)} then {write_tristate $cfg $autocfg CONFIG_SC6600 $CONFIG_SC6600 [list $notmod] 2 }
	global CONFIG_SC6600_JOY
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_SOUND_AEDSP16 == 1 || $CONFIG_SOUND_AEDSP16 == 2) && ($CONFIG_SC6600 == 1)} then {write_tristate $cfg $autocfg CONFIG_SC6600_JOY $CONFIG_SC6600_JOY [list $notmod] 2 }
	global CONFIG_SC6600_CDROM
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_SOUND_AEDSP16 == 1 || $CONFIG_SOUND_AEDSP16 == 2) && ($CONFIG_SC6600 == 1)} then {write_int $cfg $autocfg CONFIG_SC6600_CDROM $CONFIG_SC6600_CDROM $notmod }
	global CONFIG_SC6600_CDROMBASE
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_SOUND_AEDSP16 == 1 || $CONFIG_SOUND_AEDSP16 == 2) && ($CONFIG_SC6600 == 1)} then {write_hex $cfg $autocfg CONFIG_SC6600_CDROMBASE $CONFIG_SC6600_CDROMBASE $notmod }
	global CONFIG_AEDSP16_SBPRO
	global CONFIG_AEDSP16_MSS
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_SOUND_AEDSP16 == 1 || $CONFIG_SOUND_AEDSP16 == 2) && ($CONFIG_SOUND_SB == 1 || $CONFIG_SOUND_SB == 2) && ($CONFIG_AEDSP16_MSS != 1)} then {write_tristate $cfg $autocfg CONFIG_AEDSP16_SBPRO $CONFIG_AEDSP16_SBPRO [list $notmod] 2 }
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_SOUND_AEDSP16 == 1 || $CONFIG_SOUND_AEDSP16 == 2) && ($CONFIG_SOUND_MSS == 1 || $CONFIG_SOUND_MSS == 2) && ($CONFIG_AEDSP16_SBPRO != 1)} then {write_tristate $cfg $autocfg CONFIG_AEDSP16_MSS $CONFIG_AEDSP16_MSS [list $notmod] 2 }
	global CONFIG_AEDSP16_MPU401
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_SOUND_AEDSP16 == 1 || $CONFIG_SOUND_AEDSP16 == 2) && ($CONFIG_SOUND_MPU401 == 1 || $CONFIG_SOUND_MPU401 == 2)} then {write_tristate $cfg $autocfg CONFIG_AEDSP16_MPU401 $CONFIG_AEDSP16_MPU401 [list $notmod] 2 }
	global CONFIG_SOUND_VIDC
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_ARM == 1) && ($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2 || $CONFIG_SOUND_OSS == 4)} then {write_tristate $cfg $autocfg CONFIG_SOUND_VIDC $CONFIG_SOUND_VIDC [list $CONFIG_SOUND_OSS] 2 }
	global CONFIG_SOUND_WAVEARTIST
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2) && ($CONFIG_ARM == 1) && ($CONFIG_SOUND_OSS == 1 || $CONFIG_SOUND_OSS == 2 || $CONFIG_SOUND_OSS == 4) && ($CONFIG_ARCH_NETWINDER == 1 || $CONFIG_ARCH_NETWINDER == 2 || $CONFIG_ARCH_NETWINDER == 4)} then {write_tristate $cfg $autocfg CONFIG_SOUND_WAVEARTIST $CONFIG_SOUND_WAVEARTIST [list $CONFIG_SOUND_OSS $CONFIG_ARCH_NETWINDER] 2 }
	global CONFIG_SOUND_TVMIXER
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND == 1 || $CONFIG_SOUND == 2 || $CONFIG_SOUND == 4) && ($CONFIG_I2C == 1 || $CONFIG_I2C == 2 || $CONFIG_I2C == 4)} then {write_tristate $cfg $autocfg CONFIG_SOUND_TVMIXER $CONFIG_SOUND_TVMIXER [list $CONFIG_SOUND $CONFIG_I2C] 2 }
	global CONFIG_SOUND_AD1980
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND == 1 || $CONFIG_SOUND == 2 || $CONFIG_SOUND == 4)} then {write_tristate $cfg $autocfg CONFIG_SOUND_AD1980 $CONFIG_SOUND_AD1980 [list $CONFIG_SOUND] 2 }
	global CONFIG_SOUND_WM97XX
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_SOUND == 1 || $CONFIG_SOUND == 2 || $CONFIG_SOUND == 4)} then {write_tristate $cfg $autocfg CONFIG_SOUND_WM97XX $CONFIG_SOUND_WM97XX [list $CONFIG_SOUND] 2 }
	if {($CONFIG_ARCH_ACORN == 1 || $CONFIG_ARCH_CLPS7500 == 1 || $CONFIG_ARCH_RISCSTATION == 1 || $CONFIG_ARCH_TBOX == 1 || $CONFIG_ARCH_SHARK == 1 || $CONFIG_ARCH_SA1100 == 1 || $CONFIG_PCI == 1) && ($CONFIG_SOUND != 0) && ($CONFIG_INPUT_GAMEPORT != 0) && ($CONFIG_SOUND_ESSSOLO1 == 1 || $CONFIG_SOUND_ES1370 == 1 || $CONFIG_SOUND_ES1371 == 1 || $CONFIG_SOUND_SONICVIBES == 1)} then {write_tristate $cfg $autocfg CONFIG_INPUT_GAMEPORT $CONSTANT_Y [list $notmod] 2 }
	write_comment $cfg $autocfg "Misc devices"
	write_comment $cfg $autocfg "USB support"
	if {($CONFIG_PCI == 1 || $CONFIG_PCI == 2 || $CONFIG_PCI == 4)} then {write_tristate $cfg $autocfg CONFIG_USB $CONFIG_USB [list $CONFIG_PCI] 2 }
	global CONFIG_USB_DEBUG
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2)} then {write_tristate $cfg $autocfg CONFIG_USB_DEBUG $CONFIG_USB_DEBUG [list $notmod] 2 }
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2)} then {write_comment $cfg $autocfg "Miscellaneous USB options"}
	global CONFIG_USB_DEVICEFS
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2)} then {write_tristate $cfg $autocfg CONFIG_USB_DEVICEFS $CONFIG_USB_DEVICEFS [list $notmod] 2 }
	global CONFIG_USB_BANDWIDTH
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_EXPERIMENTAL == 1)} then {write_tristate $cfg $autocfg CONFIG_USB_BANDWIDTH $CONFIG_USB_BANDWIDTH [list $notmod] 2 }
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_EXPERIMENTAL != 1)} then {write_tristate $cfg $autocfg CONFIG_USB_BANDWIDTH $CONSTANT_N [list $notmod] 2 }
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2)} then {write_comment $cfg $autocfg "USB Host Controller Drivers"}
	global CONFIG_USB_EHCI_HCD
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {write_tristate $cfg $autocfg CONFIG_USB_EHCI_HCD $CONFIG_USB_EHCI_HCD [list $CONFIG_USB $CONFIG_EXPERIMENTAL] 2 }
	global CONFIG_USB_UHCI
	global CONFIG_USB_UHCI_ALT
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_UHCI_ALT != 1) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4)} then {write_tristate $cfg $autocfg CONFIG_USB_UHCI $CONFIG_USB_UHCI [list $CONFIG_USB] 2 }
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_UHCI != 1) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4)} then {write_tristate $cfg $autocfg CONFIG_USB_UHCI_ALT $CONFIG_USB_UHCI_ALT [list $CONFIG_USB] 2 }
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_UHCI == 1)} then {write_tristate $cfg $autocfg CONFIG_USB_UHCI_ALT $CONSTANT_N [list $notmod] 2 }
	global CONFIG_USB_OHCI
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4)} then {write_tristate $cfg $autocfg CONFIG_USB_OHCI $CONFIG_USB_OHCI [list $CONFIG_USB] 2 }
	global CONFIG_USB_SL811HS_ALT
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_ARM == 1 || $CONFIG_X86 == 1 && $CONFIG_X86_64 != 1) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {write_tristate $cfg $autocfg CONFIG_USB_SL811HS_ALT $CONFIG_USB_SL811HS_ALT [list $CONFIG_USB $CONFIG_EXPERIMENTAL] 2 }
	global CONFIG_USB_SL811HS
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_ARM == 1 || $CONFIG_X86 == 1 && $CONFIG_X86_64 != 1) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {write_tristate $cfg $autocfg CONFIG_USB_SL811HS $CONFIG_USB_SL811HS [list $CONFIG_USB $CONFIG_EXPERIMENTAL] 2 }
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2)} then {write_comment $cfg $autocfg "USB Device Class drivers"}
	global CONFIG_USB_AUDIO
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4) && ($CONFIG_SOUND == 1 || $CONFIG_SOUND == 2 || $CONFIG_SOUND == 4)} then {write_tristate $cfg $autocfg CONFIG_USB_AUDIO $CONFIG_USB_AUDIO [list $CONFIG_USB $CONFIG_SOUND] 2 }
	global CONFIG_USB_EMI26
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_AUDIO == 1 || $CONFIG_USB_AUDIO == 2 || $CONFIG_USB_AUDIO == 4)} then {write_tristate $cfg $autocfg CONFIG_USB_EMI26 $CONFIG_USB_EMI26 [list $CONFIG_USB_AUDIO] 2 }
	global CONFIG_USB_BLUETOOTH
	global CONFIG_BLUEZ
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_BLUEZ == 0) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4)} then {write_tristate $cfg $autocfg CONFIG_USB_BLUETOOTH $CONFIG_USB_BLUETOOTH [list $CONFIG_USB] 2 }
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_BLUEZ != 0)} then {write_comment $cfg $autocfg "  USB Bluetooth can only be used with disabled Bluetooth subsystem"}
	global CONFIG_USB_MIDI
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4) && ($CONFIG_SOUND == 1 || $CONFIG_SOUND == 2 || $CONFIG_SOUND == 4)} then {write_tristate $cfg $autocfg CONFIG_USB_MIDI $CONFIG_USB_MIDI [list $CONFIG_USB $CONFIG_SOUND] 2 }
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_SCSI == 0)} then {write_comment $cfg $autocfg "  SCSI support is needed for USB Storage"}
	global CONFIG_USB_STORAGE
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {write_tristate $cfg $autocfg CONFIG_USB_STORAGE $CONFIG_USB_STORAGE [list $CONFIG_USB $CONFIG_SCSI] 2 }
	global CONFIG_USB_STORAGE_DEBUG
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_STORAGE == 1 || $CONFIG_USB_STORAGE == 2 || $CONFIG_USB_STORAGE == 4)} then {write_tristate $cfg $autocfg CONFIG_USB_STORAGE_DEBUG $CONFIG_USB_STORAGE_DEBUG [list $CONFIG_USB_STORAGE] 1 }
	global CONFIG_USB_STORAGE_DATAFAB
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_STORAGE == 1 || $CONFIG_USB_STORAGE == 2 || $CONFIG_USB_STORAGE == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {write_tristate $cfg $autocfg CONFIG_USB_STORAGE_DATAFAB $CONFIG_USB_STORAGE_DATAFAB [list $CONFIG_USB_STORAGE $CONFIG_EXPERIMENTAL] 1 }
	global CONFIG_USB_STORAGE_FREECOM
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_STORAGE == 1 || $CONFIG_USB_STORAGE == 2 || $CONFIG_USB_STORAGE == 4)} then {write_tristate $cfg $autocfg CONFIG_USB_STORAGE_FREECOM $CONFIG_USB_STORAGE_FREECOM [list $CONFIG_USB_STORAGE] 1 }
	global CONFIG_USB_STORAGE_ISD200
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_STORAGE == 1 || $CONFIG_USB_STORAGE == 2 || $CONFIG_USB_STORAGE == 4) && ($CONFIG_IDE == 1 || $CONFIG_IDE == 2 || $CONFIG_IDE == 4)} then {write_tristate $cfg $autocfg CONFIG_USB_STORAGE_ISD200 $CONFIG_USB_STORAGE_ISD200 [list $CONFIG_USB_STORAGE $CONFIG_IDE] 1 }
	global CONFIG_USB_STORAGE_DPCM
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_STORAGE == 1 || $CONFIG_USB_STORAGE == 2 || $CONFIG_USB_STORAGE == 4)} then {write_tristate $cfg $autocfg CONFIG_USB_STORAGE_DPCM $CONFIG_USB_STORAGE_DPCM [list $CONFIG_USB_STORAGE] 1 }
	global CONFIG_USB_STORAGE_HP8200e
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_STORAGE == 1 || $CONFIG_USB_STORAGE == 2 || $CONFIG_USB_STORAGE == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {write_tristate $cfg $autocfg CONFIG_USB_STORAGE_HP8200e $CONFIG_USB_STORAGE_HP8200e [list $CONFIG_USB_STORAGE $CONFIG_EXPERIMENTAL] 1 }
	global CONFIG_USB_STORAGE_SDDR09
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_STORAGE == 1 || $CONFIG_USB_STORAGE == 2 || $CONFIG_USB_STORAGE == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {write_tristate $cfg $autocfg CONFIG_USB_STORAGE_SDDR09 $CONFIG_USB_STORAGE_SDDR09 [list $CONFIG_USB_STORAGE $CONFIG_EXPERIMENTAL] 1 }
	global CONFIG_USB_STORAGE_SDDR55
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_STORAGE == 1 || $CONFIG_USB_STORAGE == 2 || $CONFIG_USB_STORAGE == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {write_tristate $cfg $autocfg CONFIG_USB_STORAGE_SDDR55 $CONFIG_USB_STORAGE_SDDR55 [list $CONFIG_USB_STORAGE $CONFIG_EXPERIMENTAL] 1 }
	global CONFIG_USB_STORAGE_JUMPSHOT
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_STORAGE == 1 || $CONFIG_USB_STORAGE == 2 || $CONFIG_USB_STORAGE == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {write_tristate $cfg $autocfg CONFIG_USB_STORAGE_JUMPSHOT $CONFIG_USB_STORAGE_JUMPSHOT [list $CONFIG_USB_STORAGE $CONFIG_EXPERIMENTAL] 1 }
	global CONFIG_USB_ACM
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4)} then {write_tristate $cfg $autocfg CONFIG_USB_ACM $CONFIG_USB_ACM [list $CONFIG_USB] 2 }
	global CONFIG_USB_PRINTER
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4)} then {write_tristate $cfg $autocfg CONFIG_USB_PRINTER $CONFIG_USB_PRINTER [list $CONFIG_USB] 2 }
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2)} then {write_comment $cfg $autocfg "USB Human Interface Devices (HID)"}
	global CONFIG_USB_HID
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4)} then {write_tristate $cfg $autocfg CONFIG_USB_HID $CONFIG_USB_HID [list $CONFIG_USB] 2 }
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_INPUT == 0)} then {write_comment $cfg $autocfg "    Input core support is needed for USB HID input layer or HIDBP support"}
	global CONFIG_USB_HIDINPUT
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_INPUT == 1 || $CONFIG_INPUT == 2 || $CONFIG_INPUT == 4) && ($CONFIG_USB_HID == 1 || $CONFIG_USB_HID == 2 || $CONFIG_USB_HID == 4)} then {write_tristate $cfg $autocfg CONFIG_USB_HIDINPUT $CONFIG_USB_HIDINPUT [list $CONFIG_INPUT $CONFIG_USB_HID] 1 }
	global CONFIG_USB_HIDDEV
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_HID == 1 || $CONFIG_USB_HID == 2 || $CONFIG_USB_HID == 4)} then {write_tristate $cfg $autocfg CONFIG_USB_HIDDEV $CONFIG_USB_HIDDEV [list $CONFIG_USB_HID] 1 }
	global CONFIG_USB_KBD
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_HID != 1) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4) && ($CONFIG_INPUT == 1 || $CONFIG_INPUT == 2 || $CONFIG_INPUT == 4)} then {write_tristate $cfg $autocfg CONFIG_USB_KBD $CONFIG_USB_KBD [list $CONFIG_USB $CONFIG_INPUT] 2 }
	global CONFIG_USB_MOUSE
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_HID != 1) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4) && ($CONFIG_INPUT == 1 || $CONFIG_INPUT == 2 || $CONFIG_INPUT == 4)} then {write_tristate $cfg $autocfg CONFIG_USB_MOUSE $CONFIG_USB_MOUSE [list $CONFIG_USB $CONFIG_INPUT] 2 }
	global CONFIG_USB_AIPTEK
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4) && ($CONFIG_INPUT == 1 || $CONFIG_INPUT == 2 || $CONFIG_INPUT == 4)} then {write_tristate $cfg $autocfg CONFIG_USB_AIPTEK $CONFIG_USB_AIPTEK [list $CONFIG_USB $CONFIG_INPUT] 2 }
	global CONFIG_USB_WACOM
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4) && ($CONFIG_INPUT == 1 || $CONFIG_INPUT == 2 || $CONFIG_INPUT == 4)} then {write_tristate $cfg $autocfg CONFIG_USB_WACOM $CONFIG_USB_WACOM [list $CONFIG_USB $CONFIG_INPUT] 2 }
	global CONFIG_USB_KBTAB
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4) && ($CONFIG_INPUT == 1 || $CONFIG_INPUT == 2 || $CONFIG_INPUT == 4)} then {write_tristate $cfg $autocfg CONFIG_USB_KBTAB $CONFIG_USB_KBTAB [list $CONFIG_USB $CONFIG_INPUT] 2 }
	global CONFIG_USB_POWERMATE
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4) && ($CONFIG_INPUT == 1 || $CONFIG_INPUT == 2 || $CONFIG_INPUT == 4)} then {write_tristate $cfg $autocfg CONFIG_USB_POWERMATE $CONFIG_USB_POWERMATE [list $CONFIG_USB $CONFIG_INPUT] 2 }
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2)} then {write_comment $cfg $autocfg "USB Imaging devices"}
	global CONFIG_USB_DC2XX
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4)} then {write_tristate $cfg $autocfg CONFIG_USB_DC2XX $CONFIG_USB_DC2XX [list $CONFIG_USB] 2 }
	global CONFIG_USB_MDC800
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {write_tristate $cfg $autocfg CONFIG_USB_MDC800 $CONFIG_USB_MDC800 [list $CONFIG_USB $CONFIG_EXPERIMENTAL] 2 }
	global CONFIG_USB_SCANNER
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4)} then {write_tristate $cfg $autocfg CONFIG_USB_SCANNER $CONFIG_USB_SCANNER [list $CONFIG_USB] 2 }
	global CONFIG_USB_MICROTEK
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4)} then {write_tristate $cfg $autocfg CONFIG_USB_MICROTEK $CONFIG_USB_MICROTEK [list $CONFIG_USB $CONFIG_SCSI] 2 }
	global CONFIG_USB_HPUSBSCSI
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4) && ($CONFIG_SCSI == 1 || $CONFIG_SCSI == 2 || $CONFIG_SCSI == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {write_tristate $cfg $autocfg CONFIG_USB_HPUSBSCSI $CONFIG_USB_HPUSBSCSI [list $CONFIG_USB $CONFIG_SCSI $CONFIG_EXPERIMENTAL] 2 }
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2)} then {write_comment $cfg $autocfg "USB Multimedia devices"}
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_VIDEO_DEV == 0)} then {write_comment $cfg $autocfg "  Video4Linux support is needed for USB Multimedia device support"}
	global CONFIG_USB_IBMCAM
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_VIDEO_DEV != 0) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4) && ($CONFIG_VIDEO_DEV == 1 || $CONFIG_VIDEO_DEV == 2 || $CONFIG_VIDEO_DEV == 4)} then {write_tristate $cfg $autocfg CONFIG_USB_IBMCAM $CONFIG_USB_IBMCAM [list $CONFIG_USB $CONFIG_VIDEO_DEV] 2 }
	global CONFIG_USB_KONICAWC
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_VIDEO_DEV != 0) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4) && ($CONFIG_VIDEO_DEV == 1 || $CONFIG_VIDEO_DEV == 2 || $CONFIG_VIDEO_DEV == 4)} then {write_tristate $cfg $autocfg CONFIG_USB_KONICAWC $CONFIG_USB_KONICAWC [list $CONFIG_USB $CONFIG_VIDEO_DEV] 2 }
	global CONFIG_USB_OV511
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_VIDEO_DEV != 0) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4) && ($CONFIG_VIDEO_DEV == 1 || $CONFIG_VIDEO_DEV == 2 || $CONFIG_VIDEO_DEV == 4)} then {write_tristate $cfg $autocfg CONFIG_USB_OV511 $CONFIG_USB_OV511 [list $CONFIG_USB $CONFIG_VIDEO_DEV] 2 }
	global CONFIG_USB_PWC
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_VIDEO_DEV != 0) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4) && ($CONFIG_VIDEO_DEV == 1 || $CONFIG_VIDEO_DEV == 2 || $CONFIG_VIDEO_DEV == 4)} then {write_tristate $cfg $autocfg CONFIG_USB_PWC $CONFIG_USB_PWC [list $CONFIG_USB $CONFIG_VIDEO_DEV] 2 }
	global CONFIG_USB_SE401
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_VIDEO_DEV != 0) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4) && ($CONFIG_VIDEO_DEV == 1 || $CONFIG_VIDEO_DEV == 2 || $CONFIG_VIDEO_DEV == 4)} then {write_tristate $cfg $autocfg CONFIG_USB_SE401 $CONFIG_USB_SE401 [list $CONFIG_USB $CONFIG_VIDEO_DEV] 2 }
	global CONFIG_USB_STV680
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_VIDEO_DEV != 0) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4) && ($CONFIG_VIDEO_DEV == 1 || $CONFIG_VIDEO_DEV == 2 || $CONFIG_VIDEO_DEV == 4)} then {write_tristate $cfg $autocfg CONFIG_USB_STV680 $CONFIG_USB_STV680 [list $CONFIG_USB $CONFIG_VIDEO_DEV] 2 }
	global CONFIG_USB_W9968CF
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_VIDEO_DEV != 0) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4) && ($CONFIG_VIDEO_DEV == 1 || $CONFIG_VIDEO_DEV == 2 || $CONFIG_VIDEO_DEV == 4) && ($CONFIG_I2C == 1 || $CONFIG_I2C == 2 || $CONFIG_I2C == 4)} then {write_tristate $cfg $autocfg CONFIG_USB_W9968CF $CONFIG_USB_W9968CF [list $CONFIG_USB $CONFIG_VIDEO_DEV $CONFIG_I2C] 2 }
	global CONFIG_USB_VICAM
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_VIDEO_DEV != 0) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4) && ($CONFIG_VIDEO_DEV == 1 || $CONFIG_VIDEO_DEV == 2 || $CONFIG_VIDEO_DEV == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {write_tristate $cfg $autocfg CONFIG_USB_VICAM $CONFIG_USB_VICAM [list $CONFIG_USB $CONFIG_VIDEO_DEV $CONFIG_EXPERIMENTAL] 2 }
	global CONFIG_USB_DSBR
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_VIDEO_DEV != 0) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4) && ($CONFIG_VIDEO_DEV == 1 || $CONFIG_VIDEO_DEV == 2 || $CONFIG_VIDEO_DEV == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {write_tristate $cfg $autocfg CONFIG_USB_DSBR $CONFIG_USB_DSBR [list $CONFIG_USB $CONFIG_VIDEO_DEV $CONFIG_EXPERIMENTAL] 2 }
	global CONFIG_USB_DABUSB
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_VIDEO_DEV != 0) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4)} then {write_tristate $cfg $autocfg CONFIG_USB_DABUSB $CONFIG_USB_DABUSB [list $CONFIG_USB] 2 }
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2)} then {write_comment $cfg $autocfg "USB Network adaptors"}
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_NET == 0)} then {write_comment $cfg $autocfg "  Networking support is needed for USB Networking device support"}
	global CONFIG_USB_PEGASUS
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_NET != 0) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4) && ($CONFIG_NET == 1 || $CONFIG_NET == 2 || $CONFIG_NET == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {write_tristate $cfg $autocfg CONFIG_USB_PEGASUS $CONFIG_USB_PEGASUS [list $CONFIG_USB $CONFIG_NET $CONFIG_EXPERIMENTAL] 2 }
	global CONFIG_USB_RTL8150
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_NET != 0) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4) && ($CONFIG_NET == 1 || $CONFIG_NET == 2 || $CONFIG_NET == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {write_tristate $cfg $autocfg CONFIG_USB_RTL8150 $CONFIG_USB_RTL8150 [list $CONFIG_USB $CONFIG_NET $CONFIG_EXPERIMENTAL] 2 }
	global CONFIG_USB_KAWETH
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_NET != 0) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4) && ($CONFIG_NET == 1 || $CONFIG_NET == 2 || $CONFIG_NET == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {write_tristate $cfg $autocfg CONFIG_USB_KAWETH $CONFIG_USB_KAWETH [list $CONFIG_USB $CONFIG_NET $CONFIG_EXPERIMENTAL] 2 }
	global CONFIG_USB_CATC
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_NET != 0) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4) && ($CONFIG_NET == 1 || $CONFIG_NET == 2 || $CONFIG_NET == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {write_tristate $cfg $autocfg CONFIG_USB_CATC $CONFIG_USB_CATC [list $CONFIG_USB $CONFIG_NET $CONFIG_EXPERIMENTAL] 2 }
	global CONFIG_USB_AX8817X
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_NET != 0) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4) && ($CONFIG_NET == 1 || $CONFIG_NET == 2 || $CONFIG_NET == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {write_tristate $cfg $autocfg CONFIG_USB_AX8817X $CONFIG_USB_AX8817X [list $CONFIG_USB $CONFIG_NET $CONFIG_EXPERIMENTAL] 2 }
	global CONFIG_USB_CDCETHER
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_NET != 0) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4) && ($CONFIG_NET == 1 || $CONFIG_NET == 2 || $CONFIG_NET == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {write_tristate $cfg $autocfg CONFIG_USB_CDCETHER $CONFIG_USB_CDCETHER [list $CONFIG_USB $CONFIG_NET $CONFIG_EXPERIMENTAL] 2 }
	global CONFIG_USB_USBNET
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_NET != 0) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4) && ($CONFIG_NET == 1 || $CONFIG_NET == 2 || $CONFIG_NET == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {write_tristate $cfg $autocfg CONFIG_USB_USBNET $CONFIG_USB_USBNET [list $CONFIG_USB $CONFIG_NET $CONFIG_EXPERIMENTAL] 2 }
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2)} then {write_comment $cfg $autocfg "USB port drivers"}
	global CONFIG_USB_USS720
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4) && ($CONFIG_PARPORT == 1 || $CONFIG_PARPORT == 2 || $CONFIG_PARPORT == 4)} then {write_tristate $cfg $autocfg CONFIG_USB_USS720 $CONFIG_USB_USS720 [list $CONFIG_USB $CONFIG_PARPORT] 2 }
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2)} then {write_comment $cfg $autocfg "USB Serial Converter support"}
	global CONFIG_USB_SERIAL
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4)} then {write_tristate $cfg $autocfg CONFIG_USB_SERIAL $CONFIG_USB_SERIAL [list $CONFIG_USB] 2 }
	global CONFIG_USB_SERIAL_DEBUG
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_SERIAL != 0) && ($CONFIG_USB_SERIAL == 1 || $CONFIG_USB_SERIAL == 4)} then {write_tristate $cfg $autocfg CONFIG_USB_SERIAL_DEBUG $CONFIG_USB_SERIAL_DEBUG [list $CONFIG_USB_SERIAL] 2 }
	global CONFIG_USB_SERIAL_GENERIC
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_SERIAL != 0) && ($CONFIG_USB_SERIAL == 1 || $CONFIG_USB_SERIAL == 2 || $CONFIG_USB_SERIAL == 4)} then {write_tristate $cfg $autocfg CONFIG_USB_SERIAL_GENERIC $CONFIG_USB_SERIAL_GENERIC [list $CONFIG_USB_SERIAL] 1 }
	global CONFIG_USB_SERIAL_BELKIN
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_SERIAL != 0) && ($CONFIG_USB_SERIAL == 1 || $CONFIG_USB_SERIAL == 2 || $CONFIG_USB_SERIAL == 4)} then {write_tristate $cfg $autocfg CONFIG_USB_SERIAL_BELKIN $CONFIG_USB_SERIAL_BELKIN [list $CONFIG_USB_SERIAL] 2 }
	global CONFIG_USB_SERIAL_WHITEHEAT
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_SERIAL != 0) && ($CONFIG_USB_SERIAL == 1 || $CONFIG_USB_SERIAL == 2 || $CONFIG_USB_SERIAL == 4)} then {write_tristate $cfg $autocfg CONFIG_USB_SERIAL_WHITEHEAT $CONFIG_USB_SERIAL_WHITEHEAT [list $CONFIG_USB_SERIAL] 2 }
	global CONFIG_USB_SERIAL_DIGI_ACCELEPORT
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_SERIAL != 0) && ($CONFIG_USB_SERIAL == 1 || $CONFIG_USB_SERIAL == 2 || $CONFIG_USB_SERIAL == 4)} then {write_tristate $cfg $autocfg CONFIG_USB_SERIAL_DIGI_ACCELEPORT $CONFIG_USB_SERIAL_DIGI_ACCELEPORT [list $CONFIG_USB_SERIAL] 2 }
	global CONFIG_USB_SERIAL_EMPEG
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_SERIAL != 0) && ($CONFIG_USB_SERIAL == 1 || $CONFIG_USB_SERIAL == 2 || $CONFIG_USB_SERIAL == 4)} then {write_tristate $cfg $autocfg CONFIG_USB_SERIAL_EMPEG $CONFIG_USB_SERIAL_EMPEG [list $CONFIG_USB_SERIAL] 2 }
	global CONFIG_USB_SERIAL_FTDI_SIO
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_SERIAL != 0) && ($CONFIG_USB_SERIAL == 1 || $CONFIG_USB_SERIAL == 2 || $CONFIG_USB_SERIAL == 4)} then {write_tristate $cfg $autocfg CONFIG_USB_SERIAL_FTDI_SIO $CONFIG_USB_SERIAL_FTDI_SIO [list $CONFIG_USB_SERIAL] 2 }
	global CONFIG_USB_SERIAL_VISOR
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_SERIAL != 0) && ($CONFIG_USB_SERIAL == 1 || $CONFIG_USB_SERIAL == 2 || $CONFIG_USB_SERIAL == 4)} then {write_tristate $cfg $autocfg CONFIG_USB_SERIAL_VISOR $CONFIG_USB_SERIAL_VISOR [list $CONFIG_USB_SERIAL] 2 }
	global CONFIG_USB_SERIAL_IPAQ
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_SERIAL != 0) && ($CONFIG_USB_SERIAL == 1 || $CONFIG_USB_SERIAL == 2 || $CONFIG_USB_SERIAL == 4)} then {write_tristate $cfg $autocfg CONFIG_USB_SERIAL_IPAQ $CONFIG_USB_SERIAL_IPAQ [list $CONFIG_USB_SERIAL] 2 }
	global CONFIG_USB_SERIAL_IR
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_SERIAL != 0) && ($CONFIG_USB_SERIAL == 1 || $CONFIG_USB_SERIAL == 2 || $CONFIG_USB_SERIAL == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {write_tristate $cfg $autocfg CONFIG_USB_SERIAL_IR $CONFIG_USB_SERIAL_IR [list $CONFIG_USB_SERIAL $CONFIG_EXPERIMENTAL] 2 }
	global CONFIG_USB_SERIAL_EDGEPORT
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_SERIAL != 0) && ($CONFIG_USB_SERIAL == 1 || $CONFIG_USB_SERIAL == 2 || $CONFIG_USB_SERIAL == 4)} then {write_tristate $cfg $autocfg CONFIG_USB_SERIAL_EDGEPORT $CONFIG_USB_SERIAL_EDGEPORT [list $CONFIG_USB_SERIAL] 2 }
	global CONFIG_USB_SERIAL_EDGEPORT_TI
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_SERIAL != 0) && ($CONFIG_USB_SERIAL == 1 || $CONFIG_USB_SERIAL == 2 || $CONFIG_USB_SERIAL == 4)} then {write_tristate $cfg $autocfg CONFIG_USB_SERIAL_EDGEPORT_TI $CONFIG_USB_SERIAL_EDGEPORT_TI [list $CONFIG_USB_SERIAL] 2 }
	global CONFIG_USB_SERIAL_KEYSPAN_PDA
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_SERIAL != 0) && ($CONFIG_USB_SERIAL == 1 || $CONFIG_USB_SERIAL == 2 || $CONFIG_USB_SERIAL == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {write_tristate $cfg $autocfg CONFIG_USB_SERIAL_KEYSPAN_PDA $CONFIG_USB_SERIAL_KEYSPAN_PDA [list $CONFIG_USB_SERIAL $CONFIG_EXPERIMENTAL] 2 }
	global CONFIG_USB_SERIAL_KEYSPAN
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_SERIAL != 0) && ($CONFIG_USB_SERIAL == 1 || $CONFIG_USB_SERIAL == 2 || $CONFIG_USB_SERIAL == 4)} then {write_tristate $cfg $autocfg CONFIG_USB_SERIAL_KEYSPAN $CONFIG_USB_SERIAL_KEYSPAN [list $CONFIG_USB_SERIAL] 2 }
	global CONFIG_USB_SERIAL_KEYSPAN_USA28
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_SERIAL != 0) && ($CONFIG_USB_SERIAL_KEYSPAN != 0)} then {write_tristate $cfg $autocfg CONFIG_USB_SERIAL_KEYSPAN_USA28 $CONFIG_USB_SERIAL_KEYSPAN_USA28 [list $notmod] 2 }
	global CONFIG_USB_SERIAL_KEYSPAN_USA28X
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_SERIAL != 0) && ($CONFIG_USB_SERIAL_KEYSPAN != 0)} then {write_tristate $cfg $autocfg CONFIG_USB_SERIAL_KEYSPAN_USA28X $CONFIG_USB_SERIAL_KEYSPAN_USA28X [list $notmod] 2 }
	global CONFIG_USB_SERIAL_KEYSPAN_USA28XA
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_SERIAL != 0) && ($CONFIG_USB_SERIAL_KEYSPAN != 0)} then {write_tristate $cfg $autocfg CONFIG_USB_SERIAL_KEYSPAN_USA28XA $CONFIG_USB_SERIAL_KEYSPAN_USA28XA [list $notmod] 2 }
	global CONFIG_USB_SERIAL_KEYSPAN_USA28XB
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_SERIAL != 0) && ($CONFIG_USB_SERIAL_KEYSPAN != 0)} then {write_tristate $cfg $autocfg CONFIG_USB_SERIAL_KEYSPAN_USA28XB $CONFIG_USB_SERIAL_KEYSPAN_USA28XB [list $notmod] 2 }
	global CONFIG_USB_SERIAL_KEYSPAN_USA19
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_SERIAL != 0) && ($CONFIG_USB_SERIAL_KEYSPAN != 0)} then {write_tristate $cfg $autocfg CONFIG_USB_SERIAL_KEYSPAN_USA19 $CONFIG_USB_SERIAL_KEYSPAN_USA19 [list $notmod] 2 }
	global CONFIG_USB_SERIAL_KEYSPAN_USA18X
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_SERIAL != 0) && ($CONFIG_USB_SERIAL_KEYSPAN != 0)} then {write_tristate $cfg $autocfg CONFIG_USB_SERIAL_KEYSPAN_USA18X $CONFIG_USB_SERIAL_KEYSPAN_USA18X [list $notmod] 2 }
	global CONFIG_USB_SERIAL_KEYSPAN_USA19W
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_SERIAL != 0) && ($CONFIG_USB_SERIAL_KEYSPAN != 0)} then {write_tristate $cfg $autocfg CONFIG_USB_SERIAL_KEYSPAN_USA19W $CONFIG_USB_SERIAL_KEYSPAN_USA19W [list $notmod] 2 }
	global CONFIG_USB_SERIAL_KEYSPAN_USA19QW
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_SERIAL != 0) && ($CONFIG_USB_SERIAL_KEYSPAN != 0)} then {write_tristate $cfg $autocfg CONFIG_USB_SERIAL_KEYSPAN_USA19QW $CONFIG_USB_SERIAL_KEYSPAN_USA19QW [list $notmod] 2 }
	global CONFIG_USB_SERIAL_KEYSPAN_USA19QI
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_SERIAL != 0) && ($CONFIG_USB_SERIAL_KEYSPAN != 0)} then {write_tristate $cfg $autocfg CONFIG_USB_SERIAL_KEYSPAN_USA19QI $CONFIG_USB_SERIAL_KEYSPAN_USA19QI [list $notmod] 2 }
	global CONFIG_USB_SERIAL_KEYSPAN_MPR
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_SERIAL != 0) && ($CONFIG_USB_SERIAL_KEYSPAN != 0)} then {write_tristate $cfg $autocfg CONFIG_USB_SERIAL_KEYSPAN_MPR $CONFIG_USB_SERIAL_KEYSPAN_MPR [list $notmod] 2 }
	global CONFIG_USB_SERIAL_KEYSPAN_USA49W
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_SERIAL != 0) && ($CONFIG_USB_SERIAL_KEYSPAN != 0)} then {write_tristate $cfg $autocfg CONFIG_USB_SERIAL_KEYSPAN_USA49W $CONFIG_USB_SERIAL_KEYSPAN_USA49W [list $notmod] 2 }
	global CONFIG_USB_SERIAL_KEYSPAN_USA49WLC
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_SERIAL != 0) && ($CONFIG_USB_SERIAL_KEYSPAN != 0)} then {write_tristate $cfg $autocfg CONFIG_USB_SERIAL_KEYSPAN_USA49WLC $CONFIG_USB_SERIAL_KEYSPAN_USA49WLC [list $notmod] 2 }
	global CONFIG_USB_SERIAL_MCT_U232
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_SERIAL != 0) && ($CONFIG_USB_SERIAL == 1 || $CONFIG_USB_SERIAL == 2 || $CONFIG_USB_SERIAL == 4)} then {write_tristate $cfg $autocfg CONFIG_USB_SERIAL_MCT_U232 $CONFIG_USB_SERIAL_MCT_U232 [list $CONFIG_USB_SERIAL] 2 }
	global CONFIG_USB_SERIAL_KLSI
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_SERIAL != 0) && ($CONFIG_USB_SERIAL == 1 || $CONFIG_USB_SERIAL == 2 || $CONFIG_USB_SERIAL == 4)} then {write_tristate $cfg $autocfg CONFIG_USB_SERIAL_KLSI $CONFIG_USB_SERIAL_KLSI [list $CONFIG_USB_SERIAL] 2 }
	global CONFIG_USB_SERIAL_KOBIL_SCT
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_SERIAL != 0) && ($CONFIG_USB_SERIAL == 1 || $CONFIG_USB_SERIAL == 2 || $CONFIG_USB_SERIAL == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {write_tristate $cfg $autocfg CONFIG_USB_SERIAL_KOBIL_SCT $CONFIG_USB_SERIAL_KOBIL_SCT [list $CONFIG_USB_SERIAL $CONFIG_EXPERIMENTAL] 2 }
	global CONFIG_USB_SERIAL_PL2303
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_SERIAL != 0) && ($CONFIG_USB_SERIAL == 1 || $CONFIG_USB_SERIAL == 2 || $CONFIG_USB_SERIAL == 4)} then {write_tristate $cfg $autocfg CONFIG_USB_SERIAL_PL2303 $CONFIG_USB_SERIAL_PL2303 [list $CONFIG_USB_SERIAL] 2 }
	global CONFIG_USB_SERIAL_CYBERJACK
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_SERIAL != 0) && ($CONFIG_USB_SERIAL == 1 || $CONFIG_USB_SERIAL == 2 || $CONFIG_USB_SERIAL == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {write_tristate $cfg $autocfg CONFIG_USB_SERIAL_CYBERJACK $CONFIG_USB_SERIAL_CYBERJACK [list $CONFIG_USB_SERIAL $CONFIG_EXPERIMENTAL] 2 }
	global CONFIG_USB_SERIAL_XIRCOM
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_SERIAL != 0) && ($CONFIG_USB_SERIAL == 1 || $CONFIG_USB_SERIAL == 2 || $CONFIG_USB_SERIAL == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {write_tristate $cfg $autocfg CONFIG_USB_SERIAL_XIRCOM $CONFIG_USB_SERIAL_XIRCOM [list $CONFIG_USB_SERIAL $CONFIG_EXPERIMENTAL] 2 }
	global CONFIG_USB_SERIAL_OMNINET
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB_SERIAL != 0) && ($CONFIG_USB_SERIAL == 1 || $CONFIG_USB_SERIAL == 2 || $CONFIG_USB_SERIAL == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {write_tristate $cfg $autocfg CONFIG_USB_SERIAL_OMNINET $CONFIG_USB_SERIAL_OMNINET [list $CONFIG_USB_SERIAL $CONFIG_EXPERIMENTAL] 2 }
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2)} then {write_comment $cfg $autocfg "USB Miscellaneous drivers"}
	global CONFIG_USB_RIO500
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {write_tristate $cfg $autocfg CONFIG_USB_RIO500 $CONFIG_USB_RIO500 [list $CONFIG_USB $CONFIG_EXPERIMENTAL] 2 }
	global CONFIG_USB_AUERSWALD
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4)} then {write_tristate $cfg $autocfg CONFIG_USB_AUERSWALD $CONFIG_USB_AUERSWALD [list $CONFIG_USB] 2 }
	global CONFIG_USB_TIGL
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4)} then {write_tristate $cfg $autocfg CONFIG_USB_TIGL $CONFIG_USB_TIGL [list $CONFIG_USB] 2 }
	global CONFIG_USB_BRLVGER
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4) && ($CONFIG_EXPERIMENTAL == 1 || $CONFIG_EXPERIMENTAL == 2 || $CONFIG_EXPERIMENTAL == 4)} then {write_tristate $cfg $autocfg CONFIG_USB_BRLVGER $CONFIG_USB_BRLVGER [list $CONFIG_USB $CONFIG_EXPERIMENTAL] 2 }
	global CONFIG_USB_LCD
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4)} then {write_tristate $cfg $autocfg CONFIG_USB_LCD $CONFIG_USB_LCD [list $CONFIG_USB] 2 }
	global CONFIG_USB_SPEEDTOUCH
	if {($CONFIG_USB == 1 || $CONFIG_USB == 2) && ($CONFIG_ATM == 1 || $CONFIG_ATM == 2) && ($CONFIG_ATM == 1 || $CONFIG_ATM == 2 || $CONFIG_ATM == 4) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4)} then {write_tristate $cfg $autocfg CONFIG_USB_SPEEDTOUCH $CONFIG_USB_SPEEDTOUCH [list $CONFIG_ATM $CONFIG_USB] 2 }
	write_comment $cfg $autocfg "Support for USB gadgets"
	global CONFIG_USB_GADGET
	write_tristate $cfg $autocfg CONFIG_USB_GADGET $CONFIG_USB_GADGET [list $notmod] 2
	if {($CONFIG_USB_GADGET == 1)} then {write_comment $cfg $autocfg "USB Peripheral Controller Drivers"}
	global CONFIG_USB_GADGET_CONTROLLER
	if {($CONFIG_USB_GADGET == 1)} then {write_tristate $cfg $autocfg CONFIG_USB_GADGET_CONTROLLER $CONSTANT_N [list $notmod] 2 }
	global CONFIG_USB_NET2280
	if {($CONFIG_USB_GADGET == 1) && ($CONFIG_PCI == 1)} then {write_tristate $cfg $autocfg CONFIG_USB_NET2280 $CONFIG_USB_NET2280 [list $notmod] 2 }
	if {($CONFIG_USB_GADGET == 1) && ($CONFIG_PCI == 1)} then {write_tristate $cfg $autocfg CONFIG_USB_GADGET_CONTROLLER $CONFIG_USB_NET2280 [list $notmod] 2 }
	if {($CONFIG_USB_GADGET == 1) && ($CONFIG_USB_GADGET_CONTROLLER == 1 || $CONFIG_USB_GADGET_CONTROLLER == 2)} then {write_comment $cfg $autocfg "USB Gadget Drivers"}
	global CONFIG_USB_ZERO
	if {($CONFIG_USB_GADGET == 1) && ($CONFIG_USB_GADGET_CONTROLLER == 1 || $CONFIG_USB_GADGET_CONTROLLER == 2) && ($CONFIG_USB_GADGET_CONTROLLER == 1 || $CONFIG_USB_GADGET_CONTROLLER == 2 || $CONFIG_USB_GADGET_CONTROLLER == 4)} then {write_tristate $cfg $autocfg CONFIG_USB_ZERO $CONFIG_USB_ZERO [list $CONFIG_USB_GADGET_CONTROLLER] 2 }
	global CONFIG_USB_ZERO_NET2280
	if {($CONFIG_USB_GADGET == 1) && ($CONFIG_USB_GADGET_CONTROLLER == 1 || $CONFIG_USB_GADGET_CONTROLLER == 2) && ($CONFIG_USB_ZERO == 1 || $CONFIG_USB_ZERO == 2) && ($CONFIG_USB_NET2280 == 1 || $CONFIG_USB_NET2280 == 2)} then {write_tristate $cfg $autocfg CONFIG_USB_ZERO_NET2280 $CONSTANT_Y [list $notmod] 2 }
	global CONFIG_USB_ZERO_PXA2XX
	if {($CONFIG_USB_GADGET == 1) && ($CONFIG_USB_GADGET_CONTROLLER == 1 || $CONFIG_USB_GADGET_CONTROLLER == 2) && ($CONFIG_USB_ZERO == 1 || $CONFIG_USB_ZERO == 2) && ($CONFIG_USB_NET2280 != 1 && $CONFIG_USB_NET2280 != 2)} then {write_tristate $cfg $autocfg CONFIG_USB_ZERO_PXA2XX $CONSTANT_Y [list $notmod] 2 }
	global CONFIG_USB_ZERO_GOKU
	if {($CONFIG_USB_GADGET == 1) && ($CONFIG_USB_GADGET_CONTROLLER == 1 || $CONFIG_USB_GADGET_CONTROLLER == 2) && ($CONFIG_USB_ZERO == 1 || $CONFIG_USB_ZERO == 2) && ($CONFIG_USB_NET2280 == 1 && $CONFIG_USB_NET2280 == 2)} then {write_tristate $cfg $autocfg CONFIG_USB_ZERO_GOKU $CONSTANT_Y [list $notmod] 2 }
	global CONFIG_USB_ETH
	if {($CONFIG_USB_GADGET == 1) && ($CONFIG_USB_GADGET_CONTROLLER == 1 || $CONFIG_USB_GADGET_CONTROLLER == 2) && ($CONFIG_USB_GADGET_CONTROLLER == 1 || $CONFIG_USB_GADGET_CONTROLLER == 2 || $CONFIG_USB_GADGET_CONTROLLER == 4) && ($CONFIG_NET == 1 || $CONFIG_NET == 2 || $CONFIG_NET == 4)} then {write_tristate $cfg $autocfg CONFIG_USB_ETH $CONFIG_USB_ETH [list $CONFIG_USB_GADGET_CONTROLLER $CONFIG_NET] 2 }
	global CONFIG_USB_ETH_NET2280
	if {($CONFIG_USB_GADGET == 1) && ($CONFIG_USB_GADGET_CONTROLLER == 1 || $CONFIG_USB_GADGET_CONTROLLER == 2) && ($CONFIG_USB_ETH == 1 || $CONFIG_USB_ETH == 2) && ($CONFIG_USB_NET2280 == 1 || $CONFIG_USB_NET2280 == 2)} then {write_tristate $cfg $autocfg CONFIG_USB_ETH_NET2280 $CONSTANT_Y [list $notmod] 2 }
	global CONFIG_USB_ETH_PXA2XX
	if {($CONFIG_USB_GADGET == 1) && ($CONFIG_USB_GADGET_CONTROLLER == 1 || $CONFIG_USB_GADGET_CONTROLLER == 2) && ($CONFIG_USB_ETH == 1 || $CONFIG_USB_ETH == 2) && ($CONFIG_USB_NET2280 != 1 && $CONFIG_USB_NET2280 != 2)} then {write_tristate $cfg $autocfg CONFIG_USB_ETH_PXA2XX $CONSTANT_Y [list $notmod] 2 }
	global CONFIG_USB_ETH_GOKU
	if {($CONFIG_USB_GADGET == 1) && ($CONFIG_USB_GADGET_CONTROLLER == 1 || $CONFIG_USB_GADGET_CONTROLLER == 2) && ($CONFIG_USB_ETH == 1 || $CONFIG_USB_ETH == 2) && ($CONFIG_USB_NET2280 == 1 && $CONFIG_USB_NET2280 == 2)} then {write_tristate $cfg $autocfg CONFIG_USB_ETH_GOKU $CONSTANT_Y [list $notmod] 2 }
	if {($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_NET != 0)} then {write_comment $cfg $autocfg "Bluetooth support"}
	if {($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_NET != 0) && ($CONFIG_NET == 1 || $CONFIG_NET == 2 || $CONFIG_NET == 4)} then {write_tristate $cfg $autocfg CONFIG_BLUEZ $CONFIG_BLUEZ [list $CONFIG_NET] 2 }
	global CONFIG_BLUEZ_L2CAP
	if {($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_NET != 0) && ($CONFIG_BLUEZ != 0) && ($CONFIG_BLUEZ == 1 || $CONFIG_BLUEZ == 2 || $CONFIG_BLUEZ == 4)} then {write_tristate $cfg $autocfg CONFIG_BLUEZ_L2CAP $CONFIG_BLUEZ_L2CAP [list $CONFIG_BLUEZ] 2 }
	global CONFIG_BLUEZ_SCO
	if {($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_NET != 0) && ($CONFIG_BLUEZ != 0) && ($CONFIG_BLUEZ == 1 || $CONFIG_BLUEZ == 2 || $CONFIG_BLUEZ == 4)} then {write_tristate $cfg $autocfg CONFIG_BLUEZ_SCO $CONFIG_BLUEZ_SCO [list $CONFIG_BLUEZ] 2 }
	global CONFIG_BLUEZ_RFCOMM
	if {($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_NET != 0) && ($CONFIG_BLUEZ != 0) && ($CONFIG_BLUEZ_L2CAP == 1 || $CONFIG_BLUEZ_L2CAP == 2 || $CONFIG_BLUEZ_L2CAP == 4)} then {write_tristate $cfg $autocfg CONFIG_BLUEZ_RFCOMM $CONFIG_BLUEZ_RFCOMM [list $CONFIG_BLUEZ_L2CAP] 2 }
	global CONFIG_BLUEZ_RFCOMM_TTY
	if {($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_NET != 0) && ($CONFIG_BLUEZ != 0) && ($CONFIG_BLUEZ_RFCOMM != 0)} then {write_tristate $cfg $autocfg CONFIG_BLUEZ_RFCOMM_TTY $CONFIG_BLUEZ_RFCOMM_TTY [list $notmod] 2 }
	global CONFIG_BLUEZ_BNEP
	if {($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_NET != 0) && ($CONFIG_BLUEZ != 0) && ($CONFIG_BLUEZ_L2CAP == 1 || $CONFIG_BLUEZ_L2CAP == 2 || $CONFIG_BLUEZ_L2CAP == 4)} then {write_tristate $cfg $autocfg CONFIG_BLUEZ_BNEP $CONFIG_BLUEZ_BNEP [list $CONFIG_BLUEZ_L2CAP] 2 }
	global CONFIG_BLUEZ_BNEP_MC_FILTER
	if {($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_NET != 0) && ($CONFIG_BLUEZ != 0) && ($CONFIG_BLUEZ_BNEP != 0)} then {write_tristate $cfg $autocfg CONFIG_BLUEZ_BNEP_MC_FILTER $CONFIG_BLUEZ_BNEP_MC_FILTER [list $notmod] 2 }
	global CONFIG_BLUEZ_BNEP_PROTO_FILTER
	if {($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_NET != 0) && ($CONFIG_BLUEZ != 0) && ($CONFIG_BLUEZ_BNEP != 0)} then {write_tristate $cfg $autocfg CONFIG_BLUEZ_BNEP_PROTO_FILTER $CONFIG_BLUEZ_BNEP_PROTO_FILTER [list $notmod] 2 }
	global CONFIG_BLUEZ_CMTP
	if {($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_NET != 0) && ($CONFIG_BLUEZ != 0) && ($CONFIG_ISDN == 1 || $CONFIG_ISDN == 2) && ($CONFIG_ISDN_CAPI == 1 || $CONFIG_ISDN_CAPI == 2 || $CONFIG_ISDN_CAPI == 4) && ($CONFIG_BLUEZ_L2CAP == 1 || $CONFIG_BLUEZ_L2CAP == 2 || $CONFIG_BLUEZ_L2CAP == 4)} then {write_tristate $cfg $autocfg CONFIG_BLUEZ_CMTP $CONFIG_BLUEZ_CMTP [list $CONFIG_ISDN_CAPI $CONFIG_BLUEZ_L2CAP] 2 }
	if {($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_NET != 0) && ($CONFIG_BLUEZ != 0)} then {write_comment $cfg $autocfg "Bluetooth device drivers"}
	global CONFIG_BLUEZ_HCIUSB
	if {($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_NET != 0) && ($CONFIG_BLUEZ != 0) && ($CONFIG_BLUEZ == 1 || $CONFIG_BLUEZ == 2 || $CONFIG_BLUEZ == 4) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4)} then {write_tristate $cfg $autocfg CONFIG_BLUEZ_HCIUSB $CONFIG_BLUEZ_HCIUSB [list $CONFIG_BLUEZ $CONFIG_USB] 2 }
	global CONFIG_BLUEZ_USB_SCO
	if {($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_NET != 0) && ($CONFIG_BLUEZ != 0) && ($CONFIG_BLUEZ_HCIUSB != 0)} then {write_tristate $cfg $autocfg CONFIG_BLUEZ_USB_SCO $CONFIG_BLUEZ_USB_SCO [list $notmod] 2 }
	global CONFIG_BLUEZ_HCIUART
	if {($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_NET != 0) && ($CONFIG_BLUEZ != 0) && ($CONFIG_BLUEZ == 1 || $CONFIG_BLUEZ == 2 || $CONFIG_BLUEZ == 4)} then {write_tristate $cfg $autocfg CONFIG_BLUEZ_HCIUART $CONFIG_BLUEZ_HCIUART [list $CONFIG_BLUEZ] 2 }
	global CONFIG_BLUEZ_HCIUART_H4
	if {($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_NET != 0) && ($CONFIG_BLUEZ != 0) && ($CONFIG_BLUEZ_HCIUART != 0)} then {write_tristate $cfg $autocfg CONFIG_BLUEZ_HCIUART_H4 $CONFIG_BLUEZ_HCIUART_H4 [list $notmod] 2 }
	global CONFIG_BLUEZ_HCIUART_BCSP
	if {($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_NET != 0) && ($CONFIG_BLUEZ != 0) && ($CONFIG_BLUEZ_HCIUART != 0)} then {write_tristate $cfg $autocfg CONFIG_BLUEZ_HCIUART_BCSP $CONFIG_BLUEZ_HCIUART_BCSP [list $notmod] 2 }
	global CONFIG_BLUEZ_HCIUART_BCSP_TXCRC
	if {($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_NET != 0) && ($CONFIG_BLUEZ != 0) && ($CONFIG_BLUEZ_HCIUART != 0) && ($CONFIG_BLUEZ_HCIUART_BCSP == 1 || $CONFIG_BLUEZ_HCIUART_BCSP == 4)} then {write_tristate $cfg $autocfg CONFIG_BLUEZ_HCIUART_BCSP_TXCRC $CONFIG_BLUEZ_HCIUART_BCSP_TXCRC [list $CONFIG_BLUEZ_HCIUART_BCSP] 2 }
	global CONFIG_BLUEZ_HCIBFUSB
	if {($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_NET != 0) && ($CONFIG_BLUEZ != 0) && ($CONFIG_BLUEZ == 1 || $CONFIG_BLUEZ == 2 || $CONFIG_BLUEZ == 4) && ($CONFIG_USB == 1 || $CONFIG_USB == 2 || $CONFIG_USB == 4)} then {write_tristate $cfg $autocfg CONFIG_BLUEZ_HCIBFUSB $CONFIG_BLUEZ_HCIBFUSB [list $CONFIG_BLUEZ $CONFIG_USB] 2 }
	global CONFIG_BLUEZ_HCIDTL1
	if {($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_NET != 0) && ($CONFIG_BLUEZ != 0) && ($CONFIG_PCMCIA == 1 || $CONFIG_PCMCIA == 2 || $CONFIG_PCMCIA == 4) && ($CONFIG_BLUEZ == 1 || $CONFIG_BLUEZ == 2 || $CONFIG_BLUEZ == 4)} then {write_tristate $cfg $autocfg CONFIG_BLUEZ_HCIDTL1 $CONFIG_BLUEZ_HCIDTL1 [list $CONFIG_PCMCIA $CONFIG_BLUEZ] 2 }
	global CONFIG_BLUEZ_HCIBT3C
	if {($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_NET != 0) && ($CONFIG_BLUEZ != 0) && ($CONFIG_PCMCIA == 1 || $CONFIG_PCMCIA == 2 || $CONFIG_PCMCIA == 4) && ($CONFIG_BLUEZ == 1 || $CONFIG_BLUEZ == 2 || $CONFIG_BLUEZ == 4)} then {write_tristate $cfg $autocfg CONFIG_BLUEZ_HCIBT3C $CONFIG_BLUEZ_HCIBT3C [list $CONFIG_PCMCIA $CONFIG_BLUEZ] 2 }
	global CONFIG_BLUEZ_HCIBLUECARD
	if {($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_NET != 0) && ($CONFIG_BLUEZ != 0) && ($CONFIG_PCMCIA == 1 || $CONFIG_PCMCIA == 2 || $CONFIG_PCMCIA == 4) && ($CONFIG_BLUEZ == 1 || $CONFIG_BLUEZ == 2 || $CONFIG_BLUEZ == 4)} then {write_tristate $cfg $autocfg CONFIG_BLUEZ_HCIBLUECARD $CONFIG_BLUEZ_HCIBLUECARD [list $CONFIG_PCMCIA $CONFIG_BLUEZ] 2 }
	global CONFIG_BLUEZ_HCIBTUART
	if {($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_NET != 0) && ($CONFIG_BLUEZ != 0) && ($CONFIG_PCMCIA == 1 || $CONFIG_PCMCIA == 2 || $CONFIG_PCMCIA == 4) && ($CONFIG_BLUEZ == 1 || $CONFIG_BLUEZ == 2 || $CONFIG_BLUEZ == 4)} then {write_tristate $cfg $autocfg CONFIG_BLUEZ_HCIBTUART $CONFIG_BLUEZ_HCIBTUART [list $CONFIG_PCMCIA $CONFIG_BLUEZ] 2 }
	global CONFIG_BLUEZ_HCIVHCI
	if {($CONFIG_EXPERIMENTAL == 1) && ($CONFIG_NET != 0) && ($CONFIG_BLUEZ != 0) && ($CONFIG_BLUEZ == 1 || $CONFIG_BLUEZ == 2 || $CONFIG_BLUEZ == 4)} then {write_tristate $cfg $autocfg CONFIG_BLUEZ_HCIVHCI $CONFIG_BLUEZ_HCIVHCI [list $CONFIG_BLUEZ] 2 }
	write_comment $cfg $autocfg "Kernel hacking"
	global CONFIG_FRAME_POINTER
	if {($CONFIG_ARCH_OMAHA == 1)} then {write_tristate $cfg $autocfg CONFIG_FRAME_POINTER $CONSTANT_N [list $notmod] 2 }
	if {($CONFIG_ARCH_OMAHA != 1)} then {write_tristate $cfg $autocfg CONFIG_FRAME_POINTER $CONSTANT_Y [list $notmod] 2 }
	global CONFIG_DEBUG_USER
	write_tristate $cfg $autocfg CONFIG_DEBUG_USER $CONFIG_DEBUG_USER [list $notmod] 2
	global CONFIG_DEBUG_INFO
	write_tristate $cfg $autocfg CONFIG_DEBUG_INFO $CONFIG_DEBUG_INFO [list $notmod] 2
	global CONFIG_NO_PGT_CACHE
	if {($CONFIG_CPU_26 == 1 || $CONFIG_CPU_26 == 4)} then {write_tristate $cfg $autocfg CONFIG_NO_PGT_CACHE $CONFIG_NO_PGT_CACHE [list $CONFIG_CPU_26] 2 }
	global CONFIG_DEBUG_KERNEL
	write_tristate $cfg $autocfg CONFIG_DEBUG_KERNEL $CONFIG_DEBUG_KERNEL [list $notmod] 2
	global CONFIG_DEBUG_SLAB
	if {($CONFIG_DEBUG_KERNEL == 1 || $CONFIG_DEBUG_KERNEL == 4)} then {write_tristate $cfg $autocfg CONFIG_DEBUG_SLAB $CONFIG_DEBUG_SLAB [list $CONFIG_DEBUG_KERNEL] 2 }
	global CONFIG_MAGIC_SYSRQ
	if {($CONFIG_DEBUG_KERNEL == 1 || $CONFIG_DEBUG_KERNEL == 4)} then {write_tristate $cfg $autocfg CONFIG_MAGIC_SYSRQ $CONFIG_MAGIC_SYSRQ [list $CONFIG_DEBUG_KERNEL] 2 }
	global CONFIG_DEBUG_SPINLOCK
	if {($CONFIG_DEBUG_KERNEL == 1 || $CONFIG_DEBUG_KERNEL == 4)} then {write_tristate $cfg $autocfg CONFIG_DEBUG_SPINLOCK $CONFIG_DEBUG_SPINLOCK [list $CONFIG_DEBUG_KERNEL] 2 }
	global CONFIG_DEBUG_WAITQ
	if {($CONFIG_DEBUG_KERNEL == 1 || $CONFIG_DEBUG_KERNEL == 4)} then {write_tristate $cfg $autocfg CONFIG_DEBUG_WAITQ $CONFIG_DEBUG_WAITQ [list $CONFIG_DEBUG_KERNEL] 2 }
	global CONFIG_DEBUG_BUGVERBOSE
	if {($CONFIG_DEBUG_KERNEL == 1 || $CONFIG_DEBUG_KERNEL == 4)} then {write_tristate $cfg $autocfg CONFIG_DEBUG_BUGVERBOSE $CONFIG_DEBUG_BUGVERBOSE [list $CONFIG_DEBUG_KERNEL] 2 }
	global CONFIG_DEBUG_ERRORS
	if {($CONFIG_DEBUG_KERNEL == 1 || $CONFIG_DEBUG_KERNEL == 4)} then {write_tristate $cfg $autocfg CONFIG_DEBUG_ERRORS $CONFIG_DEBUG_ERRORS [list $CONFIG_DEBUG_KERNEL] 2 }
	global CONFIG_DEBUG_LL
	if {($CONFIG_DEBUG_KERNEL == 1 || $CONFIG_DEBUG_KERNEL == 4)} then {write_tristate $cfg $autocfg CONFIG_DEBUG_LL $CONFIG_DEBUG_LL [list $CONFIG_DEBUG_KERNEL] 2 }
	global CONFIG_DEBUG_DC21285_PORT
	if {($CONFIG_DEBUG_LL == 1 || $CONFIG_DEBUG_LL == 4) && ($CONFIG_FOOTBRIDGE == 1 || $CONFIG_FOOTBRIDGE == 4)} then {write_tristate $cfg $autocfg CONFIG_DEBUG_DC21285_PORT $CONFIG_DEBUG_DC21285_PORT [list $CONFIG_DEBUG_LL $CONFIG_FOOTBRIDGE] 2 }
	global CONFIG_DEBUG_CLPS711X_UART2
	if {($CONFIG_DEBUG_LL == 1 || $CONFIG_DEBUG_LL == 4) && ($CONFIG_ARCH_CLPS711X == 1 || $CONFIG_ARCH_CLPS711X == 4)} then {write_tristate $cfg $autocfg CONFIG_DEBUG_CLPS711X_UART2 $CONFIG_DEBUG_CLPS711X_UART2 [list $CONFIG_DEBUG_LL $CONFIG_ARCH_CLPS711X] 2 }
	global CONFIG_LOG_BUF_SHIFT
	write_int $cfg $autocfg CONFIG_LOG_BUF_SHIFT $CONFIG_LOG_BUF_SHIFT $notmod
	write_comment $cfg $autocfg "Cryptographic options"
	global CONFIG_CRYPTO
	write_tristate $cfg $autocfg CONFIG_CRYPTO $CONFIG_CRYPTO [list $notmod] 2
	global CONFIG_CRYPTO_HMAC
	if {($CONFIG_CRYPTO == 1)} then {write_tristate $cfg $autocfg CONFIG_CRYPTO_HMAC $CONFIG_CRYPTO_HMAC [list $notmod] 2 }
	global CONFIG_CRYPTO_NULL
	if {($CONFIG_CRYPTO == 1)} then {write_tristate $cfg $autocfg CONFIG_CRYPTO_NULL $CONFIG_CRYPTO_NULL [list $notmod] 2 }
	global CONFIG_CRYPTO_MD4
	if {($CONFIG_CRYPTO == 1)} then {write_tristate $cfg $autocfg CONFIG_CRYPTO_MD4 $CONFIG_CRYPTO_MD4 [list $notmod] 2 }
	global CONFIG_CRYPTO_MD5
	if {($CONFIG_CRYPTO == 1)} then {write_tristate $cfg $autocfg CONFIG_CRYPTO_MD5 $CONFIG_CRYPTO_MD5 [list $notmod] 2 }
	global CONFIG_CRYPTO_SHA1
	if {($CONFIG_CRYPTO == 1)} then {write_tristate $cfg $autocfg CONFIG_CRYPTO_SHA1 $CONFIG_CRYPTO_SHA1 [list $notmod] 2 }
	global CONFIG_CRYPTO_SHA256
	if {($CONFIG_CRYPTO == 1)} then {write_tristate $cfg $autocfg CONFIG_CRYPTO_SHA256 $CONFIG_CRYPTO_SHA256 [list $notmod] 2 }
	global CONFIG_CRYPTO_SHA512
	if {($CONFIG_CRYPTO == 1)} then {write_tristate $cfg $autocfg CONFIG_CRYPTO_SHA512 $CONFIG_CRYPTO_SHA512 [list $notmod] 2 }
	global CONFIG_CRYPTO_DES
	if {($CONFIG_CRYPTO == 1)} then {write_tristate $cfg $autocfg CONFIG_CRYPTO_DES $CONFIG_CRYPTO_DES [list $notmod] 2 }
	global CONFIG_CRYPTO_BLOWFISH
	if {($CONFIG_CRYPTO == 1)} then {write_tristate $cfg $autocfg CONFIG_CRYPTO_BLOWFISH $CONFIG_CRYPTO_BLOWFISH [list $notmod] 2 }
	global CONFIG_CRYPTO_TWOFISH
	if {($CONFIG_CRYPTO == 1)} then {write_tristate $cfg $autocfg CONFIG_CRYPTO_TWOFISH $CONFIG_CRYPTO_TWOFISH [list $notmod] 2 }
	global CONFIG_CRYPTO_SERPENT
	if {($CONFIG_CRYPTO == 1)} then {write_tristate $cfg $autocfg CONFIG_CRYPTO_SERPENT $CONFIG_CRYPTO_SERPENT [list $notmod] 2 }
	global CONFIG_CRYPTO_AES
	if {($CONFIG_CRYPTO == 1)} then {write_tristate $cfg $autocfg CONFIG_CRYPTO_AES $CONFIG_CRYPTO_AES [list $notmod] 2 }
	global CONFIG_CRYPTO_CAST5
	if {($CONFIG_CRYPTO == 1)} then {write_tristate $cfg $autocfg CONFIG_CRYPTO_CAST5 $CONFIG_CRYPTO_CAST5 [list $notmod] 2 }
	global CONFIG_CRYPTO_DEFLATE
	if {($CONFIG_CRYPTO == 1)} then {write_tristate $cfg $autocfg CONFIG_CRYPTO_DEFLATE $CONFIG_CRYPTO_DEFLATE [list $notmod] 2 }
	global CONFIG_CRYPTO_TEST
	if {($CONFIG_CRYPTO == 1)} then {write_tristate $cfg $autocfg CONFIG_CRYPTO_TEST $CONFIG_CRYPTO_TEST [list $notmod] 2 }
	write_comment $cfg $autocfg "Library routines"
	global CONFIG_CRC32
	write_tristate $cfg $autocfg CONFIG_CRC32 $CONFIG_CRC32 [list $notmod] 2
	global CONFIG_ZLIB_INFLATE
	global CONFIG_BINFMT_ZFLAT
	if {($CONFIG_CRAMFS == 1 || $CONFIG_PPP_DEFLATE == 1 || $CONFIG_CRYPTO_DEFLATE == 1 || $CONFIG_JFFS2_FS == 1 || $CONFIG_BINFMT_ZFLAT == 1 || $CONFIG_ZISOFS_FS == 1)} then {write_tristate $cfg $autocfg CONFIG_ZLIB_INFLATE $CONSTANT_Y [list $notmod] 2 }
	if {($CONFIG_CRAMFS != 1 && $CONFIG_PPP_DEFLATE != 1 && $CONFIG_CRYPTO_DEFLATE != 1 && $CONFIG_JFFS2_FS != 1 && $CONFIG_BINFMT_ZFLAT != 1 && $CONFIG_ZISOFS_FS != 1) && ($CONFIG_CRAMFS == 2 || $CONFIG_PPP_DEFLATE == 2 || $CONFIG_CRYPTO_DEFLATE == 2 || $CONFIG_JFFS2_FS == 2 || $CONFIG_ZISOFS_FS == 2)} then {write_tristate $cfg $autocfg CONFIG_ZLIB_INFLATE $CONSTANT_M [list $notmod] 2 }
	if {($CONFIG_CRAMFS != 1 && $CONFIG_PPP_DEFLATE != 1 && $CONFIG_CRYPTO_DEFLATE != 1 && $CONFIG_JFFS2_FS != 1 && $CONFIG_BINFMT_ZFLAT != 1 && $CONFIG_ZISOFS_FS != 1) && ($CONFIG_CRAMFS != 2 && $CONFIG_PPP_DEFLATE != 2 && $CONFIG_CRYPTO_DEFLATE != 2 && $CONFIG_JFFS2_FS != 2 && $CONFIG_ZISOFS_FS != 2)} then {write_tristate $cfg $autocfg CONFIG_ZLIB_INFLATE $CONFIG_ZLIB_INFLATE [list $notmod] 2 }
	global CONFIG_ZLIB_DEFLATE
	if {($CONFIG_PPP_DEFLATE == 1 || $CONFIG_CRYPTO_DEFLATE == 1 || $CONFIG_JFFS2_FS == 1)} then {write_tristate $cfg $autocfg CONFIG_ZLIB_DEFLATE $CONSTANT_Y [list $notmod] 2 }
	if {($CONFIG_PPP_DEFLATE != 1 && $CONFIG_CRYPTO_DEFLATE != 1 && $CONFIG_JFFS2_FS != 1) && ($CONFIG_PPP_DEFLATE == 2 || $CONFIG_CRYPTO_DEFLATE == 2 || $CONFIG_JFFS2_FS == 2)} then {write_tristate $cfg $autocfg CONFIG_ZLIB_DEFLATE $CONSTANT_M [list $notmod] 2 }
	if {($CONFIG_PPP_DEFLATE != 1 && $CONFIG_CRYPTO_DEFLATE != 1 && $CONFIG_JFFS2_FS != 1) && ($CONFIG_PPP_DEFLATE != 2 && $CONFIG_CRYPTO_DEFLATE != 2 && $CONFIG_JFFS2_FS != 2)} then {write_tristate $cfg $autocfg CONFIG_ZLIB_DEFLATE $CONFIG_ZLIB_DEFLATE [list $notmod] 2 }
	global CONFIG_FW_LOADER
	if {($CONFIG_EXPERIMENTAL == 1 && $CONFIG_HOTPLUG == 1)} then {write_tristate $cfg $autocfg CONFIG_FW_LOADER $CONFIG_FW_LOADER [list $notmod] 2 }
	close $cfg
	close $autocfg
}


proc clear_choices { } {
	global CONFIG_ARCH_ADIFCC; set CONFIG_ARCH_ADIFCC 0
	global CONFIG_ARCH_ANAKIN; set CONFIG_ARCH_ANAKIN 0
	global CONFIG_ARCH_ARCA5K; set CONFIG_ARCH_ARCA5K 0
	global CONFIG_ARCH_CLPS7500; set CONFIG_ARCH_CLPS7500 0
	global CONFIG_ARCH_CLPS711X; set CONFIG_ARCH_CLPS711X 0
	global CONFIG_ARCH_CO285; set CONFIG_ARCH_CO285 0
	global CONFIG_ARCH_EBSA110; set CONFIG_ARCH_EBSA110 0
	global CONFIG_ARCH_CAMELOT; set CONFIG_ARCH_CAMELOT 0
	global CONFIG_ARCH_FOOTBRIDGE; set CONFIG_ARCH_FOOTBRIDGE 0
	global CONFIG_ARCH_INTEGRATOR; set CONFIG_ARCH_INTEGRATOR 0
	global CONFIG_ARCH_KS8695; set CONFIG_ARCH_KS8695 0
	global CONFIG_ARCH_IOP3XX; set CONFIG_ARCH_IOP3XX 0
	global CONFIG_ARCH_IXP1200; set CONFIG_ARCH_IXP1200 0
	global CONFIG_ARCH_IXP2000; set CONFIG_ARCH_IXP2000 0
	global CONFIG_ARCH_IXP425; set CONFIG_ARCH_IXP425 0
	global CONFIG_ARCH_OMAHA; set CONFIG_ARCH_OMAHA 0
	global CONFIG_ARCH_L7200; set CONFIG_ARCH_L7200 0
	global CONFIG_ARCH_MX1ADS; set CONFIG_ARCH_MX1ADS 0
	global CONFIG_ARCH_RPC; set CONFIG_ARCH_RPC 0
	global CONFIG_ARCH_RISCSTATION; set CONFIG_ARCH_RISCSTATION 0
	global CONFIG_ARCH_SA1100; set CONFIG_ARCH_SA1100 0
	global CONFIG_ARCH_SHARK; set CONFIG_ARCH_SHARK 0
	global CONFIG_ARCH_AT91RM9200; set CONFIG_ARCH_AT91RM9200 0
	global CONFIG_SA1100_CERF_8MB; set CONFIG_SA1100_CERF_8MB 0
	global CONFIG_SA1100_CERF_16MB; set CONFIG_SA1100_CERF_16MB 0
	global CONFIG_SA1100_CERF_32MB; set CONFIG_SA1100_CERF_32MB 0
	global CONFIG_SA1100_CERF_64MB; set CONFIG_SA1100_CERF_64MB 0
	global CONFIG_SA1100_CERF_FLASH_8MB; set CONFIG_SA1100_CERF_FLASH_8MB 0
	global CONFIG_SA1100_CERF_FLASH_16MB; set CONFIG_SA1100_CERF_FLASH_16MB 0
	global CONFIG_SA1100_CERF_FLASH_32MB; set CONFIG_SA1100_CERF_FLASH_32MB 0
	global CONFIG_ARCH_IQ80310; set CONFIG_ARCH_IQ80310 0
	global CONFIG_ARCH_IQ80321; set CONFIG_ARCH_IQ80321 0
	global CONFIG_ARCH_IXDP425; set CONFIG_ARCH_IXDP425 0
	global CONFIG_ARCH_IXCDP1100; set CONFIG_ARCH_IXCDP1100 0
	global CONFIG_ARCH_PRPMC1100; set CONFIG_ARCH_PRPMC1100 0
	global CONFIG_ARCH_ADI_COYOTE; set CONFIG_ARCH_ADI_COYOTE 0
	global CONFIG_ARCH_SE4000; set CONFIG_ARCH_SE4000 0
	global CONFIG_ARCH_IXDP2400; set CONFIG_ARCH_IXDP2400 0
	global CONFIG_ARCH_IXDP2800; set CONFIG_ARCH_IXDP2800 0
	global CONFIG_MACH_KS8695; set CONFIG_MACH_KS8695 0
	global CONFIG_MACH_LITE300; set CONFIG_MACH_LITE300 0
	global CONFIG_ARCH_ADI_EVB; set CONFIG_ARCH_ADI_EVB 0
	global CONFIG_ARCH_BRH; set CONFIG_ARCH_BRH 0
	global CONFIG_EPXA10DB; set CONFIG_EPXA10DB 0
	global CONFIG_EPXA1DB; set CONFIG_EPXA1DB 0
	global CONFIG_EPXA10DB_R2; set CONFIG_EPXA10DB_R2 0
	global CONFIG_EPXA10DB_R3; set CONFIG_EPXA10DB_R3 0
	global CONFIG_KCORE_ELF; set CONFIG_KCORE_ELF 0
	global CONFIG_KCORE_AOUT; set CONFIG_KCORE_AOUT 0
	global CONFIG_MTD_CFI_NOSWAP; set CONFIG_MTD_CFI_NOSWAP 0
	global CONFIG_MTD_CFI_BE_BYTE_SWAP; set CONFIG_MTD_CFI_BE_BYTE_SWAP 0
	global CONFIG_MTD_CFI_LE_BYTE_SWAP; set CONFIG_MTD_CFI_LE_BYTE_SWAP 0
	global CONFIG_FLASHAUTO; set CONFIG_FLASHAUTO 0
	global CONFIG_FLASH128KB; set CONFIG_FLASH128KB 0
	global CONFIG_FLASH1MB; set CONFIG_FLASH1MB 0
	global CONFIG_FLASH2MB; set CONFIG_FLASH2MB 0
	global CONFIG_FLASH4MB; set CONFIG_FLASH4MB 0
	global CONFIG_FLASH6MB; set CONFIG_FLASH6MB 0
	global CONFIG_FLASH8MB; set CONFIG_FLASH8MB 0
	global CONFIG_FLASH16MB; set CONFIG_FLASH16MB 0
	global CONFIG_FLASHAUTO; set CONFIG_FLASHAUTO 0
	global CONFIG_FLASH128KB; set CONFIG_FLASH128KB 0
	global CONFIG_FLASH1MB; set CONFIG_FLASH1MB 0
	global CONFIG_FLASH2MB; set CONFIG_FLASH2MB 0
	global CONFIG_FLASH4MB; set CONFIG_FLASH4MB 0
	global CONFIG_FLASH6MB; set CONFIG_FLASH6MB 0
	global CONFIG_FLASH8MB; set CONFIG_FLASH8MB 0
	global CONFIG_NOFLASH; set CONFIG_NOFLASH 0
	global CONFIG_AMDFLASH; set CONFIG_AMDFLASH 0
	global CONFIG_INTELFLASH; set CONFIG_INTELFLASH 0
	global CONFIG_FLASHAUTO; set CONFIG_FLASHAUTO 0
	global CONFIG_FLASH128KB; set CONFIG_FLASH128KB 0
	global CONFIG_FLASH1MB; set CONFIG_FLASH1MB 0
	global CONFIG_FLASH2MB; set CONFIG_FLASH2MB 0
	global CONFIG_FLASH4MB; set CONFIG_FLASH4MB 0
	global CONFIG_FLASH6MB; set CONFIG_FLASH6MB 0
	global CONFIG_FLASH8MB; set CONFIG_FLASH8MB 0
	global CONFIG_FLASH16MB; set CONFIG_FLASH16MB 0
	global CONFIG_FLASHAUTOBIT; set CONFIG_FLASHAUTOBIT 0
	global CONFIG_FLASH8BIT; set CONFIG_FLASH8BIT 0
	global CONFIG_FLASH16BIT; set CONFIG_FLASH16BIT 0
	global CONFIG_FLASH32bit; set CONFIG_FLASH32bit 0
	global CONFIG_FEC_KS8995M_P5; set CONFIG_FEC_KS8995M_P5 0
	global CONFIG_FEC_KS8995M_SW; set CONFIG_FEC_KS8995M_SW 0
	global CONFIG_IDE_8xx_PCCARD; set CONFIG_IDE_8xx_PCCARD 0
	global CONFIG_IDE_8xx_DIRECT; set CONFIG_IDE_8xx_DIRECT 0
	global CONFIG_IDE_EXT_DIRECT; set CONFIG_IDE_EXT_DIRECT 0
	global CONFIG_SCSI_G_NCR5380_PORT; set CONFIG_SCSI_G_NCR5380_PORT 0
	global CONFIG_SCSI_G_NCR5380_MEM; set CONFIG_SCSI_G_NCR5380_MEM 0
	global CONFIG_FT_NORMAL_DEBUG; set CONFIG_FT_NORMAL_DEBUG 0
	global CONFIG_FT_FULL_DEBUG; set CONFIG_FT_FULL_DEBUG 0
	global CONFIG_FT_NO_TRACE; set CONFIG_FT_NO_TRACE 0
	global CONFIG_FT_NO_TRACE_AT_ALL; set CONFIG_FT_NO_TRACE_AT_ALL 0
	global CONFIG_FT_STD_FDC; set CONFIG_FT_STD_FDC 0
	global CONFIG_FT_MACH2; set CONFIG_FT_MACH2 0
	global CONFIG_FT_PROBE_FC10; set CONFIG_FT_PROBE_FC10 0
	global CONFIG_FT_ALT_FDC; set CONFIG_FT_ALT_FDC 0
}


proc update_choices { } {
	global tmpvar_0
	set tmpvar_0 "RiscPC"
	global CONFIG_ARCH_ADIFCC
	if { $CONFIG_ARCH_ADIFCC == 1 } then { set tmpvar_0 "ADIFCC-based" }
	global CONFIG_ARCH_ANAKIN
	if { $CONFIG_ARCH_ANAKIN == 1 } then { set tmpvar_0 "Anakin" }
	global CONFIG_ARCH_ARCA5K
	if { $CONFIG_ARCH_ARCA5K == 1 } then { set tmpvar_0 "Archimedes/A5000" }
	global CONFIG_ARCH_CLPS7500
	if { $CONFIG_ARCH_CLPS7500 == 1 } then { set tmpvar_0 "Cirrus-CL-PS7500FE" }
	global CONFIG_ARCH_CLPS711X
	if { $CONFIG_ARCH_CLPS711X == 1 } then { set tmpvar_0 "CLPS711x/EP721x-based" }
	global CONFIG_ARCH_CO285
	if { $CONFIG_ARCH_CO285 == 1 } then { set tmpvar_0 "Co-EBSA285" }
	global CONFIG_ARCH_EBSA110
	if { $CONFIG_ARCH_EBSA110 == 1 } then { set tmpvar_0 "EBSA-110" }
	global CONFIG_ARCH_CAMELOT
	if { $CONFIG_ARCH_CAMELOT == 1 } then { set tmpvar_0 "Excalibur-ARM" }
	global CONFIG_ARCH_FOOTBRIDGE
	if { $CONFIG_ARCH_FOOTBRIDGE == 1 } then { set tmpvar_0 "FootBridge" }
	global CONFIG_ARCH_INTEGRATOR
	if { $CONFIG_ARCH_INTEGRATOR == 1 } then { set tmpvar_0 "Integrator" }
	global CONFIG_ARCH_KS8695
	if { $CONFIG_ARCH_KS8695 == 1 } then { set tmpvar_0 "KS8695" }
	global CONFIG_ARCH_IOP3XX
	if { $CONFIG_ARCH_IOP3XX == 1 } then { set tmpvar_0 "IOP3xx-based" }
	global CONFIG_ARCH_IXP1200
	if { $CONFIG_ARCH_IXP1200 == 1 } then { set tmpvar_0 "IXP1200-based" }
	global CONFIG_ARCH_IXP2000
	if { $CONFIG_ARCH_IXP2000 == 1 } then { set tmpvar_0 "IXP2000-based" }
	global CONFIG_ARCH_IXP425
	if { $CONFIG_ARCH_IXP425 == 1 } then { set tmpvar_0 "IXP425-based" }
	global CONFIG_ARCH_OMAHA
	if { $CONFIG_ARCH_OMAHA == 1 } then { set tmpvar_0 "Omaha" }
	global CONFIG_ARCH_L7200
	if { $CONFIG_ARCH_L7200 == 1 } then { set tmpvar_0 "LinkUp-L7200" }
	global CONFIG_ARCH_MX1ADS
	if { $CONFIG_ARCH_MX1ADS == 1 } then { set tmpvar_0 "Motorola-MX1ADS" }
	global CONFIG_ARCH_RPC
	if { $CONFIG_ARCH_RPC == 1 } then { set tmpvar_0 "RiscPC" }
	global CONFIG_ARCH_RISCSTATION
	if { $CONFIG_ARCH_RISCSTATION == 1 } then { set tmpvar_0 "RiscStation" }
	global CONFIG_ARCH_SA1100
	if { $CONFIG_ARCH_SA1100 == 1 } then { set tmpvar_0 "SA1100-based" }
	global CONFIG_ARCH_SHARK
	if { $CONFIG_ARCH_SHARK == 1 } then { set tmpvar_0 "Shark" }
	global CONFIG_ARCH_AT91RM9200
	if { $CONFIG_ARCH_AT91RM9200 == 1 } then { set tmpvar_0 "AT91RM9200-based" }
	global tmpvar_1
	set tmpvar_1 "CerfRam"
	global CONFIG_SA1100_CERF_8MB
	if { $CONFIG_SA1100_CERF_8MB == 1 } then { set tmpvar_1 "8MB" }
	global CONFIG_SA1100_CERF_16MB
	if { $CONFIG_SA1100_CERF_16MB == 1 } then { set tmpvar_1 "16MB" }
	global CONFIG_SA1100_CERF_32MB
	if { $CONFIG_SA1100_CERF_32MB == 1 } then { set tmpvar_1 "32MB" }
	global CONFIG_SA1100_CERF_64MB
	if { $CONFIG_SA1100_CERF_64MB == 1 } then { set tmpvar_1 "64MB" }
	global tmpvar_2
	set tmpvar_2 "8MB"
	global CONFIG_SA1100_CERF_FLASH_8MB
	if { $CONFIG_SA1100_CERF_FLASH_8MB == 1 } then { set tmpvar_2 "8MB" }
	global CONFIG_SA1100_CERF_FLASH_16MB
	if { $CONFIG_SA1100_CERF_FLASH_16MB == 1 } then { set tmpvar_2 "16MB" }
	global CONFIG_SA1100_CERF_FLASH_32MB
	if { $CONFIG_SA1100_CERF_FLASH_32MB == 1 } then { set tmpvar_2 "32MB" }
	global tmpvar_3
	set tmpvar_3 "IQ80310"
	global CONFIG_ARCH_IQ80310
	if { $CONFIG_ARCH_IQ80310 == 1 } then { set tmpvar_3 "IQ80310" }
	global CONFIG_ARCH_IQ80321
	if { $CONFIG_ARCH_IQ80321 == 1 } then { set tmpvar_3 "IQ80321" }
	global tmpvar_4
	set tmpvar_4 "IXDP425"
	global CONFIG_ARCH_IXDP425
	if { $CONFIG_ARCH_IXDP425 == 1 } then { set tmpvar_4 "IXDP425" }
	global CONFIG_ARCH_IXCDP1100
	if { $CONFIG_ARCH_IXCDP1100 == 1 } then { set tmpvar_4 "IXCDP1100" }
	global CONFIG_ARCH_PRPMC1100
	if { $CONFIG_ARCH_PRPMC1100 == 1 } then { set tmpvar_4 "PrPMC1100" }
	global CONFIG_ARCH_ADI_COYOTE
	if { $CONFIG_ARCH_ADI_COYOTE == 1 } then { set tmpvar_4 "COYOTE" }
	global CONFIG_ARCH_SE4000
	if { $CONFIG_ARCH_SE4000 == 1 } then { set tmpvar_4 "SE4000" }
	global tmpvar_5
	set tmpvar_5 "IXDP2400"
	global CONFIG_ARCH_IXDP2400
	if { $CONFIG_ARCH_IXDP2400 == 1 } then { set tmpvar_5 "IXDP2400" }
	global CONFIG_ARCH_IXDP2800
	if { $CONFIG_ARCH_IXDP2800 == 1 } then { set tmpvar_5 "IXDP2800" }
	global tmpvar_6
	set tmpvar_6 "KS8695"
	global CONFIG_MACH_KS8695
	if { $CONFIG_MACH_KS8695 == 1 } then { set tmpvar_6 "KS8695" }
	global CONFIG_MACH_LITE300
	if { $CONFIG_MACH_LITE300 == 1 } then { set tmpvar_6 "LITE300" }
	global tmpvar_7
	set tmpvar_7 "80200EVB"
	global CONFIG_ARCH_ADI_EVB
	if { $CONFIG_ARCH_ADI_EVB == 1 } then { set tmpvar_7 "80200EVB" }
	global CONFIG_ARCH_BRH
	if { $CONFIG_ARCH_BRH == 1 } then { set tmpvar_7 "BRH" }
	global tmpvar_8
	set tmpvar_8 "EPXA10DB"
	global CONFIG_EPXA10DB
	if { $CONFIG_EPXA10DB == 1 } then { set tmpvar_8 "EPXA10DB" }
	global CONFIG_EPXA1DB
	if { $CONFIG_EPXA1DB == 1 } then { set tmpvar_8 "EPXA1DB" }
	global tmpvar_9
	set tmpvar_9 "DDR"
	global CONFIG_EPXA10DB_R2
	if { $CONFIG_EPXA10DB_R2 == 1 } then { set tmpvar_9 "SDR" }
	global CONFIG_EPXA10DB_R3
	if { $CONFIG_EPXA10DB_R3 == 1 } then { set tmpvar_9 "DDR" }
	global tmpvar_10
	set tmpvar_10 "ELF"
	global CONFIG_KCORE_ELF
	if { $CONFIG_KCORE_ELF == 1 } then { set tmpvar_10 "ELF" }
	global CONFIG_KCORE_AOUT
	if { $CONFIG_KCORE_AOUT == 1 } then { set tmpvar_10 "A.OUT" }
	global tmpvar_11
	set tmpvar_11 "NO"
	global CONFIG_MTD_CFI_NOSWAP
	if { $CONFIG_MTD_CFI_NOSWAP == 1 } then { set tmpvar_11 "NO" }
	global CONFIG_MTD_CFI_BE_BYTE_SWAP
	if { $CONFIG_MTD_CFI_BE_BYTE_SWAP == 1 } then { set tmpvar_11 "BIG_ENDIAN_BYTE" }
	global CONFIG_MTD_CFI_LE_BYTE_SWAP
	if { $CONFIG_MTD_CFI_LE_BYTE_SWAP == 1 } then { set tmpvar_11 "LITTLE_ENDIAN_BYTE" }
	global tmpvar_12
	set tmpvar_12 "AUTO"
	global CONFIG_FLASHAUTO
	if { $CONFIG_FLASHAUTO == 1 } then { set tmpvar_12 "AUTO" }
	global CONFIG_FLASH128KB
	if { $CONFIG_FLASH128KB == 1 } then { set tmpvar_12 "128KB" }
	global CONFIG_FLASH1MB
	if { $CONFIG_FLASH1MB == 1 } then { set tmpvar_12 "1MB" }
	global CONFIG_FLASH2MB
	if { $CONFIG_FLASH2MB == 1 } then { set tmpvar_12 "2MB" }
	global CONFIG_FLASH4MB
	if { $CONFIG_FLASH4MB == 1 } then { set tmpvar_12 "4MB" }
	global CONFIG_FLASH6MB
	if { $CONFIG_FLASH6MB == 1 } then { set tmpvar_12 "6MB" }
	global CONFIG_FLASH8MB
	if { $CONFIG_FLASH8MB == 1 } then { set tmpvar_12 "8MB" }
	global CONFIG_FLASH16MB
	if { $CONFIG_FLASH16MB == 1 } then { set tmpvar_12 "16MB" }
	global tmpvar_13
	set tmpvar_13 "AUTO"
	global CONFIG_FLASHAUTO
	if { $CONFIG_FLASHAUTO == 1 } then { set tmpvar_13 "AUTO" }
	global CONFIG_FLASH128KB
	if { $CONFIG_FLASH128KB == 1 } then { set tmpvar_13 "128KB" }
	global CONFIG_FLASH1MB
	if { $CONFIG_FLASH1MB == 1 } then { set tmpvar_13 "1MB" }
	global CONFIG_FLASH2MB
	if { $CONFIG_FLASH2MB == 1 } then { set tmpvar_13 "2MB" }
	global CONFIG_FLASH4MB
	if { $CONFIG_FLASH4MB == 1 } then { set tmpvar_13 "4MB" }
	global CONFIG_FLASH6MB
	if { $CONFIG_FLASH6MB == 1 } then { set tmpvar_13 "6MB" }
	global CONFIG_FLASH8MB
	if { $CONFIG_FLASH8MB == 1 } then { set tmpvar_13 "8MB" }
	global tmpvar_14
	set tmpvar_14 "NONE"
	global CONFIG_NOFLASH
	if { $CONFIG_NOFLASH == 1 } then { set tmpvar_14 "NONE" }
	global CONFIG_AMDFLASH
	if { $CONFIG_AMDFLASH == 1 } then { set tmpvar_14 "AMD" }
	global CONFIG_INTELFLASH
	if { $CONFIG_INTELFLASH == 1 } then { set tmpvar_14 "INTEL" }
	global tmpvar_15
	set tmpvar_15 "AUTO"
	global CONFIG_FLASHAUTO
	if { $CONFIG_FLASHAUTO == 1 } then { set tmpvar_15 "AUTO" }
	global CONFIG_FLASH128KB
	if { $CONFIG_FLASH128KB == 1 } then { set tmpvar_15 "128KB" }
	global CONFIG_FLASH1MB
	if { $CONFIG_FLASH1MB == 1 } then { set tmpvar_15 "1MB" }
	global CONFIG_FLASH2MB
	if { $CONFIG_FLASH2MB == 1 } then { set tmpvar_15 "2MB" }
	global CONFIG_FLASH4MB
	if { $CONFIG_FLASH4MB == 1 } then { set tmpvar_15 "4MB" }
	global CONFIG_FLASH6MB
	if { $CONFIG_FLASH6MB == 1 } then { set tmpvar_15 "6MB" }
	global CONFIG_FLASH8MB
	if { $CONFIG_FLASH8MB == 1 } then { set tmpvar_15 "8MB" }
	global CONFIG_FLASH16MB
	if { $CONFIG_FLASH16MB == 1 } then { set tmpvar_15 "16MB" }
	global tmpvar_16
	set tmpvar_16 "AUTO"
	global CONFIG_FLASHAUTOBIT
	if { $CONFIG_FLASHAUTOBIT == 1 } then { set tmpvar_16 "AUTO" }
	global CONFIG_FLASH8BIT
	if { $CONFIG_FLASH8BIT == 1 } then { set tmpvar_16 "8bit" }
	global CONFIG_FLASH16BIT
	if { $CONFIG_FLASH16BIT == 1 } then { set tmpvar_16 "16bit" }
	global CONFIG_FLASH32bit
	if { $CONFIG_FLASH32bit == 1 } then { set tmpvar_16 "32bit" }
	global tmpvar_17
	set tmpvar_17 "MII-P5"
	global CONFIG_FEC_KS8995M_P5
	if { $CONFIG_FEC_KS8995M_P5 == 1 } then { set tmpvar_17 "MII-P5" }
	global CONFIG_FEC_KS8995M_SW
	if { $CONFIG_FEC_KS8995M_SW == 1 } then { set tmpvar_17 "MII-SW" }
	global tmpvar_18
	set tmpvar_18 "8xx_PCCARD"
	global CONFIG_IDE_8xx_PCCARD
	if { $CONFIG_IDE_8xx_PCCARD == 1 } then { set tmpvar_18 "8xx_PCCARD" }
	global CONFIG_IDE_8xx_DIRECT
	if { $CONFIG_IDE_8xx_DIRECT == 1 } then { set tmpvar_18 "8xx_DIRECT" }
	global CONFIG_IDE_EXT_DIRECT
	if { $CONFIG_IDE_EXT_DIRECT == 1 } then { set tmpvar_18 "EXT_DIRECT" }
	global tmpvar_19
	set tmpvar_19 "Port"
	global CONFIG_SCSI_G_NCR5380_PORT
	if { $CONFIG_SCSI_G_NCR5380_PORT == 1 } then { set tmpvar_19 "Port" }
	global CONFIG_SCSI_G_NCR5380_MEM
	if { $CONFIG_SCSI_G_NCR5380_MEM == 1 } then { set tmpvar_19 "Memory" }
	global tmpvar_33
	set tmpvar_33 "Normal"
	global CONFIG_FT_NORMAL_DEBUG
	if { $CONFIG_FT_NORMAL_DEBUG == 1 } then { set tmpvar_33 "Normal" }
	global CONFIG_FT_FULL_DEBUG
	if { $CONFIG_FT_FULL_DEBUG == 1 } then { set tmpvar_33 "Excessive" }
	global CONFIG_FT_NO_TRACE
	if { $CONFIG_FT_NO_TRACE == 1 } then { set tmpvar_33 "Reduced" }
	global CONFIG_FT_NO_TRACE_AT_ALL
	if { $CONFIG_FT_NO_TRACE_AT_ALL == 1 } then { set tmpvar_33 "None" }
	global tmpvar_34
	set tmpvar_34 "Standard"
	global CONFIG_FT_STD_FDC
	if { $CONFIG_FT_STD_FDC == 1 } then { set tmpvar_34 "Standard" }
	global CONFIG_FT_MACH2
	if { $CONFIG_FT_MACH2 == 1 } then { set tmpvar_34 "MACH-2" }
	global CONFIG_FT_PROBE_FC10
	if { $CONFIG_FT_PROBE_FC10 == 1 } then { set tmpvar_34 "FC-10/FC-20" }
	global CONFIG_FT_ALT_FDC
	if { $CONFIG_FT_ALT_FDC == 1 } then { set tmpvar_34 "Alt/82078" }
}


proc update_define_mainmenu {} {
	global CONFIG_MODULES
	global CONFIG_ARM
	global CONFIG_EISA
	global CONFIG_SBUS
	global CONFIG_MCA
	global CONFIG_UID16
	global CONFIG_RWSEM_GENERIC_SPINLOCK
	global CONFIG_RWSEM_XCHGADD_ALGORITHM
	global CONFIG_GENERIC_BUST_SPINLOCK
	global CONFIG_GENERIC_ISA_DMA
	global CONFIG_MTD
	global CONFIG_KBDMOUSE
	global CONFIG_RPCMOUSE
	global CONSTANT_Y
	set CONFIG_ARM $CONSTANT_Y
	global CONSTANT_N
	set CONFIG_EISA $CONSTANT_N
	set CONFIG_SBUS $CONSTANT_N
	set CONFIG_MCA $CONSTANT_N
	set CONFIG_UID16 $CONSTANT_Y
	set CONFIG_RWSEM_GENERIC_SPINLOCK $CONSTANT_Y
	set CONFIG_RWSEM_XCHGADD_ALGORITHM $CONSTANT_N
	set CONFIG_GENERIC_BUST_SPINLOCK $CONSTANT_N
	set CONFIG_GENERIC_ISA_DMA $CONSTANT_N
	global CONFIG_ALIGNMENT_TRAP
	if {($CONFIG_ALIGNMENT_TRAP != 1)} then {set CONFIG_MTD $CONSTANT_N }
	global CONFIG_ARCH_ACORN
	global CONFIG_BUSMOUSE
	global CONFIG_ARCH_RPC
	if {($CONFIG_ARCH_ACORN == 1 && $CONFIG_BUSMOUSE == 1) && ($CONFIG_ARCH_RPC != 1)} then {set CONFIG_KBDMOUSE $CONSTANT_Y }
	if {($CONFIG_ARCH_ACORN == 1 && $CONFIG_BUSMOUSE == 1) && ($CONFIG_ARCH_RPC == 1)} then {set CONFIG_RPCMOUSE $CONSTANT_Y }
}


set defaults "arch/arm/defconfig"
set ARCH "arm"
# FILE: tail.tk
# This file is boilerplate TCL/TK function definitions for 'make xconfig'.
#
# CHANGES
# =======
#
# 8 January 1998, Michael Elizabeth Chastain, <mec@shout.net>
# Arrange buttons in three columns for better screen fitting.
#

#
# Read the user's settings from .config.  These will override whatever is
# in config.in.  Don't do this if the user specified a -D to force
# the defaults.
#
if { [file readable .config] == 1} then {
	if { $argc > 0 } then {
		if { [lindex $argv 0] != "-D" } then {
			read_config .config
		}
		else
		{
			read_config $defaults
		}
	} else {
		read_config .config
	}
} else {
	read_config $defaults
}

update_define 1 $total_menus 0
update_mainmenu

button .f0.right.save -anchor w -text "Save and Exit" -underline 0\
    -command { catch {exec cp -f .config .config.old}; \
		writeconfig .config include/linux/autoconf.h; wrapup .wrap }

button .f0.right.quit -anchor w -text "Quit Without Saving" -underline 0\
    -command { maybe_exit .maybe }

button .f0.right.load -anchor w -text "Load Configuration from File" \
    -command { load_configfile .load "Load Configuration from file" read_config_file
}

button .f0.right.store -anchor w -text "Store Configuration to File" \
    -command { load_configfile .load "Store Configuration to file" write_config_file }

#
# Now pack everything.
#

pack .f0.right.store .f0.right.load .f0.right.quit .f0.right.save \
    -padx 0 -pady 0 -side bottom -fill x
pack .f0.left .f0.middle .f0.right -side left -padx 5 -pady 0 -fill y
pack .f0 -padx 5 -pady 5

update idletasks
set winy [expr 10 + [winfo reqheight .f0]]
set scry [lindex [wm maxsize .] 1]
set winx [expr 10 + [winfo reqwidth .f0]]
set scrx [lindex [wm maxsize .] 0]
if {$winx < $scrx} then {set maxx -1} else {set maxx $winx}
if {$winy < $scry} then {set maxy -1} else {set maxy $winy}
.f0 configure -width $winx -height $winy 
wm maxsize . $maxx $maxy

#
# If we cannot write our config files, disable the write button.
#
if { [file exists .config] == 1 } then {
		if { [file writable .config] == 0 } then {
			.f0.right.save configure -state disabled
		}
	} else {
		if { [file writable .] == 0 } then {
			.f0.right.save configure -state disabled
		}
	}

if { [file exists include/linux/autoconf.h] == 1 } then {
		if { [file writable include/linux/autoconf.h] == 0 } then {
			.f0.right.save configure -state disabled
		}
	} else {
		if { [file writable include/linux/] == 0 } then {
			.f0.right.save configure -state disabled
		}
	}
