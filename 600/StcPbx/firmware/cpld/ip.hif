HIF003
--
-- Copyright (C) 1988-2002 Altera Corporation
-- Any megafunction design, and related net list (encrypted or decrypted),
-- support information, device programming or simulation file, and any other
-- associated documentation or information provided by Altera or a partner
-- under Altera's Megafunction Partnership Program may be used only to
-- program PLD devices (but not masked PLD devices) from Altera.  Any other
-- use of such megafunction design, net list, support information, device
-- programming or simulation file, or any other related documentation or
-- information is prohibited for any other purpose, including, but not
-- limited to modification, reverse engineering, de-compiling, or use with
-- any other silicon devices, unless such use is explicitly licensed under
-- a separate agreement with Altera or a megafunction partner.  Title to
-- the intellectual property, including patents, copyrights, trademarks,
-- trade secrets, or maskworks, embodied in any such megafunction design,
-- net list, support information, device programming or simulation file, or
-- any other related documentation or information provided by Altera or a
-- megafunction partner, remains with Altera, the megafunction partner, or
-- their respective licensors.  No other licenses, including any licenses
-- needed under any third party's intellectual property, are provided herein.
--
-- Warning: do not edit this file!
--
FILES
{
	lpm_add_sub.tdf
	{
		lpm_add_sub [STYLE,DEVICE_FAMILY,CARRY_CHAIN_LENGTH=32,CARRY_CHAIN=IGNORE,OPTIMIZE_FOR_SPEED=5,MAXIMIZE_SPEED=5,LPM_PIPELINE=0,ONE_INPUT_IS_CONSTANT=NO,LPM_DIRECTION=DEFAULT,LPM_REPRESENTATION=SIGNED,LPM_WIDTH,USE_LPM_FOR_AHDL_OPERATORS] [lpm_add_sub.inc,addcore.inc,look_add.inc,bypassff.inc,altshift.inc,aglobal.inc]
		{
			2 [STYLE=NORMAL,DEVICE_FAMILY=MAX7000S,CARRY_CHAIN_LENGTH=0,CARRY_CHAIN=IGNORE,OPTIMIZE_FOR_SPEED=5,MAXIMIZE_SPEED=5,LPM_PIPELINE=0,ONE_INPUT_IS_CONSTANT=YES,LPM_DIRECTION=ADD,LPM_REPRESENTATION=UNSIGNED,LPM_WIDTH=3,USE_LPM_FOR_AHDL_OPERATORS=OFF] [DATAA2,DATAA1,DATAA0,DATAB2,DATAB1,DATAB0,RESULT0,RESULT1,RESULT2];
			7 [STYLE=NORMAL,DEVICE_FAMILY=MAX7000S,CARRY_CHAIN_LENGTH=0,CARRY_CHAIN=IGNORE,OPTIMIZE_FOR_SPEED=5,MAXIMIZE_SPEED=5,LPM_PIPELINE=0,ONE_INPUT_IS_CONSTANT=YES,LPM_DIRECTION=ADD,LPM_REPRESENTATION=UNSIGNED,LPM_WIDTH=11,USE_LPM_FOR_AHDL_OPERATORS=OFF] [DATAA10,DATAA9,DATAA8,DATAA7,DATAA6,DATAA5,DATAA4,DATAA3,DATAA2,DATAA1,DATAA0,DATAB10,DATAB9,DATAB8,DATAB7,DATAB6,DATAB5,DATAB4,DATAB3,DATAB2,DATAB1,DATAB0,RESULT0,RESULT1,RESULT2,RESULT3,RESULT4,RESULT5,RESULT6,RESULT7,RESULT8,RESULT9,RESULT10];
		}
	}
	addcore.tdf
	{
		addcore [DEVICE_FAMILY,CARRY_CHAIN_LENGTH,CARRY_CHAIN,CONSTANT_CIN,width,USE_LPM_FOR_AHDL_OPERATORS] [addcore.inc,aglobal.inc]
		{
			3 [DEVICE_FAMILY=MAX7000S,CARRY_CHAIN_LENGTH=0,CARRY_CHAIN=IGNORE,CONSTANT_CIN=1,width=3,USE_LPM_FOR_AHDL_OPERATORS=OFF] [cin,datab0,datab1,datab2,dataa0,dataa1,dataa2,result0,result1,result2];
			4 [DEVICE_FAMILY=MAX7000S,CARRY_CHAIN_LENGTH=0,CARRY_CHAIN=IGNORE,CONSTANT_CIN=1,width=8,USE_LPM_FOR_AHDL_OPERATORS=OFF] [cin,datab0,datab1,datab2,dataa0,dataa1,dataa2,result0,result1,result2,result3];
			8 [DEVICE_FAMILY=MAX7000S,CARRY_CHAIN_LENGTH=0,CARRY_CHAIN=IGNORE,CONSTANT_CIN=1,width=11,USE_LPM_FOR_AHDL_OPERATORS=OFF] [cin,datab0,datab1,datab2,datab3,datab4,datab5,datab6,datab7,datab8,datab9,datab10,dataa0,dataa1,dataa2,dataa3,dataa4,dataa5,dataa6,dataa7,dataa8,dataa9,dataa10,result0,result1,result2,result3,result4,result5,result6,result7,result8,result9,result10];
			9 [DEVICE_FAMILY=MAX7000S,CARRY_CHAIN_LENGTH=0,CARRY_CHAIN=IGNORE,CONSTANT_CIN=1,width=8,USE_LPM_FOR_AHDL_OPERATORS=OFF] [cin,datab0,datab1,datab2,datab3,datab4,datab5,datab6,datab7,dataa0,dataa1,dataa2,dataa3,dataa4,dataa5,dataa6,dataa7,cout,result0,result1,result2,result3,result4,result5,result6,result7];
		}
	}
	altshift.tdf
	{
		altshift [DEPTH=0,WIDTH=4,USE_LPM_FOR_AHDL_OPERATORS] []
		{
			5 [DEPTH=0,WIDTH=3,USE_LPM_FOR_AHDL_OPERATORS=OFF] [data0,data1,data2,result0,result1,result2];
			6 [DEPTH=0,WIDTH=1,USE_LPM_FOR_AHDL_OPERATORS=OFF] [data0,result0];
			10 [DEPTH=0,WIDTH=11,USE_LPM_FOR_AHDL_OPERATORS=OFF] [data0,data1,data2,data3,data4,data5,data6,data7,data8,data9,data10,result0,result1,result2,result3,result4,result5,result6,result7,result8,result9,result10];
		}
	}
}
TREE
{
	ip::(0,0):(0): ip.gdf
	{
		divf8::(0,0):(38): divf8.v
		{
			lpm_add_sub:2:(36,0):(2020): lpm_add_sub.tdf
			{
				addcore:3:(212,4):(43,adder): addcore.tdf
				{
					addcore:4:(178,10):(40,adder0): addcore.tdf;
				}
				altshift:5:(222,2):(59,result_ext_latency_ffs): altshift.tdf;
				altshift:6:(224,2):(71,carry_ext_latency_ffs): altshift.tdf;
				altshift:6:(226,2):(79,oflow_ext_latency_ffs): altshift.tdf;
			}
			lpm_add_sub:7:(35,0):(2021): lpm_add_sub.tdf
			{
				addcore:8:(212,4):(67,adder): addcore.tdf
				{
					addcore:4:(178,10):(64,adder1): addcore.tdf;
					addcore:9:(178,10):(94,adder0): addcore.tdf;
				}
				altshift:10:(222,2):(107,result_ext_latency_ffs): altshift.tdf;
				altshift:6:(224,2):(135,carry_ext_latency_ffs): altshift.tdf;
				altshift:6:(226,2):(143,oflow_ext_latency_ffs): altshift.tdf;
			}
		}
		decode::(0,0):(50): decode.v;
	}
}
