Project Information                 f:\cz\cpldprogram\ippbx406\ippbx\divf8.rpt

MAX+plus II Compiler Report File
Version 10.2 07/10/2002
Compiled: 04/06/2005 09:44:50

Copyright (C) 1988-2002 Altera Corporation
Any megafunction design, and related net list (encrypted or decrypted),
support information, device programming or simulation file, and any other
associated documentation or information provided by Altera or a partner
under Altera's Megafunction Partnership Program may be used only to
program PLD devices (but not masked PLD devices) from Altera.  Any other
use of such megafunction design, net list, support information, device
programming or simulation file, or any other related documentation or
information is prohibited for any other purpose, including, but not
limited to modification, reverse engineering, de-compiling, or use with
any other silicon devices, unless such use is explicitly licensed under
a separate agreement with Altera or a megafunction partner.  Title to
the intellectual property, including patents, copyrights, trademarks,
trade secrets, or maskworks, embodied in any such megafunction design,
net list, support information, device programming or simulation file, or
any other related documentation or information provided by Altera or a
megafunction partner, remains with Altera, the megafunction partner, or
their respective licensors.  No other licenses, including any licenses
needed under any third party's intellectual property, are provided herein.



***** Project compilation was successful




** DEVICE SUMMARY **

Chip/                     Input   Output   Bidir         Shareable
POF       Device          Pins    Pins     Pins     LCs  Expanders  % Utilized

divf8     EPM7064SLC44-5   2        13       0      39      0           60 %

User Pins:                 2        13       0  



Project Information                 f:\cz\cpldprogram\ippbx406\ippbx\divf8.rpt

** AUTO GLOBAL SIGNALS **



INFO: Signal 'clk' chosen for auto global Clock


Project Information                 f:\cz\cpldprogram\ippbx406\ippbx\divf8.rpt

** FILE HIERARCHY **



|lpm_add_sub:2020|
|lpm_add_sub:2020|addcore:adder|
|lpm_add_sub:2020|addcore:adder|addcore:adder0|
|lpm_add_sub:2020|altshift:result_ext_latency_ffs|
|lpm_add_sub:2020|altshift:carry_ext_latency_ffs|
|lpm_add_sub:2020|altshift:oflow_ext_latency_ffs|
|lpm_add_sub:2021|
|lpm_add_sub:2021|addcore:adder|
|lpm_add_sub:2021|addcore:adder|addcore:adder1|
|lpm_add_sub:2021|addcore:adder|addcore:adder0|
|lpm_add_sub:2021|altshift:result_ext_latency_ffs|
|lpm_add_sub:2021|altshift:carry_ext_latency_ffs|
|lpm_add_sub:2021|altshift:oflow_ext_latency_ffs|


Device-Specific Information:        f:\cz\cpldprogram\ippbx406\ippbx\divf8.rpt
divf8

***** Logic for device 'divf8' compiled without errors.




Device: EPM7064SLC44-5

Device Options:
    Turbo Bit                                    = ON
    Security Bit                                 = OFF
    Enable JTAG Support                        = ON
    User Code                                  = ffff

              R  R  R                    R  R  
              E  E  E                    E  E  
              S  S  S                    S  S  
              E  E  E                    E  E  
              R  R  R                    R  R  
              V  V  V  V  G  G  G  c  G  V  V  
              E  E  E  C  N  N  N  l  N  E  E  
              D  D  D  C  D  D  D  k  D  D  D  
            -----------------------------------_ 
          /   6  5  4  3  2  1 44 43 42 41 40   | 
    #TDI |  7                                39 | RESERVED 
RESERVED |  8                                38 | #TDO 
RESERVED |  9                                37 | RESERVED 
     GND | 10                                36 | RESERVED 
RESERVED | 11                                35 | VCC 
    rest | 12         EPM7064SLC44-5         34 | RESERVED 
    #TMS | 13                                33 | RESERVED 
RESERVED | 14                                32 | #TCK 
     VCC | 15                                31 | clk2 
    fsr6 | 16                                30 | GND 
   frame | 17                                29 | fsr 
         |_  18 19 20 21 22 23 24 25 26 27 28  _| 
           ------------------------------------ 
              f  f  c  f  G  V  f  f  f  f  f  
              s  s  l  s  N  C  s  s  s  s  s  
              r  r  k  r  D  C  r  r  r  r  r  
              9  7  1  8        3  4  5  2  1  
                                               
                                               
                                               
                                               


N.C. = No Connect. This pin has no internal connection to the device.
VCC = Dedicated power pin, which MUST be connected to VCC.
GND = Dedicated ground pin or unused dedicated input, which MUST be connected to GND.
RESERVED = Unused I/O pin, which MUST be left unconnected.

^ = Dedicated configuration pin.
+ = Reserved configuration pin, which is tri-stated during user mode.
* = Reserved configuration pin, which drives out in user mode.
PDn = Power Down pin. 
@ = Special-purpose pin. 
# = JTAG Boundary-Scan Testing/In-System Programming or Configuration Pin. The JTAG inputs TMS and TDI should be tied to VCC and TCK should be tied to GND when not in use.
& = JTAG pin used for I/O. When used as user I/O, JTAG pins must be kept stable before and during configuration.  JTAG pin stability prevents accidental loading of JTAG instructions.


Device-Specific Information:        f:\cz\cpldprogram\ippbx406\ippbx\divf8.rpt
divf8

** RESOURCE USAGE **

                                                Shareable     External
Logic Array Block     Logic Cells   I/O Pins    Expanders   Interconnect

A:     LC1 - LC16     0/16(  0%)   2/ 8( 25%)   0/16(  0%)   0/36(  0%) 
B:    LC17 - LC32     7/16( 43%)   7/ 8( 87%)   0/16(  0%)  17/36( 47%) 
C:    LC33 - LC48    16/16(100%)   8/ 8(100%)   0/16(  0%)  24/36( 66%) 
D:    LC49 - LC64    16/16(100%)   1/ 8( 12%)   0/16(  0%)  12/36( 33%) 


Total dedicated input pins used:                 1/4      ( 25%)
Total I/O pins used:                            18/32     ( 56%)
Total logic cells used:                         39/64     ( 60%)
Total shareable expanders used:                  0/64     (  0%)
Total Turbo logic cells used:                   39/64     ( 60%)
Total shareable expanders not available (n/a):   0/64     (  0%)
Average fan-in:                                  8.56
Total fan-in:                                   334

Total input pins required:                       2
Total fast input logic cells required:           0
Total output pins required:                     13
Total bidirectional pins required:               0
Total reserved pins required                     4
Total logic cells required:                     39
Total flipflops required:                       27
Total product terms required:                   92
Total logic cells lending parallel expanders:    0
Total shareable expanders in database:           0

Synthesized logic cells:                         0/  64   (  0%)



Device-Specific Information:        f:\cz\cpldprogram\ippbx406\ippbx\divf8.rpt
divf8

** INPUTS **

                                         Shareable
                                         Expanders     Fan-In    Fan-Out
 Pin     LC  LAB  Primitive    Code   Total Shared n/a INP  FBK  OUT  FBK  Name
  43      -   -       INPUT  G            0      0   0    0    0    0    0  clk
  12    (1)  (A)      INPUT               0      0   0    0    0   13   14  rest


Code:

s = Synthesized pin or logic cell
t = Turbo logic cell
+ = Synchronous flipflop
/ = Slow slew-rate output
! = NOT gate push-back
r = Fitter-inserted logic cell
G = Global Source. Fan-out destinations counted here do not include destinations
that are driven using global routing resources. Refer to the Auto Global Signals,
Clock Signals, Clear Signals, Synchronous Load Signals, and Synchronous Clear Signals
Sections of this Report File for information on which signals' fan-outs are used as
Clock, Clear, Preset, Output Enable, and synchronous Load signals.


Device-Specific Information:        f:\cz\cpldprogram\ippbx406\ippbx\divf8.rpt
divf8

** OUTPUTS **

                                         Shareable
                                         Expanders     Fan-In    Fan-Out
 Pin     LC  LAB  Primitive    Code   Total Shared n/a INP  FBK  OUT  FBK  Name
  20     19    B         FF   +  t        0      0   0    1    0    0    0  clk1
  31     46    C         FF   +  t !      0      0   0    1    3    0    0  clk2 (:44)
  17     24    B         FF   +  t        0      0   0    1   12    1    0  frame
  29     41    C         FF   +  t        0      0   0    1   12    1    0  fsr
  28     40    C         FF   +  t        0      0   0    1   12    1    0  fsr1
  27     37    C         FF   +  t        0      0   0    1   12    1    0  fsr2
  24     33    C         FF   +  t        0      0   0    1   12    1    0  fsr3
  25     35    C         FF   +  t        0      0   0    1   12    1    0  fsr4
  26     36    C         FF   +  t        0      0   0    1   12    1    0  fsr5
  16     25    B         FF   +  t        0      0   0    1   12    1    0  fsr6
  19     20    B         FF   +  t        0      0   0    1   12    1    0  fsr7
  21     17    B         FF   +  t        0      0   0    1   12    1    0  fsr8
  18     21    B         FF   +  t        0      0   0    1   12    1    0  fsr9


Code:

s = Synthesized pin or logic cell
t = Turbo logic cell
+ = Synchronous flipflop
/ = Slow slew-rate output
! = NOT gate push-back
r = Fitter-inserted logic cell


Device-Specific Information:        f:\cz\cpldprogram\ippbx406\ippbx\divf8.rpt
divf8

** BURIED LOGIC **

                                         Shareable
                                         Expanders     Fan-In    Fan-Out
 Pin     LC  LAB  Primitive    Code   Total Shared n/a INP  FBK  OUT  FBK  Name
   -     38    C       SOFT      t        0      0   0    0    2    0    1  |lpm_add_sub:2020|addcore:adder|addcore:adder0|result_node1
 (32)    48    C       SOFT      t        0      0   0    0    3    0    1  |lpm_add_sub:2020|addcore:adder|addcore:adder0|result_node2
   -     43    C       SOFT      t        0      0   0    0    2   11    1  |lpm_add_sub:2021|addcore:adder|addcore:adder0|result_node1
 (40)    62    D       SOFT      t        0      0   0    0    3   11    1  |lpm_add_sub:2021|addcore:adder|addcore:adder0|result_node2
   -     61    D       SOFT      t        0      0   0    0    4   11    1  |lpm_add_sub:2021|addcore:adder|addcore:adder0|result_node3
   -     60    D       SOFT      t        0      0   0    0    5   11    1  |lpm_add_sub:2021|addcore:adder|addcore:adder0|result_node4
   -     59    D       SOFT      t        0      0   0    0    6   11    1  |lpm_add_sub:2021|addcore:adder|addcore:adder0|result_node5
   -     58    D       SOFT      t        0      0   0    0    7   11    1  |lpm_add_sub:2021|addcore:adder|addcore:adder0|result_node6
 (39)    57    D       SOFT      t        0      0   0    0    8   11    1  |lpm_add_sub:2021|addcore:adder|addcore:adder0|result_node7
 (36)    52    D       SOFT      t        0      0   0    0    9   11    1  |lpm_add_sub:2021|addcore:adder|addcore:adder1|result_node0
 (34)    51    D       SOFT      t        0      0   0    0   10   11    1  |lpm_add_sub:2021|addcore:adder|addcore:adder1|result_node1
   -     50    D       SOFT      t        0      0   0    0   11   11    1  |lpm_add_sub:2021|addcore:adder|addcore:adder1|result_node2
   -     47    C       TFFE   +  t        0      0   0    1    2    1    1  cnt12 (:37)
   -     45    C       DFFE   +  t        0      0   0    1    3    1    3  cnt11 (:38)
   -     27    B       TFFE   +  t        0      0   0    1    0    1    4  cnt10 (:39)
   -     42    C       DFFE   +  t        0      0   0    1   11    0    1  cnt010 (:1477)
 (41)    64    D       TFFE   +  t        0      0   0    1    9    0    2  cnt09 (:1478)
 (33)    49    D       TFFE   +  t        0      0   0    1    8    0    4  cnt08 (:1479)
 (37)    53    D       TFFE   +  t        0      0   0    1    7    0    6  cnt07 (:1480)
   -     54    D       TFFE   +  t        0      0   0    1    6    0    8  cnt06 (:1481)
   -     55    D       TFFE   +  t        0      0   0    1    5    0   10  cnt05 (:1482)
   -     63    D       TFFE   +  t        0      0   0    1    4    0   12  cnt04 (:1483)
 (38)    56    D       TFFE   +  t        0      0   0    1    3    0   14  cnt03 (:1484)
   -     39    C       TFFE   +  t        0      0   0    1    2    0   16  cnt02 (:1485)
   -     44    C       TFFE   +  t        0      0   0    1    1    0   18  cnt01 (:1486)
   -     34    C       TFFE   +  t        0      0   0    1    0   11   20  cnt00 (:1487)


Code:

s = Synthesized pin or logic cell
t = Turbo logic cell
+ = Synchronous flipflop
/ = Slow slew-rate output
! = NOT gate push-back
r = Fitter-inserted logic cell


Device-Specific Information:        f:\cz\cpldprogram\ippbx406\ippbx\divf8.rpt
divf8

** LOGIC CELL INTERCONNECTIONS **

Logic Array Block 'B':

                       Logic cells placed in LAB 'B'
        +------------- LC19 clk1
        | +----------- LC24 frame
        | | +--------- LC25 fsr6
        | | | +------- LC20 fsr7
        | | | | +----- LC17 fsr8
        | | | | | +--- LC21 fsr9
        | | | | | | +- LC27 cnt10
        | | | | | | | 
        | | | | | | |   Other LABs fed by signals
        | | | | | | |   that feed LAB 'B'
LC      | | | | | | | | A B C D |     Logic cells that feed LAB 'B':
LC24 -> - * - - - - - | - * - - | <-- frame
LC25 -> - - * - - - - | - * - - | <-- fsr6
LC20 -> - - - * - - - | - * - - | <-- fsr7
LC17 -> - - - - * - - | - * - - | <-- fsr8
LC21 -> - - - - - * - | - * - - | <-- fsr9

Pin
43   -> - - - - - - - | - - - - | <-- clk
12   -> * * * * * * * | - * * * | <-- rest
LC43 -> - * * * * * - | - * * - | <-- |lpm_add_sub:2021|addcore:adder|addcore:adder0|result_node1
LC62 -> - * * * * * - | - * * - | <-- |lpm_add_sub:2021|addcore:adder|addcore:adder0|result_node2
LC61 -> - * * * * * - | - * * - | <-- |lpm_add_sub:2021|addcore:adder|addcore:adder0|result_node3
LC60 -> - * * * * * - | - * * - | <-- |lpm_add_sub:2021|addcore:adder|addcore:adder0|result_node4
LC59 -> - * * * * * - | - * * - | <-- |lpm_add_sub:2021|addcore:adder|addcore:adder0|result_node5
LC58 -> - * * * * * - | - * * - | <-- |lpm_add_sub:2021|addcore:adder|addcore:adder0|result_node6
LC57 -> - * * * * * - | - * * - | <-- |lpm_add_sub:2021|addcore:adder|addcore:adder0|result_node7
LC52 -> - * * * * * - | - * * - | <-- |lpm_add_sub:2021|addcore:adder|addcore:adder1|result_node0
LC51 -> - * * * * * - | - * * - | <-- |lpm_add_sub:2021|addcore:adder|addcore:adder1|result_node1
LC50 -> - * * * * * - | - * * - | <-- |lpm_add_sub:2021|addcore:adder|addcore:adder1|result_node2
LC34 -> - * * * * * - | - * * * | <-- cnt00


* = The logic cell or pin is an input to the logic cell (or LAB) through the PIA.
- = The logic cell or pin is not an input to the logic cell (or LAB).


Device-Specific Information:        f:\cz\cpldprogram\ippbx406\ippbx\divf8.rpt
divf8

** LOGIC CELL INTERCONNECTIONS **

Logic Array Block 'C':

                                         Logic cells placed in LAB 'C'
        +------------------------------- LC46 clk2
        | +----------------------------- LC41 fsr
        | | +--------------------------- LC40 fsr1
        | | | +------------------------- LC37 fsr2
        | | | | +----------------------- LC33 fsr3
        | | | | | +--------------------- LC35 fsr4
        | | | | | | +------------------- LC36 fsr5
        | | | | | | | +----------------- LC38 |lpm_add_sub:2020|addcore:adder|addcore:adder0|result_node1
        | | | | | | | | +--------------- LC48 |lpm_add_sub:2020|addcore:adder|addcore:adder0|result_node2
        | | | | | | | | | +------------- LC43 |lpm_add_sub:2021|addcore:adder|addcore:adder0|result_node1
        | | | | | | | | | | +----------- LC47 cnt12
        | | | | | | | | | | | +--------- LC45 cnt11
        | | | | | | | | | | | | +------- LC42 cnt010
        | | | | | | | | | | | | | +----- LC39 cnt02
        | | | | | | | | | | | | | | +--- LC44 cnt01
        | | | | | | | | | | | | | | | +- LC34 cnt00
        | | | | | | | | | | | | | | | | 
        | | | | | | | | | | | | | | | |   Other LABs fed by signals
        | | | | | | | | | | | | | | | |   that feed LAB 'C'
LC      | | | | | | | | | | | | | | | | | A B C D |     Logic cells that feed LAB 'C':
LC41 -> - * - - - - - - - - - - - - - - | - - * - | <-- fsr
LC40 -> - - * - - - - - - - - - - - - - | - - * - | <-- fsr1
LC37 -> - - - * - - - - - - - - - - - - | - - * - | <-- fsr2
LC33 -> - - - - * - - - - - - - - - - - | - - * - | <-- fsr3
LC35 -> - - - - - * - - - - - - - - - - | - - * - | <-- fsr4
LC36 -> - - - - - - * - - - - - - - - - | - - * - | <-- fsr5
LC38 -> - - - - - - - - - - - * - - - - | - - * - | <-- |lpm_add_sub:2020|addcore:adder|addcore:adder0|result_node1
LC48 -> - - - - - - - - - - - * - - - - | - - * - | <-- |lpm_add_sub:2020|addcore:adder|addcore:adder0|result_node2
LC43 -> - * * * * * * - - - - - * - - - | - * * - | <-- |lpm_add_sub:2021|addcore:adder|addcore:adder0|result_node1
LC47 -> * - - - - - - - * - * - - - - - | - - * - | <-- cnt12
LC45 -> * - - - - - - * * - * - - - - - | - - * - | <-- cnt11
LC44 -> - - - - - - - - - * - - - * * - | - - * * | <-- cnt01
LC34 -> - * * * * * * - - * - - * * * * | - * * * | <-- cnt00

Pin
43   -> - - - - - - - - - - - - - - - - | - - - - | <-- clk
12   -> * * * * * * * - - - * * * * * * | - * * * | <-- rest
LC62 -> - * * * * * * - - - - - * - - - | - * * - | <-- |lpm_add_sub:2021|addcore:adder|addcore:adder0|result_node2
LC61 -> - * * * * * * - - - - - * - - - | - * * - | <-- |lpm_add_sub:2021|addcore:adder|addcore:adder0|result_node3
LC60 -> - * * * * * * - - - - - * - - - | - * * - | <-- |lpm_add_sub:2021|addcore:adder|addcore:adder0|result_node4
LC59 -> - * * * * * * - - - - - * - - - | - * * - | <-- |lpm_add_sub:2021|addcore:adder|addcore:adder0|result_node5
LC58 -> - * * * * * * - - - - - * - - - | - * * - | <-- |lpm_add_sub:2021|addcore:adder|addcore:adder0|result_node6
LC57 -> - * * * * * * - - - - - * - - - | - * * - | <-- |lpm_add_sub:2021|addcore:adder|addcore:adder0|result_node7
LC52 -> - * * * * * * - - - - - * - - - | - * * - | <-- |lpm_add_sub:2021|addcore:adder|addcore:adder1|result_node0
LC51 -> - * * * * * * - - - - - * - - - | - * * - | <-- |lpm_add_sub:2021|addcore:adder|addcore:adder1|result_node1
LC50 -> - * * * * * * - - - - - * - - - | - * * - | <-- |lpm_add_sub:2021|addcore:adder|addcore:adder1|result_node2
LC27 -> * - - - - - - * * - * * - - - - | - - * - | <-- cnt10


* = The logic cell or pin is an input to the logic cell (or LAB) through the PIA.
- = The logic cell or pin is not an input to the logic cell (or LAB).


Device-Specific Information:        f:\cz\cpldprogram\ippbx406\ippbx\divf8.rpt
divf8

** LOGIC CELL INTERCONNECTIONS **

Logic Array Block 'D':

                                         Logic cells placed in LAB 'D'
        +------------------------------- LC62 |lpm_add_sub:2021|addcore:adder|addcore:adder0|result_node2
        | +----------------------------- LC61 |lpm_add_sub:2021|addcore:adder|addcore:adder0|result_node3
        | | +--------------------------- LC60 |lpm_add_sub:2021|addcore:adder|addcore:adder0|result_node4
        | | | +------------------------- LC59 |lpm_add_sub:2021|addcore:adder|addcore:adder0|result_node5
        | | | | +----------------------- LC58 |lpm_add_sub:2021|addcore:adder|addcore:adder0|result_node6
        | | | | | +--------------------- LC57 |lpm_add_sub:2021|addcore:adder|addcore:adder0|result_node7
        | | | | | | +------------------- LC52 |lpm_add_sub:2021|addcore:adder|addcore:adder1|result_node0
        | | | | | | | +----------------- LC51 |lpm_add_sub:2021|addcore:adder|addcore:adder1|result_node1
        | | | | | | | | +--------------- LC50 |lpm_add_sub:2021|addcore:adder|addcore:adder1|result_node2
        | | | | | | | | | +------------- LC64 cnt09
        | | | | | | | | | | +----------- LC49 cnt08
        | | | | | | | | | | | +--------- LC53 cnt07
        | | | | | | | | | | | | +------- LC54 cnt06
        | | | | | | | | | | | | | +----- LC55 cnt05
        | | | | | | | | | | | | | | +--- LC63 cnt04
        | | | | | | | | | | | | | | | +- LC56 cnt03
        | | | | | | | | | | | | | | | | 
        | | | | | | | | | | | | | | | |   Other LABs fed by signals
        | | | | | | | | | | | | | | | |   that feed LAB 'D'
LC      | | | | | | | | | | | | | | | | | A B C D |     Logic cells that feed LAB 'D':
LC64 -> - - - - - - - * * * - - - - - - | - - - * | <-- cnt09
LC49 -> - - - - - - * * * * * - - - - - | - - - * | <-- cnt08
LC53 -> - - - - - * * * * * * * - - - - | - - - * | <-- cnt07
LC54 -> - - - - * * * * * * * * * - - - | - - - * | <-- cnt06
LC55 -> - - - * * * * * * * * * * * - - | - - - * | <-- cnt05
LC63 -> - - * * * * * * * * * * * * * - | - - - * | <-- cnt04
LC56 -> - * * * * * * * * * * * * * * * | - - - * | <-- cnt03

Pin
43   -> - - - - - - - - - - - - - - - - | - - - - | <-- clk
12   -> - - - - - - - - - * * * * * * * | - * * * | <-- rest
LC42 -> - - - - - - - - * - - - - - - - | - - - * | <-- cnt010
LC39 -> * * * * * * * * * * * * * * * * | - - - * | <-- cnt02
LC44 -> * * * * * * * * * * * * * * * * | - - * * | <-- cnt01
LC34 -> * * * * * * * * * * * * * * * * | - * * * | <-- cnt00


* = The logic cell or pin is an input to the logic cell (or LAB) through the PIA.
- = The logic cell or pin is not an input to the logic cell (or LAB).


Device-Specific Information:        f:\cz\cpldprogram\ippbx406\ippbx\divf8.rpt
divf8

** EQUATIONS **

clk      : INPUT;
rest     : INPUT;

-- Node name is 'clk1' = ':18' 
-- Equation name is 'clk1', type is output 
 clk1    = TFFE( VCC, GLOBAL(!clk), !rest,  VCC,  VCC);

-- Node name is 'clk2' = 'clk2_reg' 
-- Equation name is 'clk2', location is LC046, type is output.
clk2     = clk2_reg~NOT;
clk2_reg~NOT = TFFE( VCC, GLOBAL(!clk),  VCC, !rest,  _EQ001);
  _EQ001 =  cnt10 & !cnt11 & !cnt12;

-- Node name is ':1487' = 'cnt00' 
-- Equation name is 'cnt00', location is LC034, type is buried.
cnt00    = TFFE( VCC, GLOBAL(!clk), !rest,  VCC,  VCC);

-- Node name is ':1486' = 'cnt01' 
-- Equation name is 'cnt01', location is LC044, type is buried.
cnt01    = TFFE( cnt00, GLOBAL(!clk), !rest,  VCC,  VCC);

-- Node name is ':1485' = 'cnt02' 
-- Equation name is 'cnt02', location is LC039, type is buried.
cnt02    = TFFE( _EQ002, GLOBAL(!clk), !rest,  VCC,  VCC);
  _EQ002 =  cnt00 &  cnt01;

-- Node name is ':1484' = 'cnt03' 
-- Equation name is 'cnt03', location is LC056, type is buried.
cnt03    = TFFE( _EQ003, GLOBAL(!clk), !rest,  VCC,  VCC);
  _EQ003 =  cnt00 &  cnt01 &  cnt02;

-- Node name is ':1483' = 'cnt04' 
-- Equation name is 'cnt04', location is LC063, type is buried.
cnt04    = TFFE( _EQ004, GLOBAL(!clk), !rest,  VCC,  VCC);
  _EQ004 =  cnt00 &  cnt01 &  cnt02 &  cnt03;

-- Node name is ':1482' = 'cnt05' 
-- Equation name is 'cnt05', location is LC055, type is buried.
cnt05    = TFFE( _EQ005, GLOBAL(!clk), !rest,  VCC,  VCC);
  _EQ005 =  cnt00 &  cnt01 &  cnt02 &  cnt03 &  cnt04;

-- Node name is ':1481' = 'cnt06' 
-- Equation name is 'cnt06', location is LC054, type is buried.
cnt06    = TFFE( _EQ006, GLOBAL(!clk), !rest,  VCC,  VCC);
  _EQ006 =  cnt00 &  cnt01 &  cnt02 &  cnt03 &  cnt04 &  cnt05;

-- Node name is ':1480' = 'cnt07' 
-- Equation name is 'cnt07', location is LC053, type is buried.
cnt07    = TFFE( _EQ007, GLOBAL(!clk), !rest,  VCC,  VCC);
  _EQ007 =  cnt00 &  cnt01 &  cnt02 &  cnt03 &  cnt04 &  cnt05 &  cnt06;

-- Node name is ':1479' = 'cnt08' 
-- Equation name is 'cnt08', location is LC049, type is buried.
cnt08    = TFFE( _EQ008, GLOBAL(!clk), !rest,  VCC,  VCC);
  _EQ008 =  cnt00 &  cnt01 &  cnt02 &  cnt03 &  cnt04 &  cnt05 &  cnt06 & 
              cnt07;

-- Node name is ':1478' = 'cnt09' 
-- Equation name is 'cnt09', location is LC064, type is buried.
cnt09    = TFFE( _EQ009, GLOBAL(!clk), !rest,  VCC,  VCC);
  _EQ009 =  cnt00 &  cnt01 &  cnt02 &  cnt03 &  cnt04 &  cnt05 &  cnt06 & 
              cnt07 &  cnt08;

-- Node name is ':1477' = 'cnt010' 
-- Equation name is 'cnt010', location is LC042, type is buried.
cnt010   = DFFE( _EQ010 $  _LC050, GLOBAL(!clk), !rest,  VCC,  VCC);
  _EQ010 =  cnt00 & !_LC043 &  _LC050 & !_LC051 & !_LC052 & !_LC057 & !_LC058 & 
             !_LC059 & !_LC060 & !_LC061 & !_LC062;

-- Node name is ':39' = 'cnt10' 
-- Equation name is 'cnt10', location is LC027, type is buried.
cnt10    = TFFE( VCC, GLOBAL(!clk), !rest,  VCC,  VCC);

-- Node name is ':38' = 'cnt11' 
-- Equation name is 'cnt11', location is LC045, type is buried.
cnt11    = DFFE( _EQ011 $  _LC038, GLOBAL(!clk), !rest,  VCC,  VCC);
  _EQ011 =  cnt10 &  _LC038 & !_LC048;

-- Node name is ':37' = 'cnt12' 
-- Equation name is 'cnt12', location is LC047, type is buried.
cnt12    = TFFE( _EQ012, GLOBAL(!clk), !rest,  VCC,  VCC);
  _EQ012 =  cnt10 &  cnt11;

-- Node name is 'frame' = ':2019' 
-- Equation name is 'frame', type is output 
 frame   = TFFE( _EQ013, GLOBAL(!clk),  VCC, !rest,  VCC);
  _EQ013 = !cnt00 &  frame &  _LC043 & !_LC050 & !_LC051 & !_LC052 & !_LC057 & 
             !_LC058 & !_LC059 & !_LC060 &  _LC061 &  _LC062
         # !cnt00 & !frame & !_LC043 & !_LC050 & !_LC051 & !_LC052 & !_LC057 & 
             !_LC058 & !_LC059 &  _LC060 & !_LC061 & !_LC062;

-- Node name is 'fsr' = ':1926' 
-- Equation name is 'fsr', type is output 
 fsr     = TFFE( _EQ014, GLOBAL(!clk), !rest,  VCC,  VCC);
  _EQ014 =  cnt00 &  fsr & !_LC043 & !_LC050 &  _LC051 & !_LC052 & !_LC057 & 
             !_LC058 & !_LC059 &  _LC060 & !_LC061 & !_LC062
         #  cnt00 & !fsr & !_LC043 & !_LC050 & !_LC051 & !_LC052 & !_LC057 & 
             !_LC058 & !_LC059 &  _LC060 & !_LC061 & !_LC062;

-- Node name is 'fsr1' = ':1514' 
-- Equation name is 'fsr1', type is output 
 fsr1    = TFFE( _EQ015, GLOBAL(!clk), !rest,  VCC,  VCC);
  _EQ015 =  cnt00 &  fsr1 & !_LC043 & !_LC050 & !_LC051 & !_LC052 & !_LC057 & 
             !_LC058 &  _LC059 & !_LC060 & !_LC061 & !_LC062
         #  cnt00 & !fsr1 & !_LC043 & !_LC050 & !_LC051 & !_LC052 & !_LC057 & 
             !_LC058 & !_LC059 &  _LC060 & !_LC061 & !_LC062;

-- Node name is 'fsr2' = ':1538' 
-- Equation name is 'fsr2', type is output 
 fsr2    = TFFE( _EQ016, GLOBAL(!clk), !rest,  VCC,  VCC);
  _EQ016 =  cnt00 & !fsr2 & !_LC043 & !_LC050 & !_LC051 & !_LC052 & !_LC057 & 
             !_LC058 &  _LC059 &  _LC060 & !_LC061 & !_LC062
         #  cnt00 &  fsr2 & !_LC043 & !_LC050 & !_LC051 & !_LC052 & !_LC057 & 
              _LC058 & !_LC059 & !_LC060 & !_LC061 & !_LC062;

-- Node name is 'fsr3' = ':1570' 
-- Equation name is 'fsr3', type is output 
 fsr3    = TFFE( _EQ017, GLOBAL(!clk), !rest,  VCC,  VCC);
  _EQ017 =  cnt00 &  fsr3 & !_LC043 & !_LC050 & !_LC051 & !_LC052 & !_LC057 & 
              _LC058 &  _LC059 & !_LC060 & !_LC061 & !_LC062
         #  cnt00 & !fsr3 & !_LC043 & !_LC050 & !_LC051 & !_LC052 & !_LC057 & 
              _LC058 & !_LC059 &  _LC060 & !_LC061 & !_LC062;

-- Node name is 'fsr4' = ':1610' 
-- Equation name is 'fsr4', type is output 
 fsr4    = TFFE( _EQ018, GLOBAL(!clk), !rest,  VCC,  VCC);
  _EQ018 =  cnt00 & !fsr4 & !_LC043 & !_LC050 & !_LC051 & !_LC052 & !_LC057 & 
              _LC058 &  _LC059 &  _LC060 & !_LC061 & !_LC062
         #  cnt00 &  fsr4 & !_LC043 & !_LC050 & !_LC051 & !_LC052 &  _LC057 & 
             !_LC058 & !_LC059 & !_LC060 & !_LC061 & !_LC062;

-- Node name is 'fsr5' = ':1658' 
-- Equation name is 'fsr5', type is output 
 fsr5    = TFFE( _EQ019, GLOBAL(!clk), !rest,  VCC,  VCC);
  _EQ019 =  cnt00 &  fsr5 & !_LC043 & !_LC050 & !_LC051 & !_LC052 &  _LC057 & 
             !_LC058 &  _LC059 & !_LC060 & !_LC061 & !_LC062
         #  cnt00 & !fsr5 & !_LC043 & !_LC050 & !_LC051 & !_LC052 &  _LC057 & 
             !_LC058 & !_LC059 &  _LC060 & !_LC061 & !_LC062;

-- Node name is 'fsr6' = ':1714' 
-- Equation name is 'fsr6', type is output 
 fsr6    = TFFE( _EQ020, GLOBAL(!clk), !rest,  VCC,  VCC);
  _EQ020 =  cnt00 & !fsr6 & !_LC043 & !_LC050 & !_LC051 & !_LC052 &  _LC057 & 
             !_LC058 &  _LC059 &  _LC060 & !_LC061 & !_LC062
         #  cnt00 &  fsr6 & !_LC043 & !_LC050 & !_LC051 & !_LC052 &  _LC057 & 
              _LC058 & !_LC059 & !_LC060 & !_LC061 & !_LC062;

-- Node name is 'fsr7' = ':1778' 
-- Equation name is 'fsr7', type is output 
 fsr7    = TFFE( _EQ021, GLOBAL(!clk), !rest,  VCC,  VCC);
  _EQ021 =  cnt00 &  fsr7 & !_LC043 & !_LC050 & !_LC051 & !_LC052 &  _LC057 & 
              _LC058 &  _LC059 & !_LC060 & !_LC061 & !_LC062
         #  cnt00 & !fsr7 & !_LC043 & !_LC050 & !_LC051 & !_LC052 &  _LC057 & 
              _LC058 & !_LC059 &  _LC060 & !_LC061 & !_LC062;

-- Node name is 'fsr8' = ':1850' 
-- Equation name is 'fsr8', type is output 
 fsr8    = TFFE( _EQ022, GLOBAL(!clk), !rest,  VCC,  VCC);
  _EQ022 =  cnt00 & !fsr8 & !_LC043 & !_LC050 & !_LC051 & !_LC052 &  _LC057 & 
              _LC058 &  _LC059 &  _LC060 & !_LC061 & !_LC062
         #  cnt00 &  fsr8 & !_LC043 & !_LC050 & !_LC051 &  _LC052 & !_LC057 & 
             !_LC058 & !_LC059 & !_LC060 & !_LC061 & !_LC062;

-- Node name is 'fsr9' = ':2006' 
-- Equation name is 'fsr9', type is output 
 fsr9    = TFFE( _EQ023, GLOBAL(!clk),  VCC,  VCC, !rest);
  _EQ023 =  cnt00 &  fsr9 & !_LC043 & !_LC050 &  _LC051 & !_LC052 &  _LC057 & 
             !_LC058 & !_LC059 &  _LC060 & !_LC061 & !_LC062
         #  cnt00 & !fsr9 & !_LC043 & !_LC050 & !_LC051 & !_LC052 &  _LC057 & 
             !_LC058 & !_LC059 &  _LC060 & !_LC061 & !_LC062;

-- Node name is '|lpm_add_sub:2020|addcore:adder|addcore:adder0|result_node1' from file "addcore.tdf" line 164, column 16
-- Equation name is '_LC038', type is buried 
_LC038   = LCELL(!cnt11 $ !cnt10);

-- Node name is '|lpm_add_sub:2020|addcore:adder|addcore:adder0|result_node2' from file "addcore.tdf" line 164, column 16
-- Equation name is '_LC048', type is buried 
_LC048   = LCELL( cnt12 $  _EQ024);
  _EQ024 =  cnt10 &  cnt11;

-- Node name is '|lpm_add_sub:2021|addcore:adder|addcore:adder0|result_node1' from file "addcore.tdf" line 164, column 16
-- Equation name is '_LC043', type is buried 
_LC043   = LCELL(!cnt01 $ !cnt00);

-- Node name is '|lpm_add_sub:2021|addcore:adder|addcore:adder0|result_node2' from file "addcore.tdf" line 164, column 16
-- Equation name is '_LC062', type is buried 
_LC062   = LCELL( cnt02 $  _EQ002);

-- Node name is '|lpm_add_sub:2021|addcore:adder|addcore:adder0|result_node3' from file "addcore.tdf" line 164, column 16
-- Equation name is '_LC061', type is buried 
_LC061   = LCELL( cnt03 $  _EQ003);

-- Node name is '|lpm_add_sub:2021|addcore:adder|addcore:adder0|result_node4' from file "addcore.tdf" line 164, column 16
-- Equation name is '_LC060', type is buried 
_LC060   = LCELL( cnt04 $  _EQ004);

-- Node name is '|lpm_add_sub:2021|addcore:adder|addcore:adder0|result_node5' from file "addcore.tdf" line 164, column 16
-- Equation name is '_LC059', type is buried 
_LC059   = LCELL( cnt05 $  _EQ005);

-- Node name is '|lpm_add_sub:2021|addcore:adder|addcore:adder0|result_node6' from file "addcore.tdf" line 164, column 16
-- Equation name is '_LC058', type is buried 
_LC058   = LCELL( cnt06 $  _EQ006);

-- Node name is '|lpm_add_sub:2021|addcore:adder|addcore:adder0|result_node7' from file "addcore.tdf" line 164, column 16
-- Equation name is '_LC057', type is buried 
_LC057   = LCELL( cnt07 $  _EQ007);

-- Node name is '|lpm_add_sub:2021|addcore:adder|addcore:adder1|result_node0' from file "addcore.tdf" line 164, column 16
-- Equation name is '_LC052', type is buried 
_LC052   = LCELL( cnt08 $  _EQ008);

-- Node name is '|lpm_add_sub:2021|addcore:adder|addcore:adder1|result_node1' from file "addcore.tdf" line 164, column 16
-- Equation name is '_LC051', type is buried 
_LC051   = LCELL( cnt09 $  _EQ009);

-- Node name is '|lpm_add_sub:2021|addcore:adder|addcore:adder1|result_node2' from file "addcore.tdf" line 164, column 16
-- Equation name is '_LC050', type is buried 
_LC050   = LCELL( cnt010 $  _EQ025);
  _EQ025 =  cnt00 &  cnt01 &  cnt02 &  cnt03 &  cnt04 &  cnt05 &  cnt06 & 
              cnt07 &  cnt08 &  cnt09;



--     Shareable expanders that are duplicated in multiple LABs:
--     (none)




Project Information                 f:\cz\cpldprogram\ippbx406\ippbx\divf8.rpt

** COMPILATION SETTINGS & TIMES **

Processing Menu Commands
------------------------

Design Doctor                             = off

Logic Synthesis:

   Synthesis Type Used                    = Standard

   Default Synthesis Style                = NORMAL

      Logic option settings in 'NORMAL' style for 'MAX7000S' family

      DECOMPOSE_GATES                     = on
      DUPLICATE_LOGIC_EXTRACTION          = on
      MINIMIZATION                        = full
      MULTI_LEVEL_FACTORING               = on
      NOT_GATE_PUSH_BACK                  = on
      PARALLEL_EXPANDERS                  = off
      REDUCE_LOGIC                        = on
      REFACTORIZATION                     = on
      REGISTER_OPTIMIZATION               = on
      RESYNTHESIZE_NETWORK                = on
      SLOW_SLEW_RATE                      = off
      SOFT_BUFFER_INSERTION               = on
      SUBFACTOR_EXTRACTION                = on
      TURBO_BIT                           = on
      XOR_SYNTHESIS                       = on
      IGNORE_SOFT_BUFFERS                 = off
      USE_LPM_FOR_AHDL_OPERATORS          = off

   Other logic synthesis settings:

      Automatic Global Clock              = on
      Automatic Global Clear              = on
      Automatic Global Preset             = on
      Automatic Global Output Enable      = on
      Automatic Fast I/O                  = off
      Automatic Register Packing          = off
      Automatic Open-Drain Pins           = on
      Automatic Implement in EAB          = off
      One-Hot State Machine Encoding      = off
      Optimize                            = 5

Default Timing Specifications: None

Cut All Bidir Feedback Timing Paths       = on
Cut All Clear & Preset Timing Paths       = on

Ignore Timing Assignments                 = off

Functional SNF Extractor                  = off

Linked SNF Extractor                      = off
Timing SNF Extractor                      = on
Optimize Timing SNF                       = off
Generate AHDL TDO File                    = off
Fitter Settings                           = NORMAL
Smart Recompile                           = off
Total Recompile                           = off

Interfaces Menu Commands
------------------------

EDIF Netlist Writer                       = off
Verilog Netlist Writer                    = off
VHDL Netlist Writer                       = off

Compilation Times
-----------------

   Compiler Netlist Extractor             00:00:00
   Database Builder                       00:00:01
   Logic Synthesizer                      00:00:05
   Partitioner                            00:00:03
   Fitter                                 00:00:02
   Timing SNF Extractor                   00:00:01
   Assembler                              00:00:08
   --------------------------             --------
   Total Time                             00:00:20


Memory Allocated
-----------------

Peak memory allocated during compilation  = 5,996K
