# Makefile.post for Cdr

OBJS := $(patsubst %.c,$(OBJ_DIR)/%.o,$(patsubst %.cxx,$(OBJ_DIR)/%.o,$(SRC))) $(EXTRA_OBJS)


all:$(BIN_DIR) $(OBJ_DIR) $(LOCAL_ALL) $(TARGET_LIB) $(LOCAL_LAST)

$(OBJ_DIR):
	-if [ -d $(OBJ_DIR) ] ; then : ; else $(MKDIR) $(OBJ_DIR); fi	
ifdef CODE_SUBDIRS
	-@ for subdir in $(CODE_SUBDIRS) ; do ( mkdir -p $(OBJ_DIR)/$$subdir ) ; done
endif

$(BIN_DIR):
	-if [ -d $(BIN_DIR) ] ; then : ; else $(MKDIR) $(BIN_DIR); fi
#ifdef CODE_SUBDIRS
#	-@ for subdir in $(CODE_SUBDIRS) ; do ( mkdir -p $(BIN_DIR)/$$subdir ) ; done
#endif

$(TARGET_LIB): $(OBJS)  
#	$(AR) $(ARFLAGS) $@ $^ 
#	$(RANLIB) $@
	$(CXX) -Wl,-shared -o  $@ $^ $(LDFLAGS)
	$(MOVE) $(TARGET_LIB) $(BIN_DIR)/

$(KERNEL_LIB): $(KOBJS) 
	$(LD) $(K_LDFLAGS) $^ -o $@
	$(MOVE) $(KERNEL_LIB) $(BIN_DIR)/


clean:$(LOCAL_CLEAN)
	-if [ -d $(BIN_DIR) ] ; then $(RM) $(BIN_DIR) ; fi
	-if [ -d $(OBJ_DIR) ] ; then $(RM) $(OBJ_DIR) ; fi

ifeq ($(KERNEL),yes)
$(OBJ_DIR)/%.o: %.c
	$(CC) $(K_CFLAGS) -c $< -o $(OUTPUT_FLAG)$@ 
else
$(OBJ_DIR)/%.o: %.c
	$(CC) $(CFLAGS) -c $< -o $(OUTPUT_FLAG)$@ 
endif

ifeq ($(KERNEL),yes)
$(OBJ_DIR)/%.o: %.cxx
	$(CXX) $(K_CFLAGS) -c $< -o $(OUTPUT_FLAG)$@ 
else
$(OBJ_DIR)/%.o: %.cxx
	$(CXX) $(CFLAGS) -c $< -o $(OUTPUT_FLAG)$@ 
endif
