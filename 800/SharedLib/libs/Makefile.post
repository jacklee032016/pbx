#
# $Author: lizhijie $
# $Log: Makefile.post,v $
# Revision 1.1.1.1  2006/11/30 16:24:17  lizhijie
# AS800 SharedLib
#
# Revision 1.1.1.1  2006/02/21 09:38:37  wangwei
# no message
#
# Revision 1.5  2005/08/02 01:31:49  wuaiwu
# 调整了libs的结构层次,增加了test目录,里面是对共享库接口函数
# 的测试程序
#
# Revision 1.4  2005/07/18 06:12:06  tangr
# reserve only shared libs in bin
#
# Revision 1.3  2005/06/20 09:36:15  lijie
# 串口bug修正,消息队列封装到共享库
#
# Revision 1.2  2005/06/15 06:08:33  wangwei
# no message
#
# Revision 1.1.1.1  2005/05/27 08:43:37  lizhijie
# add shared library and programs depend on it
#
# $Revision: 1.1.1.1 $
# $Id: Makefile.post,v 1.1.1.1 2006/11/30 16:24:17 lizhijie Exp $
#

OBJS := $(patsubst %.c,$(OBJ_DIR)/%.o,$(patsubst %.cxx,$(OBJ_DIR)/%.o,$(SRC))) $(EXTRA_OBJS)
TEST_OBJS := $(patsubst %.c,$(TEST_OBJ_DIR)/%.o,$(patsubst %.cxx,$(TEST_OBJ_DIR)/%.o,$(TEST_SRC))) $(EXTRA_OBJS)


all:$(BIN_DIR) $(OBJ_DIR) $(TEST_BIN_DIR) $(TEST_OBJ_DIR) $(LOCAL_ALL) $(TARGET_LIB) $(LOCAL_LAST) $(LOCAL_test)

$(OBJ_DIR):
	-if [ -d $(OBJ_DIR) ] ; then : ; else $(MKDIR) $(OBJ_DIR); fi	
ifdef CODE_SUBDIRS
	-@ for subdir in $(CODE_SUBDIRS) ; do ( mkdir -p $(OBJ_DIR)/$$subdir ) ; done
endif

#ifdef TEST_CODE_SUBDIRS
#	-@ for subdir in $(TEST_CODE_SUBDIRS) ; do ( mkdir -p $(TEST_OBJ_DIR)/$$subdir ) ; done
#endif

$(BIN_DIR):
	-if [ -d $(BIN_DIR) ] ; then : ; else $(MKDIR) $(BIN_DIR); fi
	
$(TEST_BIN_DIR):
	-if [ -d $(TEST_BIN_DIR) ] ; then : ; else $(MKDIR) $(TEST_BIN_DIR); fi
	
$(TEST_OBJ_DIR):
	-if [ -d $(TEST_OBJ_DIR) ] ; then : ; else $(MKDIR) $(TEST_OBJ_DIR); fi
	


$(TARGET_LIB):$(TARGET_LIB_SHARED)		


#LDFLAGS := -lpthread -lm

$(TARGET_LIB_SHARED):$(OBJS)  

	$(CC) $(LDFLAGS) -shared  $(SHARED_LD_FLAGS) $^ -o $@  #-Wl,-soname 

	$(MOVE) $(TARGET_LIB_SHARED) $(BIN_DIR)/



$(TARGET_LIB_STATIC):$(OBJS)  

	$(AR) $(ARFLAGS) $@ $^ 

	$(RANLIB) $@

	$(MOVE) $(TARGET_LIB_STATIC) $(BIN_DIR)/




$(KERNEL_LIB): $(KOBJS) 
	$(LD) $(K_LDFLAGS) $^ -o $@
	$(MOVE) $(KERNEL_LIB) $(BIN_DIR)/


clean:$(LOCAL_CLEAN)
	-if [ -d $(BIN_DIR) ] ; then $(RM) $(BIN_DIR) ; fi
	-if [ -d $(OBJ_DIR) ] ; then $(RM) $(OBJ_DIR) ; fi
	-if [ -d $(TEST_BIN_DIR) ] ; then $(RM) $(TEST_BIN_DIR) ; fi
	-if [ -d $(TEST_OBJ_DIR) ] ; then $(RM) $(TEST_OBJ_DIR) ; fi
	

ifeq ($(KERNEL),yes)
$(OBJ_DIR)/%.o: %.c
	$(CC) $(K_CFLAGS) -c $< -o $(OUTPUT_FLAG)$@ 
else
$(OBJ_DIR)/%.o: %.c
	$(CC) $(CFLAGS) -c $< -o $(OUTPUT_FLAG)$@  
endif

$(TEST_OBJ_DIR)/%.o: test/%.c
	$(CC) $(CFLAGS) -c $< -o $(OUTPUT_FLAG)$@ 
